commit_id,date,message
9c6ab1bc280ef0947528c948db7f113cbfa8a1ab,2011-06-24 15:21:56+01:00,Fixing bug #798261
1cb59504db2735f6f56892d76b50d64cd45de8b3,2011-06-27 14:09:52+01:00,Fixing bug #798262
5d23ba259811c2f05d3fcb1296051b003bcf4ef3,2011-06-27 16:34:28-07:00,"Merging dan wendlandt's bugfixes for Bug #800466 and improvements that enable Quantum to seamlessly
run on KVM!


removed:
  quantum/plugins/openvswitch/agent/set_external_ids.sh
added:
  tools/batch_config.py
renamed:
  quantum/plugins/openvswitch/agent/install.sh => quantum/plugins/openvswitch/agent/xenserver_install.sh
modified:
  quantum/cli.py
  quantum/db/api.py
  quantum/plugins/openvswitch/README
  quantum/plugins/openvswitch/agent/ovs_quantum_agent.py
  quantum/plugins/openvswitch/ovs_db.py
  quantum/plugins/openvswitch/ovs_models.py
  quantum/plugins/openvswitch/ovs_quantum_plugin.ini
  quantum/plugins/openvswitch/ovs_quantum_plugin.py
pending merges:
  Dan Wendlandt 2011-06-27 fix pep8 introduced by trunk merge
    Dan Wendlandt 2011-06-27 [merge] merge
    Dan Wendlandt 2011-06-27 more pep8 goodness
    Dan Wendlandt 2011-06-25 refactor batch_config, allow multiple attaches with the empty string
    Dan Wendlandt 2011-06-21 [merge] merge and pep8 cleanup
    Dan Wendlandt 2011-06-21 add example to usage string for batch_config.py
    Dan Wendlandt 2011-06-21 Bug fixes and clean-up, including supporting libvirt"
76a71fc1de50540d01ccddfc50a172e3321abab4,2011-07-09 00:34:49+01:00,"Applying fix for bug #804237
from branch lp:~salvatore-orlando/quantum/bug804237"
3c009cbe75df9f5fdefbef98971dad00d45c7810,2011-07-22 08:04:35+01:00,"Merging branch lp:~salvatore-orlando/quantum/bug802892
Fixing bug #802892"
9793971bc2b6b2346fbf70aa5a57d490368c3c53,2011-07-22 13:13:48+01:00,"Apply fix for bug #797419
merging lp:~salvatore-orlando/quantum/bug797419"
2299a05c105d2e60f4ff7cb107a72f096ac6eede,2011-07-29 17:36:35+01:00,"Apply fix for bug #814517
merging lp:~tylesmit/quantum/quantum-bug-814517"
602beba9bb81e9c44a3b497049aeb965ac546862,2011-07-29 17:39:12+01:00,"Apply fix for bug #814012
Merging lp:~danwent/quantum/bug814012"
431d319c26c7b3907e14e325aa36228843301617,2011-07-29 17:41:37+01:00,"Apply fix for bug #817813
Merging lp:~danwent/quantum/bug817813"
4f50b13b36e083a0b0c01fed74f7ac68ca6b52a7,2011-08-03 15:45:48+01:00,"Applying fix for bug #814518
Merging from lp:~salvatore-orlando/quantum/bug814518"
5c9789307948bb9af2dce8ed7ef09e2b60fca006,2011-08-08 17:35:16-07:00,"Merging changes addressing Bug # 802772. Thanks lp:danwent !

Description of change:

combining with other work to make the tests run green, this cleans up the tests for the OVS plugin"
2a89b0996d24decb9488a0ccd40ab7d275a2dba2,2011-08-10 15:47:11-04:00,lp Bug#824145 : Adding a setup script for quantum.
f3627a2fd74edd7bd485c00636352f26975edabc,2011-08-17 23:04:00+01:00,"Merging lp:~asomya/quantum/lp824145
Fix for Bug#824145 : Adding a setup script for quantum"
b4ce107e8cb241a7e05c79793a7b8ebf675461f5,2011-08-22 15:16:24+01:00,"Merging lp:~raxnetworking/quantum/bug827272

Fix for bug #827272 - collection actions for PUT and DELETE methods on resource extension routes ..."
5effeb7d2402ed432a6a6cd285607b301e52a4e3,2011-08-24 21:03:10+01:00,"Merging lp:~asomya/quantum/lp833163
Fix for Bug #833163: Pep8 violations in recent packaging changes that were merged into trunk (Critical)


Thanks Arvind!"
d5086c8b7985087847e762127a3b835ad4ca0c33,2011-08-25 10:43:36+01:00,"Merging lp:~salvatore-orlando/quantum/quantum-api-alignment

Bug #813433: Align API implementation with specifcation (Critical)
Bug #821628: Getting network details is failing 	(Undecided)
Bug #823841: Remove constraint on network names 	(Medium)
Blueprint: Quantum API v1.0 Implementation (Essential)"
f1b68c543408c7ce67dc8275be4841344ca77a12,2011-08-26 10:21:05+01:00,"Merging lp:~danwent/quantum/lp834491
Fixing Bug #834491: api alignment merge broke ovs plugin 	(Critical)"
b3263d371b65682a0a49aa58123927eddd70c96d,2011-08-30 17:30:15+01:00,"Merging lp:~salvatore-orlando/quantum/bug834449

Fix for Bug #834449"
e45508525633ebfdcf8870819276681dd409c233,2011-08-30 17:37:12+01:00,"Test on param_value changes as follows:

            # If the parameter wasn't found and it was required, return 400
            if param_value is None and param['required']:
                msg = (""Failed to parse request. "" +
                       ""Parameter: "" + param_name + "" not specified"")
                for line in msg.split('\n'):
                    LOG.error(line)
                raise exc.HTTPBadRequest(msg)"
f9a39018eb9215b5ec00da53fb332a3e58c1225c,2011-10-27 14:47:10-07:00,"bug #863635: remove vestigial cheetah import from bin/cli

Change-Id: I8d7d8dcf11f4e9b6748d6714b82684ac2ab4966d"
8a584f4417006928c06f49b621fc841e1832e892,2011-11-08 20:04:29-08:00,"Bug #875995: Quantum README fixes

Fix the most obvious issues with the Quantum README and add pointers to
external documentation resources.

In a future commit, we plan to remove most of the content in the README
and leave it just as references to external documentation.  However,
this change requires us to be able to support multiple version of our
external documentation (not yet possible) and have a good location for
developer documentation.

Change-Id: I57d7f99f070d17564b7a5fdcef8ae8ad2a6575a6"
3760868eb0953384e67a43b084cef72c321fa051,2011-03-11 20:21:25-05:00,"Fix for Bug #888820 - pip-requires file support for plugins

Change-Id: I6e0833ec0c875ec38db419a88fd6c2db02142f08"
d2bb51ca2529ef1ce8f8ffa412ac76778e6fd829,2011-11-16 10:07:03-08:00,"bug #891267 : for XS, grab iface-id from XAPI directly if needed.

The version of OVS that ships with XenServer by default does not include
the script to automatically sync the XAPI other_config:nicira-iface-id
field of a VIF with the external_ids:iface-id in the OVS interfaces table.
Thus, make the agent grab the value directly from XAPI if iface-id is
not already populated.

Change-Id: Id01d9da1761016bcd983ad06621c62e94b2445c1"
fd73a5019eaeb1029d40acd310b12f3948df4068,2011-11-28 16:56:29-08:00,"bug #891246: Fix paths in agent Makefile

Change-Id: I7093ca14eaf45986fcc50e914f9ccf8fa868fb07"
1a048e944e6b0fc41948db9ac971d0acdb26ea70,2011-12-11 07:12:06+00:00,"Merge ""bug #891246: Fix paths in agent Makefile"""
6f697a341e7e37fee9c136fd6ffcd510c79357bf,2011-12-14 00:33:37+00:00,"Bug #890028

Change run_tests.sh for running pep8/pylint validation only
(also adds .pylintrc file)

Resubmitting this time making sure we run pylint for Quantum!
Also run just with -l for total number of messages
Run with -l -v for detailed pylint messages

Change-Id: I593c8aed4e0e6b06204c6c4308934da198778fd6"
56974c425da12ac0763063d49536c3eaa9a72f4c,2011-12-14 00:54:21+00:00,"Merge ""Bug #890028"""
4572e6500ace4996f63fb12f09808346e87f9551,2012-01-04 20:12:31+08:00,"PEP8 quantum cleanup

Fixes bug #911663

The None, True, and False values are singletons.

All variable *comparisons* to singletons should use 'is' or 'is not'.
All variable *evaluations* to boolean should use 'if' or 'if not'.
All Object type comparisons should use isinstance()
instead of comparing types directly.

Change-Id: Id5c797d3339d0d7015bac386088133540f0c0c9e"
a5f97ccc3b2f055554d8b9476f5299637a9266d1,2012-02-26 13:30:25+09:00,"plugin: introduce ryu plugin

blueprint ovs-driver-extention
This patch implements the blueprint ovs-driver-extention
https://blueprints.launchpad.net/quantum/+spec/ovs-driver-extension

This patch factors out ovs common logic from ovs plugin into ovscommon
and adds Ryu NOS plugin.
This patch enhances ovs plugin for generic OVS controller support and

This patch is to add ofp controller support to OVS.
Store ofp controller address in ovs quantum data base.
- nova firewall_driver
- nova linuxnet_interface_driver

There may be ports unmanaged by nova/quantum. Those ports are used
to connect vm to outside of physical machine. They needs special care.

---
Changes 12 -> 13:
- rebased to 543e150d6dc9144ebcc588b7d2bd66374a107730
  changed files are only MANIFEST.in, setup.py, tools/pip-requres

Changes 11 -> 12:
- ryu agent
  eliminated from quantum.common import exceptions as exc
- ryu.db.api
  eliminated ofp_has_servers
- ryu.nova
  eliminated from quantum.plugins.ryu.nova import ovs_utils
  and eliminate ovs_utils

Chnages 10 -> 11:
- rebased to a945d1a30478c644d307c77a8a85f3a08e5a834e
- more Maru's review
- setup.py: fix setup() argument
  This isn't directly related to ryu plugin though
- improve fake ini file when unit test
  remove fake ini file after unit tests.
  use StringIO when no file is required.
- LOG: don't use %

Chnages 8 -> 9 -> 10:
- minor fixes: forgot to commit some hunks

Chnages 7 -> 8:
- rebased to d6bf2b76162ba806b2ad1f636f6273e47e03a117
- catch up d6bf2b76162ba806b2ad1f636f6273e47e03a117 change
  introduced bin/quantum_ryu_agent
- addressed Maru's review
  - avoid custom patching, use mock for test
    and added mox and mock to pip-requires
  - more pep8
  - avoid \ for line continuation
  - avoid single char variables
  - db.api: first() -> one()
  - utilize implicit conversion
    var is not None -> var
  - and more...

Changes 6 -> 7:
- update comment in ryu/run_tests.py
- make unit tests pass without ryu installed
  i.e.
  PLUGIN_DIR=quantum/plugins/ryu/ ./run_tests.sh
  works now

Chages 5 -> 6:
- remove comment

Change 4 -> 5:
- eliminate relative imports
- copyright
- doc string
- naming (s/CONF_FILE/conf_file/g)
- add "" check to ryu/nova/ovs_utils
- ryu/nova/linux_net: comment
- ryu agent: eliminated unused methods
- updated ryu/README: add http://www.osrg.net/ryu/using_with_openstack.html
- added unit tests

Changes 3 -> 4:
- reflected Dan's review
- on-OVS in ryu.ini
- update @author
- some naming

Changes 2 -> 3:
- rebased to 04d144ae0b2ad5618847d1784cea48a08d53a46a
- abandoned to share code and duplicated codes from openvswitch plugin
  for ovs plugin stability.
- dropped setup_ryu.sh and added README
- update nova driver to catch up upstream change (gflags -> cfg)

Changes 1 -> 2:
- unbreak openvswtich unit test
- MANIFEST.in

Changes 3 -> new 1:
- rebased to 1eb3c693b5f6f3f301047100c36c7915434f8be7
- factor out common loginc from openvswitch plugin into ovscommon
- Introduced a new independent ryu plugin
- try new review due to the previous effort was marked abandoned.
  > https://review.openstack.org/#change,3055
  > Change-Id: I17801a7a74d4087838a8a26c1b1f97f28c2dcef3

Changes:
- rebased to 9c5c2caef13fa58234987527ab6caff829a37050
- some clean ups

Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>
Change-Id: Ia9fe87525cebccc87b7c18a533f48607272cd97f"
7ad5d9b093ae4bc8bf132d0ddc422a26749ca057,2012-02-28 22:31:36-08:00,"Introducing the tenant owenrship checks in the Cisco plugin, changes are
almost identical to those in Bug#942713

Change-Id: Ia320116e73db72090d925796bb2c832f31f878de"
f614a7ddf57a2a4c30d9410671622caca6f4e434,2012-03-07 10:27:45-08:00,"Bug #949261 Removing nova drivers for Linux Bridge Plugin

These have been added to nova, so they need not be in the Quantum
code base any more.

Change-Id: Ibbd88792bfb0f58b2d9d347298964bf0b77baa95"
189b89a9c87b1eae9f55e5b8c98cf907d3acd61d,2012-03-12 14:54:59+08:00,"check connection in Listener. refer to Bug #943031

Change-Id: I5a0c975ab7998627a213ac4c69c037e9e2d95bfa"
9db5d73e31131ede1162d3a743cef50546f7b0cb,2012-03-12 19:26:26+00:00,"Merge ""Bug #949261 Removing nova drivers for Linux Bridge Plugin"""
e2b1b4a67c517e23d09ab0f198cc4fdfad3d82bd,2012-03-14 16:51:39+00:00,"Merge ""check connection in Listener. refer to Bug #943031"""
b94b97cbfab1482d8372fc56eacf0c7d654d5645,2012-03-15 22:16:39-07:00,"Bug #956559
VIF driver and scheduler for UCS plugin are broken since the flag
configuration mechanism in nova is changed. Fixing that and also
fixing some property names, along changes to how the quantum client
code is invoked.

Change-Id: I757cc149f08673ce24d35ee0bfffae8e5b1a4afc"
c4a59c1af8136ab44e04940b65061af280bfb246,2012-05-09 11:54:22-07:00,"Bug #994758

Work around this bug by installing the sqlalchemy from pip installer.
(fix)

Change-Id: I464080e433b4cad71da4510fb95dd5f902da0616"
50c02660b2ce5fd48798e68ec41fc9962c741537,2012-05-14 14:45:56-07:00,"Include AUTHORS in release package.

Fixes Bug #976267.

Include AUTHORS file in release package. The file is generated
automatically from git. Handle different combination for mailmap
records. Include test case to verify this fix.

* MANIFEST.in
  Include AUTHORS file in release package.

* .gitignore
  Add AUTHORS file.

* quantum/openstack/common/setup.py
  generate_authors(): New method to create AUTHORS file. If
  AUTHORS.in file exists, append it's content to AUTHORS file.
  parse_mailmap(): Handle all mailmap combination while parsing.

* setup.py
  Import the new method.
  Generate AUTHORS file before creating the package.

* quantum/tests/unit/test_setup.py
  New test script to verify different combination of records
  in mailmap file.

Change-Id: I220e8a20c96d37df3fa2ba0424e8372496e67895"
8713c4972dff08405930d675d822a018a5898790,2012-05-25 15:20:55-07:00,"Bug #1004584

When running ovs_quantum_agent in tunneling mode and a new tunnel_ip is added while
an agent is running the following exception below occurs. This causes the agent to
no longer function since it becomes caught in a loop.

ERROR:__main__:Main-loop Exception:
Traceback (most recent call last):
  File ""ovs_quantum_agent.py"", line 583, in daemon_loop
    self.manage_tunnels(tunnel_ips, old_tunnel_ips, db)
  File ""ovs_quantum_agent.py"", line 550, in manage_tunnels
    self.add_tun_br_flows_for_local_vlan(lv_obj)
AttributeError: 'OVSQuantumTunnelAgent' object has no attribute 'add_tun_br_flows_for_local_vlan'

Change-Id: Id03dc4a12a0114c8597cb90f4eabcdd3dc9b3f5c"
7d2380316b89b095674f4f32cd2e142db2e2e4fa,2012-05-29 23:02:28+00:00,"Merge ""Bug #1004584"""
76b2d851af70adc52f53241e8bc864674ce9cfba,2012-05-30 01:28:26-07:00,"bug #1006281

Removing extra switchport line for NX-OS snippet.

Change-Id: Ib3530af9aa885a719cb712554d05e7d70834186a"
93ee2838a2937e346e78c2e3ee21f5fed478d66f,2012-05-31 07:51:25+08:00,"Remove the reference to non existing exception by linuxbridgeplugin.

Bug #1006221

According to plugin api of QuantumPluginBase, unplug_interface
should only raise exception.NetworkNotFound and exception.PortNotFound.
To unplug a non-attached port should not raise Exception.
After this modification, to unplug an non-attached port will have no impact.
In addition, I remove the 'network = db.network_get(net_id)' since
 'db.validate_port_ownership(tenant_id, net_id, port_id)' statement has taken
care of the check.

patch 2: split test case to test it exclusively compared to patch 1.
patch 3: remove added test statement in previous test case

Change-Id: I437c3f13fa7a81aeabcdfca7ba03e94a0a7aa32b"
5c0fc495ffcb0f40294f39f3706648484cf00be0,2012-05-31 02:39:29-04:00,"Fix linux bridge section name
Bug #1006684

Change-Id: Ic7a97179d6fbb90f8c7f544a5725e1ff56fd9653"
9895ac62c0ca73e9bcfa57b8609d21fb93129943,2012-06-01 12:18:40-03:00,"Bug #1002605

update webob to be version 1.2 or above

It's running without any issue with 1.2, the exception problem was caused
by WebTest. We should use at least version 1.3.3 (supplied by Ubuntu 12.04 and Debian Wheezy)

Version to WebTest==1.3.3

Change-Id: Ia8ef543e32ae46f503dd52e93bed4290d077c286"
6cdd9538f4633abf61e4c8d44d9c7a3098e15b2f,2012-06-04 15:18:29+08:00,"Register enable_tunneling as bool opt.

Bug #1008346

Register enable_tunneling as bool opt, and add test cases.

Change-Id: Ibacf18752430d5e0ed1ab9c17f5370e4fd63ede2"
0324ea3e63140428918b3192fd83f7bbacf8d9f5,2012-06-04 14:04:56+00:00,"Merge ""Fix linux bridge section name Bug #1006684"""
8894997fd059661813b995c6a3f408250af57baa,2012-06-04 16:09:40-03:00,"Bug #1007153

XS should not have the centos repo enabled by quantum this can break the system, also is possible to get the sqlalchemy from epel and avoid unneeded packages on the system.

Using epel rpm and leave it disabled after use

Change-Id: If6673e59afc545e51df3625d8259ec3fca9aaefb"
cb2d3487d7accb2ff1598ecd88486ab17fda06ba,2012-06-06 19:09:17+00:00,"Merge ""Bug #1007153"""
268040c3365aacef4e53bb7795ae598dd98bb77f,2012-06-07 16:27:11+00:00,"Merge ""Bug #1002605"""
dee8bd1a107da26b528cb4350f009cd8d31028aa,2012-06-08 09:54:48+08:00,"Remove unused imports

Fixes bug #1010276

Removed unused imports found by:
find . -type f -name ""*py"" -exec pylint -r n {} \; | grep -E ""Unused imp|^\*""

Change-Id: Ie2ca545ecfaadd033652554c9e59d6a83d44ed09"
56d6f9ce860904c178ff63ab335185030b9175a5,2012-06-11 12:28:04+05:18,"Binaries should report versions.

Bug #1004966.

Added the version_string() and removed the extra '%' for the quantum-server binary.

Change-Id: Ic1f3e2eb9a742bdfb63df6f901e579349f04f3ec"
0230e96196baf4cfd4cb7f556539fe6758367176,2012-06-13 09:06:47-03:00,"Bug #1000406 - Return value of shell commands is not checked by plugins

Added an utils library for agents and also changed agents to use
this library.

Changed to keep 2.4 compatibility

Change-Id: Ib4fc0a8dcbfc4b79a0b0e61e1fc1f24ec5da4d46"
44f66c79d225b651335b2c4c416d1d7ce5751527,2012-06-13 10:41:36-07:00,"API v2: mprove validation of post/put, rename few attributes

bug #1012438

Additional work for bp v2-api-melange-integration

- rename few attributes:
  op_state -> status
  additional_routes -> additional_host_routes
  prefix -> cidr

- expand request body validation to indicate whether fields can be
specified during create and or update.
- add test cases to validate defaults, and input validation.

- update db_base_plugin_v2 to generate gateway_ip for subnet and mac
for port when unspecified.

- validate that tenant-id is only specified in req by admin users

- automatically set tenant-id based on request.context.tenant_id if needed

- enable port tests in test_db_plugin.py

Change-Id: If7f5101e4974a6ef93ff8a1d945f8642dd21b16e"
0311490b82479ef1e0d25350a17fe7a254e7a1c2,2012-06-14 15:19:14+08:00,"Remove unused functions in common/utils.py

Fixes bug #1013017

Delete functions int_from_bool_as_string and bool_from_string.

Change-Id: I5e838c1659234b885429ac090db4aa49e2f90645"
0d3cfea2e193a17afbf65c765dabbbb5cf18fa9c,2012-06-14 16:25:52+08:00,"Use openstack.common.exception

Fixes bug #1013040

1. Edit openstack-common.conf and import openstack.common.exception
2. Remove redundant code

Change-Id: Ia440422e283f8e6796d9a1f720d73b3bcf2f981e"
7b9a0b714736711acdb128b00e8e2f8aea7c41e4,2012-06-14 16:35:56+05:18,"Cisco cli cannot find argument action_prefix

Bug #1012502

Removed use of argument action_prefix for Client. Also, made HOST, PORT and USE_SSL global.
Signed-off-by: Harsh Prasad <prasad.tanay@gmail.com>

Change-Id: I93037b34fca89786778a2dcd8a3afc80df5687f8"
2fcb3ecacfcbaec7c190b50290cc9434c206d4e0,2012-06-16 15:38:10-03:00,"Bug #1013967 - Quantum is breaking on tests with pep 1.3

Fixing files

93/93 files fixed

Change-Id: Ia30f2e2253806fa5f447d44208d13d2c0beba9cd"
dd0fe18690dfadec6dcc1c9161498db60b053083,2012-06-18 14:06:24+05:18,"removed ""runthis"" and other unused functions from utils.py

Fixes Bug #1012234

Removed all unused functions and imports from common/utils.py.

Patch set 2: Submitted same code by mistake
Patch set 3: removed commented code but inappropriate commit msg.
Patch set 4: removed commented code with appropriate commit msg. Removed pep8 changes for ucs plugin.

Change-Id: I0ec33be127ef0389685a378c6f8d39ce5cbdb58c"
f7ccaac6f09cf890d51f8974ecf6714afea8c41b,2012-06-19 04:56:34-04:00,"Unit test and Readme changes related to cisco plugin.

Change-Id: Ica6db500a2ec8a895cb90756ca9ff304faa16519

Unit test and Readme changes related to cisco plugin.

Remove additional space in the Readme file

Remove file inadverntently checked in

Bug #1015410

Change-Id: I273255ff475b1ca6e80409fbf7f8c8571b3c456c"
a79b1c34258616eb25bd77e4ec5b253c32d90fa3,2012-06-21 20:13:15+08:00,"Reorder imports by full module path

Fixes bug #1014765

Change-Id: I849d73fc756b830b78492a6ed0e8cf2d32fde8cd"
7841b681f123e3b636d7ee6b5301de6358871c04,2012-06-25 22:27:22-07:00,"Fixing pep8 warning messages
Bug #1017805

Change-Id: I3417215a7a068141b69608e0dc5abaf220ac105d"
163d15b383ccb72ca174f71aeacf448229791849,2012-06-26 17:31:27+01:00,"Add simple file loggin to ovs_quantum_agent.

Default behaviour is retained. Fix bug #1016232

Change-Id: If11244d48a5c966bbbf8786e3e9f42d205a70164"
8a5c0bbda5d2e0074b4c78a18e685f11eeefac06,2012-06-26 15:27:23-03:00,"Bug #1012418 - quantum agent for OVS does not install properly on Xen XCP

This change added the feature to package and install the ovs-quantum-agent inside XS and XCP,
added an option on Makefile to gen and install using python2.6 ( by default it will use 2.4 )

Change-Id: I8860d7dcb7e7b74125784cb0f33c6ca03b37702b"
6edab9de8183e92d15e09d5d923fe9995695eef2,2012-06-26 19:51:14+00:00,"Merge ""Bug #1012418 - quantum agent for OVS does not install properly on Xen XCP"""
4ac32079279347c454f5d9fe22a21dfcbf3ab64f,2012-06-30 09:28:53+05:18,"Cisco's unplug_iface refers to non existing exception

Bug #1006226

An extra exception,InvalidDetach has been added to cisco_exception.py and
unplug_iface has been redirected to this exception

Change-Id: I5d1e4070fd0cb60a973e55e5645509aef58e8083"
b99dde80e2cb04943d6bf2d17e70c1c976d90da8,2012-07-03 19:27:40+01:00,"Add 'allocation_pools' to Quantum v2 API subnets.

This changeset adds a new parameter, 'allocation_pools' to the 'subnet'
resource of the Quantum v2 API.
Allows for creating and validation of subnets with multiple allocation pools.
This commit only deals with POST verb (subnet creation).
PUT verb (subnet update) will be dealt with in a subsequent commit.

This is the first commit for fixing bug #1016308

Change-Id: Ic356dcb5dcfa46af8ecc7e598529881f8bcbbeed"
a74b3a55ac6d239a04bb6cfe3ba0e1ad825450bf,2012-07-13 19:03:53-04:00,"ovs-agent exception non-existent ports

Bug #1019491

Change-Id: Ica3aa3f6c81e4fd062b752867487c89515fb9446"
659d0ba03a076bdacc141069ee4837ac5bc1ccc8,2012-07-18 17:09:22-04:00,"Provide way to specify id in models_v2

Bug #1025127

Change-Id: Ie4112b841c1e42408cdb539c2b87446c596e92ba"
5fcf6ccd952f74d77f6735831c778d33dfcd6136,2012-07-19 18:46:19+08:00,"fix bug lp:1025526,update iniparser.py to accept  empty value.

also,this patch turn off pep8 E125 check,this for now seems to
be unnecessary,it check continuous line split.and update the
latest openstack-common https://review.openstack.org/#/c/9201
which has fix pep8 1.3 issue except for E125 check.

Change-Id: I86e6a3add56a0a2941031a1248f1696667ac56b8"
f43b1cede93bca9acfa493c7f3c83ff5ab961587,2012-07-24 02:35:12-04:00,"Update openstack-common files.

The RPC support requires that the fanout_cast messages enable
the application to set the topic. This was fixed in
https://review.openstack.org/#/c/10125/.

In addition to this the jsonutils.py was updated.

Change-Id: I85b5a3a74f129746528910d12acdd00db39d8626"
ef6af3e3d2da3e1483b201b98b06c4555e90f6e7,2012-07-25 13:35:28-04:00,"Update openvswitch tunnel unittest

Bug #1029024

Change-Id: Ie37ef0c3355e86f504fa71417921bb828b40e347"
82187a476e000733a01abdb6f7399cf56500ca7b,2012-08-09 22:48:38+09:00,"dhcp-agent: Ryu plugin support for dhcp agent

This patch adds Ryu support to dhcp-agent.
fixes bug 1030830
Ryu devstack support is available at https://review.openstack.org/#/c/10117/

Change-Id: I3f5fbe8600b4b674834e317e158bac1856b0349c
Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>"
2043c8d357f604980db96f2828b4ed2f816c421a,2012-08-12 14:14:07-07:00,"Make dhcp agent configurable for namespace

Bug #1035769

Change-Id: I9f0d48a73f059a4985d629c7f0209675f5b01bec"
78b1b6b3090392a48629f3c661623a283adebdc0,2012-08-14 07:20:26+08:00,"convert query string according to attr map.

Bug #1035774

Change-Id: I162239ab2baa82636d270689ed3acd0cb6c336d4"
96827953beba575a12acde5377adba95de00690a,2012-08-14 12:28:54-04:00,"Convert DHCP from polling to RPC

blueprint non-polling-dhcp-impl

This requires a change to devstack/stack.sh.
See https://review.openstack.org/#/c/11278/ for the required changes.

Change-Id: I1ea22c8e1b80e630bcb83f27a31aaeef482aff6c"
8e2812eeaafb9f3a7e4142f1febe8ab855a9e596,2012-08-19 18:25:04-07:00,"Fixing unit test failures in Cisco plugin

Bug #1038565

The tests for bulk resource creation failure were failing since the bulk
API calls were not getting relayed correctly to the virt_phy_sw.py, that
has been fixed
There tests for the network_multi_blade_v2.py were failing since DB
initialization order was incorrect.
The tests in test_api_v2.py were failing since the plugin instance was
not being reset for each test.

Change-Id: I449bd8a61c1f61f98a97acf489574624fe309caa"
0b4cecf68296a1f5acdde933c16c7bccfabceb34,2012-08-27 09:36:58-07:00,"Execute unit tests for Cisco plugin with Quantum tests

Bug #1041917

On account of the new requirement to run plugin-specific tests also
along with the Quantum tests, changes are being made to
incorporate the Cisco plugin unit tests into the Quantum unit test
suite. Earlier unit tests have been moved and modified.

Change-Id: I099bcaf0b2ca2f7ed7d25176dfaa75966b90dd71"
c099e06a9a0b1aea900d65d8df23305f32e3d7cc,2012-08-30 21:24:11-04:00,"Implementation of 2nd phase of provider extension for openswitch

Enhances openvswitch plugin to support flat networks and VLANs on
multiple physical networks via the provider extension. Implements
blueprint provider-networks.

See http://wiki.openstack.org/ConfigureOpenvswitch for
configuration and usage details.

A devstack patch to support the updated openvswitch configuration
variables is at https://review.openstack.org/#/c/11418/.

Change-Id: Ic86b6f3b2e354c7d60bc2c330b334c23d349bc29"
75e2dfffaf02dd8f1b85b510e58d2f3719d97f19,2012-09-05 22:43:22-07:00,"Make sure floating IPs  + gateways must be on external nets

bug #1042030

- adds admin-writable, world-readable router:external attribute to
the network object if L3 extension is loaded.
- prevents floating ips from being created unless network is external
- shortens L3 extensions alias from 'os-quantum-router' to 'router' to
make attribute extensions more readable.

WIP:
- Need to add policy logic so non-admin users can always see external
networks without requiring that these networks are shared (since VMs can
always create ports on shared networks, but provider may want to have
externals networks that VMs cannot directly plug into.

Random clean-up:
- prevent delete_network in plugins from implying it returns something
- modify extensions.py so that exceptions during calls to
get_extended_resources() will actually be logged if unexpected.
- unset executable bit on test_iptables_manager.py to make sure tox
actually runs it.

Change-Id: I5bbf063927b93458da7cb467d9ad5c92ebabbbf7"
88cd4f85047cb8844fd192f3c8d4b087b4085a1a,2012-09-07 21:42:01-04:00,"add local network type and use by default for tenant networks

Fixes bug 1045142.

This patch adds 'local' as a new value for provider:network_type,
supported by the openvswitch and linuxbridge plugins. Networks of this
type provide connectivity through a bridge for VMs and agents local to
the host, but no external connectivity. They do not require
provider:physical_network or provider:segmentation_id values. These
local networks are intended mainly to support single-box
zero-configuration testing (including quantum gating), but may have
other uses as well.

For openvswitch, the new OVS.tenant_network_type configuration
variable selects what type of networks are allocated as tenant
(i.e. non-provider) networks. It defaults to 'local', but must be
changed to 'vlan' or 'gre' for openvswitch tenant networks to have
external connectivity. The default value is intended to support
single-box zero-configuration testing without any need to allocate
physical network resources or configure bridges, and without requiring
the operating system to support OVS GRE tunneling. It can also be set
to 'none' to completely disable creation of tenant networks.

For linuxbridge, the new VLANS.tenant_network_type configuration
variable works similarly, with a value of 'vlan' supporting tenant
networks with external connectivity.

With either plugin, administrators can create provider local networks
by specifying ""--provider:network_type local"". Additionally, with
openvswitch, provider GRE networks can now be created by specifying
""--provider:network_type gre --provider:segmentation_id <tunnel-id>"".

A corresponding devstack patch is available at
https://review.openstack.org/#/c/12456/. With this patch, the
openvswitch and linuxbridge plugins are by default configured to
support only local networks. A set of shell variables, documented in
stack.sh, can be set in localrc to configure remote connectivity,
including bridges/interfaces available for provider networks.

Change-Id: I2812548326141d2212d04f34d5448fb974d298e0"
a7326a947bc0b30778e06acd772dd38bcb28d96d,2012-09-08 14:13:49-07:00,"Policies for external networks

Bug #1042030 , part 2

Also reworks model queries in order to allow plugins and extensions
to augment them as required through hooks.

Change-Id: Ice72fc6d3b1c613d596c037818ed66d7e9ed841d"
6606c6b288f6f92a9b8c865fcec01b841f9df7af,2012-09-09 07:55:52-07:00,"allow multiple l3-agents to run, each with one external gateway net

bug #1042028

Allows user to invoke L3-agent in a way that limits the agent to
implementing only routers associated with a particular external network.
Thus, it is possible to have a deployment with multiple external networks,
since you can run one agent per external network.

Also makes l3-agent pay attention to router admin_state_up field.

Change-Id: Ia79d29301530718bc381c8e5a9d197de9452bce2"
a49c0a8e45fa56aaf989793a95c2390456238030,2012-09-11 10:34:14+08:00,"Create .mailmap file

Fixes bug #1048903

Use .mailmap file to coalesce commits
by the same person using multiple names and/or email addresses

Change-Id: Ib702114da944ec9d117ab969cde0b29a89999467"
24c6e813203c74a1c5c42d4e0923ae1e37198033,2012-09-11 11:18:37+08:00,"Remove the exeception handler since it makes no sense.

Bug #1048906

Change-Id: Idd4d20bb066a73b790155a8886bceea94f19805c"
1fafffb8c261a739b9b07dff16f479db06bba03c,2012-09-11 14:50:13+08:00,"Exclude openstack-common from pep8 test

Fixes bug #1048962

Added ""openstack"" to PEP8_EXCLUDE in run_tests.sh

Change-Id: I5919c97681b1f037e231df7ddb449c2a16366128"
aa5ef1d44f9b5438f0b5b15814c2644690635ee0,2012-09-14 17:53:35-07:00,"Fix for failing network operations in Cisco plugin

Bug #1050545

This fixes the exceptions occurring in the virtual switch mode of the
Cisco plugin for create/delete/update network operations. The exceptions
were occurring on account of the recent changes in the OVS module to the
get_vlan and get_vlans methods, which were still being invoked here.
Test configuration has been changed to increase the code coverage to
catch such issues in the future. All changes are limited to the Cisco
plugin and related tests.

Change-Id: Id18473f7a9a2a22217a59b4f8b1541b4918e07e7"
f8850fb5e5cc17a4dc9cf3330d2b0d8284ff443d,2012-09-17 10:54:14-07:00,"README file changes for Cisco plugin

Bug #1052109

Moving the contents to wiki.

Change-Id: I4aef2d710a7a4c1567d8701954ae04ba33095686"
7725acb0f32be0a482ea1cd5d52b360e9c512bce,2012-09-18 10:36:12+08:00,"modify the wrong phy_brs into phys_brs.

Bug #1052281

Change-Id: I569e60aa1f8ab8313e5427bd16798cc6b4079a09"
643afefa0f3b2b5c5f1f7af2e0cb7f5e04daf790,2012-09-17 23:18:31-07:00,"Fix for DB error in the Cisco plugin

Bug #1052295

When the Cisco plugin is configured to support the L3 extension, the L3
DB model is not getting loaded correctly. Adding this import fixes that
issue.

Change-Id: I736bd2e767595088de8ebee929258a88f5cbd238"
abc129701d0271e7838285403a662ce872479c63,2012-09-19 23:28:55-07:00,"Fix for flat network creation in Cisco plugin

Bug #1053154

Checks for the validity of the VLAN ID needed to be performed. In cases where
segmentation ID is not greater than zero, the Nexus sub-plugin does not
need to be invoked for that network.

Change-Id: I813d569c0c3d26c08554bf3599633b700a98c739"
6bae24df4e6d5a339dc4259b8c996bf452d7be28,2012-09-20 21:11:24-04:00,"Fix OVS and LB plugins' VLAN allocation table synchronization

In both the openvswitch and linuxbridge plugins, if previous entries
for a physical network have been completely removed from the
network_vlan_ranges configuration variable, allocation table records
for unallocated VLANs on that physical network are now removed from
the DB at startup. The test_ovs_db and test_lb_db unit tests have also
been extended to cover this case. Fixes bug 1052289.

Test assertions that were added to the test_ovs_db unit test in
https://review.openstack.org/#/c/11388 have been added to the
test_lb_db unit test. Fixes bug 1045596.

Change-Id: I04e924603eaf0df717414c2aaa83fd203b791308"
28eb0bf5b3ca7f3e849c5781e82b5cf03ed7d95e,2012-09-26 12:17:09+08:00,"Add log setting options into quantum.conf.

Bug #1056584

This will improve the user experiences.

Change-Id: Iaafd4eeb4fc23c5473276b3cf0e5ccffe2150ec2"
4e5d904d2e9dc51971348fccb698d295affec96a,2012-09-26 16:55:33+08:00,"clean notification options in quantum.conf.

Bug #1056637

Change-Id: I9d9002d3dfbbfa94224bc6ed9dc1a7f5207fb563"
70e684fd90567cb257fc951942b3b04c5ce34702,2012-09-26 18:11:39+09:00,"Fix flag name for l3 agent external network id

Bug #1056720

Change-Id: I744da7e1584d5230a23c4fc8b6fc258814babfa9"
a385229da8c16586674162e606f159fb9f32c11d,2012-09-28 22:44:52+08:00,"Correct the error message in the Class NoNetworkAvailable

Bug #1052294

Change ""No virtual network is available."" to ""No tenant
network is available for allocation.""

Change-Id: I8e2b40df1afa46522666d51218b82a4deef2ff64"
f723e1a359ff8079356b05a945c7b82252f2cb42,2012-10-02 16:17:50+02:00,"Fix filters default value in get_networks

With that change, if get_networks() is called without fields set to
something, _filter_nets_l3 fails because it tries to call ""filters.get()""
where filters is None.

This fixes bug #1060047

Change-Id: Ia0787e7a278a3562af5409861762f067d71f2cf6
Signed-off-by: Julien Danjou <julien@danjou.info>"
47f05facefb02cdd604bb8e0ebd7d00fc739cdd1,2012-10-19 14:24:57-07:00,"IP subnet validation fixes

Fixes bug #1067959

Assure prefix length is included in CIDR definition.

Change-Id: I32bb3dd1e5bffb409b3adee03015e21cce71caea"
66e99dea67c16614da79bb2aef2235dac7949276,2012-10-23 22:42:56+08:00,"use object directly instead of the foreigh key to update master db object.

Bug #1064235

Change-Id: I74fe3e758681c40590de87c82fd093224d329f51"
90f60060ee3d8559a3ab3f50f49a9dcda7399d68,2012-10-24 16:13:09+08:00,"Delete the child object via setting the parent's attribute to None.

Bug #1070335

We should not operate the foreigh key attribute of parent attribute
directly.

Change-Id: I98dc8eae78fdf67f0e7189e73afba77c6affcc0e"
853a547331f874533a1096699814bed2f627bb5f,2012-10-25 12:00:00+02:00,"Notify about router and floating IP usages

This fixes the Quantum side of bug #1070009

Change-Id: I07c41814a3acfb2749d503fe1bc64ab7707535ee
Signed-off-by: Julien Danjou <julien@danjou.info>"
33b45e7dd43d4a94ef3a20a96c157e3b14616cc2,2012-10-26 03:28:59+00:00,"Make create_floatingip support transaction

Fixes bug #1064748
Also added unit test

Change-Id: I82b2031af0a87a92ace9a8b86f89772beaca5e8f"
951461412d42838d31c2029d2494dbf3e7e93f50,2012-10-29 13:05:48-07:00,"Support external network in probe-create.

Fixes bug #1070960

Change-Id: Ic0d3c56a26fe44359a772f40a7c7d92086a49a28"
cf54850d15b5ead0de2ffd536a2ecdbfed5f33ca,2012-10-27 06:53:44+00:00,"pin sqlalchemy to 0.7

The sqlalchemy package 0.8.0b1 released on October 30, 2012
removed SQLSoup

(http://docs.sqlalchemy.org/en/latest/changelog/migration_08.html#sqlsoup)

Ensure that the SqlSoup import is still supported. A number of quantum agents
make use of this code to access the database.

Fixes bug 1073555

Change-Id: I78b27716c6e3eb05d874314f0bc544a917fd5853"
c1c19b11792e8e220b11466051739ea5b4279a7a,2012-11-01 08:54:38+08:00,"Put gw_port into router dict result.

Bug #1069782

We put gw_port into router dict result so that client can get more
information for the result router.

Change-Id: I54cec8a71441a9370c7ba95767a92190bf1c9c21"
fa2a5c09c57f84cfc4e424c733c920f2004bcca8,2012-11-01 10:09:57+08:00,"Use openstack common log to do logging.

Bug #1073194

We use openstack common log to do logging. At the same time, we will use
quantum logger as our top logger, so that all sub loggers will be set
according to quantum.conf

Change-Id: I5adf72e6031ad437e05c3521864a83757b3e7887"
7de7b166382a4634ec5b0842cfb982ee83e94df3,2012-11-04 10:02:44-05:00,"Log loaded extension messages as INFO not WARNING.

Updates the log statement we use when an extension is loaded
to log as info instead of warn.

Fixes LP Bug #1074889.

Change-Id: Ibf5a8a38a1f37c55ca99e0e2209a48ba04d609ae"
3df328144e9a15797ab0dd8c45cf713c32f86d31,2012-11-05 14:36:13+08:00,"Drop lxml dependency

Fixes bug #1068290

Removed lxml from tools/pip-requires
Removed usused method _to_xml() in quantum.wsgi.XMLDictSerializer

Change-Id: I3410fd8645739abfd853f71efcbb354b58677b18"
f4c02899a1ea8ccd69278d7314be0b1409c8fa66,2012-11-05 15:24:39-05:00,"Update KillFilter to handle 'deleted' exe's.

Updates KillFilter so that it handles the case where the executable
linked to by /proc/PID/exe is updated or deleted.

Includes new test case with coverage for this fix as well.

Fixes LP Bug #1073768

Change-Id: If568693e0b491f8806ff0156701766929ca0b3e0"
5b00256b989f0a2a6d4d3de75b1f152faf87f7d4,2012-11-05 16:48:52-05:00,"Sync latest notifier changes from openstack-common

Updates Quantum with the latest changes from openstack-commons
notifier package:

    Rename rabbit_notifier to rpc_notifier.

    The previous rabbit_notifier module is generic and can be used
    for all RPC notifications.

    This commit moves the rabbit_notifier module to rpc_notifier and
    adds a new deprecated rabbit_notifier module which can be used for
    Grizzly so that users can have a chance to easily upgrade this
    config setting.

Also updates the agent code and config file to reflect this change
(and get unit tests to pass)

Fixes LP Bug #1075330.

Change-Id: If9a4f5fa27638b25a29b66dbfed757554358ff7c"
13a3486cda2d17b64ff90440d4acc305d7c6443e,2012-11-09 14:23:34+08:00,"Add indication when quantum server started.

Bug #1076834

Option values are printed in two phases due to our
system's starting way. Last print will print out all
option values included in all config files.

In the end when quantum server started, we have an
indication for it.

Change-Id: I4ed9952c94fe74ea946733dc3a94cb2bb2aba37c"
014e0b4f901c93cd4d4a671c09edc16a7d4994c1,2012-11-09 10:44:40-05:00,"Explicitly include versioninfo in tarball.

The most recent sync of openstack-common setup.py/version.py code
seems to have cause quantum/versioninfo to disappear from the tarball.
(see git commit d65bca8)

This updates MANIFEST.in to explicitly include that file and seems
to resolve the issue.

Fixes LP Bug #1077035.

Change-Id: I5fb395c15ea998da00b11e66947d1b1ea3665ea0"
4df4f7eec84eff7bdaebc651640eb7e95a3b1b77,2012-11-12 13:09:41+08:00,"Adds tests for attributes.is_attr_set

ATTR_NOT_SPECIFIED and None are singleton objects

When conducting ""is in"" against a list of objects, they are compared using
unequal unless they are the same object.
http://docs.python.org/2/reference/expressions.html#in

According to PEP8, they should be compared by their id not value
Therefore the is_attr_set logic has changed to:
    return not (attribute is None or attribute is ATTR_NOT_SPECIFIED)

Wrote unittests for is_attr_set

Change-Id: I2ebdd29564e5627b9e33b13a744948e8c9c0b9ce"
b4a0f659f678d80d562de9f57b2112a018fd4d45,2012-11-16 00:03:15+08:00,"Revert ""Put gw_port into router dict result.""

This reverts commit c1c19b11792e8e220b11466051739ea5b4279a7a.

Bug #1079206

Change-Id: Ia5fd84470779846749c00bb7dae7198055388347"
ce538eb8bcc732b19589739cf2d4cf7da2e277dc,2012-11-19 10:00:01+08:00,"Delete floating port and floatingip in the same transaction

Bug #1080516

Change-Id: Icb5b71e29af582cb0e381e22909f46b325063d71"
05383d1340aecd7192609a9197c249886d844a46,2012-11-21 08:13:26+08:00,"Fix context problem

On plugin side, we use normal API context if any to call RPC methods.
We use our plugin dispatcher to convert RPC context into quantum admin
context. After that the callback's functions have the first argument context
as normal quantum context.

On agent side, we use admin context without session property as its
RPC calling context. Call back context is default RPCCommonContext in
Openstack common modules.

This patch also fixes the problem in the following bug:

Bug #1077012

Change-Id: I913b48dcd84d275cd7de30ca990be00c243e63ea"
4bc07a55ff686deb3a3747150a8068ce161d3011,2012-11-20 10:07:29-05:00,"Move extension.py into quantum/api.

This change moves extensions.py out of the extensions module
and into the api module. This resolves an issue where the
following log WARNING message would occur each time the Quantum
API starts:

Did not find expected name ""Extensions"" in
/usr/lib/python2.7/site-packages/quantum/extensions/extensions.py

Fixes LP Bug #1074895.

Change-Id: Ia5ed206870551f9b33b74dcdc9d0503e447f298d"
99886025986b92aa3beb7666f5d9fc4851e6a591,2012-11-23 09:46:22+08:00,"Refactors quantum.api.v2.attributes.py

Logic changes were done for consistency across methods,
removal of redundant code and lower memory consumption.

Fixes bug #1082224

Change-Id: Ie09773d35325bec69ea82b3b59f812af5fa1c4d6"
081424cb3d8118993344a04b77a21d4fefef00db,2012-11-23 11:00:54+08:00,"Removes quantum.common.utils.str_uuid()

Replaced str_uuid() with openstack.common.uuidutils.generate_uuid()

Fixes bug #1082236

Change-Id: Ib09b070bfa1de4435c831d1d3c0fb0b0d12011bd"
2c116766994f4c97b4b9e04f8abcbd8cd1732859,2012-11-23 13:24:16+08:00,"Removes _validate_boolean()

Removed _validate_boolean function
Removed all type:boolean verifications

Fixes bug #1082256

Change-Id: I68883ff4dd727fa034d57876b46519d637156af6"
e597cbc7cac411ba8a3a9249e5fc5fc1f9f15040,2012-11-26 09:55:46+08:00,"Replaces uuid.uuid4 with uuidutils.generate_uuid()

Fixes bug #1082248

Change-Id: I1be4ae129382585cecc4346e1e712ee0ab03bab5"
5c64eb14db6d76d7ac7bf41c0c7c03aa90eea15d,2012-11-27 07:33:33+08:00,"Removes quantum.tests.test_api_v2._uuid()

Removed _uuid function
Defined an _uuid alias of openstack.common.uuidutils.generate_uuid

Fixes bug #1082255

Change-Id: I7d10ce3ade27eb4cdd533b5a77b9c405ad1dc174"
4dceb53a242a82b49df2777eeb8396395ada6761,2012-11-27 10:25:00+08:00,"Make sure we can update when there is no gateway port linked to it

Bug #1083387

Change-Id: I7e56d072a6e430ddde816781fe480c6028577c5f"
099885fbb8d439d23774dbca1c84cecb55ceb9ec,2012-11-29 13:10:01+08:00,"Completes coverage of quantum.agent.netns_cleanup.py

Added test cases
Fixed typos

Fixes bug #1084332

Change-Id: I86c2321dfe5f3f1ac4b8b570a6c76dbb1928bfb0"
2374688d5b43c0e5b373d2618ff16c6e1f144ad8,2012-11-29 13:37:46+08:00,"Completes coverage of quantum.agent.rpc.py

Added test cases

Fixes bug #1084381

Change-Id: I9179aac206befa6b0449814646639ed96a1eadbc"
52da6ef6333fa9685c1859afdcc3e4e1145a8fe5,2012-11-29 02:29:40-08:00,"Fixes Context exception in BigSwitch/FloodLight Plugin

Bug #1083389

Aligning with the changes in the patch: https://review.openstack.org/#/c/15726
to only use Quantum API context.

Change-Id: I5644ad59c34430a9d558c39bbc07f594609ebfbc"
ac81d9d345b233b6bf84e5b7ae48004cce153510,2012-11-29 16:33:40-08:00,"Fixes Rpc related exception in NVP plugin

The rpc changes from commit 05383d13 were not also made against
the nvp_plugin. Bug #1084803

Change-Id: Iac95065bda2f6b83e07c27045f374ab8690865ca"
58cb6ce04fd2a1935cf210ee2152dd18911e0f65,2012-12-01 01:20:38+09:00,"Completes coverage of quantum.agent.linux.utils

Renamed test_agent_utils to test_agent_linux_utils
Added test cases

Fixes bug #1084817

Change-Id: If0269a003bd8e1fc6f6ef3c622d7a015dadf50aa"
e4ee84f008405c85ed2700f275e4538ada099b69,2012-12-03 15:49:27+08:00,"Removes unused code in quantum.common

Removed boolize() in quantum.common.utils

Fixes bug #877120

Change-Id: Icb30b4200baf8743bbee6b4dd035c8b316c38533"
b836e71eb1d2136795817ead27e1d9fa0ce65f6e,2012-12-04 16:46:44+08:00,"l3 agent rpc

On one hand, we sync router data (including routers,
their gw ports, interfaces and floatingips) from l3_agent
to quantum server periodically if needed.

On the other hand, we notify l3 agent from quantum server when
we delete or update a router's stuff, such as floating IP,
interface and gwport and router itself.

blueprint rpc-for-l3-agent
bug #1080286

Change-Id: I60f3081975fc7164b22f9e9fa941e702a3f4c663"
7011f7f2a0495286f2180bae75608d800f5b0b38,2012-12-06 13:21:22+09:00,"Releasing resources of context manager functions if exceptions occur

The functions using decorator @contextlib.contextmanager in files below
has potential resorce leaks when exceptions occur.
 - quantum/tests/unit/test_policy.py
 - quantum/tests/unit/test_db_plugin.py
 - quantum/tests/unit/test_l3_plugin.py
 - quantum/tests/unit/test_extension_security_group.py

This patch let them releasing resources correctly.

Fixes bug #1083045

Change-Id: I66266b7afa4977537caabafc82d8c294730188ba"
4a6ae51eab09c1c38a52404fe816baad1c67376d,2012-12-09 15:41:27+08:00,"Support to reset dnsname_servers and host_routes to empty

Bug #1086232

Change-Id: Ia27170b206f755577c8607c5b27dc5cf57d19633"
a8c0c00069305092570e93ab85ccc2340d0be828,2012-12-12 15:10:22+09:00,"pluins/ryu: Fixes context exception in Ryu plugin

Bug 1089220
This is the Ryu counter part of
https://review.openstack.org/#/c/15726
Change-ID of I913b48dcd84d275cd7de30ca990be00c243e63ea,
changeset of 05383d1340aecd7192609a9197c249886d844a46

Ryu plugin also needs to be taught the update.

Change-Id: I52fbf36df6e0769a032a7602637cabd93796fe1c"
84d6be4253398dd9516c71788f526806cb217845,2012-12-12 15:17:40+09:00,"plugins/ryu: l3 agent rpc for Ryu plugin is broken

Bug 1089221
This is the Ryu counter part of
https://review.openstack.org/#/c/15619/
Change id of I60f3081975fc7164b22f9e9fa941e702a3f4c663
Change set of 36e71eb1d2136795817ead27e1d9fa0ce65f6e

Change-Id: I43878517a79bf47d42d0e71e8af59d11a4278280"
babe698caf195be6c0f8d4a61dc967007aaedac7,2012-12-13 12:50:10-08:00,"Fixed the unit tests using SQLite do not check foreign keys.

The foreign key constraints will be enabled for each SQLite
database connection.

By default the foreign key constraints are disabled in SQLite,
so some test cases failed after enabling the foreign key
constraints for unit tests. This fixings also fixed the failed
test cases because of the foreign key enforcement.

Fixes: bug #1021023
Change-Id: I89f0cbbd75bb685b50dfe6628116fa971c5e78cb"
bdcf00cfb1bc89c8475c0dc1f1c981d9ee78bcd1,2012-12-14 09:22:18+08:00,"Completes coverage of quantum.api.v2.resource

Moved current resource testcases to new test script
Created test cases

Fixes bug #1085456

Change-Id: I9ff5ba6a44c32ba4cf04b6a75ea7fd30fc769d2c"
21b41383a49fbd465eae1f1e69ceca48b7cab9ea,2012-12-14 11:11:34-05:00,"Add restproxy.ini to config_path in setup.py.

Fixes LP Bug #1090450

Change-Id: I4969cafba9f5650fa556d39885b58b2a52a85fe0"
9ca602edc465bbef57957a153044f1acfef84682,2012-12-14 17:40:00-08:00,"Fixed the security group port binding should be automatically
deleted when delete_port

Added the CASCADE setting for the security group port
binding database model.

Also removed unused variables and imports

Fixes: bug #1080887

Change-Id: Id1af121b6ee57b794cb515a0b0c26b9a6310fbc4"
5b2f47c3463f520609490b616d68ddab40d74570,2012-12-17 16:52:16+08:00,"Make patch-tun and patch-int configurable

Bug #1089777

Change-Id: Ib72d352374fb59029b6b0719a2d1254597f193ff"
1ad371422f35e238b4b40ed4ec744f9ac75f209d,2012-12-24 13:58:30+08:00,"Removes redundant code in quantum.api.v2.base.create()

Handles collections and one item in one routine by creating a items list

Fixes bug #1093390

Change-Id: I24b892ebff52889f17ed9ea8d17e8964e3de25f6"
5d41c5c817765bdea83eeff6656572504c7c1e84,2012-12-26 14:14:33+02:00,"Implementing string representation for model classes

We want to have meaningfull representation. This is
useful when we debug and want to see the actual
attributes of the object. The current __repr__
of those classes is the default python implementation
 and does not provide
information about the object attributes.
Solve Bug #1084231

Change-Id: I1ea5d741d2fd2da13712e0d51d2c73dfba4991cf
Solve the conflict below:
Conflicts:
	quantum/tests/unit/test_db_plugin.py"
f78b0f9b054ef4af992613c718df65e4aeb8ebea,2013-01-03 16:20:56+08:00,"Logging module cleanup

Replaced logging with openstack.common.log
Removed imports where logging is not used

Fixes bug #1095541

Change-Id: I5b03d9697dde3ef3520f67d1d8166f7af7689551"
30a54fe169485fdd0dbf1b7f011f9b2d4d9c8355,2013-01-04 00:28:20+08:00,"Upgrade WebOb to 1.2.3

The version of WebOb being used in OpenStack was more than
1 year old. This change updates to the latest stable release.

Upgrading WebOb resolves a version conflict between OpenStack
and Pecan, the web framework used by the Ceilometer team for
version 2 of the ceilometer API.

Refer to http://docs.webob.org/en/latest/news.html
for the list of changes between 1.0.8 and 1.2.3.

Fixes Bug #1092227

Change-Id: I07707607ae2067a567e11c347cddda9c7e6bcef7"
5f0aead4e4c42f16b0f32870bd7fa952d219945b,2013-01-07 10:14:29+08:00,"Fix the replacement placeholder in string

Bug #1096721

Change-Id: Ief6f410e4532772af3f9775b48ce92ac901f812d"
e0e5101b876f7754e13d7bd8e045438f0c966af2,2013-01-07 10:23:36+08:00,"change xxx_metadata_agent() into xxx_metadata_proxy()

Bug #1092047

Change-Id: Ic59da98105a7301697ecb5a6477f3c7fc3f8e86a"
972918a6438870c4d1578237688f26c12f2f659b,2013-01-07 13:06:51+08:00,"Add comment to indicate bridge names' length

Bug #1096652

Change-Id: Ic814b59da131fba488b728eb3b67864712cde141"
005251c3b88606013bc9526c0ef32b01e52b08c9,2013-01-07 12:17:09-08:00,"Undo change to require WebOb 1.2.3, instead, require only >=1.0.8

This allows ceilometer to use 1.2.3, without breaking devstack for
quantum in the mean time.

See bug #1092227

Change-Id: I1d1b4c0b6dbb917ddf785bdf7ce90be9beb6540c"
fab80263fa64fe0ce35a5bc183478f3f0e73b0fb,2013-01-09 12:20:50+09:00,"Fix database configuration of ryu-agent

Fixes bug #1097156

The database configuration was moved to the DB module.
This patch makes ryu-agent follow it.

Change-Id: Ib843132eb1a01769725dd89b1e1799c9d10790d3"
2b75d6be2cc3bdd0621a198619ee6e1c7a2ff90f,2013-01-11 08:55:02+08:00,"Fixes quantum.api.v2.base._filters to be more intuitive

Converts values in one place and sets dictonary according to the return value

Fixes bug #1092977

Change-Id: I05dd9b24a8ab20f8c302c22f5bdda2a80ec90e19"
9db691728e751a5605907617f570cbf0ffad7e99,2013-01-11 09:10:01+08:00,"Optimize if/else logic in quantum.api.v2.base.prepare_request_body()

Removed redundant checkups of variables

Fixes bug #1096932

Change-Id: Icdee0e946a77865928b942d3248e39e771af0656"
01f3b1f438a5a52fbc812a2c83e8d19e5fbbc928,2013-01-14 00:20:21+09:00,"Inform a client if Quantum provides port filtering feature

Part of blueprint vif-plugging-improvements

Quantum and Nova have duplicated functionality of packet filtering
such as security groups and anti spoofing filters.
By passing information whether Quantum supports the port filtering feature,
Nova VIF driver can skip its own packet filtering setup.

It is based on Daniel's advise in https://review.openstack.org/#/c/19436/

Change-Id: Ifd260cb61aa3990251510a4a3fe15454d8d584df"
d60f6efd7f70efba1ccd007d55b1fa740fb98c76,2013-01-14 12:26:36-05:00,"Name the securitygrouprules.direction enum.

Updates to the SecurityGroupRule model and migration so that we
explicitly name the securitygrouprules.direction enum. This fixes
'Postgresql ENUM type requires a name.' errors.

Fixes LP Bug #1099267.

Change-Id: Ia46fe8d4b0793caaabbfc71b7fa5f0cbb8c6d24b"
4970636e210dd3a7088a8f729df6fdff92c02fb7,2013-01-16 11:04:23+08:00,"Fix ATTR_NOT_SPECIFIED comparison errors

Fixes bug #1099663

Replaced equality operators used with ATTR_NOT_SPECIFIED to 'is' or 'is not'.
Used is_attr_set() where comparsion is done to None and ATTR_NOT_SPECIFIED.

Change-Id: I67c87051b46ca0518fa777cbb1c3e6141a533b61"
d8b0f10ec7a5e0726d1b09e84e6cc388d957ba03,2013-01-16 09:44:06-05:00,"Fix line endings from CRLF to LF.

Fixes bug #1100234

Change-Id: Idb28558547b69ed4ad64334651405dc70fa9ddb3"
cb3384fd673295ad83c3dbfad0de6e325827e4ae,2013-01-16 15:57:14-05:00,"Update WebOb version to >=1.2

The other projects have merged changes to accept
WebOb>=1.2 now, so update Quantum to use the same
version.

See bug #1092227 for details.

Change-Id: I0969752910b92209408d956f633ad2ccacc7fa46
Signed-off-by: Doug Hellmann <doug.hellmann@dreamhost.com>"
e2b9b0df3838cbd7cefcb3a714e285510238769a,2013-01-17 13:42:44+08:00,"Fixes inefficiency in quantum.api.v2.base._filters

Use iteritems() instead of getall() on request.GET

Fixes bug #1092995

Change-Id: Ic0b5e3d7c7b1ddd072d9fe918ea22a8e9aef9ee4"
e3ddd3452113331772c436430aa986d1940a0b7f,2013-01-17 13:43:37+08:00,"More unittests for quantum.api.v2.base

Added unittests for the below methods
* quantum.api.v2.base._fields()
* quantum.api.v2.base._filters()
* quantum.api.v2.base.create_resource()

Fixes bug #1092399

Change-Id: Icdddb3a201b4bc577378e78c7a7cd48486a2d57a"
c4004b6d97e995a8375affbb70cc5884da5214bc,2013-01-17 11:26:02+01:00,"Send notification on router interface create/delete

This fixes bug #1060985 for Quantum

Change-Id: I39d2d15340913dd0fad753c3e95fb74d329481a9
Signed-off-by: Julien Danjou <julien@danjou.info>"
fbca0acf9c457f00196e209c87ff7d42b5267f45,2013-01-21 17:06:09+08:00,"Completes unittest coverage of quantum.api.api_common

Fixes bug #1102245

Change-Id: I01c8a563440f56db19d33a743549d2d50f5b48ee"
a8da14c0fd3edb941b0dd4a2fa44c00a68a89798,2013-01-21 17:09:27+08:00,"Removes redundant code in quantum.api.api_common

Fixes bug #1102313

Change-Id: Ie321c48ae6d38f013e1ef8471df4d86b63b28931"
20314e0ba06588d3ac7855d1b4ae7f3c75cab1a1,2013-01-21 23:07:20-05:00,"Enhance wsgi to listen on ipv6 address

Check if the hostname is ipv6 and set the family appropriately.
Picked up the code snippet from glance to determine the address_family
per markmclain's comment
Picked up some code from nova as well to get the test case running
properly

Fixes LP# 1101341

Change-Id: I67166dc030e4ea0dd82888abfbc9db555747de27"
854d7d04e300bd12cd8bc8de10e53a9e5b951199,2013-01-23 21:43:46+08:00,"Fix all extension contract classes inherit from extensions.ExtensionDescriptor

Part of blueprint quantum-api-wadl
Fixes bug #1102927

Fixed classes to inherit from ExtensionDescriptor
Reordered methods in sync with parent

Change-Id: I40b3814a490d7da49d0ef075c3482cc104eb7a7c"
6f6499700a8ce682f9d0963180cbc389ac4acc85,2013-01-23 06:00:27-08:00,"LBaaS plugin returns unnecessary information for PING and TCP health monitors

Fixes Bug #1100749

Change-Id: Id1e22621b398786f3d6b670f53b6e23e7fb89786"
66b7faeb7e6d5d2d1c4f767541796067c0bb60c7,2013-01-24 05:29:11-08:00,"Improving code reuse with loadbalancer entity deletion

Fixes bug #1103988

Change-Id: I55df965a1592ecc5a76bf9f02d43e3aaa26c1980"
cb7dae08aee84d49537477d25a5798f515ff2321,2013-01-25 16:24:55+02:00,"Fix InvalidContentType can't be raised because of error in constructor

InvalidContentType exception class is defined two times:
in quantum.openstack.common.exception and quantum.common.exceptions
with two different signatures.
A lot of code like wsgi.Serializer.serialize() imports one of them but
attempts to use it with the signature of another one, which ends with
TypeError exception.

This change fixes the bug by removing the second definition of
InvalidContentType class and leaving only one which works correctly
with all code. Also adds unit tests for exceptions to prevent this and similar bugs.

Change-Id: I5d932d75ad184a0a6c6419190f2940bd47b7504e
Fixes: bug #1104090"
4510c3fb0742a4a00d1e15b0429a36d6fa476a85,2013-01-29 22:51:35+09:00,"Fix branch in db migration scripts

Fixes bug #1108781

Change-Id: Ia6cfcc4a1cc39136bad99be26f40aac9fa3e3e70"
07a0af5c97c09ff96e10f3e457d653a6bcfa09da,2013-01-31 09:58:52+08:00,"Remove redunant key list generation in Cisco plugin

Evaluates existance of key directly on dictionary.

Fixes bug #1110957

Change-Id: I9b46a991ab9c764d7451cc122d208e06778c1ee1"
642fe5505fd55543d24ff47ba493f7b37a7288ce,2013-01-31 11:42:47+02:00,"Adds support of TCP protocol for LBaaS VIPs.

Adds validation of supplied protocols for VIPs and Pools at API and DB levels.
Modifies the schema of the database to allow storing TCP VIPs.

Change-Id: Idab3139f280b5f0a16633974c05f88d70fb8d683
Fixes: bug #1100724"
4ab676fc4f98f2b67e7b1ae7dbed657d602a95a1,2013-02-01 10:14:54+08:00,"Fixes 'not in' operator usage

Fixes bug #1110058

Change-Id: I45c10097abfb929918925e7befb8ed6c36b1de1c"
40e76356dd50113936826833eddb3ce57fee8214,2013-02-01 16:57:06+09:00,"Improve data access method of ryu-agent

fixes bug #1110174

This patch implement rpc in ryu-agent, instead of accessing a
database directly.
Because it was not necessary to transmit information via database,
therefore the table is eliminated.

Also, I remove openflow controller stuff from a configuration file
of the Ryu plugin because it was not used anymore.

Change-Id: I5e261297c3f92c6a1ac5df229084176e84694e87"
35cb218adb9a370fa1013b6ef2593e9ef081461e,2013-02-01 17:40:35+02:00,"Resetting session persisnence for a VIP.

This change allows to reset session persistence, if it
was configured for a VIP. It's possible by passing None
value for session persistence through the REST API.

Change-Id: I8690850d0589065502a8eb774d51fe40851624f8
Fixes: bug #1109101"
a4c107684a9a7769f226e7520f64511b0cfe2b75,2013-02-05 17:26:39+02:00,"Use policy_file parameter in quantum.policy

quantum.policy depends on configuration parameter `policy_file'
that is defined in quantum.common.context.

Tests from tests/unit/test_policy.py fail without this import.

Fixes: bug #1116263
Change-Id: Iba4792acb0fb6b34b4ebc99fec7bc729cdb306da"
962aca526c0acdec249e84fe972f059098e1196f,2013-02-05 16:29:00+01:00,"Be smarter when figuring out broadcast address

In most cases, broadcast is set when IP is set, but sometimes
it can be ommitted. In those cases we should figure it out based
on CIDR, and not assume it.

Change-Id: Ia8c07898ddf0eb19f5d552a304d8f38915fc3560
Fixes: bug #1090621"
0c9b8205db18c6407f3e95d9a9c29236bc0ba0b4,2013-02-05 17:29:20-05:00,"Cisco plugin cleanup follow up commit

A commit was made by Alex Xu (https://review.openstack.org/#/c/20073) a day before the Cisco plugin
cleanup that led to some deleted files creeping back into the Cisco plugin. This commit backs out
the deleted files again.

Blueprint cisco-plugin-cleanup

Change-Id: Ibad452dc0497dad452a33d6f41c1785231cd5d5b"
7beec04415b96626534ee17cff7a130b1881b6ea,2013-02-05 18:08:45-05:00,"Allow tools/install_venv_common.py to be run from within the source directory.

(Copy latest update from oslo)

Not doing this raised exceptions when it tried importing modules
that didn't exist in the path.

Fixes LP# 1116269

Change-Id: I3e2ed3ac96b51ec89def911054720d11bbcd9407"
b2dc9e6bf996a3e607bfbcaf133968798210a54d,2013-02-06 13:22:53+02:00,"Register root_helper in test_debug_commands and test_dhcp_agent

root_helper variable currently must be introduced with a call
to register_root_helper, not with a simple assignment.

Change-Id: I3e72379925a994acfb6defb24820ab63eab43957
Fixes: bug #1117240"
f3b17e1d41ebb9c81edd02c5ead860e03305bc5e,2013-02-07 19:16:48+09:00,"Fix import error in ryu-agent

Fixes bug #1114183

Change-Id: I7f8c3507840f0eb6190b509ae2b7b35bd03c74e1"
be77455856fcc88300b0ad5a36211ebd37f0e453,2013-02-09 01:31:47-05:00,"Improvements to API validation logic.

Do not automatically map generic exceptions like AttributeError to
http errors (instead they should be handled closer to where they occur
so that they can be ""intelligently"" converted to the appropriate
error).

Fix up some expected error codes in the unit tests.
Improve some of the validation messages.
Remove all use of locals() in attributes.py

Fixes: bug #1076813
Change-Id: Iabf8808a840e927307bbcae4cd41790af3d79a9e"
ed39d8a71b1926c88bb4e7ea117dce58b43b6ce8,2013-02-11 13:26:53+09:00,"Adds API parameters to quantum.api.extension.ResourceExtension

Part of blueprint quantum-api-wadl

Fixes bug #1104882

Change-Id: I0d30864d3176ab001b10948f1deb37b3c062987c"
6f2b1899610d58c401a64776f936fbd300b662bd,2013-02-11 15:07:25+02:00,"Unused methods in quantum.wsgi clean up

Remove broken unused methods:
* wsgi.XMLDeserializer.extract_text,
* wsgi.XMLDeserializer.find_first_child_named,
* wsgi.XMLDeserializer.find_first_child_named,
* wsgi.XMLDictSerializer._create_link_nodes.

Change-Id: If00af68683571285adb0516d8fc36790bd83ffa5
Fixes: bug #1119262"
4160f2428d18ffe012b3fa7a33b871f053933777,2013-02-13 15:37:58+02:00,"Alembic migration script for Loadbalancing service

Creates tables for:
 * VIPs
 * LB pools
 * Health monitors
 * Members
 * Pool statistics
 * Session persistences
 * Pool-monitor Associations

Change-Id: I96c497a319129eb8a3ce6a1420a38e8efb666b6b
Fixes: bug #1122117"
8789704221d23b4a713727cad79939f69d2ab02a,2013-02-13 17:43:40+02:00,"Synchronize code from oslo

Use commit eaab5fae2502198e9fa57d0d90a7204a2bd83b16:
Merge ""sort options to make --help output prettier""
(Wed Feb 13 12:52:14 2013 +0000)

Add processutils to quantum since impl_zmq depends on them.

Drop notifier.list_notifier that is not present in oslo.

Change-Id: I91d9ec05481b8c24da9fbee1ad4706ff56a3b7aa
Fixes: bug #1116290"
a5c101da4bd6371fdc116690ef0c354868a571b0,2013-02-13 18:47:23+02:00,"Support advanced validation of dictionaries in the API.

This change allows to specify constraints for individual keys in
dictionaries in the specification of the API resources.

Introduces type:dict_or_none validator that allows to skip
validation of a dictionary if a None value was supplied.

Adds constraints for session persistance parameters to the API.

Disables specifying cookie_name for session persistence, if
the type is set to HTTP_COOKIE or SOURCE_IP.

Fixes: bug #1104110

Change-Id: I62068deed449967949eaba9259028c88dd6974f8"
bfa9d88f432f20cf4a4d85a4050e4f94dc874457,2013-02-13 19:03:53+00:00,"Persist updated expiration time

Without creating a subtransaction, the database query wasn't actually
being run and the data was being lost.  This resulted in the case that
on termination of long running VMs, the VM IP address was immediately
available for reuse instead of being held as it should have been.

Fixes: bug #1116500

Change-Id: I7774273b8e799d945c27329e9da2dba34e39fdb8
Signed-off-by: Stephen Gran <stephen.gran@guardian.co.uk>"
2c93d73e8f051bf0e07257e6ba42d85c2eded652,2013-02-14 08:10:57-08:00,"Add support for extended attributes for extension resources

Removed unsed import from quantum/tests/unit/test_extension_extended_attribute.py
Address comments.
Change update_attributes_map definition/behavior

Fixes: bug #1116664
Change-Id: Idc360f5b3b35fb1d40237e1bbce39684508175cf"
73e43ac7f8c55691772470756ccaf86e7f087243,2013-02-15 09:54:38+02:00,"Allow tests from test_dhcp_agent run independently

Some tests from test_dhcp_agent depend on each other
and cannot be run in arbitrary order. TestDhcpAgent
and TestDhcpAgentEventHandler need config options that
are initialized in other tests. This patch eliminates
such dependencies.

Fixes: bug #1125951
Change-Id: I10bc46a5e1244ea0f7a05a20bb162c50303f282e"
b17bd081a16513307e5b8dd8a2d738173050ff93,2013-02-16 01:38:26+01:00,"Allow nicira plugin to handle multiple NVP API versions

Bug #1126352

This patch introduces a simple framework for enabling
nvlib to call the appropriate routine according to the
current version. To this aim, we leverage the 'server' header
which is returned by every NVP API calls (except login/logout).
The patch also accounts for the changes introduced in NVP 3.0

Change-Id: Ief3a6f2b5b99ea33548353ce3bee3fa23e42752f"
e7da9d73bc39a7a9bfd63af75aa1d584885b1ab8,2013-02-15 17:13:46-08:00,"Fixed the typo of loadbalancer test case.

Fixes: bug #1123658

Change-Id: I6d7d4c724200c67cb6d8955d1eb6809b8083040c"
c45e61c2578289f2e1be92c448261723fb710412,2013-02-18 13:02:49+09:00,"Add unit test for ryu-agent

fixes bug #1118197

This patch adds unit test for ryu-agent.
Also, add the lacking test for the default configuration value.

Change-Id: I742b2a9dfc0706c0307365a3fe9496c3541fcf04"
434534652d8f350cd3419605b8d8d22b078727b1,2013-02-18 15:49:38+09:00,"Fix SG interface to reflect the reality

The signitures of abstract methods in SecurityGroupPluginBase
has diverged from db mixin implementation.
This patch updates the methods to fix the divergence, mainly
by removing update method from the base. Note that there's an
issue for missing update(bug #1124865).

Fixes: bug #1119080

Change-Id: I6631b86ab2fdf4b81ad575e9a8f92dfe041ffe9a
Signed-off-by: Tomoe Sugihara <tomoe@midokura.com>"
24c77966b6449257c2bfa87419aafc3bb5f3c287,2013-02-18 19:24:58+01:00,"Metadata support for NVP plugin

Bug #1121119

Allows the NVP plugin to leverage the metadata proxy, by creating an
ad-hoc topology for allowing access to a metadata proxy from a NVP
router leveraging existing agents.

This patch also removes previous code for metadata support in the
NVP plugin, which was based on DHCP Option 121. This is now provided
by the dhcp agent as well.

Change-Id: If37ef388e063f40bb06908ee2f72c431f29dac31"
d0c5befd00f142b2f4a046655246e047cfdc819c,2013-02-19 09:14:12-08:00,"Support Port Binding Extension in BigSwitch plugin

Bug #1100395

Change-Id: I7097c9f0df8742f947860098d4928d9fd328e14b"
61bdda62e8950a9747073e2be7b81cdea0af2f25,2013-02-19 11:38:53-08:00,"Raising error if invalid attribute passed in.

400 will be returned when invalid attributes
are passed into Quantum API.

Fixed the some test cases failed since the
enforcement of invalid attribute checking

Fixes: bug #1076179

Change-Id: I4e9e2891c444f9dcd051f7b325d3c9403b28db86"
5719974e59a7c6559842dd4b9069948aa7120754,2013-02-20 17:25:44+09:00,"Resolve branches in db migration scripts to G-3 release

Fixes bug #1129260

Change-Id: I5c70ee6d464f8fc0b2e4cdb4fc07464e150e10ff"
e55b10ab395aa7a463cb572e680d9ceca86ef14a,2013-02-20 00:38:00-08:00,"Add support Quantum Security Groups for Ryu plugin

fix bug #1124965

This patch add support security-groups extension to Ryu plugin.

Change-Id: I569ab1e48517f28a5103175fd04e848f82eb2a3c"
20e517dd2dd550a39c0f842c3e12c34a279d5962,2013-02-20 16:37:08-05:00,"Close file descriptors when executing sub-processes

Pass close_fds=True to subprocess.Popen(), as is currently done in
nova.utils.execute().

Fixes bug #1130735

Change-Id: Iec21873d7ef3957847f3b7365fadd613ccf1349d"
8501e9d48dd29e0b0ddc5e5297365922e4946171,2013-02-21 12:18:53+09:00,"Sync latest install_venv_common.py with olso

This patch syncs with oslo change set of
> c78b2ab Avoid using cfg in install_venv_common

So that oslo-config isn't needed to run install_venv

Change-Id: Ia7ee923a53e09c0c6a525294ec4a5dc9d31c3bed
Fixes: bug #1131009
Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>"
e3bc93fe2be842858a59220f7e3857e8845b1f61,2013-02-26 10:37:59+08:00,"Fixes import reorder nits

Fixes bug #1133080

Change-Id: I31e56cea9b7310cfd16c0340ba270c4a777c200c"
6fc9ce4179098d588c3f14b04c0956f83ea4f1e6,2013-02-26 13:14:26+09:00,"Enables packetfilter ext in NEC plugin based on its driver config

packet filter extension in NEC plugin should be determined based on
a return value of filter_supported method in the backend driver.
Previously filter_supported was not called actually and packetfilter
extension was always enabled.

Fixes bug #1133100

Change-Id: I1334c7695e64bc942c0ecce2bd85e5a92e75b388"
8314655fc7f7e2f69c11704c8eb9fc46aa56f9aa,2013-02-26 12:18:46+00:00,"Unpin PasteDeploy dependency version

Fixes bug #1133262

There are no newer releases of PasteDeploy than 1.5.0 and we have no
reason to believe newer versions will break us. Indeed, if an
incompatible version is released, we will want to know about it quickly.

Change-Id: I331b33b16ea50202886b19bf5c4060d9fa46d5ec"
c5072518ca69e772836105f7c677dd62ca8150e6,2013-02-28 16:29:23+09:00,"Remove deprecated assertEquals alias.

We have code in the tree that uses both assertEquals and assertEqual. The
former is deprecated:

http://docs.python.org/2/library/unittest.html#deprecated-aliases

As it's a REALLY simple thing to fix, I went ahead and made it all happy.

Change-Id: Ibbd9461e2bda591693a6775b9ede1e87b8c008f2"
8d44479717986790c530c445026b79d6f75dadc3,2013-03-01 15:36:19+08:00,"mock quantum.agent.common.config.setup_logging

Bug #1137249

Change-Id: I7eb7ec3c0247c1ceeefc8e3f88d9cd7753c38c0c"
8c95b089651c1d74a1e5bd3c006fa96a7c0c347b,2013-03-01 09:04:19-05:00,"Cisco plugin support for creating ports without instances

Adding support to the Cisco plugin for creating ports without
an instance id.

Fixes: Bug #1130749
Change-Id: I84407455585be8088fa3591b7e5c39f4ce23e7e4"
0b3f9f61b070b86ad0335d905a57357035ce2e59,2013-03-01 23:50:55+09:00,"Ensure max length of iptables chain name w/o prefix is up to 11 chars.

The maximum length of Linux iptables chain name must be less than or
equal to 28 characters. In iptables_manager binary_name up to 16 chars
is used as a prefix and a '-' follows it, so a chain name passed to
iptables_manager must be less than 12 character long. Accordingky
MAX_CHAIN_LEN should be changed from 28 to 12. Also this commit
introduces a method to get a chain name with valid length.

Since iptables_firewall module constructs a rule by directly using
a chain name, iptable_firewall also must take care of the length.

Fixes bug #1133833

Change-Id: I6157d519f3cb91ec32dc6a92eae45439b8717b2d"
50e05960d60928085f8cd35910ac619e9126e213,2013-03-01 11:39:10-08:00,"Incorrect argument in calling post_json

The error is due to change in webtest in which post_json is redefined.
Fix to work with its new definition.

Fixes bug #1138233

Change-Id: I08c131bf50886456f0501d5fa8493e05543c5816"
f1efd89131f4773514089ab48424c91b795eac83,2013-03-01 15:34:37-08:00,"Host route to metadata server with Bigswitch/Floodlight Plugin

Host route to metadata server was not getting propagated
to VM when using the Big Switch/Floodlight plugin. The
reason being the update to the subnet (with the host
route information) was not being picked up by the dhcp
agent. This is being fixed here by sending a notification
to the dhcp agent when the host route is added to the subnet.

Fixes: Bug #1134043

Change-Id: If040f51946bcb734da319249df17d03e68aa5588"
fdad941d3e01688b043bb7e780ae97b5fa0141d5,2013-03-02 18:20:26+08:00,"enable linuxbridge for agent scheduler

Bug #1135793
blueprint quantum-scheduler

In addition, we refactor agent scheduler so that we will make
it easier to enable plugin to support agent scheduler.

Change-Id: I0d5cc8bcea644720a3c5cbe92486ce8d8ecd248c"
32a029bc5efcf10a0510331215e42154749ba76f,2013-03-04 17:09:28+08:00,"Allow DHCP and L3 agents to choose if they should report state

Bug #1143195
blueprint quantum-scheduler

Change-Id: Iba7bf82d7130462be4dda6c1c5f9a0fc5633707d"
73eedf5c794668bafe5e42f6ec75af563ce2ee68,2013-03-04 12:51:36-06:00,"Pin pep8 to 1.3.3

Part of making pep8 version standard across all openstack
projects.

Fixes LP: #1143569

Change-Id: Iefc923123243df161ed72888c1651a622afbda04
Signed-off-by: Chuck Short <chuck.short@canonical.com>"
921f203f4906a3b566f5a58471a55a4eedfc939c,2013-03-04 23:02:07+01:00,"L3 port delete prevention: do not raise if no IP on port

Bug #1104337

This patch alters the prevent_l3_port_deletion logic.
PortInUse is raised only if the port has a device owner in
(router_interface, router_gateway, floatingip) and an IP
address.
If no IP address is found on the port the port itself can
be considered stale and therefore deleted as any association
with l3 entities would be void.

Change-Id: I9d711b2a9d2cbcc8be481f1751f51fe5b9f01327"
c3d789d659840a3e0ddf78a5523d535866a98657,2013-03-04 14:56:21-08:00,"Setup device alias by device flavor information.

The router interface cannot be deleted since the MetaPlugin
cannot get the flavor information from the port which has
been deleted.
The solution is setting up the alias for each device based
on the flavor information, so the MetaPlugin still can get
the flavor information from the device itself even the
port has been deleted.

Also the router interface cannot be deleted since the
l3_port_check flag is not passed by MetaPlugin.

Fixes: bug #1085276

Change-Id: I670aa45c804e660ee4afb5359e0ab1347f369986"
0b0c6834f34467d075543ef925dce0362d02f914,2013-03-05 16:49:15+08:00,"Delete DATABASE option checkup testcases

Fixes bug #1146441

Change-Id: I2c8dc2bc3e3055e529bdaf38529d804f5e75e036"
1f716e3effe1ad6eeb042a11f06a5c89498a34b8,2013-03-05 15:51:34-05:00,"Prevent DoS through XML entity expansion

Add a ProtectedXMLParser that overrides the
doctype declaration handler. The handler simply
throws an exception and prevents any further
parsing of the incoming xml.

Fixes LP Bug #1100282

Change-Id: I6488e1a6a52326006e7e7927ece5b5939b72e83e"
a4d41a38ccb39a7d218fc46d84e7a9753af067f5,2013-03-05 13:22:38-08:00,"fix incorrect pathname

return of call to os.path.abspath('../../..') depends on the setup of
nose working directory. Change to return the directory where
test_config.py resides

fixes: bug #1138216
Change-Id: I1d3f1e3c88bd30871a018a195cee46a91d35c8a8"
e91818b37829611ad515c183c0811f65a4cd5133,2013-03-05 18:50:52-08:00,"Moved the configuration variables.

Moved the configuration variables from dhcp agent
to linux interface so l3-agent works with
Metadriver.

Also removed the unnecessary configuration variables
from quantum debug agent because of the above
modification.

Fixes: bug #1138757

Change-Id: Ib23fee18a08ef1c531feb05d98c9a76f5385a4ff"
b6722af476eb7b4b54f7b29e626568c3ac1c7ede,2013-03-07 18:45:44+00:00,"Lock tables for update on allocation/deletion

Allocating, creating and deleting port might happen
in parallel and we need to make sure we don't
assign same IP to multiple different requests.

Added treatment for vlan tags and tunnel ID's

Fixes: bug #1110807

Change-Id: Idbb04d3ce6eacd308b05536f1942a35a0792199e"
4ee4e75321cc163c9f5a9e0d3e159211357ca3a0,2013-03-08 01:55:13+00:00,"Enable handling the report_state RPC call in Brocade Plugin

Fixes: bug #1150294

Change-Id: I4f641af48140a108e7c707446cda52509d567c8d"
1d206cc309a3fb51c50c77ab31b886b890f0bd1f,2013-03-07 20:24:52-08:00,"Allow probe-create to specify device_owner.

The device owner of the probe port can be
specified by the --device-owner option.

There are two values for device-owner option,
network or compute.

The probe port will be created with the network
as the device owner by default.

Fixes: bug #1102726

Change-Id: I72d62e2fe7b8f7a5eb4411bc9052efa82fb4fdf5"
2d8e56ba64e328c71ef541da9c327d5bf23ced44,2013-03-08 08:32:20+00:00,"Disable secgroup extension when Noop Firewall driver is used

When Noop Firewall driver is used, Quantum security group actually does
nothing in OVS and Linux Bridge plugin. It would be better to disable
security group extension for such case to avoid confusion.
By this we can determine whether quantum security group is enabled
by checking the extension list.
This commit changes OVS/LB/NEC/Ryu plugins with agent firewall_driver
based security group implementation.

Fixes bug #1124117

Change-Id: I2182289c1e27987b686f1adb7d6e2ad4e154caa2"
33c3cc559cddc9a4f1c5be502e0f83de140cad44,2013-03-08 08:52:25-05:00,"Update tox.ini to support RHEL 6.x.

In order to support running unit tests on RHEL 6.x we need to patch
eventlet with contrib/redhat-eventlet.patch. We already
have support for this in the tools/install_venv_common.py but we
need to make a couple changes to allow tox to consume this:

1) Sync in the latest intall_venv_common.py from oslo. This changes
 patch to use the -N option (ignore already applied patches) and
 makes it safe to call the patching function more than once.

2) Add a new patch_tox_venv.py script in tools.

3) Update tox.ini to call patch_tox_venv.py before it runs tests and
 coverage.

NOTE: This will hopefully go away eventually once this patch lands:

 https://bitbucket.org/eventlet/eventlet/issue/89/add-a-timeout-argument-to-subprocesspopen#comment-3342969

Change-Id: I3e2b07c3f718e4aede5c5f231ff0cdb7721ec885"
0109231fcdb3c9e850afef82ba27090a4a0178af,2013-03-10 09:59:24+08:00,"Log the configuration options for metadata-proxy and agent.

Bug #1144370

Change-Id: I35ac570dd55006d0133736588f0302d6f70294de"
5c62a1c15246d1bc9095fdeaf4cce7e1f240eac6,2013-03-11 14:03:01+01:00,"Solve branch in migration path

Bug #1153578

Also, change a comment line in another migration where the 'revises' line
was incosistent with the id of the actual down_revision

Change-Id: I8effd70ba553330f9023605a2bfa92bd3d73bd4e"
bb43a075f79fde8e57019671aab62e14d0bb2741,2013-03-12 14:59:12+02:00,"Fix detection of deleted networks in DHCP agent.

The DHCP-agent uses an in-memory networks cache to find out which networks must
be deleted and which ones must be updated. In a case of agent restart the networks
cache is empty and it's not possible to cleanup DHCP-processes serving networks
which were deleted while the DHCP-agent was down. The proposed fix fills the networks
cache when the agent starts using a list of networks which have existing config files.

Fixes: bug #1135948
Change-Id: I27758389755cd19bca9fdbeda9cc1a123370f527"
7588c58ff8371cae75c5e8f23cdf609be883ba74,2013-03-12 16:35:47+00:00,"Switch to final 1.1.0 oslo.config release

Fixes bug #1128256

oslo.config has now been released to PyPI in time for Grizzly RC1 so
we can switch to using it directly.

Change-Id: I655f831718ae5f4e25e941ee206fe195214a9a91"
b7f56f96dbf10309d396df65d7dd5e4a2f4423c8,2013-03-14 09:48:50+08:00,"Set fake rpc implementation in test_lb_quantum_agent

Fixes bug #1151806

Change-Id: I1a57f8b926960ecfa5ee832e7af8d9f9a2ad177e"
e95e508ff6c2b6d6a1f88f42dfeac3125a117453,2013-03-14 09:50:14+08:00,"Resolves ryu plugin unittest errors

Removed obsolete DATABASE value tests in ryu/test_defaults.py
Added fake_ryu client in test_ryu_security_group.py
Imported quantum.plugins.ryu.db.models_v2 in test_ryu_plugin.py

Fixes bug #1151642

Change-Id: I60e5aee90da9fa32bd285e6f6bbd95cd7ee1ce2c"
39e3bff18ab9a83ef8b2dd531604f3e424b98b65,2013-03-14 09:51:11+08:00,"Registers root_helper option for test_iptables_firewall

Fixes bug #1146478

Change-Id: I908a142d9463719e7b3c94aa1d699d329c9259de"
377f78fa55988a92674bd940130ff8d15f3ec521,2013-03-14 19:07:39-07:00,"Adds delete-orphan to database deletion.

Change-Id: I3570c812c042365e68eef3b5463899afa85eb9fd
Fixes: bug #1096549"
8499d50259d7f7c01de6dad08b660afa5544af4d,2013-03-15 11:23:27+02:00,"Improve test coverage for quantum wsgi module

OpenStack quantum.wsgi package includes a lot of classes not covered
with unit tests. This change adds such unit tests.

Fixes: bug #1136027
Change-Id: I16dd35389bf82f2818b74d1fb4cf7f7a6bebce28"
2f2aaf2a89445590e01a7c288de9f5c93b20e87f,2013-03-15 14:20:55+01:00,"Pin SQLAlchemy to 0.7.x

0.7.10 has been released and is compatible with 0.7.x. Instead
of pinning to 0.7.9, simply pin to 0.7.x to avoid SQLAlchemy 0.8

Unfortuantely '<0.8' matches '0.8.0b2', which is what we don't want.
Therefore pinning it to '<=0.7.99' instead.

This matches a corresponding change in openstack/requirements

Fixes: Bug #1153983

Change-Id: Icf680a933c6092cce52706fd9616a0d208164d1e"
37ad346a7da82575e5d6cdd3b90317fc50700957,2013-03-18 18:48:30+02:00,"Allow tests in TestDhcpAgentEventHandler run independently

Tests in TestDhcpAgentEventHandler depend on dhcp_confs
option that is defined in quantum.agent.linux.dhcp. We have
to register the option in order to allow independent testing.

This problem is similar to bug #1125951.

Fixes: bug #1156696

Change-Id: I323908c6f70697e056294b1817ff32ce5d32b32c"
9a15b11794dbf945f0e9b9705ae510d3b378287d,2013-03-18 13:07:29-05:00,"Validate protocol when creating VIP.

Fixes: bug #1123114

When creating a VIP, check that the protocol matches the protocol
for the associated pool. If not, raise an exception.

Change-Id: Iba318eda935ccc89dbe8244e00f36ebdfcce65e0"
4bd651a802feeda464715c7abdce3af0fab0a0a1,2013-03-19 10:26:43-07:00,"Load all the necessary database tables when running cisco plugin

In Cisco plugin, Remove redundant/unnecessary calls to configure_db().
Make sure that all the database models are loaded before calling
configure_db()

fixes bug #1155121

Change-Id: I27d5dda512140f0553b311b35678c82f729fa854"
b1067c94c53e22cc9f8400cf7b2049e35d06877b,2013-03-21 21:07:07+08:00,"use the fact that empty sequences are false

fixed bug #1156473

Change-Id: I43470eb884107111cbea958868f4cf8241c8d6e6"
55f2e16178e55bb5a7e3a379f28a020305462005,2013-03-21 19:41:55+01:00,"adding parameter to configure QueuePool in SQLAlchemy

This patch introduces the parameter sqlalchemy_pool_size.
The parameter is used to configure the QueuePool, created
in configure_db(). At the moment the configuration of the
pool is only possible when using eventlet's db_pool for
MySQL (sql_dbpool_enable = True).

Change-Id: I64dec2863c1ee88215ef9b28054ba3bfaafa3b32
fixes: bug #1158235"
3cf9c8c97aa49d87b2e7d9419ae0d3c78d3c3aed,2013-03-22 11:04:21-07:00,"Fixing the syntax error in the XML Serializer

This commit fixes the syntax error in the XML Serializer.
Modified wsgi test to exercise this bit of code as well

Fixes: Bug #1158468
Change-Id: I1bff589a46ff4884e131d7cf60551e2f400acb67"
4d72093de571c2a12dc12c3761e3bcec11ccf20e,2013-03-25 15:00:48+09:00,"netns: ip netns exec <name> kill doesn't make sense

It seems confusing netns with pidns.
Although 'ip netns exec' doesn't make sense,
'ip netns exec <netns> kill <pid>' itself success as expected.
But as side effects, dentry of /proc/<pid>/ns/net becomes young,
which increases the possibility to fail to delete netns. That's not good.

Fixes: Bug #1158589
Change-Id: I9aa717ccb86d8bf00bb1e707d39bfb65d043532b
Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>"
6f752c0125ab1c6a5422c7ddb9c0061eda6fae17,2013-03-25 13:49:44-04:00,"Fix kwargs for FloatingIPPortAlreadyAssociated.

Updates the NVP plugin to use the correct kwargs when raising
l3.FloatingIPPortAlreadyAssociated.

Fixes LP Bug #1159922.

Change-Id: If89feea5e40976ccb4286f96f5348c54f84950ce"
4721b5a81c43461626896ea3fc3b0ee82abe8f5d,2013-03-25 13:49:55-04:00,"Fix kwargs for NECDBException.

Updates the NEC plugin to use the correct kwargs when raising
NECDBException.

Fixes LP Bug #1159925.

Change-Id: I1e96d4ec65c1bc98d90d2eb9867fe39bbd505cdc"
a4faa98b99c9ab50e8fdb299cc3f404d8144b3a9,2013-03-28 12:55:50+00:00,"Support for SSL in wsgi.Server

SSL are entirely optional. Support for SSL as well using code from glance. We
have some new options for configuring the SSL support. There are tests for
accessing a sample app w/o ipv6 or ssl, one with just ssl and one with
ipv6 and ssl

Fixes LP# 1101342

DocImpact

Change-Id: I824acef4130d27828dcf199736b3ca668d6202d7"
a12046cd21618fc1a9bc12983e96cd8607012141,2013-03-29 13:09:05-04:00,"Fix for Cisco plugin physical device config error

This patch fixes a bug with the Cisco plugin where subsequent vlan id's
would overwrite the existing trunking config on a switch interface.

Change-Id: I5e97c00062f687838e60e5dc9470f4a62289676b
Fixes: Bug #1161946"
dc110b71c115dc9d1ac708ae62aad7d1a7218dcf,2013-03-30 02:06:38+01:00,"Enable authZ checks for member actions

Blueprint make-authz-orthogonal

This implements work item #1 of the blueprint.
This patch enables authZ checks for 'member actions' in the base
controller and removes explicit checks from l3_db.
This patch also addresses a small glitch in the policy engine which
was assuming the request always had a body.

Change-Id: I7e0f386eedcfff24ea1fee7294bbadd6c5ec781c"
e1b3e1678d37756692796b2099e75a872a8b35ea,2013-03-30 11:56:44+01:00,"Pass metadata port to metadata proxy

Make the l3 agent pass the port used by the metadata service to the router namespace proxy when
creating it and add also new tests for this.

Fixes LP# 1160955
Change-Id: Iec8a5238345b26e70b0aa1dc96a896e26af34722"
54f1e757f287617371c0732209ab0a9b8db1c7d3,2013-04-02 17:51:44+09:00,"Update Ryu plugin README

Fixes bug #1163181

Update Ryu plugin README file to refer to the new URL that describe
how to configure the plugin.

Change-Id: I84486f022bddd28a534e971e1132c70f10ad7c04"
d452ecee207de435554ae994872c18932fedcbd5,2013-04-02 19:52:25+02:00,"Add RabbitMQ and QPID HA support flags to quantum.conf

Since Quantum supports HA queues with RabbitMQ (https://review.openstack.org/#/c/13760/),
quantum.conf should provide new flags for explain how to configure multiple RabbitMQ servers and enable HA.

New flags :
rabbit_hosts=$rabbit_host:$rabbit_port
rabbit_ha_queues=false
qpid_hosts = localhost:5672

Fix Bug #1160369

Change-Id: I35903b1b7b66fde8d70ac7e8076e0def2a1f2d04"
147038a61386fb2c94459499637341978032cc30,2013-04-03 14:17:48-07:00,"Parallelize quantum unit testing:

This change switches run_tests.sh to use testr
in parallel mode, instead of nosetests, in order
to enable unit tests to run in parallel.

By default, the number of parallel test processes
is set to the number of cores on the test machine.

A similar change was recently merged to nova:
  https://review.openstack.org/#/c/15078/

Some tests required updating to remove inter-testcase
dependencies.

bug #1099694

Change-Id: Idfb923d424342a07dcba88d70b971683f549f763"
e9547131eb3ccc7e7301a91714abafa9f5799e48,2013-04-09 19:15:46+09:00,"Improve the deprecated message about DEFAULT.root_helper

bug #1166706

Change-Id: Ic90fefefc0c3339cbc876e4402b6d6c5aa841c47"
01a977b66958ec1d03964bbe3aaf218ff044232b,2013-04-25 00:02:23+02:00,"Send 400 error if device specification contains unexpected attributes

Bug #1171926

This patch simply enhances the validator for the 'devices' attribute
by verifying each element in the device list does not contain
unexpected attributes.

Change-Id: Id3fd182a7f711b482ad371752983264ad73b100f"
ea9aeb6de075f391f6a73d6ea2b76d6e452c28bc,2013-04-25 13:56:32-07:00,"Simplify NVP plugin configuration

Fixes bug #1121605

This patch replacest the nvp_controller_connection configuration option
with a set of options more intutitive to user which also avoid
repetitions in ini files.

In order to simplify the configuration of the plugin, this patch also
removes named clusters. As the plugin supports a single cluster at
the moment, this can be simply specified in the [DEFAULT] configuration
section.

Also, this patch restrucures nvp_cluster.NvpCluster so that per-cluster
configuration options are not store anymore multiple times.

Change-Id: Id5f84220122d7c5f3239e3333cb772247d1ed05e"
85ffc01eee00dab0a076ee367dbe04b131653423,2013-04-29 11:20:15+03:00,"Docstrings formatted according to pep257

Bug #1020184

quantum/agent/*
quantum/api/*

Change-Id: I206206b66b4adf5cda73a6bb709a0935d7efa821"
b28dc107a90afc5d718473e9b289847cab6e809b,2013-04-29 12:13:39+03:00,"Docstrings formatted according to pep257

Bug #1020184

quantum/common/*
quantum/db/*
quantum/debug/*
quantum/extensions/*

Change-Id: I8fdf72ae1702ef2a2652a1db683d8b31e09e6f84"
4d6f02440b7d337b7aac6ba313ee7e60ecc53214,2013-04-29 12:12:21+02:00,"Remove calls to policy.enforce from plugin and db logic

Blueprint make-authz-orthogonal

This patch implementes item #2 of the blueprint
Remove calls to policy.enforce when the policy check can be performed
safely at the API level, and modify policy.json to this aim.
This patch does not address enforce calls in the agent scheduler
extension, as that extension is currently not defined as a quantum.v2.api
resource class.
This patch also adds an API-level test case for the provider networks
extension, which was missing in Quantum and was necessary to validate
the API behaviour with the default policy settings.

Change-Id: I1c20a5870279bc5fce4470c90a210eae59675b0c"
1e166f3efd72459fabe83e2141461329c67c811a,2013-04-30 09:27:49+03:00,"Docstrings formatted according to pep257

Bug #1020184

quantum/plugins/bigswitch/*
quantum/plugins/brocade/*

Change-Id: I9bf4381738319551a5993d4b279a5cec3425b7ef"
ad3b6064dff135dd34d997167ec2ef628828d95e,2013-04-30 16:10:06+03:00,"Docstrings formatted according to pep257

Bug #1020184

quantum/plugins/hyperv/*
quantum/plugins/linuxbridge/*
quantum/plugins/nec/*
quantum/plugins/nicira/*
quantum/plugins/plumgrid/*
quantum/plugins/ryu/*
quantum/plugins/services/*

Change-Id: I3525aa57235935d90ec7b70c65ba15012ce575a3"
13fbf22ff43512936eff8733457b69546fd4c70d,2013-04-30 16:56:35+03:00,"Docstrings formatted according to pep257

Bug #1020184

quantum/tests/*

Change-Id: I5c31a70e80c7fd448b92b43d34341301533b59ba"
ee3bb94b247e79bcf0b735acb9341a89e289943c,2013-04-30 17:09:13+03:00,"Docstrings formatted according to pep257

Bug #1020184

quantum/plugins/cisco/*

Change-Id: Ibb6a865a17de0ea4f1865972624e4c5da0e96b34"
f639788c59c8bbb5c6a08c7f193fd1d23c7ce956,2013-05-01 18:20:58+02:00,"Fix port_id filter not honored

Add dict. to map API params to DB columns

Change-Id: I5f10eea77533e91afeb690e39301d7282e1b1620
Fixes: bug #1169706"
86cf8b53ee0f59fe213d18949c00cfb6c7287c86,2013-05-02 01:28:04+03:00,"Adds POST method support in the metadata service

Fixes bug: #1092311

The password generation feature introduced in Grizzly requires POST
support in the metadata service.

Support has been added to both the metadata agent and namespace proxy.
Tests have been added and updated accordingly.

Change-Id: If7ef6bede1775ad682822cb868518ec732b90805"
8a9e7ac7f2e3901d33c8a6a91dffec1e16b13f0d,2013-05-08 18:14:27-04:00,"in dhcp_agent, always use quantum.conf root_helper

Fixes bug #1178003.

For the most part, the dhcp agent uses the root_helper setting from the [AGENT]
section of /etc/quantum/quantum.conf. However, in a couple of spots, the
root_helper setting from the [DEFAULT] section of /etc/quantum/dhcp_agent.ini
was being used.

Change-Id: Id2f3140374a705cf7a0d2a784e4f321cc54f602e"
a299091d00d0fcb4d43cf09aba1aefd9c43eb22c,2013-05-09 14:08:02+08:00,"Add a configuration item to disable metadata proxy

Bug #1166543

Change-Id: If7aee8d79b7ca275f89cf9299eac1f76d5500fcc"
a397df38c748d482ece18e164084a589d7f2d362,2013-05-09 14:10:34+08:00,"Don't run metadata proxy when it is not needed

Bug #1159015

Change-Id: I6063e75525a2a727d063bb1745c897ac8c4ba3e8"
6a5edbc3c916fa854963fe648d16761129165f4f,2013-05-09 11:04:16-04:00,"Create a common function for method _parse_network_vlan_ranges used
by plugins.

The _parse_network_vlan_ranges method does the same thing for the
linuxbridge, ovs, and hyperv plugins. Create a common function for
the plugins to use instead. This paves the way for improving vlan
range verification (see #1169266) in one place.

Fixes Bug #1177428

Change-Id: Ie8c20807e9146dd9c8bc011dd3a4dc10ec871e0b"
91b56e41eecf2cd8b4c848b4e773a1be307b40c3,2013-05-10 14:12:18-07:00,"Do not require sudo/rootwrap to check for dnsmasq version

The dnsmasq version check does not need root privileges
to run as with low privs it works just fine. As a side
effect, the use of the rootwrapper was causing unit tests
to hung because the execute call in check_version was not
being stubbed out. Weirdly enough this wasn't caught in
a previous Gerrit run; there must be a passwordless sudo
lurking around somewhere in the Gerrit infrastructure.

Fixes bug #1178800

Change-Id: I4d0bd218768eec2439d3907587682ff35884a262"
73900fd0f4c1a343c880d8529aff4f51dd071d4b,2013-05-13 13:04:00+00:00,"add db to save host for port

blueprint portbinding-ex-db

related patch in nova:
https://review.openstack.org/#/c/21141/

Only OVS and linux bridge plugins now support this feature.

Change-Id: I42d9bc59130e2758dd6a221d8953d63ec10e1f3c"
13f9e02a64eb578547ede95ce7849b264d511619,2013-05-15 01:49:34+02:00,"Remove calls to policy.check from plugin logic

Blueprint make-authz-orthogonal

This patch implements part #3 of this blueprint, according to its
specification.
It does so by allowing the view generator in the API layer to strip
off fields which do not satify authorization policies.
Also, some checks in unit tests for plugins relied on the
capability of the plugin to invoke directly the policy engine.
This checks have been removed and replaced by equivalent unit tests.
Finally, this patch required changes to most test cases for API
extensions in order to ensure the resource attribute map was
updated with the extension's attributes

Change-Id: I1ef94a8a628d34697254b68d7a539bd1c636876e"
56cac98626f1b25fd375b9c8d00294d6fb84496b,2013-05-15 22:06:00-04:00,"Fix linuxbridge RPC message format

The linuxbridge, openvswitch, and hyperv plugins all use the same
basic RPC interface between their plugins and L2 agents. But the
attributes describing a virtual network passed from the plugin to the
agent over this interface differed for historical reasons. The
openvswitch and hyperv plugins each pass network_type,
physical_network, and segmentation_id attributes, whereas the
linuxbridge plugin previously passed vlan_id and physical_network
attributes, using special vlan_id values to indicate flat or local
network types.

This patch changes the linuxbridge plugin to pass network_type and
segmentation_id attributes instead of the vlan_id attribute, bringing
its message formats into sync with the other plugins. RPC
compatibility is required for blueprint modular-l2 so that the ml2
plugin can work with all three existing types of L2 agent. This RPC
message format change is also required for blueprint
vxlan-linuxbridge.

Unlike the vxlan-linuxbridge patch on which it is based (see
https://review.openstack.org/#/c/26516/), this patch does not bump the
linuxbridge RPC version number, as the ml2 plugin will require all
three L2 agents to use the same RPC version. Instead, the updated
linuxbridge agent maintains compatibility with old linuxbridge plugins
by accepting either the old or new attributes. There is also a
configuration option, currently turned on by default, to enable the
updated linuxbridge plugin to pass the vlan_id attribute expected by
old linuxbridge agents along with the new attributes. These message
format compatibility mechanisms are intended to aid during upgrades,
and can eventually be removed.

Change-Id: I7cc1c9f96b09db6bab2c7d9f2b30b79fa4dab919"
84f65f387c873d7d342a56f081f7bf8025500bf9,2013-05-16 19:28:13+09:00,"fix reference to tenant id.

Administrator can create resource, even if the tenant of resource is
different from the one of authentication. For example, administrator
can operate 'quantum net-create' command with different tenant
between the authentication tenant(--os-tenant-name) and --tenant-id.

In this case, quota cannot be restricted with the resource tenant,
because it is restricted with --os-tenant-name.

This patch fixes this problem.

Fixes: bug #1179729

Change-Id: I8ce893bb583d52f81c661082372d725bebf9c1be"
839cd5da5c013b77330acbe7ad9ad98c8f12c03a,2013-05-16 16:17:50+02:00,"Deprecate ""extension:xxx"" policies but preserve bw compatibility

Blueprint make-authz-orthogonal

Patch #4 for this blueprint.
With this change, if policies starting with 'extension' are still
present in policy.json, a deprecation warning will be emitted, and
the policy will be translated in the corresponding, new-style,
policy(ies).

Change-Id: Iccf0f36cc2547c35c66854b8a3fdb7185b5214bd"
ecc0e7a9de9b0384c485b2dff60ef3acfa371fdc,2013-05-17 16:26:08+03:00,"Docstrings formatted according to pep257

Bug #1020184

quantum/*

Change-Id: I771e0f0d6121b7c03cecd82583e9a6c1915f891d"
933259f67520d092d4a29d5287d823f3b08e44c3,2013-05-17 18:20:55+03:00,"Docstrings formatted according to pep257

Bug #1020184

Removed H404 from PEP8 ignore list.

Change-Id: Iabc75281c5d92c5b399c24c9b65aca139f204b0a"
eb6182fa6192b1ae4268ac02583622978d449a09,2013-05-17 15:52:17-07:00,"Add l3 attribute to network

The fix is to add l3 attribute(s) to the returned objects in get_network() and get_networks()

Fixes: bug #1180971
Change-Id: I4b9c932fae90a169ad1c0119f45e90a2ee260acd"
2b2464331629ea6f50655f8c059e1a275ac8a8d2,2013-05-18 07:15:35+08:00,"Add update method of security group name and description

make it possible to edit the name and description of
common security groups, we can not rename the default
security group.

Fixes: bug #918393

Change-Id: I7003c47e054f032572adbb901be4dbc61839b695"
b38c56f5b6b0f0b03ff8f2799ccdde2cabfba5a7,2013-05-18 12:57:28-04:00,"Check network vlan ranges for correctness.

Check that the range beginning and end tags are valid values 1-4094.
Supply two global constants for min/max vlan tags and update all
local usage of these values to use the global constants.

Fixes: Bug #1169266
Change-Id: I054a8bebd16d95ea40414e3cecb6d24a970c730f"
a9560a9cc03c2d00ba5db4f28eb9405aa854b5a6,2013-05-21 09:33:11+09:00,"Make logging level in unit tests configurable.

Added a debug option to unittest(BaseTestCase) which sets logging level of
fixtures.FakeLogger to DEBUG. To enable this option, set OS_DEBUG=True or
OS_DEBUG=1 in environment variables.

Fixes: bug #1181925
Change-Id: Id09008ddabb837290edf12e1cbd014dc74760113"
7e3cef2d7b6bb839c399ce8730153b6fa7076d96,2013-05-23 22:54:28+08:00,"avoid auto scheduling one dhcp agent twice.

Bug #1183173

Change-Id: Iff7b23faae50e6736b253ca5a2b1280451127200"
8da2fb7c562323e16a574b09a0a3a77ea8a94fa3,2013-05-23 21:07:42+01:00,"Require oslo.config 1.2.0a2

Fixes bug #1182662

Commit 362bd7f switched us from using 'QUOTA' as a config file section
name to using 'quota'.

This broke backwards compatibility support for 'QUOTA' because the
version of oslo.config that has that compat support had not yet been
released. The gory details are summarized here:

  http://lists.openstack.org/pipermail/openstack-dev/2013-May/009448.html

Change-Id: I7826087147e0713edaaea85a72283998295e2281"
f0e38f4c754f049a05fa9ffa5204524701ed21f6,2013-05-24 06:23:45+09:00,"Fix typo in option group shortcut 'aGENT' in NEC plugin

Also adds a test to check if option group shortcuts work.

Fix bug #1183576

Change-Id: Ib2843f2b2b4e35964fb4bb5280fda8f5c9e2ba0c"
95d7c5052a0192c894f75de0f630f541d2b7326f,2013-05-23 18:21:07-07:00,"Ensure API extensions for NVP are loaded by default

Fixes bug #1182736

Change-Id: I286f5b69d58a4cd3a0e25a984559fdf37068a75c"
3ab6ad34ec0e498945f7031e86e45686b2df6ea5,2013-05-24 09:49:33+08:00,"metadata proxy will use syslog as default log

Bug #1183614

Change-Id: I39f07fc7d232148c50cf85fbc4ca6ca7cde8fdfa"
1c1ef911c13be19c33e3de662618a8eccd61af86,2013-05-25 01:36:17+05:18,"Added conversion specifier for proper log

In function create_for_sg_rule conversion specifier after string varaible
""rule_id"" was missed. It was causing an error during translation of debug
message due to unavailability of conversion specifier. Included proper
conversion specifier for getting proper debug log.

Fixes: bug #1183734

Change-Id: I0342a091fb8199273c1bb9af59c42c0e09c39349"
23aec9a5bb02c98f02497669910e43d1b543c745,2013-05-28 02:26:09+09:00,"Make MidoNet plugin code more testable

Refactor plugin.py and midonet_lib.py to improve unit testing of
the MidoNet plugin.  Make all the tests pass in the plugin except
those that test features that are not currently supported by the
plugin, which are IPv6 and multiple subnets per network.
Consolidate the mocking code in mock_lib.py to be shared by
plugin.py and midonet_lib.py.

Change-Id: Idcdfc3d90d5ec9e0be29bb6833d336af596fe363
Fixes: bug #1133215
Signed-off-by: Ryu Ishimoto <ryu@midokura.com>
Signed-off-by: Tomoe Sugihara <tomoe@midokura.com>"
d1a623bc97d26b55dde5431d6445a556b5a27c21,2013-05-28 13:47:12+02:00,"Use exec_dirs for rootwrap commands

Avoid depending on platform specific paths for rootwrap
by using exec_dirs in rootwrap. Fixes rootwrap configuration
for SUSE.

Fixes bug #1156044

Change-Id: I54d082c543fd84b40db0caa3571300ac0bb07b57"
3102bd700a787e1020b69b71340de53cd648b3d4,2013-05-29 06:54:55+01:00,"Revert dependency on oslo.config 1.2.0

Fixes bug #1185174

This reverts commit b8b2c4e, 2f13345, 362bd7f, 8da2fb7 and 956b873.

We don't yet have the infrastructure in place to use latest oslo.config
in the gate or even get the correct metadata for it in our packaging.

The gory details are here:

  http://lists.openstack.org/pipermail/openstack-dev/2013-May/009586.html

Change-Id: Idf89ca418df158e6f94279c9c5fa44f23073a9d7"
47846a7a6320b424a50571e4d35595644d9ce133,2013-05-30 22:15:24+00:00,"Rename requires files to standard names.

Rename tools/pip-requires to requirements.txt and tools/test-requires
to test-requirements.txt. These are standard files, and tools in the
general world are growing intelligence about them.

Fixes: bug #1179008
Change-Id: I6f8a11988982133249d443403f63b4f8724e156e"
537ff09fc27a6cfb24b6b2d7ace179e95153af18,2013-06-01 12:33:40+02:00,"Rename README to README.rst

README.rst seems to be more standard accross OpenStack
modules. Also add it to the manifest. Fix a typo
in the manifest.

Fixes: LP Bug #1186518

Change-Id: Ib04f44a1186d3793f5fca39c0c29d74a78a52faf"
d98f8141a17b9d118e9e4c6b1a82dc3d83211c1f,2013-06-04 14:30:29+09:00,"NEC plugin: Ensure to delete portinfo when port_removed RPC.

Fixes bug #1187249

Change-Id: Iaccfd1d4918df5dc4ba1c0478689fd4c833da7b3"
446d146980d026112077e0656be25f5ac0f7cd8a,2013-06-04 18:12:21-07:00,"Add *.swo/swp to .gitignore

I noticed these files weren't being ignored when I accidentally uploaded
one here: https://review.openstack.org/#/c/30648/3

Fixes bug: 1187600

Change-Id: I8570f797e2cc7420dc8a578a9cf68741631cd9f6"
7920bd9f882d99d12379a47d6c5569fdf15f7074,2013-06-10 23:03:20-07:00,"Improve readability for nvplib error messages.

Fixes bug #1189683

Change-Id: Idaf8e072291af2f08df6a502f1d87ee350aab0af"
135d20218ac8f67153c106d373d3a1c1a00f55d6,2013-06-11 04:35:02-07:00,"Protect PoolStats table from negative values.

Fixes: bug #1188959

Change-Id: I67038734dae5dc29e5c0666fdc98827dfd50b678"
a409d5f943d8e3f59c03f46a0d096b8e3e439b4c,2013-06-11 12:48:57-07:00,"Improve detection of config errors in nvp.ini file

Detect if default params specified in the config file match
what it is returned by NVP.

Fixes bug #1190032

Change-Id: I8084dc938726e050ba82410cbc02a161cc0aa17f"
da6816c6c703be68f5a0ce537364bc096ec2bd9d,2013-06-12 17:40:34+09:00,"Ensure to remove auto delete ports from OFC in NEC plugin

When deleting a network, dhcp ports are removed automatically
in db_plugin. This causes a failure network deletion since the
corresponding port exists on OFC and the network on OFC cannot
be deleted unless a subnet on the network is deleted explicitly.
This commit gets auto-delete ports and delete the corresponding
ports on the controller before deleting the network.

Fixes bug #1190163

Change-Id: Ifffaa1a28b5fac0b0a98036a926550255cc25c9d"
fa4974fb6710e262e31b0b810923a312b15f991f,2013-06-12 12:48:36-07:00,"Remove wrong reference to object attribute in nvplib

Plus, added negative tests that were not covering the
exception handling bits.

Fixes bug #1189730

Change-Id: I5df914c6b748a03816217336431c2b0b597481b5"
5586fc3973367bc2f702441bf368a6fc2b785670,2013-06-13 20:48:45-04:00,"Remove unit tests that are no longer run.

A long time ago, quantum/tests/unit became the home for all unit
tests, but these ones in the Cisco plugin directory got left
behind. They have suffered bit-rot and need to be removed.

Also:
- Move the fake Nexus driver to new home.
- Filed new bugs to track the task of improving unit test coverage of
  Cisco plugin code.

Fixes: bug #1174311
Change-Id: I372e24aebbe1804e5b6ce62984bfd76b030a44b1"
f698bbf1ae1227ca7750d6cb63a137f3789435ca,2013-06-16 13:03:56+00:00,"Update to the latest stevedore

Use a version of stevedore that does not try to
install distribute.

The requirements change is in https://review.openstack.org/#/c/32738/

Change-Id: If39d886cb68044871617600650ef8546635143bc"
0b2d1ac2356b250054f993a7eab30107a08bb3ea,2013-06-17 11:47:55+09:00,"Correct log message in l3_rpc_agent_api

Fixes bug #1191623

Change-Id: Ib692a62d6f557ab9a50da1d888e291e3e24871fb"
531ff2fb34df9e6b0f84ada811c29240f0f1cd48,2013-06-17 10:51:32+04:00,"Fix IP spoofing filter blocking all packets.

Implement IP spoofing filter by adding yet another chain to iptables
with RETURN rule for each of IP addresses assigned to port and DROP
rule at the end of the chain.

Fixes: bug #1190613
Change-Id: I2e7a0f8dd4c3519c57d28e87a44735a3482624b1"
fd7223bcd4709fcaaf103fb5f0f14e90ca3f00d7,2013-06-18 21:05:30+01:00,"Allow use of lowercase section names in conf files

Fixes bug #1189889

oslo.config-1.2.0 normalizes section names in config files to lowercase.
This means that simply by upgrading to oslo.config-1.2.0, users will now
be able to do e.g.

  [default_servicetype]
  description = ...
  service_definition = ...

Change the default config files to make it clear we recommend the use of
lowercase section names.

Note, the use of an alpha tarball of oslo.config requires pbr>=0.5.15
but we already require >=0.5.16.

DocImpact

Change-Id: Ia47fb3d168da71d3221b25979f8c9257d70dd64d"
f392263ae8c89412ec8be6a13b3dd56abd129a8c,2013-06-18 13:25:25-07:00,"Always include tenant_id in port delete request

Quantum does not include the tenant_id in port objects for floating IP addresses.
However, the Big Switch backend requires the tenant_id in the port removal requests.
This looks up the correct tenant_id whenever it is missing in the port removal.

Change-Id: I7580ed2f545ad2d92b831b65dfbb34541bf465aa
Fixes: bug #1190020"
381cb1c4e4b5122a8afae67ad4cbeebcb39cbf83,2013-06-19 02:00:27-04:00,"Fix TestNecAgentMain not to call sys.exit()

test_main() was calling sys.exit() killing test running
and not allowing tests to complete in a proper way.

Drop explicit sys.exit() call from net agent's main() and
fix outdated mocks in test_main().

Fixes bug #1192270

Change-Id: Iea8d5508f73eb9144e452de3305f2dec4c2a319c"
5dd0cf15463e181b92c8809c2dcc7603bb156a0e,2013-06-19 15:32:35+00:00,"Adds default route to DHCP namespace for upstream name resolution.

Any time the DHCP server is updated this code will maintain a default
route in the DHCP namespace using the gateway_ip attribute of the
first DHCP-enabled IPV4 subnet in the list of subnets where gateway_ip
is not None.  This strategy uses the same gateway ip that the DHCP
server hands to the VMs on the network.

Change-Id: I0807550a848e1b610c7775d215643ad9c83629ed
Fixes: Bug #1181378"
8eea1ae574671a157ae2d215f18635a3c8985a06,2013-06-19 14:23:49-07:00,"Make sure exceptions during policy checks are logged.

If the invocation of f bombs out, the policy check fails (i.e. returns
False), however it does not log the root cause, which makes very
difficult to understand why this is happening.

Fixes bug #1191948

Change-Id: Ic40053f3965b71199baf9fe3902e8ffc9745076f"
95dbd03a0bc4867bf8520539ed08f4068adf2f33,2013-06-20 11:04:40+00:00,"replace use of dhcp_lease_time with dhcp_lease_duration

Having 2 separate dhcp lease period flags (dhcp_lease_duration
used by the quantum db plugin, and dhcp_lease_time used by the
dnsmasq dhcp agent) means that you could potentially have different
lease periods being set, and used by different parts of the codebase.

It seems to me there is no real need to have 2 separate flags, so this
commit basically replaces references to dhcp_lease_time (which is used
by the dnsmasq dhcpagent) with dhcp_lease_duration. This way, there
is only one flag to set, and both the quantum db plugin and dnsmasq
dhcp agent will use the same lease period.

Change-Id: Ia99dfa9284b6e737144f61a80c59cd898c0949bb
Fixes: bug #1192550"
c86d8fcf6b823f6c6bfdfa44017af5a0e584a12e,2013-06-24 15:06:35-07:00,"Converts 'router' section to lowercase in bigswitch config

The restproxy.ini file contained an uppercase section
which is converted to lowercase by this patch to match
existing naming conventions.

Change-Id: Ib8eb69406cae3898c4c9f3fd106f8c7ffef06f01
Fixes: bug #1194296"
f03d91b850b1ef5976c110e5b14cdd0a9ef21e19,2013-06-26 16:20:11+02:00,"Add support for moving ip/addresss/default gateway

Add support from moving ip/addresss/default gateway from physical interface
which is going to be attached to bridge to bridge device itself.

Fixes: bug #1192122

Change-Id: I8a8bf5edc17a87dcb747626dd1d6817ac48cb20d"
74419faacf93a5e22ff6bd3f033a7fbd1c99a223,2013-06-28 08:20:40+08:00,"move database config items into quantum.conf

Bug #1194784

This patch syncs all the DB configuration items into
quantum.conf and removes the related items of plugins' config
file to avoid duplication.

sqlite related sqlite_db and sqlite_synchronous are defined
in 'default' section, which I think is a defect. And it seems
quantum does not use sqlite_db item.

Change-Id: Ia47102ced0e4169f45f10b85311f298d8c026d31"
364e97b44158976dca923bcf9ff5dff926da5dc4,2013-06-28 17:55:41+00:00,"faster quantum-openvswitch-agent periodic reports

One of two patches that fixes bug #1194438.

Instead of spawning ovs-vsctl for every port on br-int, we just dump the
required columns from the Interfaces table and grab the rows that we need. This
is a big win because the time it takes for ovs-vsctl to connect to the
openvswitch controller is orders of magnitude greater than the time it takes to
parse the rows. In practice, instead of taking roughly 1s per interface, the
agent's periodic task only takes 1s in total.

Change-Id: Idbf32c38e0c4a9c9634c1e4f0e79bd556b720493"
bc4c382f115c50fae1e00a64ec12869a29e34460,2013-06-28 16:11:40-07:00,"Support a timeout argument when instantiating a bigswitch plugin

The timeout argument overwrites the timeout value set in the config file.
The change permits any standalone script to interact with the bigswitch controller
through the quantum plugin with customized timeout value without changing the plugin
behavior.

Fixes: bug #1195923
Change-Id: I17954e70d661e7e7d5156c34c08b7c96bb3203ce"
21fd100a98c152086193607cd311c2ee03b82643,2013-06-29 03:27:14+00:00,"Update code to properly use dict returned from get_gateway.

Calling get_gateway was a late addition to my code to add a default
route in the DHCP namespace.  The code did not properly handle the
dict returned from that method.  This changes it to properly extract
the 'gateway' attribute from the dict.

Change-Id: I9823a31feee7ab333c277fc6e78f366408393155
Fixes: Bug #1195543"
a87a7c2ad0909c28f3d9d62a13cec59ee4d2e0e6,2013-06-29 00:26:29-07:00,"Fix case with no host_id in BigSwitch plugin

This correctly checks for the case where nova does not
provide the host_id in port creation/updates.

Fixes: bug #1195903
Change-Id: Ic0d714a3977810c6b1144c1e25488f75cc95d0f0"
c0dfe919251ea759f88faf4376741a98132bf8a1,2013-07-03 17:19:17-04:00,"Remove unused database table from Cisco plugin

Fixes: bug #1197053
Change-Id: If0a9198046498cb559353dc9f1b3820b5e01cb7c"
875b7bbcbe093283bfdf6573f1c7d15ef3d60130,2013-07-04 16:54:46+09:00,"Fix unit test for ryu-agent

Fixes bug #1197670

This patch fixes programming error in the unit test for ryu-agent.
- Change the way of patch to cfg of ryu-agent
- Fix typo
 s/assert_calls/assert_has_calls/

Change-Id: I9a5a17f314eb9c786338463e077cadc32d846dba"
53a66b299f18a7184972502b43441a5ad7b050fd,2013-07-07 21:26:59+08:00,"validate and recommend the cidr

Bug #1195974

It is hard to validate the CIDR typed in by user,
the simple way is to recognize only one and recommend it
if user's input is not the one.

Change-Id: Ic8defe30a43a5ae69c3f737094f866b36bb68f59"
1f4e8a3ccfc4db56823ae756b707b94e19236233,2013-07-08 10:14:26+08:00,"Apply Oslo ModelBase to NeutronBase

Oslo.db has ModelBase which implements most of NeutronBase's code.
Therefore NeutronBase should inherit from ModelBase to keep things DRY.

Fixes bug #1171055

Change-Id: I1a08636a6aa225da8b5d43a0bbcb9b59c057df42"
c4d423ef6132609d27752ce03f0a68182f31716d,2013-07-09 17:54:09+00:00,"Fix for Cisco plugin sample config.

This commit fixes the Cisco plugin's sample config included with Neutron to change all instances
of quantum within the config to neutron.

Change-Id: I80a8b69816ad964ee9761a214aaa5e81e596d501
Fixes: Bug #1199160"
34b8ee5d5985d05b8e7cfa3f4500c11030814b7d,2013-07-09 14:08:21-04:00,"Ensure that the neutron server is properly monkey patched

The legacy 'quantum-server' script will apply the eventlet
monkey patch whereas the new 'neutron-server' entry point
does not.  This prevents the server from properly handling
the REST interface.

Fixes bug #1199383

Change-Id: I498d2b02e6018425fc4538eff6803df8971f8e82"
40a5853970cdd1555dfb5ebce81c6babf2e445da,2013-07-09 19:14:08-07:00,"Allow gateway address to be unset for an existing subnet

Validation of the gateway IP address was taken place even
if the gateway IP was set to None; this was causing an
AddrFormatError exception to be raised by method
'_validate_gw_out_of_pools'. With this change we skip
the validation in case the gateway is set to None.

Fixes bug #1178273

Change-Id: Ib84378a4fd2cefdbbcacce695abbfaf82c647dd3"
b9900c2334abf5e4b1ad09ee24ed88184c085349,2013-07-10 18:07:32+08:00,"port-update fails when using SELECT FOR UPDATE lock

In Postgresql, it will throw the bellow exception when
using SELECT FOR UPDATE lock combined with outer join.
""SELECT FOR UPDATE/SHARE cannot be applied to the
 nullable side of an outer join""

The reason can refer http://www.postgresql.org/ \
message-id/21634.1160151923@sss.pgh.pa.us

for this issue, I don't think outer join is necessary，
so I change it to use inner join.

Fixes bug #1191653

Change-Id: Ifc9ecad91324ce28399431ea77fe0865b6d8e523"
34798f3a1e3a910eac553c4eb87e5ffedd74fac1,2013-07-10 18:16:03-07:00,"Initial Modular L2 Mechanism Driver implementation.

Define the Mechanism Driver interface for create/update/delete
operations on networks and ports. For each of these event, the
Mechanism Driver provides one method that is called within the
database transaction of the ml2 plugin method, and one that is called
after the transaction is completed.

Support for mechanism drivers is still a work-in-progress, and the
interface is subject to change in future versions before the release
of Havana. However this initial version should be sufficient to enable
others to start defining their own mechanism drivers.

Change-Id: Ife30215589792ee27df9897d3b2bc04392638266
Implements: blueprint ml2-mechanism-drivers
Fixes: bug #1199977
Fixes: bug #1199978
DocImpact"
1353b995b31f3d8e8aa2a24a70f034b91c9e17d1,2013-07-11 15:17:55+09:00,"Ensure a name of packet filter is stored in NEC plugin

This patch fixes NEC Plugin to handle a name of packet filter and added
""name"" column into PacketFilter table.

Fixes: bug #1198223
Change-Id: Ic191b2793653b41496922f2fa4be4f410d71dc64"
f8e3a5e5877f6099acaa9b8a734df5cb78f3b4ec,2013-07-11 12:05:41+02:00,"Be compatible with oslo.config 1.2.0a3+

The private API of oslo.config changed, and the Cisco
options parsing code was using it.
Use an explicit MultiConfigParser instance for parsing
the config files.

Fixes LP Bug #1196084

Change-Id: I7ffcac3c295491fe9ba8abc7e98f33157a48c51b"
79e4c3e7584d131e51236f438aaa15350847f9d8,2013-07-11 18:22:17+00:00,"Quiet down a large log file heavy hitter.

This line of code serialized the python structure for the device and throws it
at the log file.  The string is about 90K characters, isn't very useful and we
found that it takes a very large amount of space in the log file causing them
to grow very quickly and fill our log disk.  This change extracts the device
name (e.g.  ""tapcdc07af9-8a"") and uses that in the log message.

Change-Id: I240eb811445752407583f0fb322ce061acb293b9
Fixes: Bug #1200321"
7d2588935086e7afce6969ff1f44239473af9953,2013-07-11 20:17:04+01:00,"Fix issue with pip installing oslo.config-1.2.0

Fixes bug #1194807

Firstly, we update the oslo.config dep to 1.2.0a3 because of the issue
with namespace packages (bug #1194742).

But the main issue here is that if you currently do:

  $> pip install -r quantum/requirements.txt

then you end up with the oslo.config 1.1.1 code installed. This is
because oslo.config>=1.1.0 gets pulled in as a transitive dep and pip
gets confused. You can reproduce with e.g.

  $> pip install \
       http://.../oslo.config-1.2.0a3.tar.gz#egg=oslo.config-1.2.0a3 \
       python-keystoneclient
  $> pip freeze | grep oslo.config
  oslo.config-1.2.0a3
  $> python -c 'from oslo.config.cfg import DeprecatedOpt'
  Traceback (most recent call last):
    File ""<string>"", line 1, in <module>
  ImportError: cannot import name DeprecatedOpt

This is because of a bug with pip where it sees oslo.config-1.2.0a3 and
oslo.config as two unrelated things. It should strip the version part of
the egg= fragment before using it as a package name, but it doesn't.

However, we can simply use the -f/--find-links pip option in our
requirements.txt to add the tarball URL to the list of URLs considered
and also add the oslo.config>=1.2.0a3 dependency:

  $> pip install \
       -f http://.../oslo.config-1.2.0a3.tar.gz#egg=oslo.config-1.2.0a3 \
       'oslo.config>=1.2.0a3' \
       python-keystoneclient
  $> pip freeze | grep oslo.config
  oslo.config-1.2.0a3
  $> python -c 'from oslo.config.cfg import DeprecatedOpt'

This is actually exactly the semantics we want and we go to great
lengths in pbr to get these semantics while using a single tarball URL.
The only downside to this --find-links strategy is that we gain an extra
line in our requirements.txt ... but it does work around the pip bug.

Change-Id: I6f3eb5fd2c75615d9a1cae172aed859b36b27d4c"
5b4ef2a513bc7c8d2a2eecb57f656bf42bb0dd52,2013-07-11 15:45:59-07:00,"Add option to ignore backend HTTP error in BigSwitch plugin

This patch fixes the way the BigSwitch plugin ignores 404
errors from the backend controller by allowing HTTP codes
to be selectively ignored on REST calls. This prevents
unnecessary exception handling and failover logic in calls
where 404 codes are acceptable.

Change-Id: Ia1118c039af3b45d96fb3f8a5fb5d3febdf50f4f
Fixes: bug #1200023"
4a01e35f3f190fe0cef13b2cf81e561e7285dd49,2013-07-13 09:37:11+08:00,"rename quantum into neutron

Bug #1200474

Change-Id: Ib83e58008fc53b57c4063057ce4c5707b55f0ff2"
47381ff70a9be29a1a3d853c4ff84f51a8c8618b,2013-07-13 15:35:22+08:00,"Enable logging before using it

Bug #1200530

Change-Id: I086353c93fae0f6ec74d16a485c215c1b3815ee6"
341586e47b731d6586be39f6bf96c28ae530d4b4,2013-07-13 17:22:45+00:00,"Modify the OVS agent to support multiple tunnel_types concurrently.

This change modifies the ""tunnel_type"" configuration option to be a ListOpt
instead of a StrOpt. This is intended to allow the agent to work in an ML2
environment where multiple, disparate ""tunnel_types"" are supported at the
same time. For now, the agent will enforce a single ""tunnel_type"".

Fixes bug #1191089

Change-Id: Ic025e54a8a3e92fe1fe44ebf08d71c2210c7d82b"
933498e861a91724c6c0d8efddde80ec00fdc47e,2013-07-13 16:55:55-04:00,"Rename to Neutron in sample init.d script

Related to LP Bug #1199794

Change-Id: I809a4d6c8e2ab047a1530f3fd6ef9aa60c0c638f"
3732f022778a7c4a47c58029ae77e32a0a4a6ee9,2013-07-13 20:07:48-07:00,"Prevent possible server list damage in BigSwitch plugin

The old failover logic for the BigSwitch plugin modified a
list of controllers as it tested them. If the code for one
thread unexpectedly raised an exception or died, the global
server list could lose a server permanently.
This patch addresses that by flagging servers as failed instead
so the global server list is never modified.

Fixes: bug #1200022
Change-Id: Id2dcb820ef9f62fd03e3215bff3345e56c78afe2"
dcb94c962ffd7961a6fb9979712ed468175a855e,2013-07-15 14:05:17+08:00,"Use the correct tunnel_type to notify agents

Bug #1201274

Change-Id: I9de55d168ba03cb6a5273b4c2ce140cd190e38ee"
14d393906a554531f1f6bcea02a42fc2e28676cf,2013-07-15 12:56:27-07:00,"Fix random OverflowError exceptions in gate-neutron-python26 tests

These errors seem to be linked to the NEC plugin and http connections
not being stubbed out correctly. This patch ensures do_request is
stubbed out prior to the tests execution; this should be enough
to prevent timeouts from occurring again. Stubbing out the call has
no effect on the coverage of the agent scheduler tests for the NEC
plugin.

Fixes bug #1201478

Change-Id: Iee3cb3cb3137cedcf97c707ea7fde9114b7264b6"
aa3e64f9125e4c41de90213b75b2826bfd663527,2013-07-16 23:15:17+08:00,"modernize quantum config in proper place

Bug #1200558

At the beginning, we have not registered some configuration
items. To modernize these items, we must do it after we register
them.

Change-Id: I90d2cdbe97daa2ec0a8c8b6c9686b6f76c4de9e4"
de1967452e935e8d78255c448715a588d19ae838,2013-07-16 23:22:17-04:00,"Fix argument name mismatch in L3-RPC sync_routers

In sync_routers L3-RPC method l3-agent sends router_ids but the
server side expected router_id. This commit fixes the server side
to accept router_ids, and drops ""fullsync"" arg from the agent side
(fullsync is not used anywhere and it does not affect RPC signature).
This change allows l3-agent to sync only the specified routers
instead of all routers.

Fixes bug #1201553

As a result of the above change, auto_schedule_routers() and
list_active_sync_routers_on_active_l3_agent() in L3 scheduler
needs to handle a list of router IDs. This commit changes L3 scheduler
to accept a list of router IDs in the above two methods.

Also fixes the argument order of fullsync and router_ids in get_routers
in L3PluginApi. L3-agent main code expects router_ids as the second arg.

Change-Id: I22e8d11b9676cbcfe9e72449031bb63071be8314"
95a63d1b701b5b0c7fe731bf170ccd4f22de9fa6,2013-07-18 16:50:03+09:00,"Fixes Opt type of ""topologyname""

Changed topologyname from IntOpt to StrOpt

Fixes bug #1202538

Change-Id: I8cabf1868d5eac04dd31271932d5c4fadae78935"
a1e483d049a104a8475febc828107c4b323f6def,2013-07-18 08:02:58-07:00,"Add support for the agent extension to NVP Plugin.

Of DHCP and L3 agents, NVP uses DHCP; This patch adds support
for the extension to this plugin.

This patch also moves some tests around, as a result of the
refactory done in https://review.openstack.org/#/c/35266/
Some code duplication is also removed.

Implements blueprint nvp-agent-scheduler-extension

Change-Id: I4ca1148e81fdb39bf6b58eef806536439e9f0c6f"
b6d787cdc32445858b1a2e89fd373790103444c2,2013-07-18 17:07:27-04:00,"Cisco plugin check for a valid nexus driver

The Cisco plugin model should check for a valid Nexus driver before performing any
operations on hardware nexus devices.

Change-Id: Ib7760cc7bb24e2c7f6692cbd8274aefa71dc21a1
Fixes: Bug #1202822"
d104fd2e21d3a90e5fe7f94e728df0c6dc4619ff,2013-07-18 17:20:23-07:00,"Allow to clear extra routes from router

Ensure that we can handle None field for routes as no
neutron client has the ability to clear arbitrary
fields.

Some refactoring for the unit tests is done to reduce
duplication.

Fixes bug #1193143

Change-Id: I067e70ee87354e50a5a7d91c383449464bb33eb0"
0f129121a1c8331c702204cf95951444ae53ef9c,2013-07-18 17:55:01-07:00,"Allow to clear extra routes in NVP

Since the neutron client can unset any attribute, ensure
we can handle empty routes as a way to clear the extraroutes
for the router.

Fixes bug #1202890

Change-Id: Ib240a42ba1075d9a410da904b3d3ae9e19b2d86e"
59fe0711dfd551739d5f5f98d05ffaf329467c07,2013-07-19 18:25:20+00:00,"Avoid refreshing firewall rules unnecessarily.

Adds a parameter to refresh_firewall allowing an array of ports to
be passed.  If an array is passed then the firewall will be refreshed
only for those ports.  If not passed, it will still refresh all
ports as it did before.

Change-Id: I539a135dbc3861e31cbb5c69cef0ff8c0f834527
Fixes: Bug #1202328"
c2a829458ddbbb0c8ee4d937cc726416eeb457bc,2013-07-19 15:59:53-07:00,"Add default route to dhcp agent netns.

Remove code block ""if self.conf.enable_metadata_network:"". No need to treat it
differently. Default route will be set as any other network.

Change-Id: I71eaaf46bbd01f577988211b650fdbe3972d1fa0
Fixes: bug #1196889"
a669a910b9a411cdd0e6b3914a214014ed126289,2013-07-21 10:27:54+08:00,"set static route for windows 2003

Fixes: bug #1190108

Change-Id: I97266cf007d2a5d7ca8080d83bdfadd121d0fbeb"
1c8e5f1d3bfd9ced27f0a314538db41e04bc874c,2013-07-23 11:09:45+08:00,"remove ""get_agents"" rule in policy.json

Bug #1200933

keep the current API behaviour due to compatibility
and leave list op authz in new API version.

Change-Id: Ia0a9b8738fa8ffe913d2e2b1ef28232abb18340d"
5808a65fa12be096278f3793909a62bf1d79e82b,2013-07-23 11:56:23-06:00,"Allow OVS default veth MTU to be configured.

In some environments where a packet is dropped when a VLAN tag is
added to the packet, you need to increase the MTU size of veth
interfaces to 1504.

Fixes: bug #1075336
Change-Id: I4f03b4cdc571a462096d419d6dd8324cf096156b"
495fd24fb0a776c207c36d437cb31e0d8807774a,2013-07-24 07:30:54+02:00,"make neutron-ns-metadata-proxy configurable

Introduced a new configuration parameter for DHCP and L3 agent
to be able to set the path of the metadata socket to be used
by neutron-ns-metadata-proxy when started inside the DHCP or L3
agent. Also moved the configuration parameter of the
neutron-ns-metadata-proxy to the CLI parameters.

fixes bug #1202628

Change-Id: I3b1aa72b4e06c00f7fed152f0ee03d52b6bbc279"
85dc410ef8f79366931bc754440039d265f8a6b4,2013-07-24 20:18:23+09:00,"remove netifaces dependency of ryu-agent

Fixes bug #1203663

This patch removes the netifaces dependency.

Change-Id: I0970ca7d8c92fcd1c3dfaded4a9ce6e82b8c033f"
8f81d21ef144f93a9d4f71624d5c0b8b65a1f4d1,2013-07-25 10:01:11-04:00,"Passing the error message as keyword argument

as expected by the base exception class
(OpenstackException) which does not accept
any positional arguments

Fixes: bug #1204321
Change-Id: I320807f6f629fc337a612ad2f9c55ae2c156cfd9"
f81fe3ed5884616255d4eace358ff4dc9fd23ad8,2013-07-25 17:53:12-07:00,"Deal with intermittent OverflowError in gate-neutron-python26

This occurence looks like is related to a failure in
utils.execute. This patch attempts to deal with the error
by mocking out Popen.communicate altogether.

Fixes bug #1202065

Change-Id: I4092efb17939b69dd2d1965aaf619a9b2be03ef4"
bfdf52672c019a7705a53bdb0fe8aba38ef937db,2013-07-25 20:14:06-07:00,"NVP sample config option should match code.

Fixes bug #1205169
Change-Id: I894ce7b2a733127fe2185833f6407c0391eb9e2a"
76fc0addc985195dc6fddd78c9030cc5d24cfe88,2013-07-26 23:04:51+08:00,"refactor port binding codes

Bug #1195047

This patch:
1. removes the iteration in get_ports to call extend_dict_binding
2. uses a unified way for plugins to do this kind of stuff

ml2 will enhance the binding so that it can have different binding
for port according to port's host.
mlnx and bigswitch are also exceptions due to the dynamic binding info.

Change-Id: I5a77eb7395e14482a856e033f536f72a1bf82e06"
c1b1af72e93da37383d6111195bfc8c63cc49fae,2013-07-26 11:58:24-04:00,"ML2 tunnel drivers validate provider networks correctly

there was a copy/paste error in GRE/VXlan type drivers implementation.
the segment wasn't returned while validating the provider network.

Change-Id: I7df6d2e714d09618644f935a9ed41354b62de9d0
Fixes: bug #1202244"
2be27ae096104f9340e7a73a3d519c338c821234,2013-07-26 16:04:49-07:00,"Fix creation of trusted queues for the NVP plugin.

Currently if an admin tries to create a trusted queue, Neutron will
fail with MissingDSCPForTrusted exception. However, the NVP semantic
is exactly the opposite, namely the DSCP field must be specified for
untrusted queues and omitted trusted ones.

Fixes bug #1204256

Change-Id: I935fab45fc811a296411283a641b66c5ca96264d"
f11dbbe748980d3ddcad298b2b8fea579d93f1e0,2013-07-29 13:32:39+08:00,"Sync dhcp agent configuration items

Implements: Bug #1205180

Change-Id: Ic5089087fb6dd7d71740556ab8d3d4d6b82920d1"
e31c9fd3fed661e850fb149bf3005051e3a7c7f8,2013-07-29 14:23:19+00:00,"defer firewall updates to iptables data structures

One of two patches that fixes bug #1194438.

In the iptables firewall driver, each port method (update_port_filter,
prepare_port_filter, remove_port_filter) makes O(N) calls, where
N=len(firewall.ports), to IptablesManager methods that update dozens
of data structures. When the firewall methods are called in sequence,
e.g., by SecurityGroupAgentRpcMixin, the calls to IptablesManager's
methods start to add up.

This patch changes IptablesFirewallDriver to defer and coalesce calls
to IptablesManager. Now a sequence of M port method calls results in
O(N) calls to IptablesManager methods instead of O(N*M) as before.

Change-Id: If17eeaec197beae8b8aecffca1f19d4535a7226e"
49e953a8ef9d552e9c5be1e2e807634c68af5c5f,2013-07-30 22:44:25+09:00,"Make NEC Plugin keep error resources

NEC Plugin used to ignore OFC errors while deleting resources from OFC,
and it could leave some unused resources on OFC. If OFC generates id
which is in remained resources when creating new resource, it will fail.

This commit makes NEC Plugin keep logical resource when it failed to
delete resource from OFC not to leave orphan resource on OFC, and raise
exception to tell the user that the resouce status is Error.

NOTE: The user can retry deletion. If the resouce was successfully
deleted from OFC in retries, the logical resource will be deleted.

Fixes: bug #1206416
Change-Id: Ifea38dfe3fe8b18d7ae1cedf86a23008549250cc"
88dc6ea2eb99aa184eec5873218f3ab491abbfd1,2013-07-31 00:48:53-05:00,"Prompted error message is not correct for PortNotFound

When deleting a non-existing port, the error message would be
""Port XXXX could not be found on network None"" for some plugins.
""network None"" is not correct enough here.

Fixes bug #1203631

Change-Id: Ie5d1ec99a2726ff3fec07f83f83a12d24613ae57"
6b253e0cc3ea6caa28e17b3cd2e5dfd60bbc7bb2,2013-07-31 15:40:45+09:00,"Remove comments from requirements.txt (workaround pbr bug)

Workaround for pbr bug #1191923

Change-Id: I3ab1f5bde70fea3ac30323449b645aef46352f81"
ab1a932872a6ff7821b7723879d6d75ab3b7154f,2013-07-31 23:29:20-07:00,"Followup fixes to FWaaS API patch

Fixes: bug #1206620

This adds the minor fixes which were suggested be fixed
as a followup to the FWaaS API patch.

Change-Id: I8112dcb4f750bb367dcc6464cda7a826b7be811e"
9826e0932596e77414b16b3c4ba237d847b30db1,2013-08-03 00:50:13+08:00,"Fix the alphabetical order in requirement files

Fix the alphabetical order in requirement files,
Bring into correspondence with other project,like
https://github.com/openstack/requirements/blob/ \
master/requirements.txt

Fixes bug #1207823

Change-Id: If70ff2a815343615870e54991aa0d3db3adc5147"
3313448f2de1ce288944af101a794d706fd43abb,2013-08-05 21:31:06+08:00,"Avoid overwrite value of deprecated name in conf.

See bug/1194064 #2 Mark McLoughlin's comment

Fixes: Bug #1194064

Change-Id: I421d2decfa8829796fe7b6c14f954f3cccc17215"
86b660023c1073715940d45e1429323e17ac9ddd,2013-08-06 16:59:04+09:00,"Delete useless and wrong comments in NEC Plugin

This commit deletes useless and wrong comments in NEC Plugin, and adds
_clean_nec_ini() to Cleanup to make sure it is called.

Fixes: bug #1208716
Change-Id: I5c7950617cdf5d66f5f5cf3334bf2d5e617148eb"
f27fba3ad77d907713e3e1cbfa45d33e0135c08b,2013-08-06 17:39:47+09:00,"Make NEC Plugin ignore duplicated messgae from the agent

Fixes: bug #1208708
Change-Id: I7d2b779fd0a7356c03e5ef911a98c164a53903ce"
9b50a25c2817f804b6898f04eccfcebf895e82da,2013-08-06 10:42:02+02:00,"Remove openstack.common.exception usage

This file is deprecated, stop using it.

Change-Id: I5d79b8c0134bb5f4021487542d4d0a964281b8bf
Fixes-Bug: #1208734"
a7d18bbc56e4315e39d4dd82acfb3b058c21d2a6,2013-08-06 21:07:25+09:00,"Make DbPlugin accept status in create_network().

This commit makes NeutronDbPluginV2 get network status from input at
create_network() to allow other plugins to set network status while
creating DB entry.

Now plugins can create network with any status in a single DB commit.
(e.g. Set network status to 'DOWN' when admin_state_up is False.)

This commit also changes NeutronDbPluginV2TestCase() to make default
network status configurable in each plugin test case.

Fixes: bug #1207167
Change-Id: Id3ad26719036c631e4b268150407a2c69919203f"
08112f087ffb221513db2872b6db0726d0c30702,2013-08-06 09:05:17-04:00,"Cisco plugin db code cleanup, part II

Remove an unused table.
Prefix Cisco tablenames with cisco_.
Make full use of neutron model base class.
DRY out the nexusport binding queries.
Follow coding guidelines for imports.
Improve cisco/db/network_db_v2.py test coverage.
Improve cisco/db/nexus_db_v2.py test coverage.

Change-Id: I8ea110de37552176f2d9bcbff4ca3e0b65dfacdc
Closes-bug: #1202687
Partial-bug: #1190619"
7f08e166199ef7b8f74bb9c2d40012ff9b9211dd,2013-08-06 18:36:42+04:00,"LBaaS: pass the complete healthmonitor object to driver

Fixes bug: #1208372

Change-Id: I72198446f4de3907d92fc9c2bbdb403cf2e87341"
967e71c0318606558d866f3853c98e74aa963922,2013-08-06 12:34:25-07:00,"Fix BigSwitch plugin to handle device_id re-use in porttracker code

Updates the BigSwitch port_tracker code to use the sqlalchemy merge method
instead of the add method for the port location tracking code to avoid primary
 key constraint errors if device-ids are moved or re-used

Fixes: bug #1208990
Change-Id: I06065ac888873b00f445d4356b17f084ee38c1ea"
9bc8b9967631064821112b5c7ff3b65fb0b176f6,2013-08-07 20:28:53+09:00,"Fix wrong column name in db migration script of ryu plugin

Fixes bug #1209172

A column name of tunnelkeys table which db migration script of ryu
plugin creates is wrong.
This patch fixes the column name.

Change-Id: Ic3a445ea200111c0d7db93951804e7c4570420f2"
a484fa569e1f3318217fa6738c3e8e25be4a7933,2013-08-07 13:35:23-07:00,"Fix path for the linuxbridge plugin in folsom initial DB structure

Fixes bug# 1209377

Change-Id: I5c543bed1798a93f69951d5c37cbc654cf23b062"
6dcf88f58d994d50a1166e2cd494eb8103e7fb83,2013-08-07 13:43:37-07:00,"Fix two typos in routing table configuration

Fixes bug # 1209389

Change-Id: I56bca9fa8cae9e78d1de980640256bf18fef1787"
5b36603e698b42ad6583ab8fe3aa01c5104f425b,2013-08-08 09:55:49+09:00,"Separate packet filter activation from port operation in NEC Plugin

Fixes: bug #1209422
Change-Id: I5480e0798e64221f2f096732db6584634caddfb1"
724735977e35850313b3d73e74238a08dea370e1,2013-08-08 12:46:18+09:00,"Fix H102, H103 Apache 2.0 license hacking check error

Closes-Bug: #1209070

This commit addresses H102 and H103 hacking check.
  H102  Apache 2.0 license header not found
  H103  Header does not match Apache 2.0 License notice

Also ignores H233 hacking check in tox.ini.
  H233  Python 3.x incompatible use of print operator

Change-Id: I081964bf0b9e21614da2f146bd3ba8d28e211024"
fefad06eabc7fb23ccb3ca1a6093d3460065adc7,2013-08-08 14:24:43-07:00,"Remove unused *AlreadyAttached exceptions

This patch simply removes two exceptions which are not being used.

Closes-Bug: #1210276

Change-Id: I5a3412160f49f6e37f3d9182ce4d4a59b1d7bc09"
c4657c3e01c0daa1386c31b7dd8892d6a6a3ff9b,2013-08-09 06:06:07+08:00,"Ignore pbr*.egg directory

Change-Id: I8a143a20947fef1d1d6a28e53893efe01f49884c
Fixes: Bug #1210306"
9c21ae2c412f87671d80d92b667c6bd68021422d,2013-08-09 08:31:32+08:00,"sync some configuration items with codes

Bug #1210173

Change-Id: I3622a45f0907e49391156322553665845978a551"
6cd3e190c6ef6f5df9b1b101bd45102e44ca8588,2013-08-08 23:10:41-04:00,"Make SubnetMismatchForPort extend BadRequest rather than Conflict

Nova is trying to do a better job of mapping Neutron exceptions and
change I4c087684ef77988e5f463d7f2f50fc2a04f37db0 is trying to map 409 to
the proper nova exception. In looking at what raises a 409 exception in
Neutron, the SubnetMismatchForPort exception seemed like a candidate for
changing from Conflict (409) to BadRequest (400) to ease that mapping.

Note that the only thing currently using this exception is the L3 router
extension when removing a router interface and the 400 response code is
already listed in the API docs as a possible response code:

http://docs.openstack.org/api/openstack-network/2.0/content/router_remove_interface.html

Also note that it's generally OK to change APIs for a more accurate
response code:

https://wiki.openstack.org/wiki/APIChangeGuidelines#Generally_Considered_OK

Related-Bug: #1209446

Change-Id: I4507e1db69d738ec0f943f1b8b1209f269d5aebf"
bffaf03a81b2402b83c62f4effb9dfb7f6588148,2013-08-09 09:48:31-04:00,"Fix broken database migration for Cisco plugin

Remove migration for a table that was never used.
Correct table drop order due to foreignkey dependency.

Closes bug: #1210219

Change-Id: I38bcedf7a84967bea2c1679a6a6ab51a9451b33a"
9aecb8f812ceb544f74526829407503a1c55057d,2013-08-12 13:11:24+02:00,"Add wrap_name param to the iptables_manager class

Use this optional parameter instead
of binary_name to wrap the chain names.

Fixes: bug #1194049
Change-Id: I69b4d9043769703248e19184eaedbdbf7a43d96e"
a4cd43f998e4f0d34be4cca8269a920fbfed1a46,2013-08-12 13:22:35+02:00,"Add missing space in the message produced by @log

Fixes bug: #1211275

Change-Id: I06140058cd4e0819cc9e8879516e54f67f54836d"
04f689daa9df689287891d3505b89e3cfed8cd7a,2013-08-12 23:12:21+09:00,"Fix resource status in NEC Plugin

This commit makes sure that the plugin exposes right status in a
response body, and does not overwrite ERROR status until another
operation to the backend has succeeded.

This commit also changes NEC Plguin to use neutron constants instead of
OperationalStatus defined in this plugin.

Fixes: bug #1211319
Change-Id: Ic61b8e1b9d3f6c2be9567dd5a4606aa6d439c564"
3f4bb0443e96e9b7d04e3e4e77a8bb4e8647e01e,2013-08-12 10:39:55-04:00,"Sync rpc/impl_qpid.py from oslo-incubator.

Fixes bug #1211338 (seen in Neutron, marked in launchpad as oslo
since the bug was in oslo code).

Change-Id: I11971c1213b095979bd4f2e878ea2bcad3ceb617"
50c4972ca533005d787948f7b229b0e0ebe347d9,2013-08-13 09:55:07-04:00,"Revert ""Sync rpc/impl_qpid.py from oslo-incubator.""

This reverts commit 3f4bb0443e96e9b7d04e3e4e77a8bb4e8647e01e.

Fixes LP Bug #1211778.

Change-Id: I254995a1bf5416fb70fbcac28ee399b1373efde7"
9382ee659212285a203550cf60476dd146d27a29,2013-08-13 19:14:38+00:00,"Refactor configuring of floating ips on a router.

This approach to configuring floating ips is stateless and idempotent.
This allows it to handle corner cases, such as reusing a floating ip
address with a different floating ip id in a way that is easier to
understand.

The concept is to wipe the floating ips clean and rebuild them each
time with the following optimizations.  To avoid bad performance in
manipulating iptables, it is called in the context of a call to
defer_apply_on.  To avoid a disruption in network flow a set
difference is use to determine the set of addresses that no longer
belong on the inteface rather than removing them all blindly.

Change-Id: I0cfb58d487b1925e0a0db2a701c5ea3c56a0b2b5
Fixes: Bug #1209011"
93195ef9c6441901823648a7e443dc0d82491ba4,2013-08-14 00:53:36-07:00,"Restore Babel to requirements.txt

Babel is needed by code synced in from oslo-incubator, namely
neutron.openstack.common.gettextutils.

Fixes bug #1212135

Change-Id: I7f490fb8cf9a4fcba1711cf464f934d60d6d435e"
2786a6cafa6edaf5438a3dacf54b160d8a733e7b,2013-08-14 14:05:15-07:00,"Mock os.makdirs to avoid directory creation in unit tests

The directory 'dhcp' under neutron state path should not be
created during unit tests. This patch mocks up calls to
os.makedirs and ensures that methods that rely on it, like
_populate_network_cache, are mocked as well.

Fixes bug #1211952

Change-Id: I83998d4e631b1ebeab90b4c3c0276aa2ffe22c50"
5db010a9a737356e426e6f2e10c8fcafb36c533c,2013-08-15 10:50:34+02:00,"Unify exception thrown in l3-agent-scheduler fails

Since you can only attach a single l3 agent to a router, when you try
to add another l3 agent to a router that already have one, the l3
agent scheduler raises an exception.

This fix removes the discrimination by id: either it is the same agent
or another one, the router can not be hosted and the same exception is
raised.

Change-Id: If832bbd4bf17e4e0c4720172aded4c9fffedc6fc
Fixes: bug #1154622"
ad9eefdae75b87a9bb4aef563bc359c1d5a939e7,2013-08-15 10:45:10-07:00,"Include PLUMgrid plugin in some alembic migration files

Fixes bug# 1210348

Change-Id: I8d33d2c8f0849afdd3ebda5297b4064858132c9b"
e1165ce1180bba1a11098cfacfe3c722a084dbcf,2013-08-15 22:58:14+03:00,"Fixes Windows setup dependency bug

Fixes bug: #1212385

The neutron project includes a setup hook that allows to dinamically
include setup dependencies.

Due to recent changes in the pbr project, the hook raises an exception
on Windows, which ends the setup process.

This fix solves the issue by adapting the hook to the recent pbr changes.

Change-Id: I4b00d74d23a7167a10ba86458943ff16ca51b0db"
7abd09ba639180a177cb5fd7673e59084d06c4fc,2013-08-16 09:02:24+08:00,"Fixes typos in midonet_lib.py

Fixes bug #1212898

Change-Id: I688de064947b0079153bd3c5e5376e8b16a7d5c1"
08e45107467fbf0ceb487ed0aebc55dc98a6da7d,2013-08-16 10:19:59-04:00,"Fix case error in qpid exchange name.  s/Direct/direct/

Fixes bug #1211338

(This is a minimal merge of just oslo-incubator bec54ac5 and
no other oslo changes.)

Change-Id: I129f9486f13be91868824e0e0534c4760d50589b"
33591a37f6808d4a21253aea46a89a8293a66fd3,2013-08-16 14:00:44-07:00,"Ensure nvp resources are tagged with an up-to-date version of Neutron

This is made possible by using version.version_info

Fixes bug #1213242

Change-Id: Iad75f7c6f6c045a2f473388529174cf02f413899"
b719f21cd9112578aa2bcb1304fdf4d3dfa90e73,2013-08-18 14:26:36+08:00,"Fix wrong example in HACKING.rst

Example of Human Alphabetical Order Examples section in HACKING.rst
is wrong, this patch fixes it to the right order.

Closes-Bug: #1213568

Change-Id: Ib7f8baf20c437c3fa776201998c36f33bdde2f78"
71f2184c617123b90f8e911056f23e3346c7c592,2013-08-18 08:38:14-07:00,"Set BigSwitch plugin to use existing host database model

The BigSwitch plugin had a data model duplicating one
that was recently added into the base portbindings db
file. This patch removes the BigSwitch model and
updates the BigSwitch plugin to reference the plugin-
agnostic model.

Fixes: bug #1211641
Change-Id: I1fdbf8690e71fb2d6e9d6a6dbd0571fa2c32a7e0"
71ecc6ba46433999cf6b6c346670337b875832a0,2013-08-19 08:42:37+02:00,"Enable SNAT by default in L3 agents

If ext-gw-mode extension isn't supported by plugin, it won't
return enable_snat param in router info. Agent will currently
default to enable_snat = false, which changes from expected
default behaviour prior to ext-gw-mode introduction.

This patch changes L3 agent to enable SNAT by default if plugin
doesn't support ext-gw-mode extension.

Change-Id: I35e8f8c20392bff9ac2f875f2c9a1038ab06ad7b
Closes-Bug: #1212868"
2ad940f376cf06d7e594dcd45516cb9510aa54a1,2013-08-19 05:36:24-07:00,"Syslog support for neutron metadata proxy

When neutron metadata proxy reads the cli args
which are propagated from its parent processes
(l3-agent and dhcp-agent), if log-dir and log-file
are not defined in the context, it will also
double-check whether syslog is enabled and
its facility in the user-defined configuration
files (/etc/neutron).
As a result, the log behavior of each neutron
component becomes consistent.
File log is the default logging function. The syslog
is enabled when use_syslog is explicitly defined and
file log options are all disabled.

Fixes: bug #1184500
Change-Id: I7804fa8794071d21513e068d084607691215522f"
e52b5e8e98dd640c69d009a3d5546a479e394d81,2013-08-19 22:54:51+08:00,"Fix typos and code style check

In neutron/api/extensions.py, there are some typos, no needed blank
lines and docstrings can be improved (according to HACKING.rst).

Closes-Bug: #1213541

Change-Id: I01087d133e1b2a7e69f0bcc2ae359a3a2042b1dc"
62040d03b3b7f02ff7f67ed08e0dc867eef183dc,2013-08-19 20:21:40+02:00,"Add ext-gw-mode support to ML2

Closes-Bug: #1212772

ML2 doesn't support ext-gw-mode, resulting in L3 agents not
setting-up NAT rules in neutron routers (currently, l3 agents
will assume enable_snat=false if plugin doesn't provide this
parameter as described in bug 1212868)

This patchset adds the support of ext-gw-mode to ML2 plugin.

In order to support ext-gw-mode alembic migration (as well as
other potential migrations on plugin dbs), folsom_initial
migration script is fixed to include ML2 plugin. Otherwise
databases won't be set-up during migration script (but at
plugin startup by sqlalchemy), resulting in migration failures.

Change-Id: I95ec18e0a4f0e5b661f3a5d679c434f18f100fa6"
44208638bcf230cd4db12aa8aa5e7c04640a1aa4,2013-08-20 13:26:17-04:00,"Add missing ForeignKeyConstraint to Cisco providernet migration

Change-Id: Ieb6126fe80f71a5c44434861d65b6a1c97957eed
Closes-Bug: #1214497"
d46e3cd59c374b01ff379e63c18cbb16e340fb98,2013-08-20 19:16:22+00:00,"Use system locale when Accept-Language header is not provided

Remove en_US as the default language when no header is provided, and use
None instead. Upon translation None will be defaulted to system as it
was before the translation changes.

Fixes bug: #1214476

Change-Id: I0fe22c526710e69ae0731e7d0b42170e6f3a8523"
6b0c899d36d5a98963342e9cffb351fc3a1f4fd2,2013-08-21 17:02:27+08:00,"Use subnet id instead of wrong built-in id()

In _validate_subnet(), built-in id() is used as param for exceptions,
this patch fixes it via using proper subnet id.

Closes-Bug: #1213930

Change-Id: I9a88f4dc7b771047f4061fb94ba65f0515afa745"
0ec5a89360816df570ced3e5f990aa1cee429170,2013-08-22 01:19:30+08:00,"Fix auth_url in metadata_agent.ini

Closes-Bug: #1214921

The value of auth_url is incorrect, some operators may not change
that value and problem will occur. According to keystone, 35357 is
the port number which the public admin listens on, 5000 should be
used for neutron instead.

Change-Id: I0b35f25c1845d02f8b9b3cd8c759920d52003c0c"
a8c064ed322bf92a867a42b99a5b94cfef137a3d,2013-08-21 17:00:38-07:00,"Fix 500 error on invalid security-group-rule creation for NVP

Validate that, when creating rules specifying a protocol different
from TCP, UDP, ICMP and ICMPv6, no port (range) is specified because
NVP does not like it.

The extra validation is specific to the NVP plugin because other
plugins may choose a different failure mode. For example, the ovs
plugin does not complain at all, but it just ignores the port range
if the protocol is not a port-oriented one.

Fixes bug #1213293

Change-Id: I46e9032b5cf7f7d88b9d05c3bf020784b04217d9"
c06550e6fe3effc76587ef5b040d27714914f1ca,2013-08-22 11:36:58+09:00,"Disallow non-admin to specify binding:profile

Change-Id: Iefa4b251f3b0a373fb9b2b7d576e14d58afece59
Fixes-Bug: #1214873"
e0f78bf02569de81d37cb90b3b1836a9889cc8c6,2013-08-22 12:14:26+08:00,"Add metadata_proxy_socket into configuration files

Change-Id: I76856c2f804be92fa8cc667b4653d2e5e58e422a
Fixes: Bug #1215261"
a369f9e39691c01a4e4f7f8668cb37fc17ba03b3,2013-08-22 18:06:16+02:00,"Enable GRE and VXLAN with the same ID

Current packet processing in br-tun is based on tun-id,
as a consequence, two networks using different tunnel
types but sharing the same tun-id would not be properly isolated.

To ensure proper isolation within a single bridge, NORMAL action
can't be used any more as it floods unknown unicasts on all
bridges ports. It is replaced by a learn action that dynamically
sets-up flows when packets are recieved from tunnel ports. As mac
address are learnt in explicit flows (in table 20), we can use a
default action in that table to flood unknown unicasts to the
right set of ports, like broadcasts and multicasts packets.

See https://wiki.openstack.org/wiki/Ovs-flow-logic for a more
detailled explanation of the flow logic

Another alternative could have been to use distinct bridges for
each tunnel type (whithout modifying the current flow logic),
but previous alternative may be preferable as it paves the way
for new tunneling optimisations (like RPC based mac learning and
partial-mesh flooding proposed in bp/l2-population)

Change-Id: I1dfe74f96680c2c6fe4d8d4aac4821c6b020c005
Closes-Bug: #1196963"
0d2402b3fe8109160515f9b00dcdce3c35b8584e,2013-08-22 13:12:15-07:00,"Deal with 501 errors from NVP correctly

This is done by adding the error code to the exception
handlers dictionary as done for other error codes.

Fixes bug #1215583

Change-Id: Ic876c6bccaf94cae626dfc908c4a34dfbcead406"
69dd72931fd09f346f4a3e455bf9ec28f5639369,2013-08-23 14:50:15-07:00,"BigSwitch plugin - add portbinding info in requests to controller

Include portbinding info in requests to controller so it receives
information about the compute node like the VIF type and the host
ID. Also includes better debug output on back-end failures.

Fixes: bug #1216061
Change-Id: Ib85c8a088ee9fb94baaf8f28849b318b32d9d672"
fbd55e7dbd1c4ca2a1fc33b1ec5f54a484bda691,2013-08-27 08:27:04+08:00,"Remove trailing comma

Closes-Bug: #1217135

There are trailing commas in default value of some options, uncomment
them will cause CRITICAL error for neutron-server. These sample config
may mislead operators, so this patch fix them to the correct format.

Change-Id: Ie0b7626aade653b761257eb2bf397cb3cc5a961e"
209c0e0a0d92199ce44f8c787c2582aa41fb27d7,2013-08-27 02:16:42-07:00,"Add extra_dhcp_opt extension to BigSwitch/Floodlight plugin

Adds support for the DHCP options extenion to the
BigSwitch/Floodlight plugin.

Fixes: bug #1206655
Change-Id: Ida30ca44ecbb9d1208303e47519427a4111f6025"
811a23275da1d35b6ea7dce81ea3d6ac219f42b9,2013-08-27 17:47:07-04:00,"Fix incorrect usage of assertTrue()

The usage of assertTrue() is incorrect, more explicit assert
from the unit test suite(like assertIsNotNone or assertIn)
should be used instead.

Fixes: bug #1217028
Change-Id: I30a80bc9e122d28c22b698e0cb97068c1040bfc3
Signed-off-by: Rosario Di Somma <rosario.disomma@dreamhost.com>"
7753ce5fc3e489857e785dac08c951d32050f8d5,2013-08-29 13:46:04+08:00,"Use assertEqual instead of assertEquals

Closes-Bug: #1218185

For unittest, assertEquals is deprecated in py3, use assertEqual
instead.

Change-Id: Ia71b51a0f2625aec5fb4644853a79c2ea80a799c"
55bfb412f1732e97da76f1b34e581d2429df38e6,2013-08-29 21:13:13+09:00,"Load tables of service plugins when migration auto generation

When we run ""neutron-db-manage revision --autogenerate"", it detects
table deletion of service plugins even when they are configured.
We need to load tables of service plugins to teach alembic such
tables exist.

Change-Id: I9186d36496069c8253683bd200326b80a6565fa6
Closes-Bug: #1218338"
3ba80960075bf7873e96914f1be54ae176069a8d,2013-08-30 05:38:54+08:00,"Fix unsuitable assertTrue/assertFalse in api ut

Some usages of assertTrue()/assertFalse() are incorrect, improve
them to more explicit assert from the unit test suite.

Closes-Bug: #1218621
Change-Id: I22be2af05f06e91020dbaa4cf08bf395d68f563b"
0b703922e380438452b7fddf8ddff9392cb0d1cd,2013-08-30 22:37:38+02:00,"Add missing match in OVS agent tunnel mac leaning

Learned flows introduced in commit a369f9e39691c01a4e4f7f8668cb37fc17ba03b3
to learn remote mac addresses on tunnels currently only match local VLAN,
but not destination mac address, as a consequence, connectivity may be
erratic as soon as more than two agents are used

Change-Id: I467e47d0dd2c1e5aca12a4e240e348116d530d4f
Closes-Bug: #1219074"
9928edb42da42af3463d4a989a0797be46198908,2013-08-27 05:39:10-07:00,"Refactor BigSwitch error handling to use db rollbacks

This patch adjusts most of the logic handling the
calls to the controller in the BigSwitch/floodlight
plugin to make use of the db rollbacks from
sqlalchemy for free on exceptions. This eliminates
several complex try-except blocks and makes
maintaining db<->controller consistency easier.

Fixes: bug #1215823
Change-Id: Ia636c40e744b3b1c543e891791bf492df4f675d2"
706554ba17e6ca5862625b090bd7616749f3375b,2013-08-27 07:19:31-07:00,"Fix script to build rpm required for L2 OVS agent for XenServer

Use up to date way to retrieve the version info.

Fixes bug #1215619

Change-Id: I7263fd61a8ea407626d2330f7546f4046e803b50"
80df449aa5a4753705b64cb68492508c91efd580,2013-08-27 13:31:18-07:00,"Make Neutron NVP plugin future-versions friendly

This patch enables the plugin to deal correctly with
newer versions of the NVP platform; this is done by
allowing the plugin to fall back to the closest known
version of the NVP platform. This is acceptable behavior
as L2/L3 operations implemented by the platform are most
certainly backward compatible.

This patch also improves test coverage for this part of the
code, which is critical to the correct behavior of the plugin.

Fixes bug #1217479

Change-Id: Ifcce47c6ee2bc2bc96ddfe9298d252700aceca3f"
d6f50e8476feb3c76db485fa033d0b1c22ee024d,2013-08-29 15:18:03-07:00,"Fixes formatting exception from logging in BigSwitch plugin

Corrects the data type expected for the HTTP code that comes
back from the back-end controller in a debug log call.

Closes-Bug: #1220521
Change-Id: Ic71b24c724222ade5e695addf291c6488d665da9"
169729cd114603b355faf5effd08ea660b81551f,2013-08-30 21:42:34+00:00,"Add jump to float-snat chain after clearing snat chain

Clearing the chain in this code eliminates the rule to jump to the
floating-snat chain.  This is the simplest way to get it working
again.

Change-Id: Ic1818e10bd64170b6f0a2f52af8dc0814d7e04e0
Fixes: Bug #1218040"
b63c6f9f839188ade489d77747164b0fec8ab116,2013-09-02 18:58:04+02:00,"Fix DHCP agent to work without extra_dhcp_opt extension

With the introduction of extra_dhcp_opt extension, DHCP agent
stopped serving mac adresses when used in conjunction with a
plugin that doesn't support this extension. This fixes the agent
by not assuming that port dict contains extra_dhcp_opt key.

Closes Bug: #1219893

Change-Id: I5bb52f3092f04c5e332b43cb3a04de05edc29cf5"
34a208d1f3829173815beca81d07b53633a12989,2013-09-03 09:22:22-04:00,"Sync rpc fix from oslo-incubator

Sync the following fix from oslo-incubator:

76972e2 Support a new qpid topology

This includes one other commit, so that the above fix could be brought
over cleanly:

5ff534d Add config for amqp durable/auto_delete queues

Closes-bug: #1178375
Change-Id: I99d6a1771bc3223f86db0132525bf22c271fe862"
d518c8f39ef7b39cf4508c41e163d1cc89a5571d,2013-09-03 14:37:32-07:00,"Adding more unit tests for the FWaaS agent

Change-Id: Ic3de53ed9fa47f6518cbb25dac4ee7782c97bfbb
Fixes: bug #1215771"
70902ad4358fee050a4a8ebbc3ff2aa50278058e,2013-09-04 12:16:18+04:00,"LBaaS: add status of pool-monitor association to the pool return dict

Closes-Bug: #1219692
Change-Id: Icc7ca4a48c43a8462860cdbc42626079bffadc26"
6d1037335bbe969cfbc6d9657c24865ca226c7e9,2013-09-04 18:06:31+04:00,"LBaaS: make haproxy stats parsing more safe

Change-Id: Ic21b310608bb98be29ea50ab7c56ca859a9ed5c0
Closes-Bug: #1220692"
d632b66dc8b701ca777af4335b6505b4c4cd7828,2013-09-05 01:16:52+09:00,"Allow None for binding:profile attribute

We need to pass None in binding:profile to allow an administrator
to clear binding:profile attribute.

Closes-Bug: #1220011

Adds dedicated unit tests to the plugins which uses binding:profile
attribute (Mellanox and NEC plugins at now).

This commit also adds common unit tests for binding:profile to
the common PortBindingTestCase class.
- create_port with binding:profile whose value is None or {}
- update_port with binding:profile whose value is None or {}
- Reject binding:profile from non-admin user

Note that _make_port() in BigSwitch plugin test is updated
to allow passing arg_list() from the base test class.

Fix a bug in NEC plugin that 500 is returned when putting
binding:profile None to a port whose binding:profile is
already None (Closes-Bug: #1220720)

Change-Id: I146afe961cd445a023adc7233588d8034fdb8437"
8b9cc772ea3637513179efb797cfd94e49cdb1c1,2013-09-05 06:14:18+08:00,"Enclose command args in with_venv.sh

Change-Id: I6d2ca2f8fca951fe2d90265da8728438dd7d7567
Closes-Bug: #1220937"
becadd39df087544ac1ce97926cc3014fd286e08,2013-09-05 15:00:37+01:00,"Move declaration of int_br_device_count earlier

_report_state is being called by setup_rpc so int_br_device_count needs
to be initialized earlier. To avoid
AttributeError: object has no attribute 'int_br_device_count'

This wasn't caught by unit tests for 3 separate reason
o The reference to self.int_br_device_count is wrapped in
  except Exception: log / pass
- This reference has been moved outside of the try/except

o Unit tests set report_interval to 0 so the heartbeat wasn't called
  during unit tests.
- now removed

o The function passed into FixedIntervalLoopingCall isn't started
  anyways so wasn't calling self._report_state
- replaced FixedIntervalLoopingCall with a mock that calls the
  function once.

Fixes bug #1221054

Change-Id: I572af4ee017c1f7f016c8f9981ca54d1301442d1"
ee26de1ed22fc67591a7b5465132f78af1f1c0f4,2013-09-06 02:16:13+08:00,"fix conversion type missing

Conversion type is missing in some places which would cause some
unexcepted error. By using 'grep -rn ""%(\w\+)\W""', we could find
all cases of '%(variable_a)' and fix them.

Change-Id: I05cbaac73976c70be8428bf5a2d0017ea7059cb3
Closes-Bug: #1221036"
dc48ac1a9c02c236157347f715190a2b1107ec70,2013-09-05 12:36:10-07:00,"Allow default network and policy profiles

Allow for default network/policy profile to be used if
no network/policy profile is specified during network/port creation
in the Cisco N1KV plugin.

Change-Id: I6120abb5abb9a869eb7310453cf27dd8f72bfd1d
Closes-Bug: #1218588"
edd17eae6ab9101f8d780ced3b01b8eec8c663e1,2013-09-05 14:49:08-07:00,"Hash device_id only if it is longer than the allowed MAX size for NVP

This ensure that a VM uuid stays untouched, avoiding potential
confusion when inspecting NVP port tags. This patch also abstracts
the hashing method out by introducing a device_id_to_vm_id method.
Filtering logic is preserved, and a test has been added to ensure
that. However such a logic is not currently used in the NeutronPlugin
(because of the introduction of async status updates), but it has
been added as utility method to nvplib.

Fixes bug #1215204

Change-Id: Ib96ecae438e30f195c8b45176abc1cf55b4b363f"
902dc88b4c511859f164fed4c4ac8ce0c60b09ee,2013-09-06 16:19:07+08:00,"Replace assertEquals with assertEqual

The method assertEquals has been deprecated since python 2.7.
http://docs.python.org/2/library/unittest.html#deprecated-aliases

Also in Python 3, a deprecated warning is raised when using assertEquals
therefore we should use assertEqual instead.

Fixes bug #1221601

Change-Id: Id502cfbc210c6c3fe0a256d5350e159ffa220141"
0739b2fe827b3beefb5ad81c063cbc4d00525a9d,2013-09-06 17:12:04+08:00,"Fix incorrect NotImplementedError

neutron.common.exceptions doesn't define NotImplementedError, but
some codes still use it. We should use builtin
exceptions.NotImplementedError instead.

Note: this patch also fixes a never run code in nvp.

Closes-Bug: #1221500
Change-Id: I5f367ab5edc1e7fbbc2e4eba5fe36d148d4d062d"
fe92e1efbf7672b33c90b1598b579b88488c0770,2013-09-06 10:42:31+00:00,"Mock midonetclient in test_midonet_lib

Change-Id: Idb4de82c193b2f2589131b06bad04bc858499a21
Closes-bug: #1221674"
155cb48bca9b66fa5188e5c1c63adf696cd6d127,2013-09-07 02:10:57+09:00,"Make neutron.common.log.log print module path

Closes-Bug: #1221663

neutron.common.log.log is useful for logging arguments of a method.
It outputs class name and method name, but module path is not output.
A module path is useful to search the log message.

Change-Id: Ic2903da750cc13980d5cdee153bb079f7d4ee122"
9842dcb34cb79b942391fdab4a00dd790b5e299e,2013-09-08 15:58:12+08:00,"Fix message i18n error

Partial-Bug: #1217100

Using tools/check_i18n.py to scan source directory, and fix most of
the errors.

- Message internationalization
- First letter must be capital
- Using comma instead of percent in LOG.xxx

Note: all extension's description are not touched in this patch,
can be fixed after discussing.
Note: all nicira/check_nvp_config.py print messages are not fixed.

Change-Id: I79ef06fd42f6780beb5019c592662536c2a51864"
e541ca285d5a0f484c886fb28514b84580c3dc02,2013-09-10 14:58:52-07:00,"Adds help text to brocade configuration options

Help text was added to the configuration options defined in the brocade neutron
plugin. This help text should assist users of the brocade plugin. The OSTYPE
configuration option was not used in the plugin and was labeled as such so a
user of the plugin would not worry about the meaning of it.

The example etc file /etc/neutron/plugins/brocade/brocade.ini has been updated
to share the same help values where applicable.

Fixes-Bug: #1157511

Change-Id: Ie068396e77902037a7a0b5334d4dfb0dcdd3575e"
84d73ec5999339919c937687c81de77732886bd4,2013-09-11 05:38:36-07:00,"Don't add neutron metadata_nat_rules if disable metadata proxy

This patchset fixes this issue by adding a condition when adding nat
rules of neutron metadata proxy.

fixes bug #1212168

Change-Id: I99775aad73c49a8df3043690440d214614279a2b"
3555240db39186cd4c47fc54417614252ededb06,2013-09-12 01:04:09+08:00,"Don't need to init testr in run_tests.sh

In run_tests.sh, function init_testr will initialize testr if the
directory .testrepository is not existed. Actually, testr will do
the check before run the test:

In Python package testrepository, setuptools_command.py:Testr.run

68 def run(self):
69     """"""Set up testr repo, then run testr""""""
70     if not os.path.isdir("".testrepository""):
71         self._run_testr(""init"")

So, init_testr can be removed safely.

Fixes Bug #1224285

Change-Id: Ia74d9fff92b8efba9b72e5c7387f761144daa193"
7e2622c2fc89611a34c242792f46572545bcdffb,2013-09-12 18:43:15+00:00,"Enhance exception translation to better handle NeutronExceptions

NeutronExceptions have a 'message' class attribute that holds the
generic error message template, e.g. ""Network %(network)s not found"",
unfortunately, because the names are the same, it was overshadowing the
actual exception instance 'message', e.g. ""Network 1 not found"", after
translation when the exception was serialized to JSON.

This patch puts the exception's actual message in a new field called
'msg' and overwrites NeutronException unicode() so that 'msg' is used
during serialization and we'll get the correct message on the REST API
response.

Fixes bug: #1212882

Change-Id: I3965bffb1c2c2eee0af440d1ecd30ccb3bb958d5"
402a44850ba1783368fb349fafecdeedd9da7fd2,2013-09-13 17:29:30+09:00,"Add new L3 RPC topic support to Ryu plugin

fixes bug #1224796

This patch adds RPC consumer for the new topic for L3 callbacks to
Ryu plugin.

Change-Id: Id9b3af474e65ab4c5b58121e1dcb160f80a71633"
abf2f328e87195e87a03ccdef11d3bd787aec891,2013-09-13 09:26:44+00:00,"Do not apply security groups to logical ports

Security groups rules were applied to logical ports and this caused
Floating IP not to work correctly.
Correct some typo.

Change-Id: I174e60f8eb8a4d00b71fffc127e2d2d36836835d
Closes-Bug: #1221336"
fef1ced9708024604b54e02eebb9eff21996fccb,2013-09-13 07:26:22-07:00,"Allow sharing of firewall rules and policies in policy.json

Updated policy for firewall_policy and firewall_rule to allow sharing
among tenants. Added a new firewall sharing rule to enable this.

Change-Id: I5d4d9f94fb3abffe4d1b03c46fd5b13a8a4a4f09
Fixes: bug #1217103"
644f0c64c9c26523965ebb64f44a4dbcd99ae019,2013-09-13 07:44:40-07:00,"Stop popen patch correctly in test_agent_linux_utils

Fixes bug #1225009

Change-Id: Ic9f3491be2fb7481bbf3fd843a421d66d9248a20"
b94c88f80ac2473ec6a61c26bf0e2843a63456b2,2013-09-13 19:44:22+03:00,"Fixes Hyper-V agent unsopported network_type issue

Fixes an issue when an exception is raised in case of not
supported network types.

Fixes bug: #1224583

Change-Id: I847aa825fbf5b7086c9960c051014cc1d7515f62"
eea6218e425766cefc62757da85b9de058d8e312,2013-09-13 11:34:20-07:00,"Prevent stale DHCP directories for dhcp agent nodes

This change fixes an issue that is most acute in test/dev
environments but that may affect production environments
as well: the presence of DHCP directories that no longer
represent networks that exist in the Neutron DB. This
issue can manifest itself over time if you delete networks
from the Server while the Agent node is down.

Without this fix, at the agent start-up the method
existing_dhcp_networks will return an empty list, and
as a consequence the directories that belong to networks
that have been removed from the server will stay because
the sync logic will not process them as it only looks at
the mismatch between active networks on the agent and
active networks on the server. With the fix instead, we
return *all* existing dhcp networks; if they are meant to
be active, the agent will bring them up, if they no longer
exist on the server, then the agent will dispose of the
resources. The dnsmasq driver will do the right thing when
enabling or disabling the process.

Fixes bug #1195770

Change-Id: I194064a449801713051d01193adc706bcb687c82"
0ff9373de6e11d7040b6b289cb3239a9ee9a924d,2013-09-14 14:26:53+04:00,"Fix haproxy agent unit test to be runnable alone by tox

haproxy agent uses periodic_interval option that can interfere
with the same option declared in neutron/service.py when running
'tox services.loadbalancer'

Change-Id: Ibcc91d603f5f31c7a376e0c735e8bf566198231d
Closes-Bug: #1221726"
31f48f5cd3c616a7646adb3bea86338beea6a737,2013-09-14 13:49:03-07:00,"FWaaS - fix policy association of firewall rule

If an existing firewall rule already associated with a
firewall policy is associated with a different firewall
policy, the new association should fail. The check for
the existing association was not being made, hence the
firewall rule was being removed from the older policy
and being associated with the newer policy (incorrect
behavior). This is being fixed here.

If the association with the newer policy has to be made
the rule should first be removed from the existing policy
association.

Change-Id: I30c41d77e7fde673f0dccbc98e1cd7bd0d7b384f
Closes-Bug: #1223465"
6aa6f5cb5e35e4e3fd50453829b15f48ac064cf8,2013-09-15 03:48:41-07:00,"Using constant error codes instead of hard-coded

Change all hard-coded error codes to be constants
from webob.exc.py in test_db_plugin.py

Fixes bug: #1225614

Change-Id: I9e58bb84afc66293afa56968a745b798bb88bf16"
44fd0f74e5b19593e9d37eaec1f87134003b10f4,2013-09-16 12:55:48+02:00,"_validate_network_tenant_ownership must be less strict

Neutron, currently does a strict validation code
so that for non-shared network the subnets and
ports must belong to the same tenant as the network. In
the case of a ""service VM"" created by
admin user, this function should return thus allowing
admin users to create ports and networks in a tenant
network.

Change-Id: Ied831402d56b98a1323d30eb6a769fd2df5278ee
Closes-Bug: #1221315"
a442aceb6ff3942cd9ea30f89394586ff0140dfe,2013-09-16 15:47:33-05:00,"Fixes hyperv neutron agent test, and removes exit

Fixes test for hyperv neutron agent, and removes
sys.exit from hyperv neutron agent

Fixes: bug #1225509
Change-Id: Icf67c6775b6a25a5223ffa7e2d863c2bc0486c2c"
8d88ee7411d43f148b45d0a145fe32a75765a3ac,2013-09-17 16:36:52+02:00,"Avoid race with udev during ovs agent startup

After taking down the veth link between the physical bridge and the integration
bridge call udevadm settle to wait for any udev events to be completely
processed by the operating system before recreating the veth pair.

Some distributions (e.g. openSUSE) have udev rules installed by default that
call e.g. ifdown <interface> during the remove event. If that is processed
after the ovs agent already brought up the veth pair again the veth pair's
link will be down after the agent completed startup and networking will be
broken for all VM instances.

Change-Id: I95520ea96a9804c5261a0c994bbca137535cc37c
Closes-Bug: #1218556"
276a3b422d54b6976fed8c23ed54bd9bb707e4ff,2013-09-17 13:44:45-07:00,"BigSwitch plugin: allow 'external' keyword in router rules

Allows 'external' keyword in addition to 'any' keyword
in BigSwitch router rules support.

Closes-Bug: #1226814
Change-Id: Ia92513e89b0c95c5b3b98921e126fdd21cc4f405"
37b78c5d48a9a5da1e9b0187b2004d5352e7c877,2013-09-17 14:14:35-07:00,"BigSwitch plugin: passes context to all update_network calls

There were a few calls to update the network on the backend
that were not having the context passed to them so they were
incorrectly using the admin context. This patch corrects that
by passing the context to all network update calls. It also
disallows calls to _send_update_network that don't provide
the context because there is not a use case for that condition.

Closes-Bug: #1226803
Change-Id: I7f0cbb797df9f565d0a00a7c67278cd96301f244"
f521d509db2b38051dbef5e2000d145d37b71672,2013-09-17 23:46:56-07:00,"FWaaS - fix reordering of rules in policy

Due to a recent change, reodering of rules within the
same policy was failing. This is fixed by checking if
the rules belong to the same policy we allow reordering.

There was also a missing call to reorder due to which
the position number on the rules was not reflected correctly
after the reordering. This is also fixed.

Closes bug: #1226941

Change-Id: I7f52e8b9d578c290ace3bb615bf68bd213398303"
8eb142748d9f63a0e4d5902f55bb66281d0df615,2013-09-18 07:00:24+00:00,"Fix URL used in NCS mechanism driver sync_full() operation

The URL was incorrect due to a simple argument-passing bug.

Change-Id: I2fabacdb2838022a1d187ceb70cb090c15457b7c
Closes-Bug: #1224981"
c3b4f24883c04cd139292ecf9cee31cff43e3973,2013-09-18 11:45:27+00:00,"Remove code that bypasses some midonet plugin unit tests

Multiple subnets unit tests were skipped

Closes-Bug: #1227079
Change-Id: Iffe731722d0e6c515bc64923673218ddde98c1f6"
59196b62f93b052c51d2598d948a27815cb75f43,2013-09-18 23:11:06+00:00,"Sync gettextutils from oslo

Some Messages, such as those created from Invalid exceptions, use a
Message within a Message, and we were only translating the base Message
but not the Message substitution within.

Fixes bug: #1221808

Change-Id: Ic3119df23a090cfaa160c1461e955f0af55fe1cf"
20b97388efcc3540066ca7743c761c1ec899dd2c,2013-09-19 17:32:30+04:00,"Send proper exception info as expected by the neutron client

The python neutron client for the V2 API expects the neutron API
to send information back such as the type and detail of the exception
in the body of the message

Change-Id: I9486d757258c4be72799c41102babe1f7923121c
Closes-bug: #1226400"
3726f0fb481b9590ae35407474d3e428453fdf12,2013-09-19 18:13:44+04:00,"Allow non-admin user to list service providers

Add get_service_provider rule to policy.json

Change-Id: If4f8103231694fbf79088f7a95a277d68eecce0f
Closes-Bug: #1227697"
3cc8e78956ee0d1132d723d1513466778268b13c,2013-09-19 11:57:20-04:00,"Cisco plugin portbinding extension support

This commit adds portbinding extension support to the Cisco plugin.

Change-Id: I87554607860b040b693edeecc2706ca8edbe49b6
Fixes: Bug #1218033"
005879ee07c9c02de9d8c47215600f1d36afa41b,2013-09-20 01:37:51+08:00,"Change header from LLC to Foundation

Change-Id: I11d7e734ae56568f2387a208efe0d1487377cbf9
Closes-Bug: #1214176"
d731097843d0b031bcdf6a8d67548f4bdf733016,2013-09-19 10:59:28-07:00,"Fix for status always in PENDING_CREATE for Edge service router

The root cause is when deployment finished, we only update router status to
active if the status is in pending create. The problem happens when the
background sync thread update router status to active, so the status update
for vcns_router_binding table is skipped. We fixed this by seperating
checking and updating status for router and binding table.

Also fixed an issue where Edge is not deleted if neutron service is
restarted. The root cause is when neutron service restarts, the cache for
router type is empty. And because we delete the router from db before
we delete Edge, we're not able to locate the router from db to determine
the router type. The fix is to use binding table to determine the router
type.

Also piggyback a missing attribute for updating Edge interface. It must have
been removed by accident when resolving conflict during service plugin merge.

Closes-Bug: #1226229
Change-Id: I3d0639d245e71ea2a3faba70fef1a0ebb87e19fd"
2a762867b2c5b67c5790d70e94c801d7d2f3f00c,2013-09-19 18:14:31-07:00,"Ensure names are truncated to accommodate NVP limit

Switches created through Advanced Plugin should have
their name truncated as well. To this aim, move things
around to avoid awkward imports or code duplications

Fixes bug #1227927

Change-Id: I3cc69356227d3bd63603ee1e53d82e6561f4cad0"
d4d06dfd18d8d085ccd390d6ebae7e3808fa8d09,2013-09-21 11:55:54-07:00,"Handle long integer conversion in NEC portinfo validation tests

There are a couple of tests for NEC portinfo validation that pass an id
which gets converted to a base-16 integer and then that gets converted
to a hex string. The problem is the integer conversion can make it a
long integer and then the hex built-in appends 'L' to the string, and
the tests do not account for that. This patch handles that case.

Closes-Bug: #1228212

Change-Id: Id3aed686329dae9cc4777213a4d2bcf406652e15"
79706d5c879adeca69af3d3ad170d4e8b3eb6808,2013-09-21 18:37:31-07:00,"Flip to pythonic method names for context unit tests

Fixes bug #1228738

Change-Id: Ia1864e64d7d2848f5892484eb5ad592a1f523fae"
396a0e42755af96d8b96d42ae1bcf4ae4604443d,2013-09-23 08:07:16+04:00,"Fix usage of _fields method in provider_configuration.py

Apply _fields() method to each dict in the list.

Change-Id: I9357212e203843ffa4a05216d9c79fe8831971a5
Closes-Bug: #1227971"
dec1e329c2ebba9fd0f9e96d1ae85aa084ccba6f,2013-09-23 10:23:05+02:00,"Fix adding identical metering rules on two labels

Fixes: Bug #1229075

Change-Id: Id86c83ec9c7af78fc08e662bb0a9202f0f759c0c"
f1d91b2456353b92bda7017422aaa97d6720d7a9,2013-09-23 16:15:39+04:00,"LBaaS: include inactive members when retrieving logical config

Closes-Bug: #1229082
Change-Id: I16f452b51a98d912ba8bdf374b4d1e9285d757dc"
78aa12567d226fe73df483d75e0d1980e6d3625e,2013-09-23 11:08:19-07:00,"Fix FWaaS plugin to allow one firewall per tenant

The reference implementation of the FWaaS iptables
agent/driver supports only one firewall per tenant
in Havana release. However, the FWaaS plugin will
let you create more than one firewall. This is
being fixed in this patch to not allow creating
the second firewall if a firewall already exists
for the tenant.

Change-Id: I8f1cad9791723ba919b5774a63982c204686ddfe
Closes-Bug: #1228442"
6ef28110c0c2b11ec63266e4d22a1b7c75cf7f5f,2013-09-24 12:05:31+09:00,"Fix port deletion in NEC Plugin

Cascade on delete from ports.id to packetfitlers.in_port is added
to ensure packet filter entries associated with a port.
Also joined query of packetfilter with port query is added
to avoid additional packetfilter query by port_id.

Fixes: bug #1212102

Change-Id: I8a67649f3361480eda6377b1d8a30bebd18aa714"
752b7ab29ddc75d8ae54c52d824ecc94a9551b56,2013-09-24 12:19:41+09:00,"Ensure nullable=False for netid in packetfilters table

From the initial commit of NEC plugin, network_id of packetfilters
table is nullable=False, but in folsom_initial db migration script
nullable is set to True. This commit ensure nullable=False for
network_id in packetfilters table in any migration revision.

Change-Id: I2f1ebc16b57d8d6548255079c66d326d97fda5b6
Closes-Bug: #1229508"
f14372630a5d26335e88df46fb40217847fa055e,2013-09-24 21:56:14+01:00,"Require oslo.config 1.2.0 final

Now that 1.2.0 has been released, require it rather than one of the beta
release tarballs.

Closes-Bug: #1182861
Change-Id: I75ffc4a572d14488d19491a38742d6920951c171"
a5815ce9db6ef82c6a305305c13dd957c3f4618c,2013-09-24 22:42:51+00:00,"Sync gettextutils from oslo

Add type check for Message params when setting locale to avoid
AttributeError.

Fixes bug: #1229364

Change-Id: I6fe55ebc4eea5fef1d335ad83a84c4879f7f06f9"
f2828d96f51a1e5547b0d83ecc49a7b4decae409,2013-09-25 14:41:31+08:00,"add portbinding host into vip port

When creating vip port, add 'host' into port data.

Bug #1227091

Change-Id: I0f59b3b56a4a26561a10e5645c8ebf803b2c6a70"
92b4c34e05770e8b3c31459158a018bdd5449c3e,2013-09-26 01:21:39+09:00,"Allowed Address Pairs support in NEC plugin

Closes-Bug: #1230184
Change-Id: I84d4dda9f88f7bbb524e173b0274db013f69b7e3"
028cca90c7c5e2b17205740d9198cbb443e6a2b2,2013-09-25 22:36:42+03:00,"Fixes Hyper-V agent RPC calls for ML2 support

Adds support for the RPC report status in the Hyper-V
agent and plugin.

Fixes bug: #1226654

Change-Id: Ie5eee875afc062c536856589d6a3fd0414190f6d"
524a09ff076b995ae9f4ded6d8b8c833c9ceaeaa,2013-09-26 08:33:27+08:00,"Sync rootwrap with code from oslo

The rootwrap module had been directly edited in commit 1d366293.
These are all minor changes bringing neutron up to commit c03f247

c03f247 Skip hidden files while traversion rootwrap filters
3f4d1d5 Fix os.getlogin() problem with no tty
fc04531 Send rootwrap exit error message to stderr
3663010 rootwrap: improve Python 3 compatibility
28395d9 Fixes files with wrong bitmode

Fixes bug #1229492

Change-Id: Ica406e021700578b27c3337498011059c3a78719"
e6a368a697e936f40a0882b236b2be17e1520436,2013-09-26 05:20:17+02:00,"Fix l2 pop doesn't propagate ip address updates

Propagates ip address changes when an ip address is :
added, removed, or changed.
Add a new rpc call for the updates of forwarding informations.

Fixes: Bug #1234137
Change-Id: Ib5b971bd02f20a0ea73f88ce9685e944226bb5a2"
3e1116eb0f1d94530707cd6ef4b37f17e9a13918,2013-09-26 22:48:46+08:00,"Ensure router exists when auto_schedule_routers

Currently, the auto_schedule_routers() accepts parameter router_ids,
which may contain invalid router ids, since we've already filtered
them via plugin.get_routers(), we can directly use that safe object.

Closes-Bug: #1217998
Closes-Bug: #1210877

Change-Id: I6196f16cca65fee4e848173d0a0a10fde967195d"
13f100ce5d60e8a5fa9d1c1239502e5853f83207,2013-09-26 08:20:30-07:00,"Add an option for always synchronizing status

This patch adds an option for always synchronizing operational status
on a show operation; regardless of the synchronization thread, when
this option is enabled, the resource status is always fetched from
the backend.

The patch also fixes an issue observed when running test_nvp_sync
alone.

Bug #1229149
Bug #1229243

Change-Id: Ifef52ac1c48e32f413d51fc04fd926073335665d"
1027758c4fc5361238b30db2720266b7be35f75e,2013-09-27 00:10:50+08:00,"Pythonic method names for l3_agent unit tests

When review https://review.openstack.org/#/c/46863/, i find there
are some unconsistent method names in test_l3_agent.py, this patch
fixes this code style problem.

Change-Id: I0e657e02155e1fcd580f083f4b5ba56274eadf88
Partial-Bug: #1229155"
4757ccfc8eb10bee756deb36c72d7a7ca37bdbff,2013-09-26 11:23:04-07:00,"Redefine behavior for NvpAdvancedPlugin during network creation

When using the NvpAdvancedPlugin, *all* logical switches should
be created through VCNS. VCNS will then proxy the requests to
NVP. This patch implements such a behavior. This is achieved by
replacing the use of nvplib.create_lswitch with the one of the
vcns driver, as the remaining logic can be left as it is.

Fixes bug #1225011

Change-Id: I6c276f747d02ac0d4934c38bf2858cf9b73c5e24"
96e0eb23a458f068f540d98132ee261053c45585,2013-09-26 19:19:52-07:00,"Raise an exception if no router_id provided

IF both service neutron-l3-agent and neutron-server are up,
but no router id configured in /etc/neutron/l3_agent.ini, an
exception will be raised on DB as ""DBError: IntegrityError"",
because the variable router_ids has a default '' value that
doesn't match the DB grammar.

    * Check router id is specified in _init_() of l3 when
      not using namespace.
    * Move part of checking config params actions to new function
      _check_config_params()
    * Add corresponding unit tests.

Closes-Bug: #1226366

Change-Id: I905f8a4061c5b250782e025681dfefcc41c8c03c"
5dcbddf516750e21359c859f8da0ab829f67d3f9,2013-09-26 23:57:07-07:00,"Reverse the order of interface update and DNAT rule config

Configure DNAT rule first before adding floating ip address to interface
so advanced service router will not receive packets by accident before
DNAT rule configured.

Verified that traffic goes to the VM the created floating ip associated
with right after config.

Change-Id: I415d1138511f41c209f1f2a9c2f12c2cfd3d16f0
Closes-Bug: #1229548"
8a37d04bfda7a583d02a3fac262f4f9242d7ed76,2013-09-27 07:33:17+00:00,"Add host routes and dns nameservers to Midonet DHCP

In the Midonet plugin, the host routes and dns nameserver information
was not being passed down to the midonet client API. This fix addresses
this by passing down the correct information.

Change-Id: I142ad4ceccdcf8b0e13db55fa54513f82995efc5
Closes-Bug: #1229655"
03f39f10cc97db7a1a4bd5b0b9c5cf11dcd604aa,2013-09-27 08:23:07-07:00,"Add error log for SystemExit in l3-agent

The SystemExit exception should be logged in l3-agent, the
operator may miss the useful exception messages to debug.

    * Add error log for SystemExit in l3-agent.
    * Add unit test for None and Wrong interface_driver.

Closes-Bug #1229105

Change-Id: I9ac60a528c1e88827078d552a30c8d571066d21c"
955a966b0b616cca58242ea2841f23f868be058e,2013-09-27 11:40:44-07:00,"Fix to enable delete of firewall in PENDING_CREATE state

Firewall will in PENDING_CREATE state if there is no underlying router in the
tenant. When the router and an associated i/f is created then with a sequence
of msgs it is set to ACTIVE state by the plugin. If a delete is triggered when
in PENDING_CREATE state in such a situation, the msg was ignored - fixing this to
account for the fact that a delete makes sense in this situation so the agent
sends the appropriate msg back to the plugin so it can delete it.

Change-Id: Id1db0a8413fd815b518fe4dc57fc6277c09e7f00
Closes-Bug: #1223478"
201ce414698953e17ae7cc2ae0c8db3906656e26,2013-09-27 14:33:08-07:00,"Remove deprecated NVP options

In Havana, NVP configuration was simplified;
in the process a few options that existed
in Grizzly or older were deprecated. This
change removes those options from the Icehouse
tree.

Fixes bug #1221840

Change-Id: Id83a339c88ec2477718a350b6ac1678ccba01509"
294f1a4a3bc061b955fb02bc88368e4d3686c9be,2013-09-28 12:19:33-04:00,"Add missing migration for fields in Cisco Nexus table

Change-Id: Ib31ec7f92d568c21d607b0bf003494acd1e3a3e8
Closes-bug: #1232360"
f157b9c8251616fd18757cfa9a45a04ee1e2deb1,2013-09-30 01:14:03+08:00,"Improve ml2_conf.ini

ml2_type_vxlan section is missing, also does option vni_ranges.

Change-Id: Icf9328d82603640279d1c5aa31f41b6ff23c26f0
Fixes-Bug: #1231124"
01debad5665bcae5c0f4745759ae744f85daa723,2013-09-29 10:29:32-07:00,"Ensure that security group agent is bound prior to accessing

When the Neutron agents start and the security group agent callbacks
are not registered there may be exceptions.

Fixes bug: #1232758

Change-Id: I4c1ff96b8acfcee4c84a73c9400040c96f8418a9"
db4b8afd1d7b42d7c6fd4ccbe35531a7dcf4898d,2013-09-29 19:48:56-07:00,"Should not add metadata filter rules if disable metadata proxy

The metadata filter rules should not be added into iptables if Neutron
metadata proxy is disabled.
This patchset fixes this issue by adding a condition when adding metadata
filter rules to iptables.

Closes-Bug #1224290

Change-Id: I7f14d281c31c1828a90abac8821635773238b2d0"
7da3d24f8ad0a5cb03c6e310a3f0d176a8476423,2013-10-01 10:00:22-04:00,"Cisco plugin should check for switch - vlan bindings

This commit fixes the issue where the Cisco plugin tries to create a
vlan twice on a switch if the first create is not bound to a port.
Also fixes an issue where the plugin tried to untrunk vlans from
a port for SVI interfaces.

Change-Id: Ifb13eb65d667367cffe120e1761d34f09b6d356d
Fixes: Bug #1233300"
a67bce77e12b5af7fd5fae7946c96d483ecede92,2013-10-01 18:27:44+00:00,"Switch agent report_interval option to float

Being able to set report_interval > 0 and < 1 makes
it easier to consistently reproduce rpc race
conditions.

Change-Id: I4d907159147177e98b043e7e800aea5cf8c23103
Related-Bug: #1224001"
f0f87ca56bb76ebad94b6f01e04b475bd9362bdf,2013-10-02 15:14:18+02:00,"change port status only if port is bound to the good host

if host is set in the rpc message update_device_up/down sent by the agent,
the port status will be changed only if the port is bound to the host.

Change-Id: I0e607c734fbebf0b69f83c3bbd3e25a9783672dc
Closes-Bug: #1224967"
844e3d9c527b42a1a052fb461ff3b6ac85122aa5,2013-10-03 23:01:48+00:00,"Utilizes assertIsNone and assertIsNotNone

Using assertTrue and the 'is' operator to test if an element is None
is too python2.4. Our unit testing framework supports
assertIsNone and assertIsNotNone which were created
for these types of tests.

Fixes bug #1230028

Change-Id: Ia58d92c52d0aca9c22360dd44de19d4e5878ab13"
f13c8d8e0de4428e412b46089c9cc67dafe71fdb,2013-10-03 23:02:23+00:00,"Utilize assertIsInstance

Using assertTrue and the 'isinstance' function to test
if an object is in an instance of some class is too python2.4.
Our unit testing framework supports assertIsInstance which was created
for these types of tests. Let's use assertIsInstance for these tests.

Fixes bug #1230028

Change-Id: Ia03c9f19a1c5e2aef3a6fe530515bd26339a7975"
b4167ed095dbd47a137ff22674ae13aba3a50513,2013-10-03 20:41:09-05:00,"Add clear_db to cleanup for TestCiscoNexusPlugin

Fixes Bug: #1234012
Change-Id: I0829f04ac1a0760d96babcb1154f4f569a0f848f"
520a5e2e5fa749cc3e505c6ae526171714cd6369,2013-10-04 14:00:52+08:00,"Pythonic method name for test_ovs_tunnel.py

Change CamelCase to lowercase with words separated by underscores.

Change-Id: Ieab8f8ad9affdb9290d13002e6b4b0d5a0185034
Closes-Bug: #1235082"
0bae949eed229613c77c4943edbf68c1c140f977,2013-10-04 00:21:56-07:00,"BigSwitch: sync state on disassociate floating ip

Sends the state of port's parent network to the backend controller
when a floating IP is disassociated from a port.

Closes-Bug: #1235074
Change-Id: I8375e6564b5d08f1adc7e7aef6affc97c8d03c5e"
40faf7f8cd80a4ef405810bb61f611656636d311,2013-10-04 08:35:52+00:00,"MidoNet plugin, clean up dhcp entries correctly

When a subnet gets deleted, remove the proper dhcp entry, not
always the first one.

Change-Id: I4f152eed5a7dd408bda866cb304838989bdc363c
Solves-bug: #1233259"
3568a9cac73a2da19e86d82f561be10ae9dbe9a0,2013-10-04 08:56:39+00:00,"Add a route to reach the MD server when a subnet is created

When the first subnet is created, the dhcp port is created and
midonet plugin correctly adds the static route to reach the MD
server in create_port. When a second or following subnets are
created, a new ip is added to the dhcp port. This patch takes
care of adding the static route to correcly reach the MD server
in update_port. This fixes the problem of VMs not being able to
reach the MD if assigned to the second subnet

Closes-bug: #1231914
Change-Id: Ifc95f901d4222b76a4254e21295829ac8d82493b"
3df505e448d38929c20721b22d81e47bf917af6a,2013-10-05 06:54:44+00:00,"NEC plugin: Fix nec-agent unexpected exit due to RPC exception

Changes nec-agent to catch RPC exceptions in the main
daemon loop. It fixes the following two bugs.

- nec-agent dies with RPC timeout in secgroup RPC
  (Closes-Bug: #1235106)

- port_added message can be dropped when RPC timeout occurs
  (Closes-Bug: #1235111). Moves exception catch from PluginApi
  to the main daemon loop.

Change-Id: I12394b739fc35bff271543f4625c5e3152e534ae"
de15e0b9c51cf9124de41258c1e3d774de215213,2013-10-07 08:52:45+09:00,"Enable Quota DB driver by default

Closes-Bug: #1189671

Quota driver is now loaded in lazy mode, i.e. the driver is loaded
the first time the driver is accessed. This is to make unit tests
work. Some unit tests like extension test cases need to use Config
Quota driver (previous default) but QuotaEngine is initialized
when quota.py is imported. Thus the unit tests had no chance to
specify quota_driver.

Change-Id: I9e20961d5a6322361e3c0284b3c2a7ca86755c70"
f4b78c7f17e29448ed54b136eeb4ac700b324120,2013-10-08 03:34:47+00:00,"Disassociate floating IPs from port on terminate

Bugfix - floating IPs were left associated after VM
was terminated. Now call disassociate_floatingips
within delete_port as in other networking plugins.

Add L3NatDBIntTestCase suite to cover the
floating IP disassociation case, and fix all failing
tests from that suite.

Change-Id: I856c46631e495d513065fc9e987898408441a21e
Closes-Bug: #1231913"
23bec4f7cb6e84a8d717c0b5ccc222f51c67f072,2013-10-08 12:55:41-07:00,"Add quota table in PLUMgrid plugin

Quota DB driver is enabled in Neutron by default.
PLUMgrid plugin was missing the ""quota"" table. It has
been added in this commit.

Fix bug# 1236970

Change-Id: I5170a8be2b412a3bcf1edcacce5574f0073b84d4"
bdddb0bf1215fd5408e3a96ec4e3c73a1d34f2d1,2013-10-09 08:25:13+08:00,"Utilizes assertNotIn

Using assertTrue and the 'not in' operator to test
if an element is in a sequence is too python2.4.
Our unit testing framework supports assertNotIn
which was created for these types of tests.

Fixes bug #1230028

Change-Id: Ibaf6c73c514b9ad27f8f37eb3f1043e31dbfdcc1"
bcbb029b1aacd64f8499db54a0e8f3e725727e07,2013-10-09 10:02:51+08:00,"Utilizes assertIn

Using assertTrue and the 'in' operator to test
if an element is in a sequence is too python2.4.
Our unit testing framework supports assertIn
which was created for these types of tests.

Fixes bug #1230028

Change-Id: I8a9147fa9982644067ff45c73e116d88845e47e3"
46495f4995b6604cb249b688aaa249ef4e8b18ef,2013-10-09 22:28:03+09:00,"Fallback to Quota Conf Driver if Quotas table is not defined

commit de15e0b9c5 enabled Quota DB driver default considering
production environments, but it breaks plugins without per-tenant
quota extension. In these plugin quotas tables is not loaded.

This commit fallbacks to ConfDriver if Quota model is not loaded by
checking neutron.db.quota_db which defines Quota model is imported.

Change-Id: Idaaaa9810598cfd3e5ce70020f498643b4819d16
Closes-Bug: #1236993"
345f8e1fdc65e0cf23369488d4318c0755d6b65d,2013-10-09 17:44:28+02:00,"use proxy mode on vxlan interface only when l2-population is activated

the proxy mode was set by default on every vxlan interfaces
which leads to inaccessibility between VM that are not hosted
on the same host in a vxlan network

Closes-Bug: #1237082

Change-Id: I34028ee0bdfdccda61c6a29f58759259da060b68"
39b8bddb1124d16eae15f667f8d921e8ddf5701d,2013-10-09 13:04:31-07:00,"BigSwitch: correct net to backend on floating IP disassociation

The corrects the network that is updated on the backendw when a
floating IP is disassociated. It was incorrectly sending the
tenant's network when the update is to the external network the
floating address belongs to.

Closes-Bug: #1237209
Change-Id: I55211ba3b0062e167843830bb318eb8e46249160"
01194b356e39e3b0affca67015efb7634bf28697,2013-10-10 15:36:02+03:00,"Fixes port status hanging to build status

ML2 plugin changes the port status to ""build"" when get_device_details
is called. For this reason, the port status must be updated once the
port details are processed.

Fixes bug: #1224991

Change-Id: I2c0321073cc07e1764fedbfbecbc844557ac6bc9"
48e36b542904effb9b35c9d62bd0247e25f0dac6,2013-10-10 21:57:26+04:00,"Fix access to lifetime dict in update_ipsecpolicy method

Also add corresponding unit test.

Change-Id: Ie1141b5034415ccf3039a71dfedc47cfb2ca7a88
Closes-Bug: #1237912"
a272a2838313b56edc1463f6d81a01414b37a78f,2013-10-11 13:29:44+04:00,"Fix migration

In migration 338d7508968c_vpnaas_peer_address_ was mistake in
usage alter_column's parameter type_.

Closes-Bug: #1238561

Change-Id: I6e0eb8260cf5e8d8f557b174c7985e2f7ca1c912"
acf0209b28e21eed60158967fab77468eb195e7c,2013-10-14 07:20:02+00:00,"Add support for managing async processes

Interacting with a long-running asynchronous process requires the
use of non-blocking io.  This change adds a helper class that can
launch a long-running process and read stdout and stderr in a
non-blocking fashion via eventlet.

This functionality is intended to support monitoring ovsdb via
a long-running and root-privileged invocation of ovsdb-client.

The complexity of the system interaction in this patch suggested
the addition of a functional test that validated actual behaviour.
The test was added under the neutron/tests/functional path which
is now included in the testr search path.

Partial-Bug: #1177973

Change-Id: I9969e556acecf7a9e77d873371cc2ec2647be011"
010bd1f392e67a6fcd276593b8c79acfe41d1cc7,2013-10-14 21:56:11+00:00,"Improve ovs_lib bridge management

Add the ability to add and remove bridges, check for bridge
existence, and lookup the bridge associated with a port.

This change is in support of functional testing for an ovsdb
monitor.

Partial-Bug: #1177973

Change-Id: I419923d8d77983997cd347fcf063b0bc367c0bbc"
cb0df591a9508e863ad5d5d71190eca349dc551f,2013-10-14 22:24:15+00:00,"Add the option to minimize ovs l2 polling

This change adds the ability to monitor the local ovsdb for
interface changes so that the l2 agent can avoid unnecessary
polling.  Minimal changes are made to the agent so the risk
of breakage should be low.  Future efforts to make the agent
entirely event-based may be able to use OvsdbMonitor as a
starting point.

By default polling minimization is not done, and can only be
enabled by setting 'minimize_polling = True' in the ovs
section of the l2 agent's config file.

Closes-Bug: #1177973

Change-Id: I26c035b48a74df2148696869c5a9affae5ab3d27"
893e10b0add63b364eb6d92715967c45028fa692,2013-10-15 14:03:10+08:00,"Updating address pairs with xml doesn't work

Below command can't work because list element
""allowed_address_pairs"" hasn't been updated
into the varaiable ""attr.PLURALS""
""neutron port-update <port-uuid> \
--allowed-address-pairs list=true type=dict \
ip_address=10.0.0.1 --request-format xml""

Change-Id: I0d7dcca5f4848bc968f5c86fbeb46569c70c8fcd
Closes-Bug: #1229954"
e5158eb918649eb04d6e6406f01ba39c9a36d94b,2013-10-15 14:03:10+08:00,"Enable one disabled tests in NEC plugin that blocked by 1229954

Enable the disabled tests in NEC plugin that blocked by 1229954
https://github.com/openstack/neutron/blob/master/neutron
/tests/unit/nec/test_security_group.py#L64

Change-Id: Id15c5b431773d05f13201cdcd126ff2fa9f6aa06
Related-Bug: #1229954"
5becbbec6a686667925f399904cebd97b583c35a,2013-10-15 11:11:05+02:00,"Removing rpc communication from db transaction

In a transaction context of ExtraRoute_db_mixin.update_router() was
called super method that uses subtransaction and communication with l3
agent. In case of agent's heartbeat happens while there is running
transaction, update heartbeat in agents table gets stuck in a deadlock.

Closes-Bug: #1211915
Change-Id: I96e6a9d7172d5a0e3e720a81fcd10f04c40aef07"
7ef087eb66f1c1ec8e3359aedc11f22d385dcd7b,2013-10-15 02:33:44-07:00,"Add error log for SystemExit in dhcp-agent

The SystemExit exception should be logged in dhcp-agent, the
operator may miss the useful exception messages to debug.

* Add error log for SystemExit in dhcp-agent.
* Add addCleanup(mock.patch.stopall) in setup()
* Remove teardown()
* Add unit test for None and nonexistent interface_driver.

Closes-Bug #1239030

Change-Id: I01bef69adecaaf8d8a919034d33c60a43e4469a7"
202fe60b646429aabeb2ef8b1430a1ba9b356061,2013-10-15 17:25:47+00:00,"Handle VLAN interfaces with Linux IP wrapper

Check if the interface name contains '@' character and use the part
before that character as interface name.

Change-Id: I09eb52f4d41054a76fd140d3a3476c6cfe05226b
Closes-Bug: #1240125"
c8b07d52936c9cfea5784e0efca3bc86e4aba7cc,2013-10-17 16:35:05+08:00,"avoid changing the rule's own action

fixes Bug #1240812

When iterating through the rule list, we should not change the rule itself.
So that we can use the rule data for the second router.

Change-Id: I613438507949007bec41416e7f8530693e4d5129"
684c9b0b10535eb91b2f679de82c460a864f2cc0,2013-10-17 17:18:17+00:00,"Detect and process live-migration in Cisco plugin

With Cisco/Nexus plugin, migration is not fully supported. Logic to detect
port binding change needs to be added in update_port(), and provisioning of
nexus switch(es) should be done accordingly

added test code for update_port() in the model layer and the db layer

Closes-Bug: #1229217

Change-Id: I2bd76030711c9d15462e91da9e4c0836a424834f"
0dd9315bd5b3fa6a6b88eeccd0d0438b254986d5,2013-10-21 23:19:39+08:00,"change seld into self

Closes-Bug #1242745

Change-Id: If5cc2864dc966eacd4cf30757fd1de15d9992629"
cf3af07cfd9a2c6ba73b74ad1ef724182fcb339c,2013-10-21 23:34:53+08:00,"change NetworkVxlanPortRangeError to base NeutronException

Closes-Bug #1242756

Change-Id: I902fa12795cda5ca70defaeb3b6959e3a0824565"
d1b783fd673448381445dce82e9160ba2f715a7c,2013-10-23 09:28:52+08:00,"Support uncompressed ipv6 address and abbreviated ipv4 address

Now neutron supports zero-compressed ipv6 address like
'2001:db8::10:10:10:0/120' and unabbreviated ipv4 address
like '10.0.0.0/24'.
This path will make neutron also support uncompressed ipv6
address and abbreviated ipv4 address. for example:
1, uncompressed ipv6 address like 'fe80:0:0:0:0:0:0:0/128'
2, ipv6 address with multiple consecutive zero like
   '2001:0db8:0:0:1::1/128' or '2001::0:1:0:0:1100/120'
3, abbreviated ipv4 address like '10/24'

Change-Id: I755e38ea11c139e15488ec60e7d5682a244ab114
Closes-Bug: #1240790"
4114b91ca0d815bdc899d6b8d1e1be1b19795d66,2013-10-23 10:59:16+08:00,"Utilizes assertIsNone and assertIsNotNone

Using assertEqual/assertNotEqual to test if an element
is or is not None is too python2.4.
Our unit testing framework supports assertIsNone and assertIsNotNone
which were created for these types of tests.

Partial-bug: #1230028

Change-Id: Ie0bddae642f7973ee8b0e00164415f8d87de387e"
b9ddfa566c6caad2384c791d1ae1873ce70c261e,2013-10-23 16:34:00+04:00,"Fix required enum's name in migration

Enums must contain name parameter for PostgreSQL and need to be
deleted after dropping table.

Closes-Bug: #1243652
Closes-Bug: #1243213

Change-Id: I01d18ff25572bbe9e6a8b8c6ae27f250ab154734"
66515056bf907af0b2cd009a630bb8c324236e4e,2013-10-23 10:17:17-07:00,"Handle 405 error codes correctly in NVP plugin

When NVP returns a 405 error code no exception is
raised, causing the plugin to assume that everything
went well when it didn't.

Fixes bug #1243411

Change-Id: If70db05b8c6950bfa88a36c4f0c20ee80419d31d"
9eb06332f0292ed4db7b322e483167cb40740d6e,2013-10-23 12:11:29-07:00,"fix nvp version validation for distributed router creation

Fix typo on major version. This was not caught during unit tests
so adds a few to ensure this does not regress.

Fix bug #1243862

Change-Id: Ie136aaa504939d8ac77dda07e3f955aed8c233f9"
e3e4a3fa2dac7a03169d095267ec492653524325,2013-10-23 12:13:39-07:00,"Fix argument mismatch failure for neutron-check-nvp-config

Use sys.argv directly.

Fix bug #1243888

Change-Id: I9cb6ca841d004baf72dd68e44be673c361c2ed05"
0d388b4effa059bd417024854d0c90f7ecf4c82c,2013-10-23 21:08:59-05:00,"fixes test_kill_pids_in_file conflicts

Fixes Bug: #1231246
Change-Id: Ibedd59d6570cd8d5020e99125c6808d5d2170851"
d26dfed7d47926425bb55893da45f650d6549b9a,2013-10-24 02:24:56+00:00,"Fix TypeError: <MagicMock name='LinuxBridgeManager().local_ip'

This patch fixes an error that does not result in a test failure but
causes the following error to be logged in the test logs:

TypeError: <MagicMock name='LinuxBridgeManager().local_ip' id='666599248'>
is not JSON serializable

Related-Bug: #1234857

Change-Id: I65cdd997745d8b760031f8f32e3c10682ad2288e"
338569c7c30509bce8565272023dfd791f4e9609,2013-10-24 14:04:40+04:00,"LBaaS: when returning VIP include session_persistence even if None

Closes-Bug: #1231915
Change-Id: I3dc5e17118995fb49dd381d08c9d92cb60b80abb"
3ae0171834521a2152516e4bd7b0f8e46547bfda,2013-10-24 15:14:47+02:00,"Removing workflows from the Radware driver code

Removing workflows handling from the driver code.
Removing workflow related files
Modifying tests to support new behavior

Change-Id: Icbb6106db07e5b33c37192aa53d088e67bd4a795
Closes-bug: #1239288"
c9b6c15d5de4d5ee326d7a870c2b2668f7909efa,2013-10-25 14:48:14+04:00,"LBaaS: Fix incorrect pool status change

Avoid incorrect status change when deleting the pool.
We can check for the conditions prior putting the pool
to PENDING_DELETE state, in case delete conditions are met
it is safe to change the state to PENDING_DELETE.
Also, change create_vip and update_vip operations to respect
PENDING_DELETE and avoid race conditions.

Change-Id: I9f526901eb85bdb83cf4ff8131460eb592c900f8
Closes-Bug: #1242338"
01e45596fae2818b41c76b41bef46e86c5d33231,2013-10-25 18:40:17+04:00,"Fix update_device_up method of linuxbridge plugin

Also add unit tests covering update_device_up and update_device_down
methods

Change-Id: I97f2f9249b684aa5350b3f0621754543e80bec70
Closes-Bug: #1241602"
94950eeb22c95da6b2115ea99f6131700decaa09,2013-10-25 16:35:08-07:00,"Fix error while creating l2 gateway services in nvp

Ensure that Conflict errors are not masked; also ensure
that coding errors do not mask NVP API errors.

Fixes bug #1244259

Change-Id: I27586d72af89fd39f6443dbab33f0e4e762b0c99"
83a3e77e63851c290e2f849db6db555cffb1ef41,2013-10-26 15:22:45+09:00,"Remove deprecated fields in keystone auth middleware

This commit makes the following changes:

Use X_PROJECT_ID instead of X_TENANT_ID:
  In the latest keystone auth_token middleware it is recommended to
  use X_PROJECT_ID instead of X_TENANT_ID. X_PROJECT_ID is supported
  in auth_token middleware for both keystone v2 and v3 API.
  The corresponding change was done in keystoneclient before Grizzly
  release, so we don't need to take care of X_TENANT_ID now.

USE X_ROLES instead of X_ROLE:
  X_ROLES is now recommended.
  X_ROLE exists just for diablo backward compatibility.

Remove X_TENANT and X_USER:
  X_TENANT and X_USER are for diablo backward compatibility.
  We no longer need take care of them in Icehouse Neutron.

Change-Id: Ie714b1323ff8c44dbee66b54e683226cf675b104
Closes-Bug: #1242447"
31def3ccf425a8f1a617a674a30d29f89d733432,2013-10-26 20:52:15+09:00,"Ensure OVS plugin is loaded in OVS plugin test

In TestOpenvswitchSGServerRpcCallBack and NetworkBindingsTest
in OVS plugin tests, OVS plugin was not loaded properly.

* For NetworkBindingsTest, it can be fixed by changing setUp()
  to take 'plugin' arguments in the base test classes
  SecurityGroupDBTestCase and SGServerRpcCallBackMixinTestCase.
  This fixes bug 1242510 in ML2 unit tests.

* For NetworkBindingsTest, it can be fixed by passing the plugin
  class to super.setUp(). The test itself needs to be updated
  because network binding is added when a network is created.

* NetworkBindingsTest in Linux Bridge plugin has the same issue,
  so it is also fixed in this patch.

Closes-Bug: #1230083
Closes-Bug: #1242510
Change-Id: I914876225480585d822748c188e9b69d1adf46f3"
b9cb30ade7cc76e65843f09d68f3a2c7ba326732,2013-10-28 11:27:38+05:18,"Modified configuration group name to lowercase

Most of the OpenStack project makes use of lower case for
configuration group names. But, 'neutron' was having group
names in either cases. Bug states it is fine to have group
name in upper case for [DEFAULT] but needs to be changed
for others. It was noted that [PLUMgridDirector] was having
characters.

Change-Id: I95f2dad6d5ae17f722202f4917b6ef460cd41e15
Closes-Bug: #1176683"
946ab2d6a518501f150a59d86428df1e986c6028,2013-10-28 17:58:53+04:00,"LBaaS UT: use constants vs magic numbers for http error codes

Closes-Bug: #1245388
Change-Id: I4192b577182891f6d777a5a5eac237c9961e41bb"
da139f615673172a1a54fb3065233d568db5e313,2013-10-30 05:01:52+00:00,"Use correct device_manager member in dhcp driver

* The DHCP driver used to use device_delegate, but that has
  changed to device_manager. referencing device_delegate
  caused the cleanup of the dhcp agent namespaces to fail.
  This fixes the issue by using the correct member name,
  device_manager

Change-Id: Iab8ea0549383335ff66f3f13df1953d206eeb28f
Closes-Bug: #1245408"
3c3e6eef90c87440c87803dba3325e7cc8c79a17,2013-10-31 21:32:20-07:00,"Fix query error on dhcp release port for postgresql

This is achieved by disabling eager loading and
hence by avoiding incurring in left outer joins
that cannot be applied because of a nullable
side.

Closes-bug: #1246788

Change-Id: I16bcc738a43609f715c2561413c6387f443bd99c"
29e93f2248df880f411bbf83316fd67d93a33b7d,2013-11-04 18:01:47-08:00,"Fix segment range in N1KV test to remove overlap

Adjusts a segment range in an N1KV unit test so
it doesn't overlap with a segment range in another
test that may be executed simultaneously.

Closes-Bug: #1248377
Change-Id: I84a15a2c772f01d7be7ba91aa86de09b934ef5e9"
932d3549910a8d8dba4620e5b5371c56faea9032,2013-11-05 22:47:32-08:00,"Fix import log_handler error with publish_errors set

Sync from Olso.
Commit Id is Ibf28ba17f81b5ddeda653f6a3501ecac18ffcd42

This handler sends all error logs as rpc notifications.
Note: when using publish_errors you also need to set the
notification_driver option too.

Closes-bug: #1240349
Change-Id: Ie66b23af8da2e439e0ac2f5677f6a064e3dd3133"
f960072daf1d9889d8fcfb2819408a077e9e4ee8,2013-11-06 09:17:09+01:00,"Remove database section from plugin.ini

Change https://review.openstack.org/#/c/34515 moved the database
config items to neutron.conf but left some commented out
[database] items. Remove them as well.

Closes-Bug: #1247589
Change-Id: I05913d0c27a683cec30cae31a1978612aa1e1360"
a65188fab01f29d095031abbc8d1d194548cd8be,2013-11-06 08:24:30+00:00,"Refactor configuring of floating ips on a router

This approach to configuring floating ips is stateless and idempotent.
This allows it to handle corner cases, such as reusing a floating ip
address with a different floating ip id in a way that is easier to
understand.

The concept is to wipe the floating ips clean and rebuild them each
time with the following optimizations.  To avoid bad performance in
manipulating iptables, it is called in the context of a call to
defer_apply_on.  To avoid a disruption in network flow a set
difference is use to determine the set of addresses that no longer
belong on the inteface rather than removing them all blindly.

Change-Id: I98aacbbb52b35688036990961d02e0b273504a77
Fixes: Bug #1209011"
67ad4690f7178245db8813dae82845d7bc5280d6,2013-11-07 09:32:40+08:00,"remove repeated network type definition in cisco plugin

Fixes-bug: #1248374

Change-Id: I912f9cfc140b9a7ac6369526cc623865cf280313"
2fb996642a597e7050ecc13ef6f3ad4aaae34997,2013-11-08 10:16:19+04:00,"ExtraRoute: fix _get_extra_routes_by_router_id()

router_id filter wasn't properly applied to the query
so the func returned all extra routes of all routers.

Closes-Bug: #1248219
Change-Id: I77733ee7994c8fccbbc966ccabd83b8fe4def8d5"
7d44629c2e8003f5bbb87e9b697eec54b4cce793,2013-11-12 11:38:16+08:00,"Replace a non-existing exception

Closes-Bug: #1242662

Change-Id: Ie44023c0fd9ba1373ec6e62d9245884b9f719b7e"
3ef877fc5a669659c2fa4bb2fc416d4a473c6ac5,2013-11-12 15:56:30+08:00,"Remove the warning for Scheduling Network

when a new port is created, the schedule_network in agentschedulers_db is called.
Since this network may already be hosted, it will directly return None in dhcp_agent_scheduler,
which cause the agentschedulers_db.schedule_network log a warning message.

This is really annoying and making users confused.
And, real warnings are already addressed in the real scheduler function.
which is neutron.scheduler.dhcp_agent_scheduler.ChanceScheduler.schedule by default.

Change-Id: I11bdbe47c2cc0fc45fb143970fb6762678bc27e5
Closes-Bug: #1192786"
34f30a1d16d81be86a117690ccc5bdfc5bdd0659,2013-11-12 10:27:31+00:00,"Linux device name can have '@' or ':' characters

It's possible to set '@' or ':' character in Linux device name. But
Neutron IP lib doesn't handle correctly these names.

To distinguish VLAN devices from others devices with '@' in their name,
the details option in iproute2 is used.

Change-Id: I7ed24ec00f481207d97bdef052f86388f24d9b21
Closes-Bug: #1245799"
e2163abce55bba83f531b4a0c9286b7b329602e9,2013-11-12 15:52:50+04:00,"Fix sqlalchemy DateTime type usage

In migration f9263d6df56_remove_dhcp_lease there is mistake in
DateTime type usage for mysql, used sa.DATETIME() instead of
sa.DateTime()

Closes-Bug: #1250405

Change-Id: I41fcd3babc64e3307895a92f03c7417577fa7b1d"
fe3fae10698ed465f45aec4a4022bc784307b4c3,2013-11-12 17:49:15+04:00,"Fix downgrade in migration

Fixes a downgrade bug caused by a portprofile_bindings table
definition mismatch between 2a6d0b51f4bb_cisco_plugin_cleanup
and the initial definition.

Change-Id: I051e5b41a4285b6cf24270ea6229b1bbca42106d
Closes-Bug: #1250454"
d1220a3c22fccc1d86eaafeebe7ef9c074d4fcb9,2013-11-12 19:09:29+04:00,"Fix MeteringLabel model to not clear router's tenant id on deletion

foreign_keys parameter of orm.relationship should point to local columns.
Currently for MeteringLabel it points to Router.tenant_id column which causes
routers tenant_id clearing on label deletion.

Closes-Bug: #1249188
Change-Id: Iccc0daf4f6edd537fd7f9e4b2fc4be094543ca5d"
78f54c26cb5f935794b5005d50272ebbd2976c84,2013-11-12 12:28:02-08:00,"Arista ML2 mech driver cleanup and integration with portbindings

fixes bug: 1215097

This patch addresses minor cleanups which are the diff between the
original version of the patch which was merged into havana master
branch and the patch that is submitted for merge into stable/havana.

The original patch that was merged into havana master branch is at:
https://review.openstack.org/#/c/49086/
The new patch which has been submitted as havana-backport-potential is:
https://review.openstack.org/#/c/54447/

This whole excercise came into play because the original patch was not
picked up in havana-rc2 because of missing tag in the bug. Therefore, the
need to submit new patch against stable/havana.

When the new patch was submitted for havana-backport-potential, few very
minor previously commented cleanups were incorporated as well. This
patch brings these minor cleanups into master branch as well. Therefore,
merge of these two patches will bring both master branch and
stable/havana at parity.

Change-Id: I4ec5273c26a27ca52b430a6c7485a44e880a1787"
cd33dbee09ca8335bcb5ba6975a8edd16258babe,2013-11-13 05:09:04+00:00,"Midonet to support port association at floating IP creation

The Midonet plugin currently does not support associating floating IPs with
ports at floating IP creation time. This bug is created to add this support.

Change-Id: Ie57ebffa5185f26138c04b9836067417c6dc1388
Closes-Bug: #1249957"
53886fc7374bc4f0bda1f8f6b80f815d718c81e6,2013-11-13 18:22:53-08:00,"Removes unused nvp plugin config param

nvp_cluster_uuid is no longer used; it was missed
during the configuration file tweaks that was done
during Havana.

Change-Id: Id6dd684833c99453cd97d88584be04d99fd21550
Closes-bug: #1251086"
daecbdfdebaf89163f6eaf6b72a4cde2322f1b08,2013-11-14 13:41:49+04:00,"Move Loadbalancer Noop driver to the unit tests

Move Loadbalancer Noop driver to the corresponding folder in
unit tests to clearly indicate that it is an utility driver
that only suitable for unit testing.

Closes-Bug: #1250767
Change-Id: Ide2ebf212193f2cf5da9cf7a7f068fd918a55ada"
54d79acaab50993f08b50f21019f82f17d38caa3,2013-11-14 08:14:31-08:00,"Fix DB integrity issues when using postgres

The IntegrityError faced on network deletion that
spooks Tempest tests is most likely caused by the
fact that the ml2 plugin does a dirty read. By
adding a 'select for update' we should be able to
address the issue once and for all.

Also, there's a chance that the dhcp port gets
reallocated while we are deleting the network. To
this aim, catch the integrity error and attempt
to recover from it.

This patch also removes the handling of errors
on concurrent reads that can no longer occur when
deleting the network.

(Hopefully) Closes-bug: #1239637

PS: This fix may be relevant for bugs #1243726 and #1246737

Change-Id: Iefae7fc8a903cc35d8bf80fc4cee533b7f64032c"
291048aba2fcaec8afee3011fb4c12c6ca0ebbba,2013-11-14 08:16:44-08:00,"Tune up report and downtime intervals for l2 agent

If the neutron server erroneously thinks than the l2 agent is down
it will fail to bind a port, which can lead to VM's spawn errors.
However, the issue is only transient because the agent effectively
is only 'late' in reporting back.

Best solution would be an alpha-count algorithm (so that we can detect
persistent failures more reliably), but for now let's be more tolerant
assuming that the agent is down by waiting at least twice the report
interval plus a tiny teeny bit.

Change-Id: I544135ce1f6b7eaefb34ac44af8f5844d92ddd95
Close-bug: #1244255"
77aee9e71523c543286d05a2f553d4a30778d17c,2013-11-14 14:36:01-07:00,"Adds delete of a extra_dhcp_opt on a port

Add support for delete of extra_dhcp_opt(s) on a port. Where
[{'opt_name': 'opt_to_delete', 'opt_value': None}].

Closes-Bug: #1228008

Change-Id: I75baeff91575cac6546fe2cc6fcf7a0d8e92853f"
1ad5fc84936b4ad2850d1d632514cfb5b24dfd43,2013-11-14 19:21:15-08:00,"Add log statements for policy check failures

Misconfiguration of the policy.json file may
cause policy check failures. It's kind to the
developer to log the underlying exception
so that he/she can have more information as to
how to address the problem.

Closes bug: #1246139

Change-Id: I8664959cb98b3a41d159db3acb91da9baba810ae"
9a64271bd9f741b13f6cf4a9074524d3854fdd14,2013-11-15 10:58:25+04:00,"Fix downgrade in migration

In 63afba73813_ovs_tunnelendpoints_id_unique migration mistake in
usage drop_constraint parameter type_ and positional agruments name
and table_name.

Closes-Bug: #1243073

Change-Id: I60cd6e7f18b193b71f8f20759251b9f59a79965a"
6096dd5892f6eca63d14fb41c281fd246c74f893,2013-11-18 17:58:58+09:00,"Apply six for metaclass

__metaclass__ cannot be used in python3.
six be used in general for python 3 compatibility.

Change-Id: Ib0d71b9676dc01390679396443575c05975d3b58
Closes-Bug: #1236648"
0da18edec2ca213a9d87778a4679afb891d58a28,2013-11-18 17:07:23+04:00,"LBaaS: fix reported binary name of a loadbalancer agent

Loadbalancer agent's actual binary name differs from what it reports
to Neutron server, so need to fix:
neutron-loadbalancer-agent -> neutron-lbaas-agent

Closes-Bug: #1248222
Change-Id: Ic4e05d0258ba8eb48b96c60d69c1dbf9f27731f6"
a5d996e381bd342f0204fcd99e8548cf28b20e92,2013-11-18 15:43:11+00:00,"Fix OVS agent reclaims local VLAN

If a port disappears on an OVS agent, the port is removed of the lvm
vif_ports list. And if it's the last port of the network on this agent,
the network local VLAN is reclaim.

Change-Id: I07e03107eb86a84eeb8e4d06f27a1d2fbd7cea57
Closes-Bug: #1252284"
a0a462f0303f68d885ff344898437e310c64188c,2013-11-18 23:20:01-05:00,"Cisco nexus plugin fails to untrunk vlan if other hosts using vlan

Closes-Bug: #1246080

Without this fix, if two or more compute hosts have
instances which are
sharing a given VLAN on a Nexus switch, and then
all instances on one of the hosts which are using that
VLAN are terminated, while instances which are using
that VLAN on other hosts remain active, then
the VLAN is not being untrunked from the
corresponding interface on the Nexus switch as
expected.

This fix changes the VLAN removal logic from:
----If this the last instance using this VLAN on this switch:
--------untrunk the vlan from the switch interface
--------delete the VLAN from the switch
To:
----If this the last instance using this VLAN on this switch interface:
--------untrunk the vlan from the switch interface
--------If this the last instance using this VLAN on this switch:
------------delete the VLAN from the switch

Note that this bug also exists in the Cisco ML2
mechanism driver, but the code which implements
this is being redesigned, so it will be addressed for
the ML2 separately.

Change-Id: Icb1f95d1db4baa56c0f6fd68ce6342bbff27641d"
07d597079781967f5a149f1812ddca3897fa49d9,2013-11-19 20:58:41+00:00,"Call _destroy_metadata_proxy from _destroy_router_namespaces

Refactor _spawn/destroy_metadata_proxy so that it can be called
with only the namespace and the router_id.

Change-Id: Id1c33b22c7c3bd35c54a7c9ad419831bfed8746b
Closes-Bug: #1252856"
7336f3bd27d138b3d11d601f977a1e3df2a44b3e,2013-11-19 21:05:57+00:00,"Optionally delete namespaces when they are no longer needed

Adds a configuration option to tell the network agents to delete
namespaces when they are no longer in use.  The option defaults to
False so that the agent will not attempt to delete namespaces in
environments where this is not safe.

This has been working well in deployments where iproute2 has been
patched with commit 58a3e8270fe72f8ed92687d3a3132c2a708582dd or it is
new enough to include it without being patched.

Change-Id: Ice5242c6f0446d16aaaa7ee353d674310297ef72
Closes-Bug: #1250596
Related-Bug: #1052535"
3299eb3dfebde39f0bec73008c99976c0b852c89,2013-11-20 01:04:14-08:00,"Adds tests, fixes Radware LBaaS driver as a result

Adding more tests for Radware LBaaS driver.
Adding new exception module for the Radware lbaas driver.
The base radware lbaas exception, called RadwareLBaasException,
Several specific exceptions for different failures.
Driver was changed for using new exceptions as well.
Changing the way OperationsHandler obtains context.
Always waiting 1 second before handling the operation
next time, to prevent busy-wait requests on vDirect.
Several code optimizations were done as well.

Change-Id: I15f7845fc2575eedb62c47d15ee6c1cea08e22f5
Closes-Bug: #1236741"
78836be994d172e7b5f64333144bf5e1f8bd0436,2013-11-21 17:01:33+09:00,"Add request-id to log messages

request-id needs to be stored in thread local store to allow
openstack.common.log use request-id.
tenant_name and user_name are added to the context so that
they can be logged by customizing the log format.

Also replaces 'cxt' with 'ctx' in test_neutron_context.py.
Previously both 'ctx' and 'cxt' are used mixed in one file.

Change-Id: Ib921585e648e92491c1366bc0ad26a6ae71e2fc9
Partial-Bug: #1239923"
8faa5f076bc8c7906d8d987931b7c817acfcbe8b,2013-11-21 13:08:14-08:00,"Handle IPAddressGenerationFailure during get_dhcp_port

If a network/subnet is deleted while the dhcp agent is trying
to get/create a dhcp port for that network, the exception
will be raised because no IP Allocation Range is available.

However, this particular failure mode causes just noise, because
the dhcp agent can cope with it without problems.

A follow-up patch will deal with the other exception traces during
create_dhcp_port

Partial-bug: #1253344

Change-Id: I7fe35455ce905daa22ff96367e120864a7d3fb92"
2a55196c1dcf35932459ea0f8df047c2ead4d615,2013-11-22 02:15:36+00:00,"Do not add DHCP info to subnet if DHCP is disabled

Currently the midonet plugin will add default DHCP information to
each subnet even if the subnet is configured to have DHCP disabled.
This change addresses this by checking the DHCP settings while
creating a subnet, and only adding DHCP information if DHCP is
enabled.

Closes-bug #1230073

Change-Id: I2c422866c60f505df30bfa18bfe8d03599665b7a"
e19a2ae0b37a5ec74f77d3cdd8e639f2dc580ccf,2013-11-22 02:15:52+00:00,"Move MidonetInterfaceDriver and use mm-ctl

* Change the plug method in MidonetInterfaceDriver to use mm-ctl
* Move MidonetInterfaceDriver to interface.py
* adapt interface driver midonet unit tests to mm-ctl

Change-Id: Ib6cfbc212b793fa939cad17017c0b2b8b0a5b7fb
Closes-Bug: #1245797"
829f3e09623dc5f4a6f6ef9ebf3c332f9affafc7,2013-11-22 10:38:07+04:00,"Add state reporting to the metadata agent

Need to add state reporting in order metadata agent
to appear in Neutron's agent list output

Closes-Bug: #1250369
Change-Id: I3a001e065004685d9702e817336e5d4923597791"
0d131ff0e9964cb6a65f64809270f9d597c2d5d1,2013-11-22 10:41:03+04:00,"ML2 plugin should not delete ports on subnet deletion

On subnet deletion ports are deleted asynchronously by dhcp agent
so plugin doesn't need to delete them itself.
Instead Ml2Plugin.delete_subnet() method should call update_port()
for each allocation to remove the IP from the port and call the MechanismDrivers.
The patch also adds subnets test suite from test_db_plugin to test_ml2_plugin.

Closes-Bug: #1246737
Change-Id: I7cf0461e9a3cfec4921e2de41fb1ab3fc119fddc"
e63d30fc6bd4d89b4d394fcfeabb592cbe26881d,2013-11-22 16:57:03+02:00,"Sync openstack.common.local from oslo

`local` has a broken TLS symbol - strong_store, fixed in oslo some time ago in
Ib544be1485823f6c619312fdee5a04031f48bbb4. All direct and indirect
(lockutils and rpc) usages of strong_store might be potentially affected.
Original change to Nova: If4dd973acc23921dbc2bc69bb76225deb2802dad

Closes-Bug: #1254046
Change-Id: I6e5efa156c9a905a979a469244cd483723e6b1e3"
a98f479da3d3c63b5affbe82a236b7b79f631175,2013-11-22 16:05:57-07:00,"Mock the udevadm in the TunnelTestWithMTU test

When running the neutron.tests.unit.openvswitch.test_ovs_tunnel.
TunnelTestWithMTU unit test failure occurs because the udevadm is
timing out waiting on a mock-ed device.

Co-Authored-By: Salvatore Orlando <salv.orlando@gmail.com>

Change-Id: I0e16295be66513c2257831bf62fd6a0c19f3b8a4
Closes-Bug: #1253506"
17b8cedeaa291f973e8311865b6560dc4806888d,2013-11-25 16:45:05+08:00,"Fwaas can't run in operating system without namespace feature

Adding the check before generating the local_ns_list
to fix the issue.

Change-Id: If8edb5c0bb0fc0fd9aaf48a3441287f99bcdcf13
Closes-Bug: #1252201"
5652e20b0bdc3a707d11d2b9ee521066b8f1150f,2013-11-25 16:14:26+00:00,"Preserve floating ips when initializing l3 gateway interface

Change-Id: I5a88225d291538cb9db0f8f4afa348192b8b984d
Closes-Bug: #1233271"
26e9fad61f86bedd16179ede9736b56c4a9a5752,2013-11-25 17:24:17-05:00,"Improve unit test coverage for Cisco plugin nexus code

Closes-Bug: #1190622

This fix improves the unit test coverage for the Cisco Nexus plugin's
cisco_nexus_network_driver_v2.py and cisco_nexus_plugin_v2.py
source files from:
cisco_nexus_network_driver_v2: 72%
cisco_nexus_plugin_v2:         79%
To:
cisco_nexus_network_driver_v2: 99%
cisco_nexus_plugin_v2:         94%

Much of what the remaining ""uncovered"" code (coverage tool
reports as partially covered) can be attributed to the
coverage tool not being aware that execution does not
continue at the end of a save_and_reraise_exception()
context block (i.e. the exception will be reraised, but
the coverage tool isn't aware of this).

This fix and coverage results are dependent on the fix for #1246080.

Change-Id: Ie0e11fc0a12502739fb39bb4b30deb04dd31b7b0"
68369fe6789d4ab053eb382458562394ce632de8,2013-11-26 15:57:22+08:00,"Fix showing nonexistent NetworkGateway throws 500 instead of 404

Change-Id: I5304bd52f7a5ae22fbc0d48206d7c1d282b34a91
Closes-Bug: #1252921"
09c3051fb2819b647f4d8196e6e0fbc66f0ccc04,2013-11-26 01:23:46-08:00,"Send only one agent notification on port update

This patch removes the other redundant notification sent in the same
routine to notify whether a security group changed.

Closes-Bug: #1254924
Partial Blueprint neutron-tempest-parallel

Change-Id: I5bad015decdc197c3fa9b58c680564380d513bc4"
218c249b0dea094944aead116cf07fc19f029852,2013-11-26 16:21:16+00:00,"Enforce unique constraint on neutron pool members

Neutron loadbalancer pool members should not be allowed to have
duplicate address/port tuples in the same pool.

Change-Id: Ie52c6033217ec05ee4f59bcf8a0e4167c7b13663
Closes-Bug: #1251867"
eb23b345876796f4002cab3632bad1c840289d04,2013-11-26 08:25:49-08:00,"Rebind allowed address pairs only if they changed

This patch ensures allowed address pairs bindings are refreshed
only when they actually change.
This will also avoid sending a notification to the agent if no
change actually occured.

Closes-Bug: #1255145
Partial blueprint neutron-tempest-parallel

Change-Id: Iac2502586a0d215a29194590c16c2e1a064f943b"
63acefb5fb07075785e4ac3a1289864e6796aae4,2013-11-27 14:39:57+08:00,"Add test_handle_router_snat_rules_add_rules

Add a unit test to verify that snat rules are added and added in order.
So that it could be refactored without fear next time.

Closes-Bug: #1222660
Change-Id: I07e820cc28c9a6c139a8eed0917aef2cfe62638a"
4fd4d490ac1e12b2bf835949447d21b64c641616,2013-11-27 07:51:13+00:00,"Fix format errors seen in rpc logging

The previous commit for this bug didn't include the 'project_name'
key in the context dict.  The missing key was causing the amqp
module to generate log formatting exceptions instead of normal
log output.

Separately, the context module itself was generating logging
exceptions in the quantum service when logging was attempted
before the context was fully initialized

Change-Id: I0f4c6f5a6804442932c9b2bd409a258cfc2419ff
Closes-Bug: #1254530
Related-Bug: #1239923"
121189401a97e5f471a287c453d7f2013c92477a,2013-11-27 02:10:40-08:00,"Rebind security groups only when they're updated

Update the security port bindings for a port only when they actually
differ from the stored value.

This will also avoid sending port_update notifications to the agent
even if nothing actually changes in the port configuration.

Closes-Bug: #1255183
Partial blueprint: neutron-tempest-parallel

Change-Id: I00c29dc97c46478433fdf08069a884bb78e5cd0a"
dc2f567df3972465797d4d5b492ac1c243737cfe,2013-11-27 21:02:23+09:00,"Mocking ryu plugin notifier in ryu plugin test

Previously RPC notifier is not mocked in ryu plugin test and the
plugin tries to send RPC notifications. It may interact with
impl_fake RPC set up in previous tests by other plugin
and sometimes leads to unexpected ovs-vsctl invoking.

Change-Id: I11714a160faa4d3ded7f312c39afba0b426ccd8a
Closes-Bug: #1255421"
0cbcdcfc5094fcb52679550bc67db8136441adf6,2013-11-27 05:06:20-08:00,"Ensure NVP API connection port is always an integer

Convert the 'port' part of a NVP endpoint to int before passing
it to the NVP API client.

Change-Id: I15137d943ab950cb5cc80d7af2971bce3ac1a265
Closes-Bug: #1255519"
cecd7591533e2c046aedba3b8e5d14a5b2fa7fe9,2013-11-27 12:44:30-05:00,"Pass in certain ICMPv6 types by default

This allows instances to do SLAAC configuration, without requiring
explicit security group rules to do so.

Closes-Bug: #1242933

Change-Id: I517c66a470296141c0024a64e39b6d40b0c0d581"
3cb9168822a0805a9b8904ce54577f3e3f05d9eb,2013-11-27 17:24:35-05:00,"Improve unit test coverage for Cisco plugin base code

Closes-Bug: #1190621

This fix improves test code coverage for the file:
neutron/plugins/cisco/network_plugin.py
from 34% to 98%.

Some of the changes made to realize this code coverage improvements
are the following:
- Core API methods (create_network, update_network, etc.) have been
  removed from the core plugin (network_plugin.py). These methods
  are currently unused. Before this change, we relied on the underlying
  model layer to inform the core plugin whether or not the model layer
  was capable of handling these core API calls itself via a 'MANAGE_STATE'
  attribute. However, there is only one existing model layer
  implementation (i.e. for Nexus plugin; the N1KV plugin does not use
  network_plugin.py), and that model layer supports the core API calls.
  Given that it is unlikely that another model layer for the Cisco Nexus
  plugin will ever be developed (esp. with the availability of the ML2
  plugin), so it makes more sense to delete this untested code.
- Exception raising for non-existent credentials has been removed from
  get_credential_details and rename_credential methods since
  exceptions are already raised for this condition in lower-level
  credential database code.
- The schedule_host, associate_port, and detach_port methods are
  deleted because these essentially do nothing useful (log a debug
  message and then return None), since these methods look for
  the same-named methods in the model layer, but these methods are
  not defined in the model layer.
- The helper functions _invoke_device_plugins and _func_name are
  deleted because they are no longer used.
- In unit test code for the Cisco QoS and credentials database, calls
  are now made indirectly through the core plugin (network_plugin.py)
  extension API methods, as a quick-and-easy way to provide code
  coverage for these core plugin methods.

Change-Id: I0c0d9e2b251a7c0355d83e495912302c5cc4d032"
5b61df1f539d78cf9d164a142d731e471aa18d4e,2013-11-28 09:17:18+00:00,"Stop logging unnecessary warning on context create

The context was previously logging at the 'warn' level when unknown
kwargs were being passed to its __init__().  Since the agents were
passing tenant=None with each rpc request, this was generating an
unreasonable amount of log chatter that would not be useful to an
operator.  The fix is to log at the debug level instead so that
the operators don't see the output by default but developers can
still choose to.

Change-Id: I5c328f628c597eb949c1fe67b23120d2b5d1c7da
Related-Bug: #1254530
Partial-Bug: #1255441"
39f44068a722c71029265d34531bba11947b3eac,2013-11-28 23:18:03+08:00,"Updates .gitignore

To ignore swap files from getting into repository
currently the implemented ignores are *.swp and *.swo
however vim adds more swap files if these files exists,
so improving this with *.sw?

Change-Id: Ie1b458d2b862e6cf2552ae5be6c6178b72e960ab
Closes-Bug: #1255876"
35f64f8026f7607c749727ac6b3ee93c956bdfd2,2013-11-28 17:19:33+01:00,"Fix metering iptables driver doesn't read root_helper param

With this patch the iptables driver instantiates the
iptables_manager with the correct root_helper value.

Change-Id: I9a37bae92dc12a8a78ea2d1b9fc5e995321ca322
Closes-bug: #1256036"
dd71021347f782608575d551f2329715c00546ce,2013-11-29 11:11:43+08:00,"l3_agent: make process_router more robust

If internal_network_added/removed fails, _sync_routers_task will call
process_router to do fault recovery. Because the port is already
added/removed to/from ri.internal_ports, internal_network_added or
internal_network_removed will not be called again.

The patch fix this issue by calling ri.internal_ports.append/removed
only if internal_network_added/removed succeed. Without the patch,
the added testcases would fail.

Change-Id: I2d2e004caa670c1624257c1d7ccc900438b42d08
Co-Authored-By: Hirofumi Ichihara <ichihara.hirofumi@lab.ntt.co.jp>
Closes-Bug: #1255871"
793c76344715790531d39436508b188b536e2ff5,2013-12-01 10:04:40+02:00,"Add request timeout handling for Mellanox Neutron Agent

Add request timeout handling for messages sent to eswitch Daemon.
Using configurable number of retries and increasing waiting interval
between retries resend the message.
If request timeout persists, eswitch daemon is not reachable.
In such case, exit the agent process.

Closes-Bug: #1228827

Change-Id: If1290bedafe7a0dd8a61cbe328510075edeb1e5b"
9335ffd7c3eaad0d66d7d19e7760ae12476a5ea2,2013-12-01 10:44:39-08:00,"Fix unable to add allow all IPv4/6 security group rule

Previously, if one tried to add a rule to allow all ingress ipv4 neutron
would respond that the rule was already part of the security group.
This happened as the filter for querying existing rules uses a wildcard for
remote_group_id thus returning a false match. This patch addresses
this issue.

Change-Id: I0320013a3869d25fb424995354721929465d2848
Closes-bug: #1252806"
0c85faa733aef714a8e47f647a931fb27857d4b9,2013-12-02 19:14:06+01:00,"Add missing quota flags in the config file sample

l3 extensions don't set quota flags in the config sample file
etc/neutron.conf.
Quota is unlimited if its value is minus and not only if it's -1.

Closes-Bug: #1250574
Change-Id: I76c8d1e2676d4e9b0feeed6e504e759fe736a0db"
3f110c9a571249c6626ebd1ef7dbf67b71273fa5,2013-12-03 06:06:02+08:00,"update error msg for invalid state to update vpn resources

Change-Id: I6719fa359d0c14accfa8b9b440c2b7fbabbdcfdb
Closes-Bug: #1256766"
b6e23caddf05457b2337ac03d33b066a36aad154,2013-12-02 19:35:25-08:00,"Adds id in update_floatingip API in PLUMgrid plugin driver

The id parameter is missing in the update_floatingip API, this patch
adds it.

Change-Id: I7407fe34628f8ef03a946a11fea9dad8b0f6c256
Closes-Bug: #1257119"
a3c944bb1860faeb4eb0e90534ace07c1e869ea1,2013-12-03 14:50:13+08:00,"atomically setup ovs ports

Change-Id: I7c4d4cac8150439f26b81d5727a5b7efb0a115f4
Closes-Bug: #1257014"
bff120a4775a1b1f3846a27c38d8eff4a678fd24,2013-12-04 00:19:53-08:00,"Handle exceptions on create_dhcp_port

If a network/subnet is deleted while creating the dhcp
port, the agent will detect a conflict on state of the
network and deal with it accordingly.

A concurrent delete may manifest itself via a number
of exceptions, IPAddressGenerationFailure amongst others,
hence the refactoring of the error handling logic into its
own utility method.

Partial-bug: #1253344
Related-bug: #1243726

Change-Id: I442beb5f82f3db8786eea53926903ef0ba0efbf1"
b48ddb648b4fe1b428328a91d0a045b837119f29,2013-12-04 03:39:22-08:00,"Handle failures on update_dhcp_port

Ensure exceptions due to conflicting
state of network or subnet resources
are dealt with by the dhcp agent.

Closes-bug:  #1253344
Related-bug: #1243726

Change-Id: I4fd51442c034fabc91d5a3f065f4df98f5fad35b"
5c43242a13f21aaeaa9499fd9f07e36d23fc5e17,2013-12-04 22:41:29-08:00,"Sync dhcp_agent.ini with the codes

Add an option item into dhcp_agent.ini to sync with the codes.
* Add ovs_integration_bridge in /etc/dhcp_agent.ini
* Add corresponding unit test

Change-Id: Ia78e7ca6c1fcbeca3e962f870a393e44183d719c
closes-Bug: #1256197"
258aad077279b2020b47f4136747c1e5aa4bf5a8,2013-12-05 20:37:43+04:00,"Fix downgrade in migration

In method downgrade_cisco in migration folsom_initial instead of
local method drop_tables op.drop_tables is used

Closes-Bug: #1243148

Change-Id: Ida6c52653c065e49c85141a7d1e61d394c1d709e"
9f6ff7e312e6d6ddfc520bcfa8a4f40cf5806845,2013-12-05 18:59:50+00:00,"Change to improve dhcp-agent sync_state

Added a pool.waitall to dhcp-agent sync_state
to ensure that the last pool of threads are complete
before another sync_state begins.  Added another
log message to aid in debugging. Also added the
test_sync_state_waitall unit test.

Change-Id: I13d79a212672c4086e3082783743cb1ef2b48cfb
Closes-Bug: #1257514"
872d1982716acf426d21dcac838102e9479408f7,2013-12-05 17:14:03-05:00,"Improve unit test coverage for Cisco plugin common code

Closes-Bug: #1190615

This fix improves the unit test coverage for the Cisco Nexus plugin
common modules (directory neutron/plugins/cisco/common) from:
--- cisco_credentials_v2.py 82%
--- cisco_faults.py 0%
--- config.py 84%
To:
--- cisco_credentials_v2.py 100%
--- cisco_faults.py 76%
--- config.py 100%

Change-Id: Id1ccfee1317309039fab83f622ced58efc3b2ae7"
c011b7668f83b25f1b8e026a909243af96f8f85c,2013-12-06 08:32:28+08:00,"Fix str2dict and dict2str's incorrect behavior

Closes-bug: #1258065

Change-Id: Idf14c077eeeda6f18f534ad8f62cd741d0c0a2eb"
8bceddb9597203bcf59a4e75b1afd652d036df31,2013-12-05 21:29:53-08:00,"Removed erronus config file comment

The comment stating 'DHCP agents needs it.' with regards to the
rpc_notifier notification_driver is incorrect.  Looking through
the code, I see no place this is true.  I believe it to be an
error.

Closes-Bug: #1258390

Change-Id: I58c2f9290731f3e88e4b4a5bdb600aa5bac1a12b"
7afd0f4d514d25ff8469b4fc8026363120a33d57,2013-12-06 15:35:51+01:00,"Sync rpc fix from oslo-incubator

Sync the following fixes from oslo-incubator:

e227c0e Properly reconnect subscribing clients when QPID broker restarts
ef406a2 Create a shared queue for QPID topic consumers

Change-Id: I286edf6bc4a677aa61f60da785802c19878c79c7
Closes-bug: #1251757
Closes-bug: #1257293"
272912b6d82af00a6f7bafc26d8ce7a79b09ef26,2013-12-06 16:15:19+01:00,"Fix a typo in log exception in the metering agent

This patch fixes a typo when there is a exception
when the agent try to invoke a method of the driver.

Change-Id: I4fcf19fa84f178348abfb3563bbfd52f0dfcc095
Closes-bug: #1256041"
5d75bf762f02466648d961b8c5fa7a65de6e709d,2013-12-06 07:31:53-08:00,"Switch to using spawn to properly treat errors during sync_state

Changes f1b9ac5a and 9f6ff7e3 were aimed at improving the robustness
of the sync_state method. However both missed switching from spawn_n
to spawn to properly deal with raised exceptions.

Change-Id: Ieda4a5ecca63de67d8a9757962e7e3383fd9c9ea
Related-bug: #1257514"
b67b20832a5bfccd1bbf8d1e63ebcd7061856881,2013-12-06 11:16:10-08:00,"Remove dead code _arp_spoofing_rule()

This code should have been removed when the allowed_address_pair
extension was added here (0efce6195fa7be80e110bd841dc9b3537a94c376).
The arp spoofing rules are handled in the method _setup_spoof_filter_chain().

Reported by: Amir Sadoughi that this was crud I left behind :)

Change-Id: Ib0e2e2a5c13fb8fa7af1f988510143f40ac335e2
Closes-bug: #1258629"
5529071bf1393d0d448bc495cc906a68bc30a820,2013-12-09 15:18:34+02:00,"Fix a race condition in agents status update code

Code handling agents status updates coming via RPC checks,
if a corresponding entry for the given (agent_type, host)
pair already exists in DB and updates it. And if it doesn't
exist, a new entry is created.

Without a unique constraint this can cause a race condition
resulting in adding of two agent entries having the same value
of (agent_type, host) pair.

Note, that it's already not allowed to have multiple agents of
the same type having the same host value, but currently it's
enforced only at code level, not at DB schema level, which
effectively makes race conditions possible.

Closes-Bug: #1254246

Change-Id: I1ebaa111154b3d6b34074705b579097ab730594c"
834cec00211d7da79f59e0bab5a7c7c7ece2529f,2013-12-10 02:07:54+09:00,"Remove root_helper config from plugin ini

As root_helper is defined in neutron.conf, root_helper in plugin ini
is unnecessary and brings confusion when configuring the parameter.
This patch updates plugin ini of NEC plugin and Brocade plugin.

Change-Id: I5b1c36d8d6ffc20ae0b4191a73aaa51f2b3d9a1b
Closes-Bug: #1259242"
3e263ba6c58c43f71c02417f8948300e8cb5c462,2013-12-10 05:23:56+08:00,"validate if the router has external gateway interface set

If the router wants to work with vpn service, we must
make sure external gateway interface is set.

This patch cannot prevent user from clearing the gateway interface
of the router after the vpnservice is created.

Change-Id: If0f00def949b31c1e3da7a2cd055454567201e4c
Closes-Bug: #1258379"
ef42f7c3f982092be6b5199bd9c2ade69e0446f3,2013-12-10 14:38:35+08:00,"change variable name from plugin into agent

Variable for agent instance should be named as 'agent'
instead of plugin.

Change-Id: I9bb2245049c6d6084284c2311a4c6aa2ad880bc1
Closes-Bug: #1259431"
74f0b74b55c97dda1ffd84a6fcab3f7c6478b50f,2013-12-10 22:03:42+08:00,"Remove start index 0 in range()

Remove the useless arg (""start index"" = 0) in files, since its default
value is 0, to make code cleaner.

Fixes bug #1259560

Change-Id: Id595630f97b21cc84aefc39b31e7f09f5fb8deb9"
4cdccd69a45aec19d547c10f29f61359b69ad6c1,2013-12-10 19:29:12+00:00,"Update common network type consts to same origin

This patch removes new definitions of common network type constants (TYPE_FLAT,
TYPE_LOCAL, etc.) and modifies uses of aforementioned constants to a common
place where constants are defined (neutron.plugins.common.constants). This
patch does not change values that are equal in value but different in name:
NETWORK_TYPE_FLAT vs TYPE_FLAT. A second changeset will be made to handle that
case.

Unit tests were modified as well when they referred to the constant.

Finally, the ovs agent code refers to the OVS plugin constants directly and
these had to be changed as well. A TODO flag was put in that file due to use
of another plugin specific constant.

Network types that were only defined in a single plugin, such as mellanox's
infiniband (IB) network type was not carried over to the common constants file.

Fixes-bug: #1196170

Change-Id: Ib6bfc8275496a24bf247946d177c734b62ae44bb"
f691ebe03916a78cbf18017d628a28b17f147700,2013-12-11 14:52:14+08:00,"move rpc_setup to the last step of __init__

rpc setup should be the last stuff in agent initialization
so that the rcp message handler(the agent instance itself)
can have a fully initialized agent instance.

Change-Id: I58c966e2c8ee92c307b565932e867b5d1ec73b67
Closes-Bug: #1259088"
504f496d6b4fd6234c3e65ba636ee12b004fae1f,2013-12-11 15:45:17+08:00,"fix --excluded of meter-label-rule-create is not working

rule['excluded'] is boolean type, should not be compared with 'true'

Closes-Bug: #1248002
Change-Id: Ie78c307ede1f7124c58354825a411474ff6c1234"
2b375c0f15fd43af23fbd28b85929d63a753548b,2013-12-11 05:24:55-08:00,"Do not trigger agent notification if bindings do not change

The method _process_port_bindings for the ml2 plugin should not
return True when the host binding does not change, otherwise an
unnecessary notification will be sent to the agent

Closes-Bug: #1255680
Related-Bug: #1253896
Partially Implements: neutron-tempest-parallel

Change-Id: I8a40090af347ca430ff6c8e2211fa34bb2bd0f8c"
bd4a85d67f091382752d75b95f9cfd076431f30e,2013-12-11 14:45:50+00:00,"Add X-Tenant-ID to metadata request

Previously, one could update a port's device_id to be that of
another tenant's instance_id and then be able to retrieve that
instance's metadata. In order to prevent this X-Tenant-ID is now
passed in the metadata request to nova and nova then checks that
X-Tenant-ID also matches the tenant_id for the instance against it's
database to ensure it's not being spoofed.

DocImpact - When upgrading OpenStack nova and neturon, neutron
            should be updated first (and neutron-metadata-agent
            restarted before nova is upgraded) in order to minimize
            downtime. This is because there is also a patch to nova
            which has checks X-Tenant-ID against it's database
            therefore neutron-metadata-agent needs to pass that
            before nova is upgraded for metadata to work.

Change-Id: I2b8fa2f561a7f2914608e68133abf15efa95015a
Closes-Bug: #1235450"
c8ff2a10697303d8a04980d258a12449d12d587a,2013-12-12 14:53:33+04:00,"LBaaS: fix handling pending create/update members and health monitors

When agent requests loadbalancer logical config from server,
server returns only active pool members and health_monitors.
Need to make server return also members and monitors which are in pending states.

Also a small refactoring moving ACTIVE_PENDING set to common place

Change-Id: I8e10004f199f982b055da18ea7a0e5e4d11fa7fb
Closes-Bug: #1259965"
e3d03eae48695ce093361cc143161efa3daaaaa2,2013-12-13 03:26:01-08:00,"NVP plugin: Avoid timeouts if creating routers in parallel

There is a well-known issue of eventlet causing deadlocks with
mysql transactions; such condition might occur when
creating NVP routers in parallel.

To avoid this, this patch moves the long-running method
_update_router_gw_info outside of the mysql transaction, adding
the appropriate failure management code, and adds a lock to the
method _nvp_create_ext_gw_port, to ensure serial access to it.

Unit tests for verifying correct behaviour in case of failures
are added as well.

Closes Bug: #1251847

Change-Id: I2864e2f5bfd3982875ef9df97186f64a9fcaa0e0"
2aaec3a81148e6c0cefd8f5b989dbcecf872a680,2013-12-13 04:04:57-08:00,"NVP plugin: Do backend router delete out from db transaction

Performing the NVP API operation from within a DB transaction
increases the risk of a deadlock between sqlalchemy and eventlet.

With this patch, the operation is moved outside of the db transaction
and appropriate mechanism are put in place for:
i) ensuring neutron db consistency in case of NVP failures
ii) avoiding deleting from backend if neutron logic does not allow it

This patch also synchronizes the routine for removing a router
gateway port from NVP.

Change-Id: I58d156e303e7a56ceb8c62766c192e154b0a3bb4
Closes-Bug: #1258150"
6d3290ab39db687d34c02caebfbb3d32c90e9cdf,2013-12-13 19:03:40+04:00,"LBaaS: synchronize haproxy deploy/undeploy_instance methods

When creating/deleting lbaas objects at a high rate (like tempest api tests do)
deploy/undeploy_unstance methods of haproxy namespace driver
may be executed concurrently which leads to different conflicts with
network namespaces and interfaces created by the diver.

@synchronized decorator should be used in order to ensure that only one thread
will execute one of the methods at a time.

Closes-Bug: #1260692

Change-Id: Ibe86653c20c9a4e0b4e7b3b2cefbd445428b82da"
794a1325dfc8a6937412a597f19acecf08d4b34a,2013-12-13 08:40:28-07:00,"extra_dhcp_opt add checks for empty strings

When passing extra-dhcp-opt into the port-create where an empty string
is provided as opt_value='   ', the create and update routine will load the
empty string into the DB. The result when written to the opts file is:
""tag:ece4c8aa-15c9-4f6b-8c42-7d4e285734bf,option:server-ip-address"", which
when read by dnsmasq has been tested to cause dnsmasq to segment fault.

Change-Id: I31de4a3d27092bb219d20221c5ef5a6b22e050dc
Closes-Bug: #1257467"
ec2b8b50182f0629fec5aee5c80b1560b2512235,2013-12-13 16:53:51-05:00,"Revert ""move rpc_setup to the last step of __init__""

This reverts commit f691ebe03916a78cbf18017d628a28b17f147700.

Change-Id: Idc0bb0e4401e2561f2d8e3132f14df14b7537448
Partial-Bug: #1253896"
136a9bd1f25825759914895e973a52a9895c99df,2013-12-15 20:25:00+00:00,"Nicira: Fix core_plugin path and update default values in README

The following patch fixes the core_plugin path in the README file
which broke during the rename of quantum to neutron here ee3fe4e8.
This patch also updates a few of the default values and removes
the promise of adding support for multiple control clusters.

Issue reported by: Ben Lin <blin@nicira.com>

Change-Id: Ia46d80384efaa220685f98afa591177d00021362
Closes-bug: #1260550"
a3bd88c21c8eb94d45f24987cb740aa185cf901a,2013-12-16 06:16:12-08:00,"NVP: propagate net-gw update to backend

When a network gateway's name is updated, propagate the
update to the backend.

Closes-Bug: #1261334
Change-Id: Icaae84e7f5373946e8c82e0e519528409925dd9d"
4808f91eb2c245344517fc89c37c6c4c88e9051b,2013-12-17 10:10:43+09:00,"ml2: gre, vxlan type driver can leak segment_id

When multiple region of segment_id is specified, segment_id can leak
(will be never reused) on deletion of network.

Change-Id: Ia27b7e2c0ff4ab58be304e54123a679a5e35ab00
Closes-Bug: #1260262"
e5939c32100ad42bfcf97f7373dfc06bc171e90e,2013-12-17 12:10:36+09:00,"ml2/type_gre: Adds missing clear_db to test_type_gre.py

GreTypeTest.setUp() in test_type_gre.py should have
self.addCleanup(db.clear_db). This patch adds it.

Change-Id: I1f2ac5d2cae47812591fc5b50099053a4ad9ba85
Closes-Bug: #1261593"
f78608f77cf1bbf87f9cdf8000f9abe3b54caafe,2013-12-17 10:35:19-05:00,"Update the descriptions for the log cfg opts

The existing logging config descriptions are incorrect.

This fix makes the documented config settings for verbose/debug
match their current behaviour.

Change-Id: I1a3830ca616c379cd37593fb3c3ef30a0d368cd9
Closes-Bug: #1261793"
7dc3c671656974596b9a373c911e5b786d57be35,2013-12-18 04:04:14+00:00,"Midonet plugin: Fix source NAT

Source NAT rule was being applied on the incorrect port.
It was being applied to the Neutron gateway port, not to
the MidoNet tenant / provider router link port.

Change-Id: Ib818c09adfb6957b7cad4523e5ce1fdffde9590b
Closes-Bug: #1261665"
cd542a7f1f2ea21d3694e70b8e6a6db0efbd3a01,2013-12-18 07:56:20+02:00,"Change default eswitchd port to avoid conflict

Previous default for eswitch/daemon_endpoint would set a TCP port (5001)
which is in the range of the well known ports.
Change to unreserved port (60001) will avoid that conflict.

Change-Id: I711c4659f497e44a6041ec9958835c1f2f4174a7
Closes-Bug: #1245885"
4ded12bef837e707c76af87d71155f04534dcb0d,2013-12-18 12:14:30+04:00,"Mock looping_call in metadata agent tests

Change-Id: Icb5146084730384bac1fb7d3176ce0cfcd565cc5
Closes-Bug: #1262089"
5a8e67be491a2b4897c01aeccd584381f74bc294,2013-12-19 07:08:19+00:00,"Send DHCP notifications regardless of agent status

The Neutron service, when under load, may not be able to process
agent heartbeats in a timely fashion.  This can result in
agents being erroneously considered inactive.  Previously, DHCP
notifications for which active agents could not be found were
silently dropped.  This change ensures that notifications for
a given network are sent to agents even if those agents do not
appear to be active.

Additionally, if no enabled dhcp agents can be found for a given
network, an error will be logged.  Raising an exception might be
preferable, but has such a large testing impact that it will be
submitted as a separate patch if deemed necessary.

Partial-bug: #1192381
Change-Id: Id3e639d9cf3d16708fd66a4baebd3fbeeed3dde8"
d7743bbdc3e992d9f9cceaeaa2919cd70b422364,2013-12-19 00:04:25-08:00,"Remove FWaaS Noop driver as default and move to unit tests dir

Remove the FWaaS Noop driver as the default and raise an exception
when the fwaas_driver.ini file has an enabled flag without any
associated driver. This communicates a misconfiguration clearly.
The Noop driver is moved to unit tests where it is used.
Also some cleanups in related area.

Closes-Bug: #1250841

Change-Id: Ib6345923df05994ceffc0b1cbf265b53c23e97f1"
6cc8bd73ac24c0cb4b9cbe3d7961584ea0322d01,2013-12-19 09:50:10+01:00,"neutron-rootwrap-xen-dom0 handles data from stdin

The neutron-rootwrap-xen-dom0 script and the netwrap plugin have been
modified to pass stdin from one to the other.

Change-Id: Ie97980873ed95f2c96eb68f8de611de1a733b130
Closes-Bug: #1259748"
5abac020f459045ceee75c971e179d9dbce8eac8,2013-12-20 06:46:04+00:00,"BigSwitch: Fixes floating IP backend updates

Changes BigSwitch plugin to correctly use
admin context on floating IP updates to the
backend controller so they correctly contain
floating IPs for all tenants.

Closes-Bug: #1262488
Change-Id: I6f2666c242e6d9b0684943db073a2284d01fa1e0"
2afff147c45f97a0809db40ad072332fb37ccd8d,2013-12-23 10:14:49+01:00,"Dnsmasq uses all agent IPs as nameservers

Add dhcp option which provides all agent IPs
which will be used as nameserver entries when
neutron uses multiple dhcp agent per network and
when there is no dns nameserver provided by the
neutron server.

Change-Id: I639a844bba212a731616851ff479a5e735612cf8
Closes-bug: #1259482"
7e91362dbb974df5ee44d346e1d0971479510d4b,2013-12-24 13:23:12+01:00,"[ML2] l2-pop MD handle multi create/delete ports

If more than one port is added or removed simultaneously, port db entry
have status BUILD or DOWN and pass to ACTIVE when agent have finish to
configured it.
l2-pop mechanism driver use events port pass to ACTIVE or DOWN to send
fdb entries. In case of port is the first or the last network port on
an agent, the flooding entry need to be add or removed.

This patch fix the method to determine how many ports are active on a
agent by adding filter on status port to be ACTIVE.

Closes-bug: #1263881
Change-Id: I9c1f8bd69dee37bc01a5d42327aa5f737998c5aa"
f778931252fbee34980e32289e96534eebb89c2b,2013-12-24 08:14:48-05:00,"Corrects broken format strings in check_i18n.py

In tools/check_i18n.py, the error messages printed out
had format strings that included 5 interpolations, but only
four variables were supplied. This patch simply corrects that
mismatch by including the name of the predicate or checker
that failed.

Closes-Bug: #1263813
Change-Id: I5cacee9ea000f56a9ef45f07367e85f20fa333c7"
14d1f65699a79f879dde8fb6da2e3b1be72a7266,2013-12-26 20:13:40+08:00,"Fix NoSuchOptError in lbaas agent test

Option 'periodic_interval' doesn't exist when using testtools
to test lbaas agent, fix this by adding a mock object.

Change-Id: I5ef02d6fa154ea7a18ca77d02a2704b7e3990c3b
Closes-Bug: #1264260"
02f4516ad38c5deeefd686b87edf4bf06cffe5af,2013-12-31 16:09:31+08:00,"Remove redundant codes

the code is redundant, it should be removed

Change-Id: I050bfc0b4d72037510dc2f3d729a564869a374c2
Closes-Bug: #1265132"
de4b5a2bba57cbd5294fb6f9527d64b8eeddf901,2013-12-31 09:30:37-08:00,"nicira: fix db integrity error during port deletion

Due to the fact that plugin port operations are not
transactional (as they involve non synchronized DB
and Controller operations), concurrent (interleaved)
port requests may accidentally cause the insertion
of the mapping entry (neutron-port-id, nvp-port-id)
more than once. In case this occurs, it's safe to
expect the failure and continue the normal process
of the operation being requested.

Closes-bug: #1265081

Change-Id: Ifcf5b453fa08145df844c2de3cbb08bf2f4baa59"
ab97446132da9b0aff4d13ac01591f86aa066d48,2014-01-01 22:01:27+08:00,"Remove unused imports

Remove unused imports in tools/install_venv.py

Change-Id: Ia2fbb4ece5c8bcdee96503f0f853f826ae4f3dfa
Closes-Bug: #1265267"
44b3783ceb94934bf8d4d62f704d42b49e52866e,2014-01-01 22:35:57+04:00,"Fix empty network deletion in db_base_plugin for postgresql

Need to disable joined loads for port query in delete_network
as in other methods.

No unit test is being added, because the problem is not reproducible with
sqlite.

Closes-Bug: #1261652

Change-Id: I7a015be6f2f9b8ae43bc29a767d16af30120f13f"
afe850608aa0b3b894a9dcc03cdddb0395ede609,2014-01-05 21:00:13+04:00,"Add security groups tables for ML2 plugin via migration

Copy the migration from revision 3cb5d900c5de

Change-Id: Ie0f6f14d69e896727715ecce573b81275c7869dc
Closes-Bug: #1263304"
bf8bf46cbbe7428c9a12886604fe5aa10019aaec,2014-01-06 03:33:07+00:00,"Enables quota extension on BigSwitch plugin

Adds quotas to supported extensions in
BigSwitch plugin and adds db migration script
to create quota tables for BigSwitch plugin.

Closes-Bug: #1266334
Change-Id: I255b318fde792ef59fe2cf456df4be87135c65cd"
c15f7226badd0a3607e3c74ef650e87543ea1af7,2014-01-06 20:02:00+09:00,"Remove plugin_name_v2 and extension_manager in test_config

There are two ways to specify a core plugin and an extension manager
in the unit tests: test_config and arguments of the constructor.
Both are used and it sometimes makes it a bit difficult to debug.
This patch removes the way via test_config and makes constructor
arguments the only way to do it.

Also removes the default entries in test_config because they are
not used anywhere.

Change-Id: I491003f4246e62001e9b74743c8fbfa922088383
Closes-Bug: #1245335"
5bdbfc2e52ac8d97e8421d0f8c74993de08191f5,2014-01-06 06:21:18-08:00,"VMware NSX: Fix db integrity error on dhcp port operations

If the dhcp port and network disappear, ensure that
the integrity constraint violation that results from
inserting the neutron/nsx port mapping to the DB does
not propagate the exception all the way through, but
instead is caught and handled correctly.

Closes-bug: #1265472

Change-Id: I3ae072729d579def0bd9658241eda1011a3dcfa0"
c15a794a832e0453075d363df949684c0fb86657,2014-01-07 15:41:20+04:00,"LBaaS: handle NotFound exceptions in update_status callback

LBaaS agent may send update_status requests to server on objects
which were already deleted from db: this is due to creating and
deleting objects with a high rate (like tempest API tests do).
As a result errors and stacktraces appear in server and agent logs.
The proposed solution is to catch NotFound exceptions and print a warning.

Change-Id: I4446b678893d0bda578ad7ccdf3f109cb1c91b4d
Closes-Bug: #1260682"
a9c6bb4647afd3df985cf40531d48957ad5d9580,2014-01-08 14:50:32-08:00,"Add test to port_security to test with security_groups

This patch adds a missing testcase to the port_security tests to test
for creating a port with port_security_enabled=False and passing in
a security group.

Closes-bug: #1267246
Change-Id: Ifb5a5571f016a5d7c5b5075c97dc27279cd79bb7"
eece55ceb687c425de1066851c9601221f1ef2b7,2014-01-09 15:59:10+04:00,"Update lockutils and fixture in openstack.common

lockutils: included commits:
  8b2b0b7 Use hacking import_exceptions for gettextutils._
  6d0a6c3 Correct invalid docstrings
  12bcdb7 Remove vim header
  79e6bc6 fix lockutils.lock() to make it thread-safe
  ace5120 Add main() to lockutils that creates temp dir for locks
  537d8e2 Allow lockutils to get lock_path conf from envvar
  371fa42 Move LockFixture into a fixtures module
  d498c42 Fix to properly log when we release a semaphore
  29d387c Add LockFixture to lockutils
  3e3ac0c Modify lockutils.py due to dispose of eventlet
  90b6a65 Fix locking bug
  27d4b41 Move synchronized body to a first-class function
  15c17fb Make lock_file_prefix optional
  1a2df89 Enable H302 hacking check

fixture: created, included commits:
  45658e2 Fix violations of H302:import only modules
  12bcdb7 Remove vim header
  3970d46 Fix typos in oslo
  371fa42 Move LockFixture into a fixtures module
  f4a4855 Consolidate the use of stubs
  6111131 Make openstack.common.fixture.config Py3 compliant
  3906979 Add a fixture for dealing with config
  d332cca Add a fixture for dealing with mock patching.
  1bc3ecf Start adding reusable test fixtures.

Also tox.ini was corrected to let lockutils work in tests.

This change is needed for work on bp: db-sync-models-with-migrations

Closes-Bug: #1065531

Change-Id: I139f30b4767ff2c9d1f01ee728823859c09b3859"
b5092af696131e611e20f17c6b9aa4f321a854df,2014-01-09 14:47:24+01:00,"L3 Agent can handle many external networks

With this patch a l3 agent can handle
any networks by setting the neutron
parameter external_network_bridge
and gateway_external_network_id to
empty.

Related-Bug: #1234750
Related-Bug: #1194350

Change-Id: Id260a239df23951da730513f40cda490002effc3"
251159c90a69dfb61d9927093d5eae41cd99e2a7,2014-01-09 15:19:38-08:00,"Fix Migration 50e86cb2637a and 38335592a0dc

When the rename of quantum->neutron occurred here ee3fe4e8 it also renamed
the the table creation from quantum_nvp_port_mapping to
neutron_nvp_port_mapping. This went undetected for a long time because
when neutron-server starts up it pushes down the scheme for tables that
are not there so the table would be created.

Because of this the following migration 50e86cb2637a called
op.rename_table('neutron_nvp_port_mapping', 'neutron_nsx_port_mappings')
though the table name being used was quantum_nvp_port_mapping. Because of this
the quantum_id->nvp_id mapping was never migrated over to the new table and
you would be left with a quantum_nvp_port_mapping table hanging around.

In addition, the downgrade would rename the table to neutron_nvp_port_mapping
instead of quantum_nvp_port_mapping. This patch addresses this issues.

Change-Id: I4f80b7b9dc56996ecd83826ee65918f5311c7c4f
Closes-bug: #1267619"
d9bcd597c67900472709cd11604afe1616e0af4e,2014-01-10 10:18:17+04:00,"Fix race condition on ml2 delete and update port methods

Synchronize access to ports table when deleting and updating
a port. Otherwise concurrent update/delete request for the same port
may cause neutron server to throw an exception and return
'500 Internal server error' for such requests.

Change-Id: I868002643147ce6baace5671cffb38b4f5e66729
Closes-Bug: #1266537"
51ef6a1dc30576f31a8a120066d81feedd0bf224,2014-01-10 16:21:32+04:00,"Fix mistake in usage drop_constraint parameters

In migration e197124d4b9_add_unique_constrain mistake in usage
drop_constraint parameter type_ and positional arguments name
and table_name.

The same mistake was already fixed in migration
63afba73813_ovs_tunnelendpoints_id_unique.

Change-Id: I6a250e55ea53048bb11afd71fecf94da6f0c7421
Closes-bug: #1257607"
2779fdd14279e017f35780fe343b1c7243898397,2014-01-10 05:06:30-08:00,"Fix extension description and remove unused exception

Change-Id: Id0a40a8decb46e306256196c7fc79d687d4f8075
Closes-Bug: #1267841"
4af2163bd41648d64cf1c3c838990737955d2133,2014-01-10 14:31:02-08:00,"Make timeout for ovs-vsctl configurable

This patch adds a new configuration variable for the timeout on
ovs-vsctl commands, and sets the default timeout to 10 seconds.
This is aimed at allowing users to tune the agents in order to avoid
timeout errors on their deployments.

Change-Id: I73ea0d0de49a4b4a118bc2d68ad9c093ea122717
Closes-Bug: #1254520"
ab1f474ace7105c5676e391ad0c70f496d7f309d,2014-01-13 09:21:31-08:00,"Fix pip install failure due to missing nvp.ini file

It looks like sdist does not support symlinks, therefore
letting nvp.ini point to nsx.ini is not a good solution.
Since nvp.ini is going away, leave a copy for now, but
add a warning so that users are aware of the switch,
whilst preserving full backward-compatibility.

Closes-bug: #1266555

Change-Id: Id98c41145712583072a8e63a5de31ecc1074e420"
965542bfac90194bd032e5e6aeb6a507dcb11088,2014-01-13 22:18:56+00:00,"Use information from the dnsmasq hosts file to call dhcp_release

Certain situations can cause the DHCP agent's local cache to get out
of sync with the leases held internally by dnsmasq.  This method of
detecting when to call dhcp_release is idempotent and not dependent on
the cache.  It is more robust.

Change-Id: I4eafd9cfb94a77a2f0229f89de5483dad23725cf
Closes-Bug: #1250644"
c545fb5f0d533917075c392a6fb70c82586c4965,2014-01-14 06:37:42+04:00,"Fix race condition in delete_port method. Fix update_port method

Port can be gone between
  l3plugin.prevent_l3_port_deletion(context, id)
and port query. Need to handle it properly.
ALso need to handle non-existing port in update_port properly.

Closes-Bug: #1266537

Change-Id: Ic203f21db277f83c604a8757a8c421b3fb9ae709"
5d02de7d6350329dc592d3b7c14579531837babb,2014-01-14 09:32:27+01:00,"Add binding:host_id when creating port for probe

When probe is created it needs to have correct bindings otherwise port
is marked as dead.

Change-Id: I64441fbe802aab068c129c9647c7144fcd4c50a1
Partial-Bug: #1262785"
47871570eb7ed351738828bc233343520283de0d,2014-01-14 13:04:54-08:00,"NVP: Add LOG.exception to see why router was not created

Add missing LOG.exception so that it exposes what error occurred.

Change-Id: I9194795678a6be59eb1d2555dfa99ca7a035c418
Closes-bug: #1269152"
45557c43e4f8e42a98c09deb45739bebaa5b8507,2014-01-14 15:24:50-08:00,"Fix negative unit test for sec group rules

Ensure the test fails because the security group
rule could not be created, and not because the security
group was deleted before creating the rule.

Closes-Bug: #1268561

Change-Id: Ib2ea8c4507862d7bb343ce5181cf018b3cdf4b73"
8b67ee3d94a4866fd4ecd27e8fc37d2f17595aa9,2014-01-15 12:28:37+02:00,"Fix the migration adding a UC to agents table

The migration script mistakenly assumes that all core
plugins use agents extension, which is not true (e.g.
plumgrid and bigswitch don't).

Apply this migration script only for plugins that are
stated in the original migration script adding agents
table (511471cc46b_agent_ext_model_supp.py).

Related-Bug: #1254246

Change-Id: I7915ef8d183782eb5d46ac47f45014aa9e9640fb"
7b9daa829fe137cb3da377c89b293f01e5fa0871,2014-01-15 07:32:50-08:00,"VMware NSX: add sanity checks for NSX cluster backend

Ensure that all transport nodes registered are up
and running. A failure here, may prevent a lot of
failures down the lines.

Change-Id: I3473928e296ec6792f34bc27a4ae797fed337e7c
Closes-bug: #1267468"
0d111c97334c28444708e623a3fde912bc7c25d7,2014-01-15 17:02:50+00:00,"Remove release_lease from the DHCP driver interface

Neither the midonet nor the linux dhcp driver needs a call to
release_lease.  Removing this from the driver API simplifies more code
in the DHCP agent.

Change-Id: Ib144b2bf3720b1b999205ace1a7d1ffe5ef3b167
Closes-Bug: #1269505"
f6d384d7a2df5ba603bf7862853e9cb9fc70fcb4,2014-01-15 12:45:22-08:00,"Expunge session contents between plugin requests

In the NVP plugin, metadata processing performs several plugin operations
with the same context (and db session). The first operation might leave
persisted objects in the session instance which then conflict with objects
created in the second operation.

Closes-Bug: #1266482

Change-Id: Ic9e2b952013610647aa222f1a8b6e33504b54b37"
ca668a0b9ec5f6412cd842b89d523ba1a8369782,2014-01-16 14:34:14+08:00,"Clean up ML2 Manager

Some things need cleanup in the ML2Manager.

1) Replace sys.exit(1) with raise SystemExit(1)
2) Replace reserved keyword type with network_type

Change-Id: I921bfaec7d3e31503942b3ca4a1b2218c44b14ac
Closes-Bug: #1259646"
024c693effe13fe0dac0ae277c58a50a9a949415,2014-01-16 20:47:58+00:00,"Fix interprocess locks for run_tests.sh

This was fixed for nova using this method and we are porting it here as we are
running into a similar bug as #1264058

Closes-Bug: #1269938
Change-Id: I06a2684629fd7b4d30e2d7716dc00a2ed0479f2f"
5fae0fae2164f4fab64e3eff01c9c644d861946a,2014-01-17 08:50:11-08:00,"Report proper error message in PLUMgrid Plugin

Change-Id: Ifc1bb55f6b025bba77cf9858ed392dbf170075a7
Closes-Bug: #1268460
Signed-off-by: Fawad Khaliq <fawad@plumgrid.com>"
b78eea6146145793a7c61705a1602cf5e9ac3d3a,2014-01-20 13:49:55-08:00,"Remove and recreate interface if already exists

If the dhcp-agent machine restarts when openvswitch comes up it logs the
following warning messages for all tap interfaces that do not exist:

bridge|WARN|could not open network device tap2cf7dbad-9d (No such device)

Once the dhcp-agent starts it recreates the interfaces and re-adds them to the
ovs-bridge. Unfortunately, ovs does not reinitialize the interfaces as they
are already in ovsdb and does not assign them a ofport number.

This situation corrects itself though the next time a port is added to the
ovs-bridge which is why no one has probably noticed this issue till now.

In order to correct this we should first remove interface that exist and
then readd them.

Closes-bug: #1268762

Change-Id: I4bb0019135ab7fa7cdfa6d5db3bff6eafe22fc85"
ed1071ec1981821275fedf35c5c90ab0a5080c58,2014-01-21 04:05:35+00:00,"Minimize the cost of checking for api worker exit

A recent change to oslo allows the configuration of the interval
that ProcessLauncher waits between checks of child exit.  The
default interval of 0.01s resulted in the neutron service consuming
unnecessary cpu cycles checking whether api workers had exited (5%
cpu on idle in a VM).  This patch extends the interval to 1s to
minimize the cost of the checks.

Change-Id: I0407ccb2db65cd3839586faff15e70dbc35f005e
Closes-bug: #1095346"
011d99f300ea5d5f4ce48023bd04a795a4872287,2014-01-25 04:20:13+00:00,"L3 Agent restart causes network outage

When a L3 agent controlling multiple qrouter namespaces
restarts, it destroys all qrouter namespaces even if
some of them are still in use.  As a result, network
traffic could be stopped on the VMs that use the
networks associated with these namespaces.

So what is needed is for the L3 agent to preserve those
qrouter namespaces a L3 agent instance recognizes and to
destroy those it does not know about.

Closes-Bug: #1175695

Change-Id: Idae77886bd195d773878c3d212ccfd56269216fb"
bb406281d8e36c29874bee3d9a3d1d5eae4ccdd5,2014-01-28 21:49:41+00:00,"Reduce severity of log messages in validation methods

I noticed this while reviewing Ic2c87174.  When I read through log
files, I don't want to see errors like this that come from validating
bad user input.  Info severity is more appropriate.

Change-Id: Ib8a4dd08570923c6cade6447b52bb73d20558258
Closes-Bug: #1272565"
89f25623a4345b5044a58cff36e7fd103c6b88e8,2014-01-29 21:19:00+00:00,"Simplify ip allocation/recycling to relieve db pressure

I found that multiple calls to delete_port can pile up on the
_recycle_ip operation.  This patch simplifies this operation.  It
reduces the _recycle_ip operation to a single row delete in the ip
allocations table and doesn't touch the availability table.

To acheive the recycling of ips in a pool, this code runs a more
complex operation of rebuilding the availability table when it is
exhausted.  Only one API process will perform this more expensive
operation and others waiting for allocation will immediately benefit.
The amortized cost of this operation is much less than the cumulative
cost of running the more expensive _recycle_ip operation for every
port delete.

IP allocation behaves a bit differently with this patch.  Instead of
giving out the first IP available in a pool, the entire pool will be
allocated before wrapping around and recycling ip addresses that have
been released.  This is a desirable feature as it puts ip addresses in
a sort of quarantine after they are released.  It is easier to
distinguish newly allocated ips from old ones.

Change-Id: Ia55b66128de9986e075b0f87acc401d211cd91d3
Closes-Bug: #1252506
Closes-Bug: #1257815"
b53ebc7a8a25478492d89c1c12b959f1ce94cdc2,2014-01-30 00:43:47-08:00,"Extending quota support for neutron LBaaS entities

Note: This change is a continuation of abandoned
      change https://review.openstack.org/#/c/58720/
      Previous change was abandoned due to rebase problem.

Extending quota mechanism to support neutron
LBaaS entities. Adding quota for vips, pools, members
and health monitors.

This is one of four changes related to the BP.
This one is for neutron project.
Another one is for python-neutronclient package,
another one for tempest,
and another one for horizon/openstack-dashboard project

See blueprint neutron-quota-extension for another two changes.

Change-Id: I64a1d3647a4eb21833266346377416638667a931
Implements: blueprint neutron-quota-extension"
32ca9c4f5f31db51ad3c7b3545ba917366464654,2014-01-31 12:24:47-05:00,"Change metadata-agent to spawn multiple workers

There is currently only one metadata-agent per network node,
which could be handling connections from hundreds or thousands
of metadata-namespace-proxy processes.

This change addes a new ""metadata_workers = XX"" to the ini file
to support creating more workers to help improve performance.

Change-Id: Ib9ebcfc543a83982dd93db79c7dc631283fd3bfa
Partial-bug: #1274536"
ebc88e6110660c0d543e75140d2e19ccf4796bea,2014-01-31 17:51:02-08:00,"Remove unused RPC calls from n1kv plugin code

Change-Id: I75a70786827a5fd6c321b560f1f2ef02a69aa85d
Closes-Bug: #1275166"
57b3b2997c9bda2a7293b7b19d6dcaad36908f26,2014-02-02 13:43:28+04:00,"Sync with commit-id: 9d529dd324d234d7aeaa3e6b4d3ab961f177e2ed

(Pulling from the gate, neutron fail rates are currently too high
to have neutron jobs in the queue.)

Related-Bug: #1270212
Change-Id: I94965b395cfb34ed1576b84f21aa48edf991d629"
acc21edca49b866e2c2d6e208aaa573d2f95fd88,2014-02-03 17:05:35+01:00,"Change metadata-agent to have a configurable backlog

The metadata agent currently runs with a default socket backlog
of 128.  This isn't enough on a busy network node, even when
spawning multiple worker processes.

This change addes a new ""metadata_backlog = XX"" to the ini file
to support a configurable value to help improve performance.

Change-Id: Ibea398f3b65a56deb1418f39810d87d8360ea9f3
Closes-bug: #1274536"
b22515e443449a83f423620cb1df5b92770bef32,2014-02-04 12:40:42+01:00,"Reassign IP to vlan interface when deleting a VLAN bridge

When deleting a VLAN bridge that has an IP address assigned to it, don't delete
the VLAN interface, but reassigned the IP address back to the underlying VLAN
interface.

Closes-Bug: #1255153

Change-Id: I5e39877c0786b43eddba9b5e1394d4c2ec023c0a"
c1eb61b98a37a10775affa845185388f05e3ceb4,2014-02-04 22:30:53-05:00,"Removes an incorrect and unnecessary return

The current return statement creates a new object that is
not used anywhere and does not provide a functionality

Change-Id: Id53f6fbc8cc6fb38419e5616a352279f1a9b917f
Closes-Bug: #1276367"
1027d02977812064b688fe0748c46663c1627cf2,2014-02-04 22:35:01-08:00,"Base ML2 bulk support on the loaded drivers

Changes the ML2 plugin bulk support flag to
be based on the bulk support of the underlying
drivers.

Closes-Bug: #1272490
Change-Id: I28281c9ecc1696b929c7e0125d02a37946948744"
5e6e592132aa9a98936ce3bfdb66efc7832caafb,2014-02-05 01:38:05-05:00,"Process port_update notifications in the main agent loop

Instead of processing a port update notification directly in
the RPC call, the actual processing is moved into the main
rpc loop, whereas the RPC call just adds the updated port
identifier to a set of updated ports.
In this way, a port_update notification won't compete with the
main rpc loop, causing long delays into its completion under
heavy load. Also, repeated port_update notifications received
within a single iteration of the main agent loop will be
coalesced and processed only once.
This will also avoid the risk of processing notifications out
of order thus ending up with an actual configuration which
differs from the desired one.

This patch still performs L2 wiring for updated ports even if
it is necessary only when the administrative state of a port
changes.

The update_ports method has been renamed to scan_ports as the latter
name appears to be more in line with what the method actually does.

Partial-Bug: #1253993
Partially implements blueprint: neutron-tempest-parallel
Change-Id: I219c6bdf63b0b5e945b655677f9e28fa591f03cd"
a9050757d94009c68f06c9f374de33eefbf06aa9,2014-02-05 01:45:48-05:00,"Avoid re-wiring ports unnecessarily

In the majority of cases a port_update notification pertains
a change in the properties affecting port filter, and does
not affect port wiring, ie: the local vlan tag.

This patch simply avoids doing port wiring/unwiring if the
local vlan tag did not change.
The extra overhead for the ovs-db get operation is offset
by the fact that get commands are generally faster than
set commands, and by avoiding executing the ovs-ofctl operation.

Partial-Bug: #1253993
Partially implements blueprint: neutron-tempest-parallel

Change-Id: Ia0bd2dc4e5a2634a4c863ff32ccc5cabe8e21337"
3d044acf65682d5d8815185ac4baa83e3763f935,2014-02-05 15:39:24+00:00,"improve UT coverage for nicira_db operations

Also, ensure that a rollback is issued in the
event of any DB error.

Change-Id: I706db09f11fb5f6b369a1bd0cb1016df7d0359b5
Related-bug: #1265472"
5c8c22c97381ca6f4e4007fa05fedbe399e88ea5,2014-02-05 12:49:02-05:00,"Configure floating IPs addresses after NAT rules

Change the behaviour of the L3 agent in order to set the IP addresses
for the floating IPs on the external gateway interface after the
relevant NAT rules have been applied.
This will avoid a transitory period in which the floating IP exists
and is reachable but it not yet wired to the actual target.

Partial-Bug: #1265505

Change-Id: Ib382fde021868bab2185f2fa5bdee86559148ba7"
844ae433c17ee3956a8c83ed693ca44c8e3c38de,2014-02-05 10:19:24-08:00,"Fix error message typo

 * Fix error message typo in ""_network_admin_state""
   function where ""Network Admin State Validation Falied""
   should be changed to ""Network Admin State Validation Failed""

Change-Id: I767e93c300250b4422e3980f799862ceb976c951
Closes-Bug: #1276409
Signed-off-by: Fawad Khaliq <fawad@plumgrid.com>"
6aa0a44a9d2ed0a4c2d6d515458c94698a1ad3d8,2014-02-05 14:12:03-08:00,"Add and update subnet properties in Cisco N1kv plugin

Add dns nameservers and dhcp info in subnet create.
Update subnet properties.

Change-Id: I70e3f0261f6ba5433bbf08d33e2a34cdbb20fed2
Closes-Bug: #1276876"
d4ec8e13d7b43a21443f5b67cc16db68bded9bba,2014-02-06 20:16:00+09:00,"add quota support for ryu plugin

This patch adds Quota extension support to Ryu plugin and db migration
script.

Closes-Bug: #1266650
Change-Id: I4328ebf7bf307390461807bd8bb3318ac2f64845"
eed1b7cbdb00a3fbac9f19bab1a2d7366833b753,2014-02-06 15:40:54+04:00,"Fix race condition in network scheduling to dhcp agent

Rarely dhcp agent rpc call get_active_networks_info() can interleave
with network scheduling initiated by create.port.end notification.
In this case scheduling raises and port creation returns 500.
Need to synchronize on DhcpNetworkBindings table.

Closes-Bug: #1276552
Change-Id: I52d94a40772a99c7032dba15b200bf0f21362f93"
a269541c603f8923b35b7e722f1b8c0ebd42c95a,2014-02-06 16:59:36+01:00,"Allow multiple DNS forwarders for dnsmasq

This patch change the dnsmasq_server configuration option to a ListOpt
in order to enable user to specify multiple DNS forwarders for each
dnsmasq instance.

DocImpact

Change-Id: I21963b4a6c99e4edb11040d77a6aeaa35ff44641
Closes-bug: #1240027"
212c755c34c195148c668b553ccd9f371df63420,2014-02-06 22:56:58+00:00,"Refactor to remove _recycle_ip

Since _recycle_ip is now just a pass-through to _delete_ip_allocation
it can be removed.

Change-Id: Ifba3da902de599f748038a33ef3bd98ff77c22b9
Closes-Bug: #1269501"
f0921a4bbad5946abb6d9679867928a970cf5820,2014-02-06 22:58:26+00:00,"Remove unnecessary call to get_dhcp_port from DeviceManager

Change-Id: I35459c352e712ea009589f3050205a4c307b909a
Closes-Bug: #1263217"
72eb5dde8206938bbdd9b7a0f803569489288722,2014-02-07 15:28:22+08:00,"Fix misspellings in neutron

Fix misspellings detected by:
* pip install misspellings
* git ls-files | grep -v locale | misspellings -f -

Change-Id: I93d9e2a65b0c1d1d801cae59b74d7258fbdb17dc
Closes-Bug: #1257295"
ed83265bb794d38f6f66d9e5182a9abc6b82ed53,2014-02-07 02:19:30-08:00,"NVP plugin:fix delete sec group when backend is out of sync

If a security group does not exist on the NVP backend, an error
should not be raised on deletion of the security group.

This patch changes the plugin behavior by deleting the record
from the database and just logging that the security group
was not found on the NVP backend.

Closes-Bug: #1251422

Change-Id: Ib8adf7a830ff336655fd83ad4118cde641adf284"
8d0abf2db701803eaf11c0a8ff4d759b0da5dc39,2014-02-07 16:16:15+00:00,"ML2 Cisco Nexus MD: Create pre/post DB event handlers

Split ML2 cisco nexus event handers for update and delete
into precommit (called during DB transactions) and postcommit
(called after DB transactions) methods.

Also fixes some unit tests that were incorrectly accessing
context managers without using the ""with"" statement.

Closes-Bug: #1241098
Change-Id: I59b046342706230222c1be39d13a455ca5a884ea"
056942ad5c0b379ebad06110b45b72f685b6c03d,2014-02-07 11:37:01-05:00,"Prepare for multiple cisco ML2 mech drivers

Code tree reorganization in preparation for ML2 mechanism drivers for
other cisco products. The cisco nexus ML2 mechanism driver and its
test cases need to move down into their own subdirectory.

Closes-bug: #1277222

Change-Id: I2ba366332276069545b3deb0bbd39016a893327b"
e62e5f3763934bef452d07dafc29ee3709bc2213,2014-02-09 10:57:56+01:00,"ML2 plugin cannot raise NoResultFound exception

The ML2 plugin cannot raise NoResultFound exception because it does not
use the correct sqlalchemy library:
'from sqlalchemy import exc as ...' instead of 'from sqlalchemy.orm
import exc as ...'

Closes-Bug: #1277914
Change-Id: If3819adc62b9254f0c08eea6dcfcf5f06288e20e"
3046c4ae22b10f9e4fa83a47bfe089554d4a4681,2014-02-09 02:29:04-08:00,"Improve handling of security group updates

Currently updates to security group rules or membership
are handled by immediately triggering a call to refresh_firewall.
This call is quite expensive, and it is often executed with a
very high frequency.

With this patch, the notification handler simply adds devices for
which the firewall should be refreshed to a set, which will then
be processed in another routine. The latter is supposed to
be called in the main agent loop.

This patch for 'provider updates' simply sets a flag for refreshing
the firewall for all devices.

In order to avoid breaking other agents leveraging the security
group RPC mixin, the reactive behaviour is still available, and is
still the default way of handling security group updates.

Partial-Bug: #1253993
Partially implements blueprint: neutron-tempest-parallel

Change-Id: I1574544734865506ff5383404516cc9349c16ec4"
9be79f76f9b170d22ba51528a0517f8bc42263ce,2014-02-09 03:15:35-08:00,"Add extraroute_db support for Cisco N1kv Plugin

Adding extraroute_db support for router
scheduling functionality in Cisco N1kv Plugin.

Change-Id: I2b9082fc820114a9b10148be08021e5d4b5e5043
Closes-Bug: #1287437"
26d8231b0bf4050453bcb6122484c801eff852ca,2014-02-10 00:20:31+08:00,"Skip extra logging when devices is empty

Change-Id: Id9ae8aef0555109bd88600965adb2744ab924430
Closes-Bug: #1278271"
048faa57037d30c46205dd3dedec45fea62ef2b1,2014-02-10 04:58:38+09:00,"Return request-id in API response

Import RequestIdMiddleware from oslo which ensures to request-id
in API response. CatchErrorsMiddleware is also imported to ensure
all internal exceptions are caught outermost.
api-paste.ini is updated to use them.

KeystonAuthContext middleware is updated so that it uses
request-id generated by RequestIdMiddleware.

Add middleware to openstack.conf and import all modules
under middleware directory from oslo.

DocImpact UpgradeImpact
This patch adds new WSGI middlewares ""request_id"" and ""catch_errors"".
They needs to be added to api-paste.ini when upgrading.

Change-Id: Icf01b7de697ef50bef53212da2cf520d1ff78b88
Closes-Bug: #1239923"
9b083d7636508cbc5addfe3457c1aac706f0e267,2014-02-10 06:41:14+00:00,"Fix binding:host_id is set to None when port update

when updating a port 'binding:host_id' is reset if not specified among
the parameter to be updated. As a result, a None value for
'binding:host_id' is sent from the notifier which might potentially
cause consumers to not work properly.

Closes-Bug: #1245310
Change-Id: Icfb5179940cca9f8a705eb36bdbfcbc8a421a272"
9d3a07ed04952c1fd8e65b5f46671208b793d659,2014-02-10 12:40:16-06:00,"Remove psutil dependency

The version of psutil that was being required is not hosted on
PyPi which caused some issues. This patch removes the psutil
dependency in favor of using the method that was proposed for
the havana backport of polling minimization.

Closes-bug: #1268711
Change-Id: I5a1672cfd195099d92578321153c42b8bfd09b7d"
8f0f6ca82fcbec153f992fd2347b6c4fd9a9eb25,2014-02-10 13:03:08-08:00,"NSX plugin: fix floatingip re-association

The NSX plugin does not allow to reassociate a floating IP to
a different internal IP address on the same port where it's
currently associated.
This patch fixes this behaviour and adds a unit test to ensure
re-association on the same port with a different IP is possible.

A few tweaks to the unit test aux functions were necessary to
accomodate the newly introduced unit test.

Change-Id: Iafbc3c54ebc4509ca75155ef138cc6da869df7bd
Closes-Bug: #1278581"
f8ab9d4366c87724cba2e49e71dc72e2427d5a68,2014-02-10 13:51:33-08:00,"Validate multicast ip range in Cisco N1kv Plugin

Do the validation of multicast ip range in Cisco N1kv Plugin and send
appropriate parameters to VSM.

Change-Id: Iaa1288d8a6deb2a2f32b263d4556dde8938d75f5
Closes-Bug: #1282754"
9869cc1d100ced5f50cf03b557639835c364fbb5,2014-02-10 23:32:24-08:00,"Add support for router scheduling in Cisco N1kv Plugin

Added functionality for router and network scheduling
in Cisco N1kv Plugin.

Change-Id: I1a8d27670d10ca26fb62a8d02230a1aaf3e7bbca
Closes-Bug: #1286412"
2302ed3f22512590af23a649e09b952189e0fa9d,2014-02-11 20:10:53+01:00,"Move db migration of ml2 security groups to havana

ml2 plugin is a havana feature. Currently securitygroups table are
created in chain of migration after havana release. It causes db
migration failure when migrating from havana to current head because
securitygroups table is attempted to be created although it was already
created by create_all().

Closes-bug: #1271231
Change-Id: If450bd95de7a5fdfdb2219cfbf7eb0c1323044bb"
1eb8fa563d13e46f0a7011143f65e371ae091684,2014-02-12 11:14:14+08:00,"add router_id to response for CRU on fw/vip objs

Closes-Bug: #1231770
Change-Id: I3763d2af855d2ad28ff89b528264ba981e71c08a"
5b5ba869aa4680bcfa7544c4e718cb5a5dc9c168,2014-02-12 15:43:52+09:00,"Fix ValueError in ip_lib.IpRouteCommand.get_gateway()

As metric is not necessarily the 5th word of the gateway line, the
method should search the string 'metric' in the line and pick the next
word as the metric value.

Change-Id: I2663ddbae82f80b912b364c07f9ab92c5b90b718
Closes-Bug: #1267790"
aa85a97ca2dcb06996ed133d864705f1dca722b1,2014-02-12 22:44:56+09:00,"Raise an error from ovs_lib list operations

Previously list operations in ovs_lib returns an empty list
if RuntimeError occurs and a caller cannot distinguish an error
from normal results. This commit changes ovs_lib list operations
(get_vif_port_set, get_vif_ports, get_bridges) to raise an
exception when RuntimeError occurs.

Note: callers of these commands are ovs/nec/ryu-agent and ovs_cleanup.
- plugin agents: these commands are inside in try/except clause
  in daemon loop and there is no need to change.
- ovs_cleanup: there is no error catch logic in main() at now
  and it calls commands other than ovs_lib, so it can be cleanup
  later if required.

It also fixes the code to use excutils.save_and_reraise_exception
when reraising an exception.

Change-Id: I2aa3b51b8661c75846cb588c08c8f8ee00c37004
Closes-Bug: #1277029"
d59d5a1c72c2324b857225680f5578d381a2ec73,2014-02-12 06:16:46-08:00,"NSX: Fix possible deadlock in sync code

This patch removes the call to nsx from within the db transcation
which can cause deadlock if another request comes in during this time.

Change-Id: If16b53a77997bccfdff2554dead26f42e23eaec9
Closes-bug: #1278991"
0048b2e83f8deaef4ae8f453215cd8eb85e83e66,2014-02-12 11:47:27-05:00,"Lowercase OVS sample config section headers

The ""Sample Configurations"" section of ovs_neutron_plugin.ini
has uppercased section headers.  In Havana the section headers
were normalized to lowercase, but the sample configs were never
updated.

Change-Id: Ic33392788317adcd6eb86caeef4f25aa4a3d10c8
Closes-Bug: #1279418"
a060b6c0b7d26b02ac2ca15ede49fa56a026efda,2014-02-13 10:19:01+08:00,"Use six.moves.urllib.parse instead of urlparse

To keep Python 3.x compatibility, use six.moves.urllib.parse to
replace urlparse.

Closes-Bug: #1279611
Change-Id: I712035926f449e1bc5ab1fe85927369b826cb9cc"
b3ec1cd6578a19413893a6b2ef276532c44c2a4f,2014-02-14 00:15:37+09:00,"Use save_and_reraise_exception when reraise exception

This commit fixes neutron core and common codes.

Partial-Bug: #1279813
Change-Id: Id109924c7ff9b4f0d74c23665016a54bfd7dff77"
2702baed390d094b0eac07d0ae167ed236868d00,2014-02-13 15:38:05-08:00,"Avoid processing ports which are not yet ready

This patch changes get_vif_port_set in order to not return
OVS ports for which the ofport is not yet assigned, thus avoiding
a regex match failure in get_vif_port_by_id.
Because of this failure, treat_vif_port is unable to wire
the port.
As get_vif_port_by_id is also used elsewhere in the agent, it has
been enhanced in order to tolerate situations in which ofport might
have not yet been assigned.

The ofport field is added to the list of those monitored by the
SimpleInterfaceMonitor. This will guarantee an event is generated
when the ofport is assigned to a port. Otherwise there is a risk
a port would be never processed if it was not yet ready the first
time is was detected. This change won't trigger any extra processing
on the agent side.

Finally, this patch avoids fetching device details from the plugin
for ports which have disappeared from the OVS bridge. This is a
little optimization which might be beneficial for short lived ports.

Change-Id: Icf7f0c7d6fe5239a358567cc9dc9db8ec11c15be
Partial-Bug: #1253896"
702e1fbf7ad5dd961dfd35cd6a0e54d4d6da5e34,2014-02-14 00:27:17+00:00,"L3 agent fetches the external network id once

Rather than fetching the id of the external network each time that
_process_routers is called, get it once and remember it.  If the agent
is ever requested to connect to a different ext-net then it will fetch
the current ext-net to double check for the unlikely event that the
ext-net has changed.  If it has then it will remember the new ext-net.

This is only applicable in the case where there is only one ext-net
that has not been configured explicitly in the config file.  That was
the only case that would cause an RPC message in the first place.

Change-Id: I40bbbf6233131ea5d40122ef9495fd3cb7dc823a
Closes-Bug: #1269567"
85ddbde058d8bda0b938eb7a45ef73519a831b3b,2014-02-14 11:18:06-08:00,"Fix request timeout errors during calls to NSX controller

Sometimes two correlated exception traces are observed in
the server log for the Neutron Server backed by NSX:
RequestTimeout (The nsx request has timed out) and
OperationalError (Lock wait timeout exceeded). This is
generally described by Guru Salvatore Orlando as the,
and I quote, the ""infamous eventlet-mysql deadlock"".

This patch tries to address the issue by adding a
cooperative yield in the nsx client code (it’s a good idea
to call sleep(0) occasionally in any case) and also by
avoiding the unnecessary spawning of another Greenthread
within a call that is already executed in Greenthred
itself.

Closes-bug: #1267101
Related-bug: #1279497

Change-Id: I8e298468fb730f11a66fbd4211121ee7d3e2a548"
3d24fe5710cbea6d7d1f88c3476f4a856347ab5e,2014-02-16 15:55:18-08:00,"Parse JSON in ovs_lib.get_vif_port_by_id

This patch replaces regex matching of text output with parsing
of JSON output in ovs_lib.get_vif_port_by_id.
This makes the code more reliable as subtle, possibly even
cosmetic, changes in ovs-vsctl output format could cause the
regular expression match to fail.

Also, this makes the code consistent with ovs_lib.get_vif_port_set
which already uses JSON output.

Finally this patch slightly changes the behaviour of
ovs_lib.get_vif_port_by_id returning None if elements such as
mac address or ofport were not available.

Change-Id: Ia985a130739c72b5b88414a79b2c6083ca6a0a00
Closes-Bug: #1280827"
9bd6754b573e362a11d3536873ae818e3e910cb6,2014-02-17 11:13:33+08:00,"Use six.StringIO/BytesIO instead of StringIO.StringIO

to keep Python 3.x compatibility, use six.StringIO/BytesIO to
replace StringIO.StringIO

StringIO works for unicode
BytesIO works for bytes

Change-Id: I3892098e31d8d6984d58136110aae653dc4047ab
Closes-Bug: #1280100"
b0306a93645ea6475a2bc045d8fc8bc4bd6f00a5,2014-02-17 04:36:45+00:00,"Delete duplicate internal devices in router namespace

When neutron router-interface-delete <router> <subnet> is ran
during L3-agent restart, the agent may fail to delete the old
internal device. After the restart, when the command ""neutron
router-interface-add <router> <subnet>"" is ran again, the
router ends up having two internal devices configured with the
same IP address.

Closes-Bug: #1244853
Change-Id: I0d7e2db6aa7dae26d0fc3fe1b1527762cb1e3b23"
026bb068a542dda727066520c33c34e72af1c2d6,2014-02-17 15:14:56+08:00,"Remove dependent module py3kcompat

Module py3kcompat was removed from oslo-incubator, we can use
six directly.

* Sync commit of removing py3kcompat from oslo
* use six replace usage of py3kcompat

Change-Id: Ifc9be2cc36c93d298402bd430be35b541c9b7eba
Closes-Bug: #1280033"
1f4595872c2d06359b78795b406ac42fa99cc7a4,2014-02-17 09:31:30+02:00,"Add update from agent to plugin on device up

Add RPC message to plugin on device up once configured.
Update device details attribute to use segmentation_id
instead of vlan_id.

Change-Id: I9be8389c01c4c29025bbe868919e39fde3251a58
Closes-Bug: #1242532"
abca726e405fec960b546319ea81295b0c6adb0c,2014-02-17 21:34:03+04:00,"Validate rule uuids provided for update_policy

Add corresponding validation method to fwaas extension

Change-Id: I643c10a996813d251684d3b5de04c8826729129f
Closes-Bug: #1281083"
854a5ac0bec932130eac0ac1ca1e679cc6487c93,2014-02-18 04:31:11+09:00,"Fix typo in service_drivers.ipsec

Closes-Bug: #1280597

Change-Id: If2238d66af4db1b0134bbd6407b2229b4af363ee"
d8f8d3af706ded5d6d16fc86e0de89f5c7db581c,2014-02-17 22:11:52+01:00,"Reset the policy after loading extensions

The loading of extensions might impact how rules are interpreted in the
policies; for instance, the external-net extension specifies how to
convert the router:external field of a network (to a boolean). So we
need to make sure that the policy is recreated afterwards.

We also need to fix a unit test that assumes that the policy is loaded.

Change-Id: Ifde13323b1435fc84c6cb24ab6a71de5d67f6b9f
Closes-Bug: #1280738"
a5a8e2db49aa1a12ffc968fb23913f7eeade69a3,2014-02-18 09:50:57+08:00,"Fix invalid facilities documented in rootwrap.conf

The values user0 and user1 do not map to valid facility values.
local1, etc.  Using user0 results in a  pri value that does not map
back to a facility of the same name in syslog.

RFC5424 suggest values values of local0 through local7.  Setting
syslog_log_facility to one of those values results in a message with a
priority that can be mapped back to the original string value.

This fix adjusts the comment in rootwrap.conf to suggest the local
prefix instead of the user prefix.

Change-Id: I835ad17c817b8623e382368b39b06944470be480
Closes-bug: #1280879"
6dd1a370fe2ece809c06202c04a7d230a74fa91a,2014-02-18 14:42:21+01:00,"Update help message of flag 'enable_isolated_metadata'

Thanks to the commit c73b54e50b62c489f04432bdbc5bee678b18226e,
the way of DHCP agent determines how a subnet is isolated evolves.
But the flag help message wasn't updtated accordingly to this evolution.

Change-Id: If07d8e0802524f9babdee0c8cc07d40cb0803afb
Closes-bug: #1269722"
5c06d87588cdde0a1683a8ee40eb1809bd11c57c,2014-02-19 10:25:43+08:00,"ipt_mgr.ipv6 written in the wrong ipt_mgr.ipv4

This patch fixes the issue of writing the wrong firewall rule where an IP6
rule is written to IP4.

Change-Id: Ie7c75c71c9dcfbd9feabaffe4416ede80ff350d8
Closes-Bug:#1263877"
47079b78b8d8414da9e876d31c6364d6c78389ab,2014-02-19 19:28:18+09:00,"Fix class name typo in test_db_rpc_base

Change-Id: I23fd11fe4fdd2988463f2cf592d884cba72cdb41
Closes-Bug: #1281921"
b6a8aea4d1fe8be6073af57fad2ab6863d8f359c,2014-02-19 16:41:48-05:00,"Improve unit test coverage for Cisco plugin model code

Closes-Bug: #1190620

This fix improves unit test coverage for:
quantum/plugins/cisco/models/virt_phy_sw_v2.py
Test coverage is improved from about 78% to 99%.

One change included in this fix is removal of some code in
the _invoke_plugin() method in virt_phy_sw_v2.py which looks
like it's attempting to handle the case where the number of
arguments being passed to _invoke_plugin() exceeds the number
of arguments expected for the target plugin method. This
section of code does not get executed for any existing
calls to _invoke_plugin(), and it doesn't appear that
this logic would work (except when the target plugin method
includes a **kwargs expansion).

Change-Id: Ibceb7a462a213f3ba693bcbe94e77d97b2e1440a"
9e247277e2d916fa705715e018ef5f3f221f0efa,2014-02-20 13:01:28+09:00,"tests/unit: Initialize core plugin in TestL3GwModeMixin

TestL3GwModeMixin can fail randomly because it doesn't initialize
core_plugin and can be run random core plugin depending on execution
order of tests. It also fails with core plugin uninitialized when it
is run without other tests.

This patch refactors the setup code of core plugin and apply it to the
related tests.
This patch reveled the same bug of test_metaplugin.py which is also
fixed by this patch.

Closes-bug: #1273259
Change-Id: I3c1d4d8b3d69262b89c7747daa8267bf2c8e7f6b"
2ea6eadfd574770f19c817f9451ab4e7ad6d77b9,2014-02-20 15:00:48+09:00,"Should specify expect_errors=False for success response

In API unit tests, expect_errors=False should be specified
when expecting 2xx API response.

Closes-Bug: #1282401
Change-Id: Ib2d57aab16f73f234b3cb6ecfeecf2779bf17223"
494a0f844d4a6f4cb0e3358c3403db81a66ca96f,2014-02-20 15:00:34+01:00,"Copy cache package from oslo-incubator

Related-Bug: #1276440
Change-Id: I7aaf8ae2eb909816d85092baa5c111f00e60d2c7"
433287b4f51e45fbb7a73f68dd63b433ea5d9066,2014-02-20 07:02:35-08:00,"vshield task manager: abort tasks in stop() on termination

This patch kills the manager thread, and aborts active tasks
rather than sending an exception to the manager thread and
have it do the abort on termination.

Unit tests involving vshield task manager might take longer
as a side effect of this patch.

Related-bug: #1282452

Change-Id: I9e9e41ce7e8969a2ea51bfce96b1303125a24308"
fcad26e394cd6021aab2c94f1179533cc7866f8c,2014-02-20 16:58:39-08:00,"Use different context for each API request in unit tests

test_router_add_interface_subnet_with_port_from_other_tenant in
neutron.tests.unit.test_l3_plugin.L3NatTestCaseBase was mocking
neutron.context.Context thus performing multiple API requests
with the same context instance. As a context instance also has
a DB session attribute, this might cause unexpected side effects,
especially for plugins which process request asynchronously.

The plugin neutron.plugins.nicira.NeutronServicePlugin was being
affected.

This patch ensures each request has a different context object
without changing the unit test semantics.

It also refactors slightly test_edge_router.py in the nicira
unit test package to avoid executing twice the same unit tests.

Change-Id: I4895faa00ebd915eb9e259930db2d004a9e78a86
Closes-Bug: #1280035"
7ab7e70559733a97eb0c77442bfaae7e7e10b790,2014-02-20 20:15:21-08:00,"wsgi.run_server no longer used

Removes run_server method and test that is not used by anything.

Change-Id: I280c3e249b8e3f46de5a3d364a4a34ffc5acd064
Closes-bug: #1282873"
a5ccc2358dcc2cee5bc8db6a4448f58bae40b67b,2014-02-20 20:50:35-08:00,"Don't require passing in port_security=False if security_groups present

If creating a port on a network that is marked as port_security_enabled=False
and one passes in a security_group in the port_create request previously an
error was raised saying they needed to also pass in
port_security_enabled=False. This patch removes that requirement and instead
sets port_security_enabled=True internally if a port has an ip_address and a
security_group is passed in. This is more convient and does not break
backwards compatibility.

Closes-bug: #1267249
Change-Id: Ifb5a5511f016a5d8c5b5075c9fdc27279cdd9bb5"
a06c2f6cbdff64bdc9750b57cb8782cc337774ff,2014-02-21 13:07:53+08:00,"Adds https support for metadata agent

Adds two configure options to support https client for metadata proxy
* auth_insecure: turn off verification of the certificate for ssl, or
* auth_ca_cert: CA cert to check against with for ssl.

Change-Id: I3ffb86ae9ce31931436a4e13957aae30eebf9d92
Closes-Bug: #1263872"
a38d73d9449675374f45c44b35978735e53cdbaf,2014-02-21 08:37:53+00:00,"Handle racing condition in OFC port deletion

Multiple delete_port operations can run in parallel.
For such case later operation(s) will receive 404 (NotFound)
error from OFC or NotResultFound sqlalchemy exception.
These are valid exceptions and they should be ignored
in delete_port operations.

Closes-Bug: #1281574

OFCConsistencyBroken is renamed to OFCMappingNotFound
because when multiple delete_port operations run in parallel
OFCConsistencyBroken can occur and it is a valid case
so the excepion name looks inappropriate.

Change-Id: I1511d55994c88b8828f0ff62610c18ddc6dfac8f"
7ad82b95f611678f71fd500b6541e04ff8359d15,2014-02-21 18:26:32+09:00,"Fix test_db_plugin.test_delete_port

Also add PortNotFound check to test_delete_port_public_network.

Change-Id: Iec461364345b200e2d17ba26a6c5362eec6d93ef
Closes-Bug: #1282946"
14cb886809e5cccbf799a0dc2e5b99f31b1ab3be,2014-02-21 21:15:19+09:00,"Use ""!="" instead of ""is not"" when comparing two values

Change-Id: I2cd9575585dde7c44b528077a7bffa16379b1759
Closes-Bug: #1283019"
4abf27a4434863fcec9e6cc3ed1782c225c99cc0,2014-02-21 12:45:03-05:00,"Fixes broken documentation hyperlinks

Several hyperlinks were incorrectly specified in one page of the docs.
These syntax typos have been fixed.

Change-Id: I1a4fe91ac05f51b71e01c001b76712752664ae74
Closes-Bug: #1268611"
2a0c679b00ecf8d047a4372bc38f1b2662348f48,2014-02-21 12:23:36-08:00,"Fixes Tempest XML test failures for Cisco N1kv plugin

Renamed N1kv_profile class to N1kv.
Modified N1kv attribute extension class to fix XML namespace issues.

Change-Id: I29b541730fc95c5e16667b64efd180be31e25b17
Closes-Bug: #1282352"
326b85dd6154048b1671732d2d7df8deb8b99207,2014-02-21 13:30:12-08:00,"Plugins should call __init__ of db_base_plugin for db.configure

Currently each plugin calls db.configure() within the plugin's __init__
class or defines an initialize() method that's sole job is to call this
method. Instead we should just call the super method of a plugin so that
db.configure() is called for us out of the db_base_plugin class.

Note: the only reason why I'm making this change is that I want to add
something to the __init__() class of the db_base_plugin that's needed for
the nova-event-callback blueprint and adding it in the base class of init
looks to be the best place.

Change-Id: Iec3c912735021ceb90f657108aad3a57460d66e7
Closes-bug: #1282303"
ebf2763508535d9b3aaa6753139858b6fdd21f23,2014-02-21 14:43:12-08:00,"remove pointless test TestN1kvNonDbTest

Change-Id: Id0cd2ea394276f159c7edfadbdc517a16b24776c
closes-bug: #1283250"
d532864d832656adaca433792ed50c8ed71db40a,2014-02-22 15:17:30-08:00,"NSX: get_port_status passed wrong id for network

The call to get_port_status in update_port was passing in the neutron
network_id instead of the nsx_network_id. These used to be the same
but now are different. This patch updates the code so that it now
passes in the correct uuid.

Change-Id: I7b0bd617f68291fa457a49e52d595bb8de1d4835
Closes-bug: #1281789"
b22442a6b80c22f6e31d086263cdb77de10d92ef,2014-02-23 00:18:20-05:00,"Raise max header size to accommodate large tokens

The max header is exceeded in the following scenario
- Auth tokens built with a keystone v3 API catalog
- A catalog with approximately 8 or more endpoints defined

Change-Id: Ie815e457c0b25ab828e780b5d90233ba0ceff61f
Closes-Bug: #1251026"
1c0235fb592d63e03506670e5690ab6c7ecab0a7,2014-02-23 12:17:49-08:00,"BigSwitch: Fix tenant_id for shared net requests

The URI port requests are sent to on the backend
contains the tenant_id of the network. This corrects
a bug where, on port updates and deletes, the tenant_id
of the port rather than the network was being used,
which was incorrect when attached to a shared network.

Closes-Bug: #1278530
Change-Id: I09ffc767c669416555867e975d0b7057a5cfa0cb"
2b9805105eac9594a038c8e09f4b6cfc6255c677,2014-02-23 22:30:31+01:00,"Fix wrap target in iptables_manager

This patch fixes issues when using wrap target
for add_rule and remove_rule methods.

Change-Id: I01926719ef5ccf229748b9ceb1553e5314ab623e
Closes-bug: #1269189"
b5d09ffe604a1f6d8272b773bb183e5f2bc3d0f3,2014-02-24 11:20:50+08:00,"Make sure dnsmasq can distinguish IPv6 address from MAC address

Currrently, due to in dnsmasq host file, the IPv6 address does
not be wrapped with '[]', dnsmasq cannot distinguish IPv6 address
from MAC address, it will cause the deployed instances cannot get
IPv6 address via dnsmasq dhcp service.

Change-Id: I023e44667a238664d11f2ac2cc484432cd301bcc
Closes-Bug: #1281916"
9af846caf7f4d00eddb2d839c032b909eb79d403,2014-02-24 13:25:11+09:00,"options: consolidate options definitions

Some config options(interface_driver, use_namespaces) are defined
multiple times in ad-hoc way.  It causes DuplicateOptError exception
when using those module at the same time.  Right now the exception is
avoided in ad-hoc way by each executable.  Those duplicated
definitions should be consolidated and treated in uniformed way.

This is the blocker for blueprint: l3-agent-consolidation

neutron.services.loadbalancer.drivers.haproxy.agent periodic_interval
conflicts with neutron.service one. Since there is no way to fix it
without changing existing behavior/default value, it is untouched for now.

Closes-bug: #1279769
Change-Id: Ifed79b7ee0033644854499416f8a2b22a20416fe"
cd6e9ad2c1d107424a1635afcb841f016e97fe67,2014-02-24 09:40:41+01:00,"Sync oslo cache with oslo-incubator

Due to removal of py3kcompat we need to sync with
oslo-incubator in order to use six package directly.

Related-Bug: #1276440
Change-Id: Ib3d1c9e09497f7ecd7495ef0f70c6105c14a9783"
5dea9b2f49d97a26952d58fba95cfbd734729615,2014-02-24 22:15:41+09:00,"Fix webob.exc.HTTPForbidden parameter miss

HTTPForbidden should use the parameter 'explanation'
instead of 'detail'.
This patch fixes this bug.

Change-Id: I4c66697daf0ce9e00c8820311dc7141eacd7e733
Closes-Bug: #1283872"
609f01a1ddca64ec191cb15a4f6fb93d219c3336,2014-02-24 15:01:37-08:00,"Support Port Binding Extension in Cisco N1kv plugin

Change-Id: I9bcacb2b1f1bb1500b9176a49736aac128938de8
Closes-Bug: #1272128"
fdbaba877f98bf20c1ff71c9bd0d04956120f845,2014-02-25 10:33:56+09:00,"tests/service: consolidate setUp/tearDown logic

Consolidate the duplicate code for extension api tests.
This will be also used by servicevm extensions later.

At the same time, a bug in test_extension_firewall.py is also fixed.
double call of super().setUp().

Closes-bug: #1275654
Change-Id: I72f185ef6e5af55729ced51fc0b72fae799d46ac"
043b4dde00216e71e855ff353e41695e4ed940a9,2014-02-25 11:11:23+01:00,"l2-population : send flooding entries when the last port goes down

Delete port used to call update_port_down to calculate
its fdb entries during delete_port_precommit. But during
the pre-commit, the port is still up, so update_port_down
acts as if there was still one port on the agent, and
doesn't add flooding entry in its fdb_entries.

Closes bug #1282141

Change-Id: Icedd02f33d999200505950beb9169ae3634e551b"
e3e0401672c8745092d3f0d99686b2ca94c1eb58,2014-02-25 11:11:23+01:00,"l2-population/lb/vxlan : ip neigh add command failed

we were using ip neigh add command which must be replaced by
ip neigh replace, to avoid error when creating a VM with an ip
previously used by a deleted VM

Change-Id: I2405096d5925ae37efd5f8abcc02b99cf0c9f5d3
Closes-Bug: #1282662"
a1de76d1407952572cfe081c4872d7a6127995b3,2014-02-25 14:22:46+04:00,"LBaaS: check for associations before deleting health monitor

Need to prohibit health monitor deletion if it has associations with
pools. Given that pools may belong to different lbaas drivers the process
of monitor deletion becomes complex and unreliable since association
deletion may fail on any single driver.

DocImpact

Closes-Bug: #1243129
Change-Id: I27c20e7a5be8433f90569534ecf838e33027cb00"
50da460869661ba63971a17c9c1b514bf22874a2,2014-02-25 15:44:43+05:18,"Include proper Content-Type in the HTTP response headers

Neutron namespace proxy handler and metadata agent were not setting the
Content-Type in its response. Both of them were returning only the response
data which is obtained from the nova-metadata-service. Since they were returning
only the response data, the Content-Type returned to the clients has the default
one which is - ""text/html"". Ideally this should be set to the data type which is
present in the HTTP Response. The fix now includes the Content-Type which is
returned by nova-metadata-service

Closes-Bug: #1243878
Change-Id: If68f0b508fbea4ecd1eb0e58d602b5ba6ccbe263"
0dd0b6b5ee75bd437b2a82f2e666a6c671b91514,2014-02-25 19:43:14+09:00,"Lower log level of errors due to user requests to INFO

Errors due to bad client requests (e.g., NotFound, BadRequest)
are logged as exception/trace level and it is annoying
from the point of operators' view.
This commit changes the log level for errors due to
user requests (HTTP 4xx errors) to INFO.

Closes-Bug: #1282394
Change-Id: Ic5646333db88ce856f9366e914cf961890d30501"
50edccfad29d3c602eba628fc80e46a0a67de090,2014-02-25 11:40:51-08:00,"BigSwitch: Stop using external locks

Changes BigSwitch server manager REST lock
to an in-memory lock since the plugin isn't
expected to run in independent processes.

Closes-Bug: #1284881
Change-Id: I2fdd5ba79a0c4b94b2b410db54a63f7c0ca47525"
464c307c68fca0353fb7d65acf650001c8de3f73,2014-02-25 13:23:55-08:00,"NSX: Fix newly created port's status should be DOWN

Previously when creating a port in neutron using the nsx plugin
the port status returned would be ACTIVE even if this was not the
case. Now, DOWN is returned which will be updated by the backend
when the port goes ACTIVE.

Change-Id: I600fb1292ae79146cb14c7e23170262973878de0
Closes-bug: #1279551"
d1472deed5bf7b4cec7363e64fd4746cb278fcfb,2014-02-26 09:16:07-05:00,"ML2 mechanism driver access to binding details

The following properties are added to the PortContext object passed to
ML2 mechanism drivers for port operations:

* bound_driver - name of current bound driver
* original_bound_driver - name previously bound driver in an update
* original_bound_segment - network segment used in previous binding

Some issues with the existing ML2 port binding unit tests were also
fixed.

The remainder of the fix for bug 1276395, making these binding details
available to mechanism drivers when a port is deleted, will be
addressed as part of the fix for bug 1276391.

Partial-Bug: #1276395
Change-Id: I9ecff4a4e044920ed2dde709c89aeb9bc773220d"
9bc29208bda6071a34bcc0da36a396eb8bab4f30,2014-02-26 17:42:51+00:00,"Fix get_vif_port_by_id to only return relevant ports

This is returning any port, even if it's not on the switch that we're
looking at. As a side-effect, this means that we can actually manipulate
these ports while we really shouldn't.

Co-Authored-By: Rossella Sblendido <rsblendido@suse.com>
Change-Id: Ia4f4e93237c1c2ea6cb4b6c2f5adf78d6b34c7bf
Closes-Bug: #1283765"
706a8b1ff30c011169846ed5e38f06aa9f15faf2,2014-02-26 13:54:36-05:00,"stats table needs columns to be bigint

Bandwidth measurements trivially overrun 32bit counters.  Change storage
type to BigInteger from Integer.

Closes-Bug: #1284314
Change-Id: I20db25f374de66b8443ff50bac979bff634d8a14
Signed-off-by: Stephen Gran <stephen.gran@guardian.co.uk>"
2cbded6e836e0b20b23384eb26252eda58298259,2014-02-28 12:44:36-06:00,"Openvswitch update_port should return updated port info

Found when I enabled test_extension_allowedaddress_pairs, where
test_create_port_removed_allowed_address_pairs would fail due to the
returned port still containing the original addresspair.  The cause is
ovs simply not updating the port info being returned.

This patch additionally enables test_extension_allowedaddress_pairs for
openvswitch.

Moved checks and updating into method similar to what we do for
extradhcpopts and security_groups.

Additionally, this required fixing is_address_pairs_attribute_updated() as
it was passing (non-hashable) dicts to utils.compare_elements.

Change-Id: Ic871fea68fb9fcc862b1fd5ae5fe7aec540e4a30
Partial-Bug: #1255150"
16dc5b9b5273c36d6b9f76b96d8753a4a7d511d0,2014-02-28 11:34:19-08:00,"Fixes spelling error
Closes-Bug: #1284257

Change-Id: I3c5ff9b7e8830023f54d09d74c1a9d3c9a4b82f5"
4ff43896eb199656d25ea12d71082a0b28a1d5a1,2014-03-01 03:35:46+00:00,"Merge ""Fixes spelling error Closes-Bug: #1284257"""
038a56c13dafb1993ea2c6cba5a1a06b573cfa03,2014-03-01 17:01:08+01:00,"N1kv: Fixes fields argument not None

N1kv plugin includes 'fields' in call to get_<resource> function in
superclass. This can trigger errors if other fields are used in the
subsequent processing in the N1kv plugin's own get_<resource>
function.

Change-Id: I63687a830579a178c6daaa2b8f71bef7eb53d584
Closes-bug: #1285289"
a7049809d14c9cdc18b3b4bcb437e2a94b849082,2014-03-02 02:02:51+00:00,"Log configuration values for OVS agent

When other agents start up, they log the configuration values
to their logs.  This patch adds the same feature to the
Openvswitch agent.

Change-Id: I00bc82a3dafbd214a2ddbdf525dd4cc327838af9
Closes-bug: #1285962"
6b13ee0c3b446b7fc4f440dd58c9226bf4abfdf8,2014-03-02 09:03:19+00:00,"Avoid using ""raise"" to reraise with modified exception

The code changes the exception and reraises it.
This commit changes the code to use the same way as
excutils.save_and_reraise_exception does to ensure
the exception context.

This is the last patch of reraise clean up series.

Closes-Bug: #1279813
Change-Id: I8787dcbdc8321f75964de26e97cae395707aafc2"
64acc3bd63846a6e7da8d1136f946372c698cb76,2014-03-02 09:04:13+00:00,"nec plugin: Avoid long transaction in delete_ports

db_plugin.delete_ports() can lead to long transaction
if plugin.deleete_port talks with external system.
This commit removes a transaction in delete_ports and
allows NEC plugin to use more granular db transactions
in delete_port. It greatly helps db race conditions and
timeouts in delete_port operations.

To avoid to impact other plugins/drivers by changing
db_plugin.delete_ports directly and to land this patch soon,
this commit overrides delete_ports() in NEC plugin.
Further disssion on transaction in delete_ports will be
discussed under bug 1282925.

Closes-Bug: #1282922
Related-Bug: #1282925

Change-Id: I2c00694ad34eb2058bf7a0ff1c920ceded327d43"
2b16e91b3f0fe06153a3a890c159c52974a57b91,2014-03-03 08:31:44+08:00,"Fix NVP FWaaS errors when creating firewall without policy

Change-Id: I7ced6fe91a2d27c3739c54aa90489976532b3ecc
Closes-Bug: #1282366"
b481026c0e3f113142fd58d9d7894414f1441c84,2014-03-03 16:09:41+09:00,"Remove vim line from db migartion template

This commit also empties __init__.py and removes vim
modelines in the db migration related codes.

Change-Id: I9f83109c5becb6cf7e2e6ad9ad8eb9af3d8e0972
Closes-Bug: #1286991"
aa5ace6b7555dd9ed59dd07ea022585f44767f27,2014-03-03 18:08:35+08:00,"Remove unused 'as e' in exception blocks

Change-Id: I0bd26e1657a4e0ec40405d03d43aee9e10a13636
Closes-bug: #1287031"
f50df8eb3c5bf38abbb0389b85c4b628cffb59f4,2014-03-03 12:41:43-05:00,"Delete subnet fails if assoc port has IPs from another subnet

This change fixes the following failure scenario:
- Create a network
- Create two subnets on the network
- Create a port on the network using one of the subnets
- Delete the other subnet
= = = > FAILURE: Subnet delete fails because supposedly there
is/are port(s) still associated with that subnet.

The problem addressed is that delete_subnet() in
neutron/db/db_base_plugin.py is checking for port(s) still being
associated with the subnet's network, not the subnet itself.

Change-Id: I7adbe18cce412135b2e42dcb7c592e60c1ec5f8f
Closes-Bug: #1281694"
c75aada35b13da33d08f51d14fd36640d8b735fa,2014-03-03 12:07:14-08:00,"Use database session from the context in N1kv plugin

Avoid inconsistencies by using context.session for database
transactions wherever possible in the Cisco N1KV plugin.

Change-Id: Ic0784cbbf50beae6bb3b124c959ae90f3affb604
Closes-Bug: #1285473"
e8988fe72eaddb38282356fe92076fd9cd2897b1,2014-03-03 14:17:13-08:00,"NSX: nicira_models should import model_base directly

Change-Id: I49bdf72434384899d12aa6c528f8d31125a3b34e
Closes-bug: #1282354"
17624e21f4812be80ca535a1f119127c021db54e,2014-03-03 14:48:10-08:00,"Remove unused method update_fixed_ip_lease_expiration

This should have been log removed here:
	Ifcb4f093c92904ceb896438987d53e692eb7fb26

Change-Id: I9395fea531365b82a0cd16f29d6392199e2d9c22
Closes-bug: #1287407"
2a2d566be3d69295f56d2db5b6004f12d0ec5b9f,2014-03-03 17:42:20-08:00,"replace rest of q_exc to n_exc in code base

The following patch renames the rest of q_exc to n_exc which were
left when quantum was renamed to neutron.

used: find . -name ""*.py""  -print | xargs sed -i 's/q_exc/n_exc/g'

Change-Id: I04041030694b28c400b6c9c552433f2eaa4a37ba
Closes-bug: #1287462"
71deb11f6fd5186cabcc42431316deb5dbfa3dfe,2014-03-03 20:14:17-08:00,"ML2: database needs to be initalized after drivers loaded

Previously, if you started neutron-server with an empty database some
of the tables that drivers use are not automatically created. That said,
one should probably run neutron-db-manage manually to create the tables
and not rely on neutron to do this. This regression was cause in 326b85.

Change-Id: I2c578733de0213945b31fba86a3b0ea45c02295a
Closes-bug: #1285993
Co-Authored-By: Itsuro Oda <oda@valinux.co.jp>"
273b169029e6693cb862be38df1c70e540808645,2014-03-04 08:32:42+04:00,"Different class names for VPNaaS migrations

In migrations 52ff27f7567a_support_for_vpnaas.py and
338d7508968c_vpnaas_peer_address_.py different class names are set:
neutron.services.vpn.plugin.VPNDriverPlugin and ne
utron.services.vpn.plugin.VPNPlugin.

Closes-bug: #1285641

Change-Id: Ieda8d3a8a022179867010b6e47d09cf7f43f5da9"
3f29c06d54de32f0a0859f53e942e1f18326b4d4,2014-03-04 05:20:54+00:00,"NVP LBaaS: check for association before deleting health monitor

    Bug #1243129 suggests to check for associations before deleting
health monitor in DB logic, so NVP advanced LBaaS should also Change
its operations when deleting a healthmonitor.

Change-Id: I57677cc4b65a13df9f72ec689f34771c7af6a57e
Closes-Bug: #1254639"
40390598c5a440d1bbfa4f229130eeedf5cd4dba,2014-03-04 16:13:44+00:00,"Refactor netns.execute so that it is not necessary to check namespace

I saw some code in a couple of reviews today that check whether a
namespace is set and run it under ""ip netns exec ..."" if it is.
Otherwise, it runs the command without it in the default namespace.

Change-Id: I55e8f4f3523ec7a7c5a6f082addf918952a05741
Closes-Bug: #1287524"
2541ff7cad19941b62dace7e9951a56a16e53f3e,2014-03-04 17:55:53+00:00,"Avoid unnecessarily checking the existence of a device

Plugging a device usually involves checking for the existence of the
device twice, once before calling plug and once after.  It turns out
that these calls are expensive, often taking a half second or more
each.  For that reason, it is worth the effort to make sure we check
only once.

The device driver is now responsible for cleanly plugging/unplugging
the device without knowing whether it exists or not.  Pushing this
responsibility to the device driver allows implementing it more
efficiently in terms of calls made out to the operating system.

This is targetted at the neutron-tempest-parallel bp because it shaves
time off the time to set up a router, something that hinders parallel
performance.

Change-Id: I391fafe68b76e1c620d2b25e8613ba507fd25dfd
Partial-Bug: #1287824"
6c91bdfe24e275ede65df369d714ca119d5ce5f2,2014-03-04 11:11:18-08:00,"NSX: passing wrong security_group id mapping to nsx backend

When the async secgroup work was added the update_port() code was not changed
to pass in the nsx security_group uuids. This patch fixes that so that the
nsx uuids are passed in instead of neutron.

Closes-bug: #1287419

Change-Id: I1a075564f2548764de15b85b2970b5f360412eb2"
31f4046323839d6c0aaa885fe7bd5920845eab30,2014-03-04 20:28:01-08:00,"Fix race condition in update_floatingip_statuses

If a floatingip is deleted before update_floatingip_statuses() is processed
FloatingIPNotFound is raised.

Change-Id: Idf03fda75ccd147673169c24e79921ca6d8fe754
Closes-bug: #1288036"
d583d55c6a4e6c01c49411b7e5b519031bce0699,2014-03-05 07:21:59+00:00,"Check vxlan enablement via modinfo

On some linux distribution, for RHEL 6.5 as an example, vxlan is
enabled but the kernel version is still 2.6. And some linux kernel
version is higher than 3.8 or even 3.11, its vxlan mod may be
disabled. Under both situation, vxlan enablement checking via linux
kernel version may not be correct.

In this patch, we check vxlan enablement via modinfo: if vxlan module
exists and functional test pass, vxlan is enabled.

Closes-Bug: #1267682

Change-Id: Id52c04b4739d2d11fe52d4b1631cb4f39e6b577f"
fbf0e621399027d5004bbc8c888d67a3c2851686,2014-03-05 18:00:56+09:00,"Replaces network:* strings by constants

This patch replaces all occurences of the strings
prefixed by network:* by their constant equivalent.

Closes-bug: #1270863
Change-Id: I149cc0ab7bde08ea83057e6c0697f668edbe29db"
c9226a858201a6c3691390259b46a643e8dc8b2f,2014-03-05 16:24:11-05:00,"Adds the missing migration for gw_ext_mode

Requires adding the plugin to the script for
db migration for the ext_gw_mode in routers table.

Change-Id: Iefa121b5c3a60ed804bf3927d91e64d843a28fd1
Closes-Bug: #1288420"
a1e1b0a6251c9b0838f871591316c41f37b4b3e0,2014-03-06 07:30:05+09:00,"Enhance GET networks performance of metaplugin

Change to call plugin.get_networks() per target plugin
instead of calling plugin.get_network() per network.
Hook routines are used to select networks which belong
the target plugin.

Change-Id: Ieff06ac7bc7a150501f91aecc3197b0bb664d5fa
Closes-Bug: #1267290"
7f6a6cdfc95610cea0a6e4bb01e7de330e1f76d4,2014-03-05 16:41:27-08:00,"Fix typo in migration script

Recently merged migration script for floating ip is missing
a list item separator.

Change-Id: I6d20cfd584059befd591c856ec1519450030b4b2
Closes-Bug: #1288492"
142c55e82a4d36af887439a94054617a5a0ede9c,2014-03-06 08:29:52+00:00,"NEC plugin: delete old OFC ID mapping tables

Before Grizzly release, data format of OFC ID mapping tables was changed
and there are two types of ID mapping tables for old and new format.
This commit migrate data from old mapping tables into new tables,
drop old mapping tables and remove the logic handling the old tables.

In the db migration scripts, built-in compiler of sqlalchemy does not
support ""INSERT INTO table (col1, col2,...) (SELECT ....)"" format,
so a custom sqlalchemy.expression compiling method is defined.

Closes-Bug: #1286733
Change-Id: I7dae6b728ab9e10f1dc5d63418a69ee4c26354ea"
7262ba713b50ab07a932ab7c8acf7ba1d838ff53,2014-03-06 12:44:27-08:00,"Makes the Extension loader behavior predictable

When using a cluster of load-balanced Neutron Servers,
the order of extension files being loaded may differ
from one server to another. This is usually harmless,
but it is better to force the list to be loaded in the
same way across the entire cluster, just in case
something funky is going on.

Partial-bug: #1285999

Change-Id: Ib0bfd24fc52b6cd9f90c350d3af496f04a90f50a"
5ee168da8ef08226322ad416be4c099ddf781e4a,2014-03-06 12:45:37-08:00,"Drop old nvp extension file

The resource alias is unchanged so there is really
no reason of dragging this forward.

If API clients are using the name or the description
in order to play with a server's extension they are
doing it wrong so they deserve the grief caused
by this change.

Change-Id: I99086c11a0e4a0b0af479e0e3d1fbe92f8ff5988
Closes-bug: #1285999"
5e8043e8a2675b4485a52d688ea86d1165d81a29,2014-03-06 16:26:27-05:00,"ML2 Cisco Nexus MD: VM migration support

Add VM (live) migration support to the ML2 cisco nexus mechanism driver.

Change-Id: I8be2fc1f020ef1fc6c19daba0a9e278629046016
Closes-Bug: #1247976"
fe2ef9f0dd1f33b61fe11eebf2ae3d577a73ef53,2014-03-06 15:37:41-08:00,"Cisco Neutron plugin fails DB migration

Alembic migration from revision f44ab9871cd6 to 2eeaf963a447 fails
because the floatingips table doesn't exist.

The fix is to add the plugin to the DB migration path for l3 and ext_gw_mode.

Change-Id: Ic7a9c1d624d2838e9313fa95ed6ddbfea9b6e1c9
Closes-Bug: #1289039"
cb99c08e968685c6f59bab2e49f86d56a2ec509d,2014-03-06 18:57:17-08:00,"NSX: Add ability to retry on 503's returned by the controller

There are a number of circumstances where the NSX controller
may return 503. Currently the API client does not retry, so
this patch adds a retry logic with timeout.

Closes-bug: #1284277

Change-Id: I85df087d5ae409e6cb5c35eb171e89346abe81f4"
3cbf7bc598d44a6326cdbd94b210385599bab9be,2014-03-07 12:39:33+04:00,"Fix unittest failure in radware lbaas driver

Issue greenthread.sleep(0) to switch greenthreads and wait
for vip to complete deletion

Change-Id: I46b0702b0df527965ecf94e334ed3327f408a05c
Closes-Bug: #1288312"
5d782b33b772987b472ae5aeb5ec13e1bd30335f,2014-03-07 07:11:23-05:00,"Adds state reporting to SDN-VE agent

Adds periodic reporting of state by the agent
and support for agent extension to the plugin.

Change-Id: Ib7c29936f1c10cb9749291ac27b3ed24b20ed2f7
Closes-Bug: #1289100"
97c0723cfe7ffa1dbc6c278110029df755df8045,2014-03-07 10:28:53-08:00,"BigSwitch: Fix error for server config check

Raises config error when a port is incorrectly
configured for a server instead of getting a
ValueError when python tries to convert it to
an integer.

Closes-Bug: #1289132
Change-Id: Ifec0bec5640a4a57859f2673c46c610f1d21c36c"
84368554d8a13a421297298de40693956af25fcd,2014-03-07 10:43:49-08:00,"BigSwitch: Fix cfg.Error format in exception

Fixes an incorrectly formatted call to cfg.Error
in an exception handling routine in the Big Switch
server manager module.

Closes-Bug: #1289134
Change-Id: I9a1137d7395412ff6f061aacbe85f9b26269a1da"
caf7ecaef75f4d9eba0d85db8917be5a9118792d,2014-03-07 10:52:44-08:00,"BigSwitch: Fix rest call in consistency watchdog

Fixes the rest call in the consistency watchdog
in the BigSwitch plugin that was causing it to
raise an exception.

Closes-Bug: #1289138
Change-Id: Id4dff993426573be6984eb1e8f6ef2aabfff0779"
ccfe47d4b9c2abaa25b3b2a2dc655c32beb0b377,2014-03-09 07:31:12-07:00,"Add missing ondelete option to Cisco N1kv tables

Update the DB migration script, which creates the Cisco N1kv tables,
to include the ondelete='CASCADE' option in network and port
binding tables. This allows proper clean up of network and port
binding entries on respective delete operations, when the tables
are populated via DB migration script.

Closes-Bug: #1294434

Change-Id: I5dad7bd718b75cfd8825b08336e834d64bddd196"
7a67a5676fb82ddb717e6b606cc702c31523b9fa,2014-03-10 10:16:06+09:00,"Fix lack of extended port's attributes in Metaplugin

Previously, there are some extended port's attributes did not
appear in the result of GET port API when using Metaplugin.
This become a critial issue currently since lack of port binding
information disturbs normal port binding operation in a compute
node, for example.

Metaplugin did not delegate get_port/get_ports to target plugins.
This is cause of the problem because right plugin instance is not
passed to a hook which handles extended attributes.
Now, get_port/get_ports of target plugins are called so that
extended port's attributes are handled properly.

Change-Id: Ifed2505a97ceca56c4cedd22efa49adcdf3317b8
Closes-Bug: #1136252"
bb2c4ef9a26b12c68ca1e6710d0c92ce00c464cb,2014-03-10 11:47:14+08:00,"After bulk create send DHCP notification

In the past send_dhcp_notification only handle single resource
because of VALID_RESOURCES = ['network', 'subnet', 'port'].
When I use bulk created ports to boot instance, the VMs could
not get IP address from DHCP agent. So I add some special handle
in function notify().

Add unit test for bulk create dhcp notification.

Modify a paramter for code style.

Change-Id: Ibf2b3380dc3081beaf0f2f68042b022f2726bbe7
Closes-Bug: #1247902"
3f5931f9b666d5ea238300068a964398588488ae,2014-03-10 19:39:16+08:00,"Fix ml2 db migration of subnetroutes table

The ml2 db migration path doesn't create subnetroutes table. Therefore
installations were partially relying on automatic schema generation.

This patch fixes the migration path.

Change-Id: I3060dd9538b629ad7277af28008ddde27926dcc4
Closes-Bug: #1290255"
42c882b9e98755b9e119f6c566fc00a62a420af7,2014-03-10 16:34:39-07:00,"NSX: Make replication mode configurable

The replication mode on switches and routers should have been configurable
to use source replication if one did not want to deploy service node(s).
This patch fixes that by making this option configurable.

Change-Id: Id9e8043c602b5e9349c10247eab993e59db5a52c
Closes-bug: #1285383"
084b7f62280241a9037b6f9e592c466135e5fec1,2014-03-10 16:42:00-07:00,"NSX: Sync do not pass around model object

The NSX sync backend previously passed around a sqlalchemy model object
around which was nice because we did not need to query the database an
additional time to update the status of an object.

Unfortunately, this was add done within a db transaction which included a
call to NSX which could cause deadlock this needed to be removed. Now a
dict is passed around instead and proper transaction handling
is used when updating objects.

Change-Id: Id50abd8f2143b127d1ca81c360c1c6d400e1d74f
Closes-bug: #1281772"
df315513efe62667220562dd2edb5401b15ab2ba,2014-03-11 13:04:15+09:00,"Call target plugin out of DB transaction in the Metaplugin

Previously, there are cases that a target plugin is called
within a DB transaction in the metaplugin. This possibly causes
""DB lock timeout"" error since a target plugin may take a long
time (ex. communicate to a controller).

Change-Id: Ie2971bfae1fecc97086b58cd943c321feb0aba04
Closes-Bug: #1267291"
42683e17842fca91e8b6aecde08b726a3b24cda8,2014-03-11 16:44:47+08:00,"Fix bug:range() is not same in py3.x and py2.x

in python3.x, there is no method named xrange(),
it has replaced by range(),which is equal to xrange() in python2.x.
so we must fix this issue.we use six module to fix this issue.

Change-Id: I9cee3f0df2d8abbf6f66d7c5a3a0fed98df622e8
Closes-Bug: #1268439"
f5601393e97baf87daa5b2065cb8783e3fd34214,2014-03-11 17:14:24+04:00,"Fix usage of sqlalchemy type Integer

In migration folsom_initial in cisco_upgrade function table
nexusport_bindings create column vlan_id with incorrect type
Integer(255).

Closes-bug: #1289256

Change-Id: I8ef99526d19b19b51d9284ccab5703de21838ee1"
288e3127440158f177beaae1972236def4916251,2014-03-11 16:52:48+00:00,"BigSwitch: Fix certificate file helper functions

Fixes function definitions for file-system calls
in certificate functions for BigSwitch plugin.

Closes-Bug: #1289192
Change-Id: Ifea8506ea0d751e0d5b08511eafd04d2fa26be23"
31f051a0349a40fe629a7bb5ce0ea683aa28a659,2014-03-11 17:10:37-07:00,"Optimize floating IP status update

Hopefully also avoid tracebacks due to nested transactions
being rolled back

Change-Id: I1e74fb8d90de09b53d330f499b93073f19a5b9bf
Closes-Bug: #1290549"
665352f169a7d1e7eca590d466241cc313adb7c3,2014-03-11 17:10:37-07:00,"Query for port before calling l3plugin.disassociate_floatingips()

The call to l3plugin.disassociate_floatingips() trigggers several events
that could cause a timeout to occur trying to query the db for the port
therefore this patch changes the code to query first for the port.

Closes-bug: #1290478

Change-Id: I69fe9cff4b550240215329e1082a63cd11617faa"
1dfd65f4cff1133cff45e103083fc3ae3130877b,2014-03-12 02:20:16+00:00,"Stop mock patches by default in base test class

Adds a mock.patch.stopall to the base unit test
case cleanup routines to stop patches by default
in unit tests. This behavior can be overwritten
by setting an attribute on the test class if
required.

Also removes the explicit stops in the Cisco n1kv,
VMware, and NEC unit tests to leverage the new
automatic cleanup.

Closes-Bug: #1290550
Change-Id: Ic642430a765ea8deb07ebd88b619da58a58e0edd"
3196cef6986b733ff0a101164e5f3a49a10425c0,2014-03-12 04:17:11+00:00,"Removes calls to mock.patch.stopall in unit tests

Removes unnecessary calls to mock.patch.stopall
in individual unit tests since it is now
automatically called from the base test case.

Closes-Bug: #1291130
Change-Id: Ia8e82d6a9a9bc9bd5f48146c1be53069ff1cdb01"
21aa7e3f78094837ca63d3742459c7a8d011c9dd,2014-03-12 12:36:26+04:00,"Fix unittest failure in radware lbaas driver

Wait for vip delete completion before deleting network
and subnet.
Also fix indentation in the driver

Closes-Bug: #1288312
Change-Id: I88b3252102d6c4a60bbadf2951bbb74fcd19792b"
7599d9d0526e22977caf6de13c751884a5d8f2f5,2014-03-12 10:41:43-05:00,"Fix ml2 & nec plugins for allowedaddresspairs tests

Enabling the allowedaddresspairs tests uncovered that update_port()
was not returning the expected updated port info (still contained
original info).

Change-Id: I88f252e1348d272edd114fbee69e2309d3740213
Closes-bug: #1255150"
815dd8c4ea026b4064a853c7ad5bab47afec06b6,2014-03-12 13:53:26-07:00,"BigSwitch: Widen range of HTTPExceptions caught

In order to trigger a reconnect, the Big Switch
plugin was only checking for httplib.ImproperConnectionState
which doesn't include relevant exceptions that
indicate a reconnect is necessary. This patch
adjusts it to reconnect on any HTTPException.

Closes-Bug: #1289236
Change-Id: I4b389172dc4a53b0381e40005d8421f71b7d8522"
402175a787c2064404eaf7c260a16ea05e9a99a3,2014-03-12 17:48:53-07:00,"BigSwitch: Use eventlet.sleep in watchdog

Changes the consistency watchdog that runs
in the background to use eventlet.sleep instead
of time.sleep to avoid blocking other members of
the same pool.

Closes-Bug: #1291695
Change-Id: I5ec842cca1063cef761c2cd09d63617baf27d191"
7360e67d32dbd8c98ef59c46bf0c7fff16f48d0c,2014-03-13 14:02:06-07:00,"Fix in admin_state_up check function

Change-Id: If221cf5546e6432b31dd11ec322ddd4b69d161b2
Closes-Bug: #1291103
Signed-off-by: Fawad Khaliq <fawad@plumgrid.com>"
6de57369ea4cd70dcc2c0de4aed9dcdc71752d96,2014-03-13 21:33:40+00:00,"NSX: Propagate name updates for security profiles

...All the way to the controller.

Change-Id: I4740f632eeafdd165dbd0208e37acc85ff883925
Closes-bug: #1285845"
3f0af0e4dcf55cfa6ba23a27507b6b27f899e139,2014-03-13 17:16:14-07:00,"Skip radware failing test for now

Change-Id: Ic6c9b1aad20c732864fc4569fb566263df0f6879
Related-bug: #1288312"
809d9f3dc5a8aa332e7eacf3d681720042b5e9b7,2014-03-14 10:17:55+01:00,"Send fdb remove message when a port is migrated

the fdb_remove rpc message is sent when the status
of the port goes to BUILD, that is when the new host
send a get_device_details which means that it owns
the migrated port. The fdb_add message will be sent
as soon as the new host send update_device_up

Closes bug: #1237841

Change-Id: Ibdc7768d8db922b7e6eb9dc505382168cbb8e55d"
3c00dd43f613c838f713a7cbf3cedb6767a8c52a,2014-03-14 15:23:19+02:00,"Bugfix and refactoring for ovs_lib flow methods

Remove hardcoded flow parameters from
'_build_flow_expr_str' method, so we can
define any flows we want and can rely on 'ovs-ofctl'
command to verify flow arguments correctness.
When building flow string inside _build_flow_expr_str
use the following approach:
1. Build prefix and remove prefix params from flow_dict.
2. Build postfix (actions) and remove 'actions' from
flow dict.
3. Inside the loop build flow array from everything
what's left in flow_dict.
4. Append postfix (actions) to the flow array.
5. 'Join' flow array into flow string.

Change _build_flow_expr_str() to be a function
instead of an object method because 'self'
parameter  wasn't used.

Remove 'add_or_mod_flow_str' method because
we have to use separate logic when bulding flow
strings for 'add_flow' and 'mod_flow' methods.

Add more unit tests for OVSBridge class.

Closes-Bug: #1255058
Closes-Bug: #1240572

Change-Id: Ic89221d006a626aa2fc40314a9acffc0ea6fd61c"
931d5f9fd1ae0cb490362f16214183aa7d748514,2014-03-14 13:26:53-07:00,"Fix KeyError except on router_info in FW Agent

The workflow of creating a firewall when a router without any i/f is present in that tenant
causes a KeyError on the FWAgent. The issue occurs as such routers are present in the list of
routers returned by get_routers() but are not populated in the router_info dict. Adding a check
before accessing the dict to prevent the exception. When an i/f is added to such routers -
_router_added processing in the l3agent will populate the router_info dict and the FWAgent
also picks this up in that context.

Change-Id: I5ea22e88a46e62372a0462e9cb958a08dd9f4c7d
Closes-Bug: #1289643"
773352e39f371cda9c2f1be4c55accf4b7dc017b,2014-03-15 08:56:00+09:00,"cisco: Do not change supported_extension_aliases directly

cisco network plugin extends supported_extension_aliases in __init__
but supported_exntension_aliases is a class attribute and it is not
reset to the original even after each unit test finished.
To avoid this this patch copies supported_extension_aliases to
an instance attribute and extends it to ensure the class variable
is not changed. This reduces unnecessary logs in unit tests.

Change-Id: I3a7313f5ca2d10b1ae6ea961d9d05611aee055c0
Closes-Bug: #1292742"
5e4b0c6fc6670ea036d801ce53444272bc311929,2014-03-16 00:19:51+09:00,"Avoid long transaction in plugin.delete_ports()

db_plugin.delete_ports() called plugin.delete_port() under
a transaction. It leads to long transaction if plugin.delete_port
talks with external systems. This commit changes each delete_port
outside of a transaction to avoid longer transaction.

plugin.delete_ports is now called by release_dhcp_ports and
dhcp-agent ports can be deleted separately, so this changes
does not break the existing behavior.

delete_ports is renamed to delete_ports_by_device_id
to clarify the usage of this method.

NEC plugin already has this change and it is no longer needed.

_do_side_effect helper method in test_db_plugin is renamed
to more self-descriptive name.

Change-Id: Ied5883a57c7774c3b0778453d84c717b337f88c0
Closes-Bug: #1282925
Related-Bug: #1283522"
24dbf9a0121f560bdf715624841f7e2da8a43380,2014-03-16 04:44:47-07:00,"ML2 plugin involves in agent_scheduler migration

In agent_scheduler migration script which creates
network-dhcp-binding table and router-l3-binding table,
ML2 plugin should be included in the plugin list.

Change-Id: If39ef2a488513a58d608c70e26a2b9f960dbe904
Closes-Bug: #1293089"
97e185bd201ecedd410e6007acc44e6ccf97a234,2014-03-16 20:52:21-07:00,"Added missing l3_update call in update_network

Change-Id: Id907ae692140fd52762ef6ac4fc1613897eb5065
Closes-Bug: #1259125"
9f3392f8984fbeca1d34e41e84b2f0b9d6f03e4d,2014-03-17 08:24:47-07:00,"BigSwitch: Sync workaround for port del deadlock

Adds a synchronization barrier to the methods
that lock the port table to avoid the mysql
update-lock/eventlet-yield deadlock that occurs
with simultaneous port deletions.

Closes-Bug: #1292232
Change-Id: I8975a14a937a5843a0395ad7b599ebdc827565ed"
3d8ee7eb633e251c3e343239b0e0ee6234df9393,2014-03-17 12:34:56-04:00,"Remove individual cfg.CONF.resets from tests

oslo.config.CONF.reset is added to cleanup in BaseTestCase, so it does
not need to be done by individual test cases.

Change-Id: I5fced5c2d480e78e5bb7cc150f0b653313884456
Closes-Bug: #1291144"
dafe6598c70e74781053acf68a8d5a7cea064a0e,2014-03-17 13:41:03-07:00,"BigSwitch: Watchdog thread start after servers

Start the watchdog thread after the servers have
been initialized.

Closes-Bug: #1293799
Change-Id: Ic7ae1f55bd7faed6edde84d9d0b52fc8fe7a1fc1"
c57f11321220a21af10d884c87ab989dc7dc2e69,2014-03-17 15:35:06-07:00,"NSX: Fix router-interface-delete returns 404 when router not in nsx

Previously, if one would run router-interface-delete and the router
was not found in NSX. Neutron would raise a 404 error and remove the interface
from the database. In this case it would be better if we did not raise
a 404 error as the caller shouldn't be aware that the backend is out of sync.

Closes-bug: #1291690

Change-Id: I2400f8b31817e6dd4bc8aa08f07e1613fc2deeae"
fb9886b903434321e62373cb4c11ba014921e4df,2014-03-17 16:32:44-07:00,"Fix misleading error message about failed dhcp notifications

This is achieved by adjusting the log traces and ensuring
that the right log errors are emitted based on the status
of the network.

Also, the patch drastically simplifies the structure of the
notification method and unit tests to increase coverage.

Closes-bug: #1289130

Change-Id: I7cc78bba81c516380fc93a68aa7b295312a88e29"
52f0750d80e8742efc253b48c6bc121ae9853cc1,2014-03-18 01:11:13+00:00,"Add session persistence support for NVP advanced LBaaS

Change-Id: I2042894755cdaf54b2bc39e58028746aa7c1e8ea
Closes-Bug: #1256243"
10a721bb5044fdc36aba4e6a6af753a1233655a1,2014-03-17 18:47:11-07:00,"Show neutron API request body with debug enabled

Shows the contents of update and create requests
to the neutron API when debugging is enabled.

Closes-Bug: #982504
Change-Id: I90680721aee9efbcb01779cdfacc86b90b37bf8f"
4d18154aa8b075363ac52914e3f330db7cc04308,2014-03-17 22:10:55-07:00,"Ignore PortNotFound exceptions on lockless delete

Modifies the delete_ports_by_device_id method to
ignore PortNotFound exceptions because it has no
protection against concurrent operations deleting
the same ports that it's trying to delete.

Closes-Bug: #1293657
Change-Id: Icbcded149364a0e231ae811a440a691518bf20ad"
2648aa3561d23e1215e0cc6f446253e5df56c8f6,2014-03-18 00:52:06-07:00,"Stop removing ip allocations on port delete

The _delete_port() method was manually removing related
IPAllocation instances despite the existence of a perfectly
good cascade deletion relationship in the model.  This patch
puts an end to that nonsense and the potential for deadlock that
it represented.

Closes-bug: #1288379
Related-Bug: #1283522

Change-Id: Ib31550fa9000fc75768a327cb6cc1c419e06568f"
e13d19cab384a9f5f8a00436ad39118f342af32c,2014-03-18 10:25:04+02:00,"Change report_interval from 4 to 30, agent_down_time from 9 to 75

report_interval is how often an agent sends out a heartbeat to the
service. The Neutron service responds to these 'report_state' RPC
messages by updating the agent's heartbeat DB record.
The last heartbeat is then compared to the configured
agent_down_time to determine if the agent is up or down.
The agent's status is used when scheduling networks on DHCP
and L3 agents.

In the spirit of sane defaults suited for production, these values
should be bumped to reduce the load on the Neutron service
dramatically, freeing up CPU time to perform intensive operations.

DocImpact
Closes-Bug: #1293083
Change-Id: I77bcf8f66f74ba55513c989caead1f96c92b9832"
acf0e109f3b01e4918d49305a6d95b3732a10b4e,2014-03-18 16:31:55+04:00,"LBaaS: small cleanup in agent device driver interface

remove unnecessary 'context' parameter

Change-Id: Iaa3896f89760817af9d72e653252830f8a33e390
Closes-Bug: #1294096"
9014f66fce619af6d72823b3fdb0ecf148582649,2014-03-18 12:15:27-07:00,"ML2 BigSwitch: Don't modify parent context

Makes a copy of the port context before changing
it in preparation for the backend controller so
other drivers are not affected. Also removes a
UT that was exercising direct modification of VIF
details in the port context, which is not allowed
by the ML2 plugin.

Closes-Bug: #1294308
Change-Id: I47281dcd23c022813b8b6eda0a3d39c4482277b9"
7026d96ce44522c95c785376178347d2b0a9d750,2014-03-18 14:50:22-07:00,"Fixes Hyper-V agent security groups enable issue

Fixes the weight of the applied allow rules by ignoring
the weight of the reject rules.
Fixes the override allow rules issue by fixing the
ACL filtering condition.

Change-Id: I38ddd7142d0fa45f308460153d29580f276ce07e
Closes-Bug: #1294368"
d37b6c9ee8ddf2cc90197e5a442ba759eca5a0c0,2014-03-18 23:26:30+00:00,"Don't use root to list namespaces

A bit of low hanging fruit.  I just noticed that this hadn't been
fixed yet.

Change-Id: Iea9210098b6acf4ab24a89287529ff82986faaad
Closes-Bug: #1293818"
c36ddaf930ba309be3c127dc1836f28a8ab97c5d,2014-03-19 00:20:43+00:00,"Cisco Nexus: maximum recursion error in ConnectionContext.__del__

If DevStack is configured for the Cisco Nexus plugin, the following
error is observed:

Exception RuntimeError: 'maximum recursion depth exceeded' in <bound
method ConnectionContext.__del__ of
<neutron.openstack.common.rpc.amqp.ConnectionContext object at
0x403a3d0>> ignored

The root cause of the problem is that the Cisco Nexus plugin's
PluginV2.__gettattr__ method, a model object is being passed
as a value for a unicode %s format mod. Because the neutron server
has ""lazy gettext"" (deferred interpretation of unicode objects) enabled,
this causes many layers of recursive calls to deepcopy.

The fix is to pass a string object for the unicode %s mod field.

Change-Id: I0a07a0ab417add68e44cb1bca722cb0b4a71205b
Closes-Bug: #1286565"
0049967a874a3dca7c6ab8e8e84ca7dea21dc0b2,2014-03-19 00:21:46+00:00,"Cisco plugin fails with ParseError no elem found

When the Cisco nexus plugin is configured on DevStack, the tempest
Neutron API test test_port_list_filter_by_router_id fails with the
following error:
     ParseError: no element found: line 1, column 0

The root cause is that the Cisco Nexus plugin model layer
is encapsulating each dictionary response from the OVS subplugin
into a list, whereas the WSGI layer is expecting a dictionary
response. The fix is not to encapsulate these responses into a list.

Change-Id: I4b589e8e5696c0eae43cafc46912b3d7f29bbdb6
Closes-Bug: #1284162"
39c04fdc2c94b8ee48600f3148c5f850645b7c4e,2014-03-18 19:07:12-07:00,"Allow CIDRs with non-zero masked portions

Allow users to specify CIDRs with bits other
than zeros in the masked portion of the subnet.
e.g. 192.168.1.5/24 is accepted and converted
to 192.168.1.0/24.

Closes-Bug: #1204173
Change-Id: I7ddff41e6988feb6e2a87e40a4d99db7174415b1"
1959092bca5646306cfec5303f43627e78f6e2d4,2014-03-19 11:57:44+09:00,"Mock agent RPC for FWaaS tests to delete DB objs

This changes the firewall service unit tests to
mock the RPC calls from the firewall service to
the agent. This allows the tests to fake the
agent response RPC that removes the firewall
from the DB so the all of the other objects that
the firewall depends on can be deleted.

Closes-Bug: #1288441
Change-Id: I32462ab5557b9c52328bf6a23a12efc2d799644c"
6c2bec5d9e40c68c75cc56e077e2af97d1359d20,2014-03-19 11:57:44+09:00,"Ensure to count firewalls in target tenant

Previously admin tenant cannot create a firewall if other tenant
already created a firewall. We need to count firewalls only in
a target tenant.

Change-Id: I3e6d151d00d4a487bdd858e94929fab8960511a2
Closes-Bug: #1258438"
b98704e80b030f3a7db60cf244e29521008e94f2,2014-03-19 12:14:18+09:00,"Enable to select an RPC handling plugin under Metaplugin

Multiple plugins under metaplugin become 'q-plugin' topic
consumers and a request from an agent is handled by one of
them randomly. Fortunatly most of RPC callbacks are common
for plugins but a problem occurs if an RPC is not supported
by the received plugin.

This is one of risks when using metaplugin. Fundamental fix
of this problem (such as RPC delegation handling of metaplugin)
is difficult since each plugin needs to modify.
But when only one plugin has plugin specific RPCs and other
RPCs are independet of plugins, if the plugin can be selected
for RPC handling, the problem does not happen. Typical use
case of metaplugin such as combination of an agent-based
plugin and a controller-based plugin often applies to this
condition.

This patch adds 'rpc_flavor' configuration parameter to
select an RPC handling plugin. If 'rpc_flavor' is specified,
only the specified plugin becomes 'q-plugin' topic consumer.
If 'rpc_flavor' is not specified, the behavior is same as
previous one.

Change-Id: If133b054bba53829cebe63c1e0ebe6099eb1fd95
Closes-bug: #1267330
DocImpact"
218d51e087ab5fc713f8d9edb66d515d833efdbb,2014-03-19 10:08:09+02:00,"Add update binding:profile with physical_network

Add temporary solution in order to support multiple physical networks
by mlnx ML2 MechanismDriver.
Due to non merged patches in nova that should support propagating
physical_network retrieved from port binding:profile attribute
to VIF/Network object.
The code will be removed once relevant nova patches are merged.
The code is disabled by default and should be enabled via
ml2_conf_mlnx.ini config file.

Change-Id: I815f9e28774efd47bccd1c57481e6ba89075792b
Closes-bug: #1291209"
a79aa79b2ae1222bd8776cde10bebeefc6bc8791,2014-03-19 17:10:43+09:00,"NEC plugin: Honor Retry-After response from OFC

A backend OpenFlow controller nec plugin talks to can return
503 response with retry-after header when it is busy.
It is better to honor retry-after header to avoid unnecessary
user-visible errors due to temporary busy condition.

Change-Id: I2ff1c3ac8402a2207bd955e9a9bb61e147950c5c
Closes-Bug: #1294527"
3d6381fd524f980d32d7129292372b0707d479a0,2014-03-19 01:25:34-07:00,"BigSwitch ML2: Include bound_segment in port

Includes bound segment in port create/update
requests to disambiguate when the parent network
has multiple segments.

Closes-Bug: #1294355
Change-Id: I59ef38aa5de46c1229384e0c4a9f0ee01c1bc678"
98fc828801f370c0561f22d97ffdd1055d4e0663,2014-03-19 13:01:06+04:00,"Sync excutils from oslo

In order to fix undesired error logs in Neutron (bug 1288188)
fixed save_and_reraise_exception() should be synced from oslo.
Oslo commit: 33a2cee6a690ecfdb2cecfe8f01b0b1dacb5bd17

Also sync gettextutils module as excutils depends on it
Latest commit in oslo: fd33d1eaa039913d8c82b94c511a3eab0c3d5789

Closes-Bug: #1294537
Related-Bug: #1288188
Change-Id: I62ab3e4e22aa000f3a8d1be26ef9e1cfb1714959"
4559a5f381082dba30bb535b69deeb09135da680,2014-03-19 02:56:13-07:00,"Fixes the Hyper-V agent individual ports metrics

Replaces aggregated metric values with separated values for each port.

Co-Authored-By: Adrian Vladu <avladu@cloudbasesolutions.com>
Change-Id: Ie946dff984ef53f014c6c57f8d1d5bb9c6e7596d
Closes-Bug: #1289007"
6206d555c3cd129a9ea83174ee786e1e15a4c48c,2014-03-19 18:38:49+04:00,"Fix usage of save_and_reraise_exception

Set reraise=False for the cases where the purpose of exception
handler is to reraise proper type of exception

Change-Id: Id6595ba1e160b9033d519ded16e0fbd2f91ccb5d
Closes-Bug: #1288188"
884b08e1b20a2f80fb6eba6f0c7405979b914817,2014-03-19 11:23:19-05:00,"Added config value help text in ns metadata proxy

Change-Id: I9d59e902cf9ed89e29d93b29912c87f2bad73c7c
Closes-Bug: #1215270"
3666dcf76dd8cf7a22743e407343b528331130f7,2014-03-20 10:20:10+11:00,"Log dnsmasq host file generation

We've been seeing things that appear to be races between the hosts
files being written out for dnsmasq and dhcp requests coming in.  We
will get occasional errors from dnsmasq saying ""no address available"",
""duplicate IP address"" but by the time you look, the corresponding
host file has long since been replaced.

If we had some debugging like this, we could at least correlate what
neutron thought dnsmasq knew at the time the requests were coming in.

We store the filename to avoid multiple lookups, and also
s/name/filename/ to avoid ambiguity and be more consistent with the
rest of the code.

Closes-Bug: #1294892
Change-Id: Ifa92ca71419ce0155b28d2015eff9e82557a0825"
5d6cb0c62e0245735a9d511d2f871776055ff224,2014-03-20 10:26:37+08:00,"Use different name for the same constraint

In DB2, a constraint-name must not identify a constraint
that was already specified within the same CREATE TABLE
statement. The current CREATE TABLE statement uses the same
constraint name 'ipv6_modes' for both ipv6_ra_mode and
ipv6_address_mode column. This change tries to use different
names.

Change-Id: Id4d82fb7e0e570a843e28856e531e25578a4351a
Closes-Bug: #1294568"
4434882bc41c87c52192ab3ad01d3448868603cc,2014-03-20 11:42:59+09:00,"tests/unit: clean up notification driver

Some tests doesn't cleanup notification driver. So some tests can
run against unintended notification driver depending on execution order

Change-Id: I7dbed47153be66684827b2693bbc995dddfb4c1b
Related-Bug: #1281481
Partial-Bug: #1284549"
db5ea5c705757ca20a5789839f96518877c91820,2014-03-20 14:26:24+08:00,"Fix duplicate name of NVP LBaaS objs not allowed on vShield Edge

Duplicate name of LBaaS objs such as pool/vip/app_profile is not
allowed on vShield Edge, so here a name convention is needed to ensure
name uniqueness on the edge side.
Closes-Bug: #1257225

Change-Id: I953610d0389a78aa01f378c2ff4931d8c74413ea"
913f45bc16dd2c35f7be772d5867f9208064498a,2014-03-20 07:34:14-07:00,"De-duplicate unit tests for ports in Big Switch

This eliminates the separate classes that existed
for the VIF type testing. Each class was going
through all of the port tests when none of the
logic those tests were exercising was affected by
the VIF types.

This cut the number of tests run in test_restproxy_plugin
by close to 44% without a reduction in code coverage.

Closes-Bug: #1295448
Change-Id: I8c84e1599568fad36b6dd3d51e4ba8a3c012c6c5"
ef7e17e66591bb93eeeff8d58a8e5c96bf2eca89,2014-03-20 18:43:18+04:00,"Fix typo in lbaas agent exception message

Change-Id: Iec2a5e02d40f73e4576ed853577a6a9f85e49e67
Closes-Bug: #1295187"
083324df06828e1b8fb97220b7415c2a28ee16c4,2014-03-20 22:16:42-07:00,"Big Switch Plugin: No REST port delete on net del

Moves the REST call for port deletion out of the
_delete_port method into the delete_port method
so it doesn't get called during a delete_network
operation. The backend controller automatically
removes ports that are a member of a network when
it's deleted.

Closes-Bug: #1295438
Change-Id: Ic09eb722f8e9bd3ce298dee90d8415cda1a1aa7a"
712923d3ab3dd4b0b133a11735fed1533db84995,2014-03-21 07:17:46+00:00,"Avoid creating FixedIntervalLoopingCall in agent UT

Set polling_interval to 0 to avoid creating LoopingCall
in loadbalancer agent tests, dhcp agent tests, linuxbridge agent tests

Change-Id: Ib6edbc11feba402a4c2f19b7d6833b49879ee626
Closes-Bug: #1288079"
252a83890abfb825497f308147aeafc6ee1e0731,2014-03-21 09:44:34+00:00,"Don't set priority when calling mod_flow

This commit [1] changed the behavior of modifying flows to not allow priority
to be set on flow modification. The agent code which was calling mod_flow was
not updated to respect this behavior. The unit tests were also not updated in
this regard. I've corrected this behavior now, and added a negative UT case to
catch this in the future.

[1] https://review.openstack.org/#/c/58533/

Closes-Bug: #1295703

Change-Id: I20737637cc84567a5ec19efaad18e7f334007f18"
98b3f4a95104234e5106bc1ee58efd427da96c00,2014-03-21 15:15:08+04:00,"Return meaningful error message on pool creation error

Instead of returning exception specific to haproxy (agent-based),
return more generic BackendNotFound exception.
It also could be used later when binding to devices will be
introduced. That exception will indicate scheduling failure, e.g.
inability to find appropriate backend for the resource.
Resource (pool) is then marked with ERROR state with corresponding
error description.

Change-Id: Ic18ff20102b4bb2b97e7b186fcf797133bd3ba3d
Closes-Bug: #1295214"
3c0025abf4581dc3561637e802de7bba1434d2b3,2014-03-21 21:31:55+09:00,"Use save_and_reraise_exception when reraise exception

This fixes reraise in pluign codes.

Closes-Bug: #1279813
Change-Id: Iee174d94c0ce69eb01eb86eea1a903eceb7569d5"
66f22e754785638e059c0eba4f48bb5953386838,2014-03-21 11:29:17-07:00,"rename ACTIVE_PENDING to ACTIVE_PENDING_STATUSES

Looking at the lbaas code it's not very obvious that constants.ACTIVE_PENDING
is a list of statuses that contain statuses that are ACTIVE or
PENDING. This patch renames ACTIVE_PENDING to ACTIVE_PENDING_STATUSES so
it's obvious that this is a list and not just a string called ACTIVE_PENDING.

Closes-bug: #1295790

Change-Id: I7af96bcc6b145c6ab809c0b032ccb18baad9c98e"
e10f406a653f3037109e2d7f59bed65bd54300a8,2014-03-22 04:47:49+09:00,"NEC plugin: Remove a colon from binding:profile key due to XML problem

In XML specification, if a tag name contains a colon, a part before
a colon is interpreted as namespace. If key names in binding:profile
dict contains a colon, Neutron XML serializer sends them as-is.
A colon in key names should be used only if XML namespace are used.
NEC plugin uses a colon in key names and it leads to failures to XML
deserialization. To avoid this problem, this commit removes a colon
and prefix n key names in port binding:profile so that client XML
deserializer decodes XML response successfully.

Change-Id: Ie32a2417bbce03bfc6e8f7907c0b4090fbc9e7b6
Closes-Bug: #1294166"
3d2f3cbde7bb99ed1371bca835a8e63ddc6323d9,2014-03-22 04:51:25+09:00,"NEC plugin: Allow to add prefix to OFC REST URL

Closes-Bug: #1295802
Change-Id: Ieaa3bb7c601fad98506168de1f8ac191849c6569"
af0c9ea3b8e8f5cc4fd523ff336887ae94bb6ef0,2014-03-21 14:19:40-07:00,"Log received pool.status

This patch adds a log statement so we can figure out what status the
lbaas-agent is passing in. This way we can figure out what to prevent.

Change-Id: I1a0f809140127ccb9596d83c97add03a853991a3
Closes-bug: #1295491"
dba196702b43f90928a644bdafaf42c97b71267f,2014-03-22 06:30:13+09:00,"NEC plugin: Rename quantum_id column to neutron_id

ID mapping tables in NEC plugin had columns named quantum_id.
This commit renames them to neutron following project renaming.

Closes-Bug: #1287432
Change-Id: I0669defba7189d5b8259365d88d67db51a28c764"
f83b2ef4fc042d8559b1f75dbe949460f2843c7e,2014-03-21 20:39:04-07:00,"Fix segment allocation tables in Cisco N1kv plugin

The segment allocation table is emptied on deleting any network profile.
This change allows the use of segment range from the network profile table.
By using the network profile UUID as a foreign key in the segment allocations table,
tables are cleaned up only for the segments associated with
the deleted network profile via CASCADE, leaving no inconsistencies.

Change-Id: I507041fac3768a7b688ddcf28c4d97c618bfe3f9
Closes-Bug: #1288407"
d82f4f6a7cca24fa4069d3cde029f1ad798736c1,2014-03-22 19:07:08+09:00,"Add nec plugin to allowed address pairs migration

Change-Id: I2a6488482abacf87fc27fb3211041d81a4c1c047
Closes-Bug: #1295999"
6537c3a5c6632705f594e80d95437a31bd62edb1,2014-03-22 19:13:10+09:00,"Add enable_security_group to BigSwitch and OneConvergence ini files

It is a follow up patch for https://review.openstack.org/#/c/67281/.

Change-Id: I38463b3879ab2d7469a85ef00426b2b602fa825a
Closes-Bug: #1296000"
13c9f3b813f5bb368e311ba0d428fa759d68289a,2014-03-24 01:46:29-07:00,"NSX plugin: return 400 for invalid gw certificate

Gateway certificates are validated by the NSX backend.
The code currently treats a failure in certification
validation as a backend failure and therefore returns
a 500 status code.

This patch changes this behaviour by returning a 400
status code and an appropriate error description.
To this aim a handler for 400 errors has been added to
the NSX API client.

Closes-Bug: #1293508

Change-Id: I196f14337e47cd40710a6d8a30bbe1cac5ffe05b"
2ecd8203f006408d2b761abd344d96fad3fd311e,2014-03-24 18:55:34+04:00,"LBaaS: make device driver decide whether to deploy instance

Currently server throws an error in case agent (device driver)
requests logical config for non-active pool, which is a bug
as it's ok if pool is in pending create/update states.
Also the pool may be already scheduled for delete (pending_delete)
while agent requests it to perform some previous update, which
as also ok and agent just doesn't deploy such config.

This patch moves active pool check from server side to agent side

Closes-Bug: #1295491
Change-Id: Ib088355a0b3efffdcd211a8cfe6942833bb9f895"
b2f65d9d447ddf2caf3b9c754bd00a5148bdf12c,2014-03-24 17:14:39+00:00,"Correct OVS VXLAN version check

Update the version checking logic used to determine if the combination of
Linux kernel, OVS userspace, and OVS kernel module can properly support
VXLAN.

Tested on Ubuntu 14.04 without the OVS DKMS module.

Closes-Bug: #1291535

Change-Id: If034164b775989d52c3c449caba6baadb970afd9"
f85f240cabb0a7cc1adb3fa1c3139984e8e30d4c,2014-03-25 09:58:02+01:00,"Replace a usage of the deprecated root_helper option

This change replaces a usage of the deprecated root_helper option
by the usage of get_root_helper result.

Change-Id: Icfc698243784557cbf987a817c13d0b80969e5d3
Closes-Bug: #1297145"
3d9e183d596c806527008f6eb15edc9d249cb3c0,2014-03-25 16:43:30+02:00,"Fixed TypeError when creating MlnxException

MlnxException expect a 'err_msg' keyword argument.

Change-Id: I4570219c0a6a466391b43cbdaa5372b85566c421
Closes-Bug: #1283990
Signe-off-by: Roey Chen <roeyc@mellanox.com>"
f23d081b26071e1b309f49e5a5ab0cdc1a739e9d,2014-03-25 21:35:12+01:00,"Include cisco plugin in migration plugins with ovs

Currently we have many migration files with missing cisco
plugin in migrate_plugin when ovs is included.This
causes missing tables when cisco plugin is enabled
and migration is run. This fix should automatically
include the cisco plugin if ovs is detected in the
migrate_plugins.

Change-Id: I4dedfbafe9b431e85255d5427766e22eed09ee5e
Closes-Bug: #1292114"
c17790b202fee97b6f5637ebff4a8ac1fb814973,2014-03-26 09:50:47+01:00,"Migrate data from cap_port_filter to vif_details

There was introduced a new column vif_details for ml2_port_binding table
and dropped cap_port_filter column. Data was lost during the migration
causing no data in vif_details.

This patch transforms data from cap_port_filter to vif_details column as
a part of db migration. MigrationContext.execute() calls underlaying
methods depending whether migration is online or offline therefore data
are migrated in offline migration too.

Partial-bug: #1235149
Change-Id: Icc5dc6e8221a542f5190d0222ac4d10197d15ac1"
3ec30fdb4b175f2dc65261f672372bdb44dce3f9,2014-03-26 23:35:55+09:00,"Import request_id middleware bug fix from oslo

There is a bug in request-id middleware that a subsequent API request will
overwrite a request-id of a previous request when multiple API calls are
processed in parallel in request_id middleware.
This commit imports the fix in oslo.

cherry-picked from oslo-incubator d7bd9dc37ac3d6bc171cd2e290c772633ad20a32
Closes-Bug: #1289696
----
Don't store the request ID value in middleware as class variable

The original version of the request_id middleware generates a request ID during
process_request() and stores the value in a variable, so it can be attached as
header in process_request(). This is pretty dangerous, since subsequent
requests will overwrite this value, and the wrong request ID may be attached to
some responses. This is particularly apparent when requests arrive in parallel.

This change replaces process_request() and process_response() with an override
of __call__(). This allows the generated req_id to be used in the response
header without needing to save it as a class-level variable.
----

Change-Id: Ic20047f604394f1ce4900c3b6a00595223804cba"
f45c1c52423dcbb2ea7690d56b3edc232d16636e,2014-03-27 00:34:06+09:00,"nec plugin: allow to delete resource with ERROR status

Previously if a resource is in ERROR status and there is no
corresponding resource on OpenFlow controller, the resource
cannot be deleted through an API request.
This commit rearrange ERROR status check to allow resource
with ERROR status to be deleted.

Closes-Bug: #1295754
Change-Id: I709f5e2066eb5d12ec0f42dff15797acddc2009e"
8c42ba115b58cc2c7486be9fee89e1facedb5f76,2014-03-26 23:41:19-07:00,"Adds OVS_HYBRID_PLUG flag to portbindings

Adds a flag to the ML2, openvswitch, and BigSwitch
plugins to inform nova that the OVS hybrid plugging
strategy should be used.

Closes-Bug: #1112912
Change-Id: If004db60e084f4cea095ca9ecccb0537240d4183"
843e60b7901deb3ecbff81c2e057b8d186b9fc34,2014-03-27 14:18:58+00:00,"Prevent cross plugging router ports from other tenants

Previously, a tenant could plug an interface into another tenant's
router if he knew their router_id by creating a port with the correct
device_id and device_owner. This patch prevents this from occuring
by preventing non-admin users from creating ports with device_owner
network:router_interface with a device_id that matches another tenants router.
In addition, it prevents one from updating a ports device_owner and device_id
so that the device_id won't match another tenants router with device_owner
being network:router_interface.

NOTE: with this change it does open up the possiblity for a tenant to discover
router_id's of another tenant's by guessing them and updating a port till
a conflict occurs. That said, randomly guessing the router id would be hard
and in theory should not matter if exposed. We also need to allow a tenant
to update the device_id on network:router_interface ports as this would be
used for by anyone using a vm as a service router. This issue will be fixed in
another patch upstream as a db migration is required but since this needs
to be backported to all stable branches this is not possible.

NOTE: The only plugins affect by this are the ones that use the l3-agent.

NOTE: **One should perform and audit of the ports that are already
        attached to routers after applying this patch and remove ports
        that a tenant may have cross plugged.**

Change-Id: I8bc6241f537d937e5729072dcc76871bf407cdb3
Closes-bug: #1243327"
97a529ad8eaee80e196eb362c4e45901a96ae23c,2014-03-27 16:51:12+01:00,"Make dnsmasq aware of all names

Each dnsmasq instance on a network is not aware of other dnsmasq's leases.

When dnsmasq is launched with --no-hosts and is not provided an --addn-hosts
file, it can resolve only the hosts to which it gives a dhcp lease and no more.
i.e.:
If dnsmasq service n°1 gives a lease to instance n°1, and dnsmasq service n°2
gives a lease to instance n°2, both VM instances and dnsmasq services being on
the same network: instance n°1 can not resolve instance n°2, because instance
n°1 queries dnsmasq n°1, and since it did not give the lease to instance n°2,
it can not resolve it (it is not aware of its existence). Same issue if
instance n°2 tries to resolve instance n°1.

The solution is to provide dnsmasq with an --addn-hosts file of all hosts on
the network. With an --addn-hosts file, each dnsmasq instance is aware of all
the hosts on the network even if they do not give the lease for a host,
therefore each dnsmasq instance can resolve any host on their network even if
they did not provide the lease for it themselves.

Change-Id: Ic6d4f7854d250889dded5491e4693fcdce32ed00
Fixes: bug #1242712"
14b6611efea4c9658c611e8cfcfb42fc7dd82f55,2014-03-27 22:27:20+04:00,"Fix namespace exist() method

Fix namespace exist() method for it shall not be called with a root.
Also, don't run it under the namespace so garbage_collect_namespace
method can run without rootwrap and not withi a ns.

As a result of fixing namespace listing the patch also fixes the
regression introduced (bug/1294603) to loadbalancer agent respawning
haproxy due to inability to list namespaces properly.

Change-Id: I0dc4d01b0c1c04887ec6ad5766ec7c6c96903faa
Closes-Bug: #1297594
Closes-Bug: #1294603"
979ec03f0be170b7b83fb8c9b6d76c678d8fca66,2014-03-27 17:22:39-07:00,"BigSwitch: Move attr ref after error check

Change in Big Switch server manager module:
Moves an attribute reference to a line after
the error check that validates the object is
not None.

Closes-Bug: #1298699
Change-Id: I5f9abf3b456d5066e90c05bc6b3aa5adcecb7943"
9730c185847e1cc3fe0ced10f98a14a112e23a07,2014-03-28 05:49:13+00:00,"UT: do not hide an original error in test resource ctxtmgr

In unit tests, resource contextmanagers such as network(), subnet()
try to delete themselves after returning from yield even if an
exception occurs. However when an exception occurs, there is a case
where deletion fails. In this case original exception will be hidden
and it makes difficult to debug test failures.

Before each test starts, resources like database entries will be
recreated, so there is no need to try to delete resources even
when an exception occurs. This commit removes try-finally clause
from resource contextmanagers to make original errors visible.

Closes-Bug: #1295887
Change-Id: Ia844d2aa2c9fc036e643068c5284f64798963ee3"
238689570145fdafe8e61967bb56133f167d39ab,2014-03-28 17:06:39+05:18,"Changed the message line of RouterInUse class

Implements: Changed the message line of RouterInUse class,
so user will not get confused with active or inactive ports
while deleting the router.

Closes-Bug: #1236372
Change-Id: I7a82550e2c6051f9e4940a8f1dd4401059e0a8d8"
af75845b64b9f2ab12e4f49106055e3a64468cf0,2014-03-28 10:14:00-04:00,"ML2 Cisco Nexus MD: Support portchannel interfaces

Port of port-channel interface support that was implemented for the cisco
core plugin - https://review.openstack.org/#/c/42037

Note that additional port-channel UT already existed. (Created during
initial cisco core nexus subplugin -> ml2 cisco nexus md port.)
See test_cisco_nexus.py module, NEXUS_PORTCHANNELS references.

Closes-Bug: 1294900
Change-Id: Ifc64f605e5783ee1e85d66c87f422f64b47fa996"
80eb1faf1b9466176a0fbf1f8a8b18cb500c6811,2014-03-28 15:56:55+00:00,"Delete duplicate external devices in router namespace

When a router's gateway is removed during L3-agent restart, the agent
will fail to delete the old external device.  This device should be
identified and removed as soon as possible.

Change-Id: Ifd3e6ca009242138bea4a098e3fde258aeaa391e
Closes-Bug: #1298658"
d52f84d96a2fadcf90fdac7a3e265c45d2ec234a,2014-03-28 09:20:55-07:00,"Cancelling thread start while unit tests running

This change modifies the Radware driver and its unit testing code
to not start operations completion thread while unit tests are running.

The driver initialization changed not to start the operations completion thread,
the thread is started only when operation completion item is inserted into the queue
for the first time.
The operation completion functionality was moved to a new function which
is called by the operations completion thread run() function.
The run() function still have the functionality of popping operation completion
items out of the queue and push failed items back.

Unit testing code mocks the operation completion items queue
by calling the operations completion hanler new function when item
is added.

Start() and join() functions of the thread were mocked to do nothing.

All sleep() entrances were removed from the unit testing code.
All unnecessary mock_reset() calls were removed.

Change-Id: I72380bf223be690831aba1fc29c3dca910245516
Closes-Bug: #1245208"
408ef55d4ef1a9d246571511203ab337ba5346c6,2014-03-28 13:27:36-07:00,"Update BigSwitch Name to its correct name

Update Neutron documentation and code comments to replace
""BigSwitch"" name to ""Big Switch""

Closes-Bug: #1299145
Change-Id: I7c14f6170871b361c8929898ee6af5d1a1f41714"
793224b2668f6522c8197bd3c5e3a7612dc4c9f0,2014-03-28 19:00:53-07:00,"Add missing parameters for port creation

Recent API changes in N1KV controller require parameters such as
subnet id and IP address to handle port creation successfully.
Without these mandatory paramters, the REST call fails.
This patch addresses that by passing in the missing parameters
in the REST body.

Change-Id: I4cec6868051f492b9d1245ab201ff6c1a0837848
Closes-Bug: #1290561"
aeea31b21245864888f4744c19a0fed2a9c6567e,2014-03-29 17:12:26+05:18,"Invalid ovs-agent test case - test_fdb_add_flows

setup_tunnel_port is an attribute of self.agent and not self.agent.tun_br.
This patch fixes the testcase accordingly.

Closes-Bug: #1284265
Change-Id: I70582e477bb53de6482e32d5913c0864c5d910cc"
d9eea51187ddd9b951e9943030724489f1c21a26,2014-03-30 17:48:21-07:00,"Invoke _process_l3_create within plugin session

_process_l3_create should be invoked with a plugin session, else
externalnetworks table is not populated for networks with
router:external=True. Added the missing plugin session.

Change-Id: I09c49dea9474f91a70aef829c1596fbb9089d6cf
Closes-Bug: #1299946"
1763c80711993c55f4f13afe56f449b1dd6d3d3a,2014-03-31 13:16:58+04:00,"Delete disassociated floating ips on external network deletion

Also remove redundant check for network in use in bigswitch plugin

Closes-Bug: #1238439
Closes-Bug: #1259144

Change-Id: I7586f43c2e99be9df491c68bf1e8658994ffd263"
b5917e35acb6189079f33ebb5562b8d2288dcd4f,2014-03-31 13:34:14+02:00,"Add support for https requests on nova metadata

Adds new config value for accessing nova metadata api with SSL. In case
nova api requires client certificate other config values were added
providing client certificate and client private key.

DocImpact

Closes-bug: #1293587
Change-Id: I782a12eb77553f4369b782071b4ad19efb82e5e2"
6b4fecb9de0aa80e66b31555001dca95d14c789f,2014-03-31 11:07:40-07:00,"Only send notifications on uuid device_id's

Neutron assumes that all ports with the device_owner that start with
'compute:' are ports created by nova compute. Thus, when the debug agent
creates a port with device_owner = compute:probe the nova notifier
feature tells nova when this port is wired even though nova does not know
about it (doesn't really matter we just log an error). This patch adds a check
to make sure the device_id is a uuid as nova only uses uuids and the debug
agent uses the hostname for device_id.

Change-Id: I04e7195a1fb30bc37e1c0141315c053174f8722c
Closes-bug: #1288582"
d3be7b040eaa61a4d0ac617026cf5c9132d3831e,2014-03-31 22:29:12-07:00,"Add missing DB migrations for BSN ML2 plugin

Adds missing database migrations for the Big Switch
ML2 driver and plugin.

Closes-Bug: #1298459
Change-Id: I6a46a53e069353501d85c4c8400f98514d6f0162"
946c34619d2adfcf4b9b27d6e907167ff8bfe0b2,2014-03-31 23:35:17-07:00,"BigSwitch: Semaphore on port status update

Adds a semaphore to the _set_port_status
function used by the Big Switch ML2 driver and
plugin. Without it, the async threads are
susceptible to deadlocking and causing the
known eventlet/mysql timeout exception.

Closes-Bug: #1300607
Change-Id: Ie89213a0bef37f9e7a30945df39c0f1b87a33b82"
b131a5f63230b7107fad83787a964142d7289da9,2014-04-01 10:44:25+04:00,"Restore NOT NULL constraint lost by earlier migrations

Bring back nullable=False for columns in tables poolstatisticss
and ipsec_site_connections that disapeared because of
migrations abc88c33f74f and 338d7508968c correspondingly.

Closes-bug: #1288681

Change-Id: Idc4608616c2b4c06e7404157b2f708d46e91accc"
d4fdac7ae596888b8e83d9559019eafb728cd3fe,2014-04-01 16:01:46+02:00,"Fix function parsing the kernel version

Change-Id: Id56efb476144a18cd9eb7279bc0f602760a86173
Closes-Bug: #1300808"
c70c2719d700902854ef0381cb725722ac2da05e,2014-04-01 08:48:37-07:00,"Stop using portbindings_db in BSN ML2 driver

Avoids using the portbindings_db in the Big Switch
ML2 driver since ML2 has deprecated that database for
its own version that tracks the same information.

Also eliminates unnecessary 'binding_host' field since
it is now always the same as as the 'portbinding:host_id'
field.

Closes-Bug: #1300628
Change-Id: I17d47cb446cdd2e989c3e0d01b797a81309faaa7"
0755e7b379232285e434d827eeb854260a1db595,2014-04-01 13:10:14-04:00,"Enable hacking H301 check

This commit enables the H301 hacking rule by removing all the
multiple imports in a single line from neutron.

Partial-Bug: #1291032

Change-Id: I7ba7f82fb36a433d73190eb3d568b6961ccb57c6"
22a0692c2e9b0276c6b4dd2f66cedc70f7f835a5,2014-04-01 20:23:41+02:00,"Use os.uname() instead of calling uname in subprocess

Related-Bug: #1291535

Change-Id: I57e18c0b95904f318e3fff08cd18b32e28f48834"
f59e5fff820c1cf6900100d058622b8b1cbb03ca,2014-04-01 15:48:27-07:00,"Use a temp dir for CONF.state_path

external_pids will defaults to $state_path(/var/lib/neutron)/external/pids
which isn't accessible when running unit tests so use a tempdir for
CONF.state_path. This bug arose when oslo.config 1.3.0 came out which
fixed bug #1282250 (I4324bda6f3de3cdf05f8eb3cf16052c04018dec8) and
caused this issue.

Change-Id: I253c5ea85c51eff94399da0b9462d10a9c509a0f
Closes-Bug: #1301027"
9df867c672bfb3f80511086c889b744113c56604,2014-04-02 07:26:54+00:00,"Return 409 for second firewall creation

Second firewall creation returns 500, but it is an expected behavior
of firewall reference implementation and an internal server error
should not be returned.

Change-Id: I9f537b238007d35172e2504591d9d3568ba3a41a
Closes-Bug: #1301105"
58f33fd3ef7b66bb570ef757b9f70a023e0c8c59,2014-04-02 21:04:42+09:00,"Remove duplicated tests for check_ovs_vxlan_version

test_ovs_lib, test_ovs_neutron_agent and test_ofa_neutron_agent
have duplicated same unit tests for check_ovs_vxlan_version.
This commits removes tests from ovs/ofa_neutron_agent.

Change-Id: Ia028a4afc1c8154f895187c979d23b626ab4ae3a
Closes-Bug: #1301337"
907bf41afbdb9f565c45a535f637c8928d0be52a,2014-04-02 13:37:24+00:00,"fixes broken neutron-netns-cleanup

Some configuration parameters used in neutron.agent.linux.utils
were missing. The namespace attribute in the FakeNetwork object
was missing, and used in neutron.agent.linux.dhcp. Also, the
plugin object was missing for release_dhcp_port operation.

We provide a fake plugin object to accept current and any future
plugin calls as this is meant to be an standalone tool that
should work without any RPC connectivity.

FakeNetwork was switched for neutron.agent.linux.dhcp.NetModel
to follow any future changes in NetModel.

Two wrong called_once_with_args calls without assert were fixed.

Change-Id: Ia51ea9bd4c8eea6b250858964ad5286c933702e0
Closes-Bug: #1291915
Partial-Bug: #1297875"
783b88ccdd2c8e9e239c5ee123841188c60e01b5,2014-04-02 14:40:38+00:00,"Revert changes removing OVSBridge return

This reverts changes from this review [1] which incorrectly removed
the return of the OVSBridge object when calling BaseOVS.add_bridge.
This broke all functional tests relying on this return.

[1] https://review.openstack.org/#/c/71142/

Related-Bug: #1301363

Change-Id: If32e155cc2bd368b2e842f14b1d1da0827ccfeff"
aac5baa3be686a5dc4bc51ae2ce5f193f2ddc08c,2014-04-02 11:09:03-07:00,"Remove invalid copyright headers under API module

Change-Id: I629b639f6c94654117fbafb8b21840f7ba6b045a
Partial-bug: #1262424"
c6c4a20777921dc1b21e80edb96ccd957a054c68,2014-04-02 21:34:18+02:00,"fixes tests using called_once_ without assert

A few tests were using mock's called_once, or called_once_with_args
instead of assert_called_once or assert_called_once_with_args. Those
methods return a bool that needs to be actively checked.

The tests are fixed to avoid them from passing if the call condition
is not met.

Change-Id: I21e5257b26b2a08cc8f0b108233d1d5cc0b97b89
Closes-bug: #1297875"
9da60d0a417dd70c16ae34f5877c564e425e4cf8,2014-04-02 21:58:16+00:00,"Delete routers that are requested but not reported as active

There are two cases that I can think of that result in a router being
requested but not reported as active.  One is that admin_state_up has
been set to False.  In this case, the router is never removed and
continues to be operational.

The other case is if a router is changed and then deleted before the
change is processed.  In this case, it is prudent to be sure that the
router is queued for deletion.

Change-Id: I4738f599a18f0d130cc8ad4d4dafc488eec75ffd
Closes-Bug: #1215387"
ceee7b4ac9d027499dfd2568868f1192bfb77879,2014-04-03 17:13:02+02:00,"Set ns_name in RouterInfo as attribute

Closes-Bug: #1302007
Change-Id: I02a9b92eea06010569d3d9c5a987e69f89b23be5"
c49ec8b3ba10bb414a0f135d29ff3685e26d58b3,2014-04-03 23:19:06+05:18,"Redundant SG rule create calls in unit tests

This patch removes the redundant calls in the test cases.

Closes-Bug: #1302091
Change-Id: I509843b427dc454c0e6b2fd2cbff1bbbb284337f"
085a35d657cf0fa41a402f2af66c4beaa0f60db2,2014-04-03 20:16:45+02:00,"Fix Jenkins translation jobs

The job neutron-propose-translation-update
does not update from
transifex since our po files contain duplicate entries where
obsolete entries duplicate normal entries.

Remove all obsolete entries to fix the job.

Add test to pep8 that checks that no new breakages get
introduced.

Change-Id: I9c680eeefecfa124c5b2900b7fa7a0a8f7e8ebd6
Closes-Bug: #1299349"
5f042a64308cb00698b454da09b4a87f2ac3fafd,2014-04-03 21:44:17-04:00,"Fix test MAC addresses to be valid

MAC addresses should have 6 octets - 'ff:ff:ff:ff:ff:ff'.

Change-Id: I9c2457d978ccce15549d3258961093a130375bff
Closes-bug: #1302282"
b3d1fc88644b49c8660b3aac940288e46a328dcc,2014-04-03 23:03:46-04:00,"Move bash whitelisting to pep8 testenv

Change-Id: If2c3ebf57143cbed04b66a9986d67f91fee89630
Closes-Bug: #1302304"
8ab6fd6d7e521a3692f57542e5c5c5d513d57ccc,2014-04-04 16:04:57+00:00,"Clean out namespaces even if we don't delete namespaces

Even when we don't enable namespace deletion, we still want to run the
code that cleans out the namespaces so that the devices get unplugged,
etc.  Otherwise, routers deleted while the agent is down will continue
to operate as if they were never deleted.

The trade-off to consider here is that if there are many stale
namespaces this will slow down the restart of the L3 agent.  The best
option is to get namespace deletion working correctly.  However, where
that has not been worked out yet, this patch provides the cleaning
service for deleted routers.

Change-Id: Ic7b4608a23c4d9530f521d5faff3f8526200b92e
Closes-Bug: #1301042
Related-Bug: #1052535"
1997cc97f14b95251ad568820160405e34a39801,2014-04-04 13:12:21-07:00,"BigSwitch: Don't import portbindings_db until use

The Big Switch ML2 driver re-uses large parts of
code from the Big Switch plugin. However, the plugin
uses the old portbindings_db in its port tracking
code. This db is not created/used by ML2, so it does
not exist when the Big Switch ML2 driver is being used.
This caused a problem when the portbindings_db module
would be imported even though it wasn't being used
since the SQLAlchemy models would create the
relationships during the import.

This patch moves the portbindings_db import down to
the methods that leverage it so it won't be imported
during use by the ML2 driver.

This is a temporary solution which can be back-ported
if disabling auto schema generation is back-ported
to icehouse. An appropriate fix will require some
refactoring to avoid the port tracking code from
being imported for ML2.

Closes-Bug: #1300628
Change-Id: I551abf9d6ec832c423cba0d50bb27715b43c0b1c"
f64eacfd27220c180f6afc979087b35aa1385550,2014-04-04 13:28:35-07:00,"BigSwitch: Improves server manager UT coverage

Improves the unit test coverage for the Big Switch
server manager module (100%). Also reorganizes the
capabilities test to avoid duplicating a lot of
router tests that are already covered.

Closes-Bug: #1289027
Change-Id: Ib51e8160f8d95686e86430b0a9c9f54deeda0e84"
fcdee4d44558b6d1ae647f38b2584820352115de,2014-04-05 08:31:26+09:00,"OFAgent: Avoid re-wiring ports unnecessarily

Port the following patch to OFAgent.
commit: a9050757d94009c68f06c9f374de33eefbf06aa9
https://review.openstack.org/#/c/63558/

Partial-Bug: 1293265

Change-Id: I35d58bad104b01136c2502c933475ac85a3752a5"
acae91475775a8c85598b1bfdc4910e5fe81ced9,2014-04-05 18:10:52-04:00,"Add missing comma in nsx router mappings migration

Change-Id: I85bcc9b7fe636f34dbdf6f8c3172352c8e586e2a
Closes-bug: #1303179
Related-bug: #1207402"
83a11d406eb421285a7fffd3ce853394211ac397,2014-04-07 08:13:59+00:00,"Add common base class for agent functional tests

Refactor the functional tests a bit to add a common base class for agent
tests. This is needed an upcoming commit which adds a functional test
for VXLAN version checking.

Closes-Bug: #1301363

Change-Id: I438e401cbfb40e5557e5125f2a409bac5c1fd1c2"
ec24d2cb3ac17a86ee5c4626c625131c10732143,2014-04-08 10:34:02+09:00,"Fix wrong section name ""security_group"" in sample config files

The section name [security_group] in Sample config files of
ML2 and Big Switch plugins was wrong and it should be
[securitygroup].

Change-Id: I8204b2f37f96a5e46038e117853ac8637a9705fd
Closes-Bug: #1304105"
b12e38327af83f44cc8e38a23d16bb51a2346f57,2014-04-07 20:45:06-07:00,"BigSwitch: Stop HTTP patch before overriding

Stops the default HTTPConnection patch used by the
Big Switch tests before patching HTTPConnection with
another substitution. This prevents mock from losing
track of the default patch which was resulting in it
not consistently being stopped by the stopall call in
cleanup.

This also corrects an incorrectly targeted mock for the
HTTP patch in one of the test files.

Closes-Bug: #1303605
Change-Id: Ia5b374c5f8d3a7905d915de4f1f8d4f3a6f0e58d"
77a58ecd0a65b688d9645a3c11a6dfb87e180449,2014-04-07 22:37:46-07:00,"BSN: Remove module-level ref to httplib method

Removes a module-level variable that was just a
pointer to the httplib.HTTPConnection class. It's
purpose was to give mock.patch a target that wouldn't
affect other code using the httplib.HTTPConnection
library. However, it is unnecessary now that the
root cause of the original patches not being stopped
by mock.patch.stopall was fixed in bug 1303605 (change
Ia5b374c5f8d3a7905d915de4f1f8d4f3a6f0e58d).

Closes-Bug: #1304558
Change-Id: Idf814b075a80245bb9751466c2b58d719a1b81f3"
5c6ff449bbd7386f0f3e41efc524024434f325df,2014-04-08 09:17:18+03:00,"Add L2 Agent side handling for non consistent security_group settings

Add setting of the firewall_driver to NoopDriver when firewall_driver is None and
add warning if driver combination is not valid.
Modify is_valid_driver_combination to verify default settings: enable_security_group (True) and firewall_driver (None).

Change-Id: I841f9cf96ac6ee2ad17a4e8908d6c8a96f368cca
Closes-Bug: #1296957"
2da351af7d2a10a3055020d572d357c56ba2689b,2014-04-08 06:41:31+00:00,"Enforce required config params for ODL driver

Raise a config error during initialization if
there is no URL, username, or password specified
in the config for the OpenDayLight ML2 driver.

Closes-Bug: #1301432
Change-Id: I65fc94d3eaaade3d1402d1c82d2c1edfa7133d5a"
4cb3eb2a98246f28f8016cfe32946d365203fbae,2014-04-08 08:43:00-07:00,"NSX: ensure dhcp port is setup on metadata network

Change in scheduling behavior caused a regression
where the dhcp port is no longer provisioned on
the (admin) metadata network created when a subnet
is uplinked to a router.

This change recovers the past behavior and extend UT
coverage to avoid further regression.

Closes-bug: #1304127

Change-Id: I8420203f68a43368f3784adb0c4cbbe55f048662"
2527d3d30d6b91e5df74ce1b85cb0d079aff4216,2014-04-08 09:36:20-07:00,"BigSwitch: Create router ports synchronously

Since router ports are created as part of a
long transaction with multiple REST calls, they
need to be created sychronously. This is to prevent
the async thread from deleting them from the backend
if it can't find them in cases where they haven't been
committed to the DB yet.

Closes-Bug: #1305331
Change-Id: I2ab3c862dc6b1760199654bbd0969ac5efdbe704"
d90d71cfdae1d9c9c3b54cc33adfabce683c633c,2014-04-09 00:50:01+00:00,"NSX: Fix KeyError in sync if nsx_router_id not found

Previously, a KeyError would occur in the sync code which would
cause the sync thread to stop running. This would occur if there
was a router entry in the database but no nsx_router_mapping and
the router was not found in nsx. Note: this should never happen unless
one did not run the db migration which introduced and migrated the data
for the NeutronNsxRouterMapping table.

Change-Id: I44f3e7de9323f594501db63d3ad33e80e617bfdc
Closes-bug: #1304647"
1b4fb23b0b5a1ab8e9fd443bb6f8f77f5c1a43b5,2014-04-09 05:20:27-07:00,"Edge driver: Improve exception handling

Improve exception handling in the edge driver code.

Partial-Bug: #1305032

Change-Id: I727a7389aff216c4347de5605b8b1979d3e5a94e"
5e90a0a64ba5e9fa2823795dd8a1c09ba459058e,2014-04-09 05:22:14-07:00,"Edge firewall: improve exception handling

Improve the exception handling in the edge firewall

Partial-Bug: #1305032
Change-Id: Ib095a48dd7cb958c0c5cf5682eeb7fc93f2b55dd"
a7da625571a5acb161246e62713da81526a8d86b,2014-04-10 03:29:09+09:00,"Fix typo in ml2 configuration file

Change-Id: I1d191a2c69d7450584e0ee25a0f5fce237b1c817
Closes-Bug: #1305226"
f56972193be903c67cd54c57bcc2becf6222aced,2014-04-10 00:05:43+03:00,"Fixes Hyper-V agent security group ICMP rules

Converts ICMP protocol to the equivalent protocol number.
Adds default ICMP reject rules.
Adds default ANY protocol rules if the rule does not
contain any protocol.

Closes-Bug: #1299159
Change-Id: Iff51a58fdb532eda0fe7a63abf96004ee74bb073"
6d49834976bc08d2b8f7939bc2a217f5cc81db47,2014-04-10 00:05:44+03:00,"Fixes Hyper-V agent security groups disabling

Adds a check if the security groups have been disabled and removes
the switch port's ACLs accordingly.

Change-Id: I20d716a3f182b8ea62da6b436b150aa9dafdb1c5
Closes-Bug: #1299156"
dda6c89202b015628f74101839301424001a6c63,2014-04-09 23:03:57-04:00,"Enable flake8 E711 and E712 checking

E711 comparison to False should be 'if cond is False:' or 'if not cond:'
     comparison to None should be 'if cond is None:' or 'if not cond:'
E712 comparison to True should be 'if cond is True:' or 'if cond:'

Most violations were in DB queries. Replace as follows:
  False -> sqlalchemy.sql.false()
  None  -> sqlalchemy.sql.null()
  True  -> sqlalchemy.sql.true()

Change-Id: Iff54747b70f504d5466cfdc6e2ec4d7a0f9ddb7c
Closes-bug: #1305377"
b31d28415a6e5b7224d53eb674e4f76e8de738ac,2014-04-10 08:23:15+00:00,"Remove ""reuse_existing"" from setup method in dhcp.py

This flag is never used, it's always set to True by
DhcpLocalProcess.enable()

Change-Id: Ic30e0f2c97679d5919cc4e4afeb38666a6d41392
Closes-bug: #1305083"
c7dceedde516170d1a6ac1257103bdacb3b0cc84,2014-04-10 13:36:45+04:00,"Properly apply column default in migration pool_monitor_status

server_default parameter should be used to apply default value at
table/column creation time. Otherwise non-nullable column can't
be created because of existing rows in the tables.

Change-Id: I7136e6a0dfb9dc66ca63ff3c9fcf6de164e27e63
Closes-Bug: #1305725"
9a830b370551019a4bd3a0c7504f48961e755bd4,2014-04-10 21:03:50+10:00,"Update ensure()/reconnect() to catch MessagingError

The error handling code that gets connections reset if necessary
caught ConnectionError. It really needs to catch MessagingError,
which ConnectionError inherits from. There are other types of
MessagingErrors that may occur, such as InternalError, and they need
to cause the connection to reset, as well.

This fix has already been merged into oslo.messaging.

--

Cherry-picked from oslo-incubator 234f64d608266f43d8856ff98c89ceba6699d752
See also https://bugzilla.redhat.com/show_bug.cgi?id=1086077

Closes-bug: #1303890
Change-Id: Ic5082b74a362ded8b35cbc75cf178fe6e0db62d0"
5f749768676e6739db1e01a03ddb7f3cb43d48f8,2014-04-10 15:24:14+04:00,"Reschedule router if new external gateway is on other network

An L3 agent may be associated with just one external network.
If router's new external gateway is on other network then the router
needs to be rescheduled to the proper l3 agent

Change-Id: Ia0ed924403137ac4578ca562b57988292c41c1fe
Closes-Bug: #1234750"
1e0ea5217a93fadb915c3dcdf4c260738bed70ac,2014-04-10 11:40:56+00:00,"Remove mock.patch.stop from tests that inherit from BaseTestCase

The tests that inherit from BaseTestCase don't need to stop their
patches, since this is already done in the base class

Change-Id: Ibb1183e521686d6e948046997b32f4044d91d9e7
Closes-bug: #1305656"
f5d33051b6d9b0dd0fe08692758748ed34d50136,2014-04-10 08:07:53-07:00,"Register LBaaS resources to quotas engine

Adding register_quotas=True argument to
resource_helper.build_resource_info() function
in order to register LBaaS resources to quotas engine

This change is actually a continuation of https://review.openstack.org/#/c/69803
change which was already approved

Change-Id: Ib75027ce4a1bea3d453f57b107d29546ec6743e5
Closes-Bug: #1305957"
367638b938368f830b0f56932afdf84c75eedb16,2014-04-10 11:28:05-07:00,"Exclude .ropeproject from flake8 checks

Change-Id: Ic788c49e5e92b171e20fe132829648ff21539e33
Closes-Bug: #1297016"
c09a14089a5ca7cd3093895ee0248876499a6d06,2014-04-12 00:22:16-04:00,"Make default nova_url use a version

The default nova_url for neutron is missing an API
version number. This can cause requests to fail
because the Nova /versions API cannot respond
to Neutron notification requests.

It seems reasonable for the default value to
at least have a chance at being correct so
this patch upgrades the default Nova API url to
use the Nova 'v2' API.

Related-bug: #1298640
Change-Id: Ib1449de84fbc01fb704ebfe4a016ac8f4932be96"
e7ca2541b13d9e755f443b866708865ac22a8bd1,2014-04-13 00:26:41+00:00,"Fix dangling patches in Cisco and Midonet tests

Cisco Nexus Tests:
Explicitly stops the patch to sys.modules immediately
after use to fix sporadic failures caused by the patch
not being handled correctly by mock.patch.stopall.

Midonet Interface Test:
Removes the double-patch of the 'device_exists' method
in ip_lib.

Closes-Bug: #1307025
Closes-Bug: #1307038
Change-Id: Ie22505bb8e406a61e40819d60c76d229916a6e01"
af89d74d2961db6a04572375150ad908c9e72e78,2014-04-13 09:21:28+00:00,"Verify ML2 type driver exists before calling del

Verifies that an ML2 type driver exists for a given
segment type before attempting to call the release_segment
method on it. Logs an error if a type driver is not
found.

This covers the case where a segment is created with
a given type and then ML2 is reconfigured without
support for that type.

DocImpact
The ML2 documentation should be updated with a warning
that disabling a network type driver and re-enabling
it later may lead to possible DB inconsistencies.

Closes-Bug: #1292102
Change-Id: I65a35abf3ed57347bb6e8fee228f8c0697217c00"
7f9c6259923747f0629166dc85561b0ab231ff70,2014-04-13 09:22:23+00:00,"Allow combined certificate/key files for SSL

Allows the ssl_key_file parameter to be excluded
during SSL operation to support combined certificate/key files.

Closes-Bug: #1303312
Change-Id: Ied5c7a7657e0e26eda31305fc96104c6593e9593"
a3e49885e7b7a69277a338f5d31e565e195b033c,2014-04-13 10:10:35-05:00,"Add nova_api_insecure flag to neutron

Neutron did not have any way to allow SSL validation problems in the
novaclient similar to the way nova has the neutron_api_insecure flag.
This change adds the nova_api_insecure flag to the neutron config and
also passes it in the novaclient instantiation.

Change-Id: Ifed581df253c01fab9dc1f22c8187876271b378e
Closes-Bug: #1306822"
f86d244e45310dbef7f22c6f320fac6897fdce1f,2014-04-13 19:29:02+00:00,"Add functional tests to verify ovs_lib VXLAN detection

This commit adds a functional test to verify host VXLAN support. It compares
the results of this functional test with the logic in ovs_lib to ensure both
report the same values.

Closes-Bug: #1301101

Change-Id: Id91c755d762bea134cc451952d0f13d64576663a"
0f2de5a3353c6951a88542f35be80b9ba9a55c0f,2014-04-14 16:01:04+08:00,"Fix LBaaS Haproxy occurs error if no member is added

If no member is added and session_persistence.type=HTTP_COOKIE,
haproxy agent would not add cookie persistence option to the backend.
Closes-Bug: #1302283

Change-Id: Ifa2564df924c2555225a749a99c705b3f1caab4a"
53e784d27eafe848593467d4d598305f34030848,2014-04-14 16:06:47+04:00,"Remove workaround for bug #1219530

Bug #1219530 has been fixed before Havana. We can remove this workaround.

Closes-Bug: #1307472
Change-Id: Ib0b1abf7d11627045be922f79aff6b80448ccbf4"
4e9d4824050eedfd1495469a69e28864b6fec757,2014-04-14 13:57:33+00:00,"DHCP agent should check interface is UP before adding route

The DHCP agent should check not only that an interface for
network's DHCP exists but also make sure that is UP before
adding a default route.
For this purpose a method ""ensure_device_is_ready"" was
added to ip_lib.

Change-Id: I9af06aa0f39634fe7b63c064337cd4191db5c026
Closes-bug: #1302312"
901d676b8bcbb3e731ba44a4e574e9ae998f486e,2014-04-14 17:05:57+02:00,"Fix Metering doesn't respect the l3 agent binding

This patch fix the issue by changing the call to
find the plugin which handles the l3 which is now
the l3_router service plugin instead of the old mixin.

Also change the unit tests to use the l3 service plugin
instead of the l3 mixin and refactor the rpc callbacks
part.

Co-Authored-By: Ala Rezmerita <ala.rezmerita@cloudwatt.com>
Closes-bug: #1257354
Change-Id: Ide26f825005fa63cd3fcc75fa91fffb947e0be7a"
7607e3da884551e5c4cfe49de390afbddbb2a9b3,2014-04-14 20:48:23+05:18,"Security Group rule validation for ICMP rules

Currently there is no validation in Security Group rules
when an ICMP rule is added with icmp code alone. A rule
is getting added but there is a mismatch between SG rules
and the corresponding iptables rule that is added.
This patch does the necessary validation on the input.

Closes-Bug: #1301838
Change-Id: I510abac4c426f68ea57c99a5fef3da4058f88797"
8fb023ed53aff31f37ebebb94aca4f8e2a188342,2014-04-15 13:29:27+09:00,"Add support for multiple RPC workers under Metaplugin

Metaplugin needs a fix to support multiple RPC workers properly
because a plugin which supports multiple RPC workers cannot
initialize RPC connections at plugin initialization.

Closes-Bug: #1300570
Change-Id: I584f70abb8969054cd4edc8f914d00f6be930bab"
49502246ef319cf8981b8a867ce2a3b6a163fc9c,2014-04-15 07:56:59+00:00,"Remove device_exists in LinuxBridgeManager

LinuxBridgeManager is adding a device_exists method instead of
using the one in ip_lib as the rest of the codebase

Change-Id: Ibeb95be76a1e1b20c69841e708c2a2cbf1cbe05a
Closes-Bug: #1302463"
13fd601415418407bb2d2f6bafffb470e5879df6,2014-04-15 11:16:30-07:00,"Improved quota error message

Removed two negatives and showed a clear message when
tried to see quota of different tenants.
When a user who does not belong to a project tries to access the
quota of that project, the message that gets displayed is not clear.
In this change the user would understand the error more properly.

Change-Id: I2284df07687bb530fe06fbaab38e2971826b7b40
Closes-Bug: #1288915"
8cf394b896e3644ff51edf6a0d462501fb6e6843,2014-04-15 20:35:01+00:00,"Delete DHCP port without DHCP server on a net node

A DHCP-network was deleted from one host using neutron
dhcp-agent-network-remove and then added to another host
using neutron dhcp-agent-network-add command. While the
dhcp-agent-network-remove command was in progress, the
host crashed.  As a result, the removal of the DHCP-network
was partially done. The network was disassociated from
the agent in mysql. However, the agent never made the
release_dhcp_port RPC call to delete the port -- even
after the agent restarted. The end result is that there
are two DHCP ports for the same network. One of these
is found on the host that is no longer hosting the
dhcp-server.

This fix make the DHCP agent invoke the release_dhcp_port
RPC call on a stale network whose dnsmasq process is not
running (not active). Before this change, the RPC call is
made on a stale network only when the dnsmasq process is
running.

Closes-Bug: #1244860
Change-Id: Ie0bafdac698810b5455550c306c6a75ddf91d9bb"
cffcd56d4b58429a409b55fc1db792df3fbc24c7,2014-04-15 15:20:52-07:00,"Nuage Plugin: Delete router requires precommit checks

There exist a case where deleting router from neutron without
deleting router-interface deletes router from VSD but not from neutron.
If router has an interface with subnet router deletion is not allowed.
Needs to precheck this condition before deleting router from
backend (VSD).

Change-Id: I4ba7eff399acda0427505328355dbfb931d62587
Closes-Bug: #1298635"
30e5dae520535fbd759f4c12e184970afef854de,2014-04-16 11:19:12+02:00,"Fix uninitialized variable reference

This was probably a copy&paste error. While physical_network is used in
earlier loops, it isn't defined here. The identically named member variable was
probably intended.

Change-Id: I09e38321cf8670c62f4fdf9d99da1df737b2fc68
Closes-Bug: #1308421"
546a38fca6b5e9c389074c2365bf15b1071575ef,2014-04-16 16:36:21+00:00,"Check if bridge exists and make sure it's UP in ensure_bridge

Introduce _bridge_exists_and_ensure_up that checks if the bridge
exists and if it's DOWN sets it UP

Change-Id: Ide9d2bb04016cadb347b00cadbee7007e61bd01e
Closes-bug: #1282741"
47d061cabf6e05ec645e1c23c18f50143f66d502,2014-04-17 07:35:35+00:00,"Merge ""Remove workaround for bug #1219530"""
70dd312aa55597789ace92cf8733985f1c31faab,2014-04-17 17:32:44+02:00,"Switch over to FixedIntervalLoopingCall

LoopingCall has been renamed (without a change) to
FixedIntervalLoopingCall in https://review.openstack.org/#/c/26345/

Adjust to the new name so that the compatibility code can be removed.

Change-Id: I64f62dca5bee580dcd28860760208e9be8f4b659
Closes-Bug: #1307560"
c049583e80d9b2234557a11b77d843549f1efa65,2014-04-17 13:51:09-07:00,"Notifier: Catch NotFound error from nova

If neutron sends a single event to nova and the server_uuid isn't found
in nova. The python-novaclient will raise a 404 error. This patch ensures
we explicitly catch that exception and use LOG.warning instead of LOG.exception
as this is not an error and can happen when deleting an instance if neutron
detects that the port_status goes down before the port is deleted because
nova first unplugs the vif and then deletes it from neutron.

Change-Id: I909025503fc88a92201d5247ae5223e4516e8707
Closes-bug: #1309187"
34e3be16a196c3da32cd6fa6147f6e00636a9aaf,2014-04-18 08:28:43+09:00,"OFAgent: Process port_update notifications in the main agent loop

Port the following patch to OFAgent.
commit: 5e6e592132aa9a98936ce3bfdb66efc7832caafb
https://review.openstack.org/#/c/61964/

Partial-Bug: 1293265

Change-Id: I53813d12c66dc746cd373fd91ff9bd9bdbf222db"
6e46769594c856647b0f9ab0dddbe6dd9c9163a1,2014-04-18 08:40:19+09:00,"OFAgent: Improve handling of security group updates

Port the following patch to OFAgent.
commit: 3046c4ae22b10f9e4fa83a47bfe089554d4a4681
https://review.openstack.org/#/c/63100/

Partial-Bug: 1293265

Change-Id: Iecdfee894ff2fd5f05f63f040dd70821af124737"
dd2ccd12adfb6c7d4aa500ba4120f767beeed35c,2014-04-18 04:07:07+00:00,"netaddr<=0.7.10 raises ValueError instead of AddrFormatError

This patch ensures that ValueError is also caught in addition to
AddrFormatError as in netaddr>=0.7.11 AddrFormatError is raised and
in netaddr<=0.7.10 ValueError is raised.

Change-Id: I595c90e42129a2d365f3860e3042e826bd031365
Closes-bug: #1308675"
7305ace9f37719f47d55743c0dece7089c063b12,2014-04-18 20:55:08+05:18,"netaddr<=0.7.10 raises ValueError instead of AddrFormatError

This patch is based on Aarons work for the Bug#1308675.
It ensures that ValueError is also caught in addition to
AddrFormatError as in netaddr>=0.7.11 AddrFormatError is raised and
in netaddr<=0.7.10 ValueError is raised.

Change-Id: I71cfe82e57290552fb22637ad929747a6fa22460
Closes-bug: #1308675"
966dbb5368d710e2652b18f5b9cb4295f58598da,2014-04-18 12:34:13-07:00,"gw_port should be set as lazy='join'

This forces the object to be ready ahead of accessing time.
The change in loading behavior is also beneficial while listing
routers, as reduces the amount of queries being issued. Tests
show a performance gain of 15-30% for router-list times.

As Mr. Aaron Rosen is used to saying: Woot woot!!

Closes-bug: #1309144

Change-Id: Ibae261b91de26ca7c50e3f6c80e9be2a799785a3"
b22bc5d4356d118be35d4ab9bf2294cea090c82b,2014-04-18 15:02:43-05:00,"Add nova_ca_certificates_file option to neutron

Previously, neutron had no way to pass a certificates file to the
novaclient.  This change is to add that ability, similar to the way
you can pass a certificates file to neutronclient in nova.conf via
neturon_ca_certificates_file.

Change-Id: I1a3f85505eb44bee604900301af79d773e1952a3
Closes-Bug: #1309694"
73705174c9cdd847501e36385ffb942c17c8ef61,2014-04-21 13:05:32+04:00,"Fix incorrect change of Enum type

In migration 1341ed32cc1e_nvp_netbinding_update Enum type had been
changed incorrectly from ('flat', 'vlan', 'stt', 'gre')
to ('flat', 'vlan', 'stt', 'gre', 'l3_ext') for PostgeSQL.

The same problem is taken place for vlan_type in migrations
38fc1f6789f8_cisco_n1kv_overlay from ('vlan', 'vxlan', 'trunk',
'multi-segment') to ('vlan', 'overlay', 'trunk', 'multi-segment')
and in 46a0efbd8f0_cisco_n1kv_multisegm from ('vlan', 'vxlan') to
('vlan', 'vxlan', 'trunk', 'multi-segment').

In this change request was added separate method for changing Enum
type for PostgreSQL.

Closes-bug: #1301396

Change-Id: I27197fb7405630a55178be8516a4b62bd135e05c"
c6a8f25f49f84142ad92cf03583047ee3cc21bc3,2014-04-21 17:14:16+04:00,"Fix migration that breaks Grenade jobs

Migration 33c3db036fe4_set_length_of_description_field_metering
needs to be changed as it is a reason of Grenade job's fail.

Closes-bug: #1307344

Change-Id: Ia57d9a60847e4a34977e40fb8b09181bdbd9c39b"
e95571a6e350338a1567234bc934f70f83e69d86,2014-04-22 07:30:53+09:00,"Make help texts more descriptive in Metaplugin

This patch makes help texts of configuration parameters of
metaplugin.ini more descriptive. Comments in metaplugin.ini
are also improved.

Change-Id: I1fac888ecc223a7199cc9c9aeb603b7493f22171
Closes-Bug: #1283930"
d26bd87919990923b6fc85779f03705514d8d0b3,2014-04-22 12:05:15+02:00,"Drop service* tables only if they exist

Tables servicedefinitions and servicetypes are not used by neutron but
created using db migration tool. If quantum-server in grizzly was
started without using migration tool then tables mentioned above are not
created. During migration from grizzly to havana alembic attempts to
drop these unused tables. This patch uses ""IF EXISTS"" clause when
dropping mentioned tables.

Closes-bug: #1273355
Change-Id: I33fcb3e1dc96ce37ec9c00987cb5a3a953ca691d"
a2d7de8669016fa9d84de7b68050737a32dee7bd,2014-04-22 16:05:08+04:00,"Ml2: Set correct nullable for admin_state_up

In migrations 492a106273f8_brocade_ml2_mech_dri was set incorrect
nullable parameter:

Set admin_state_up NOT NULL in ml2_brocadeports.

Partial-Bug: #1296282

Change-Id: I051e37990ae3371978eeb1ff71e70ae2a44097bc"
2d4a2fa884ebda4ef6770bdc5729cac02d1f33fa,2014-04-22 16:30:41+04:00,"Cisco: Set correct nullable for switch_ip, instance_id, vlan_id

Corrected the following model according to database
content:
 - NOT NULL for NexusPortBinding switch_ip and instance_id

In migrations folsom_initial was set incorrect nullable parameter:
- Set vlan_id NOT NULL in cisco_nexusport_bindings.

Partial-Bug: #1296282

Change-Id: Ie5315fcbf227025c30ab4a4b97ec2a140ee3923c"
e7d5f8b15ae29ed0988b4bc3a352a9cbe60d4a92,2014-04-22 15:31:00+02:00,"Fix H302 violations in db package and services

Change-Id: If5e07fa4529430ba90d9c7dd81d28ceeee00ebe0
Partial-Bug: #1291032"
6ca8e28d3100b1860af5f36d7a0e59fc7b500c29,2014-04-22 15:37:24+02:00,"ip-lib : use ""ip neigh replace"" instead of ""ip neigh add""

Closes bug #1311002

Change-Id: Ie50bc0bff32b7f97ac317ccc2521bbea52d59ca3"
3be1d7a75c5ec754825e99e0a8d95b4e1521ae4b,2014-04-22 16:22:02+00:00,"Replace loopingcall in notifier with a delayed send

The loopingcall thread here was started before processes fork and so
the thread stops working after the fork call.  This is a problem that
will probably need to be worked out in the long run.

To ensure that this notifier works correctly in all processes, this
change replaces the persistent loopingcall thread with a thread
created on demand to delay and batch up notifications.  The first
notification will trigger spawning the thread to wait to send it.  Any
notifications that come in the meantime will notice that there is
already a thread waiting to send and will return without spawning.

Change-Id: I519d4e89b8cee341c0e1cfffbce3e77151e8202a
Closes-Bug: #1301035"
e0f69d69293f0ffba22a6540f483f05baa48cd6f,2014-04-22 15:37:31-07:00,"Remove List events API from Cisco N1kv Neutron

Earlier Cisco N1kv plugin was using list events api to
poll policies from VSM.
It was inefficient and caused delay in processing.
So, now Cisco N1kv plugin  switched to list profiles to
poll policies from VSM.

Change-Id: Ia734735361dc3eaee8e276ada0c80045eaa9ef96
Closes-Bug: #1292173"
d1c0e73bc6247d4f4e7093eadb0df6186ae2546e,2014-04-23 17:21:11+02:00,"Fix H302 violations in extensions package

H302 violation is reported by flake8 when importing separated objects from
modules instead of importing the whole module.
e.g.   from package.module import function
       function()
is changed to
       from package import module
       module.function()

Change-Id: I570eeee2a7633c1590b54ac98b411a71fc9d4f4e
Partial-Bug: #1291032"
a4e1ad0cb55c48acbae59f222cd24e268ea495d8,2014-04-24 10:58:26+04:00,"Vmware: Set correct nullable for lsn_id, nsx_port_id

Corrected the following models according to database
content:
- NOT NULL for LsnPort lsn_id;
- NOT NULL for NeutronNsxPortMapping nsx_port_id;

Partial-Bug: #1296282

Change-Id: Ia67fcc68eeceb27d9274adb652ab45b32152f01c"
8ec571e1d1d66da3c31b3f8d4c576e966fde42b7,2014-04-24 11:01:04+04:00,"LBaaS: Set correct nullable parameter for agent_id

Corrected the following model according to database
content:
 - NOT NULL for PoolLoadbalancerAgentBinding agent_id;

Partial-bug: #1296282

Change-Id: I1f11ec2e8f4c16f58dd8d4e6429e46eaedaec945"
e575fde4cbe9b23cfc103e2de2f4052dd5874b02,2014-04-24 15:34:45+04:00,"Fix incorrect usage of sa.String() type

In downgrade of 4eca4a84f08a_remove_ml2_cisco_cred_db migartion
there is a mistake in usage SQLAlchemy String type.
Used sa.string() instead of sa.String()

Change-Id: I521dd63ca2b48e902ca2cb17c45a3fe996b060e7
Closes-bug: #1312124"
9e1c61b93ab3523bc1b5510775c1ee3331097f21,2014-04-24 19:54:45+00:00,"Use set_gateway from ip_lib

Change-Id: I7df0f2b09a0d312902fc4745e0a245b5756074d9
Closes-Bug: #1312402"
0f2f768578900a7ca74091ab400bd9facce9eaf9,2014-04-24 14:40:13-07:00,"NSX: add nsx switch lookup to dhcp and metadata operations

The operations in questions were still using the neutron network
uuid as the nsx switch uuid, but this is no longer valid.

Close-bug: #1312439

Change-Id: I0f4bf02bb176c5c3914c7dd7e8249121af1b5a79"
d00e0b839378aed4c337efa1a33f6abbb384c149,2014-04-25 12:06:33+04:00,"LBaaS: remove orphan haproxy instances on agent start

This change adds remove_orphans() handling to the haproxy
namespace driver. remove_orphans() is already called by
lbaas agent on start for all drivers

Closes-Bug: #1262885
Change-Id: I5deae8e56c2cd2deb1667e9646633fd59a94b34e"
17d38f90d1ce28383a5fc061e01f0853cd8debf6,2014-04-25 21:29:19+05:18,"Fix protocol value for SG IPV6 RA rule

The ingress SG rule for RA has a wrong value for protocol
field.

Change-Id: I4d3bca4b758540cf857eb13d36ee18f8ebc28272
Closes-Bug: #1312392"
07a8751f799ede6b3d4868d8268148f21e17a47a,2014-04-25 09:25:24-07:00,"NSX: change api mapping for Service Cluster to Edge Cluster

NSX 4.2 GA has tweaked the naming for certain resources. Edge
Cluster vs Service CLuster is one of them.

Closes-bug: #1312822

Change-Id: Id4ddd99128c5e82e7a40c2d9e7385b272549cc3e"
7db44edd3c5ad4aea508c3cc74a8b0b8d785c26b,2014-04-25 19:15:27+01:00,"Improve ODL ML2 Exception Handling

Raise a MechanismDriverError when authentication with ODL fails.
Re-raise HTTPError in ""sync_resources"" for exceptions whose status code is not 404.

Closes-Bug: #1311758
Change-Id: I99d2c4f270007c369024525ba4e6188d232a0b13"
bfdec043f1429ac4aa884e9422861b4e6c1ca815,2014-04-25 15:37:09-07:00,"NSX: fix API payloads for dhcp/metadata setup

NSX 4.2 GA has tweaked the way dhcp and metadata
ports are configured. This patch takes care of
that.

Closes-bug: #1312822

Change-Id: I4e8496bf721c0f35df4228ec9c6f8066275e8c7a"
7811c8a8ffce78dc14815203858854c450f1c8f6,2014-04-26 04:23:16-07:00,"Wrong key router.interface reported by ceilometer

Ceilometer with MongoDB doesn't accept the key with dot.

The dot in 'router.interface' should be replaced with '_',
which is also the standard implementation of other keys in neutron.

Change-Id: If7fcf7658db9ee2d7d1248bb0b016b4389c32c77
Closes-Bug: #1310460"
4539ff26d903174c844d6571533dfe719195e107,2014-04-26 07:04:20-07:00,"Database exception causes UnboundLocalError in linuxbridge-agent

When database exception raises from update_device_down,
the linuxbridge-agent doesn't deal with them in a proper way
that causes accessing not-existed local variables.

A straightforward workaround is to set it as None by default
and verify its value then.

Change-Id: I32a9467876a619a7d0ad53ff3d5d95ff977e54f4
Closes-Bug: #1311971"
8ccaf4905367c87d506549837b4bb658af83b135,2014-04-28 15:45:13-04:00,"Allow ML2 plugin test cases to be run independently

Some test cases in neutron.tests.unit.ml2.test_ml2_plugin override the
network_vlan_ranges option in the ml2_type_vlan config group. However,
the test module does not import the ML2 type driver module where this
config group's options are registered. When unit tests are run by
tox/testr the module is imported during test discovery. Running the
tests independently via nose or testtools requires the option to be
explicitly imported.

Change-Id: I355a2d1212992eafed44f6d843c0fc9deb665df7
Closes-bug: #1287792"
47e51e7521784f6a2edcfbf71a9aac0237e76e42,2014-04-28 20:26:56-07:00,"NSX: fix migration for networks without a subnet

In case the network is without a subnet, calling the validation
logic during the report phase leads to an error because the LSN
would have been already allocated during the migration phase.

Bypass the issue by calling the plugin directly, which is what
the validation logic does in the first place.

Closes-bug: #1313997

Change-Id: I14f77ae3b0cc147c4ea1c79e56bdd809de7c76a0"
717a0a0ab4436e2904360fe4e34226af7d0e412d,2014-04-30 16:04:58+04:00,"OVS and OF Agents: Create updated_ports attribute before setup_rpc

setup_rpc spawns rpc-consuming thread that can access
self.updated_ports before it is created in the constructor

Change-Id: Icc447c3bb7099125aae30e2430a6ad98ba00f6f9
Closes-Bug: #1314472"
3d8ddcd77bfb1a2d5dfcb3d3be84068a7a6f43b0,2014-04-30 12:00:38-03:00,"Unit test cases for quota_db.py

This commit adds unit test cases with 100% coverage for the quotas
database implementation in neutron/db/quota_db.py

Closes-Bug: #1312310

Change-Id: Icc08132369e88a2f83fe57f524232e94ec4db702"
a98dc7680d4689f5ce5f602f9c5cb3bcc77de215,2014-05-01 11:20:18+09:00,"tests/unit: refactor reading neutron.conf.test

neutron.conf.test includes rpc_backend whose value is stashed.
Thus it is required to reset when tearing down, otherwise the stale status
will be used by succeeding tests causing random error.

This patch refactors reading neutron.conf.test and resets the status of
rpc_backend properly.

Closes-Bug: #1281481
Closes-Bug: #1284549
Change-Id: I0fa5945b6adbb9945d353028ec88d00ccbf4e31a"
2a51109aecdfd10b153badbc0514948db10585c8,2014-05-01 00:49:54-04:00,"Allow test_l3_agent unit test to run individually

When the test_l3_agent.TestL3AgentEventHandler test case is run
after test discovery it passes because discovery imports files
that registers all the config options. For the test case to run
individually we need to explicitly register the config options
used in the test.

Change-Id: Ic31503ad7be8601ff843dbdc8edf5856ce8b0e39
Closes-bug: #1313812"
07a130be1a1f77fc86076f37afe5b6bae2692a2c,2014-04-30 21:51:34-07:00,"Reference new get_engine() method from wsgi.py

wsgi.py referenced get_engine in neutron.openstack.common.db.sqlalchemy.session.
This method was removed from that file in commit 53609f29f3c8fcadc545afb891189253c07b33c3
change-id I0e1d86878d3eb924b01e04dced0f90b4e57757d8. This patch references the
replacement method added to neutron.db.api.

Closes-Bug: #1314850
Change-Id: Ifd4db5f49e2aaebc67eccb8bdcef8eea54983112"
5cecf9571f93f89ceaa024cae0a7368767643931,2014-05-01 13:36:03-07:00,"Add support to dynamically upload drivers in PLUMgrid plugin

PLUMgrid plugin will be able to dynamycally upload any of its available drivers.
It will simplify any CI testing by changing the configuration file for the plugin
instead of changing the code directly.

Change-Id: I56da881688cfdf8f9a1b655c1080c39ffc0133a5
Closes-bug: #1315137"
f55e451fb790b976d3fbd3a23dd8688bcc584c77,2014-05-02 08:16:37+09:00,"Performance improvement of router routes operations

This patch fixes inefficiency of updating extra routes.
* remove the code repeated by every routes in validation check.
* remove searching a record to delete per record.

Note: Unit tests are covered by existing ones. So no unit test added.

Change-Id: Ia335ac21c65148063d330e4533a15a73962c43d8
Closes-bug: #1312482"
4081f4392096a3f96f630a9e54bd1a0c312f3d7e,2014-05-02 06:53:23+02:00,"Improve help strings for radware LbaaS driver

Make strings consistent with what we use elsewhere:
* Capitalize first word
* End with "".""
* Improve wording and spelling

Partial-Bug: #1315111
Change-Id: Ic378aa7e4f936c3f3da0a23598620c3b978cbf45"
a3a8a86d7bccb824725d91735bd032237786f5aa,2014-05-02 14:56:57-07:00,"NSX: pass the right argument during metadata setup

The NSX cluster was erroneously passed instead of context.
This patch addressed that and tweaks UT to verify the right
parameter is passed instead.

Change-Id: Ife660b3a23705342043d121c7dcecad43e22abc1
Closes-bug: #1315538"
89b01ca24ba95e36568352b4e5c7abf0cd04e4af,2014-05-02 15:30:29-07:00,"Optimize querying for security groups

In the check for all security groups on port belong to tenant,
add a filter to get security groups for the tenant which are in
common with the security groups of the port.

Change-Id: I66f31755525fca37f9dbce6fb43e475791f82495
Closes-Bug: #1315097"
c2634fa580b9b5e1c55bb6dc7eb02f0de989d747,2014-05-04 12:39:19+02:00,"Fix H302 violations in unit tests

H302 violation is reported by flake8 when importing separated objects from
modules instead of importing the whole module.
e.g.   from package.module import function
       function()
is changed to
       from package import module
       module.function()

Change-Id: Ic6975f39c755ded54149a9c01fcdcfaf78c596fc
Partial-Bug: #1291032"
1a116d24a955c9e45fa8a29998d09da0350be4ab,2014-05-04 12:40:05+02:00,"Fix H302 violations in plugins package

H302 violation is reported by flake8 when importing separated objects from
modules instead of importing the whole module.
e.g.   from package.module import function
       function()
is changed to
       from package import module
       module.function()

Change-Id: I83372124f4fba7b94bbfb4a56a0c0ef779ee237f
Partial-Bug: #1291032"
ea1aa7794585c7cca3118ece282e08cfb760218b,2014-05-04 12:40:08+02:00,"Fix H302 violations

H302 violation is reported by flake8 when importing separated objects from
modules instead of importing the whole module.
e.g.   from package.module import function
       function()
is changed to
       from package import module
       module.function()

Change-Id: Ifbf31b52316d3cade40743752a49ce700f384a21
Closes-Bug: #1291032"
5da44b9bdb65c54f823ce7867386b9ca0c9a6b25,2014-05-05 03:07:52-07:00,"Adding tenant-id while creating Radware ADC service

Adding tenant_id as a parameter when creating Radware ADC service

Changing unit tests to test the udated REST call resource
with tenant as a parameter

Change-Id: I7a3e9bfb492e847195031bb72ef15dae8769e91f
Closes-Bug: #1315815"
45381fe1c742c75773d97f1c0bd1f3cb1e7a6468,2014-05-05 17:54:30+02:00,"L3 RPC loop could delete a router on concurrent update

routers_updated does not acquire any lock just updates
a set for future rpc loop processing.

The self.updated_routers can be changed by concurrent update
notification. If this change happens at the time around the
self.plugin_rpc.get_routers call, the additional routers
- by mistake - is considered as admin_state_up=false routers, which
 are safe to delete.

Creating a local copy of the updated_routers and preserve
the fresh updated_routers entries for the next _rpc_loop
operations.

Change-Id: Icc7377f9c29e248c3b34562465e859b15ecc2ec3
Closes-Bug: #1315467
Partial-Bug: #1253896"
0dde14c0cd6ffea8ebff715342852ef17a9c0b70,2014-05-05 18:59:18-07:00,"Big Switch: Check source_address attribute exists

Check that the source_address attribute exists on
HTTPSConnection objects before referencing it since
it's not present on python 2.6 deployments.

Closes-Bug: #1316382
Change-Id: Id82e70f124cba73c33737099027b5c61aea713bb"
77ddd463bd2e96041c0b6ecea1c46c4ac4d55851,2014-05-06 14:44:43+10:00,"Record and log reason for dhcp agent resync

A dhcp resync can be triggered at a number of points, but the actual
resync is done asynchronously by a helper thread.  This means by the
time the resync happens, it's hard to establish what actually caused
it.

There have been a number of problems in production systems that cause
excessive resyncs.  One is a ipv6/dnsmasq issue (rhbz#1077487) and
another is db corruption with duplicate entries [1].  The resync
triggers a whole lot of logs itself, so it becomes very unclear how to
establish any causality.

This change keeps track of what triggered the resync with some helpful
information.  We add a schedule_resync() function to to replace a
explicit set of needs_resync which tracks why it was called.

[1] The logs will contain output like ""DBDuplicateEntry
(IntegrityError) (1062, ""Duplicate entry
'6d799c6a-7a09-4c1e-bb63-7d30fd052c8a-d3e3ac5b-9962-428a-a9f8-6b2' for
key 'PRIMARY'"") ..."" in this case

Closes-Bug: #1294445
Change-Id: I9b1c6202f5a6bbad8589a8b64b2a38c9d9edb43b"
61edb744bdaefa72151e99c43d9a6e75e7895f07,2014-05-06 11:01:20+02:00,"Fix importing module in test_netscaler_driver

During H302 was introduced new bug importing package instead of module.
This patch is reverting back change on this file from
https://review.openstack.org/#/c/89628/5

Closes-Bug: #1316486
Change-Id: I7830fba6687655b133073ace75f32004e72ad650"
39ffcb0dd75d9dc5d8a249f2974a67f0def5204b,2014-05-07 15:15:15+02:00,"Remove explicit dependency on amqplib

kombu already depends on amqp or amqplib depending on its
version, and no explicit access to amqplib exists in neutron code.

Closes-Bug: #1317094
Change-Id: I5cf189d7173b732cba6df3f9b6aff1d2bb85cdfe"
14ebdbe77479a72ad1f324663ec795460e03e99a,2014-05-07 13:27:50+00:00,"Make VPNaaS 'InUse' exception more clear

In case IpSecPolicy or IKEPolicy is updated while VPN connection that uses it
is already established, IPsecPolicyInUse or IKEPolicuInUse is raised.
Need to clarify their messages to emphasize that policies can't be updated
because they are used by established connection.

Change-Id: I259f9b8bcff7f8ec13ac630285f6e881c6653309
Closes-Bug: #1315809"
af020da544ac4cf21b293d23710545ee5cdcdfa4,2014-05-07 08:10:30-07:00,"NSX: ensure that no LSN is created on external networks

Logical Service Nodes (LSN) are those that provide dhcp
and metadata services to networks when the NSX plugin is
used without the openstack dhcp and metadata proxy
agents. External networks do not work with Neutron's
dhcp and metadata services, therefore there is no need
to provision a LSN in this case.

Added UT to avoid regression.

Closes-bug: #1316795

Change-Id: I3dab0c9cbecdd9296466c991d02d590d6bd5bd49"
9f673c2482528bdde15776c52928dbaceecdf811,2014-05-08 15:08:40+09:00,"ofagent: Add a missing push_vlan action

Fix the flow for _provision_local_vlan_inbound_for_tunnel
to push-vlan explicitly.  While the old code happened to
work with older versions of OVS, it was spec-wise incorrect because
it failed to meet the prerequisite of the following set-field.
The latest version of OVS correctly rejects such a flow.

Closes-Bug: #1308927
Change-Id: I66221eec0cb4083d178d7d5651360ee1874e3d1b"
b3e52b6b2462cf80dbdb5fa4785e51b0d147316e,2014-05-08 15:19:02+04:00,"ML2 VxlanTypeDriver: Synchronize of VxlanAllocation table

At neutron startup VxlanTypeDriver syncs tunnel range from conf
to DB. In case multiple servers deployment restarting several
servers at the same time could lead to DB exceptions being thrown.
Need to synchronize between neutron servers by locking VxlanAllocation
table.

Change-Id: Idf9908f039070b9194612484603f592f1a8d74b8
Closes-Bug: #1307295"
c33013c46a6d66768f585a2570be99d1b2ee85fb,2014-05-08 15:51:52-07:00,"Revert ""Big Switch: Check source_address attribute exists""

This reverts commit 0dde14c0cd6ffea8ebff715342852ef17a9c0b70.

This fix only addressed part of the problem. The socket call
in python 2.6 does not accept an extra source address arg
either.

Change-Id: I4df4f66e9db0da1a8923ee37e918718f3bcf26ee
Partial-Bug: #1316382"
f5e4cf8e3edd1ce0ebb8c0c7256be07d094896de,2014-05-08 16:34:23-07:00,"Big Switch: Check source_address attribute exists

Check that the source_address attribute exists on
HTTPSConnection objects before referencing it since
it's not present on python 2.6 deployments. If it
does not exist, create a socket connection without
specifying the source.

Closes-Bug: #1316382
Change-Id: Ica10d23cc6de81ae56f711937f208c7321c77f36"
6db48dd688d45ba41863926fa1a91d2d3ea484ec,2014-05-08 23:40:46-07:00,"Ensure core plugin deallocation after every test

The unit tests were previously consuming an excessive amount of memory
(4GB+) due to plugin instances persisting in memory.  Deallocation was
not possible where a combination of circular references and mocking
was involved.  This patch ensures that only NeutronManager holds a
plugin reference and that all other references are instances of
weakref.proxy.  Residual memory footprint for tox executed on a
12-core machine has been reduced to ~1.3GB.  Plugin deallocation is
validated at the end of each test to prevent regressions.

This change also includes fixes to unit tests that depended on plugin
instances persisting across tests.

Partial-Bug: #1234857
Change-Id: Ia1f868c2d206eb72ef77d290d054f3c48ab58c94"
ee5c3b0bb60918a7e59e89ceffbafa2f683b74fd,2014-05-09 22:24:45+00:00,"Make plugin deallocation check optional

The fix for memory leakage in the related bug added a check for plugin
deallocation that performed a call to gc.collect() after every test.
This had the side-effect of increasing test execution time by ~50%, so
this patch makes the check optional via an environment variable
(OS_CHECK_PLUGIN_DEALLOCATION).

It may make sense to create a periodic job that runs with the check
enabled, but otherwise the check can be used by developers for
debugging purposes.

Change-Id: I9ebe663abbc4e4ff3a62d807d5a3230c2ecccd07
Related-Bug: #1234857"
2d72790bf83473e0c9b73cc290f711fcda7a5803,2014-05-10 04:27:57-07:00,"Big Switch: Don't use MagicMocks unnecessarily

Replace the mocks purely being used to block external
calls with functions that just return and don't record
calls.

Closes-Bug: #1315574
Change-Id: I79533135b5cb456d941ddffa62f5365970146a7e"
501213686886baccd3280e10b8856a25d3517519,2014-05-10 18:31:40+02:00,"OVS lib defer apply doesn't handle concurrency

The OVS lib deferred apply methods use a dict to save flows to add,
modify or delete when deffered apply is switched off.
If another thread adds, modifies or deletes flows on that dict during
another process called deffered_apply_off, its flows could be ignored.

This fix stash reference flows list and point the flows list to a new
cleared flows list. Then, it applies flows from the stashed flows list.

Closes-bug: #1263866
Change-Id: Ia3c6ce181e1599d1474da7eb944feff7d84f1d73"
237f05839668d8d26e81b02746086c651431988b,2014-05-12 21:59:12+03:00,"Fix issubclass() hook behavior in PluginInterface

Currently, PluginInterface provides an issubclass() hook that returns
True for issubclass(A, B) call, if all abstract methods of B (stored
in B.__abstractmethods__) can be found in the A.__mro__ tuple of
classes. But there is an edge case, when B doesn't have any abstract
methods, which leads to issubclass(A, B) call returning True even if
A and B are not related all.

E.g. issubclass(NeutronPluginPLUMgridV2, NsxPlugin) returns True,
while these two are different core plugins. And it gets even more
trickier when superclasses are involved: e.g. SecurityGroupDbMixin is
a superclass of NsxPlugin, so depending on the fact whether the
python module with NsxPlugin class is imported or not,
issubclass(NeutronPluginPLUMgridV2, SecurityGroupDbMixin) will return
either False or True accordingly.

Closes-Bug: #1308489

Change-Id: I92711a00a19b89729ccdba9cbd8a2e7a2d2868ed"
e222585c98b2176a2e8a8b0ba2cac901491764d1,2014-05-15 14:15:58+08:00,"Add 'secret' property for 'connection' option

Neutron cli registers 'connection' option without
'secret=True' property. This commit makes sure
'connection' option has 'secret' property when
it is registered.

Change-Id: I0b0a5aca44a8eeee1c12513f30b9559f1d008442
Closes-Bug: #1319651"
4a5da930e8baf1b370a6aab32fedb7f7bfb40930,2014-05-18 22:02:25+08:00,"Reorg table ml2_port_bindings when db migration

For DB2, there are restrictions on table access
after ALTER TABLE statements containing
REORG-recommended operations.
Table will be placed in ""reorg pending"" state
after some continuous alter table operations.
Need run reorg table to make the table available.
More info refer to:
http://publib.boulder.ibm.com/infocenter/db2luw/v9/index.jsp
?topic=%2Fcom.ibm.db2.udb.admin.doc%2Fdoc%2Fc0023297.htm

Change-Id: I7fdd61bb4d636d7a3260c0b23152f1f3083cdcfd
Fixes: bug #1318498"
61a7b584238327d346bd4da642f3f8cb4d1dbf9c,2014-05-19 12:16:56+02:00,"Add missing translation support

Update a number of files to add missing translation support.

The patch adds a new hacking check - N320. This ensures that
all log messages, except debug ones, have translations.

A '# noqa' indicates that the validation will not be done on
the specific log message. This should be used in cases where
the translations do not need to be done, for example, the log
message is logging raw data.

Change-Id: I3e1fdd04d87b09dff50950b5e85f5cacfb29afdc
Closes-bug: #1314994"
b7a753ce80d34f7d98c4b401e364b5f6a740c3f4,2014-05-19 19:47:07+09:00,"OFAgent: Avoid processing ports which are not yet ready

Port the following patch to OFAgent.
commit: 2702baed390d094b0eac07d0ae167ed236868d00
https://review.openstack.org/#/c/65838/

Closes-Bug: 1307745

Change-Id: Ie1fe0944fb541ba45ffb5b03747d5da289cede51"
24d5d4819ede6728e98d376852e8007fe982fd70,2014-05-19 07:49:41-07:00,"NSX: allow net-migration only in combined mode

To allow migration of networks from the agent based model
to the agentless one, both modes need to be available; prior
to this change the extension was available in 'agentless' mode
too; this may lead to leftovers during the migration step.
This patch makes the extension available in 'combined' mode
only, which was the intended behavior.

Closes-bug: #1313985

Change-Id: I491ee3eaf25fc30c0ab4092ee198802a6b06d91d"
3758f25c3ca83d9465f7a0041f286156504c7065,2014-05-19 18:38:15+00:00,"Allow vlan type usage for OpenDaylight ml2

The initial OpenDaylight integration with Openstack did not support
vlan isolation so it was not included as a valid type. This change
adds the vlan type as allowed.

Also modified tests to include vlan as supported in the
check_segment().

DocImpact:
Use of VLANs with ML2 and the OpenDaylight mechanism driver
requires OpenDaylight Helium or newer to be installed.

Closes-Bug: #1315475
Change-Id: I52e3c9bfdc93b8786c58954beca105e7498e3f40"
befa0b9184eb0c6248d06efa5b02be8217f1722e,2014-05-19 21:42:11+02:00,"Implement local ARP responder onto OVS agent

With ML2 plugin and l2-pop mechanism driver, it's possible to locally
answer to the ARP request of the VM and avoid ARP broadcasting emulation
on overlay which is costly.

When this functionality is enabled, the OVS flows logic evolves to [1].
This functionality was introduce in 2.1 OVS branch [2].

A README is added to describe l2-pop mechanism driver and the agents
particularities.

[1] https://wiki.openstack.org/wiki/Ovs-flow-logic#OVS_flows_logic_with_local_ARP_responder
[2] http://git.openvswitch.org/cgi-bin/gitweb.cgi?p=openvswitch;a=commitdiff;h=f6c8a6b163af343c66aea54953553d84863835f7

DocImpact: New OVS agent flag 'arp_responder' set to false by default
Closes-Bug: #1237427
Change-Id: Ic28610faf2df6566d8d876fcd7aed333647970e2"
d5c0a37999f9e3a611a322baacabebc06b13283b,2014-05-20 17:24:22+00:00,"Provide way to reserve dhcp port during failovers

This change provides a way to save the dhcp port when failing
over a network from one dhcp agent to another.  When a
dhcp-agent-network-remove is issued, the dhcp port device_id is
marked as reserved which causes it to not be deleted. When a
subsequent dhcp-agent-network-add is issued, the reserved port
is used and the device_id is corrected.  This is desirable
in order to maintain the dhcp port ip address so that dns doesn't
get impacted. Unit test added.

Change-Id: I531d7ffab074b01adfe186d2c3df43ca978359cd
Closes-Bug: #1288923"
0f877f2594d415513856af3c528275fce2228ac1,2014-05-20 12:28:59-05:00,"Remove hard dependency on novaclient

The nova notification patch introduces a hard dependency on
novaclient when it is a runtime-configurable dependency. The
import from novaclient should be conditional on the
appropriate nova notification options being enabled in the
config.

Change-Id: I2ef4bfa4d53afc7e8c800ad8e2a8737e117af238
Closes-Bug: #1321352"
90df728558ba1f9c1d00aab1fa9d9e9937121c4b,2014-05-20 20:42:17-07:00,"Log iptables rules when they fail to apply

Log the set of rules that causes iptables-restore
to fail in the Linux agent iptables manager.

If a specific rule is identified as the cause, only
that rule and a few surrounding it will be logged to
reduce the output.

Closes-Bug: #1306399
Change-Id: I8e94c1faae75760e439c5abe3d9b723548398105"
0ff8536c0d9b95172c42b1a01d292df58ed2e573,2014-05-20 22:07:58-07:00,"Fix non-existent 'assert' calls to mocks

Fixes calls to non-existent 'assert' methods
called on mock objects.

Closes-Bug: #1320774
Change-Id: I7eab28fc9b23cbb39d5507ff3e8004a493c90bed"
14991ddf9ce7db3a7873b4aa5f8dfa5d61c9b1d9,2014-05-21 13:01:41-05:00,"Metaclass Python 3.x Compatibility

According to the OpenStack style guide
(http://docs.openstack.org/developer/hacking/),
for Python 3.x compatibility use ""six.add_metaclass""
instead of "" __metaclass__.""

Closes-Bug: #1236648
Change-Id: I2f507a90ee08cc05bd764549002a4656c187b6fc"
6167cb55e2f62a645487d66e52b809c9599b3bb8,2014-05-21 11:34:34-07:00,"Do not defer IPTables apply in firewall path

By default, iptables apply is deferred in L3 agent. For
external gateways, iptables is applied immediately (to
enable NAT for floating IP). Similarly, when firewall
is created/updated/deleted, iptable rules are applies
immediately.

Change-Id: I4f652a030ae23a71a2e20af2e8ef0ad5b882b80e
Closes-Bug: #1320775"
52301e4727091f867c42b18b316d4c4aacffea31,2014-05-21 18:41:55+00:00,"Allowed Addresspairs: Removing check for overlap with fixed ips

Current code does not allow assigning a fixed ip to a port when that ip
overlaps with one of the addresses in the allowed-addresspairs list.
This is an unnecessary check as the overlap does not have any negative
effect. Further, such a check actually makes it hard to use this
API. For example, if a fixed IP 10.10.1.1 exists on a port and we
want to allow addresses in 10.10.1.0/24 cidr on that port, then one
has to configure a list of 8 cidrs ([10.10.1.0/32, 10.10.1.2/31,
10.10.1.4/30, ..., 10.10.1.128/25]) on the allowed-addresspairs.
In addition to the above reasons, the current code also does not
check for the overlaps in all cases.

This patch summarily removes this overlap check.

Closes-Bug: #1321864
Change-Id: I5498c4a72b31267644da10a54a9860c1fc3bb250"
7508170498949818aed02ba0fd9b7f861e596320,2014-05-22 13:17:51+02:00,"Common decorator for caching methods

Decorator caches methods' results, the key is composed from function
name and its parameters. Implementation of cache itself should be in
object implementing decorated method. Cache backend should be taken
from oslo-incubator.

Related-Bug: #1276440
Change-Id: Ibe3f1b2eb10b9601ad76ec24b7f0e3551b4013e2"
3faea81c6029033c85cefd6e98d7a3e719e858f5,2014-05-22 13:19:13+02:00,"Metadata agent caches networks for routers

During cloud-init there are several calls that asks neutron API for the
same data which will not be most likely changed. Specifically router's
networks are cached.

Closes-bug: #1276440
Change-Id: Ic5eedb8057c7f4934eed08869ebf55c91e6edfc9"
bb4f44654f6765c4e1fbcf92375c273494151099,2014-05-22 10:53:01-04:00,"remove token from notifier middleware

notifier middleware is capturing token and sending it to MQ. this
is not advisable so we should filter it out.

Closes-Bug: #1321080
Change-Id: Ia1bfa1bd24989681db1d2f385defc12e69a01f8d"
656f2cd02083058c037c160f4c1b78d4c6eb877b,2014-05-22 18:48:04+02:00,"Remove all mostly untranslated PO files

We now only import PO files that are at least 75 % translated,
so we can delete now all other PO files. The patch only
removes the mostly untranslated files. Once a file becomes mostly
translated, the bot will import it again.

This removes all languages besides en_US.

Change-Id: If1700477e01b8ccf515c140597f47caf2b81c803
Closes-Bug: #1317794"
fc7cffedbe60ae9da7963373e9072c55700fce5f,2014-05-22 21:47:39+00:00,"Set onlink routes for all subnets on an external network

The addition of the on-link routes gives us some freedom to allocate a
router's IP address from any one of multiple subnets on one external
network.  Different routers can get their IPs from different subnets and
they still have direct on-link connectivity to each other.  For example,
one router with its primary IP from 10.0.0.0/24 and another from
192.168.0.0/24 can communicate directly.  It is important that each
router has on-link routes to *all* of the subnets.

Any router can host floating ips from any of the subnets regardless of
which subnet the primary IP address comes from.

This is an alternative to the ""Multiple floating IP pools"" section in
the administration guide.  It is a simpler alternative that avoids
having to create multiple external networks.  It is also more flexible
because routers will no longer be restricted to getting floating IPs
from the pool to which they happen to be connected.

DocImpact
Document the procedure for adding subnets to the external network.
Potentially remove the existing procedure for ""Multiple floating IP
pools"" from the docs.

Change-Id: I2c283f5be0cbb6b5d350cafc1b636c300b796a7b
Closes-Bug: #1312467"
c1827a074654d2e8d07e93945fa605ad3b6c18fb,2014-05-23 06:57:42+09:00,"OFAgent: Fixing lost vlan ids on interfaces

Port the following patch to OFAgent.
commit: 60cb0911712ad11688b4d09e5c01ac39c49f5aea
https://review.openstack.org/#/c/66375/

Closes-Bug: #1309286

Change-Id: I04f99ef7928cd07959b29eb64b5744df397979b8"
e02846cff4748f7df4d73fb0833fa3dbad1ccf9b,2014-05-26 09:20:57+08:00,"Disallow 'timeout' in health_monitor to be negative

It should limit the value of 'timeout' in 'health_monitor', the 'timeout'
shouldn't to be negative.

Change-Id: I26ae1995c9cc362df7c7dda4c53fb8adda298d13
Closes-bug: #1320062"
92997d4cbcd7bac0f6f417d1c2ed465ecc6ffd6e,2014-05-26 12:33:09+08:00,"Add NVP advanced service check before deleting a router

Since NVP advanced services(LB/FW/VPN) are all routed inserted,
it is necessary to check service in use before deleting a router.
    *If there is one service inserted into the router, it would raise
RouterInUseByXXService error when deleting the router.

Change-Id: I9844f53918cad17cafde0783fe6b69cff246791d
Close-Bug: #1295494"
d23bc8fa6e2d8a735a2aa75224b1bc96a3b992f5,2014-05-26 12:43:17+00:00,"Install SNAT rules for ipv4 only

Change-Id: I37bd770aa0d54a985ac2bec708c571785084e0ec
Closes-Bug: #1309195"
c4f0c4ba967af71d31629beff72a0f1f748202cb,2014-05-26 09:56:37-04:00,"Fixes bugs for requests sent to SDN-VE controller

This patchset fixes a couple of bugs wrt processing requests
before sending them to the backend controller and adjusts the
requests based on the controller requirements. It also corrects
typos, add quotas and changes the default for a configuration
parameter.

Change-Id: I4b64c2b49ff4854949afc1e54cba1057f376b058
Closes-Bug: #1311260
DocImpact: The default tenant type is chganged from OF to OVERLAY"
adb6674c798594fa7348e294e5c979085503ba96,2014-05-26 09:06:49-07:00,"NSX: replace strong references to the plugin with weakref ones

This is done in accordance to a refactoring done in change 92793.

Partial-bug: #1234857

Change-Id: Iaf2bc93182c01e62bb755b4e3f104f5a926b73fc"
be340d1bab015c47650687f97393c6c9015fb537,2014-05-26 22:51:18+02:00,"fix openvswitch requirement check

With VXLAN enabled on openvswitch, neutron checks
module version of the openvswitch kernel module.
If the pattern to extract the version matches twice
(eg. for path and version) the agent dies.

This patch ensures, that only the version is checked
against the pattern.

Change-Id: I879624f6b0936cab59e02958ae3a89950df773bb
Closes-Bug: #1322139"
e588ee5b470bdca25abc634db3144d2aa9b84554,2014-05-28 02:55:41+09:00,"NEC plugin: Bump L3RPC callback version to 1.1

update_floatingip_statuses RPC call implemented in Icehouse expects
RPC version 1.1 and RPC version of L3RpcCallback of other plugins
was bumped to 1.1, but the version of L3RpcCallback in NEC plugin
was not bumped to 1.1 yet.

Change-Id: I0073a3de9ea0cd59d43c821f9bdaea89bd125a65
Closes-Bug: #1323769"
624353b2a5290e3a3f481e41bd6bc14afb1b21b3,2014-05-28 07:33:20-06:00,"Support 'infinite' dhcp_lease_duration

Process a dhcp_lease_duration value of -1 as 'infinite'
when setting the dnsmasq dhcp-range values to support
cases where it is undesirable for instance dhcp leases
to expire.

DocImpact

Closes-Bug: #1315430
Change-Id: I1cc3cfebfec355014e6d5b5cbd656a1300c43c0b"
0f7cfee155c0e3e216b4a1425ec1fbdde6eeb296,2014-05-28 17:37:17+04:00,"Disallow regular user to update firewall's shared attribute

Shared firewalls should only be operable by  admins.
Currently only admin can provide shared attribute at firewall creation,
so update_firewall should be consistent with that as well.

Change-Id: I093743514637824207b375d724404d51f778d012
Closes-Bug: #1323322"
84dfaa8a87cce660aa20619bd93263e645bbb2d0,2014-05-28 07:57:28-07:00,"NSX: fix bug for flat provider network

The flat provider network would cause an exception when writing to
database. This is due to the fact that the DB expected an integer
and received an object instead.

Change-Id: Ib9d38711c0c2ef16d8bf74bfae44864a1bc272b1
Closes-bug: #1324120"
82683feff64b5b0dff36f983526421e608f13d94,2014-05-28 11:46:13-07:00,"Fix KeyError exception while updating dhcp port

This is caused by a missing network_id in the port body.
This patch adds it so that a warning message can be traced
correctly. Wording is slightly tweaked to ensure it applies
to the right context.

Closes-bug: #1324194

Change-Id: I4b67b5c3584aa33278eb0e9e879ca338ba0ca8b0"
276c7914421d821ce748a7a56e1a644b52597bc0,2014-05-28 21:25:28+02:00,"Revert ""fix openvswitch requirement check""

This reverts commit be340d1bab015c47650687f97393c6c9015fb537.

The fix did not fix anything.
See comments at
https://review.openstack.org/#/c/95592/

Change-Id: I2926acf4b0a7020a7ad3237e6d03d5b78bfcb6c4"
8e9f00a19dab98e5cfc7ca32beb9f17ebb5bc1bb,2014-05-28 20:07:09+00:00,"Reprogram flows when ovs-vswitchd restarts

When OVS is restarted, by default it will not reprogram flows which were
programmed. For the case of the OVS agent, this means a restart will cause
all traffic to be switched using the NORMAL action. This is undesirable for
a number of reasons, including obvious security reasons.

This change provides a way for the agent to check if a restart of ovs-vswitchd
has happened in the main agent loop. If a restart of ovs-vswitchd is detected,
the agent will run through the setup of the bridges on the host and reprogram
flows for all the ports connected.

DocImpact
This changes adds a new table (table 23) to the integration bridge, with a
single 'drop' flow. This is used to monitor OVS restarts and to reprogram
flows from the agent.

Change-Id: If9e07465c43115838de23e12a4e0087c9218cea2
Closes-Bug: #1290486"
09dd5eb9c81033fe83b10d4051b2f06125250185,2014-05-29 08:40:33+08:00,"FWaaS plugin doesn't need to handle firewall rule del ops

If firewall rule is attached to firewall policy, it would raise
FirewallRuleInUse excpetion in DB ops, else it is a pure DB delete ops.
So it is useless to handle delete_firewall_rule ops in fwaas plugin.
Closes-Bug: #1322076

Change-Id: I55a000d206f232c79b41230f526007f684db8f4f"
741eb5f4d57ec8b9fe24196a635173714cd910ab,2014-05-29 12:45:20-07:00,"Sync periodic_task from oslo-incubator

This is more or less to get commit c63fd5a from oslo into the core
projects which have several periodic tasks.  Neutron has periodic tasks
for L3, load balancing and metering agents to sync up state with the
server and most don't have specific spacing values set which can lead to
non-deterministic spacing of when the tasks run.

Note that this does not include the gettextutils and log dependencies
since there are not functional changes in those modules needed for the
periodic_task changes synced in *and* more importantly, the changes
to gettextutils and log require pervasive changes to neutron which
should happen when neutron integrates with the oslo-i18n library for
blueprint i18n--messages.

Further note that this does not include jsonutils due to some
issues introduced with a change for python 2.6 that impacts how strings
are encoded with simplejson. The details for that issue are in bug
1314129.  The jsonutils changes are not related to the periodic_task
changes being synced in so the dependency is not functionally required.

The LbaasAgentManager extends PeriodicTasks but wasn't calling the
parent class init function, which was causing failures since commit
47c9d60 changed PeriodicTasks to init _periodic_last_run, so also
fixed that here.

Changes:

c63fd5a Make unspecified periodic spaced tasks run on default interval
f0dd798 Remove rendundant parentheses of cfg help strings
fcf517d Update oslo log messages with translation domains
051b9f3 Refactor unnecessary arithmetic ops in periodic_task
674cdaf Refactor if logic in periodic_task
b6b82c5 Use timestamp in periodic tasks
47c9d60 Don't share periodic_task instance data in a class attr
8b2b0b7 Use hacking import_exceptions for gettextutils._

Related-Bug: #1319232

Change-Id: Ib23e33326129be0dd952efde263f381d5aa2457f"
b5d596877f538a84e8336b45026b552df8e53be6,2014-05-29 20:41:31+00:00,"Handle errors from run_ofctl() when dumping flows

The function dump_flows_for_table() calls run_ofctl(). If this occurs during an OVS
restart, run_ofctl() will return None. dump_flows_for_table() needs to realize this
and not try to call splitlines() on a None object.

Change-Id: Ide26028656e634113f955dfc89569149d4d5b306
Closes-Bug: #1324659"
4f96dd72e37ddcdbf756d711537a8b025183b73c,2014-05-29 20:49:48-07:00,"Remove unnecessary MagicMocks in cisco unit tests

Two patches that just return static data never have
assertions made on the MagicMocks generated. This
replaces the magicmocks with lambdas to make the code
easier to read and to get a minor performance gain.

Change-Id: I064c57a66a0f7a8e3080f39cf48bd4b67cf304e3
Partial-Bug: #1316401"
2df56ffe93fc5d0ce343df683d8846865b73b716,2014-05-29 20:59:00-07:00,"Remove function replacement with mock patch

In the hyperv unit tests, an rpc method is
manually replaced with a MagicMock using setattr.
This prevents it from being cleaned up by mock.patch.stopall.
This patch replaces it with a short-lived patch call
in a with statement.

Change-Id: I7b10a8115c474977e3acd16dc49d6f3ae67b0c3b
Partial-Bug: #1316401"
66a24ab397e26963fef99d58f3f8ee2c9a6a52eb,2014-05-29 21:21:29-07:00,"Improve usage of MagicMocks in ML2 and L3 tests

Removes usage of a MagicMock in a case where it's not needed.
Replaces a manual function replacement with a mock.patch call
so it's correctly cleaned up by mock.patch.stopall.

Partial-Bug: #1316401
Change-Id: I8f2f7e9eca2aeaa3b65be1b451e96ed2146950f4"
c892a0f398b664bacf8a2a0302f51e3d9b96619d,2014-06-01 16:37:18+03:00,"Radware LBaaS driver is able to flip to a secondary backend node

Change-Id: Ifbfef493d5339f61dcf58dddcc8e3830aaf06bf1
Closes-Bug: #1324131"
ce59e63249dfcd86e782d056407e38e845cbe19c,2014-06-01 23:01:00+02:00,"Neutron does not follow the RFC 3442 spec for DHCP

When setting a gateway and additional host routes in neutron subnet, the
gateway is only sent to clients via the router dhcp option, dhcp clients
conforming to rfc3442 will ignore router option if
classless-static-routes are available. This patch ensures setting both
the router option and the classless-static-routes including the gateway

Change-Id: Ia00b9385025020f848872309ae42ddac08528f53
Closes-Bug: #1317935"
7b9ed4edeef7d599c164c8682fbbb36066d98abb,2014-06-01 22:44:27-07:00,"BSN: Set hash header to empty instead of False

Sets the consistency hash header to empty instead
of False since 'False' is handled like a string on
the backend and requires special-casing to detect.

Closes-Bug: #1325771
Change-Id: Iee1651574c01a32e78167a9bbed4e0433abbdec2"
85c7dc391f110ab916ee902dec80ce44995f002d,2014-06-02 14:48:38+04:00,"Log firewall status on delete in case of status inconsistency

This should help to troubleshoot related gate failres.

Change-Id: I92d4d886cafed5faeb2a6d0b224f4b5dc8522100
Related-Bug: #1314313"
0c202ab3e453e38c09f04978e4fce30d6ee6350c,2014-06-02 16:24:56-04:00,"Improve iptables_manager _modify_rules() method

As the number of ports per default security group increases, the
number of iptables entries on the Compute Node grows.  Because of
this, there is a gradual increase in the time taken to apply chains
and rules.

Currently we are using list comprehensions to find if a new chain or
rule matches an existing one.  Instead, walk through the list in
reverse to find a matching entry.

Added a new method, _find_last_entry(), to return the entry we are
searching for.

Change-Id: I3585479ffa00be556b8b21dc9dbd6b36ad37f4de
Closes-Bug: #1302272
Related-Bug: #1253993"
63d271d4e4a8bab947f90f457ed176e46135d39e,2014-06-03 00:52:22-07:00,"Big Switch: fix capabilities retrieval code

References the raw REST response in the capabilities
parsing code so json.loads doesn't get an object
that may already be decoded and fail.

Closes-Bug: #1326173
Change-Id: Ia3179b7499f35a6ab2e9ce1631ab15ed27d64647"
76b60b204cca36395bae78fea1e773525c672f76,2014-06-03 08:59:43+00:00,"Improve module-level mocks in midonet tests

Remove unnecessary module-level mocks and replace
them with test-specific mocks so they don't persist
through the entire test suite.

Partial-Bug: #1316401
Change-Id: I49039749bb700ec0a88639f4772701ba3b920352"
6c203529230c739bdd2c94f0a77d4b22037a994b,2014-06-03 09:17:43+00:00,"Removes unnecessary Embrane module-level mocks

The embrane unit tests install a magicmock into
the system modules at the module level which
persists across all unit tests and isn't required.
This patch removes the unnecessary and limits the
life of the module mocks where they are necessary.

Partial-Bug: #1316401
Change-Id: Iaa38ee0c6821d46a6d78eefef39006df2c1c47e5"
de10d7299ba3dce18b8e12a41830ec0e686df340,2014-06-03 13:30:05+02:00,"Check DB scheme prior to migration to Ml2

When using migration tool from LB/OVS plugin to Ml2, there is no
guarantee current scheme is supported by migration tool. This patch
checks version stored in DB by alembic and compares whether version
is supported.

Closes-bug: #1307720

Change-Id: I4519a0e5a0f3027675958a68d1f9e0440b177229"
de403598f608172b1cf41ca4ec0d880642e215d5,2014-06-03 14:19:09+02:00,"add engine parameter for offline migrations

Offline migration required config file containing connection string.
In that case only engine from URL was used. With this patch engine can be
passed from command line (or config file) along with plugins which sql
script will be generated accordingly.

DocImpact

Change-Id: Ib667a71960b833fd981f97fe7d6b1856084ef5c8
Closes-Bug: #1304326"
45984e716354e2824a5199498dabefa723a6769a,2014-06-03 21:59:34+02:00,"Add local type driver unittests

Partial-Bug: #1269127

Change-Id: I5b34dc09128bcb879ea46be64cc5104eeefd4ab4"
0759ed18a95b438bf775d6905256119f1cee75db,2014-06-04 01:27:15-07:00,"Allow L3 base to handle extensions on router creation

By changing the boolean flag, API extensions made to
the router model can be handled correctly: this means
that on router creation, the response body will
contain all the extension attributes being part of
the resource. Prior to this fix, it was only on GETs
or PUTs, leaving the user at loss as to whether
the flag was actually being processed.

Closes-bug: #1325608
Supports-blueprint: neutron-ovs-dvr

Change-Id: I6f913c8417676a789177e00f30eb5875e7aaa3ae"
2bd97d205b98292be709b0257bda5fc489eb643a,2014-06-04 10:46:59+02:00,"Pass object to policy when finding fields to strip

During the evaluation of fields to strip in responses to list
operations, pass also the first object in the list to the
policy engine.
This will avoid errors in policy evaluation if during
an upgrade from icehouse policy.json was not updated to remove
attribute-level policies dependent on resource values.

Closes-Bug: #1323715

Change-Id: Iaa6ed3bbf4a07ce0b614a4197cabdfa1cb36d427"
45a12a354783845d4f761147f6949797d8f6ffa3,2014-06-04 13:22:50+02:00,"Add flat type driver unittests

Partial-Bug: #1269127

Change-Id: Ib56c5823ddb927d8269cfcdaa8df8b0f78dc5a6e"
dc9704255d70fb56e279c108c41d29626eb6bf89,2014-06-04 14:43:25+00:00,"Allow neutron-sanity-check to check OVS patch port support

This patch allows to check OVS patch port support using:

  neutron-sanity-check --ovs_patch

or pass in the deployed configuration files with a non-empty
AGENT/tunnel_types (indeed patch ports are used to interconnect
br-int and br-tun):

  neutron-sanity-check --config-file ml2.conf.ini

DocImpact
Related-Bug: #1285335
Change-Id: Ic7bfabd1f4b85bfa490dd06c70eb5682ee42a681"
0412c8a3c43e77c1bb04b0c3ba4b2781fc52e7f8,2014-06-05 07:01:42+00:00,"Default to setting secure mode on the integration bridge

Set the fail-mode on the integration bridge to be secure. This means if the agent
is stopped or crashes, and OVS is also restarted, OVS will not program a default
NORMAL action. As soon as the agent is restarted, it will correctly program the
integration bridge.

Change-Id: Icf7e3e14ee747c8ce92c14c95a0a1bbf35986252
Closes-Bug: #1324703"
ff007a57efa82bc73cbe4a1e60b1cde42c7efa82,2014-06-05 16:05:22+09:00,"ovs, ofagent: Remove dead code

Remove ""class Port"", which seems like a leftover from
the old days when agents had direct database accesses.

Change-Id: Ibc0bf5ab48f08ad620f87eb4952c7ff0f4701fda
Closes-Bug: #1326666"
f9aaa9fdfa42b097b0c4f37d0be98875cc6482c3,2014-06-05 21:43:23+00:00,"Sync service module from oslo-incubator

This is needed for the stop method now implemented in service.py used here:
https://review.openstack.org/#/c/72564

Current oslo-incubator commit on HEAD
ad3c887fbfc81ac3502a3e49c1ed6c2824029c25

Change-Id: I66901c0c42472be1aadab803958932bcb9be8ee1"
7fa8d60f246d36d5eef9cd54dc706b9a77972259,2014-06-06 13:41:44+00:00,"Return no active network if the agent has not been learnt yet

Sometimes the agent message to get the active networks is
processed before the agent is learnt by Neutron. Neutron throws an
error, but it should simply return no network

Change-Id: I6da0ca578cfe1fe0885138a5e2da76278f791491
Closes-bug: #1302838"
b943ebd4afee831e2da8336046878464830d7b0a,2014-06-06 16:40:15-05:00,"Added note to neutron.conf

Added note to neutron.conf which clarifies where database
connection attribute should be set.

Change-Id: Ic0631cff789046528cae8622d935b65ae9b012cb
Closes-Bug: #1261298"
1222366f6dadf7ce2a810c919344054196134db8,2014-06-06 17:51:49-07:00,"OVS Agent: limit veth names to 15 chars

The maximum length of a veth interface name is 15 characters.
This patch limits the length of the veth names created for
integration bridges by switching to a fixed-length hashing
mechanism if the normal name would exceed the allowed length.

Closes-Bug: #1328288
Change-Id: I432cee62a6dc91f268becbc91f8024c23dd0bfac"
c8bdff1533e54787d9a3dd98fe57a1e2e0d82e73,2014-06-06 19:38:31-07:00,"Big Switch: Call correct method in watchdog

Updates the consistency watchdog fuction to call
the correct rest method.

Closes-Bug: #1328321
Change-Id: I86ce0af36f6764a3f1e789602cef52758caedc8b"
2d9488be71244cd7fcee624764b2f6c0cc5fe3a1,2014-06-06 21:33:19-07:00,"Big Switch: Add missing data to topology sync

Adds data to the topology sync function that was
missing in the case where it is called from the
ML2 driver.

Closes-Bug: #1328222
Change-Id: I1cc3b0430f63f62c881f28139d1e5ebf22766357"
10bf897bf3a10681f5a8769f387599271d57dadb,2014-06-08 17:57:20+03:00,"Increase default metadata_workers, backlog to 4096

While deployment tools might want to change the number of workers
to match the number of cores (Or some fraction of it), any default
other than 1 should be outright better.

Inspired from 19:34:
https://www.youtube.com/watch?v=AF9r_VQrcJ0

DocImpact
Closes-Bug: #1323005
Change-Id: Ie90000183ae67ff391a23ca3213fd23aef5f4dc5"
25103df197c1f366eac8dd3069fabc01d3bd18e9,2014-06-09 10:59:27+08:00,"Check NVP router's status before deploying a service

With NVP advanced service plugin, router creation is asynchronous while
all service call is synchronous, so it is possible that advanced service
request is called before edge deployment completed.
The solution is to check the router status before deploying an advanced service.
If the router is not in ACTIVE status, the service deployment request would return
""Router not in 'ACTIVE' status"" error.

Change-Id: Idde71c37f5d5c113ac04376ed607e0c156b07477
Closes-Bug: #1298865"
c0c3c8361771091c1ef1d4906c2552f9d92e7715,2014-06-09 03:24:41+00:00,"Fix NVP FWaaS occurs error when deleting a shared rule

It is due to the lack of edge_id query index  when deleting the
vcns_edge_firewallrule_binding entry, which leads to deleting
rule binding entrys on both edges.
Closes-Bug: #1322105

Change-Id: I1d15a06bd2a6c42f29c8258d4b9344c8e9338638"
25a5a8526cf8182fbb6d7f8acf224ee1666da5c2,2014-06-09 00:48:34-07:00,"Start an unstarted patch in the hyperv unit tests

This starts a patch that was setup but never started
for a loopingcall that was allowing an occasional
exception to be thrown from the agent on unrelated patches.

Closes-Bug: #1327974
Change-Id: I6cfdb128c2a78e9c087d79a6db850603f2d03fa8"
a8d664d95f22a713d54c8ea30471dd3a4e976924,2014-06-09 09:49:02+02:00,"Use import from six.moves to import the queue module

The name of the synchronized queue class is queue instead of
Queue in Python3.

Change-Id: I5c5aba89b30b311bbfba2b64c61ea566d339b7c9
Closes-Bug: #1327975"
f89a6bd30b6f99bc39f266ae8d3880380379f8b9,2014-06-09 01:23:10-07:00,"Big Switch: Catch exceptions in watchdog thread

Catch and log exceptions in the watchdog greenthread to prevent
them from stopping the periodic consistency checks.

Closes-Bug: #1330135
Change-Id: I6834c0fee0429bb72b8c61307be7bdca77f6de9b"
6ca8cb84fd8f703367e1bd8ee1a2f26071116725,2014-06-09 16:42:47+02:00,"Monkey patch threading module as early as possible

In oslo.messaging, local thread store is used to pass RPC request
context [1]. If we try to import oslo.messaging before monkey patching
threading library, it attempts to access unpatched storage and fails
with AttributeError.

[1]: oslo/messaging/localcontext.py#L26

blueprint oslo-messaging

Change-Id: Ied7302fcb1d3e14428540e39e3db704550027890"
9b8e7362f564f622e765a6a9a14b23d87a50dac8,2014-06-09 16:53:21-04:00,"Ensure routing key is specified in the address for a direct producer

This change is already merged in oslo-incubator.  Original commit
message body includes:

    Porting this fix from oslo.messaging.  This fixes the impl_qpid.py
    driver to allow it to work with the latest stable upstream QPID broker
    (version 0.28).  See the Apache Qpid Jira bug
    https://issues.apache.org/jira/browse/QPID-5557

Change-Id: If71f78e50f8a9b3acfd1e9d02c8271f17c4ebee7
Related-Bug: #1300318"
accd56fea86a0cd5f1706cbdd5b1bbc31c4cf479,2014-06-09 15:13:50-07:00,"Control update, delete for cisco-network-profile

Add new behavior to control update and delete operations for the
cisco-network-profile resource extension.
The new behavior is to allow update and delete operations only if
there are no neutron networks associated with a particular
cisco-network-profile instance

Change-Id: I000a03c1ffd5c02e7b827ec757287633e5a5dd64
Closes-Bug: #1323867"
f86541b359743012b2bf4536d53befa01efccb3d,2014-06-10 10:07:06+08:00,"Check the validation of 'delay' and 'timeout'

In health monitor, the 'delay' should be greater or equal than 'timeout'.

Change-Id: I64972881676f2a1269aad8f9cdc77ae957c088d9
Closes-bug: #1320111"
b1b83e42ae20f510eea452b9c7fb7673374f2a79,2014-06-10 12:47:33+09:00,"extensions: remove 'check_env' method

The method is not documented or used.
It was introduced for quota but unused since commit 603e3b78.

Closes-Bug: #1328362
Change-Id: Id0a4d8606f34e54468ed0de26adbf25ff273079e"
58e6bb5893186517edafe1a4d51710c1362bc9cc,2014-06-10 07:55:40+04:00,"Fix race condition with firewall deletion

In some cases when firewall is created and then deleted in short
period of time, there could be a race condition of firewall status
changes. Agent may change firewall status from PENDING_DELETE to ACTIVE
because the agent has just set it up on the backend.
Delete request then is not properly served and firewall remains in ERROR
state and can't be deleted at all.

To fix this changing status from PENDING_DELETE is not allowed.
Deleting firewall in ERROR state is allowed.

Change-Id: Iec3cfcb1e03b33dda8e1f10ca51bd9b61fa8030d
Closes-Bug: #1328162"
744c1bd2f1ae1caf3cd6d0c07d61b034a21204bc,2014-06-10 11:41:49+01:00,"changes ovs agent_id init to use hostname instead of mac

In the Open vSwitch agent,
the Agent id is currently based off the mac address of the br-int.
Userspace only Open vSwitch derivatives such as Intel's DPDK
Accelerated Open vSwitch do not currently create a tap device in the kernel
to back the ovs bridges local port.
This limitation prevents reuse of the OpenVSwitch agent between both switches.

To enable reuse of the ovs agent with Intel's DPDK Accelerated Open vSwitch,
the proposal is to change the  generation of the  agent_id to use the hostname,
instead of the mac address of the br-int.

For several plugins such as the nec,mlnx,hyperv and onconvergence agents
the hostname is used to create the agent id.
Using the hostname will normalise the agent_id between these 5 neutron agents,
additionally log readability will also be improved,
if log aggregation is preformed across a cluster
as it will be easier to identify which node the log is from.

the hostname is retrived from cfg.CONF.host

Closes-Bug: #1323259
Change-Id: I9abfac17a74d298f1a17a0931fc98ac00234ac0b"
99840ff808c290bedd4a9832b3ec880e8909412a,2014-06-10 14:45:16-07:00,"Brocade mechanism driver should be derived from ML2 plugin base class

Change-Id: Iddcb6a43d60d5c9f472912efdecbb2aaa9b7ea4a
Fixes-bug: #1327001"
2efc40ba6b63f8ad1c2e1c98b562012fa1154ed5,2014-06-10 16:32:05-07:00,"Brocade mechanism driver depends on the brocade plugin templates

This causes problems when the customer installs the ml2
plugin/mechanism driver without the Brocade plugin.

Fixes bug: #1326937

Change-Id: I2d0dfda2cdfbdfd8503351b191151cb02104dcce"
6e2fce563ab250d4bfe000dd2a2dbc00f094141b,2014-06-11 12:10:35+04:00,"Improve vxlan type driver initialization performance

Vxlan type driver may take long time to initialize
vxlan allocation table. Optimize db performance by issuing
raw sql inserts coalesced into bulk statements.
Also optimize deleting logic.

Proposed patch gives ~2x performance gain in comparison with
original code on Mysql and Postgesql backends

Change-Id: I801d967e8e3c0260593f289097d17270ef0b391e
Partial-Bug: #1324875"
d4e5373240b97727ce9c4ec6636119bd5849bace,2014-06-11 13:23:54-04:00,"Fix invalid IPv6 address used in FakeV6 variables

Uses RFC 5180 benchmark scope to change bad IPv6 addresses

Closes-Bug: #1328889
Change-Id: I224ec8db28d62484f5f4142cfd361162fb37e1b6"
03277a80d573161abd0d1cb81ec647b53e140063,2014-06-12 09:43:09+08:00,"Allowed address pair: Removing check for overlap with fixed ips

Some of the overlap check has been removed in the following patch:
https://review.openstack.org/#/c/94508/
But the patch did not remove all the overlap check. I remove the
rest part.

Change-Id: I575ec54c0b3d6dc31ef80819d4258c6d162b4cfd
Closes-Bug: #1326007"
3f9658dcd9b2cccdc0f03088723305c980130cd3,2014-06-11 23:02:11-07:00,"When l2-pop ON, clean stale ports in table0 br-tun

When l2-pop is turned ON, the tunnels towards a
specific node are created and torn down by other nodes,
based on availability of ports on that specific node in
specific networks. This generally reclaims the resources
used for such tunnels in all the nodes.

Under such conditions, in the current code (without this
fix), the cleaned up ports continue to be present in
rules of table0 of br-tun, resulting in flow explosion.

This fix adds cleanup-logic to remove such rules that
continue to use l2-pop cleaned up ports, from table0 of
br-tun.

Change-Id: I2639ff6432a13320adcadbcc0841319a99ce8c24
Closes-Bug: #1318261"
85db592d43c82e352e64121a435720bf4a4a1450,2014-06-12 01:43:45-07:00,"Big Switch: Import DB module in unit test

Import the portbinding db module in the Big Switch base test case
so the table gets created before the test is run. Otherwise the
tests will fail when being run with testtools because the portbinding
db isn't normally imported until a function call from the Plugin.

Closes-Bug: #1331240
Change-Id: Icbd2248a0c013c142ccf9b302a1ffa15c5a4e5ae"
24a19bfd362996cd9833a167d6eb86fdcf743b75,2014-06-12 02:28:24-07:00,"Big Switch: Remove unnecessary initialization code

Removes a server_timeout parameter that was never set by anything
in the Big Switch plugin and the ML2 driver.

Also eliminates an __init__ method that didn't do anything except
incorrectly log an unset server pool warning before the inheriting
class setup the server pool.

Closes-Bug: #1331249
Change-Id: I77dd22295305b96d4702f1ea0e319dc5f82c71a8"
13fe102fadf8d25b0927ee172b0fb3f681c56bf4,2014-06-13 11:43:55+04:00,"Add missing keyword raise to get_profile_binding function

Improve corresponding unit tests.

Change-Id: I8f71ee7aa8fcafbf3ef6e3f9d4f0b89c874af73b
Closes-Bug: #1329426"
3190e5b672ac21f9c82110d319473f2041bf64f7,2014-06-13 13:45:28-07:00,"Change default netpartition behavior in nuage plugin

Allows the nuage plugin handle the case where default netpartition
already exists on the VSD (back-end controller)

Change-Id: Ia5785c1c313cf30b8bad6cda1d0e9819784e06d8
Closes-Bug: #1319892"
0f9e82d6a68fa46bf11c3883e65975a2b40498e4,2014-06-16 17:17:53+08:00,"Fix opt helpstring for dhcp_lease_duration

Recently (https://review.openstack.org/#/c/92453), the
functionality of dhcp_lease_duration was changed to support
infinite lease times.

However, this change failed to update the associated help text
with the option declaration. This patch simply updates the text
so that the new functionality can be understood by the user.

Change-Id: Id9dbe11599c55b447387df4a2d6639b7e8dba6ce"
31f6bbbbe8f9909af922dc4146afc50b7bbb0eac,2014-06-16 10:55:40+00:00,"Don't use root_helper when it's not needed

LinuxBridge agent doesn't need to use root_helper when checking if
a device exists. Root priviledges are required to perform operations
inside a namespace and it's not the case here.

Change-Id: I12e0cde2f4dd3b3f8e7f5ed9e90e2805a4466aaa
Closes-bug: #1305800"
f27e5244adcac9a12c04605fbf5c49a086d5fce5,2014-06-16 21:25:18+05:18,"Fix pool statistics for LBaaS Haproxy driver

Total connections was mapped to none of the counters
of haproxy. Active connections was mapped to active request
counter(qcur)) of haproxy which in low load situations
always remains zero.

Patch maps connections API counters to haproxy session counters
and fixes unit test accordingly.

Change-Id: I0ef4f76a75340232eb11a9b95453769ecd89d13a
Closes-Bug: #1319361"
1715eb7c8e1f2433df3c081e357f8c40dfe2a28a,2014-06-17 10:24:36-04:00,"Ensure entries in dnsmasq belong to a subnet using DHCP

In certain configurations, Neutron calculates SLAAC addresses for IPv6
subnets and adds them to the fixed_ips field of a port. Since those
subnets are not being managed by DHCP, do not add those fixed_ip entries
to the host file.

Closes-bug: #1316190
Related-bug: #1257446

Change-Id: I77dd55063296990c9df385f331f5de5d42402786"
09856a0cf63052045b3d9f4c8d2a5aa920c7c935,2014-06-17 17:27:16+02:00,"Notify systemd when starting Neutron server

systemd is notified only when Neutron is started with multiple api
workers. This patch adds systemd.notify_once() call when starting
Neutron server with api_workers=0

Change-Id: I95581dc5dffde6168c68d9f04cf8bdfcdb773ba8
Closes-Bug: #1330532"
740abdfe00001e16346211c2589b413c962fb121,2014-06-17 21:35:38+00:00,"Add vlan type driver unittests

Closes-Bug: #1269127

Change-Id: Ie2c1c5d2eea6627063dd77a08591d972060f59ee"
dca3a8eafc5530794a0cc65c086af1db54028012,2014-06-17 23:15:56+00:00,"Remove SELECT FOR UPDATE use in ML2 type driver release_segment

SELECT FOR UPDATE expression, which is triggered with the use of the
SQLAlchemy Query object's with_lockmode('update') method, is
detrimental to performance and scalability of the database
performance code in Neutron due to the lock contention it produces.

SELECT FOR UPDATE can be entirely avoided in release_segment methods
with the use of single-shot UPDATE and DELETE expressions, and this
patch clears a number of uses of SELECT FOR UPDATE by consolidating
multiple SQL expressions into one.

Partial-Bug: #1330562
Change-Id: I29ffcafc8d4d73ac1cb50c94df5da85514d47a3f"
ddc62e2d25abc7459fd28f21a6e0b12fb600d896,2014-06-18 00:24:27-07:00,"Big Switch ML2: sync detection in port-update

Adds logic to the update_port_postcommit method of the
Big Switch ML2 driver to detect when afailure to update
the port via REST was caused by the backend being out-of-sync
with neutron.

This was accomplished by checking for the NXNETWORK message
which indicates that a port request referenced a network that
does not exist on the backend. This only occurs when they are
out-of-sync so the driver will then trigger a full topology sync.

The same logic exists in the port creation method shared with
the Big Switch plugin. However, the Big Switch ML2 driver does
not send port requests to the controller unless the port binding
host ID is set, which doesn't occur until a port update after
binding in the ML2 scenario. Therefore, the logic has to be repeated
in the ML2 driver port update operation.

Closes-Bug: #1331335
Change-Id: Id6488fbdea2c8c22a34e775977d94389c8da74f8"
09e706b210513968cac2bad78fe81ee9cbb5b5be,2014-06-18 08:09:42-07:00,"Big Switch: Lock consistency table for REST calls

Adds a new class to hold an SQL table lock throughout
a REST call to prevent servers in an HA deployment from
using a stale consistency hash value.

Also passes the current context down to the server manager
for every request since the consistency hash will need to
be read from the database instead of from a variable on the
server pool object.

Closes-Bug: #1328331
Change-Id: I5f8402c076d7732742c0ae4d9b9d6833d42a0b7b"
bd35b8f5e0e10fea5df7f3ef801f6101b83c7df0,2014-06-18 13:17:17-07:00,"Remove old quantum scripts

This patch removes some old scripts left behind from the quantum days.

Change-Id: I73fb702272e6b93df9ec145da380da88c27259c8
Closes-Bug: #1331664"
60c1b9e227fdfcae8e3660ffbd5062eb6a4abb33,2014-06-18 14:11:08-07:00,"Big Switch: Stop watchdog on interval of 0

Corrects the behavior of the watchdog process
to exit if the user configures the polling interval
to be 0.

Also adds missing documentation to sample config.

Change-Id: I17b566867c21f42985cc4662f56d32db690f471f
Closes-Bug: #1332334"
79f6ccd1b5b67c23d438332e9d8641d07426a9a1,2014-06-19 01:48:24+00:00,"Pass 'top' to remove_rule so that rule matching succeeds

When deleting a vpn-site-connection, deleting the nat rule would
fail because it was created with top=True, but top defaults to
'false' in remove_rule and was not being passed. This caused the
rule matching to fail and the rule to not be deleted.

Change-Id: I51012a783314c97e85b31fc8a73be4cbb8ee7dc5
Closes-Bug: #1331839"
bd4ef02dc12122ad019ada803fd1a2bb2c56a5a2,2014-06-19 05:20:49-07:00,"NSX sync cache: add a flag to skip item deletion

This new flag will prevent updates on single resources, which
can happen asynchronously to the main synchronization thread,
from processing the 'changed' flag for items in the cache and
delete items not present anymore in NSX.

This will avoid failures seen in CI runs where the sync
thread failed because of a KeyError because some items where
concurrently removed from the NSX cache.

Change-Id: I6a11b8dabb1e9481dc807b5fbba17c9027dad5f2
Closes-Bug: #1329650"
61ac9c379f0acb43cd4bbcd9bd04cd9f53d315ca,2014-06-20 10:42:55+08:00,"ValueError should use '%' instead of ','

The method _load_service_plugins() in /neutron/neutron/managers.py
 throw a ValueError using ',' to connect log and variables.
ValueError do not support using ',' to connect log and variables,
we should use '%' instead of ','

Change-Id: Ic9b3756ac2bc36ddc689a66c078e205e0674f513
Closes-Bug:#1264210"
ccaad827b2bdcdcf4b538c5d5367f14cfc22c08f,2014-06-20 15:01:40+12:00,"Revert ""ovs-agent: Ensure integration bridge is created""

This reverts commit e5cdad90f97d3a54a493eca19e7a3ff643426de1.

TripleO's multi-node testing shows that this patch caused a failure to receive
tunnel updates, leading to the first node up to have no agent ports, the second
to have one agent port, the third to have 2 agent ports, etc. Needless to say,
this doesn't work all that well :)

Change-Id: Ie90dd4d113a404948dd5debad48065b7db48faa5
Closes-Bug: #1292105"
3eef1ae80fcd7d9fe82b5c7485702991992b2766,2014-06-19 20:35:35-07:00,"Control active number of REST calls from Cisco N1kv plugin to VSM

Add a config parameter to Cisco N1kv plugin to determine the total
number of active REST calls that can be made to the VSM.

Change-Id: I66433ef5673d35badcd3adc2defa43e578d4094f
Closes-Bug: #1329099"
3867174bc82b7fd85dd79bc0cc5625a15df2d8fb,2014-06-20 13:20:20+04:00,"Fix auto_schedule_networks to resist DBDuplicateEntry

This exception may happen if API and RPC workers are in different
processes.
Also make minor refactoring of auto_schedule_networks method
to avoid unnecessary db queries.
Add missing unit tests and adjust unit test naming style

Change-Id: I6460744e2cffec0b9f009da071597374d8c027f6
Closes-Bug: #1331456"
48e9c8b79bea9c9a65ceb1c24528a89db6d313d2,2014-06-20 14:58:28+02:00,"Pass serializer to oslo.messaging Notifier

oslo.messaging has a workaround [1] that requires context to be
transformed to pure dict before passing into amqpdriver.

Renamed serializer class to reflect its broader usage.

Updated FakeNotifier to expect serializer and other keyword arguments
supported by oslo.messaging Notifier class.

[1]: oslo/messaging/_drivers/amqpdriver.py#L337

blueprint oslo-messaging

Closes-Bug: #1332412
Change-Id: I7e7658d03639afae7bf6d3ad71445cb5b6459c09"
13d55a76d4835f1a436862c7fc0e0af577f26ba5,2014-06-20 14:47:36-07:00,"Changing the poll_duration parameter type to int

The poll_duration parameter is defined as a Str in config.py
but while using in code, it is converted to int. So just changing
the type in the config file, so no conversion is required when used

Change-Id: I1d10b4641e3ca8e464258857b27c450a43ad2e87
Closes-Bug:#1332283"
b30c47233d9794149244e1be691cab4cc6f24567,2014-06-21 15:07:31+08:00,"Remove the useless vim modelines

Change-Id: I41286e0b8f74c90b7078c3d3fb041b6586d95ab0
Closes-Bug: #1229324"
5be53ea9feb97a08b10442a33d755176507bc1f2,2014-06-23 20:22:22+09:00,"ofagent: move main module from ryu repository

the recent oslo.messaging transition broke ofagent.
this commit fixes the regression.

historically the main module of ofagent has been maintained
in ryu's repository.  this commit moves it into neutron's
repository and add common_config.init() call which is necesary
for the new rpc code.

Closes-Bug: #1332478
Change-Id: Icf215b20cd84ef44b51439e55b1815d72041ba3f"
e299349b3be240d799822daedfa2730fd96839d3,2014-06-23 19:45:30+02:00,"Merge multiple constants defining linux interface maximum length

DEVICE_NAME_MAX_LEN constant in neutron.common.constants replaces
and correct multiple constants defining linux interface maximum
length.

Closes-Bug: #1332571
Change-Id: I63f760a21e17dcd57b3685b1e71c913d2722e097"
3445715f98e3aaa967f1661e403e45ad85392909,2014-06-25 05:30:21-07:00,"OVS agent: Correct bridge setup ordering

This patch fixes three issues that combined to break tunnel networks.

The first issue was the the failure mode was being set on the
integration bridge after the canary flow was installed. This
immediately wiped out the canary flow.

The second problem was that the main loop would sync tunnel networks
right before resetting the tunnel bridge when the canary flow was
missing. This meant that it would sync all of the tunnels via RPC and
then wipe them out.

The final issue was that after resetting the tunnel bridge in the
main loop, the tunnel_sync variable was not set to True, so the
tunnels would never be resynchronized.

This patch addresses the three issues in the following ways:
1. Set the failure mode on the bridge before the canary flow is
installed.
2. Run the OVS restart logic before the tunnel synchronization.
3. If the restart logic is triggered, set tunnel_sync to True to
trigger synchronization.

Closes-Bug: #1292105
Change-Id: I6381e3fee49910127c420dd2e3205c64cdb9e185"
e8b9a11fd728d287a1c64aa025ebba009bf5025e,2014-06-25 08:16:37-07:00,"Remove __init__ method from TunnelCallback mixin

Removed an __init__ method from a mixin class that
made mixing with other classes fragile and inflexible.
This replaces it with an explicit setup method.

This allows the ML2 RPCCallbacks class to correctly
inherit the common RpcCallback class.

Closes-Bug: #1332041
Change-Id: I36cb7dcf57147468f252d61f846b2b28dd77c8ff"
8f3301cb2792cf05dd29a79506719b0141bf029f,2014-06-25 11:51:05-07:00,"validate flat networks physical name

Modified flat driver to validate the physical network
name - we make sure that empty names are deducted.

unit test changes:
- added two tests to make sure that we detect empty
  physnet names
- fix bug in existing unit-tests
-- flat_networks should be a list of string and not string
- use conf to setup flat_network

Change-Id: Ib7cfbd3c97d2e95c82044a2cba683c917ea54a84
Partial-bug: #1325664"
60fc1f64fabd86c38846c76785255c523a98b331,2014-06-26 10:20:57+02:00,"Exit rpc_loop when SIGTERM is recieved in ovs-agent

Previously ovs-agent exited with exit code 1 after SIGTERM was received.
SIGTERM should shutdown agent gracefully and exit code should be 0.

Closes-Bug: #1334264
Change-Id: I23e81cee5ae9e9fdabbe1377420b0902f47be8a7"
03500414cf463905a28ea30d069630dcfda1d90b,2014-06-26 11:00:04+02:00,"Use patch ports to interconnect integration/physical bridges

Use by default patch ports to interconnect the integration to
physical bridges for the openvswitch agent in order to increase
performance.

For ovs/kernel without ovs patch port support on kernel side, veths
can be used through the new option OVS.use_veth_interconnection.

Patch port support can be tested using:

    neutron-sanity-check --ovs_patch

DocImpact
Closes-Bug: #1285335
Change-Id: I47106e57bf5b23891d7bf43815959e0d10156fba"
fe3fe94b4156c3c6b75812c3b69ae247e7c9a0b5,2014-06-26 14:27:15+03:00,"Add config for performance gate job

This rally scenario is intended to be run in OpenStack CI
by rally-dsvm-neutron-neutron job.

Implements: blueprint neutron-performance-gate-jobs
Closes-Bug: #1334434
Change-Id: If204f3dfc32933792d09fdc929c248fc3f17b0bc"
d7318ff7123ea851e9d6953ef2c66f793ae46ca1,2014-06-26 20:00:42+05:18,"Fix re-creation of the pool directory

Whenever vip is deleted the complete pool directory
is deleted, but since pool is still alive the get_stats
function recreates the directory. The fix prevents the
re-creation of the directory. Respective unit test case
is also modified

Change-Id: I577e8e3a51db361210aa83a6c7f9b4f61210e924
Closes-Bug: #1317871"
54ffa26ce8e13ce0f77baae7b29bb793eb98f845,2014-06-26 22:17:09-04:00,"Use correct MAX_LEN constant in agent functional tests

Closes-bug: #1334922

Change-Id: I62bd12da21e778f5cca97d6280c107575d912a81"
1b46d36269adc5c64c8cd55a2d9f2c47e42b341f,2014-06-27 11:18:48+01:00,"changes ovs agent to get bridges via ovs_lib

ip_lib is currently used to list the bridges
in the Open vSwitch neutron agent.

use of ip_lib blocks reuse of the Open vSwitch agent
with userspace only open vSwitchs implementations.

this patch replaces calls to ip_lib with ovs_lib.get_bridges

Closes-Bug: #1331569
Change-Id: I5935d39b314055063a64266bda0cc4c2d1ac05fc"
a630b3bae84091f0ff1029a87e3fc27eb9d7f5e3,2014-06-27 09:14:27-05:00,"Add sanity check for nova notification support

Since nova notification support adds a runtime dependency on
novaclient, add an external sanity check testing the system's
ability to import neutron.notifiers.nova

Change-Id: I8a72c8763bb69a01178fc4ec91071a64a4648aab
Closes-bug: #1334412"
5b34d41828a2a1260b1b92f6bfd91e1264aea7a8,2014-06-30 14:05:53+03:00,"Replace occurences of 'test_tenant' with 'test-tenant' in tests

tenant_id will now be consistent among all resources created.
This is important when getting or listing resources by tenant_id.
Most resources are created under the 'test-tenant', while
metering and security groups were created under 'test_tenant'.

Closes-Bug: #1335821
Change-Id: Ifde22814ab5c302e751f2102f6fd7ef52c932126"
4675b462b6679b1123fd00a7da45b6472921deb1,2014-07-01 09:06:13+02:00,"Fix example for running individual tests

The ':' syntax doesn't seem to work anymore. Additionally fix the ""tox"" call to
not try to run it from the current working directory. It's usually installed
somewhere in $PATH.

Closes-Bug: #1334134
Change-Id: Ie608cee2ac131941d6642e2560a84db55415654b"
3709a1be92257daccba3f2506bea6d63f732564a,2014-07-01 06:19:29-07:00,"NSX: properly handle floating ip status

Ensure the floating IP status is put ACTIVE or DOWN when it
is associated or disassociated.
This is done directly on the plugin class as the NSX backend
applies relevant NAT rules synchronously.

Change-Id: Ie747c4eae2ac33016fdabaade2335f7d2d24eec9
Closes-Bug: #1334708"
ee9fe2458f813b5d367bc7263c7a30a3af46aa2b,2014-07-01 08:22:50-07:00,"BSN: Remove db lock and add missing contexts

Adds context tracking decorators that were missing
from router interface methods. Without them, new
sessions were being created instead of using the
existing context which was causing transaction
issues.

Modifies the servermanager to store context references
as weakrefs so if multiple functions are called before
the rest functions are called, the first one doesn't steal
the only context reference with a pop() call.

Removes a DB lock for update in the server manager that occured
during rest calls that was triggering deadlocks due to the
file lock synchronization for the rest calls.

Closes-Bug: #1336251
Change-Id: Iad3d61e2c23832b3ad760a999fbab7feaa13f805"
a8d67485ab498a647b1f50184755c47b18e97e2c,2014-07-01 18:25:13+00:00,"Add configurable http_timeout parameter for Cisco N1K

http_timeout is a constant defined in the code. This
change makes it configurable by providing it as an
option in the config file.

DocImpact

Closes-Bug: #1332290
Change-Id: I429dd9efa43f6a596933359f4627a7761411e621"
17686c1f24ddf1977bbd930ce94b3e3d76962c5b,2014-07-01 17:56:49-04:00,"Ignore variable column widths in ovsdb functional tests

The ovsdb tests check the output of ""ovsdb-client monitor"" before and after
some operations. The first line of output is a header row with spaces for
column separation. The column widths can vary depending on the data in the
columns, so compress multiple spaces to one for testing.

Change-Id: I6b4690ea9ef1c1b215411ca2c39b1e65fec2c6c7
Partial-bug: #1336172"
fc91e158f202112ae5cc576ad3e3fa0f89deff1e,2014-07-01 23:57:20+00:00,"Fix OVSBridge.get_port_ofport to handle empty output

Previously ovs_lib.OVSBridge.get_port_ofport() was not handling the
case where db_get_val() was returning None when no output was recieved
from ovs-vsctl.  This patch ensures that the TypeError that results
from this condition is appropriately handled.

Change-Id: I168eb0f2c6f0cb98a3eb3e118972bbaf0383ff89
Partial-bug: #1336172"
798824cab0322d9de82594dbbdb6c4ead0e1cb2f,2014-07-02 00:02:08+00:00,"Allow setting a rootwrap cmd for functional tests

Previously, sudo-requiring functional tests hardcoded the use of
'sudo' as the root helper.  Devstack gate jobs do not allow
password-less invocation of 'sudo', though, so such tests were unable
to run in the gate.  This patch adds the ability to configure the
rootwrap command installed by devstack by setting the OS_ROOTWRAP_CMD
environment variable in the test execution environment, allowing
sudo-requiring tests to run.

Change-Id: I3b8f6b4f14ac1743e08b9401f73951885165350a
Partial-bug: #1336172"
a48f64d09640b9d65918ede2447a322ea6ce0c81,2014-07-02 12:25:00+02:00,"Fix isinstance assertions

self.assertIsInstance is preferred over assert(isinstance(..)). See feedback in:
https://review.openstack.org/#/c/102754/1/neutron/tests/unit/test_extension_security_group.py

Change-Id: I9dd6141d8f25961eb42a390b45e6d94d482afc1c"
fc01ddaaa5f1170b746f47837104352bfe36eaa5,2014-07-02 07:04:57-07:00,"Fix UnboundLocalError raised during L3 router sync task

This can be fixed in a number of ways: a) consolidating the
two except clauses into one; b) adding a 'return' after the
last except clause c) by calling the cleanup method only on
success; d) initializing 'routers' before usage.

Approach c) has the benefit of stating the developer's intent
more explicitly and minimize chances of regression.

Closes-bug: #1336566

Change-Id: Ib91ac5bb07869cbec6825b60d7c4c5b23c4c4d3a"
66abc6e5392047d4919a95cbafc9282f6a14c684,2014-07-03 00:52:11+09:00,"ofagent: Fix an argument mismatch bug in commit 9d13ea88

recently merged commit 9d13ea884bff749b3975acb5eb5630e5aca4a665
had an argument mismatch bug which causes the following crash.

    TypeError: _get_ports() takes exactly 2 arguments (1 given)

this commit fixes it.

Closes-Bug: #1336175
Change-Id: I46bb1fc1aebf06274bb226014e4a9bc5a83f98ac"
8479c212b79e61aa9b694ec1368a1073898a09d5,2014-07-03 18:19:27+04:00,"Omit mode keyword when spawning dnsmasq with some ipv6 subnets

Fix UnboundLocalError for certain cases of ipv6 subnets

Closes-Bug: #1335959
Change-Id: I5e4b94d9ba1b13b72e2300b53d5638968e0d3401"
b98dda29c9bf2587c2eddad0231e337a1cb4ce02,2014-07-08 09:52:01+00:00,"Fix missing migration default value

Fix 128e042a2b68_ext_gw_mode and 40b0aff0302e_mlnx_initial
migrations by properly using server_default parameter in column
definitions.

Change-Id: I199e206dccc36fcfc2457a17167c76611d69784a
Closes-bug: #1336556"
40223f44d6e48e09d65c8a0b71ed587c434ed97c,2014-07-08 10:19:04+00:00,"Fix 'server_default' parameter usage in models

In ml2 models parameter 'default' is used for vnic_type, profile and
vif_details, but in migrations 27cc183af192_ml2_vnic_type,
157a5d299379_ml2_binding_profile and
50d5ba354c23_ml2_binding_vif_details is used 'server_default' parameter.
Usage 'default' and 'server_default' should be equal in models and
migration. So models in models is added 'server_default' parameter.

Partial-bug: #1295539

Change-Id: If6a17f381d2550daf64916ad3c1b120f41406d56"
90fedbe44ca6bfccce5d71465532fbdc85ee3814,2014-07-08 08:24:15-07:00,"Do not mark device as processed if it wasn't

Currently treat_devices_added_or_updated in the OVS agent skips
processing devices which disappeared from the integration bridge
during the agent loop.
This is fine, however the agent should not mark these devices as
processed. Otherwise they won't be processed, should they appear
again on the bridge.

This patch ensures these devices are not added to the current
device set.

The patch also changes treat_devices_added_or_updated. The
function now will return the list of skipped devices and not
anymore a flag signalling whether a resync is required.
With the current logic a resync would be required if retrieval
of device details fails. With this change, the function
treat_devices_added_or_updated will raise in this case and the
exception will be handled in process_network_ports.

For the sake of consistency, this patch also updates the
similar function treat_ancillary_devices_added in order to
use the same logic.

Finally, this patch amends an innaccurate related comment.

Closes-Bug: #1329546

Change-Id: Icc744f32494c7a76004ff161536316924594fbdb"
ef3222d09030b5e25ed558179f9c7faab7f8e256,2014-07-08 16:16:39-07:00,"NSX: remove unnecessary checks on network delete

Since commit b50e66f router interfaces are not deleted
automatically when the network hosting them is deleted.

The NSX plugin still has additional logic to ensure all the
corresponding backend resources have been deleted as well.
Such logic is now obsolete and can be removed. Moreover it
also wasteful as it perform queries for retrieving NSX
resource identifiers.

This patch also amends a few related log statement to make
them clearer.

Change-Id: If3d8d98096a8363b216707f2558e37c80f58e515
Closes-Bug: #1339401"
37086a8f175ed47776cfc7160aeb29b10060ec8b,2014-07-09 06:05:11+00:00,"Add a gate-specific tox env for functional tests

The functional gate jobs (*-neutron-dsvm-functional) need special
configuration (e.g. OS_SUDO_TESTING, OS_ROOTWRAP_CMD) to run tests.
This patch adds a new gate-specific tox env (tox -e dsvm-functional)
that sets the appropriate values and allows easy duplication of the
results of the upstream job on a host that has successfully run
devstack with neutron enabled.

A new configuration option, OS_FAIL_ON_MISSING_DEPS, is also set by
the dsvm-functional tox env to ensure that dependency failures will
result in failures rather than skips when run in the gate.

Change-Id: Idbfef1ba72ed129a3021509c7969e2685b8a6d09
Partial-bug: #1336172"
f807023246501b77e792371d98b612b208f5e8e3,2014-07-09 13:25:01-07:00,"Added support for NOS version 4.1.0, 5.0.0 and greater

NETCONF temaplates for NOS version greater than 4.1.0 are slightly
different (argh). An init time check of the NOS version is done
to enable selection of the correct NETCONF templates.

Change-Id: I01e82ad402fbbb25d92a99a3325ca2608dd514cb
Closes-bug: #1332719"
cbd89e75d34c048c15c52dc828b1df7443c540d6,2014-07-10 13:04:30+04:00,"Extract CommonDBMixin to a separate file

db_base_plugin_v2 imports too much modules that are not necessary
usually, so extract CommonDBMixin in different file.
Plus using db_base_plugin_v2 for some types of modules can lead to
cycles in imports, this refactoring should resolve the issue.

Closes-Bug: #1340145
Change-Id: Idb027d7c5cee2d5bc7598f805c56c55fd4aca048"
2dd0a22fd6cc38cc27942572c8a19bf6a52fb32b,2014-07-10 21:43:05-07:00,"Add BSN plugin to agent migration script

Adds the Big Switch plugin to the migration script that creates
the agents table. A recent commit (d3be7b040eaa61a4d0ac617026cf5c9132d3831e)
added it to the agent tables but it missed this one so an error was thrown
during migration when it reached a table that depended on the agents table.

Closes-Bug: #1340405
Change-Id: I90a164a1b632c3794a7f7607f3f1da8f7d7b15db"
ffdfd3368db157f2c178dd319a28b00c505b2da1,2014-07-11 10:46:09+04:00,"Add 'server_default' parameter

If a model mentions 'default' it is better to set 'server_default'
as well because this 'defaut' can be reached only via code. This
change adds 'server_default' parameter to models and in database,
so if someone will use SQL query it will also use default value.

For model Router added parameter server_default. In migration it was
added by this change https://review.openstack.org/105212.

For model MeteringLabelRule added parameter server_default.
In migration it will be added by heal script due to problems
with Metering plugin and grenade.

Partial-Bug: #1295539

Change-Id: Iab6fb4eca73e4918c16dac2945fd8552ae2a0c73"
40417e67820b38dc5492211554ac2ac1cd272f09,2014-07-11 08:00:14+00:00,"Mock out tunnel_sync in test to avoid sleeping

The tunnel_sync call in the daemon loop for the ovs tunnel
tests blocks for 30 seconds. This patch mocks it out to stop
that.

Closes-Bug: #1340570
Change-Id: I58c3907ed564413a8251bc1bb7922e25f673db18"
b74a38cb11024441e5774c8a8eb8b916bf414e0f,2014-07-11 11:21:14-07:00,"Revert ""VPNaaS REST Client UT Broken""

I8badc249ad021fdbdb2367b5416c72435ed58994 causes anything importing
neutron/tests/unit/services/vpn/device_drivers/_test_cisco_csr_rest.py
to exit since httmock isn't a dependency.

Fix all hacking issues in addition to the revert, as this patch fixes 'tox -epep8'.
And just a reverting the patch will cause pep8 to fail.

Fixes-Bug: #1340881

This reverts commit 7f0a8f09ab7867100081a898347a5f901e5a442b.

Change-Id: I373a8c8ab16eb387be6a451b8146642389081afa"
eb8973dc34901406f4ca8e47956cde5c43ca54c6,2014-07-11 14:28:59-07:00,"Validate expected parameters in add/remove router interfaces

The add and remove router interface methods check that interface_info
is not empty but don't check if it contains any of expected parameters:
port_id and subnet_id
This patch adds a helper method to validate that interface_info contains
at least one of the expected parameters
Include a unit test for the empty port_id and subnet_id case

Closes-Bug: #1325982

Change-Id: Ia370565235a33a847704b972c875d8f1573306c0"
59da928e945ec58836d34fd561d30a8a446e2728,2014-07-12 12:07:16-04:00,"Use integer server_default value for multicast_ip_index

Use integer server_default value for multicast_ip_index in
cisco_network_profiles table.

Change-Id: I1948aabb65485aaa1045a101957303c3e6522d21
Closes-bug: #1341144"
fd772afb697b70bf9da009976681a2a67d6fa5f1,2014-07-13 11:30:23+03:00,"Split up metering test case into plugin + test case

Currently the metering test case includes setUp code as well
as the tests themselves. Splitting up the test case class
into two allows other test cases to inherit the metering
plugin class without inherting (And implicitly re-running)
the tests themselves.

Closes-Bug: #1336198
Change-Id: I4427fcd17cc3d28189f9f74df487084cf35c1634"
69dfbd9468282f9ce16cc5b0cb1bcb121632a0d8,2014-07-13 14:09:26+03:00,"Change all occurences of no_delete to do_delete

Previously, ports, networks and subnets had a do_delete=True
parameter. By default, these resources were deleted at the
end of the context manager scope. All other resources used
a different semantic: no_delete=False.

This caused confusing situations such as:
with self.subnet(network, do_delete=False) as subnet:
    with self.security_group(no_delete=True) as sg:
        pass

Now all resources use the same do_delete semantic.

Closes-Bug: #1336196
Change-Id: I4627481813f714819efe85831e2a55975ea71ed4"
7a2053c7a27bdec02e97b46736c5fcce5f2d053a,2014-07-13 20:09:50+03:00,"Allow unsharing a network used as gateway/floatingip

If network has ports that connect it as gateway to another network, such
as an external network, or ""floating ip"" ports it should still be
possible to ""unshare"" it since these ports represent usage of the
network as an external network, not as a VM data network.

Change-Id: Ic33ae7ac193e4fc9fe06a4cfd579a4aacf0e6354
Closes-bug: #1293184"
73b4239fbef5e52494cf3ffc3293dbb79b52d91c,2014-07-13 14:09:25-07:00,"Clear entries in Cisco N1KV specific tables on rollback

During rollback operations, resources are cleaned up from neutron
database but leaves a few stale entries in the n1kv specific tables.
This change addresses the proper clean up of tables. i.e. VLAN/VXLAN
allocation tables, profile binding and vm network table.

Change-Id: I7a09d34f3a9dee0a43b76c5d781ee9eb9938953a
Closes-bug: #1336596"
5e80775a6a9a463d1854af50244b561bd64fb925,2014-07-14 08:43:58+08:00,"Missing max_routes in neutron.conf

We have the define of ""max_routes"" in neutron/db/extraroute_db.py
but we do not have them in neutron.conf.

Change-Id: I4a9586023b7d09a64296b44f4d9285f30be1fd63
Closes-Bug: #1341378"
f676d9215958b1af1105d4ff4671ce6cefd83eb7,2014-07-14 16:36:03+09:00,"ofagent: Handle device name prefixes other than ""tap""

This fixes regressions in commit 9d13ea884bff749b3975acb5eb5630e5aca4a665.

Handle device name prefixes other than ""tap"".
For example, nova hybrid interface driver uses ""qvo"" prefix.

Also, ignore non neutron ports correctly.  For example, veth pairs
used to connect physical bridges.

Closes-Bug: #1341465
Change-Id: I1d71c8a2cf8c2f71f0dbcfb54c9b347e24c03562"
72f66917fe79996b9715c47eae8e9d479b210c2d,2014-07-14 13:14:37-07:00,"Cisco: Fix test cases which make incorrect create requests

Some test cases in the test_n1kv_plugin module are sending more than
one dictionary while creating the network profile resources. This
patch corrects these erroneous test cases while preserving the test
cases intended behavior.

Change-Id: I99de0b708218cf5217ecf47c74a30f75d0733e25
Closes-bug: #1347963"
cb6528eae6263c7892e114019dae74b815c91643,2014-07-14 20:26:44-04:00,"Expand arp_responder help text

Add additional text to arp_responder help to ensure that
proper documentation is included in the configuration guide.

Make ML2 and L2population references consistent.

Closes-Bug: #1321320

Change-Id: I0fc0691fc3729aa39888c90ca871ad7f711343f8"
0540847c89a463f22438c6da6a0d03dc5a86d89f,2014-07-15 11:08:33+02:00,"Use method's logger in log decorator

Previously decorators shared logger. This patch makes LOG object in
closure for every decorated method in order to use correct logging
level.

Closes-Bug: #1340778
Change-Id: If907acbab34f8bf23e1277e66c3ddd839f668764"
95b3dd1ea114b1460c9d18b8a74bbc44ccf4b066,2014-07-15 14:27:16+04:00,"Fix incorrect default paramater in migration

Migration 5446f2a45467_set_server_default try to set incorrect default
boolean value on Integer column cisco_network_profiles.

Closes-bug: #1341518

Change-Id: I594a6811af23fced7105252f47d72232bf37184c"
5c3293f9f65912d904df56d9a3c449150af7fcdb,2014-07-15 15:22:26+04:00,"Database healing migration

Add script that will add all tables for all plugins and make db schema
unconditional.

partially implement bp: db-migration-refactor

Closes-bug: #1277379
Closes-bug: #1304741
Closes-bug: #1298456
Closes-bug: #1298461
Closes-bug: #1239974
Closes-bug: #1336177
Closes-bug: #1337185

Change-Id: Ie49088a74bc5a87466f46989ce14d935e27567d1"
8fb69a4633e87446eadd7f0173a0168f78604cbe,2014-07-15 14:44:21+02:00,"Dnsmasq config files syntax issue when dhcp_domain is empty

When using dhcp-agent with the following property dhcp_domain=""""
addn_hosts and host files genererated for Dnsmasq have wrong syntax
concerning hostname parameter (dot char at the end).

As described in RFC-952 the hostname grammar is as follows:
<hname> ::= <name>*["".""<name>]
<name>  ::= <let>[*[<let-or-digit-or-hyphen>]<let-or-digit>]
Hence it can't be conclude with a dot char.

Dnsmasq process is waiting for a hostname (2nd parameter) in the
following files:
""addn_hosts"" file contains:
   20.0.0.3 host-20-0-0-3. host-20-0-0-3
""host"" file contains:
   fa:16:3e:bf:e1:e4,host-20-0-0-3.,20.0.0.3

With the patch you will get:
""addn_hosts"":
   20.0.0.3 host-20-0-0-3 host-20-0-0-3
""host"":
   fa:16:3e:bf:e1:e4,host-20-0-0-3,20.0.0.3

Change-Id: I4c10169019becaed6b2968b74f03ef356244a057
Closes-Bug: #1326256"
fe2ca9a75878a445a54ecfe4a97c79b696abf503,2014-07-15 15:35:51+00:00,"L3 agent prefers RPC messages over full sync

When the L3 agent starts up and runs the sync task it doesn't process
any incoming RPC events until the sync task is complete.

This change combines the work from _rpc_loop and _sync_routers_task in
to a single loop called _process_routers_loop.  This loop spawns
threads that pull from a priority queue.  The queue ensures that RPC
messages are handled before _process_routers_loop.  The latter is
generally maintenance tasks triggered by the agent rather than user
triggered tasks.

Synchronization between RPC and sync routers loops is no longer
necessary since they both feed in to a single queue.  There were
places where it was necessary to reorder some things to allow for the
lack of synchronization.  For example, it is necessary to list
namespaces before fetching the full list of routers to ensure that it
doesn't delete a new namespace that gets created after listing
namespaces.  The lack of the need for synchronization between loops is
probably the main strength of this patch.

With multiple worker threads, need to handle the case where an RPC
message came in while a thread was working on a router.  Another
thread should not handle the same router that is already in progress.
Adds a mechanism to signal to the working thread that an update came
in for the router it is working on.  The original thread will repeat
processing the router when it is finished to get the update.
Multiple rapid updates to the same router will be consolidated.
Essentially, there is still synchronization of work for a given router
but not between routers.  Much better than before.

blueprint l3-agent-responsiveness
Closes-Bug: #1289066
Change-Id: I39afe86c66f864d71adf865d7bd1c9db35511505"
487b98a73f6be41697dd4f59a245f1a7f338a72f,2014-07-15 10:50:12-07:00,"update vsm credential correctly

Today if we modify the n1kv VSM credential in the cisco_plugins.ini, the
older VSM ip address remains in the db, and all requests are sent to
the older VSM. This patch deletes all n1kv VSM credentials on neutron
start up before adding the newer VSM credentials. Hence making sure
that there is only one n1kv VSM IP address and credential in the db.

Change-Id: I772a86bf896a1d3d9c69c545ce6918b0fe3a2e48
Closes-Bug: #1341014"
af00ac7906b55831c971710d55d9add6b5cc3825,2014-07-15 18:37:04+00:00,"Use auth_token from keystonemiddleware

auth_token middleware in python-keystoneclient is deprecated and has
been moved to the keystonemiddleware repo.

Closes-Bug: #1342274

Change-Id: I1aadbe24db63eb2507b088cd53886d7f2e192cab"
8a50e13a31e99148cebd5580f77cb92b8808fffc,2014-07-16 12:37:00+02:00,"Log methods using rpc communcation

In Icehouse was used rpc library from oslo-incubator. Because the code
wasn't mature enough it was running in DEBUG mode. After migrating to
oslo.messaging we don't need to have debug level in oslo.messaging but
it's good to have communication logged.

Closes-Bug: #1340696
Change-Id: I4f68545053912f96affc1bbcd64fcd7efe8d18c0"
e60670e5a202870693f7485a1da4411f4faaf36d,2014-07-16 12:38:52-07:00,"Big Switch: Remove consistency hash on full sync

Clears the consistency hash before performing a full
backend synchronization. Since all of the data is being
replaced, there is no reason to include this and it
currently requires special-casing to handle.

Closes-Bug: #1328233
Change-Id: Iace766d869dc78b041d3a5464e728b872c8347c2"
a84a8a5d83f545d0c00b7a83ad91b52dc31c1194,2014-07-16 20:45:05-07:00,"Return a tuple of None's instead of one None

The expected return value of _commit_port_binding is something that
can be unpacked into two values. This changes the condition where a
concurrent delete was detected to return a 2-tuple of None's
instead of a bare None to prevent an iterable error.

Closes-Bug: #1342880
Change-Id: I9d3a51eab33819ffda6a65a00c3b5d1006a3577e"
355ff10f6e5e4111f14c79b1bdfc48854c81f8b3,2014-07-17 11:58:48+04:00,"Fix enums usage for postgres in migrations

For downgrade with postgres it is not enough to just drop_table if
table contains enums. The enums should be removed separately after
deleting the table.

Also, if a migration uses an existing enum then postgresql needs some
specific code to re-use this enum.

Closes-Bug: #1243213

Change-Id: Ie5bb8282f7b289c917679192a0d722eb29b8d30f"
dc6b07d4a37ef0db9906187611fec8e8753803cd,2014-07-17 23:06:10+08:00,"no quota for allowed address pair

There is no quota for allowed address pair. User can create unlimited
allowed address pairs. I add quota for allowed address pairs.

Change-Id: I2efb0c0f527f1fb22c4d4b07f6d280863f565648
Closes-Bug: #1336207"
8e31122d36ce5c9d367696921ed92c50cb062b5f,2014-07-18 14:51:20+09:00,"Fix DVR regression for ofagent

Background:
    ML2 plugin sometimes uses truncated port uuids.
    For example, in the case of ofagent and linuxbridge,
    if port id is 804ceaa1-0e3e-11e4-b537-08606e7f74e7,
    an agent would send ""tap804ceaa1-0e"" to the plugin.
    ML2 plugin's _device_to_port_id() would restore it to
    ""804ceaa1-0e"".  While it's still truncated, ML2 plugin's
    get_port() handles that by using ""startswith"".

The recently merged DVR change (https://review.openstack.org/#/c/102332/)
assumes that port_id is always a complete uuid (it's the case
for openvswitch) and fails to handle the above mentioned case.
This commit fixes the regression.

Change-Id: I9c0845be606969068ab5d13c0165e76760378500
Closes-Bug: #1343750"
ff1ce62a0b9f504fd1dd46fb569ab85f5b56e4ff,2014-07-18 07:12:52-07:00,"NSX: fix validation logic on network gateway connect

This patch adds validation for the segmentation ID when the
network type for the gateway connection is vlan.
This will avoid requests with invalid vlan IDs are sent to
the backend resulting in 500 error responses being
returned to API users.

To this aim this patch slightly alters the current validation
logic due to the fact that some checks are unnecessary since
the same routine sets default values which avoid the
conditions being checked.

Change-Id: If0e71f6fdf27a49f0eda727e21405cffbc260a7a
Closes-Bug: #1340431"
b3202c3283597de031572e0ede082237487d8110,2014-07-19 10:40:49+02:00,"Add partial specs support in ML2 for vlan provider networks

ML2 provider networks partial specs let admins choose some provider
network attributes and let neutron choose remaining attributes. This
change provides the implementation for VLAN provider networks.

In practice, for VLAN provider networks provider:physical_network
and provider:segmentation_id choices can be delegated to neutron,
in such case neutron will try to find a network in tenant network
pools which respects provided provider attributes.

DocImpact

Related to blueprint provider-network-partial-specs
Partial-Bug: #1330562

Change-Id: I2c52c71167edaa153b2e04681273e2f1be8d03aa"
2f7a2ae72b4b6584976f45b0cd4c9fe567db4926,2014-07-19 17:08:53+04:00,"Move plugin.delete_port call out of transaction

This might fix a few cases of lock wait timeouts.

Change-Id: Iaa656a8582b2ff3ec55709bbe47b1ac9f5fc2a99
Closes-Bug: #1342166"
4e8f4155fc559a5d49a70aee7882d7e0e117563a,2014-07-21 16:30:23+04:00,"Fix incorrect downgrade

In downgrade of migration b7a8863760e_rm_cisco_vlan_bindin is used
Integer type with parameter display_width. Integer should be used
without any parameters.

Closes-bug: #1346245

Change-Id: Ic444af81ed3ec25116d2171ab465ce473cba8113"
8748a3ee68e60778c90b8b83181bc28a7e8fe9d1,2014-07-21 23:45:03+08:00,"The default value of quota_firewall_rule should not be -1

A bad tenant User can create unlimited firewall rules to
""attack"" the network node, so I modify the default value to 100.

Change-Id: I485c24cb1a7ed77dee81356fe6d95276808a47d4
Closes-Bug: #1346372"
6762acab9ca70bad843cdee542d816ad8e3cb908,2014-07-21 15:53:21-04:00,"Set nullable=False on tenant_id in apic_contracts table

The cisco_ml2_apic_contracts table has a tenant_id field that is not nullable
since it is the primary key. The HasTenant mixin does not allow setting
nullable=False, so use sa.Column() explicitly for this.

Change-Id: If8e96e76fad0bfcf2bfd71b0223624f1da4517c9
Closes-bug: #1342756"
c9fd72a8e1c6a0b936e0c6d00285c0b9764108d5,2014-07-21 20:00:59+00:00,"Add partial specs support in ML2 for gre/vxlan provider networks

ML2 provider networks partial specs let admins choose some provider
network attributes and let neutron choose remaining attributes. This
change provides the implementation for GRE/VXLAN provider networks.

In practice, for GRE/VXLAN provider networks provider:segmentation_id
choice can be delegated to neutron, in such case neutron will try to
find a network in tenant network pools which respects provided
provider attributes.

DocImpact

Related to blueprint provider-network-partial-specs
Partial-Bug: #1330562

Change-Id: I720d7d04f6e3453145e888d9e4d9b5e381d0f7d4"
267509143957f73e42f6550ce93fca6248c721d8,2014-07-24 09:24:25+04:00,"Move loadbalancer vip port creation outside of transaction

Currently _create_port_for_vip calls ml2 create_port() method
which includes rpc notification.
That leads to lock wait timeouts in certain cases.

The patch fixes that while making VIP creation process non-atomic.
But that is fine as long until create_vip() returns vip id, it's
not usable from API.

Change-Id: Ie30973de80118a6b022e8c3bb07ca48122ebcd29
Partial-Bug: #1334226"
7d869a02b8245dbf9d22ddf73ff810d055581730,2014-07-24 21:21:02+08:00,"Log exceptions inside spawned functions

eventlet pool will discards all exception raised inside spawn(_n), it is
hard to discover problems inside spawned green-threads, it is better to
add a function wrapper to log the exceptions raised inside spawned
function.

Change-Id: I753df36c4614759f49134667a55f2a91f0c08317
Closes-bug: #1340708"
31d67cfdee5b9f1ed77df2c9cda1c849fd7d6181,2014-07-24 11:26:57-07:00,"Changes to remove the use of mapping tables from Nuage plugin

Nuage plugin maintains a mapping of Openstack and Nuage resources.
With this change Nuage VSD can itself maintain this mapping, so the
plugin doesn't have to store the information in the neutron DB.
This eliminates potential out of sync and upgrade issues.

Closes-Bug: #1338853

Change-Id: I03b32a83d792c742962e0195383a622c1967ae4f"
6bd147df43b1d352230d94f52e0fb4c56e7885d6,2014-07-24 23:26:41-07:00,"Handle bool correctly during _extend_extra_router_dict

Ensure that extension attributes are always used to
override the chosen defaults. This was not working
in the case of default boolean True, as the testing
condition was wrong.

Closes-bug: #1348479

Change-Id: I22bce82c6078a96c0eb4a67e6decb6e9205721a8"
d98ca642402bafbaa15ac3df588ed34d58d8456b,2014-07-27 13:31:12-07:00,"Call config_parse in base test setup

Some of the tests (e.g. NeutronDbPluginV2AsMixinTestCase) do not call
config_parse so if the database engine is not already been setup by another
test before the config object is reset on teardown, the database connection
will fail since the database config is then empty.

This patch adds a new setup_config method called during the base test case
setUp method which calls config_parse by default to load the default config.
Tests that couldn't use the default config were then modified to override the
setup_config method.

Some other unit tests were slightly adjusted to pass using the default config.

Closes-Bug: #1346673
Change-Id: I3724200fa932115c0a8c264640b1a9dbe431a1cc"
c83207ec9726bee2ba295f2a25228b2ac5a89b6d,2014-07-27 21:03:10-04:00,"Functional tests work fine with random PYTHONHASHSEED

Partial-bug: #1348818

Change-Id: Iccac403585635851c6d121d6e27c1c90b0de5acb"
3eee50510fed29a7a8d97d4193a1c3c0a209a712,2014-07-28 20:31:58-07:00,"Make dvr_vmarp_table_update call conditional to dvr extension

Without making this call conditional, every l3plugin that
integrates with the ML2 plugin will need to implement this
method and this must not be necessary.

Closes-bug: #1349638

Change-Id: Ie9ba3bad4152810f5bfa530be54be70139cebc0c"
fbc6b991a79a147bf1411b643f5c304062e5956a,2014-07-29 01:52:18-07:00,"Race condition of L3-agent to add/remove routers

This race condition happens when repeatedly calling
l3-agent-router-add and l3-agent-router-remove
by different neutron-servers at the same time.

The primary key constraint is added for the pair of
(router_id and l3_agent_id).

During migration, verification is done if the current
records violate the PK constraint defined in this bug
fix, and sanitize the data before schema modification.

Due to different dialects of database engines, different
sql statements are executed correspondingly to do
the verification.

Change-Id: Ia541e023b757b2e77c4eec9bb1670632c7a271fa
Closes-Bug: #1230323"
cd3f4f7d24c92475ca698906c57f60375861b83f,2014-07-29 13:42:11+02:00,"Fix deprecated opt in haproxy driver

If Neutron was updated from Havana, lbaas config file defines user_group
and loadbalancer_state_path in default section but since Icehouse these
settings were moved to haproxy section.
This patch adds DEFAULT group to DeprecatedOpt.

Change-Id: Ic92d4bc81ff6a3b16799414d17ac52e7a4801796
Closes-bug: #1349767"
bd40fbe304a18f8a231b519a0e1708b5ba63ad6f,2014-07-29 16:03:56+04:00,"Fix wrong order of tables in downgrade

Heal migration fix bug https://bugs.launchpad.net/neutron/+bug/1336177.
Now table ml2_brocadenetworks has foreign key and downgrade
of 492a106273f8_brocade_ml2_mech_dri fails. To fix this change order
of tables in downgrade is needed.

Closes-bug: #1349810

Change-Id: Ida2ba66d35a952381f213080d417e475e18c196d"
8417c62d2a9531cf3a0930240e42eefa919e44b3,2014-07-29 21:57:21+08:00,"neutron.conf does not have the definition of firewall quotas

We have the definition of quotas for firewall/policy/role
in code, but we do not have them in neutron.conf.

Change-Id: I23ae4f5c00ccc62dd9f97c77011da4ce0bbf983e
Closes-Bug: #1349318"
43c1f98f074549611db90b6c333d2c54d7e4d4b3,2014-07-29 18:44:07+03:00,"Move ARP responder test to sanity command

Additionally, the patch improves the check itself:
To check if the currently installed OVS supports the ARP responder
feature, we try to add a flow that references an OpenFlow ARP
extension via ofctl. The test may fail due to an (expected)
Runtime error, or due to some other unexpected error.
In such a case the error was previously masked and tossed away.

* Clean up ARP responder unit test
* Extract ARP responder flow actions to be used by the unit
  tests, functional test as well as the ARP responder code itself

After this patch, if the sanity check returned False but the
user never ran it or ignored its results, the OVS agent will
output errors to the log every time an ARP entry is (attempted)
to be added or removed from the flow table.

Closes-Bug: #1323718
Change-Id: I428c954d6561cd398a1e580804a9482969a154af"
a1d1347d582c2012434aedb2c81dbdae78cd1502,2014-07-29 20:34:01+00:00,"Check that router info is set before calling _update_arp_entry

Change-Id: Ieec6fb01a7d48bed1042114c27527fe6ec2555e0
Closes-bug: #1350028"
56c84cd95ff23043101dde3c26c10f9fff5729b5,2014-07-30 07:42:20+09:00,"Do not schedule network when creating reserved DHCP port

If device_id is DEVICE_ID_RESERVED_DHCP_PORT, do not schedule
network nor notify to dhcp-agent.

Closes-Bug: #1327000
Change-Id: Idf88767596bf0fc31bf856a423d35cb1575b57f3"
7a7291794eb718fc0a6105efacf88b2ee5594043,2014-07-30 03:58:26+00:00,"Pass filters in arrays in get_agent_gw_ports_exist_for_network

Change-Id: I8925d7072b7cae7645e772b8a769a7e6f03ec64f
Closes-Bug: #1350119"
748d4fdaf62667f39ce65e5053792b54dd684698,2014-07-30 19:32:31+09:00,"test_l3_plugin: L3AgentDbInteTestCase L3AgentDbSepTestCase fails

L3AgentDbInteTestCase and L3AgentDbSepTestCase fails when they are run
independently without other test case. something like
tox -e py27 neutron.tests.unit.test_l3_plugin
It's because necessary oslo.config options aren't properly initialized
when instantiating service plugin.
Initialize config before instantiating plugin.

Change-Id: Ic6dd28e3caf8b9e3322bf2df99e67adb138cb234
Closes-Bug: #1350252"
0e44b7b5418c400af7358a5391f350f2f737929e,2014-07-30 14:53:00+03:00,"Make sure that gateway is in CIDR range by default

Git commit c3706fa2 introduced the force_gateway_on_subnet
option that verified that the defined gateway is in the CIDR
range of a newly created or updated subnet. However, the default
value was False for backwards compatability reasons. The default
will change to True and the option will be marked as deprecated.

For IPv6, the gateway must be in the CIDR only if the gateway
is not a link local address.

DocImpact
Change-Id: I04fd1caec6da5dceee3f736b3f91f2468150ba2a
Closes-Bug: #1304181"
25c5291addcd3ed0ef9df567a828866f1681e014,2014-07-30 12:32:16+00:00,"Use correct section for log message if interface_driver import fails

If import of interface_driver in namespace_driver fails then message for
logger raises exception because of taking interface_driver from haproxy
section while actual interface_driver is in default section.

Closes-Bug: #1350320
Change-Id: Ic1e73c0cdccb2fff02f2adfbad677503c29ba88a"
e416a5420f45391c180f84098f4d2c02ecf857b9,2014-07-30 14:39:58+02:00,"Replace nullable from primary keys in tz_network_bindings with default

Columns vlan_id and phy_uuid were both nullable and primary keys.
Primary keys cannot be nulls. This situation caused problems in
autogenerating scripts creating always migration that set these columns
to nullable.

Instead of having primary keys nullable this patch creates a default
values.

Change-Id: I04642f6d6ad232997a593bff8ca44f9a7a803ffd
Closes-bug: #1346900"
30f1a75e790a512ea8b2b4997a634a50070fef9f,2014-07-30 17:11:10+04:00,"Add missing ml2 plugin to migration 1fcfc149aca4

Migration 1fcfc149aca4_agents_unique_by_type_and_host
shouldbe applied to ml2 plugin as well.

Change-Id: I3f5a2fcfec49316fbe06d6221d003aeb2599bca7
Closes-Bug: #1350326"
466e89970f11918a809aafe8a048d138d4664299,2014-07-31 17:35:42+04:00,"Use storage engine when creating tables in migrations

Although __table_args__ is set correctly in the base model, existing
migration scripts were not generated with the mysql_engine option in
the alembic output, likely due to:

https://bitbucket.org/zzzeek/alembic/issue/110/

This adds the mysql_engine option to each table creation operation.

Change-Id: I990e8d64bcadf2be4e1e319319bc23225123b304
Closes-Bug: #1288358"
86a0adefe326116ae42c0e01a8fa2c2849bfa2c2,2014-07-31 10:18:57-07:00,"Fix-DVR Gateway clear doesn't delete csnat port

When a gateway is set to a distributed router,
the router checks for the interfaces associated
with the router and based on the number of
interfaces the router creates ""csnat"" interface
ports that would be used by the SNAT service in
the Service Node.

When a gateway is cleared, the plugin should
delete the ""csnat"" interface ports. In the
current code, it is deleting the port and
re-creating the port with a different id.

A check need to be made before it creates a new
port to make sure that the router has a valid
gateway port.

This is a bug and this patch fixes this issue.

Change-Id: I84f1795360b3693a025b5fa3454bf9efc7e503ae
Closes-Bug: #1350089"
0b30651678e1e2e574553272c0f9ab69418efe96,2014-07-31 19:54:00-07:00,"Make ML2 ensure_dvr_port_binding more robust

There is a remote chance that this operation may
be prone to DB integrity errors, in case the binding
is attempted on the same port twice.

Ideally getter methods should not create, but this
is a common Neutron (anti)-pattern that would be
difficult to eradicate (at least in a single patch);
so for now let's make this code more defensive.

Related-bug: #1269131
Related-bug: #1335226

Change-Id: Ie6c57fd46f0752839814dbac5b14fae2364f973d"
0b4e42fe11bf918e18ea8f240d9055b3967b60bb,2014-08-01 06:51:45-07:00,"Fix DB Duplicate error when scheduling distributed routers

The error was caused by binding the router to an agent
candidate that was already selected during the scheduling
process.

A DB lookup was also saved by passing the router object
around; this led to a minor style cleanup.

Closes-bug: #1351123

Change-Id: Ib71a0140c8a7fbd5b230609d33487f8adba252e7"
d6f014d0922e03864fd72efbcde04322711c2510,2014-08-01 23:21:55+05:18,"Exit Firewall Agent if config is invalid

When fwaas config file is not provided to the agent,
but the service is enabled in neutron.conf file the
agent should exit with an error message and should
not proceed further. This patch adds the necessary fix.

Change-Id: Iaced777e3a34e9405050252b17a203689e1c1fc0
Closes-Bug: #1310857"
a71fb34f7e09885845f7dafc779df23473204edc,2014-08-01 17:07:07-04:00,"Remove reference to cisco_cfg_agent.ini from setup.cfg

No sample .ini file is included, causing install to fail.
Remove the reference for now.

Change-Id: I6dc88062cfd47ecee7ca9fc4e6ba64ce65d8ef07
Closes-bug: #1351466"
1a0be0e05f8d299820b60cd888d74ed5ed73e265,2014-08-02 04:04:33-07:00,"Move from Python logging to Openstack logging

Replacing usage of python standard logging module
with Openstack common logging module. Apart from
the said replacements, this patch also removes
basicConfig() setup from a couple of modules since
its not needed. Also removes unused LOG & imports.

Change-Id: I6a391951e00fb63905b2027270af9f401841d5b9
Closes-Bug: #1350937"
ba87499dda0c897aa08afadfc2911ff80bdae2f9,2014-08-02 16:06:58-07:00,"Move Cisco VPN RESTapi URI strings to constants

Cisco VPN RESTapi URI strings are currently spread out
throughout the cisco vpn device driver code. This create
challenge towards consistently using REST resource identifiers
as this code gets enhanced in the future. This change moves
those URIs as string contents towards the top of the device
driver file.

This addresses the review comment received during the
cisco-vpnaas BP implementation.

Change-Id: I17e02cca95b1d14d9218f1a2745780bd14c9f89d
Closes-Bug: #1313801"
5c93dfaf25c81576ddc664d2d30ef8297eb367e1,2014-08-03 13:42:41-04:00,"Do not assume order of quotas dictionary elements

This fixes the quotas db unit test that breaks with a randomized PYTHONHASHSEED
(see the bug report).

The test assumed that the quotas dictionary from plugin.get_all_quotas() had
elements in a particular order. Found with PYTHONHASHSEED=1235130571.

The fix refactors the test case to handle an unsorted quotas dictionary. Also
choose some different quota limits to make it clearer what is being verified.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: I3892b51082629e6ebce175f64f501717741baa37"
5db7c77def326264579f8db3238372b0351407f2,2014-08-04 08:55:14-04:00,"Add a tox test environment for random hashseed testing

The newer versions of tox by default enable a random PYTHONHASHSEED. However,
this breaks many Neutron unit tests, so PYTHONHASHSEED=0 is currently hard-
coded for Neutron's unit test environments.

We want to clean up the unit test cases that break with a random hashseed
(there are many). To be able to find the broken tests and then verify them,
we need to have an easy way of enabling random hashseed testing.

Partial-bug: #1348818

Change-Id: I51f05cdfa9f8728baabaf315b71e5defb26426b1"
b8cf45218714937681d7df2e5b9d7d440cb2edd9,2014-08-04 20:16:54+00:00,"Big Switch: Only update hash header on success

This patch moves the hash update call into the success block
of the server manager so the database isn't updated with
a hash header from an error response. Additionally, it prevents
the hash from being updated to an empty value if the hash header
is not present in the response.

Closes-Bug: #1348766
Change-Id: I512d01f9bb91b208dd58883d2464951ecc6748e1"
31783e2eae339e79225f379ace948a0bb6c157f7,2014-08-04 21:13:50+00:00,"Do not assume order of network_uuid's

This fixes the neutron.tests.unit.test_linux_dhcp.TestDnsmasq
.test_existing_dhcp_networks unit test that breaks with a
randomized PYTHONHASHSEED (see the bug report).

The test assumed that the network_uuid's list was sorted, so sort
the result before comparing.

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Partial-bug: #1348818
Change-Id: Ia6f742e1fae0687164b841beebb4efcf31ff2625"
990d596ec09242733f8bc3669b70136ca6741d6e,2014-08-05 01:14:47+02:00,"OVS flows apply concurrently using a deferred OVSBridge

This change is an improvement of the commit
501213686886baccd3280e10b8856a25d3517519 and provides a cleaner
implementation. Previously flows were applied on
OVSBridge.defer_apply_off which could be called by an other
greenthread: it was impossible to ensure that all flows are applied
in a unique OVSBridge.defer_apply_off call. This change ensures that
all flows defined using a DeferredOVSBridge are applied on
DeferredOVSBridge.apply_flows or DeferredOVSBridge.__exit__ if not
exception is raised.

Author:         Cedric Brandily <zzelle@gmail.com>
Co-Authored-By: Edouard Thuleau <edouard.thuleau@cloudwatt.com>

Related-bug: #1263866
Change-Id: I1f260629ef95b98ee80e2ff946c3606da8fe7608"
a5765179201ee03ed26bb8f3bcda9f75bbdb191c,2014-08-05 13:57:00+03:00,"Radware: When a pip is needed, reuse the Port

When a pip (Proxy IP) is needed by the driver, do not create
a new Neutron Port every time a pip is needed. Reuse the
existing Port.

Change-Id: I769a9d85e217b30a1ea4d09449ff39bf1ab23c5a
Closes-bug: #1349895"
ce567d7410aa92b09072a8030c89ab9d52707e86,2014-08-05 13:47:03+00:00,"Make _build_uri_path output predictable

This is done by ensuring that filters are
serialized in their alphabetical order.

Tweak tests affected by this.

This is done in the context as defined by
etherpad: neutron-random-hashseed

Partial-bug: #1348818

Change-Id: Ibe79716a340195ca0365f276ef6e3e728f1a94a1"
d2291d6500d0db25ea62be70219fa62c4b024d17,2014-08-05 15:36:03+00:00,"Simple refactor to stop passing around an unused parameter

There is no functional change in this patch.  However, this refactor
allows another patch [1] to make a simpler change to the code base.

This patch includes localizing the initialization of ""internal_cidrs""
to a later spot in the ""process_router"" method.  This has the
advantage that it will be initialized under the same condition that it
will be used.

[1] https://review.openstack.org/#/c/109776

Change-Id: I3ca993d0a33b7c925526099e97999c9d9f76efc2"
c5e186f466a4347b72868db8adbde9450215f107,2014-08-05 08:56:37-07:00,"Fix 500 error  during router-update for dvr routers

This was caused because the l3 service plugin was
erroneously calling a method on self, whereas the
method is implemented by the core plugin.

Closes-bug: #1352786

Change-Id: I0746eee314730370b2df4bef6d9fd41680e2e3d1"
5ae2d9145be180ad2e8df7e887091a7fbad8fb08,2014-08-05 22:29:41-07:00,"Ensure assertion matches dict iter order in test

Fixes a test_linux_ip_lib test that made an assertion
on a command that was called that could fail depending
on the order of the dictionary when it was iterated over.

This patch makes the assertion match the order that the
command is constructed by iterating through the dictionary
as well.

Partial-Bug: #1348818
Change-Id: I7baa518169c193f7e98d38632e1db16eb57ffee7"
cfea218390605e2fe34b225ffa75b8b5c141f0b9,2014-08-06 07:40:39-07:00,"Return 403 instead of 404 on attr policy failures

Return an HTTP Forbidden code (403) instead of an
HTTP Not Found code (404) if a tenant is trying to
update it's own object. This is a safe adjustment
since the tenant already knows this object exists
so pretending it doesn't isn't improving secuirty
as much as it is causing confusion.

Closes-Bug: #1352907
Change-Id: I021ba6f890dfbabddd53e75c63083f5da0ecfdec"
de5fa0dd327b1a81cb980d7553001dca244ae7a2,2014-08-06 17:03:58+00:00,"ofagent: Add a missing normalized_port_name

Otherwise port_unbound can not find Port for non ""tap"" prefixed ports.

Closes-Bug: #1349898
Change-Id: I9ac7cc1e35205bddc64e7865c45e801df8cd6b33"
03c4dc3573f640d06b80d686a389f1f3438a6d25,2014-08-07 02:27:58+08:00,"Remove duplicated check for router connect to external net

In the function get_assoc_data, we check the router which get
from _get_router_for_floatingip whether connect to external net,
but as it has already checked in _get_router_for_floatingip.

Change-Id: I0c00c480273145538d19569dc0a679e9935ad8f9
Closes-bug: #1353414"
dc658273e7cfe72e50dad40203db8bb0d9bb2188,2014-08-06 23:04:00+00:00,"Fix to enable L2pop to serve DVR

This change fixes the information used by the L2pop
driver to populate l2pop rules that enables DVR to
route packets across compute servers that have
tenant VMs that belong to different networks.
It also fixes the case where VMs were not able to
obtain IP Addresses when such VMs are on DVR
hosted subnets.

Change-Id: Ib630e57c186da60eb15f9ffa6b1b0bfa74f48caa
Closes-Bug: #1350485
Closes-Bug: #1352857"
be81901b615b45d6aed4287df8c285a1f0aa72b0,2014-08-07 08:53:43-07:00,"DeferredBridge to allow add_tunnel_port passthru

The DeferredBridge should allow add_tunnel_port
method as passthrough in addition to add_port
and delete_port. L2Pop uses add_tunnel_port to
dynamically establish tunnel endpoints on cloud
nodes.

Closes-Bug: #1353885

Change-Id: I2e6d82ee79814e500604f4951e7d89eab662047a"
b0f68bb14531b74f54cad6106491ff75b0e8a1d8,2014-08-07 16:41:57+00:00,"Do not assume order of pci slot list

This fixes the neutron.tests.unit.sriovnicagent.test_eswitch_manager
.TestEmbSwitch.test_get_pci_list unit test that breaks with a
randomized PYTHONHASHSEED (see the bug report).

The test assumed that the pci slot list was sorted, so sort
the result before comparing.

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: Ia2d879cc1251fb9cf9b653a41064e902b30005af
Partial-bug: #1348818"
6b8a5f0e1d26d2721e7ad7fc67099ff8b880d9ec,2014-08-08 10:18:23+05:18,"Fix to throw correct error code for bad attribute

Currently the neutron network API throws up error code 500 for
the extended attribute for segmentation id. This can be reproduced
if the user types in a random string in place of an integer value
for the segmentation id. The proper behavior should throw an error
code 400 with the appropriate failure message. This patch fixes the
same issue and covers it with a test case.

Change-Id: I4735e20f5b8b23c5b2a9d896415c2e84561a279c
Closes-bug: #1348056"
9ce1935d06b2822a34ffb1234bc994acf306ad32,2014-08-08 18:07:51+04:00,"Do not assume order of parameters in OVSBridge.add_flow call

This fixes neutron.tests.unit.agent.linux.test_ovs_lib.OVS_Lib_Test.test_add_flow
unit test that breaks with a randomized PYTHONHASHSEED.

The test assumed that the parameters passed to add_flow had
elements in a particular order. Found with PYTHONHASHSEED=2455351445.
The fix refactors the test case to match parameters as set.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: Ibe2f4d929b8b42c8c909c2306d2554faf7109b49"
c5fafcb30a5b86e87309ad4650f7d05a2ca038dc,2014-08-08 18:37:23+00:00,"Remove unneeded device_owner field from l2pop tuple

The DVR development added this device_owner to the middle of this
tuple during early development because it was thought to be needed.
Over the course of development, it was found to be unnecessary and
much of the code that read it from this value was removed or
obsoleted.  That job went unfinished and so this commit completes it.
This essentially restores the code to what it was before and fixes the
regression that was caused.

Change-Id: Ia901f925883b53e9880dd25688e16e0ffe402bf4
Partial-bug: #1352801"
b4eaa0520990f30519aaa073f352541f17b0577b,2014-08-08 16:01:49-07:00,"Fix session's InvalidRequestError because of nested rollback

This patch addresses the issue by removing the extra nesting
(which is effectively redundant).

The longer story about this patch is the following:

Race conditions may cause DBDuplicateEntry exceptions that
require a transaction to be rollbacked back, and yet make
the whole operation succeed. A classic example is what has
been solved in commit fbc6b99. If the rollback is done in a
nested transaction, the above mentioned exception is raised.

To address the problem, we could use savepoints by means of
sqlalchemy's begin_nested(); Even though this approach is
preferable, it causes quite a bit of changes in the unit
tests (because of sqlite); it may also require that certain
DBMS, or certain DB backend configurations, support savepoints.

In the end, the simpler approach was chosen.

Closes-bug: #1354072

Change-Id: Ic9393319e55f71d681124bd3052e939724ebab6b"
03920290d00148437fe14696621bc7446bfc7e46,2014-08-11 11:47:04+04:00,"Return port context from _bind_port_if_needed

Previously port was returned causing exception being thrown
in rpc handling code.

Change-Id: Iba498d0600d625f0469392b99ac0bc8c1f1ecff7
Closes-Bug: #1354912"
4aaa3defa056c0479c04ee5cc804301eaf3320e4,2014-08-11 16:51:11+09:00,"ofagent: Upgrade note about firewall_driver

The corresponding devstack change: https://review.openstack.org/#/c/108915/

Related: blueprint ofagent-port-monitor
Change-Id: Ic917692d50461b1d5c4a07c988839e9f886b91d5"
01b2eedd05fb91aa8970c64b753d831257243598,2014-08-11 09:19:26-07:00,"Fixing neutron-db-manage with some options other than upgrade/downgrade

""mysql-engine"" argument was added to upgrade and downgrade option of
neutron-db-manage.
Reference commit: http://tinyurl.com/mzepbmq

migration environment's run_migration_offline/online() gets called
even for other neutron-db-manage options as well such as current,
history, stamp, branches etc. For those options since the argument
can not be set, it throws oslo.config.cfg.NoSuchOptError.
This fix tries to catch it and set the value accordingly.

Closes-bug: #1353180

Change-Id: I044daf04216ec61245ddb51689f8e50be5666e34"
f103ce48ca60e12952be7aa6d5183f64ef826370,2014-08-11 17:33:24+01:00,"Predictable field and filter ordering

This fixes the fields and filters units tests that break with a
randomized PYTHONHASHSEED (see the bug report).

The RESOURCE_ATTRIBUTE_MAP is stored as a dict leading to an
unpredictable output order. Values in kvp strings are being stored as
sets underpinned by dicts when converted, leading to unpredictable
ordering of values when read.

Discovered with PYTHONHASHSEED = 2455351445 on these tests:
test_api_v2.APIv2TestCase.test_fields
test_api_v2.APIv2TestCase.test_fields_multiple
test_api_v2.FiltersTestCase.test_attr_info_with_convert_list_to
test_api_v2.APIv2TestCase.test_filters_with_fields
test_api_v2.APIv2TestCase.test_fields_multiple_with_empty

There are 3 parts to this fix:
1. Update the APIv2TestCase _do_field_list function to construct
field list in the same order as the controller constructs its list.
2. Ensure the APIv2TestCase _get_collection_kwargs maintains order
throughout.
3. Use new assertOrderedEqual function to sort values before assertion
in test_attr_info_with_convert_list_to

Change-Id: I547cfa80cf83b0340b459279df9283443562326b
Partial-bug: #1348818"
c1ed203ccb816ac0a3a0e015d2790ed3aee04564,2014-08-11 18:51:32+02:00,"Add delete operations for the ODL MechanismDriver

This commit adds delete operations (networks, subnets and ports) for the ODL MechanismDriver.
It also modifies sync_single_resource to reduce db operations.

Change-Id: I03ca04c83ac2ef9c879fbd87e74bae495daea16d
Closes-Bug: #1324450
Partial-Bug: #1325184"
0ac15ad5d7902ef30d495acf737c90ba9377566a,2014-08-11 16:29:42-07:00,"NSX: fix wording for configuration option

This patch clarifies that in order to use NSX distributed
routers, the replication_mode parameter should be set to
'service'. This is already its default value, so no further
change is needed beyond clarifying wording.

Change-Id: I446c428ecf8c0bf7f6947e69562d60a7fb4383ed
Closes-Bug: #1355502"
f9c285fd617403ab89c857e3d8bab0d06d19d3ba,2014-08-12 11:17:21+09:00,"add auth token to context

As discussed at
http://lists.openstack.org/pipermail/openstack-dev/2014-July/040644.html
SerivceVM project (and other routervm plugins) need auth token in context.
The first user will be l3 routervm plugin.

Closes-Bug: #1343854
Closes-Bug: #1352698
Change-Id: Id5a4c98059894eef33faf19d5ab063780b362f4a"
46501246c202f1f424f0d2a05769926303a39c89,2014-08-12 10:23:08+08:00,"Use call to report state when ovs_agent starts up

Make sure to report ovs_agent state when starting up, otherwise
ovs_agent start_time would not be updated and thus l2pop does
not send fdb entries.

Change-Id: Idd770a85a9eabff112d9613e75d8bb524020234a
Closes-Bug: #1347452"
fe49457605f96184d1fb334208d1ba57f513152a,2014-08-11 22:26:40-07:00,"Make plugin and l3plugin available as mixin's properties

This makes the code simpler and slightly more efficient.
This is a minor refactoring related to a race condition
observed when the agent is processing a router while its
interfaces are being removed.

Related-bug: #1355409

Change-Id: Ic0ce25aa6a977e28b1ab76081c74da4c46c2ca6b"
c353a26fb36b97bdc369bd41e0f23a8bbf2a2ea8,2014-08-12 10:57:25+01:00,"Do not assume order of new_peers list elements

This fixes the vpn unit test that breaks with a randomized PYTHONHASHSEED
(see the bug report).

The test assumed that the new_peers list from self.new_update_request had
elements in a particular order. Found with PYTHONHASHSEED=2455351445.

The fix refactors the test case to handle an unsorted new_peers list by
sorting it before running the test.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: I86e7f84cedbdc8e1d7404363a560fd759d264c49"
8fd377514026347e712bfa74faa351b580408e4e,2014-08-13 00:17:25+08:00,"SecurityGroupRuleExists should point out rule id inseand of group id

When we get a SecurityGroupRuleExists, we want to get the rule id
instaed of group id, and this is what the fucntion
_check_for_duplicate_rules() does.

Change-Id: I9b526d9829582cb26bfda98bcaf1704fe8681cbe
Closes-bug:  #1354343"
338171c114743c0e03def04ef551231f0d9c93f8,2014-08-12 12:26:31-07:00,"Fix 404 error fetching metadata when using DVR

The metadata agent was unable to find networks
attached to the DVR router because it was only
filtering ports for 'centralized' routers.

To fix the issue, this patch expands the search
filters to include DVR router interfaces during
the network lookup operation.

The extra filter cause no evident performance
loss while serving the request; a different
approach would require to pass the router type
around to narrow down the search filter, but it
sounds like an overkill.

Closes-bug: #1353271

Change-Id: Iefbefa1ff300adad48ab9fc472d5eb1913fbe488"
c3c9f580393aea658571b00b3afd0b729dffe89b,2014-08-12 20:30:10+00:00,"Preserve link local IP allocations for DVR fip ns across restart

The L3 agent allocates link local address pairs used in connecting the
routers to the floating ip namespace.  When those allocations are
forgetten by restarting the L3 agent they all get rewired on restart.
This change preserves the allocations using a file in the local file
system.  Storing them in the database would be overkill and would
affect system performance.

Change-Id: I39614c7ea2a7dcc35bf969c90045adc5926ea9df
Closes-Bug: #1348306
Partially-Implements: blueprint neutron-ovs-dvr
Co-Authored-By: Rajeev Grover <rajeev.grover@hp.com>"
e8e2392321e0fd3e2b8a0345b725f2e8df854a34,2014-08-13 10:54:07+02:00,"Raise NotImplementedError instead of NotImplemented

NotImplementedError is the name of the exception
(https://docs.python.org/2/library/exceptions.html).

NotImplemented is the name of a constant
(https://docs.python.org/2/library/constants.html).

It makes no sense to raise a constant. The exception should
be raised instead.

Change-Id: I4969e26eb7b46f008ea3c8bd0093490c425f7069
Closes-Bug: #1339855"
2affc39d3ad2d30c54e3373249446f61ee59f881,2014-08-13 07:04:32-07:00,"Fix PortNotFound exception during sync_routers

This trace is observed when an L3 agent invokes
sync_routers right about the same time a port
interface is removed from a router.

Related-bug: #1355409

Change-Id: I825b25080cbf054462318fc01248692b9e0e4ecb"
aee5344db7972e2e12ed056c2e6467f7952aec3f,2014-08-13 07:13:10-07:00,"Fix KeyError during sync_routers

Method sync_routers is used by the L3 agent to query
routers it knows about. Routers and GW ports lists
are populated in two different times, which means that
they can be interleaved by a delete request which
results in gateway ports being missing in one of the
two data structures.

This patch takes care of the race condition.

Closes-bug: #1355409

Change-Id: Id3a6fe145058f690e107bfe7023980ede61cff90"
bc4965080ce83db50b71255d6a0f972b9be67b1b,2014-08-13 16:50:13+02:00,"Remove SELECT FOR UPDATE use in ML2 tunnel driver add_endpoint

SELECT FOR UPDATE expression, which is triggered with the use of the
SQLAlchemy Query object's with_lockmode('update') method, is
detrimental to performance and scalability of the database
performance code in Neutron due to the lock contention it produces.

SELECT FOR UPDATE can be entirely avoided in add_endpoint methods
with the use of single-shot SELECT and INSERT expressions and the
correction of VxlanEndpoint primary key: indeed previously it was not
possible to create multiple endpoints with the same ip, now the model
primary key constraint ensures it.

Change-Id: Id69fbc15c8f51b4b275cd742312e6ff6802d8c0f
Partial-Bug: #1330562"
9677cf87cb831cfd344bc63cbee23be52392c300,2014-08-13 10:26:22-07:00,"Option to remove routers from dead l3 agents

Add a configuration-enabled periodic check to examine the
status of all L3 agents with routers scheduled to them and
admin_state_up set to True. If the agent is dead, the router
will be rescheduled to an alive agent.

Neutron considers and agent 'dead' when the server doesn't
receive any heartbeat messages from the agent over the
RPC channel within a given number of seconds (agent_down_time).
There are various false positive scenarios where the agent may
fail to report even though the node is still forwarding traffic.

This is configuration driven because a dead L3 agent with active
namespaces forwarding traffic and responding to ARP requests may
cause issues. If the network backend does not block the dead
agent's node from using the router's IP addresses, there will be
a conflict between the old and new namespace.

This conflict should not break east-west traffic because both
namespaces will be attached to the appropriate networks and
either can forward the traffic without state. However, traffic
being overloaded onto the router's external network interface
IP in north-south traffic will be impacted because the matching
translation for port address translation will only be present
on one router. Additionally, floating IPs associated to ports
after the rescheduling will not work traversing the old
namespace because the mapping will not be present.

DocImpact

Partial-Bug: #1174591
Change-Id: Id7d487f54ca54fdd46b7616c0969319afc0bb589"
b025ccff2c7320caecfc005cfcbc3f4dfadfa505,2014-08-13 11:53:59-07:00,"Fix PortNotFound error during update_device_up for DVR

An agent's request to update the ARP entry for a VM port
may come after a deletion request has been processed,
resulting in a PortNotFound exception being raised.

This patch takes care of this condition. A test has
been added, which required a minor refactoring of the
test case class, in order to accommodate the use of
side effects for the objects being mocked.

Closes-bug: #1356120

Change-Id: I40d635bcf47c683663cb4dedf20323902dff2c7f"
0125cf7815acb677b619905e2d9d258a9bae1c48,2014-08-14 08:35:31+09:00,"l2pop: get_agent_ports: Don't yield (None, {})

There's no point to yield None lvm with empty entries.

Closes-Bug: #1355759
Related: blueprint ofagent-l2pop
Change-Id: I42aeb48a062d35038116978d70c8dac4139a5583"
11ca12dd8752a7d8fc13027c21ee572233becb74,2014-08-13 20:11:04-04:00,"Fix interface add for dvr with gateway

when an interface is added after router gateway set, external
connectivity using snat fails. Instead of just adding the snat port for
the new subnet, method internal_network_added(..) incorrectly re-adds
all the snat ports with wrong cidr.

Change-Id: I7bfe266288670fba0c90990bf350f43ef7829bad
Closes-bug: #1355087"
6d7b2e007cf477a7f212312bad4ce0cbe8032d1a,2014-08-14 11:39:24+10:00,"Ignore http_proxy while connecting to test WSGI server

urllib2.urlopen uses $http_proxy/$HTTP_PROXY environment variables by
default.  If set (and pointing to a remote host), then the WSGI tests
that spin up a local server and connect to it using
http://127.0.0.1:$port/ instead connect to $port *on the proxy*,
and (hopefully) fail.

This change uses urllib2 in a way that ignores proxy settings.

Change-Id: I4d94fcc06925d0c947345a07ae20352e1898e46d
Closes-Bug: #1356665"
c3760e5600a231a6cc95e31d9dccdcd581f8ee5f,2014-08-14 11:21:53+08:00,"Remove INACTIVE status from FWaaS

DOWN status is introduced to replace INACTIVE status. There is one
place in FWaaS code which still checks INACTIVE status.

This commit removes INACTIVE status from FWaaS.

Change-Id: I896c81a6229978a46f8a88a31936920a1036f142
Partial-Bug: #1286048"
0a75865b1f9bb728d6c1efc8b49586537526ed88,2014-08-14 12:45:58+02:00,"Use jsonutils instead of stdlib json

jsonutils provides multiple benefits in comparison to pure stdlib json
(like using simplejson on Python 2.6).

Similar patch was already merged before [1], but since it lacked hacking
rule to enforce jsonutils usage, new occurrences of stdlib json module
usage were introduced.

This patch switches all the code to using jsonutils and adds a hacking
rule to enforce the rule.

The hacking rule requires that jsonutils module does not mimic as 'json'
thru using import renames, so the code was updated not to rename the
module when doing import.

The hacking rule was shamelessly copied from the corresponding nova
review [2].

[1]: https://review.openstack.org/#/c/99760/
[2]: https://review.openstack.org/111296/

Change-Id: Ie7a5bb76445e15cde9fbf9ff3d2101a014637b37"
9fc8b6c4b4d43df50b9bc15f4fdf274ad6dd711c,2014-08-14 13:56:14-07:00,"NSX: lift restriction on DVR update

The restriction in place in the code is not justified considered
the capabilities of the DVR extension and the NSX backend.

Transformations of centralized routers into distributed should be
allowed.

Change-Id: I099b90d39247bc9a7adfb87344d77ccd8acfad9e
Closes-Bug: #1357048"
ca00b1739431fb9fe8f81919dc4644f4f467fa9d,2014-08-15 15:36:10+09:00,"Skip FWaaS config mismatch check if RPC method is unsupported

In this commit FWaaS config check skip is skipped
if neutron server does not support this API.

Commit d6f014d introduced FWaaS config mismatch check between
server and agent. It added a new RPC method get_service_plugin_list
and bumped l3-agent RPC version to 1.3, but this version RPC is
only supported by L3 router service plugin and
it breaks existing plugins using L3 router mixin.

Bumping l3-agent RPC version requires detailed investigation on all
affected plugins and it can be done by plugin maintainer later.

Change-Id: I388a24b0c6a507203674ef108bb14cea0534f98c
Closes-Bug: #1353309"
58744ee4db6c727e41e79f498e75bdad8913f036,2014-08-15 07:56:03-07:00,"NSX: Avoid floating IP status reset

The method for setting the floating IP status in the NSX plugin
has a flaw that causes in some cases the status to be reset.
This patch removes this bug and also protects against regression
adding status check in the unit test covering floating ip
creation.

This patch also moves the above mentioned unit test in a more
suitable place in the test same module.

Change-Id: Ib08c421ade20ce23b5c08145203a2df6a8f3efa5
Closes-Bug: #1357514"
82ac41af7ba9e077fc0aa01ca1ec1ee063999341,2014-08-15 16:20:26+01:00,"Fix config option names in ml2_conf_sriov.ini

Config option names in ml2_conf_sriov.ini file are
not in sync with definitions in source code.

Change-Id: Ic8f7b6b8e9acd022623daabd2b209b864caa0b06
Closes-Bug: #1357339"
9bf0e6654480f98f2315a43687b267263a82a823,2014-08-15 17:21:17-04:00,"Remove auto-generation of db schema from models at startup

This patch removes the Neutron capability of creating database tables
from sqlalchemy models for all those model classes for which
a table is not found in the database schema.
Migrations should be the official and only solution for creating and
managing the Neutron db schema.
This patch also adapts unit tests in order to ensure test schemas
are still correctly created.

DocImpact
Update deployment documentation accordingly.

Closes-Bug: #1207402

Change-Id: Ie4ee5507888ecad5f6dc32ce7a029c43014687a2
Co-Authored-By: Henry Gessau <gessau@cisco.com>"
78059968e212d537c813f398da7f76714380bf4e,2014-08-17 13:46:15+00:00,"Update DVR Binding when router_id changes

In this patch I modified update_dvr_port_binding to update the
binding if router_id changes.
When a new router namespace is created on a host, sync_router
will call _ensure_host_set_on_port that will update the DVR binding.
With the current code update_dvr_port_binding won't update the
binding if there's an existing binding unless the binding
vif_type is VIF_TYPE_BINDING_FAILED . There's a race when
the router namespace is destroyed and then recreated on the same
host.
The DVR binding is deleted only when the message
update_device_down is processed. If this message is processed
after the update_dvr_port_binding triggered by the namespace creation,
update_dvr_port_binding won't update the binding. When the router
interface will be detected as UP, no DVR binding will be found.

Closes-bug: #1358554
Change-Id: I37fd4ed67dc2019b57e36d082b584c517d8f67a8"
65de01dcb1c49271ad1e5067d8dfd206788086d4,2014-08-19 05:32:44+04:00,"Reorder operations in create_vip

Previously VIP's port creation was moved outside the transaction
to avoid deadlocks related to rpc calls.
It led to small chance of VIP being fetched by rpc code with
port being still None.

This patch reorders VIP association with the pool so it's done
only after port has been created.

This patch also leaves small possibility of uncaught exception in
case of pool being concurrently deleted in the process of VIP creation

Change-Id: I584558aecc92db4d19fb72b1d006868b840a4d8c
Closes-Bug: #1356227"
295efa00081c770a57a5541652d9d3ffd5c1074d,2014-08-18 21:52:00-07:00,"Big Switch: Check for 'id' in port before lookup

Check for the presence of the 'id' key before trying
to do a lookup based on the value. This is necessary
because a 'fields' param to get_port(s) may exclude
the 'id' field before the host_id lookup.

Closes-Bug: #1358668
Change-Id: If30567d5deaeabd2de6c6287fac7a81695a41cc5"
b57d52aeb951bcfb9a2966ba7dc1b3f8b640bd8f,2014-08-19 07:02:45+00:00,"Use oslo.db create_engine instead of SQLAlchemy

oslo.db may set additional options to engines that we may be interested in.

blueprint enable-mysql-connector

Closes-Bug: #1350942
Change-Id: I6f67bb430c50ddacb2d53398de75fb5f494964a0"
808452913af090009ee1a32235bdd0b52b4e6e5c,2014-08-19 11:44:54+04:00,"Set InnoDB engine for all existing tables

Added the method in heal script that checks if mysql_engine
parameter is needed to be changed and if it is neseccary do this.
Also this change adds migation that set 'mysql_engine' to InnoDB
for all tables that were added into the database after healing.

Closes-bug: #1346966

Change-Id: Ia4d9038b99b2559d37272a17f5819a9dedd53f72"
c0fb42182ccb6da0a652aab68569a74d449a6301,2014-08-19 11:51:23+04:00,"Fix migration set_length_of_description_field_metering

If PostgreSQL version is less than 9.1.13 migration
set_length_of_description_field_metering fails as there is no
special 'create if not exist' expression. This change add special
function for this case.

Closes-bug: #1348138

Change-Id: Ibe4f370fe400072abd281bd2313261790335eae2"
b6e9922364fca4d8d141fbb2f27024f7db79ca9e,2014-08-19 15:12:18+02:00,"Ensure ip6tables are used only if ipv6 is enabled in kernel

On systems where ipv6 module is not loaded in kernel we need to avoid
usage of ip6tables. This patch reads
/proc/sys/net/ipv6/conf/default/disable_ipv6 file and if ipv6 is
disabled then ip6tables are not used in IptablesManager

Closes-Bug: #1352893

Change-Id: I07e5851aa25eb98b7a97dff86b9850475df85f64"
65b16f50bdd6544244d80c0f07653f4f478d3244,2014-08-20 14:25:36+05:18,"corrects the typos in l3_router_plugin's comments

there were some typos in the docstring of the function
create_floatingip(). This patch corrects them

Change-Id: I869567d5470a27ff037feeabfc1057b8e2da38b7
Closes-Bug: #1359113"
64a4fadde0f8a1a6413ea5623fc30b9872896a67,2014-08-20 14:26:39+00:00,"Remove unused network parameter from _allocate_ips_for_port

I found this in the context of a patch that I was reviewing [1].  I
found that patch left a few loose ends and so I thought it would be
better to remove the parameter as a separate refactor so that it can
be carefully reviewed.  The other patch [1] should be rebased to this
one.

[1] https://review.openstack.org/#/c/100963

Change-Id: I75115fa46ea3340ef0f13feb28ad2cdb0387fed7"
771327adbe9e563506f98ca561de9ded4d987698,2014-08-21 02:15:17+03:00,"Fixes Hyper-V issue due to ML2 RPC versioning

The ML2 RPC version 1.1 breaks the hyper-v agent and
consequentially the RPC version in the Hyper-V agent needs
to be set to 1.1 to match the ML2 RPC base API version.

Change-Id: Idc4ae8d7dcff4331aca148a8f2a7a2b01679b3a8
Closes-Bug: #1353697"
702967e2a8f9db4b4e1e58e8bc53fd7833f9c2aa,2014-08-21 09:59:08+02:00,"Rename range to avoid shadowing the builtin

This refactor supports a patch I was reviewing [1].  I thought it
better to apply this consistently in this file as a separate refactor
so that that patch could be done cleaner.

[1] https://review.openstack.org/#/c/100963

Change-Id: Ida58758504e868dc731e97d7bce53d4849998723"
30c219f6823b80934a0c0562b048fd33b2e76c76,2014-08-21 02:49:11-07:00,"Join tables in query for down L3 agents

Join the agent table together with the L3 agent scheduler
table. This fixes an issue where the query would return
all admin_state_up L3 agents with router bindings when
any agent in the database was dead (missed heartbeats)
instead of just returning the dead L3 agents with bindings.

Closes-Bug: #1359460
Change-Id: I29215f81be7e3513155faaad015e24dbf1a1ad5d"
9294de441e684a81f6e802ba0564083f1ad319d6,2014-08-21 23:52:10-07:00,"One Convergence: Skip all tests with 'v6' in name

Adds a check to the test setup for the One Convergence tests
to look for v6 in the name of the test and skip it if present.
This prevents IPv6 developers from having to explicitly skip
each new IPv6 test in the One Convergence unit tests until the
plugin gains IPv6 support.

Closes-bug: #1361366
Change-Id: I5c17d7290302597d5c85ef2c1df95f4f71e1a69b"
903e2a8cd1dd9169048d1ad9dd8a566b2ae52395,2014-08-22 10:03:07+02:00,"Add unit tests covering single operations to ODL

This commit adds the remaining test cases (create and update
operations) to fully cover sync_single_resource. It also defines the
filter_* methods as static or class methods and removes their duplicate
arguments.

Change-Id: I6b6153ea577bd685576690559b1c389490ee525d
Closes-Bug: #1325184"
2fc7fd6eb1b7e728b45e6a202cd9011dbb920950,2014-08-22 08:16:38-07:00,"Minor refactoring of auto_schedule_routers

The method is more complicated than it needs to be, and it makes it difficult
to target fixes for it.

This is done in preparation of fix for DB lock timeout errors observed while
dealing with DVR routers.

Test coverage is already provided, and more granular coverage is added to
reflect the new structure being introduced.

Partial-bug: #1356121

Change-Id: Ifb7a742b64139f3a5d9b88c3c6261b1b890946f9"
31ca6ea1412ca30c708f52ef844f5a2eedb7a56d,2014-08-23 20:24:09+02:00,"Add hook scripts for the functional infra job

Infra jobs support hooks to customize behavior.  This change adds
scripts that are intended to be called by the neutron-dsvm-functional
jobs as hooks.   Defining hook behavior in-tree instead of directly in
the job definition has the advantage of allowing changes in hook
behavior to be tested before merge.

The gate_hook.sh script added by this change installs a rootwrap
filter to allow functional tests to destroy python processes that
they have spawned.  The tests use the python executable provided by
their tox env, and the default rootwrap configuration does not
support killing processes launched by non-system python executables.

This change will have to merge to master and stable/icehouse before
the supporting infra config change can be merged:

https://review.openstack.org/#/c/116458/

Partial-bug: #1360658
Change-Id: Idcc6195f91fac833c14892f27fb793048ef964b9"
3082a074f819f0479fc941b30dc7cfdbb8aab394,2014-08-23 23:35:59-07:00,"Removing sorted() function from assertEqual()

Removing unnecessary sorted() function from assertEqual() function
calls in functions used for sorting and pagination testing

Using sorted() breaks sorting tests objective which is to test sorting.
This is causing every unit test using this functions
(_test_list_with_sort, _test_list_with_pagination, _test_list_with_pagination_reverse)
for sorting tests to always succeed

Switched the parameters for assertEqual() function within the fixed code to meet
its signature - assertEqual(self, expected, observed, message='')

Test neutron.tests.unit.vmware.vshield.test_lbaas_plugin.TestLoadbalancerPlugin.test_list_vips
was succeeding because of this bug, although it should fail. It failed after the bug was fix.
Test was fixed.

Change-Id: Ia36b81d9a7fd32cae3b567ac1899b56481eb62ce
Closes-Bug: #1355251"
df9a383dfb470edf7c6e1ae1caf79e37a0ab1bd4,2014-08-24 15:37:26+03:00,"Fixes Hyper-V agent issue on Hyper-V 2008 R2

The vmutils.HyperVUtils class used on versions of Hyper-V prior of 2012
is missing the ""remove_all_security_rules"" method.

Change-Id: Ib14e643c400b230c912589f9480acf59d6e7b147
Closes-Bug: #1360817"
25f117bacf1cb110260d96e764ae8fac9440c14e,2014-08-25 04:52:49-07:00,"Do not explicitly set mysql_engine

Setting the mysql_engine when creating a table is not needed
anymore as this is automatically done by an event listener
added with commit 466e89970f11918a809aafe8a048d138d4664299

Change-Id: I0df978dbf2bb44f17102da3c17fd4e93c9e4df8d
Closes-Bug: #1361176"
eb3be39521659d0d5a0ddfdc33b08f6d0c24db39,2014-08-25 16:27:44+04:00,"Raise proper exception in case duplicate ipv6 address is allocated

In case neutron tries to generate ipv6 address for slaac subnet,
it doesn't check that generated ip is unique and throws DB exception
that results in 500 HTTP error.

The fix throws proper IpAddressInUse exception.

Closes-Bug: #1358731
Change-Id: I66aed81b8d31d1eff6c87a77c4c4a813179ba458"
0846f76da7b87e20c713403b793586e021a1b5d1,2014-08-25 17:04:02+02:00,"Add _store_ip_allocation method

This refactor supports patch [1]
The code to store the IPAllocation is moved to a specific
method _store_ip_allocation

[1] https://review.openstack.org/#/c/100963

Change-Id: I9492dcb9479d6e6dadb79b137a273052d948412b"
b1b97dd721980bd06a97b9a9ad0fb15d95370164,2014-08-25 10:57:22-07:00,"Add template attr. for subnet, router create in Nuage plugin

subnet create and router create commands now gives the ability
to the user to create subnets and routers via neutron cli with
additional attributes nuage_subnet_template and nuage_router_template
respectively. The instantiated subnet and router inherits the properties
of the template that was mentioned in the additional parameters.

Change-Id: Ib73313e840cb35ede89df858baa536aab883efa2
Closes-Bug: #1353112"
050c41a1458cb816392de2569a6971f382f520e5,2014-08-25 11:08:35-07:00,"Set firewall state to CREATED when dealing with DVR

When DVR is enabled as a default option for creating routers, firewall
resources will need to have a new initial state, so that reconciliation
can be done once all L3 agents have processed the firewall rules.

The new state has been introduced to preserve API bw compatibility
with centralized routers.

Partial-bug: #1360351
Supports-blueprint: neutron-dvr-fwaas

Change-Id: I53122570dd3a2311eedb24ccd925bcdc9ad4f70c"
9ea42f50d3136885ffb1f7b23a7d831165f25247,2014-08-25 14:27:31-04:00,"Change autogenerate to be unconditional

Template for generating db migration scripts are now not run according
to used plugins. Target environment is set to use all available models
but also used plugins are kept for backward compatibility.

Part of this patch is script that will drop unused tables to avoid
generating the drop in future migration scripts.

Change-Id: I90a7d3416de24f2317ccdeb828bb8bd973ee5e61
Closes-bug: #1346638"
44eff5daad81966f6530d84ca3683b2f9c58debf,2014-08-25 20:58:24+02:00,"Increase ovsdb_monitor.SimpleInterfaceMonitor start timeout

The current timeout fails during functional testing with
slightly higher load. Increasing it will lower the timeout
chances during high load conditions. Changed from 5 seconds
to respawn_interval/2. DEFAULT_OVSDBMON_RESPAWN = 30 , so
the default timeout will be 15 seconds.

Change-Id: I6a9e2977b275e96dcf01c4df90a33169c42287d6
Closes-Bug: #1358206"
eca9069be3d730c788e433edb291123eede07839,2014-08-25 21:21:21+02:00,"Fix IpNetnsCommand to execute without root_wrapper when no netns

IpNetnsCommand accept execution with a network namespace, and
that requires root privileges and a root_wrapper.
IpNetnsCommand does accept no namespace too, in that case, the
root_wrapper doesn't have to be present necessarily, unless the
command we're executing requires root privileges itself.

This patch fixes the check condition on IpNetnsCommand execute
method.

Change-Id: I5ab2f3f1daf4a5a080611dbcd3dbd43292f6766a
Closes-Bug: #1358196"
6994ade726f4a33753a11b2b2c24454160c96d31,2014-08-25 17:03:53-07:00,"Fix for floatingip-delete not removing fip_gw port

fip_agent_gateway_port is created dynamically on a
compute node where FIP namespace is created. When
floatingip-disassociate is called this 'port' is
deleted.

But when we call floatingip-delete this port is
not deleted.

This patch fixes the issue mentioned above.

Closes-Bug: #1351066

Change-Id: I1aa51680394547390546fe362abfae7a5d25425b"
d8deab298d59c0c67d634973e298d180f37ef0f2,2014-08-26 08:41:44+08:00,"metering driver default value is different in code and config file

We defined the metering driver is IptablesMeteringDriver in config,
but in code, the driver is NoopMeteringDriver.

Change-Id: Ia4fb6751e8a9919f844ef27a303e2fa95b46670e
Closes-Bug: #1360958"
e74b85f854e248919299fd875066903eba0a37c9,2014-08-26 03:59:30+00:00,"ext-gw update on dvr router improperly handled by l3-agent

The recently added external_gateway method does not check
the agent mode or host binding before adding an external
gateway to a particular node/agent.  This fix adds the
required checks in the update path.

Change-Id: Idbb76eea1faec1c5d6b7615d23d74760cc327bb2
Closes-bug: #1356734"
0fcedae747f257e2424b669ec65f32b76f12155a,2014-08-25 22:25:58-07:00,"Networks are not scheduled to DHCP agents for Cisco N1KV plugin

With the config option 'network_auto_schedule = False' in
neutron.conf, networks do not get scheduled to available DHCP
agents. The fix is to explicitly schedule the network as part
of the subnet creation flow.

Change-Id: Id1f94a5844111a916f984d6dd7bda2cb4e11e1ee
Closes-Bug: #1356609"
661e3ec795be075eb8f66ff15de1c8ad3603a682,2014-08-26 13:43:27+04:00,"Fix heal_script for MySQL specifics

After running upgrade head->downgrade havana->upgrade head
on MySQL heal_script fails with several mistakes.

This change fix them. More details in related bug description.

Closes-bug: #1354218

Change-Id: I91cb21c4bc744f240bfb8bc6b2ed24b6e01f6095"
1deb787c15a0f24c6c079c5e5fe122dc54188cdf,2014-08-26 06:43:12-07:00,"Fix DVR to service LBaaS VIP Ports

Currently, DVR router namespaces are created only
when there is a valid VM port on the compute
node, or for the gateway-port on the service node.
But when an LBaaS VIP port is created the l3 agent
does not create a DVR namespace to service the VIP port.
This fix enables DVR namespaces to be created to
service the LBaaS VIP port.

Also, this fix enables L2 Agent running in DVR
mode, to add-in OVS rules to enable packets to
be routed to such LBaaS VIP Ports which are
resident on DVR routed interfaces.

Therefore, with this fix both East-West and
North-South traffic will be serviced by DVR
for LBaas VIP Ports.

DocImpact

Authored-by: Swaminathan Vasudevan <swaminathan.vasudevan@hp.com>
Co-Authored-By: Vivekanandan Narasimhan <vivekanandan.narasimhan@hp.com>

Change-Id: I698b971d50721fb0512a11569f7d3139d0d456f3
Closes-Bug: #1356464"
ebb63260811f2466589b989dd551295f0ec52c52,2014-08-26 09:42:14-07:00,"Heal script: Drop fks before operating on columns

This patch fixes a small glitch in the healing script.
If the script detects that a foreign key must be removed,
and the columns that it references must be removed as well,
then the foreign key removal would fail as the column would
not exist anymore.

This patch simply ensures foreign key are dropped before all
the remaining table/column operations. New foreign keys are
instead added after all table/column operations are completed.

Change-Id: I3cce742146c70b71900cf53e50f9a6a61bc6a378
Closes-Bug: # 1354188"
9e3111250bceece8e36cd9fe60b80393515aa423,2014-08-26 16:38:59-04:00,"Predictable iptables chains output order

This fixes the iptables unit tests that break with a randomized PYTHONHASHSEED
(see the bug report).

The chains for iptables are stored as sets to avoid duplicates. When they are
output by iptables_manager their order can therefore be unpredictable. This was
found hash seed 1016732220.

To fix this we:
 - Sort the chains output by iptables_manager
 - Update the unit tests to check for sorted chains

When multiple tables are processed, they can be processed in any order or
dumped in any order. Found with hash seed 3728666619.

To fix this we:
 - Traverse the tables in sorted order for dumping
 - Fix tests to allow for tables to be processed in any order

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Partial-bug: #1348818

Change-Id: Ic3f4cd85316c9fc2e78bc7f5e900cfac87baf39d"
968ab9006ecf3fe3f22c19ac219e7376eb718d77,2014-08-27 01:00:08+04:00,"Minor refactoring for add_router_to_l3_agent

This method is more complicated than it needs
to be, and it makes it difficult to target
fixes for it.

Furthermore, this method calls into
auto_schedule_routers, which duplicates some
of the DB calls already made in the above
mentioned method. This refactoring
is done in preparation of the performance
improvement.

Partial-bug: #1356121
Related-Bug: #1358636

Change-Id: I9a0cfa41a5f067949b964d39157def55c40bf9af"
73719a80bf4ea036a52617bffdf6d5bb725e4a90,2014-08-27 09:54:25+09:00,"Make L3RpcCallback a separate callback class

RPC has a version of itself. In Neutron a plugin implements
several RPC interface, so a single RPC version doesn't work.
In Mixin callback class approach, RPC versioning depends on
each plugin implementation and it makes harder to maintain
RPC version appropriately. This patch series replaces mixin
RPC callback of server side with a separate class.

This commit handles server-side callback of L3-agent RPC interface.
L3-agent server-side callback class is moved from db/ to
api/rpc/handlers because it doesn't involve any db operations
and defining all RPC interfaces in a single place sounds reasonable.

Note that moving other L3-agent related RPC interface class
to api/rpc/handlers will be done in a separate patch as this patch
focuses on reorganizing the server-side RPC callback class.

Partial-Bug: #1359416
Change-Id: Ie3f2c9b2ad907a1110e05fe94d42e41e93fbcaa7"
fa0abeb043c2f66c537e43a8ea7181f648c71d33,2014-08-27 05:11:53+00:00,"Fix InvalidRequestError in auto_schedule_routers

This was discussed in review [1], and was deferred until the time was ripe
for the appropriate fix. As suggested and reported, auto_schedule_routers
is too affected by this error.

This patch takes care of the issue, in a similar way.

[1] - https://review.openstack.org/#/c/112740/

Related-bug: #1354072
Closes-bug: #1360104

Change-Id: Ie3cb0c31dfa571c694cd38e19f72ff8503815635"
89e76a8afae19c5f66d532538607aedaac59722a,2014-08-27 09:42:19+04:00,"Fix l3 agent scheduling logic to avoid unwanted failures

In case router is being added to l3 agent which is already hosting
the router it is fine to let such a request to succeed.
This patch also adds a check for unnecessary scheduling that might happen
twice in described case and lead to unwanted messages in the logs.

Change-Id: Id104b36ba7e1e6f6a9378ee600c33e9962230521
Closes-Bug: #1358636"
0c963f6140237d8d3f361c6aaa7d2a6b656504db,2014-08-27 08:04:11-07:00,"Check for IPv6 file before reading

Check to see if the IPv6 disabled flag file exists
before trying to read it. This file doesn't exist
on systems with the IPv6 module blacklisted.

Closes-Bug: #1361542
Change-Id: I4064b4189cc9d8f0f0e0e7025cf6f83d5b6ec276"
1cdeb17c04819a6fa0a39c599af818f06b66f145,2014-08-27 17:46:16+02:00,"Fix func job hook script permission problems

- The hook script is the wrong place to unstack since
  it needs to run as the stack user with sudo privileges and those
  permissions are removed as part of the devstack-vm-gate.sh script.

- The functional job gate hook script needs to use sudo to
  install the test-only rootwrap filter.

Change-Id: Ib2e5ec016a5a414dd9675328650efb2b39b0e3fe
Related-Bug: #1360658"
76f4d7db9f44022667d347dfe0474a3abb3b1bb7,2014-08-27 08:58:38-07:00,"Do not use auto_schedule_routers to add router to agent

auto_schedule_routers makes a number of DB calls that are
unnecessary as they are already made during the validation
phase of add_router_to_l3_agent. Once the validation is
done, the only business left is to create the binding: this
is what this patch does.

Partial-bug: #1356121

Change-Id: Ia9be998c2b94416bc46ef78415099f0099b08c2a"
42a8770a49e0342acffa7fdde22655c98e783184,2014-08-28 14:25:32+00:00,"Make DhcpRpcCallback a separate callback class

RPC has a version of itself. In Neutron a plugin implements
several RPC interface, so a single RPC version doesn't work.
In Mixin callback class approach, RPC versioning depends on
each plugin implementation and it makes harder to maintain
RPC version appropriately. This patch series replaces mixin
RPC callback of server side with a separate class.

This commit handles server-side callback of dhcp-agent RPC interface.
DHCP-agent server-side callback class is moved from db/ to
api/rpc/handlers because it doesn't involve any db operations
and defining all RPC interfaces in a single place sounds reasonable.

Note that moving other DHCP-agent related RPC interface class
to api/rpc/handlers can be done in a separate patch as this patch
focuses on reorganizing the server-side RPC callback class.

Partial-Bug: #1359416
Change-Id: Ifb2a1bc0b7971995aae2856c9d4cd88c6dbc22d6"
f872bbd4f4bab5582ab4cb8e449e8afe61577563,2014-08-28 23:30:06+09:00,"Make DvrServerRpcCallback a separate callback class

RPC has a version of itself. In Neutron a plugin implements
several RPC interface, so a single RPC version doesn't work.
In Mixin callback class approach, RPC versioning depends on
each plugin implementation and it makes harder to maintain
RPC version appropriately. This patch series replaces mixin
RPC callback of server side with a separate class.

This commit handles server-side callback of DVR ML2 RPC interface.

Partial-Bug: #1359416
Change-Id: I1b6383f7b0af5d9aed18eda3a15f21d3504d0347"
1cad794156c126095c9b9b4c8edb1d92a4e48f00,2014-08-28 20:29:13+02:00,"Remove old policies from policy.json

They're confused, misleading, and most importantly unused.

Change-Id: I22130ce3147617f8fb7baba7a50bada128d40e08
Closes-Bug: #1362618"
6186e0cabe5ba854cddd68351e314933f826ee33,2014-08-28 21:19:51-07:00,"Remove ovs dependency in embrane plugin

This patch changes the dependency of the embrane plugin from ovs to ml2.
Existing users of the old entry point will be upgraded on a case-by-case
base as needed, therefore no generic upgrade procedure is required.

Change-Id: Id192fc32bd6ba7a8926eff1190070b8df5327129
Closes-Bug: #1343024"
ace3a01ebf980c166b4dfe6d1216b17bf0aec2ed,2014-08-28 23:06:25-07:00,"Datacenter moid should not be tuple

Remove the comma, because it will convert the string to tuple
Closes-bug: #1362480

Change-Id: I2debb76bae26fe3d437a431f2946f66a1cbe6851"
65dde5624bbe1a1f896fe437fef0ad9bbe168153,2014-08-29 19:13:35+05:18,"remove explicit include of the ovs plugin

On installing only neutron-linuxbridge-agent package, the
dhcp cannot start successfully because of the imports from
ovs plugin. This change removes the explicit include of the
ovs plugin from ovs_lib.py. INVALID_OFPORT has been moved to
ovs_lib.py while VXLAN_UDP_PORT has moved to
plugins/common/constants.py. The imports for these 2 constants
in files which uses it has been corrected to new location.

Closes-Bug: #1271449
Change-Id: I6559cb43d1b10b4f926c453a103b12017b59f259"
dcd3fb9da5ba64b5ae56a97c147f125bb7e33c4c,2014-08-29 17:42:07+03:00,"Fix state_path in tests

cfg.CONF.state_path is set to a random temporary directory
in neutron.tests.base:BaseTestCase.setUp. This value was then
over written in neutron.tests.unit.__init__. Tests that need
to read or pass cfg.CONF.state_path were getting the directory
from which the tests were running and not the temporary directory
specially created for the current test run. Note that the usage
of state_path to set lock_path, dhcp state path and the likes
was working as expected, and was not affected by this bug.

Closes-Bug: #1363058
Change-Id: Ib45f663fadaf0f3b4a79a0db4128822187b61ecc"
f2aa93767ece248d8efadc9b3507e233044aa316,2014-08-29 12:16:05-07:00,"Subnets with prefix length 0 are invalid

This patch changes the API behaviour to return a 400 error
when a subnet with /0 prefix length is specified.

This kind of subnet hardly make any sense, and also cannot
possibly work when DHCP is enabled.

Change-Id: I8f822f14b91475dcf86ea44ee607013e61cbb6f7
Closes-Bug: #1362651"
2781fce238e79690bf707a3df4823aec422687bd,2014-08-30 10:19:42+08:00,"Make SecurityGroupsRpcCallback a separate callback class

RPC has a version of itself. In Neutron a plugin implements
several RPC interface, so a single RPC version doesn't work.
In Mixin callback class approach, RPC versioning depends on
each plugin implementation and it makes harder to maintain
RPC version appropriately. This patch series replaces mixin
RPC callback of server side with a separate class.

This commit handles server-side callback of security group
RPC interface.
* The server-side callback of Security group RPC is moved to
  api/rpc/handler and db/securitygroups_rpc_base now only
  contains a mixin class to add agent-based security group
  implementation with db operations.
* get_port_from_device method in server-side callback class
  is moved to a mixin class of plugin implementation
  (SecurityGroupServerRpcMixin) because it involves DB lookup
  and is tightly coupled with plugin implementation rather
  than RPC interface definition.

Most unit tests for SGServerRpcCallBackTestCase were skipped
in the base class before, but now they are no longer skipped.

The following items will be planned in later patches
to avoid drastic changes in a single patch.
* Merge security group RPC API and agent callback classes in
  agent/securitygroups_rpc into api/rpc/handlers/securitygroup_rpc
* Remove completely duplicated db access code in get_port_from_device
  and get_port_and_sgs

Partial-Bug: #1359416
Change-Id: Ia6535217d2e3b849a95667c1b53dd09675002892"
4e80524a61a655fe9732ff42dc8f035810214670,2014-09-01 12:54:27+10:00,"Remove chain for correct router during update_routers()

The existing code incorrectly used the stale value from a previous list
comprehension - and deleted the chains for the wrong router :(
(Found via pylint)

Also: change to using a set() rather than a list(), since it is used for
repeated membership tests.

Also: refactor test cases to remove test case duplication.

Closes-Bug: #1362466
Change-Id: I4df400d57bab5427362db47a715576faa6340173"
6c1eec67d2e7def7561bde906df9a50006a86b10,2014-09-01 13:11:50+09:00,"Add endpoint_type parameter to MetaInterfaceDriver

Previously MetaInterfaceDriver communicates with neutron-server
via 'publicURL' because it uses python-neutronclient without
endpoint_type and 'publicURL' is the default.
It causes error when a user intends to use internal or admin URL
for communication between MetaInterfaceDriver and neutron-server.

Change-Id: Id321d5a16a08a4bda618f98bb1eb7cb1b0b9eb08
Closes-bug: #1354285"
6f5f14872387f3814d3c421f07e68f6ce45f7d7d,2014-09-01 15:56:24+09:00,"Fix a recent ipv6 UT regression

This fixes UT failures on systems without the procfs entry
by adding appropriate mocking.  The problem introduced by
the following change:
    https://review.openstack.org/#/c/116826/
    commit 0c963f6140237d8d3f361c6aaa7d2a6b656504db

Also, add a test for the case which the change in question fixed.

Closes-Bug: #1363805
Related-Bug: #1361542
Change-Id: I72842c3446f3275e2288adc411540ab036025ed0"
c71f0bbf967a9d356f1276839dd04098847e35cf,2014-09-01 07:34:00-04:00,"ML2: Fix release of network segments to allocation pools

The recent merge of https://review.openstack.org/#/c/115025/ broke the
release of network segments to allocation pools on network delete,
resulting in network creates eventually failing with
NoNetworkAvailable exceptions. The network_delete() code is rearranged
to properly release the network segments, and a unit test is updated
to verify that the type drivers' release_segment() method is called.

Partially implements: Blueprint ml2-type-driver-refactor

Change-Id: Ica5f11b2012dedfcc097f34f1515f5f3ca208fd2"
9569b2fe58d0e836071992f545886ca985d5ace8,2014-09-01 21:20:33+09:00,"Don't spawn metadata-proxy for non-isolated nets

If the configuation option ""enable_isolated_metadata = True"" for the
DHCP agent is set, the neutron-ns-metadata-proxy process is spawned
for all networks, regardless if they are isolated or not. In case
the network is not isolated (ie. connected to a neutron router), the
L3 agent also spawns a proxy process, and the DHCP's proxy is left
unused. This patch adds a check prior to the spawning of new proxies:
if a network is not isolated, no proxy is spawned.

Change-Id: I9bdb8c3d37997b22435bca33ec47a67db08efa51
Closes-bug: #1361545"
d3ed330ca81d9663b1280a0386b572421ec48496,2014-09-01 22:41:57+09:00,"Fix a bug in Mellanox plugin RPC caused by secgroup RPC refactoring

SecurityGroupsRpcCallback RPC refactoring patch (commit 2781fce238)
moves get_port_from_device method from plugin RPC callback class to
plugin layer, but Mellanox plugin RPC callback was forgot to update
and as a result RPC calls from agents to Mellanox plugin fails.

Change-Id: I1aa82ac00c16a53a59a93087f0ca4ef281ee3f2b
Related-Bug: #1359416"
d0153b1f290afecfbd75b17af17c626b364a35ce,2014-09-01 13:50:34+00:00,"Remove reference to cisco_cfg_agent.ini from setup.cfg again

No sample .ini file is included, causing install to fail.
Remove the reference again.

Change-Id: I97ffe464e4eb9689ee290c3c95ac19d4e09029e2
Closes-bug: #1351466"
02cfe35694dc69c08d858c756db7221c32bf9f3c,2014-09-01 18:21:30+02:00,"Clarify message when no probes are cleared

Log number of probes which were deleted by
using neutron-debug probe-clear
Closes-Bug: #1333103

Change-Id: I5b53f0c4651c6df491d414d7d65f98c4a84a5987"
bc7c8acf90b55a27298484a77a32c089914afb67,2014-09-01 18:33:07+02:00,"Add functional test for IptablesManager

Introduce test of IptablesManager using filtering of ICMP packets in
namespaces.

Partial-bug: #1243216

Change-Id: I90ab0d397780247de619bd90f5febd0e59b84fc7"
486937907a5dec6f1f227a1bc3330cad061ff437,2014-09-01 15:05:16-07:00,"Prevent SystemExits when running tests

Adds a check for SystemExit exceptions during tests
to convert them into a test failure rather than an exit.
Includes the traceback in the failure so the source of
the exit can be located.

Related-Bug: #1364171
Change-Id: I2c7d9010ebf935d39ed58fe7a6fc4a1a867e2548"
4de8a3cd94c6d65702dcda457653edc6c93a3722,2014-09-02 10:29:21+00:00,"Remove absolute path in KillFilter for metadata-proxy

This commit fix the problem of killing neutron-ns-metadata-proxy
when running in Virtual Environment.

Change-Id: I987dd87e19c218846a48e58b61679b4153d97f66
Closes-bug: #1363773"
48a2221648f490540fdf1ee099d39b8e5230f053,2014-09-02 05:04:13-07:00,"Big Switch: Retry on 503 errors from backend

Retries requests to the backend controller up to 3
additional times with 3 seconds in between each request
if a 503 service unavailable message was returned.
The scenarios that return 503 messages from floodlight
are normally short lived locks for things like OpenStack
synchronization or upgrade blocks. Retrying should work
in the majority of cases.

Closes-Bug: #1357105
Change-Id: Ifacd3a384cfc797ba6d6af5f3c8649c333473259"
187217d767ca41b742937fe183ba4a4c20e59185,2014-09-02 12:34:23+00:00,"Remove SELECT FOR UPDATE use in delete_firewall

SELECT FOR UPDATE expression, which is triggered with the use of the
SQLAlchemy Query object's with_lockmode('update') method, is
detrimental to performance and scalability of the database
performance code in Neutron due to the lock contention it produces.

SELECT FOR UPDATE can be entirely avoided in delete_firewall method
with the use of single-shot DELETE expressions.

Partial-Bug: #1364358
Change-Id: Ia8db73312f5dff6a5bd573694a60a798279834cb"
300b2a6ae136eae7e7313ff8e7d94110e08b131a,2014-09-02 11:06:25-04:00,"Fix interface IP address for DVR with gateway

when an interface is added to a router with gateway, the method
internal_network_added(..) incorrectly configures the IP address
of the new snat interface same as the IP address of the new
subnet interface.

Change-Id: I00d4ff1105a443b89b28359249b8e83fb4c1d157
Closes-bug: #1355087"
1105d732b2cb6ec66d042c85968d47fe6d733f5f,2014-09-02 10:22:36-07:00,"Avoid auto-scheduling for distributed routers

The reason for this is twofold:

- It may relieve contention on DB access while
  both servers and l3 agents are busy setting up
  and syncing routers down respectively.

- It prevents accidental placement of namespaces
  during the L3 sync_routers process, as auto
  scheduling without taking into account the state
  of the L3 agents, as well as the state of the
  routers being processed, may overrule the placement
  decision made during router operations.

Partial-bug: #1356121
Partial-bug: #1359326

Change-Id: Ia677ce212145d6cee65adeb1d8ae594e6ac5e34d"
50d2b253ac00b562c416fd1ad52aefc7ef481525,2014-09-03 18:02:09+00:00,"Cleanup rename of get_compute_ports_on_host_by_subnet

A recent merge [1] renamed this method to remove ""compute_"" from the
name.  Unfortunately, the rename was not done thoroughly.  This patch
cleans that up.  No bug is referenced since this is an obvious
ommission in a recent patch.

[1] https://review.openstack.org/#/c/114141/

Change-Id: I8320bc8deb6dcda586ccff01120270b3ce257ea2"
fdf0fa8b43537bbd5ab6e1a2e55f694b77209a00,2014-09-04 14:03:31+03:00,"Fix leftover Timeout effecting most eventlet calls

When registering a new eventlet.timeout.Timeout object, eventlet
automatically starts a timer for most (if not all) future eventlet
calls. Normally, eventlet codes do not hold a timeout unless such a
timeout is used or a specific timeout length is specified through
the API, but once a Timeout object is initialized, it is left there
unless canceled.

This change fixes an un-canceled Timeout which causes some
functional tests to fail, reintroduces a fix for bug #1358206,
which was written prior to discovering the uncanceled timeout, and
increases the timeout of a test that depended on this timeout.

Closes-bug: #1358206
Related-bug: #1364171
Change-Id: I1bfc5af6917c525894eecd8b477d787763edbd02"
85aa417d77bd3402690e26f105465f0338897cfd,2014-09-04 17:57:33+03:00,"Revert ""Skip functional l3 agent test""

This reverts commit 0918ce91e5af5100ee3a4fcd6861741c4f00ac41. The
specified commit skipped a test which caused non-deterministic gate
failures, but the actual reason for the failures was found and fixed
so the skip is no longer needed.

Related-bug: #1358206
Related-bug: #1364171
Change-Id: I9b0d9ad9ad8b62ee92877fc0a6db0323604433ac"
5defcd0aa61b96933369a545040e57d9665add7a,2014-09-05 12:05:17+10:00,"Remove unused arg to config.setup_logging()

The cfg.CFG argument is ignored and misleading.  This change removes it
and updates all callers.

Closes-Bug: #1355565
Change-Id: I2fcece85d1abe848e5c01125cfb62c02f2dcbc86"
aa2f70844280c5c9aaaba76de3d98d4f7d6856af,2014-09-04 22:02:28-07:00,"Reset IPv6 detection flag after IPv6 tests

Resets a module level flag that was being left in the
state that the previous test set it to. This was causing
unrelated tests to fail if the last state was left disabled.

Closes-Bug: #1365829
Change-Id: Id3f6cb680f5d832e21966de7d4fa335c0c59697c"
b4bf668ec40ee6a329740b587fa4a651a6e0dca2,2014-09-05 16:38:04+02:00,"Supply missing cisco_cfg_agent.ini file

cisco_cfg_agent.ini file was missed in the initial commit and
caused neutron startup issues. This patch supplies the proper
ini file and adds it back to neutron setup.cfg.
Also the introduced config options are put in a specific group
instead of default as was in the initial commit.

Change-Id: I74b3b77fe6e196524809580f522f91f3b62f5ba7
Closes-bug: #1351466"
74a292ceba0be6aaa7ea1911cac2f102eb3db90e,2014-09-05 16:38:17+02:00,"Avoid testing code duplication which introduced testing bugs

SecurityGroupAgentEnhancedRpcTestCase duplicated code in
SecurityGroupAgentRpcTestCase setUp, also
TestSecurityGroupAgentEnhancedRpcWithIptables duplicated
code from TestSecurityGroupAgentWithIptables setUp()
introducing bugs by improper initialization, like a missing
    self.iptables.use_ipv6 = True
which in combination with tests.unit.test_ipv6.TestIsEnabled
produced inconsistent testing results.

Change-Id: Ic0b596b6fe1d8273df197e9426abad818832c00a
Closes-bug: #1365829"
11c8f8cbca0fc3feed0469346d682225f9301251,2014-09-05 18:09:24+02:00,"Fixes formatting for debug output in neutron/agent/l3_agent.py

The %s format type was missing.

Change-Id: I4efba513f7b0a6e4a21908bf0b05407e74b524c7
Closes-bug: #1366105"
0985ef78d43ae7d910669c3ca968fd977f2ea2ae,2014-09-05 15:41:48-04:00,"Stop tracking connections in DVR FIP Namespace

For DVR, connections to external network using floating IPs do not
need to be tracked in FIP namespace because they are being
already tracked in router namespace.
This fix adds iptable rules to not track connections.

Change-Id: I378039e311763d114860cb70ded7349d6580855a
Closes-bug: #1360395"
608003408b3aba6a8290427257460287d8a4ce96,2014-09-05 15:24:01-07:00,"Fix AttributeError when setting external gateway on DVR router

DVR routers will have this manager initialized only after one
or more subnets have been attached to the router. To address
the issue, make sure the manager is defined and handle the snat
rules appropriately.

This patch also makes _update_arp_entry more defensive; this is
because the arp update process can be affected by the same issue:
the router may not have internal ports at the time the request
come in. This is likely when VM's port creation and router
configuration overlap slightly.

Closes-bug: #1353006

Change-Id: Ib46852f5b264e5ef2e2d499d3351f8974e393011
Co-authored-by: Rajeev Grover <rajeev.grover@hp.com>"
43637f257f353254bf3bb68e5b7631ae1aacd831,2014-09-06 16:25:04+00:00,"Add scheduler unit tests to enable bug fixes and refactoring

Improves the coverage for DVR scheduling and will allow safer bug
fixes and refactoring in follow-on patches.

Change-Id: I02d0126e31adcab88a7ee82ba1cb76f952c9a68c
Partial-bug: #1353266
Partial-bug: #1356639
Co-Authored-By: Swaminathan Vasudevan <swaminathan.vasudevan@hp.com>"
3146837b7aea1a6c767131ad9aebaac2acb765df,2014-09-07 12:56:30+04:00,"Throw exception instances instead of classes

Prefer single style of throwing instances and not classes.

Change-Id: If159afcd092de5381309cbe217d64145ed5b45b4
Closes-Bug: #1364392"
3c503adcf703db7b772208389b43ee09cee66185,2014-09-07 12:50:44+00:00,"Fix metadata agent's auth info caching

metadata agent does not implement auth info cache correctly but
retrieves from keystone every time

Change-Id: Ifc1f580185d7600b48aaf80d112fc80e0c4253f2
Closes-bug: #1365352"
f31a56a06c01adecfeaa679b49243c24accb65d1,2014-09-08 16:11:41+00:00,"Remove subnet_id from check_ports_exist_on_l3agent

Refactor check_ports_exist_on_l3agent so that subnet_id no longer
needs to be passed.  Instead it calls get_subnet_ids_on_router.  This
helps to pave the way for removing hints from schedule router.

Partial-bug: #1353266
Partial-bug: #1356639
Co-Authored-By: Swaminathan Vasudevan <swaminathan.vasudevan@hp.com>

Change-Id: I6e9dcb0b899294bb4cf3e3d616a0a690049c338e"
185f09b7c46edcbb1d39d3b79993fa8c07dafc2c,2014-09-08 16:13:53+00:00,"Removed direct access to MessagingServer

Factory method provided by the library should be used to create a server
object. This allows to change servers internal implementation without
touching end users.

Also removed custom dispatcher. Its only purpose was to log messages.
If logging is configured accordingly all incoming messages will be
logged from oslo/messaging/_drivers/amqpdriver.py [1]

[1] http://goo.gl/nV9tcu

Closes-Bug: #1357236

Change-Id: Ic208994c5a64fd48528cb41d30a975d68d84af05"
b4608acae82811c0487608eb6439e23576bf0344,2014-09-08 20:05:17+02:00,"Add the unit tests for ml2.rpc module

Increase coverage of unit tests until 100% for ml2.rpc module.

Closes-bug: #1269136

Change-Id: I87c40e6462018df6a4dc70c6a1285de55f827877"
671e3ffa468974bf3b52f787e865eba2b6c97ffe,2014-09-08 23:36:19+00:00,"Call unbind_snat_servicenode from schedule router

Refactor to move the call to plugin.unbind_snat_servicenode from
schedule_snat_router to _schedule_router.  This is a move to pave the
way for removing hints from schedule router.

Partial-bug: #1353266
Partial-bug: #1356639
Co-Authored-By: Swaminathan Vasudevan <swaminathan.vasudevan@hp.com>

Change-Id: I062d8cc3cb870bbaa033d5b107a7dd868dfafa19"
357404e73427aeb4a45c2b226706703f4f846dfc,2014-09-08 23:41:55+00:00,"Remove hints from schedule_router

Partial-bug: #1353266
Partial-bug: #1356639
Co-Authored-By: Swaminathan Vasudevan <swaminathan.vasudevan@hp.com>

Change-Id: Ie6b55e5d0d70be74b19c91994e52eb1719e32fef"
8fb175bffd1b02262447478215d81b2a3edbe6a1,2014-09-10 06:13:49+00:00,"Fix comments in api.rpc.handlers

Follow-up patch of RPC refactoring of bug 1359416.
It addresses minor comments in the above patch series.

Change-Id: I2d6268db777f0f73fda61a5a7d0967a91bcb292b
Closes-Bug: #1359416"
6f3ae396ed9a9525d4ca77fb8e9b2857fe79b568,2014-09-10 11:47:54+02:00,"Don't allow user to set firewall rule with port and no protocol

Creating firewall rules specifying a destination port and/or a source
port without a protocol, generates rules without src or dest port
restriction. This was a real security issue for cloud users.

This patch generates a 400 Bad request ""Source/destination port
requires a protocol"" in case of creation/update of firewall rules
specifying a destination port and/or a source port and without protocol.

DocImpact
Closes-Bug: #1365961

Change-Id: I4a3a1d9ae7ec4b2a864b3edc83d65ef7f80cbba5"
eccf5e819ef918d566b7efd1e91719550d0fbef9,2014-09-10 12:07:25-04:00,"Use renamed _fail_second_call() in cisco nexus tests

In commit 5e4b0c6fc6670ea036d801ce53444272bc311929 NeutronDbPluginV2TestCase
_do_side_effect() was renamed to _fail_second_call(), but the nexus test cases
were not updated. The tests still worked because they check for
HTTPInternalServerError which is the end result of the server encountering
""AttributeError: object has no attribute '_do_side_effect'"". So the fault
injection still worked, but not in the way intended.

Note: the monolithic nexus plugin is not updated here since it is being
removed from the tree.

Closes-bug: #1367552

Change-Id: I083285fff5144d8dc35bd5b64faa7e400c68bcff"
b09c9950649c4c9fffa0b096eb21152cd84fe56f,2014-09-10 15:09:03-07:00,"BSN: Allow concurrent reads to consistency DB

Allow concurrent reads to the consistency DB since the
database lock the block was originally protecting against
is gone.

Closes-Bug: #1357102
Change-Id: I1618b4046e995c796757e723f99288e486683339"
62317a159ad98ef9ba5208f2fa7708a88692c46f,2014-09-10 15:45:21-07:00,"Fix for floating ip association and deletion

Added code to associate fip to a vm in VSD, if
the fip was already associated with the vm port
in Neutron. Also added code in fip deletion,
to get the correct router id based on the check
if the fip is associated to a Neutron port or
not.
Closes-Bug: #1350469
Change-Id: I1aa24f420f656043086a4f501b15722216b843e9"
60816b637d391aa5e5aef9b4b3a432b5ce552cc8,2014-09-11 12:10:55+09:00,"ofagent: Remove broken XenAPI support

ofagent has code for agent-on-DomU support inherited from OVS agent.
However, it's incomplete and broken.  Because ofagent uses a direct
OpenFlow channel instead of ovs-ofctl command to program a switch,
the method to use the special rootwrap can not work.

Closes-Bug: #1368006
Change-Id: I0bb25a296d1f1e65c233ece6deaef6c095d78707"
ed499b6af1ee8cc3003a991eea2ab4d0fdd461c3,2014-09-11 04:33:23-07:00,"Fail on None before iteration attempt

Check for a 'None' value before trying to iterate over it
in the bulk code. Also eliminates an unneccessary anonymous
recursive function in the same bulk handling code.

Closes-Bug: #1368055
Change-Id: Id4aca81e4882a3cdf9c790bdea0b0b515abc9a8c"
3b0ac61dea7178e858c6dede44a13818c5162283,2014-09-11 15:32:18+02:00,"Remove faulty .assert_has_calls([])

Some UT use <mock>.assert_has_calls([]) as a way to check if mock
wasn't called - this doesn't work because assert_has_calls only checks
if passed calls are present in mock_calls and hence it is always true
regardless of whether mock was called or not. This can lead to falsely
passed tests.

Change-Id: I1be5327854cc3dc2f5b3733f2bad78200cfbbfd2
Closes-Bug: #1368234"
b030300b1687b853a95b6bd2e706045f549d1e50,2014-09-11 16:13:53+02:00,"use TRUE in SQL for boolean var

The ""allocated"" variable was defined to be a boolean type
and in postgresql this type is enforced,
while in mysql this just maps to tinyint and accepts both numbers and bools

Closes-Bug: #1368251
Change-Id: If324c8b83e490e150085d044ac61360b647522ac"
c3326996e38cb67f8d4ba3dabd829dc6f327b666,2014-09-11 15:07:00-04:00,"Cleanup floatingips also on router delete

In router remove path process_router(), processing of floating ips
is getting skipped. This change adds processing of floating ips
if the external gateway for the router was previously set. Since
DVR uses FIP namespaces and agent gateway ports, this change ensures
such ports and namespaces are removed.

Change-Id: Ib1d8fb54adcd8aab411dced695d171376687c980
Partial-bug: #1367588"
c5ae5ad2637a561ccbc7484045e99d8140822b8d,2014-09-12 09:05:39+04:00,"Properly handle empty before/after notifications in l2pop code

Change-Id: I8644bb7cc2afb3b181397a478f96927990c0a4ca
Closes-Bug: #1367881"
da4433e1af75a7ad0a03b3e48e7b12af9a4d0e55,2014-09-12 13:36:59+00:00,"ofagent: Fix a possible crash in arp responder

Be careful for exceptions when feeding packet-in data,
which is generated by tenant VMs and thus can not be trusted,
to Ryu packet library.

Closes-Bug: #1365255
Change-Id: Ia8bacfb55def563a1b23a47709ae72bd4fce0fce"
949c29ec7fbe965483484c4192ca960bece1802a,2014-09-12 10:56:43-07:00,"Check for ports in subnet before deleting it from Nuage VSD

There could exist a port in subnet in neutron in which case subnet delete
is not allowed. In the nuage's plugin code, this validation needs to
be handle prior to sending delete subnet request to backend.

Change-Id: Idd20d2f878a6274a012504108d01bd2237dc665a
Closes-bug: #1351522"
825a90bdb4ff2b6c08ef6717d350cc8b9d654120,2014-09-12 16:49:39-04:00,"Remove the Cisco Nexus monolithic plugin

The Cisco Nexus monolithic plugin does not work without the Open
vSwitch plugin. The Open vSwitch plugin is scheduled to be removed
as per #1323729. This patch removes the Nexus Hardware switch
related plugin code. The N1KV virtual switch related code will
still remain in the tree as it doesn't depend on Open vSwitch
plugin.

Closes-Bug: #1350387
Change-Id: I2542e92c25e9280e975c3903afb9114e850a966a"
6a6532152782ae92f0e7cdf9b80a4940aea7e109,2014-09-13 09:29:37+02:00,"Stop using intersphinx

Remove intersphinx from the docs build as it triggers network calls that
occasionally fail, and we don't really use intersphinx (links other
sphinx documents out on the internet)

This also removes the requirement for internet access during docs build.

This can cause docs jobs to fail if the project errors out on
warnings.

Change-Id: I71e941e2a639641a662a163c682eb86d51de42fb
Related-Bug: #1368910"
f1507d080d9840e4cb6c1d5cfe5a4b6c1443bd8f,2014-09-14 13:27:01+02:00,"Stop ignoring 400 errors returned by ODL

This commit stops ignoring 400 (Bad Request) HTTP codes returned by ODL
in create and update operations. It also modifies sendjson() because it
doesn't ignore any HTTP error code now.

Change-Id: Id0db2c0c1d8fddfbd16b3ce9476a2358e2ef1e49
Closes-Bug: #1369239"
5a36f0ad24903a3a8ec213840ab164834917a32e,2014-09-14 22:50:18-07:00,"Avoid an extra database query in schedule_snat_router

bind_snat_servicenode already knows the chosen_agent.  By waiting
until after it is called, we can use it to avoid another db query.

Closes-bug: #1353266
Closes-bug: #1356639
Co-Authored-By: Swaminathan Vasudevan <swaminathan.vasudevan@hp.com>

Change-Id: Iba5668b2717e188d5289ede982bfc1b46f4eeb5b"
bf4a0199a73374d786e3a5bda770fd8545ebc4e9,2014-09-15 15:51:14+08:00,"Don't create unused ipset chain

when a security group don't have members, it should not create corresponding
ipset chain.

Change-Id: Ia04ffb3ac539c9a89a882e6dd91f373cb67c6f8b
Closes-bug: #1369431"
50c65d16bee8e6e46840f232519e92d9ba9989b4,2014-09-15 08:47:36+00:00,"BSN: Add context to backend request for debugging

Include the request context with calls to the backend
Big Switch controllers to assist with event correlation
and debugging object provenance. The auth token is
stripped since this information is sensitive and
these requests will appear in debug logs.

This also removes mutable objects from default arguments
in some of the server manager function definitions that
were interferring with the new use of the headers dict.

Closes-Bug: #1364696
Change-Id: I5b80b1596cc145742457b3603cbcd67f6e0d9f36"
22bec67395b52a879ad4eb37b150eead9d4bb444,2014-09-15 08:41:09-07:00,"Tunnel ID range validation for VXLAN/GRE networks

Currently, there is no check which validates the values of
tunnel range for VXLAN/GRE networks. The VXLAN VNI is 24 bit
which have range between 1 to 2^24 - 1. Similarly, GRE key field
is 32 bit which have range between 1 to 2^32 - 1.

Closes-Bug: #1306488

Co-Authored-By: romilg romilg@hp.com

Change-Id: Idb3d0f41166df589a1e90394d9319901b5f9b439"
bb1e89efbdbafed7275d01409bf3f55cbe187da5,2014-09-15 13:17:39-07:00,"Fix DVR to service DHCP Ports

This fix ensures that DHCP Ports that are
available on DVR routed subnets, are serviced
by DVR neutron infrastructure.

Here servicing by DVR means, creation of
DVR namespaces on such nodes holding DHCP
Ports and also applying DVR specific OVS
Rules to the br-int and br-tun bridges on
such nodes, to enable traffic to be routed
via DVR to such DHCP Ports.

Closes-Bug: #1358718

Change-Id: Ib6d5fbf883d6698f34f3a3b722e426e3285a5736"
b0b7b66495a556af939cc62e02b8b60462232172,2014-09-16 08:41:22+08:00,"Neutron metering does not check overlap ip range

Neutron does not return ""MeteringLabelRuleOverlaps"" error, when the
remote ip ranges in the meter label rules are overlapped.

Change-Id: I4c2536a7d38b5f6d311db365c8c108d5367705a7
Closes-bug: #1361264"
dd5c73450da908d95724e20eb3be09bc936cb551,2014-09-16 06:46:07+00:00,"ofagent: Ignore unknown l2pop entry removals

l2pop can send us entry removal without the corresponding addition.
Gracefully ignore it instead of crashing.

Closes-Bug: #1357198
Change-Id: I5a0cc44ba62faf15d6fe3730a9532a3826647820"
a2ef082cb0b25d14595a8810adb16df3f9661e43,2014-09-16 06:56:30-04:00,"Access correct key for template name

When an exception occurs while loading the config agent driver, the
handler tries to log a message, but accesses the wrong key to get the
template name. This causes another exception, which masks the original
exception.

This change accesses the correct key and performs logging inside a
with block to (defensively) preserve the exception context.

Change-Id: I3991bc4c509bbd8d68f7a1c8c8314404f2e0eafa
Closes-Bug: #1368900"
59d4c264bdcf056eb44d9d137336fde7c00f3a1b,2014-09-16 17:28:55+02:00,"NSX plugin: set VNIC_TYPE port binding attribute

A recent change has made this attribute required for nova
integration.
This patch adds this attribute to responses generated by the NSX
plugin, and also ensures relevant unit tests are executed for the
vmware NSX plugin.

Change-Id: Ieebab01b406909f66a40cc683763292a9ef6f218
Closes-Bug: #1370112"
485c174fc7e52e697d1d73a96cd924c2e3a04414,2014-09-17 12:44:21+05:18,"Separate Configuration from Freescale SDN ML2 mechanism Driver

- In the current implementation, CRD configuration is existing
  within the code of ML2 mechanism driver.

- When any other plugin/driver (like, Freescale FWaaS Plugin) need
  to use this configuration, it needs to duplicate the complete configuration.

- So the CRD configuration is moved to a separate file for use
  in other plugin/drivers.

- Unit testing of this MD is also updated.

Closes-Bug: #1368033

Change-Id: I488fee47803a494aae9df42f9c59fffa9843e727"
d675168a2ee8d968f7177ec31969e9db8d6bffab,2014-09-17 01:37:23-07:00,"Stop exception log in Big Switch unit tests

Reduce unit test log sizes by removing stack trace
exception logging in Big Switch unit tests.

Closes-Bug: #1370898
Change-Id: Id808edb5db567db31b6c1366e20948683f20118a"
2f838556a845ca183d152c6d95c11dade9024cba,2014-09-17 10:54:49-07:00,"Deletes FIP agent gw port when last VM is deleted

This patch deletes the FIP agent gateway port in
the plugin, when the last VM with FIP using this
FIP agent gw port on a Compute node gets deleted.

Closes-bug: #1367588

Change-Id: I71a9fa48544fa4bbd08ac6d83c99e6542c818009"
1d4e13574574472e299296892d7c9e8f706aea67,2014-09-17 18:43:40+00:00,"Fix to delete user and group association in Nuage Plugin

After a router delete operation, the attached zone to that
router is also deleted. Got rid of code that tried to do
a get operation on the nuage_zone after router delete
operation.
Closes-Bug: #1367864

Change-Id: I01753a472200a961cdcecee703616fd3239abd3c"
48ec1fbfc3a96e1bac36d9089895966dee249538,2014-09-17 19:57:41+00:00,"Set dsvm-functional job to use system packages

The functional job was breaking due to the interaction between
devstack installing neutron system-wide in editable mode (pip install
-e) and tox packaging in the same path.  Installing in editable
mode meant that neutron.egg-info/PKG_INFO could be updated (in this
case by tox) to change the installed version of the neutron package
without updating scripts that depended on the installed version
(e.g. rootwrap).  This fix is to set the dsvm-functional env to
use system packages and avoid having tox update PKG_INFO.

Change-Id: Icc38cacd69bc5843ccfcc60237a7102df6d8597f
Closes-bug: #1370347"
0bd4472ef7bdb9d94f988669f34f7eaa53ca0a89,2014-09-18 17:10:23+03:00,"HA routers master state now distributed amongst agents

We're currently running with no pre-emption, meaning that
the first router in a cluster to go up will be the master,
regardless of priority. Since the order in which we sent
notifications was constant, the same agent hosted the
master instances of all HA routers, defeating the idea
of load sharing.

Closes-Bug: #1365429
Change-Id: Ia6fe2bd0317c241bf7eb55915df7650dfdc68210"
d144cb8ff422e16c5917c87471a46fd095fd1856,2014-09-18 18:53:58+04:00,"Only setup dhcp interface if dhcp is not active on network

When enabling (DhcpLocalProcess.enable()) dhcp for a network the agent
first sets dhcp interface, then checks if dhcp is curently active and
if it's true then the agent restarts dhcp.
Restart (DhcpBase.restart()) first disables dhcp and then enables it again
by calling DhcpLocalProcess.enable() recursively which in turn sets
dhcp interface again (it doesn't see the port created earlier as network
is not re-fetched from db). This leads to duplicate dhcp interface
for the network.

The fix is to only setup dhcp interface if dhcp is not active.

Closes-Bug: #1339968

Change-Id: I3a6d2fd5b18a97138ac5b699ecd4d4b30dbdbacb"
f92d1300e1aca68b39b927282af038acc68c5013,2014-09-18 12:03:08-07:00,"Fix 500 error on retrieving metadata by invalid URI

An invalid URI should return a BadRequest error rather
than making the metadata proxy bomb out.

Closes-bug: #1371160

Change-Id: Ifb495f9e8929062a0c24d090c3e702109a38803a"
979d8118577c59a2dfe8c3ebd268fb3863aa4b26,2014-09-18 23:38:52+00:00,"Do not assume order of device_ids set elements

This fixes the test_ancillary_bridges_multiple unit test that breaks with a randomized
PYTHONHASHSEED (see the bug report).
The test assumed that the device_ids set had
elements in a particular order. Found with PYTHONHASHSEED=2455351445.

The fix refactors the pullup_side_effect function so that it checks if the
device_id exists before returning the bridge.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: Ie6b44d1d820ebb186036ffcd04ea2104dd384e94"
9cd96fe116ac1d990410cb1135473bd15c1f7dce,2014-09-18 19:18:09-07:00,"DVR to delete router namespaces for service ports

Earlier merge that enabled LBaaS in DVR with review #114141
had not covered the removal of DVR router namespace on
VIP Port deletion in ml2 plugin.

Here we fix the ml2 plugin to attempt namespace removal for
all dvr serviced ports.

Change-Id: Ie7930ebedb12212886d45294132fefff7296e104
Closes-Bug: #1364839"
7ca696c7355ba93dd89e69a76162c6d9a3429a2b,2014-09-19 12:11:24-07:00,"Fix foreign key constraint error on ml2_dvr_port_bindings

Get the port before creating the DVR binding. This should guarantee that, if
the port is found, no foreign key violation is triggered.

Closes-bug: #1371696

Change-Id: I90c3d6460c14ef27823be95bc26aae38eba4879a"
271a280d0e8f86b96d24970f588184b1cfc34ef8,2014-09-19 14:23:19-07:00,"Use dict_extend_functions to populate provider network attributes

Use dict_extend_functions mechanism to handle populating additional
provider network attributes into Network model in Nuage plugin.

Change-Id: I72e5afe3d03ae223fcd8e75f1f4f07624c3a7daf
Closes-Bug: #1362308"
e73f8da072cb41559ecee7f29f864a10db475444,2014-09-21 17:41:38+09:00,"Set vif_details to reflect enable_security_group

While plugging vif, VIFDriver in Nova follows ""ovs_hybrid_plug"" and
""port_filter"" in ""binding:vif_detail"" which is passed from Neutron, but
those are always true.  This patch make ML2 OVS mech driver set those
param depends on enable_security_group flag.  It enables users to avoid
ovs_hybrid plugging.

This patch also fixes the same issue in the following plugins/drivers:
  * NEC Plugin
  * BigSwitch Plugin
  * Ryu Plugin
  * ML2 Plugin - OFAgent Mech Driver

Closes-Bug: #1336624
Change-Id: I2b7fb526a6f1b730ad65289307b24fd28b996e1b"
d1f1722e0edb63c73b60c80abafa63749349cd8e,2014-09-22 07:47:33+09:00,"ofagent: Drop log level of tenant-triggerable events

To prevent evil tenants from flooding logs.

Closes-Bug: #1372196
Change-Id: I617e9fedf8a8c5e95c6067b716c83778d4d8cc7e"
0cc7444f7577e53f14068a2cb35431713d6d21a0,2014-09-22 11:45:32+04:00,"Add logging for enforced policy rules

There are a lot of policy rules which should not necessarily
be explicitly specified in policy.json to be checked while enforcement.
There should be a way for an operator to know which policy rules are
actually being enforced for each action.

Added a unit test.

Change-Id: I261d3e230eced9ea514b35cc3f5f8be04f84c751
Closes-Bug: #1356679"
086496bfc45e01cd2905a074d526a7d513bf4ec2,2014-09-22 05:10:18-07:00,"Mock out all RPC calls with a fixture

Mock out the rpc proxy calls used by various agents to
prevent unit tests from blocking for 10+ seconds while waiting
for a timeout. This happened with the OVS agent unit tests
recently in Change-ID Idd770a85a9eabff112d9613e75d8bb524020234a.

This change results in a reduction from 330.8 seconds to 2.7 seconds
for the neutron.tests.unit.openvswitch.test_ovs_neutron_agent
test module.

Closes-Bug: #1372076
Change-Id: I5e6794dc33c64c8fe309d8e72a8af3385c7d4442"
c756d3c3ca9e90fab5e1d3ff37af33972747ba70,2014-09-22 12:18:11-05:00,"Eliminate OrderedDict from test_api_v2.py

Neutron cannot possibly be passing tests under Python 2.6, as
neutron/tests/unit/test_api_v2.py is referencing
collections.OrderedDict, which does not exist in Python 2.6.
Since there is no reason to use an OrderedDict in this case,
this replaces it with a simple dict.

Change-Id: I1b9886f508c4c8b96cf50c50f157c1960da433fc
Closes-Bug: #1372571"
32ea2e349decd750e25cb00a8c907b8f73f795f3,2014-09-23 01:55:54-07:00,"Security groups: prevent race for default security group creation

When a VM is booted via the Nova the client connection is created
with an admin user. This causes problems when creating the neutron
port. That is, there may be a race for the creation of the default
security group for the tenant.
The problem was introduced by commit acf44dba26ca8dca47bfb5fb2916807f9f4e2060

Change-Id: Ie0199c71231a322704f1f49995facde09c92da25
Closes-bug: #1372570"
74d10939903984d5f06c1749a8707fa3257e44ff,2014-09-23 15:18:51+04:00,"Forbid regular users to reset admin-only attrs to default values

A regular user can reset an admin-only attribute to its default
value due to the fact that a corresponding policy rule is
enforced only in the case when an attribute is present in the
target AND has a non-default value.

Added a new attribute ""attributes_to_update"" which contains a list
of all to-be updated attributes to the body of the target that is
passed to policy.enforce.

Changed a check for whether an attribute is explicitly set.
Now, in the case of update, the function should not pay attention
to a default value of an attribute, but check whether it was
explicitly marked as being updated.

Added unit-tests.

Closes-Bug: #1357379
Related-Bug: #1338880
Change-Id: I6537bb1da5ef0d6899bc71e4e949f2c760c103c2"
7af293ea527d5f904afcc2c3596bb151a5c3c017,2014-09-23 12:37:58+00:00,"Fix entrypoint of OneConvergencePlugin plugin

In setup.cfg entrypoint of OneConvergencePlugin is set incorrectly.
Used '.' instead of ':'.

Closes-bug: #1372810

Change-Id: Ic1e154cfcf8b13f021b0635238e07a0459a25a9e"
e7f0b56d74fbfbb08a3b7a0d2da4cefb6fe2aa67,2014-09-23 14:02:30+01:00,"Retry getting the list of service plugins

On systems that start both neutron-server and neutron-l3-agent together,
there is a chance that the first call to neutron will timeout. Retry upto
4 more times to avoid the l3 agent exiting on startup.

This should make the l3 agent a little more robust on startup but still
not ideal, ideally it wouldn't exit and retry periodically.

Change-Id: I2171a164f3f77bccd89895d73c1c8d67f7190488
Closes-Bug: #1353953
Closes-Bug: #1368152
Closes-Bug: #1368795"
739b3cac3210e6a1ce942238ca3efa3ddf49cb4d,2014-09-23 08:13:46-07:00,"Remove the translation tag for debug level logs in vmware plugin

There is no need to translate the debug level logs in vmware plugin for neutron.

Closes-bug: #1372862

Change-Id: If07c06cc3a1eb3dd147191bb8ab9198d4198cd69"
d5b90315d2ff647179fd91512377a7f21a57ef0a,2014-09-23 17:46:20+00:00,"Do not assume order of body and tags elements

This fixes the l2gateway unit test that breaks with a randomized PYTHONHASHSEED
(see the bug report).

The test assumed that the body dict from self._create_expected_req_body
had elements (including contents of tags list) in a particular order.
Found with PYTHONHASHSEED=2455351445.
The fix ensures that body is in predictable order.

Partial-bug: #1348818
Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: I423b68aff58486c113d0e5c5f4726f9eabf6920e"
411836b5411411a6046043e0264aaa7b6f5760f0,2014-09-23 18:59:16+00:00,"Remove RPC notification from transaction in create/update port

Removing notifications to the L3 agent from within the transaction in
create_port and update_port eliminates many lock wait timeouts in the
dvr check queue job and in scale testing locally.

Since this patch leaves context unused in _process_port_binding, the
argument is removed from the method.

Closes-Bug: #1371732

Change-Id: Ibd86611ad3e7eff085d769bdff777a5870f30c58"
4478eee9e55193746b43ad5158be5fee29aef8a3,2014-09-23 15:08:34-04:00,"Do not lookup l3-agent for floating IP if host=None, dvr issue

If a floating IP has been associated with a port, but the port
has not been associated with an instance, attempting to lookup
the l3-agent hosting it will cause an AgentNotFoundByTypeHost
exception.  Just skip it and go onto the next one.

Change-Id: If3df9770fa9e2d2eada932ee5f243d3458bf7261
Closes-Bug: #1370795"
1b66e11b5d8c0b3de0610ca02c3e10b6f64ae375,2014-09-24 17:37:23+08:00,"Create DHCP port for IPv6 subnet

There is a bug in dhcp agent code that when first port is created
in an IPv6 subnet, DHCP port is not automatically created.

This fix resolves this problem by removing the IP version check
in configure_dhcp_for_network method.

Change-Id: If3f405d367a7099d9f33d72d11ffcb7a393abe23
Closes-Bug: #1367500"
55f6a8ac5d234f004ef06add87d16284e9f048d3,2014-09-24 10:08:05+00:00,"Fix KeyError when getting secgroup info for ports

The patch fixes a regression introduced with secgroup rpc refactor by
handling the case when security group contains rules for only IPv4 or
IPv6.

Change-Id: I02b174757bfc796a81cdb482c55ba7f9e954131d
Closes-bug: #1372337"
bc61dd0e3493b0e5c5b2e0e1e9d16b65532c6c4a,2014-09-24 05:52:45-07:00,"Remove default dictionary from function def

Removes an unnecessary dictionary created in the default
parameters definition for the execute function in ip_lib.

Partial-Bug: #1327473
Change-Id: I9b60e87d1043aa67a14675dad2185395df940301"
3ca85460a178a18dea60399fd369ed84b17721dc,2014-09-25 10:30:14+04:00,"Fix quota limit range validator

In Quota model limit is defined with Integer type which in case of
MySQL and PostgreSQL is always stored in 4 bytes. At the same time,
the current validator checks that the value does not exceed sys.maxsize
which depends on whether the system is 32-bit or 64-bit based.

In SQLite Integer can be stored in 1, 2, 3, 4, 6, or 8 bytes depending
on the magnitude of the value. Nevertheless, assume that it can not
exceed 4 bytes for consistency.

Limited the upper bound of the validator with 2**31 - 1.

Added a unit test.

Closes-Bug: #1338479
Change-Id: Icefa2fc228e4255a022d586cab4590607953d1ee"
5be55ac161adfec9085121fe59ea3bf59daa92cf,2014-09-25 08:46:50-07:00,"fix dvr snat bindings for external-gw-clear

When router_gateway_clear happens, the
schedule_router calls the unbind_snat_servicenode
in the plugin. This will clear the agent binding
from the binding table. But the l3-agent was
expecting the ex_gw_port binding to be present.
The agent needs to check its cache of the
router['gw_host_port'] value now.

Change-Id: I051fb97d802b0508b30683a33673b85f5ab24000
Closes-bug: #1373524"
45a523681f2136f8fefb6c3da44540decd6a0fda,2014-09-25 12:13:06-07:00,"Revert ""Cleanup floatingips also on router delete""

This reverts commit c3326996e38cb67f8d4ba3dabd829dc6f327b666.

The patch being reverted here addresses an issue that can no longer be
reproduced, in that under no circumstances, I can make the FIP lie around
before deleting a router (which can only be done after all FIP have been
disassociated or released).

Unless we have more clarity as to what the initial commit was really meant
to fix, there is a strong case for reverting this patch at this point.

Closes-bug: #1373100

Change-Id: I7e0f80e456ff4d9eb57a1d31c6ffc7cdfca5a163"
0d8911115e1b722da2f1e92f444e53b22223ee32,2014-09-28 22:03:46+04:00,"Raise exception if ipv6 prefix is inappropriate for address mode

Address prefix to use with slaac and stateless ipv6 address modes
should be equal to 64 in order to work properly.
The patch adds corresponding validation and fixes unit tests
accordingly.

Change-Id: I6c344b21a69f85f2885a72377171f70309b26775
Closes-Bug: #1357084"
9a6c073656a7e0b1a26b2bca0ba381489d04e322,2014-09-28 22:16:57+04:00,"Add missing methods to NoopFirewallDriver

The fix adds missing methods into generic Firewall class
and in NoopFirewall driver class.

Change-Id: I6402448075ed414434dc007f5c403fc85b6b1456
Closes-Bug: #1369685
Related-Bug: #1365806"
ea3a0a428fac308f9ab65d0beb733de380cace56,2014-09-29 02:24:45-07:00,"Disallow unsharing used firewall policy

When admin policy p1 is shared and is used by firewall f1 of different tenant,
then updating p1 with shared=False should not be allowed as it is in use.

Change-Id: I7c753f9d8a25a7edc40233316398475c8ad3efe9
Closes-bug: #1334994"
2abb77b4dadd4150f554f134ec99b07c2b28900f,2014-09-29 11:00:51+00:00,"Do not assume order of report list elements

This fixes the test_report_multiple_services unit test that breaks with a
randomized PYTHONHASHSEED (see the bug report).

The test assumed that the report list from self.driver.report_status() had
elements in a particular order. Found with PYTHONHASHSEED=2455351445.

The fix refactors the test case to handle an unsorted report list by
sorting it before checking equality.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: I542c3818821fa2f6e460fd254a3842530ecea8d9"
c048d3fb480cbd9033152c745802691876b7ba0d,2014-09-29 08:17:08-07:00,"Update migration scripts to support DB2

Three of the migration scripts are causing failures with DB2.

- DB2 doesn't support nullable column in primary key

- Hard coded SQL statements which use False/True as Boolean arguments
  are not compatible with DB2. In DB2, Boolean columns are created as
  small integer with a constraint to allow only 0 & 1.

- Hardcoded update rows from other table sql is not compatible with DB2

- Foreign key constraints require additional handling

Co-authored-by: Rahul Priyadarshi <rahul.priyadarshi@in.ibm.com>
Change-Id: I82e2d1c522b81fed90a1e5cc6f2321f80797cf7b
Closes-Bug: #1328019"
5247f5cdf15bad4c62bbf854e30716fcf00a1d2a,2014-09-30 11:55:06+04:00,"Implement ModelsMigrationsSync test from oslo.db

Add tests to verify that database migrations produce
the same schema as the database models.

Also for MySQL, check that all tables are configured to use InnoDB
as the storage engine.
These tests make use of the ModelsMigrationsSync test class from
oslo.db and the load_tests protocol from Python unittest.

Closes-bug: #1346444

Change-Id: Ic0e7eb37c30cc5e94cbdbddf07a6dc1ebf377c17"
eacd1fc6b2cb3175f603cdd80d7b59dbe9b0719b,2014-09-30 10:17:41-04:00,"ML2 Cisco Nexus MD: Fix UT to send one create vlan message

With the commit of https://review.openstack.org/#/c/113009,
test_nexus_add_trunk needs to have the device_id set to
a unique value. Combining test_nexus_add_trunk and
test_nexus_enable_vlan_cmd to reduce duplicate code,
which fixes the original issue.

Change-Id: I4191a6880ec0f43365aacb638a92a0dd3e1e80aa
Closes-Bug: 1364976"
36e8cbb34e78ff367cb501b8c494d9a02228251d,2014-09-30 08:38:53-07:00,"ML2: move L3 cleanup out of network transaction

Move _process_l3_delete out of the delete_network
transaction to eliminate the semaphore deadlock that
occurs when it tries to delete the ports associated
with existing floating IPs.

It makes more sense to live outside of the transaction
anyway because the operations it performs cannot be
rolled back only in the database if the L3 plugin makes
external calls for floating IP creation/deletion.
e.g. if delete_floatingip is successful, it may have
deleted external resources and restoring the DB records
would make things inconsistent.

If a failure to delete the network does occur, any cleanup
done by _process_l3_delete will not be reversed.

Closes-Bug: #1374573
Change-Id: I3ae7bb269df9b9dcef94f48f13f1bde1e4106a80"
cf92bbead9b25ee40a3336bd76110b3733a4f7ee,2014-09-30 12:18:55-06:00,"Add admin tenant name to nova notifier

This change introduces the ability to use the nova admin
tenant name with the nova notifier in place of the nova
admin tenant id which may not be available when the neutron
service is being configured as is the case with tripleo
installations where the neutron service is configured and
started before the nova admin tenant has been configured in
keystone and thus does not have a known id.

DocImpact
Introduces the nova_admin_tenant_name configuration entry as
an optional configurable value in neutron.conf.  If the
nova_admin_tenant_name is configured and the nova_admin_tenanat_id
is not configured, a performance impact may be seen because
keystone will become involved in communication between neutron
and nova.

Change-Id: I33701d4dc9bf61595e44a49050c405ebca779091
Closes-Bug: #1331566"
c7baaa068ed1d3c8b02717232edef60ba1b655f6,2014-10-01 06:55:27-07:00,"Allow reading a tenant router's external IP

Adds an external IPs field to the external gateway information
for a router so the external IP address of the router can be
read by the tenant.

DocImpact

Closes-Bug: #1255142
Change-Id: If4e77c445e9b855ff77deea6c8df4a0b3cf249d4"
20dbbab61c1159a3dc6ef838ec65b04f7e9cf560,2014-10-01 16:31:27-07:00,"Fix pid file location to avoid I->J changes that break metadata

Changes in commit 7f8ae630b87392193974dd9cb198c1165cdec93b moved
pid files handled by agent/linux/external_process.py from
$state_path/external/<uuid>.pid  to $state_path/external/<uuid>/pid
that breaks the neutron-ns-metadata-proxy respawn after upgrades
becase the l3 or dhcp agent can't find the old pid file so
they try to start a new neutron-ns-metadata-proxy which won't
succeed, because the old one is holding the port already.

Closes-Bug: #1376128
Change-Id: Id166ec8e508aaab8eea35d89d010a5a0b7fdba1f"
e90d6d6c833db51964037afd1c4aa1f521ee380a,2014-10-02 11:51:21+03:00,"Iterate over same port_id if more than one exists

In certain cases where multiple ports can have the same
external_ids:iface_id property, the ovs agent will arbitrarily choose
one and ignore the rest. In case the chosen port isn't on the
integration bridge the ovs agent is managing, an error is returned to
the calling function. This is faulty since one of the other ports may
belong to the correct bridge and it should be chosen instead.

This is interesting for future L3 HA integration tests, where 2
different instances of l3 agents are needed to run on the same machine.
In this case, both agents will register ports which have the same
iface_id property, but obviously only one of the ports is relevant for
each agent.

Closes-bug: #1370914
Related-bug: #1374947
Change-Id: I05d70417e0f78ae51a9ce377fc93a3f12046b313"
28660b19f5ef861d7d2ceba04faa7f263bdf8a37,2014-10-02 11:53:18+03:00,"L3 agent should always use a unique CONF object

The l3 agent accepts an oslo configuration in its constructor and uses
it throughout the code, but there are some references to the global
configuration object held by the oslo library. Since HA functional
tests need to create two agents, the configuration should be consistent
throughout the code.

The important difference between the agents is their 'host' value so
that they create different namespaces, and 'state_path' value so the
agents get their own filesystem root.

Co-Authored-By: Assaf Muller <amuller@redhat.com>
Related-bug: #1374946
Change-Id: I3326889482681dd631ca59271ebd6a5d5129ae70"
ea202faec972d55b169f1c596209b4129aa64caf,2014-10-03 07:31:27+00:00,"Add comments to iptables rules to help debugging

Adds comments to some of the iptables rules generated
by neutron to assist with debugging.

DocImpact

Partial-Bug: #1265493
Change-Id: I7d9e37b9a43589dd7b142869b86fa15cb3fb329c"
467bd9476defbb028f0fbfa26f01f76c32b701cd,2014-10-05 13:29:21+03:00,"L3 Agent should generate ns_name in a single place

Currently the l3 agent has 2 places where it allows generating ns_name
of specific router_ids (ie. qrouter-<router_id>): in the RouterInfo's
constructor, and in _cleanup_namespaces. This patch proposes a
unification of this creation code with a property which lives in
RouterInfo's namespace. A simpler fix was also made for snat_ns_name.

This patch also offers a single way to initialize a new RouterInfo.

Related-bug: #1374946
Related-bug: #1374947
Change-Id: Ia028236b73a22ff534acee00b46c86b134dc987e"
dea795263eb2968519d4235a8de98329c329e0e8,2014-10-06 12:18:55+03:00,"Divide _cleanup_namespaces for easy extensibility

This division of the function to 2 different functions allows for
easier overwriting in the l3 test agent used by the HA functional
tests, and later by the integration tests.

Related-bug: #1374947
Change-Id: I8f277759747c8a142f5c023aa3511b00a886348c"
24e4110eb284078775496501ff81630eb1619c11,2014-10-07 04:41:07-07:00,"Big Switch: Don't clear hash before sync

This patch removes the step of clearing the consistency
hash from the DB before a topology sync. This will ensure
that inconsistency will be detected if the topology sync
fails.

This logic was originally there to make sure the hash header
was not present on the topology sync call to the backend.
However, the hash header is ignored by the backend in a sync
call so it wasn't necessary.

Closes-Bug: #1379510
Change-Id: I2d58fa2aea3b692834d64192d06ace727c7df8a0"
0a64b61f8cbf41e1bf74961c235f03ac6cc6ead6,2014-10-07 15:58:52+00:00,"Add missing methods to NoopFirewallDriver

The fix adds missing methods into generic Firewall class
and in NoopFirewall driver class.

Change-Id: I6402448075ed414434dc007f5c403fc85b6b1456
Closes-Bug: #1369685
Related-Bug: #1365806
(cherry picked from commit 9a6c073656a7e0b1a26b2bca0ba381489d04e322)"
6e79981b7caadbbbb2119461034dfe7b4d1c1a64,2014-10-07 16:03:14+00:00,"Retry getting the list of service plugins

On systems that start both neutron-server and neutron-l3-agent together,
there is a chance that the first call to neutron will timeout. Retry upto
4 more times to avoid the l3 agent exiting on startup.

This should make the l3 agent a little more robust on startup but still
not ideal, ideally it wouldn't exit and retry periodically.

Change-Id: I2171a164f3f77bccd89895d73c1c8d67f7190488
Closes-Bug: #1353953
Closes-Bug: #1368152
Closes-Bug: #1368795
(cherry picked from commit e7f0b56d74fbfbb08a3b7a0d2da4cefb6fe2aa67)"
a56a35572d7b7d4b534825fe7b4f681028121a74,2014-10-07 16:04:48+00:00,"Raise exception if ipv6 prefix is inappropriate for address mode

Address prefix to use with slaac and stateless ipv6 address modes
should be equal to 64 in order to work properly.
The patch adds corresponding validation and fixes unit tests
accordingly.

Change-Id: I6c344b21a69f85f2885a72377171f70309b26775
Closes-Bug: #1357084
(cherry picked from commit 0d8911115e1b722da2f1e92f444e53b22223ee32)"
b1282b8410ca546bfa15e1174ab9bafe1c29ee43,2014-10-07 16:13:29+00:00,"Allow reading a tenant router's external IP

Adds an external IPs field to the external gateway information
for a router so the external IP address of the router can be
read by the tenant.

DocImpact

Closes-Bug: #1255142
Change-Id: If4e77c445e9b855ff77deea6c8df4a0b3cf249d4
(cherry picked from commit c7baaa068ed1d3c8b02717232edef60ba1b655f6)"
29250949012e9c0a60b0ddb56ddbf18d7b68106b,2014-10-07 15:22:55-04:00,"Teach DHCP Agent about DVR router interfaces

When DVR is enabled and enable_isolated_metadata=True,
the DHCP agent should only inject a metadata host route
when there is no port with the gateway IP address configured
on the subnet.  Add a check for DEVICE_OWNER_DVR_INTERFACE
when we look at each port's device_owner field, otherwise
it will always add this route to the opts file when DVR
is enabled.

Change-Id: I3ff3bb85105b8215b36535983016d8c0ff3d8cb7
Closes-bug: #1377307"
abe30e973442271b0093eaa61c59d171a68a2028,2014-10-07 20:36:13+00:00,"Forbid update of HA property of routers

While the HA property is update-able, and resulting router-get
invocations suggest that the router is HA, the migration
itself fails on the agent. This is deceiving and confusing
and should be blocked until the migration itself is fixed
in a future patch.

Change-Id: I4171ab481e3943e0110bd9a300d965bbebe44871
Related-Bug: #1365426
Closes-Bug: #1378525"
234c9e6d66c867e87f6e0eb8b0fa84240f6f8c4a,2014-10-07 20:36:27+00:00,"Forbid update of HA property of routers

While the HA property is update-able, and resulting router-get
invocations suggest that the router is HA, the migration
itself fails on the agent. This is deceiving and confusing
and should be blocked until the migration itself is fixed
in a future patch.

Change-Id: I4171ab481e3943e0110bd9a300d965bbebe44871
Related-Bug: #1365426
Closes-Bug: #1378525
(cherry picked from commit 1fd7dd99ca7e5e9736200360aa354cada7fb43ff)"
8fac816e407dd87d4c940d2a0c873f78933b8cdc,2014-10-08 14:59:26+01:00,"Do not assume order of lvm.tun_ofports set elements

This fixes the test_fdb_add_flows unit test that breaks with a randomized PYTHONHASHSEED
(see the bug report).

The test assumed that the lvm.tun_ofports set had
elements in a particular order. Found with PYTHONHASHSEED=2455351445 and
1595538922.

The fix sorts the actions output string so that it is always sorted when the
outputs are compared.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: I86b453a93f3ba09212709caf462cf3bfc5b21ee9"
8a08a3cb47d0dd69d4aa2e8fa661d04054fe95ae,2014-10-08 13:16:54-04:00,"Disable PUT for IPv6 subnet attributes

In Juno we are not ready for allowing the IPv6 attributes on a subnet
to be updated after the subnet is created, because:
- The implementation for supporting updates is incomplete.
- Perceived lack of usefulness, no good use cases known yet.
- Allowing updates causes more complexity in the code.
- Have not tested that radvd, dhcp, etc. behave OK after update.

Therefore, for now, we set 'allow_put' to False for the two IPv6
attributes, ipv6_ra_mode and ipv6_address_mode. This prevents the
modes from being updated via the PUT:subnets API.

Closes-bug: #1378952

Change-Id: Id6ce894d223c91421b62f82d266cfc15fa63ed0e"
dd35d64812fd0ad02e7a00432073d141049e7107,2014-10-08 15:38:19-04:00,"update ml2_migration to reflect optional methods

This change conditionally executes the schema methods for versions that
support them.

Change-Id: I8a51ac04e62dfcfe1e0a2e69a17664d154f0d1d7
Closes-Bug: #1378732"
54be5a9e977ea344cc53addb87635ddba0cfd815,2014-10-09 12:03:23+02:00,"Skip IPv6 Tests in the OpenContrail plugin

Similar to the way we are skipping tests in the OneConvergence plugin,
introduced by Kevin Benton in 9294de441e684a81f6e802ba0564083f1ad319d6.

Partial-Bug: #1378952

Change-Id: I1650b0708af73ce63e92c55bc842607bb69efe60
(cherry picked from commit 67962943969bc737a3f680a0defc2fc9df03c429)"
5610343d5aab876480cbe15c8d77631e67d6142f,2014-10-09 12:04:07+02:00,"Disable PUT for IPv6 subnet attributes

In Juno we are not ready for allowing the IPv6 attributes on a subnet
to be updated after the subnet is created, because:
- The implementation for supporting updates is incomplete.
- Perceived lack of usefulness, no good use cases known yet.
- Allowing updates causes more complexity in the code.
- Have not tested that radvd, dhcp, etc. behave OK after update.

Therefore, for now, we set 'allow_put' to False for the two IPv6
attributes, ipv6_ra_mode and ipv6_address_mode. This prevents the
modes from being updated via the PUT:subnets API.

Closes-bug: #1378952

Change-Id: Id6ce894d223c91421b62f82d266cfc15fa63ed0e
(cherry picked from commit 8a08a3cb47d0dd69d4aa2e8fa661d04054fe95ae)"
8e76cccb1ed9a248439b1188d1d805649169e46b,2014-10-08 23:57:11+00:00,"Add database relationship between router and ports

Add an explicit schema relationship between a router and its ports. This
change ensures referential integrity among the entities and prevents orphaned
ports.

Change-Id: I09e8a694cdff7f64a642a39b45cbd12422132806
Closes-Bug: #1378866
(cherry picked from commit 93012915a3445a8ac8a0b30b702df30febbbb728)"
9cce0bfdb713c2b975b289d90de6d57b68ca3854,2014-10-09 04:41:33+00:00,"Add Juno release milestone

Change-Id: Iea584b00329d9474c14847db958f8743d4058525
Closes-Bug: #1378855
(cherry picked from commit 4e8a5b7de71ba6f8c050c424613c025310498940)"
48fd90d55f13195cc6331e50da85bf6440f1f8f9,2014-10-09 20:20:11+08:00,"Fix L2 agent does not remove unused ipset set

The patch fixes L2 agent does not remove unused ipset set when security
group contains rules for only IPv4 or IPv6.

Change-Id: I375b1683cd763c0a33dc935558c637874d36ffa1
Closes-bug: #1373287"
93012915a3445a8ac8a0b30b702df30febbbb728,2014-10-09 12:41:00+00:00,"Add database relationship between router and ports

Add an explicit schema relationship between a router and its ports. This
change ensures referential integrity among the entities and prevents orphaned
ports.

Change-Id: I09e8a694cdff7f64a642a39b45cbd12422132806
Closes-Bug: #1378866"
4e8a5b7de71ba6f8c050c424613c025310498940,2014-10-09 13:29:48+00:00,"Add Juno release milestone

Change-Id: Iea584b00329d9474c14847db958f8743d4058525
Closes-Bug: #1378855"
5e9305a6f934549408a9c18480fc1c000126621e,2014-10-09 18:51:13+00:00,"Refactor _process_routers to handle a single router

The method _process_routers no longer handles multiple routers.  The
only caller of this method would construct a list of exactly one
router in order to make the call.  This made the for loop unnecessary.
The method's logic is too heavy for its current purpose.  This commit
removes much of the weight.

The use of the sets in this method is also no longer necessary.  It
became clear that all of it boiled down to ""if the router is not
compatible with with this agent but it is known in router_info from
before then we need to remove it.""  This is an exceptional condition
that shouldn't be handled in this method so I raise an exception and
handle it in process_router_update where other router removal is
handled.  Logging was added for this exceptional condition.

The eventlet pool was also obsolete.  It was used to spawn two methods
and there was a waitall at the end.  The other refactoring made it
clear that the two spawns were mutually exclusive.  There was only one
thread spawned for any given invocation of the method and the eventlet
pool is overkill.

Change-Id: Ibeac591b08565d10b2a9730e25a54f2cd11fc2bc
Closes-Bug: #1378398"
6eaed7f7244bde260fc21c1d29b2e7da74c9c67b,2014-10-10 17:06:04-04:00,"Execute udevadm on other linux installs

When ofa and ovs neutron agents start, they use the linux utility
'udevadm'.  It is passed as an argument with an absolute directory path
which can vary on each linux install.  By removing the directory path,
it will find this utility by way of the user's environment path since
linux executables are configured in each user's path upon user creation.

Change-Id: I2344290d38c7889b8f32d8fb9c5161b09826e037
Closes-bug:  #1367697"
c19a227c0eda5c88a4e0de78878dc6332167c14e,2014-10-10 18:26:14-07:00,"Remove some duplicate unit tests

There are several locations where some unit test mixins are
incorrectly used multiple times with an otherwise same configuration,
which results in pointless re-runs of the same unit test. Similarily,
there are a few tests defined in classes inherited by multiple tests
that don't change behavior in the child tests so they are run multiple
times as well.

This patch eliminates the duplicates and moves some test cases from
their parent class into a subclass when they don't need to be run multiple
times. The result is 221 fewer test runs (~1.5% of the tests run).

Closes-Bug: #1374836
Change-Id: I292091488cd944510fa1250920d41be2a50dabaf"
524981cce05a9b365036c0a1e9810036936d3d5b,2014-10-11 04:59:22-05:00,"Reduce security group db calls to neutron server

Within ovs agent daemon loop, prepare_devices_filter will impose heavy workloads
to neutron server in order to retrieve the security groups message to apply
firewall rules. If agent is configured to use Noopfirewall driver or security
groups are disabled, there is no need for loading the rules from server and
refreshing the firewalls. This will reduce the number of db calls and improve
performance for neutron server in this case.

Change-Id: Id244aab3cac37fc6ed3dc05cbee91cdf9e34d9cc
Closes-Bug: #1365806"
648063881ebfbb54a362ef32d58263fc0f20981c,2014-10-12 20:00:38+11:00,"Compare subnet length as well when deleting DHCP entry

When searching for the DHCP subnet entry to delete, the existing code
compares only the subnet prefix and ignores subnet length.  This could
delete the wrong entry/entries if nested subnets are present.

Change-Id: Icf079c42adeca14ef84ec57dc45a5930fde8786d
Closes-Bug: #1362416"
e40c2ed58ce998fc5aba83ffae8ebefec9403c3b,2014-10-13 12:36:49+02:00,"mock.assert_called_once() is not a valid method

mock.assert_called_once() is a no-op that tests nothing. Instead
mock.assert_called_once_with() should be used (or use
assertEqual(1, mock_obj.call_count) if you don't want to check
parameters).

Borrowed HACKING rule from Davanum Srinivas's nova patch to
prevent it from appearing again.

Change-Id: Idac1d3c89c07e13c9a209663f4e557fcb7547821
Closes-Bug: #1365751
Closes-Bug: #1300265"
2c5f99a4b1376a46b8c1e1f4e82a015c2d29aa1f,2014-10-13 10:01:12-04:00,"Update VPN logging to use new i18n functions

For log messages in neutron/services/vpn and neutron/db/vpn, replace
_() marker functions with log-level-specific marker functions: _LI(),
_LW(), _LE() from oslo.i18n.

Also, remove _() functions for debug log messages as debug level log
messages should not be translated.

Change-Id: I07fcf25bb6344c47e74d6ee23f9bc08e4b560679
Closes-Bug: #1379811"
b28eda57223e492924edb731e24c2e4f64cc0de5,2014-10-13 15:52:27+00:00,"Remove two sets that are not referenced

The code no longer references the updated_routers and removed_routers
sets.  This should have been cleaned up before but was missed.

Closes-bug: #1232525

Change-Id: I0396e13d2f7c3789928e0c6a4c0a071b02d5ff17
(cherry picked from commit edb26bfcddf9d9a0e95955a6590d11fa7245ea2b)"
65b57625c24d86ce632d475e2ba743069ae1d797,2014-10-13 21:41:37+02:00,"Add unique constraints in IPAvailabilityRange

first_ip, allocation_pool_id and last_ip, allocation_pool_id
should be unique in the table.
These constraints are essential to detect concurrent modifications
of the IpAvailabilityRange table if the SELECT ... FOR UPDATE
lock is removed

Change-Id: Iaf2288c0b6bf27e93c03691073d7f505ef24fdd3
Closes-bug: #1373015"
a1fac106479f9c3c5559f8b2cfbc01fe12d3a575,2014-10-14 10:12:59+04:00,"Handle unused set_context in L3NatTestCaseMixin.floatingip_with_assoc

set_context which is passed to floatingip_with_assoc method
is not passed further to self._make_floatingip.

Change-Id: Iecf2ad88e4bad5b1f8fd60668401863bdeecce8f
Closes-Bug: #1378756"
79f1e8a9c1f308586077483d849e66dcdc83144f,2014-10-14 02:16:16-07:00,"Catch exceptions in router rescheduler

Catch and log exceptions in router rescheduling loop
rather than just dying which would stop all future
router rescheduling attempts.

This prevents transient DB connectivity issues from
permanently breaking the rescheduler until the process
restarts.

Closes-Bug: #1375597
Change-Id: I2ab37847074fa6bbdd2b13fd03b8742996dcfc78"
3cd2163d5105faad389bee5175ef446f0bb90289,2014-10-14 09:43:53-07:00,"Race for l2pop when ports go up/down on same host

With l2pop enabled, race exists in delete_port_postcommit
when both create/update_port and delete_port deal with
different ports on the same host, where such ports are
either the first (or) last on same network for that host.
This race happens outside the DB locking zones in
the respective methods of ML2 plugin.

To fix this, we have moved determination of
fdb_entries back to delete_port_postcommit and removed
delete_port_precommit altogether from l2pop mechanism
driver.  In order to accomodate dvr interfaces, we
are storing and re-using the mechanism-driver context
which hold dvr-port-binding information while
invoking delete_port_postcommit.  We loop through
dvr interface bindings invoking delete_port_postcommit
similar to delete_port_precommit.

Closes-Bug: #1372438
Change-Id: If0502f57382441fdb4510c81a89794f57a38e696"
4c2b42e21744be56cbf32aeac6f4b4f1c87de24e,2014-10-14 14:01:24-07:00,"Call DVR VMARP notify outside of transaction

The dvr vmarp table update notification was being called inside
of the delete_port transaction in ML2, which can cause a yield
and lead to the glorious mysql/eventlet deadlock.

This patch moves it outside the transaction and adjusts it to
use an existing port dictionary rather than re-looking it up since
the port is now gone from the DB by the time it is called.

Closes-Bug: #1377241
Change-Id: I0b4dac61e49b2a926353f8478e421cd1a70be038"
06fc675928408e462f01178e0158a72f8518188a,2014-10-14 18:18:15-04:00,"VPNaaS Cisco unit test clean-up

Removed unused args to mock side-effect function and duplicate
constant.

Change-Id: I5409ce86ccaab86213d65f757f19c1bdf9a66929
Closes-Bug: #1381221"
105dba9addfdffecea41cce58f3646d2f2a6a6cc,2014-10-15 14:05:15+09:00,"openvswitch: Remove no longer used options

They are remainders of the recently removed monolithic OVS plugin.
Note: This change does not touch options used by OVS agent.

Partial-Bug: #1323729
Change-Id: I6dd04c5c506ff5f97f10ebab03943cd508fbfe60"
acfcb523b15fbd9ccc509e4366e4a141a66d4783,2014-10-15 11:02:21+04:00,"Refactor _make_subnet_dict to avoid issuing unnecessary queries

Use joined loads for attributes dns_nameservers and host_routes.

As a result, particular scenarios like restarting DHCP agent
could benefit from improved server-side performance.

Change-Id: I6470356b601e2fcf74c7e0a6df438cef7099e9fe
Closes-Bug: #1374044"
7ea605df3ac71dc568194bcd5eaf1c115008e1ee,2014-10-15 13:02:40+05:18,"Fix KeyError in dhcp_rpc when plugin.port_update raise exception

KeyError exception is seen because of following reasons

* DhcpRpcCallback._port_action() is called by two functions
   -  DhcpRpcCallback.create_dchp_port()
   -  DhcpRpcCallback.update_dhcp_port()

* When create_dhcp_port() function calls _port_action(), the
  function argument 'port' will have the body as
  {'port': {'network_id': foo_network_id, 'fixed_ips': [..] ...}

* When update_dhcp_port() function calls _port_action(), the
  function argument 'port' will have the body as
  {'id': port_id, 'port': {{'port': {'network_id': foo_network_id,
			            'fixed_ips': [..] ...}}

* If an exception occurs when _port_action() calls plugin.create_port(),
  network id is accessed as
  net_id = port['port']['network_id']

* If an exception occurs when _port_action() calls plugin.update_port(),
  network id is accessed as
  net_id = port['port']['network_id']
  which is causing the KeyError. network_id should have been accessed as
  net_id = port['port']['port']['network_id']

This patch fixes the issue by making the _port_action() take the
same port body. update_dhcp_port() insteading of passing the port_id
and port information in a single argument, it now adds port_id
in the port body itself.

Change-Id: I70b92fa20b421b05ca2053a9a57f62db726f7625
Closes-bug: #1378508"
8f50bc29edf0788dbc6220d56b45334eab9ecdc9,2014-10-15 22:17:33+00:00,"Refactor l2_pop code to pass mac/ip info more readably

Previous code used a 2 element array to represent a mac/ip address
pair.  Code assumed that element 0 was mac and 1 was ip.  This made
the code difficult to read and difficult to maintain.  An attempt was
made to insert a third value that failed miserably because of the
position dependence and other code that assumed not only positions but
also the number of elements.

Using a namedtuple seems to be the best way to get better
maintainability.  Named tuples can be compared with regular tuples.
The json serializer still uses an array to represent it so the on-wire
representation of the object has not changed.  A short snip of code
was required to restore the namedtuple from the RPC message.

Change-Id: I7f8c93b0e12ee0179bb23dfbb3a3d814615b1c2e
Closes-Bug: #1352801"
c858b8438939c7e36d0ceced0c0dd6eadc6f5b66,2014-10-15 21:53:52-07:00,"Guard against concurrent port removal in DVR

The delete_csnat_router_interface_ports method constructs
a generator expression to retrieve the ports attached
to a router. If a concurrent process manages to delete
one of the ports referenced in the generator from the DB
after it is constructed (but before iteration), some of the
ports will be None objects on iteration.

This patch verifies that the port db object is there
before trying to extract the ID from it.

More details:

This is because the query expression[1] is evaluated immediately
at the time the generator is defined. If there are ports in the
DB at the time of this evaluation, RouterPort objects will be
prepared to be iterated over. However, before the iteration over the
generator happens, something else may delete the port from the DB.
If that happens, when the iteration starts and the 'port' attribute
is accessed on the router port, a SELECT statement will be issued to
the DB to get that port[2] and it will return None.

1. router.attached_ports.filter_by(port_type=DEVICE_OWNER_DVR_SNAT)
2. The RouterPorts table's relationship to the Ports table is using
   the default 'select' lazy loading.

Closes-Bug: #1381263
Change-Id: Ia371545d641aaa1cbaa0fd10cd233250ec5769e5"
ffcb30c4fbee334f9903d2719418bc6aa9d7721c,2014-10-16 15:35:00+09:00,"l3_agent: avoid name conflict with context

module name, context, conflicts with argument name in many place in
l3_agent. In order to avoid such conflict, import context as n_context
following Neutron practice.

Change-Id: Ic3754818f84064d2c8da04914826fc912437b2f0
Closes-Bug: #1381900"
fd37ce7d943ab1c2dbc1cf3b6f0187c227f658ad,2014-10-16 10:43:12+00:00,"nsx plugin: keep old priority when reconnecting bad connection

Change-Id: Id05012ec04d23a5eec8441fc85f87611e08271fd
Closes-Bug: #1381094"
dac4adc9e540fefd2db66545dc6c2a06ba57020c,2014-10-16 04:20:06-07:00,"NSX: Make conn_idle_timeout configurable

If there is a loadbalancer that sits between NSX and neutron usually it has
a default http_timeout on long lived http_connections. This can cause
connections that have not been used from neutron to nsx to be reset after
sometime. This patch makes the amount time we wait to reconnect the connection
configurable so one can set it to match the balancer timeout to avoid having
to try the connection if the loadbalaner has already timed it out.

closes-bug #1382000

Change-Id: Ifca76ca6c24a2002b46b1935fbb4fc63f15c5af1"
6acadab5eb8b7b627e097a638d8486bef59a7f30,2014-10-16 21:22:32-07:00,"Only fetch port_id from SG binding table

Change a query to only retrieve the port_id instead of
every column from the row of security group binding info.

Partial-Bug: #1373851
Change-Id: I0fba9c9623898ee52590207ebbb728503bb59a5b"
60dd689183469d2958d6dcb60d93a8d94ef694d1,2014-10-16 21:25:38-07:00,"DB: Only ask for MAC instead of entire port

Optimize a query in _get_lla_gateway_ip_for_subnet
to only grab the column used instead of every column
in the port table.

Partial-Bug: #1373851
Change-Id: I5257e1e22645f3df9a77c0967b09a0ad0cf8b251"
c97069dc9a73344ebdc7b686133269850a81b3b2,2014-10-16 22:58:36-07:00,"Cisco N1kv: Fix update network profile for add tenants

This patch makes sure that while updating network profile to add new
tenants, it does not delete the older profile bindings and maintains
them, while adds only the new tenant ids to the bindings.

Change-Id: I862eb1c400e022334a2f6a4078425448bb144843
Closes-bug: #1379609"
8d430a7f2e903dda06d8d75d6abcd63423c4c0a1,2014-10-17 13:52:39-07:00,"Optimize query in _select_dhcp_ips_for_network_ids

Only query the DB for relevant columns instead of
all of the port columns.

Partial-Bug: #1373851
Change-Id: I32cd4a0bc6799ce77cea13188676308e3e641d19"
04df85b6e5a098f8f55bb82f04d9769763beb487,2014-10-17 19:59:02-07:00,"Improve performance of security group DB query

The _select_ips_for_remote_group method was joining the
IP allocation, port, allowed address pair, and security group tables
together in a single query. Additionally, it was loading all of
the port columns and using none of them. This resulted in a
very expensive query with no benefit.

This patch eliminates the unnecessary use of the port table by joining
the IP allocation table directly to the security groups and allowed
address pairs tables. In local testing of the method, this sped it up
by an order of magnitude.

Closes-Bug: #1373851
Change-Id: I12899413004838d2d22b691f1e2f3b18f7ec2c27"
db5e370b0d68c3e71626c99941fe487059b3cf88,2014-10-19 12:49:48-07:00,"Schema enhancement to support MultiSegment Network

Description:
Currently, there is nothing in the schema that ensures segments
for a network are returned in the same order they were specified
when the network was created, or even in a deterministic order.

Solution:
We need to add another field named 'segment_index' in
'ml2_network_segment' table containing a numeric position index.
With segment_index field we can retrieve the segments in the
order in which user created.

This patch set also fixes ML2 invalid unit test case in
test_create_network_multiprovider().

Closes-Bug: #1224978
Closes-Bug: #1377346

Change-Id: I560c34c6fe1c5425469ccdf9b8b4905c123d496d"
9334d1c98c3abdadc12222acb3f6f4527c940895,2014-10-20 00:50:32+00:00,"Empty files should not contain copyright or license

Per instruction from
http://docs.openstack.org/developer/hacking/#openstack-licensing

Enable hacking check H104 in this CL.

Change-Id: I435b9d91877499ebe1e33435f06794164a0ecc34
Partial-Bug: #1262424"
5e4b600528a2b58cbb38d6b8d55b316602d4d015,2014-10-20 14:58:26+08:00,"Modify docstring on send_delete_port_request in N1kv plugin

N1kv plugin: Modify docstring on _send_delete_port_request method

Change-Id: I64d34878ffd8f6db703e4c1d9849032fef9bae96
Closes-Bug: #1381277"
ccd650732729451aa8e5ce3401f9570c70c4f066,2014-10-20 08:27:37+00:00,"Moves the HA resource creations outside of transaction

Currently the HA resources are created in the
_create_router_db which includes calls to
the plugin and generates RPC calls. Even if the
resource creations are outside of any transaction
from the _create_router_db point of view, this
method is  called in a transaction from the
create_router method.
This patch moves the resource creations to the
create_router method outside the transaction.
The failures are handled as previously with
a try/expect.

Change-Id: If8fcfd012f8e992175e49bbefb2ae667881a620a
Closes-bug: #1374461"
9902400039018d77aa3034147cfb24ca4b2353f6,2014-10-20 19:06:45-04:00,"Fix race condition on processing DVR floating IPs

Fip namespace and agent gateway port can be shared by multiple dvr routers.
This change uses a set as the control variable for these shared resources
and ensures that Test and Set operation on the control variable are
performed atomically so that race conditions do not occur among
multiple threads processing floating IPs.
Limitation: The scope of this change is limited to addressing the race
condition described in the bug report. It may not address other issues
such as pre-existing issue with handling of DVR floatingips on agent
restart.

closes-bug: #1381238

Change-Id: I6dc2b7bad6e8ddbaa86c1f7a1e2028aeacc3afef"
6d00c16cee50c60f9e308cd3662cd4af39f14103,2014-10-21 08:57:41+09:00,"l2population_rpc: docstring improvements

Closes-Bug: #1382319
Change-Id: I72284fbcb16ea2d94898adf357f226775a20d02a"
9ffa8bd9e7ecc3de8301d8854316c01e1e55e0dd,2014-10-21 09:29:12+09:00,"tox.ini: Avoid using bash where unnecessary

Switch to sh, which is hopefully more ubiquitously available than bash.

A recent change (commit 085a35d657cf0fa41a402f2af66c4beaa0f60db2)
introduced bash dependency for ""tox -e pep8"".  It broke my environment,
where bash is not available.  This change aims to restore it.
As far as I undestand, the change in question doesn't actually need
the specific shell dialect.  So switch to sh, which is expected to be
available for any POSIX-like systems, would improve the situation.

Closes-Bug: #1382327
Change-Id: Ie023d2265d9949a3e3721f03e865e4acfb460de2"
d712663b99520e6d26269b0ca193527603178742,2014-10-21 20:50:16+00:00,"Move disabling of metadata and ipv6_ra to _destroy_router_namespace

I noticed that disable_ipv6_ra is called from the wrong place and that
in some cases it was called with a bogus router_id because the code
made an incorrect assumption about the context.  In other case, it was
never called because _destroy_router_namespace was being called
directly.  This patch moves the disabling of metadata and ipv6_ra in
to _destroy_router_namespace to ensure they get called correctly and
avoid duplication.

Change-Id: Ia76a5ff4200df072b60481f2ee49286b78ece6c4
Closes-Bug: #1383495"
be6ab2449d8daeabec124c3c601f1aa2d3b5c6ec,2014-10-22 07:18:35+00:00,"Validate local_ip for OVS agent is actual ip address

tunnel_sync() writes this value into ovsdb and value is not validated. In
case non-ip value is written into ovsdb row must be deleted manually.

Change-Id: I57eee81e6821eb2cb26b3d07a39bc94b81243570
Closes-bug: #1284684"
bb7cce32f3ca5ccf903e13d37c2c62a0222090da,2014-10-22 19:23:03+00:00,"Only resync DHCP for a particular network when their is a failure

The previous implementation will loop through and restart the dhcp
process for all active networks any time there is an exception calling
a dhcp driver function. This allows a tenant who can create an exception
to cause every dhcp process to restart. On systems with lots of networks
this can easily take longer than the default resync timeout leading to a
system that becomes unresponsive because of the load continually restarting
causes.

This patch restarts only dhcp processes related to the network on which
operations are failing. It should be noted that if there was some kind
of missed notification for a subnet update, the previous implementation
may have incidentally fixed it by restarting everything on the off
chance that something else caused an exception, but obviously relying
on that would be a bad idea as exceptions should be, well, exceptional.

Closes-bug: #1384402

Change-Id: I0b348a1657a7eb3a595f9bf6b217716a37ce38c6"
62588957fbeccfb4f80eaa72bef2b86b6f08dcf8,2014-10-22 14:53:53-07:00,"Big Switch: Switch to TLSv1 in server manager

Switch to TLSv1 for the connections to the backend
controllers. The default SSLv3 is no longer considered
secure.

TLSv1 was chosen over .1 or .2 because the .1 and .2 weren't
added until python 2.7.9 so TLSv1 is the only compatible option
for py26.

Closes-Bug: #1384487
Change-Id: I68bd72fc4d90a102003d9ce48c47a4a6a3dd6e03"
f23f2ecee68ba4abd12139bbb91b77ba9410f581,2014-10-22 16:13:14-07:00,"_update_router_db: don't hold open transactions

This patch prevents the L3 _update_router_db method from
starting a transaction before calling the gateway interface
removal functions. With these port changes now occuring
outside of the L3 DB transaction, a failure to update the
router DB information will not rollback the port deletion
operation.

The 'VPN in use' check had to be moved inside of the DB deletion
transaction now that there isn't an enclosing transaction to undo
the delete when an 'in use' error is raised.

===Details===

The router update db method starts a transaction and calls
the gateway update method with the transaction held open.
This becomes a problem when the update results in an
interface removal which uses a port table lock.

Because the delete_port caller is still holding open a
transaction, other sessions are blocked from getting an
SQL lock on the same tables when delete_port starts
performing RPC notifications, external controller calls,
etc. During those external calls, eventlet will
yield and another thread may try to get a lock on the
port table, causing the infamous mysql/eventlet deadlock.

This separation of L2/L3 transactions is similiar to change
I3ae7bb269df9b9dcef94f48f13f1bde1e4106a80 in nature. Even
though there is a loss in the atomic behavior of the interface
removal operation, it was arguably incorrect to begin with.
The restoration of port DB records during a rollback after some
other failure doesn't undo the backend operations (e.g. REST calls)
that happened during the original deletion. So, having a delete
rollback without corresponding 'create_port' calls to the backend
causes a loss in consistency.

Closes-Bug: #1377241
Change-Id: I5fdb6b24bf2fb80ac5e36a742aa7056db72c8c7d"
073f24e8f546e96e93f8499efb9cee063ceed9fc,2014-10-23 11:29:05+09:00,"NEC plugin: Allow to apply Packet filter on OFC router interface

Config parameter support_packet_filter_on_ofc_router is added
only to make the pluign work with the old version of PFC v5
which has no support of packet filter on vrouter interface.

Closes-Bug: #1384263
Change-Id: I2f54419e0b7c84c554ab2039ebaebdb065f9e502"
1b4ad95758c6cff7bc9a461f445c4b4e67964434,2014-10-24 15:18:49+00:00,"Remove XML support

XML support in Neutron has always been a second class feature to the
JSON API and broken for many extensions and outputs. The XML API been marked as
deprecated for the Icehouse and Juno release and is ready for removal in
Kilo.

Change-Id: I611aa9382ba3bfb08b2970c63e83b0fdd3d2e8a4
Closes-Bug: #1380787"
a1e78b2e8836053d8ffb29bce0f862e8a5f19c2f,2014-10-24 10:05:44-07:00,"Fix handling of CIDR in allowed address pairs

A CIDR in allowed address pairs would screw up
the calculation of remote security group member
IP addresses due to a call that assumed each entry
was an IP. This patch fixes that an adds a remote
security group reference to the address pairs SG
test case to exercise this code-path.

Closes-Bug: #1382562
Change-Id: I2676f4b56bce7449579d67fb221b3edb7b885103"
f0582e2cd12191baec6007803536d2fb63a1de58,2014-10-25 16:21:15+05:18,"Fix 'Length too long' error in neutron-dsvm-functional tests

testr is occasionally failing with 'Length too long' for
neutron-dsvm-functional test cases.

The issue is seen when the size of the testr log file size goes into MBs.

(Please see the bug comments for the details on the testr logs)

This patch fixes the issue by disabling debug logs in the tests.

Change-Id: I48fc9d14f6886f86761038ee4d106fbbe59b6890
Closes-bug: #1382579"
0dc5d9f77e0d14f57ead1f53b9e2ad0a68faf786,2014-10-27 03:50:56-07:00,"NSX: Fix foreign key constraint delete provider network

The cascade delete on the tz_network_bindings table is not
taking effect with the NSX plugin. In order to fix this, this
will require a db migration. This patch allows us to provide a
fix for this by deleting the tz_network_bindings within a transaction
to avoid the foreign key constraint. This patch fixes it this way so
that it can be backported to icehouse. Later a patch will be pushed with a
migration which corrects the db schema.

Closes-bug: #1367032

Change-Id: I19d389acc710224baff79ad114fab756b2e21cfc"
d4f00659eb18c6a5df2ce6d35202b0a4a9409f70,2014-10-27 12:49:27+00:00,"Add advsvc role to neutron policy file

Add in a default ""advsvc"" user and the logic in the Neutron policy
infrastructure which will allow this user to create/get/update/delete
ports on other tenants networks, as well as view other tenants
networks. This is for the use case of letting advanced services have
a user to put ports on other tenants networks. By default, we do not
define any roles for the policy ""context_is_advsvc"", but rely on
operators to specify the likely value of ""role advsvc"".

DocImpact

Closes-Bug: #1331836

Change-Id: I94cb3383eb1fed793934719603f888dbbdbbd85a
Co-Authored-By: Susanne Balle <sleipnir012@gmail.com>"
0ed0857461b6bb57096e94dd4f31baeeea8a5a75,2014-10-27 17:02:45+02:00,"Adds an option to enable broadcast replies to Dnsmasq

Adds a flag for DHCP agent configuration
to add dhcp-broadcast flag to Dnsmasq process
In order to support virtual network on top of Infiniband
Fabric, there is a requirement to receive DHCP response
via broadcast message (according to IB Spec).

DocImpact
Change-Id: I95329e535bacf14b650a8f37179ecd020b5bfafe
Closes-Bug: #1293953"
c615b7602ce50c21a8347e0c501170ee1f97d11c,2014-10-28 11:52:58+01:00,"Add assertion to test_page_reverse method

In neutron/tests/unit/test_api_v2.APIv2TestCase.test_page_reverse
there is no second call to test_case with 'page_reverse': 'False,
because of use assert_called_once_with.
In proposed change before second testcase, reset_mock is called.
Remove also second 'instance' initialization.

Closes-Bug: #1373126
Change-Id: I552b7b47456a1cdfccdeb8d7853ec3395317097a"
a19ec4a7320dead0ea138697b8785638c6dd4307,2014-10-28 15:52:37+04:00,"Use RPC instead of neutron client in metadata agent

RPC is a standard way of interacting between Neutron server and agents
Using neutron client is also  inefficient as it results in unneeded
keystone load and may become a bottleneck at scale

DocImpact
When upgrading, one should upgrade neutron server first,
then metadata agent. However there is a fallback in case
metadata agent fails to get info from server by rpc -
it will return to using neutron client.

Closes-Bug: #1092043

Change-Id: Ib75568643e6062543c0ff8cf80fba1b40b4fe82f"
280b9eacb7be2db2d9d2fd5cafad2814f07ac70c,2014-10-28 16:22:12+02:00,"Reorder operations in (l3_dvr) update floating ip

This review overrides update_floatingip (L3_NAT_dbonly_mixin)
in l3_dvr_db (L3_NAT_with_dvr_db_mixin) to reorder the garbage
collection to after the floating ip is updated and rpc called.
This was previously being called in the (already) overridden
_update_fip_assoc.

Since this call is moved, the _update_fip_assoc for l3_dvr_db
is exactly the same as l3_db and is thus removed completely.

This tidy up was created whilst looking at bug 1381617. The
intention was to mitigate the timing issues exposed by [1]
and discussed in the bug report. It seems the problem persists
with more discussion around 'properly fixing' this at [2].

[1] https://review.openstack.org/#/c/102700/
[2] https://review.openstack.org/#/c/130414/4

Change-Id: I24cef57bf394ceeb931ff48fa67f18218c734b00"
95accb535017f1384b38b12eb78f0e58287d8e08,2014-10-28 20:49:04+00:00,"Allow to add router interface to IPv6 SLAAC network

This patch will allow an IPv6 subnet configured with SLAAC
(or dhcpv6-stateless) to be attached to a router interface.

Closes-Bug: #1382076
Change-Id: If0c48a7287a828eef4a0f0b0859d4f898d2937bd"
c15c07d518c761689aec825515a9192624403e55,2014-10-29 12:04:51+11:00,"Big Switch: Send notification after port update

The Big Switch plugin was not sending port update
notifications for security group changes after the
port was updated. This patch corrects that behavior
by calling the port_update method on the RPC notifier
when necessary after a port update.

Closes-Bug: #1376527
Change-Id: Ic2fd872725c1da8e2dc394473b7feb407d21268f"
682f5a3effe544f0affabe384fcd3d4ee7d408f9,2014-10-29 12:05:40+11:00,"Fix incorrect int/tuple comparison during binary search

The code contains an incorrect int/tuple comparison during the binary
search, which completely breaks the ""priority"" feature.
(Apparently python2 thinks int < tuple is not an error and always True.)

Change-Id: Ic404b38eabc87b105c7c2443b6177071b26d97ce
Closes-Bug: #1386946"
abc16ebfcf8fd1fbdb4ef68590140d4d355b0a7c,2014-10-28 21:04:30-07:00,"Batch ports from security groups RPC handler

The security groups RPC handler calls get_port_from_device
individually for each device in a list it receives. Each
one of these results in a separate SQL query for the security
groups and port details. This becomes very inefficient as the
number of devices on a single node increases.

This patch adds logic to the RPC handler to see if the core
plugin has a method to lookup all of the device IDs at once.
If so, it uses that method, otherwise it continues as normal.

The ML2 plugin is modified to include the batch function, which
uses one SQL query regardless of the number of devices.

Closes-Bug: #1374556
Change-Id: I15d19c22e8c44577db190309b6636a3251a9c66a"
36b7ceb050a6805d30cbac4562e109dddf3cba25,2014-10-29 06:07:28+00:00,"Check for concurrent port binding deletion before binding the port

When agent tries to update port binding (DVR or regular), the port
might have already been deleted via API call.
This is not an error condition but should be handled to avoid traces
in the logs.

Change-Id: Ie9436172151f0ecd5b3e4667328910b09f8ef141
Closes-Bug: #1370570"
77e283c94f51e21dcf126a316098c54a7cdfca0f,2014-10-28 23:18:25-07:00,"Big Switch: Fix SSL version on get_server_cert

The ssl.get_server_certificate method uses SSLv3 by default.
Support for SSLv3 was dropped on the backend controller in
response to the POODLE vulnerability. This patch fixes it
to use TLSv1 like the wrap_socket method.

Closes-Bug: #1384487
Change-Id: I9cb5f219d327d62168bef2d7dbee22534b2e454e"
51303b5fe4785d0cda76f095c95eb4d746d7d783,2014-10-29 10:37:56-04:00,"Make L2 DVR Agent start successfully without an active neutron server

If the L2 Agent is started before the neutron controller
is available, it will fail to obtain its unique DVR MAC
address, and fall-back to operate in non-DVR mode
permanently.

This fix does two things:
1. Makes the L2 Agent attempt to retry obtaining a DVR MAC
address up to five times on initialization, which should be
enough time for RPC to be successful.  On failure, it will
fall back to non-DVR mode, ensuring that basic switching
continues to be functional.

2. Correctly obtains the current operating mode of the
L2 Agent in _report_state(), instead of only reporting
the configured state.  This operating mode is carried
in 'in_distributed_mode' attribute of agent state, and
is separate from the existing enable_distributed_routing
static config that is already sent.

Change-Id: I5fd9bf4163eafa321c5fca7ffb7901ae289f323b
Closes-bug: #1364215"
6eee93a98c67a5faf1d1243e0f8592c48d13bd6a,2014-10-31 16:43:08+00:00,"Remove duplicate ensure_remove_chain method in iptables_manager

Change-Id: I168eda2fa430446786d4106d6807207f4facbfc3
Closes-Bug: #1388162"
079f1fdabd24e22e11256e113981c119778ac371,2014-11-06 08:30:56+03:00,"Replace ""nova"" entries in iptables_manager with ""neutron""

In iptables_manager docstrings there are still some references to
nova left from nova/network/linux_net.py.
Remove these references and update the docstrings.

Change-Id: I50813e3050f7f117512bde7c2563ce3410939e54
Closes-Bug: #1389601"
92988222038573c9fe3d84ef6cbce981f710b16a,2014-11-06 19:13:10+03:00,"Use correct base class for unit tests for ML2 drivers

In unit tests for several ML2 mechanism drivers (listed below)
the NeutronDbPluginV2TestCase class is used instead of Ml2PluginV2TestCase
which is desired to be used.

Unit tests for ML2 mechanism drivers in neutron/tests/unit/ml2:
   drivers/cisco/nexus/test_cisco_mech.py
   drivers/brocade/test_brocade_mechanism_driver.py
   drivers/freescale/test_mechanism_fslsdn.py
   test_mechanism_ncs.py
   test_mechanism_odl.py
   test_l2population.py

Partial-Bug: #1373153

Change-Id: I9524cafb39975b1384954a2eefcbf754231d2198"
d9966eafe16f2a0e4899a1fa651352ee81858732,2014-11-06 13:19:10-08:00,"Include call to delete_subnet from delete_network at DB level

Removes an extra lock in bsn plugin that causes a deadlock
when delete_subnet is invoked form delete_network, agreed
with kevinbenton to remove it
Modifies a unit test to cover this change per reviewer request
Co-author amirosh

Closes-bug: #1197176

Change-Id: Ie3414848a91cc737b16b79399ae19800545e533f"
cc9bc24229f1d79dc99303db1affc03c030c011e,2014-11-09 20:55:35+01:00,"Fix L3 HA network creation to allow user to create router

Update HA Network creation to use an admin context to allow Neutron
to create the tenant-less network required for the HA router when
it does not yet exist and is being created by a non-admin user.

Neutron creates these resources without a tenant so users cannot see
or modify the HA network, ports, etc.  Port creation and association
already use elivated admin contexts to allow their function when
an user attempts to create a HA L3 router.

Change-Id: I36166158a0970b8d08d6702054b11a43fb684281
Closes-Bug: #1388716"
226c4f6d809de3d6ed622a1f90b06e34506696d6,2014-11-10 18:50:38+01:00,"rootwrap config files reference deleted quantum binaries

dhcp and l3 rootwrap filter files contain reference to the deleted
binary quantum-ns-metadata-proxy. This change removes these obsolete
filters.

Change-Id: Iad4772752d74a1c0535144b5faf9a1f8ae89f6a3
Closes-Bug: #1391256"
f36c29903afb713670f9e7c3f9530e117dfc6bcb,2014-11-10 23:05:04+01:00,"Remove openvswitch core plugin entry point

The openvswitch core plugin has been removed but not its associated
""neutron.core_plugins"" entry point. This change removes it from
setup.cfg.

Change-Id: I79f7c334cdeb0f4d0d68743734f69c0ec8523467
Related-Bug: #1323729
Closes-Bug: #1391326"
ee6e92327bbac9a9444924b5d125c2fcbcd6decb,2014-11-11 08:01:27+00:00,"Fix missing allowed command in openvswitch xenapi agent

Add allowed command ""ovsdb-client"" to ALLOWED_CMDS list.

Change-Id: I274604229f90ba00722b1001cbc7404cd3e8070d
Closes-Bug: #1338447"
0a21b909baa11e4655852c27ab282c32e0aa7a94,2014-11-12 09:22:59-08:00,"Fix for FIPs duplicated across hosts for DVR

For DVR, FIPs should be hosted on the single node
which hosts the VM assigned with the fixed_ip of the FIP.
The l3_agent should only take action on the correct FIP per
host by filtering the FIPs based on the 'host' value
of the FIP.

A recent refactor on the l3_agent moved the host filtering logic
from process_router_floating_ip_addresses() to
_get_external_device_interface_name(). The local floating_ips var
was not altered as it was before the refactor.

This resulted in network disruption across multiple hosts
since more than one namespace contained the FIP.  This problem
would only be seen in a mutli-host environment where the same
router hosting FIPs was present on more than one node.

The fix is to return the host filtering logic by adding a
call to get_floating_ips().  In addition, the unit test
test_process_router_dist_floating_ip_add() was modified to
pass two FIPs instead of one.  One FIP matches the host
of the agent, one does not.  Only one should be processed,
not two.

Change-Id: I67b19f6228af392519fff89b13283b43921552bf
Closes-bug: #1389880"
3476cf54c950a227ee9778af743e39e27cfbf534,2014-11-12 21:57:04-03:00,"Resolving some spelling mistakes

Just resolve some spelling mistakes in the comments

Change-Id: I6eed9fbe73d6618b474395c8ca41460cdfbe08d4
Closes-Bug: #1365088"
d83731a96d3b47fab1295de1fb53cfe30576619c,2014-11-13 13:55:19+03:00,"Updated policy module from oslo-incubator

Common policy has not been synced with oslo-incubator for a
long time and is seriously outdated.

This change pulls in fresh code from oslo-incubator which
introduces the Enforcer class to replace the old check function.

Rewrite neutron.policy using naming conventions and approach
that was set in Nova and amend related unit tests.
Remove neutron.common.exceptions.PolicyNotAuthorized and switch
to neutron.openstack.common.policy.PolicyNotAuthorized.
Drop Neutron specific policy_file option since now it is defined
in oslo-incubator policy module.

Change log:
4ca5091 Fixes nits in module policy
262fc82 Correct default rule name for policy.Enforcer
9e8b9f6 Minor fixes in policy module
6c706c5 Delete graduated serialization files
5d40e14 Remove code that moved to oslo.i18n
aebb58f Fix typo to show correct log message
bb410d9 Use MultiStrOpt for policy_dirs
33f44bf Add support for policy configration directories
2b966f9 Fix deletion of cached file for policy enforcer
238e601 Make policy debug logging less verbose
fe3389e Improve help strings
15722f1 Adds a flag to determine whether to reload the rules in policy
5d1f15a Documenting policy.json syntax
fcf517d Update oslo log messages with translation domains
e038d89 Fix policy tests for parallel testing
0da5de6 Allow policy.json resource vs constant check
e4b2334 Replaces use of urlutils with six in policy module
8b2b0b7 Use hacking import_exceptions for gettextutils._
0d8f18b Use urlutils functions instead of urllib/urllib2
12bcdb7 Remove vim header
9ef9fec Use six.string_type instead of basestring
4bfb7a2 Apply six for metaclass
1538c80 ConfigFileNotFoundError with proper argument
33533b0 Keystone user can't perform revoke_token
64bb5e2 Fix wrong argument in openstack common policy
b7edc99 Fix missing argument bug in oslo common policy
3626b6d Fix policy default_rule issue
7bf8ee9 Allow use of hacking 0.6.0 and enable new checks
e4ac367 Fix missing argument bug in oslo common policy
1a2df89 Enable H302 hacking check
7119e29 Enable hacking H404 test.
6d27681 Enable H306 hacking check.
1091b4f Reduce duplicated code related to policies

Closes-Bug: #1288178
Change-Id: I87ee30e2b64ec6b07faa84a231fd5f7eb925d501"
270c9e21db8d19db5cbf19fa70fe66d686c9c141,2014-11-14 02:20:59+00:00,"Add rootwrap filters for ofagent

neutron-ofagent-agent currently relies on the fact the rootwrap
filters for neutron-openvswitch-agent covers what it needs.
as they are independent agents and their requirements are
getting more different, introduce a dedicated rootwrap filters
for ofagent.

Closes-Bug: #1392560
Change-Id: Iba205260a238431432caf8d9697268ceeef85eca"
1d9c7d5c79618658289318ed468f97c40e5c94fe,2014-11-14 09:28:12+00:00,"switch to oslo.serialization

jsonutils has been moved to the oslo.serialization library. in this
patch we bring in oslo.serialization and switch all references to
the new library.

Closes-Bug: #1385353
Change-Id: I2898c4040abb2f208959049708e7bc093cfbaba7"
b9c200c13544f991681763f23b3a5adfb529e593,2014-11-14 21:10:04+04:00,"Decrease policy logging verbosity

Log enforced rules only in case policy check has failed.

Change-Id: I1fe8cbc1c9b5084b9cef6aa8329780512d8c7ec2
Closes-Bug: #1385266"
e16b3a8f371e2c794d9ad59fc2d57abb1ee148e7,2014-11-15 00:08:20-08:00,"Update i18n translation for neutron.agents log msg's

Don't translate debug level logs and enforce log hints
Our translation policy
(https://wiki.openstack.org/wiki/LoggingStandards#Log_Translation) calls
for not translating debug level logs. This is to help prioritize log
translation. Furthermore translation has a performance overhead, even if
the log isn't used (since neutron doesn't support lazy translation yet).

NOTE: this is done on a directory by directory basis to ensure that we
do not have too many conflicts and rebases.

Add a local hacking rule to enforce this.

This patch set enforces the directory neutron/agents

Partial-bug: #1320867

Change-Id: I4bd562e5138c2d2850072440aa121f27e902463a"
99cd58ae4512502859b2ae2bf3663cacbb197bca,2014-11-15 00:14:42-08:00,"Update i18n translation for neutron.cmd log msg's

Validate that hacking rules apply to directory neutron/cmd

Change-Id: I7fbeba035e8a7f7602fef96a0e10cec5298b08f3
Partial-bug: #1320867"
069aa9d1eda823fe7ecf8729b9db5423391ce655,2014-11-15 00:17:25-08:00,"Update i18n translation for neutron.db log msg's

Validate that hacking rules apply to directory neutron/db
Partial-bug: #1320867

Change-Id: Iffdaa28bf5d5d503623f1f6dec4a8003f48974d8"
adbc316827fdd918ed21b3e3cf816129575053b0,2014-11-15 00:42:43-08:00,"Update i18n translation for neutron.extension log msg's

Validate that hacking rules apply to directory neutron/extensions

Change-Id: Ifbc97ae2b5670fbdf22c7d0ae48f91a7776daf01
Partial-bug: #1320867"
8a499ef0f8a7fa53b5a673b53188ddddea5de6f3,2014-11-16 09:40:47-08:00,"Moved out common testcases from test_type_vxlan.py

This patch-set will refactor the test_type_vxlan.py and test_type_gre.py.

We need to add testcases for TunnelRpcCallbackMixin() so better we
should move common test cases from test_type_vxlan.py to test_type_tunnel.py and
add testcases for TunnelRpcCallbackMixin() into it.

Partial-Bug: #1381071
Change-Id: I81f8930cf665ccd89c03f0bd2199ce5d1d9dff65"
0bf69ad80fb77773e767e116357cf6e1666b3f5d,2014-11-17 14:30:47+00:00,"linuxbridge-agent: make vxlan unicast check more efficent

A list with the full range of vxlan VNIs (1 to 2**24) was using
over 300MB of memory. This patch uses xrange instead of range.

Closes-Bug: #1393362
Change-Id: I21ccab758e7911712690fd5e732f64361e809264"
d8ee3055eeffb8779caf2fb355ab4b84d5b280db,2014-11-17 19:00:28+00:00,"Fix PYTHONHASHSEED bugs in test_security_groups_rpc

This fixes the test_security_groups_rpc unit test that breaks with a
randomized PYTHONHASHSEED (see the bug report).

The test assumed that several Dicts had elements in a particular order.
Found with PYTHONHASHSEED=2701526934.

The fix refactors the test case by using an OrderedDict instead of a Dict.
Or in the case of the regex strings, injecting different values depending
on the order of the devices2 and devices3 Dicts.

An upstream spelling mistake is also addressed in this patch.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with a
randomized PYTHONHASHSEED, but they are not addressed here. They will be
addressed in separate patches.

Change-Id: I744117edfc5869b0750349a89f2792f622e4285d"
e9f001a63a555f067c4567a88613d14853442524,2014-11-17 14:10:26-08:00,"BSN: Set inconsistency record on delete failure

Set a bad value in the consistency DB on a delete
failure so a sync is triggered the next time the backend
servers become available.

This fixes the issue where the backend servers are unavailable
when an object is deleted from ML2 but not deleted from the
backend.

Closes-Bug: #1377350
Change-Id: I24713a03af4d3499645241f900de1f572689c235"
1825b0fdf9b383566c5f509108b88de39ca0bc31,2014-11-17 23:14:32-08:00,"BSN: Add network to ext_gw_info sent to backend

Include the full network info in the external gateway info
sent to the backend controller. This alleviates a very expensive
query across all tenants on the backend controller.

Closes-Bug: #1393991
Change-Id: If3601ccbce21e683924a7056cdfe4e3c2d4d4a93"
bc34f26302faea116be7e61051c32f8787530836,2014-11-18 18:51:00+03:00,"Convert all incoming protocol numbers to string

PostgreSQL is more sensitive for types than MySQL when it selects
something from columns in database. So it fails when it tries to
select from string field comparing with integer value.

Added unit test to verify conversion of protocol numbers to
strings.

Closes-bug:#1381379

Change-Id: I0a29595403a07c66888871088d5549705a097f68"
631a2518169018c04a4eb3d7a8026f322ec2b677,2014-11-18 07:54:12-08:00,"Use a string multiplier instead of 59 repetitions

A recently added test case added a long string of repeated 1's
which required a #noqa flag. A string multiplier represents the
same thing in a much shorter fashion.

Change-Id: I2f4d5568b3e132781fc51bd2e9b3efd44c549689"
906055b07771c816a3bb2954fbfbd89fafe2ab4f,2014-11-18 22:31:00+00:00,"NSX: Validate gateway device list against DB

This patch adds a check for validating the devices for a network
gateway are defined in the neutron DB before the request for
creating the network gateway is sent to the NSX backend.

Change-Id: Ic2245f965da332dbaee4ab5a869ce47f06a9e6ce
Partial-Bug: #1319581"
55a031e624f347d346d1909afec75482950d123c,2014-11-18 20:05:07-08:00,"BSN: include missing data in floating IP call

Includes some missing floating IP data in an optimized
floating IP API that was previously unused.

Closes-Bug: #1394030
Change-Id: Icba2f837dbc3838f86d125d261b5e2325000c618"
cdaa502f899d4c90c5e40ccd745f1d92bfd1127b,2014-11-19 05:43:18+00:00,"BSN: Optimistic locking strategy for consistency

Summary:
  Adds an optimistic locking strategy for the Big Switch
  server manager so multiple Neutron servers wanting to
  communicate with the backend do not receive the consistency
  hash for use simultaneously.

  The bsn-rest-call semaphore is removed because serialization
  is now provided by the new locking scheme.

  A new DB engine is added because the consistency hashes
  need a life-cycle with rollbacks and other DB operations
  than cannot impact or be impacted by database operations
  happening on the regular Neutron objects.

  Unit tests are included for each of the new branches
  introduced.

Problem Statement:
  Requests to the Big Switch controllers must contain the
  consistency hash value received from the previous update.
  Otherwise, an inconsistency error will be triggered which
  will force a synchronization. Essentially, a new backend
  call must be prevented from reading from the consistency
  hash table in the DB until the previous call has updated
  the table with the hash from the server response.

  This can be addressed by a semaphore around the rest_call
  function for the single server use case and by a table lock
  on the consistency table for multiple Neutron servers.
  However, both solutions are inadequate because a single
  Neutron server does not scale and a table lock is not
  supported by common SQL HA deployments (e.g. Galera).

  This issue was previously addressed by deploying servers
  in an active-standby configuration. However, that only
  prevented the problem for HTTP API calls. All Neutron
  servers would respond to RPC messages, some of which would
  result in a port update and possible backend call which
  would trigger a conflict if it happened at the same time
  as a backend call from another server. These unnecessary
  syncs are unsustainable as the topology increases beyond
  ~3k VMs.

  Any solution needs to be back-portable to Icehouse so new
  database tables, new requirements, etc. are all out of the
  question.

Solution:
  This patch stores the lock for the consistency hash as a part
  of the DB record. The guaruntees the database offers around
  atomic insertion and constrained atomic updates offer the
  primitives necessary to ensure that only one process/thread
  can lock the record at once.

  The read_for_update method is modified to not return the hash
  in the database until an identifier is inserted into the
  current record or added as a new record. By using an UPDATE
  query with a WHERE clause restricting to the current state,
  only one of many concurrent callers to the DB will successfully
  update the rows. If a caller sees that it didn't update any
  rows, it will start the process over of trying to get the
  lock.

  If a caller observes that the same ID has the lock for
  more than 60 seconds, it will assume the holder has
  died and will attempt to take the lock. This is also done
  in a concurrency-safe UPDATE call since there may be many
  other callers may attempt to do the same thing. If it
  fails and the lock was taken by someone else, the process
  will start over.

  Some pseudo-code resembling the logic:
    read_current_lock
    if no_record:
      insert_lock
      sleep_and_retry if constraint_violation else return
    if current_is_locked and not timer_exceeded:
      sleep_and_retry
    if update_record_with_lock:
      return
    else:
      sleep_and_retry

Closes-Bug: #1374261
Change-Id: Ifa5a7c9749952bc2785a9bf3fed69ad55bf21acc"
f852a89f1ea5eb6a6deae9cf8c4f63c40e420742,2014-11-19 15:20:17+09:00,"Enable default SNAT from networks connected to a router indirectly

Make outgoing packets to an external interface SNATed regardless
of source address of the packets. As a result of deep review,
any problem was not found with this change.

Change-Id: I71a1288633bb6af2951d571540bbb9ec5e1270e2
Closes-bug: #1386041"
e0e8a2e9e81c2f6293eaa8556c5ecdac910358cb,2014-11-19 11:55:28+04:00,"Catch DBReferenceError exception during binding a router

In some cases (Concurrent API tests) router can be deleted
before it is bound to an agent by scheduler.
That may lead to traces on L3 agent side returned via RPC.
Need to handle this case in more graceful way.

Change-Id: Ic52c26ace7f32a615150bd6098b244ae0b98250c
Closes-Bug: #1385257"
b8930e8f92f447f47ceca5d80d9b02eb1c01fc26,2014-11-19 00:20:01-08:00,"Update i18n translation for neutron.api log msg's

Validate that hacking rules apply to directory neutron/api

Change-Id: Idd54964dbb3a48505c20117c79ce57913a7f1c12
Partial-bug: #1320867"
b7429460d0950cf58c3ebbf158659c17bdcfd10d,2014-11-19 14:05:05+04:00,"Validate loadbalancing method when updating a pool

Validate the input for the lb_method and avoid DBIntegrityError.

Change-Id: Iea3d464abdeb1ed377db2453581124742f9fb0ac
Closes-Bug: #1390078"
aef708188554948f84be4ce3cb1b1a8778f6153e,2014-11-19 17:13:52+03:00,"Catch NoResultFound in _get_policy_profile_by_name

Add try-except in _get_policy_profile_by_name to raise
proper PolicyProfileNameNotFound if profile not found in
database.

Also unittest is added.

Closes-bug: #1393399

Change-Id: I3ab50a6870ff77a95e0977c75255e9cbd7286fbb"
1681f62ec91b6c3705a14393815542dc1746de71,2014-11-19 15:01:19+00:00,"Fix hostname regex pattern

Current hostname_pattern regex complexity grows exponentially
when given a string of just digits, which can be exploited to
cause neutron-server to freeze.

Change-Id: I886c6d883a9cb0acd9908495eec50bf0411d8ba8
Closes-bug: #1378450"
e3b949c3bc08808e3df15215bc30d6610f3a4bd3,2014-11-19 22:26:41+00:00,"Delete FIP namespace when last VM is deleted

On a compute node when the last VM with a floating IP association
is deleted, the L3 agent did not delete the fip namespace. However
the api server has already deleted the fip agent external gateway
port from the database.

This problem is happening on DVRs because the deletion of a VM port,
in addition to a floating IP disassociation, may also result in the
removal of the external gateway port binding AND the removal of the
fip agent external gateway port.

When the L3 agent is handling a routers_updated notification, it is
not processing floating ip address updates when the router has both
a floating ip disassociated and a external gateway port deleted.
This patch corrects this problem.

Closes-bug: #1377156
Change-Id: I86bdef7c9d988cb9d87c88adde55548d459f29a5"
cbf2970a57edbec69600a8f098a2d464615a6754,2014-11-19 22:37:16-08:00,"Update i18n translation for neutron.common/debug log msg's

Validate that hacking rules apply to directories:
    - neutron/common
    - neutron/hacking
    - neutron/debug
    - neutron/locale

Change-Id: I177f5fa5fb7cfdcf332949933aa4bd755a90bb94
Partial-bug: #1320867"
09566e272f200712bb6c44638f3776dbb1478006,2014-11-19 23:24:40-08:00,"Update i18n translation for neutron.notifiers log msg's

Validate that hacking rules apply to directories:
 - neutron/notifiers
 - neutron/openstack (this is already 'clean')

Change-Id: I37b8c45e20d2f59e4e9f5d80d5dc87f19a7a8b3a
Partial-bug: #1320867"
25d3e0114ad83d6114bd1844d750e3c3272b6c35,2014-11-19 23:25:48-08:00,"Update i18n translation for neutron.server/scheduler log msg's

Validate that hacking rules apply to directories:
- neutron/scheduler
- neutron/server

Change-Id: I1353f5c8b01f85e4995ee1fb23a066506ed98e3f
Partial-bug: #1320867"
586af323ca7e87414b1f499499e28e6fec752a26,2014-11-20 12:23:54+00:00,"Check for default sec-group made case insensitive

Currently creating another security group with name
""default"" is not allowed, however we can create
another security group with name ""DEFAULT""
(or any other CASE pattern).

When trying to boot a VM without specifying
a security group it should always pick the
""default"" security group. However, if another
security group of the name DEFAULT is present,
the VM gets associated with the wrong
security group (i.e DEFAULT and not default).

So, updated the code so that a security group
with name DEFAULT (or any other case pattern)
is not allowed.
Closes-Bug: #1384505

Change-Id: I3bc4e48cf723bcf74e098d7ef66df0333f6a8686"
fa70c4011f94fc1ab59a66b8e0baa750ce06d181,2014-11-20 17:01:58+00:00,"Enforce log hints in neutron.services.l3_router

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule.

Validate that hacking rules apply to directories:
    - neutron/services/l3_router

Change-Id: I2a832c5e0c4ed2a944d199d6a2d6233b8cf838dd
Partial-bug: #1320867"
cc537ebf5781e145aaf54a63436ae9d8ad676ddc,2014-11-20 17:07:23+00:00,"Enforce log hints in neutron.services.firewall

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule.

Validate that hacking rules apply to directories:
    - neutron/services/firewall

Change-Id: Ie3f75fe207652cbd800cef067a89a819696d1f3a
Partial-bug: #1320867"
0e8c8a4bc05f995b212e9bd37d655c6618f3d5d8,2014-11-20 17:07:36+00:00,"Enforce log hints in neutron.services.loadbalancer

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule and
the change respects loggging guidelines.

Validate that hacking rules apply to directories:
    - neutron/services/loadbalancer

Change-Id: I5f2a1a8861728399f3852fc9704eb160c35f7f8d
Partial-bug: #1320867"
0d5a11d9c722870f9c5e31a993219c7e240b4e19,2014-11-20 21:05:32+00:00,"Show progress output while running unit tests

This patch imports some magic to enable showing test output as the
tests run.  Seeing output showing tests as they execute is reassuring
that the test run is continuing to make progress.  This originated in
tempest and was then brought over to Nova in this commit:

  https://review.openstack.org/#/c/121914/

Note the justification in that commit to just copy it instead of move
it to a shared repo.

To get the old behavior where you only get output when something
fails, you can set the TRACE_FAILONLY env var.  That originated in
this commit in Nova:

  https://review.openstack.org/#/c/123801/

Change-Id: I6a079ad5f630383650c0f9dee09e04250d0e2c5a"
f005dd5c9b982eca03722a7b2684eeb42a83be2b,2014-11-20 18:50:53-08:00,"Implement migration of legacy routers to distributed

This patch addresses the necessary changes required
for the router migration or conversion from legacy
to distributed.

The _update_router_db() method was modified to add
logic to support the SNAT functionality of DVR by
calling create_snat_intf_ports_if_not_exists().  A
call to _unbind_router() was also called to force
the scheduling of the router with 'distributed'
enabled.

Right now we will be supporting migration from legacy
to distributed only.

Closes-bug: #1348309
Partially-implements: blueprint neutron-ovs-dvr
Co-Authored-By: Michael Smith <michael.smith6@hp.com>
Change-Id: I6f252271bb5b52ce57184ad7b0bf1ce280b965fb"
98fae47ad1b9b72e41d444ce6f96cf5f2a3b6f0c,2014-11-21 13:36:58+03:00,"Fix context.elevated

The current version of elevated method sets for the original context
the admin role too. This change fix this.

Added unittest.

Closes-bug: #1386932

Change-Id: Ife881112efa151e53bfa4b7af35643dcf2d1114f"
eff0b35013a8f02897ec428aebfcb4c8212f0b8d,2014-11-21 08:01:52-08:00,"Fix AttributeError in RPC code for DVR

Fix the usage of call methods as per recent changes according to
drop-rpc-compat. These changes went overlooked and it broke DVR.

Tests will be done as follow-up.

Partial-bug: #1394848

Change-Id: I6e0584f8e54e606a76b87853b2371cc8e24eba69"
8a99a4a35f3f0c6ec5a10e1cee9d6f702bd4b0c5,2014-11-22 09:42:58-08:00,"Enforce log hints in neutron.services.metering

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule.

Validate that hacking rules apply to directories:
    - neutron/services/metering

Change-Id: Ic763e81e8b06973013115af45c7c09a3e69c673b
Partial-bug: #1320867"
6e7614fabd2c9e913b74281953b30c3a5f261622,2014-11-22 09:42:58-08:00,"Enforce log hints in neutron.services

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule.

Validate that hacking rules apply to directories:
    - neutron/services

Change-Id: Ib744b7a94705afbefeb50b5dce933d226831f580
Partial-bug: #1320867"
6d67c14e1aff135b683d83d78f514bf8b4416853,2014-11-24 04:33:03+00:00,"Update i18n translation for ML2 plugin log msg's

All the existing LOG.info, LOG.warning, LOG.error and LOG.critical
messages should have _LI, _LW, _LE and _LC respectively.
 Also, debug level log shouldn't be translated.

This patch set will cover the ml2 directory under neutron/plugins.

Partial-Bug: #1320867
Change-Id: I9d78d23bbc14e7c536c6ddf2dc4f52c67faeb667"
2f8ec46314ea414c0594d3f2102a1bcc3524f3de,2014-11-24 04:44:31+00:00,"Update i18n translation for openvswitch log msg's

This patch set covers the openvswitch directory under neutron/plugins.

Partial-Bug: #1320867
Change-Id: I8a80ca6e45a32bd2945ddf4401f6820d99c93c28"
d9ba4c3441e1406b81c3e37a8f7fd60e9766d277,2014-11-24 04:44:51+00:00,"Update i18n translation for linuxbridge log msg's

This patch set covers the linuxbridge directory under neutron/plugins.

Partial-Bug: #1320867
Change-Id: I603f9ae8f95bf1b1815edaca49e728fa378cf6ba"
a8edfc6e6d159aa5ac937c824aa0786a60eda53f,2014-11-24 12:05:09+02:00,"Test HA router failover

HA failover testing requires the ability for two L3 agents to
co-exist on the same machine. The following changes were made
to support this:

* Add l3 agent ability to simulate nested namespaces by suffixing
  each router namespace with '@host'. For example, if a router
  with id '1' is created, its namespace will be:
  'qrouter-1@host'
* Added test.common submodule which will hold common code which is
  shared between the different kind of tests (unit and funtional).
* Added tests.common.agents submodule which holds test-only agents, and
  added a test L3NAT agent to be used in the HA functional testings.

Co-Authored-By: Assaf Muller <amuller@redhat.com>
Closes-bug: #1374946
Change-Id: I2185fe276d9d32b34c407396e7ed5d6e2801340c"
a843f7cf088bf53945f84b96dcff50a840098bfb,2014-11-25 06:16:14+00:00,"Remove ryu plugin

Ryu plugin was marked deprecated in Juno.
This commit actually removes the code for Kilo.

We (Ryu team) recommend users to migrate to ofagent, on which
we aim to concentrate our development resources by this deprecation.

DocImpact
Partial-Bug: #1391714
Change-Id: I4916ce3c246730dc00516404471f8a1a008e27b6"
50f2a4f056961eebdea7a87c4e52088c39f3d3cc,2014-11-25 10:13:35+01:00,"Update i18n translation for Cisco plugins and cfg agent log msg's

All the existing LOG.info, LOG.warning, LOG.error and LOG.critical
messages should have _LI, _LW, _LE and _LC respectively. Also, debug
level log shouldn't be translated. This patch set will cover the cisco
directory under neutron/plugins.

Change-Id: I4463ea3f4ec72f683d61043105a7883f629cefe9
Partial-Bug: #1320867"
c8298b6f98c19cfd24cbd4e95cc2f6c6e840d826,2014-11-25 18:06:46+00:00,"Drop sudo requirement from a unit test

I noticed while working on some other stuff that a unit test was
prompting me for my sudo password.  I narrowed it down to the
offending test case and fixed it by mocking out the execute util, as
is done in several other places in these tests.

Change-Id: I93c6cdb8a26d3be5df5386091dc70a240ab7c190
Closes-bug: #1396276"
7af435ca40aa222c3f164a3750e8f11694fdcfc6,2014-11-26 15:48:03+09:00,"Reject trailing whitespaces in IP address

Trailing whitespaces in IP address or CIDR pass API validation. These
whitespaces sometimes cause serious troubles. For instance, a trailing
CR code in allocation pools cause an ovs-agent to crash when calling
iptables. In this case, a tenant user's operation mistake affects whole
system.

By modifying _validate_no_whitespace() to reject data with whitespaces
in the beginning and the end, the IP address and CIDR validation
detects invalid attributes. The MAC address validation already rejects
these whitespaces.

Change-Id: Id4589236cfd44c2fd5956c5ab4ab6871381a0c34
Closes-Bug: #1393329"
c15923230da2a21d5fdb56c885baa7f3aa045090,2014-11-26 09:13:42+00:00,"Fix floating-ips in error state in dvr mode

Before this fix an exception was raised when
creating the veth between the fip namespace and
the qrouter namespace when the veth was already
present.
This fix add a check to only create the veth if
not present.

Change-Id: Iefea9778223aac885bedfdacfdeacfce74776333
Closes-Bug: #1376013"
dac6a0c79e56a8b724dcfbf2c3058fbbc79cc7b0,2014-11-26 10:31:03+01:00,"Migrate to oslo.utils

The following modules are removed:
  - excutils,
  - importutils,
  - network_utils,
  - strutils,
  - timeutils.

Closes-Bug: #1385355
Change-Id: I1f34f17f5dbf37032584008f27e65d4dc4d475f4"
064f763bb59b11077d332a08498ea8bf822407e7,2014-11-26 22:12:21+01:00,"Migrate to oslo.middleware

Synced middleware module from incubator instead of removing it
completely. This is needed for grenade and to keep backwards
compatibility with existing installations with old api-paste.ini.

'log' module is updated as a dependency for middleware module.

'versionutils' are added as a new dependency for middleware module.

Closes-Bug: #1371701
Change-Id: Ib1c3161ccc98642091134f2285fed7c90244e600
Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>"
b0d763e92218391aae51b205f303a4d6712d87d7,2014-11-27 16:44:44+11:00,"Fix incorrect exception order in _execute_request

_execute_request has a list of exception handlers to log various types
of errors with more specific error messages. Unfortunately, it catches
requests.exceptions.ConnectionError before requests.exceptions.SSLError,
but ConnectionError is a superclass of SSLError so the latter is never
invoked.

This change corrects the exception handling order, and enables the
bad-except-order pylint check now that the check passes.

Change-Id: I92bacd6088de5cbc170bc5c081a1db1baeec69e7
Closes-Bug: #1360970"
f20b725b4a056090567504441d59ed88bfe62cef,2014-11-27 07:27:51+00:00,"Change description of default security group

The description for default security group in neutron
is “default”.
This confuses the end users, so updated the description
from “default” to “Default security group”.
Closes-Bug: #1291570

Change-Id: I9e024de935e8d17afd3d459cfa17e9feb0cd79fa"
4f1129190bfaa9a43e61c70728cddfb5ab83c21f,2014-11-28 11:40:41+11:00,"Enable undefined-loop-variable pylint check

This required a trivial refactor of two existing cases in the codebase.

These two cases were perfectly correct, but the check uncovered a 3rd
case which was a real bug (fixed separately).  The new versions also
make it clear that if the loop fails to break early then the 'result' is
None (and thus an error) and not simply the last element.  On balance,
it's probably worth enforcing this small inconvenience to coding style.

Change-Id: I780a95241f1454c6886d91f980eb9ada7678a119
Related-Bug: #1362466"
688b3794d2746d1c313119458d8548c1ef777aa4,2014-11-28 14:48:44+09:00,"MeteringPluginRpc: Fix crash in periodic_task

Restore __init__ chain which has been broken by
commit bdcc5a46d7776f50d5ae372798a913349629d2f6 .

Closes-Bug: #1396893
Change-Id: Ia1f0357b6726ac79a22ed1666eecebac33689aa1"
35662d07628452d14306f5197871ad64f6396ff3,2014-11-28 11:37:09-08:00,"Fix hostname validation for nameservers

Fixes the hostname validation to align with the RFC's demands[1].
This was done by replacing the full regex with a function that
broke the FQDN into individual components that were easier to
reason about with regular expressions.

Also added several test cases for domains so if someone wants
to convert it back to pure regex there will be better test vectors.

1. RFC 1123 says an all-digit hostname is allowed in section 2.1. It
   says that this more liberal syntax MUST be supported.

Closes-Bug: #1396932
Change-Id: I003cf14d95070707e43e40d55da62e11a28dfa4e"
fda6226a345c709da3facc464826344b6b05e994,2014-11-30 00:24:50-08:00,"hacking: Check if correct log markers are used

Makes the check tighter and would detect mistakes
like LOG.info(_LE(""foo"")).

This would reduce reviewer loads for relevant changes.

Partial-Bug: #1320867
Change-Id: I66c7ab1fd9b40beb857dc6c4b143ca47a5ebce4b"
6a9d1121472028f3583e577b62a7e576fff5806f,2014-11-30 22:23:02-05:00,"Alter execute_alembic_command() to not assume all commands

Alembic 0.7.1 is adding new diff directives add_fk and remove_fk.
The logic in execute_alembic_command() appears to assume all potential
commands are present in METHODS.   This patch adjusts it so that
it checks METHODS first, allowing the tests in neutron.tests.unit.db.test_migration
to pass.  However, if the design here requires that all potential
Alembic commands are handled, then this would not be the fix,
though I recommend that the potential list of Alembic directives
not be hardcoded.

Change-Id: Ib08685be252e1fdb0f10853f8fc9a7e19ac54a94
Closes-Bug: #1397796"
e672728a256f27c8082617dcca74c99cd2d85bed,2014-12-01 00:49:46-08:00,"Update i18n translation for VMware NSX plugin log msg's

All the existing LOG.info, LOG.warning, LOG.error and LOG.critical
messages should have _LI, _LW, _LE and _LC respectively. Also, debug
level log shouldn't be translated. This patch set will cover the vmware
directory under neutron/plugins.

Change-Id: Iba83af988cb2de919b05108f145efb19e9192ae4
Partial-Bug: #1320867"
9a8934d05c6cb19f1d2f938422c8304b5d296460,2014-12-01 15:49:36+02:00,"Update i18n translation for Mellanox plugin and agent log msg's

All the existing LOG.info, LOG.warning, LOG.error and LOG.critical
messages should have _LI, _LW, _LE and _LC respectively. Also, debug
level log shouldn't be translated. This patch set will cover the mlnx
directory under neutron/plugins.

Change-Id: Idfdb38360888002b066c8ac2d177a92b2ac173f4
Partial-Bug: #1320867"
dd39a3eda370543119a5f69fd35d4f6a43f81c3f,2014-12-02 12:13:08+09:00,"test_dhcp_agent: Fix no-op tests

Fix some uses of assertCalledOnceWith, which seems like a mistake of
assert_called_once_with.

Also, add a hacking check to prevent the mistake.

Closes-Bug: #1397184
Change-Id: I12d077e2724d52eff65d55aff1130fbbb69671b1"
2c5b6391c06f20959a86ad27950e30547f9559ac,2014-12-02 12:40:03+09:00,"iptables_manager: Fix get_binary_name for eventlet

The inspect trick used by get_binary_name does not work for
eventlet non-main threads.  It's actually the case for ofagent
and in that case it yields something like ""greenthread.py"",
which is not desirable because this module assumes it different
for each programs.  This commit fixes the problem by switching
to use sys.argv.

Closes-Bug: #1367075
Change-Id: I8e765882c58d9991a37f0bbb52cdccc406e287bd"
828afa4afa53fc44d1547ac4af16a7f99bd5cd09,2014-12-02 13:27:46+09:00,"pretty_tox.sh: Portablity improvement

A recent change (commit 0d5a11d9c722870f9c5e31a993219c7e240b4e19)
introduced bash dependency.  It broke my environment, where bash
is not available.  This change aims to restore it.

As far as I undestand, the change in question requires bash for
the ""pipefail"" feature.  Fortunately there's a more portable
well-known trick for the purpose.

Closes-Bug: #1398266
Change-Id: Id3561d81462923d20ad39584ba4cf8e1a294a8a8"
ada6fa4f235b5ce729ab3923f1d42a14e014c9a7,2014-12-02 15:43:25+03:00,"Strip square brackets from IPv6 addresses

When releasing old DHCP leases, square brackets around IPv6 addresses
should be stripped while reading dnsmasq hosts file.

Change-Id: Ia1e6d3a3cba30c94a1faa157d1d83da7beb523c4
Closes-bug: #1398380"
fd0417d000b0e8f0ff52b5f0d7ca9eb4029071a3,2014-12-02 13:40:24+00:00,"Refactor test_migration

test_migration contains some methods like overriding compare_server_default
and compare_foreign_keys that was added directly in ModelsMigrationsSync
class in oslo.db only in 1.1.0.

Also as now migrations refactoring is fully finished, there is no
need to have separate classes for each plugin.

Closes-bug: #1393691

Change-Id: I65b40fe52c2c6f4bae88e125bd1ee501aaa24114"
8bc7f5aff3aacf714fb7f4dc87220aa3f15a9e9d,2014-12-03 10:02:10+00:00,"Enforce log hints in neutron.plugins.hyperv

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule and
the change respects loggging guidelines.

Validate that hacking rules apply to directories:
    - neutron/plugins/hyperv

Change-Id: Iea2d63a4e74bf824ee308057570c980c50e937bc
Partial-bug: #1320867"
bd8fe77e37f27c92fa318c7a02af97672e0438e9,2014-12-03 10:02:14+00:00,"Enforce log hints in neutron.plugins.sriovnicagent

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule and
the change respects loggging guidelines.

Validate that hacking rules apply to directories:
    - neutron/plugins/sriovnicagent

Partial-bug: #1320867

Change-Id: Idde3d69c982db49e6b1510d6a6094af82fa25b13"
f70b71ab15f8e860ea57be78399af9e5bea2aec0,2014-12-03 05:20:24-08:00,"Update i18n translation for Midonet plugin

All the existing LOG.info, LOG.warning, LOG.error and LOG.critical
messages should have _LI, _LW, _LE and _LC respectively. Also, debug
level log shouldn't be translated. This patch set will cover the midonet
directory.

Change-Id: Ic74316640015bc98ec4b2722f4039f58a9ec2379
Partial-Bug: #1320867"
7c3921585e404c31272c4d31ed326f7323c062d8,2014-12-03 15:48:55+00:00,"Remove ovs-vsctl call from OVSInterfaceDriver

ovs_lib module is responsible for the interaction with OVS but
OVSInterfaceDriver._ovs_add_port() method calls directly
ovs-vsctl which implies inconsistencies: ovs_lib calls ovs-vsctl
with a timeout but not OVSInterfaceDriver._ovs_add_port().

This change moves ovs-vsctl call in OVSInterfaceDriver._ovs_add_port
to ovs_lib.

Closes-Bug: #1396489
Change-Id: I4d03f8beef2c5f2366ad2d1cf5f0b18b4f2857cd"
e2a3de6e61d6b6022e96097f3a423b3f90f77fb6,2014-12-03 16:21:33+00:00,"Enforce log hints in neutron.plugins.plumgrid

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule and
the change respects loggging guidelines.

Validate that hacking rules apply to directories:
    - neutron/plugins/plumgrid

Change-Id: Ie85abb93cdbe50bdd56c9f987784baf4c4dd631d
Partial-bug: #1320867"
bfcd061bdea0f1a88544f81e2031ec8d22270aad,2014-12-03 08:24:26-08:00,"Update i18n translation for Embrane plugin

All the existing LOG.info, LOG.warning, LOG.error and LOG.critical
messages should have _LI, _LW, _LE and _LC respectively. Also, debug
level log shouldn't be translated. This patch set will cover the
embrane directory.

Change-Id: I89cf8e63311f96c3f1759a6c885d1b98e6fed598
Partial-Bug: #1320867"
07cf6a1956de926976730059021c508eeb752175,2014-12-03 12:10:38-08:00,"Update i18n translation for Metaplugin plugin

All the existing LOG.info, LOG.warning, LOG.error and LOG.critical
messages should have _LI, _LW, _LE and _LC respectively. Also, debug
level log shouldn't be translated. This patch set will cover the
metaplugin directory.

Change-Id: I34437019fc8ffc38f11114d1d83dce54170ab989
Partial-Bug: #1320867"
946efcaa3931d167c49e2f48e7da7cc984bbcd85,2014-12-03 20:20:24+00:00,"Enforce log hints in opencontrail

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule
and the change respects loggging guidelines. Validate that hacking
rules apply to directories:- neutron/plugins/opencontrail

Change-Id: I44f215a672c08c7f0046bc026abe7c6a5d1697d1
Partial-bug: #1320867"
72d41174765540bb7672b545c336fb7aaad075e8,2014-12-04 13:35:56+01:00,"radvd: pass -m syslog to avoid thread lock for radvd 2.0+

Since radvd 2.0, the daemon does not use daemon_fork() function from
libdaemon, but instead calls Linux daemon() function directly. It also
passes (1, 1) arguments when logging method (-m) is either stderr (the
default) or stderr_syslog. The second argument's value = 1 means that
stderr is not closed and left there for (some) log messages.

For neutron, it means that corresponding execute() call that spawns
radvd and expects the invoked process to close stderr does not ever get
completed. The current thread that spawned radvd is locked waiting for
radvd to exit, which does not ever occur unless the process crashes or
receives a signal.

Since L3 agent gives exclusive access to updates queue for each router
to one of processing threads only, it means that the thread that got to
serve a radvd-powered subnet will not proceed and not update any new
ports or other changes to the router anymore.

Passing -m syslog makes radvd 2.0+ close stderr and return to execute()
caller, proceeding with router update processing. The same arguments
should work for old (pre 2.0) versions of radvd too, so passing them
unconditionally.

We could instead use -m logfile and pass appropriate -l <logfile>
argument to radvd to make it log to a log file located in router's
namespace storage path. Though that would be not in line with what
dnsmasq processes currently do for dhcp agent, where we log all messages
to syslog, so sticking to syslog for radvd for consistency.

Change-Id: I131db0639bc46d332ed48faa2bbe68a214264062
Closes-Bug: #1398779"
846ae08d877ea4537dcc706ecf8d1dbf3cc9bfc7,2014-12-05 03:25:47+00:00,"tox.ini: Prevent casual addition of bash dependency

While bash is not available on every environments, there seems to be
a tendency to introduce more bash dependency very casually.  This check
is intended to be a reminder to give people a chance to consider
alternatives.

Related-Bug: #1398266
Change-Id: I5103e0d7c111880d9a02dd93de56c567066ed14c"
997e70751c74004983b1e4079b084431ed0c7d27,2014-12-05 06:16:34+00:00,"return the dict of port when no sec-group involved

Commit abc16ebf made the get_sg_ids_grouped_by_port function not return
entries for ports without security groups. This causes the agent to not remove
previously created security groups for that port since the port is not
returned in the security_group_info_for_devices data.

This change fixes that by always including a list of security groups for each
port, even if that list is empty.

Change-Id: I9616708462a8b6f3d46ebd76db5cf8cb2826f4ad
Closes-Bug: #1398312"
be34d3aa72a2bb2315fffe17a3e75dca1ce1c82b,2014-12-07 17:25:40+02:00,"Make sudo check in ip_lib.IpNetnsCommand.execute optional

If the process runs as root the root_helper and sudo check
are not required.

Closes-Bug: #1393184
Change-Id: I7876ca7e4652f8152d1a8a0015cc897b09b31899"
907094bf12f069fe5e1a3ca19a91df5de9029a32,2014-12-07 21:58:13+01:00,"Enforce log hints in ofagent and oneconvergence

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule
and the change respects loggging guidelines. Validate that hacking
rules apply to directories:-
    neutron/plugins/ofagent
    neutron/plugins/oneconvergence

Change-Id: I520a36ae53848b828ce33f4050606a7238f4cbce
Partial-bug: #1320867"
d1531b5e99a1b1d20c5b9ef7254b4ae812b44654,2014-12-08 13:44:27+03:00,"Reduce code duplication in test_linux_dhcp

This patch reduces duplication in test_output_opts_file_*()

Change-Id: Ie68b26a48c1d0ed9cb8e584a7284c06688937cf9
Closes-Bug: #1352870"
7bdbd6f3345e416e4f8e8c0e8f2741081ea339c6,2014-12-08 19:50:25+01:00,"Disallow log hints in LOG.debug

Currently LOG.debug(_(...)) is disallowed but not LOG.debug(_Lx(...)).
This change disallows all log hints in LOG.debug calls.

Change-Id: I9758ad4ca9f7e8534abf38f5064b01b0c353e904
Partial-bug: #1320867"
32ef5da4882ab583c2bd7cd04e052b67f11faf92,2014-12-08 19:59:24+01:00,"Enforce log hints

This change enforces log hints use and removes debug level log
translation, modifications are validated through a hacking rule
and the change respects logging guidelines.

Change-Id: Ia4e6659b8b59732d88cd603b0e6c630fad37aae5
Closes-bug: #1320867"
aa728c00bab3bb6b3e00866e44ca054b1e848bb6,2014-12-08 19:58:12+00:00,"Fix AttributeError during startup of ovs agent in DVR mode

Make sure the agent starts processing incoming requests only after the entire
initialization is complete. This is done by making explicit when the rpc loop
is supposed to start, i.e. right at the end of the init process.

This fix was necessary because the agent starts processing rpc messages even
though it has not completed the entire initialization of bridges and data
structures; this is usually okay, but in case of DVR, this leads to a
situation where during the the first run, the agent asks the server to be
assigned a MAC address; this in turn leads the server to fanout the generated
MAC to the running agents, the requesting one included; because of the
incomplete setup, the above mentioned error occurs. During subsequent
restarts, the problem no longer appears.

Closes-bug: #1395196

Change-Id: I792697b94fef39971693cf8aff715c270601cecb"
66dcb8b935a00e7f7566802d662ebb1f265eab1f,2014-12-09 15:47:05+00:00,"Auto allocate gateway_ip even for SLAAC subnets

For a SLAAC subnet that is created without specifying the gateway_ip,
Neutron currently allocates (If0c48a7287a828eef4a0f0b0859d4f898d2937bd)
the gateway_ip at a later stage (i.e., neutron router_interface_add).
In order to keep the API consistent between IPv4 and IPv6, it is
recommended to allocate the gateway_ip during subnet_create stage itself.

Closes-Bug: #1394112
Change-Id: I965232930502c21b605fe360bb138bb6ea73d2b0"
5da567f6035a97cd989f1da9f6bafc4c4396bfa2,2014-12-10 13:23:37+09:00,"ofa_test_base: Fix NoSuchOptError in UT

Ensure setting up cfg.CONF.
Otherwise, depending on the execution order of tests,
some tests in test_ofa_neutron_agent can fail with
the following exception:

    NoSuchOptError: no such option: config_dir

The problem has been exposed by the recently merged change
for policy module, commit d83731a96d3b47fab1295de1fb53cfe30576619c .

Closes-Bug: #1392569
Change-Id: I0d38df0510b95160c67ea7b76ed413138fa3d770"
b25915f1d94e19756c932ae18119bdf872cc6316,2014-12-11 09:05:16+01:00,"Fix race condition in ProcessMonitor

If any new external process was enabled/disabled during
the process monitoring loop time, a RuntimeError: dictionary
changed size during iteration was thrown. This is fixed
by pre-building the service list from the dictionary
for the iteration.

Closes-Bug: #1401042

Change-Id: Id0a3af22fb85992bde35d8c691bee3ddf435639d"
089e60a68b313c1f7077f010964ac27141425517,2014-12-11 20:49:11+01:00,"Migrate to oslo.context

That's just a matter of adding requirements.txt entry, fixing imports,
and dropping the corresponding oslo-incubator module from the tree.

While at it, made all imports to import the module into 'oslo_context' and
not just 'context', so that we don't override the module locally in
multiple methods that receive their context arguments with the same
name, making the library inaccessible from inside those methods.

Change-Id: Ie62af970b3b7f225de453e56c01abc4b12af8f5e
Closes-Bug: #1401054"
5908a60ab98886a807044da56f51bceafd15edc9,2014-12-11 13:06:47-08:00,"Fix for KeyError: 'gw_port_host' on l3_agent

The dictionary field 'gw_port_host' was added for
DVR routers and is used by the scheduler and l3_agent
to schedule where the SNAT port for a DVR router
will be hosted.  In some code flows on the l3_agent,
this field is checked to determine what the agent
should do if the host matches its own or not.

Recently it has been seen that the router data sent
from the scheduler is missing this field in some cases.
This causes the agent to throw a KeyError and not function
properly.  This patch will make the l3_agent more robust
and less fragile by calling 'get' instead of assuming the
field will be there.

More work may be needed on the scheduler side to see why
this field is missing. That is why I am marking this as a
partial-fix for now. But this patch will make the l3_agent
less prone to errors and therefore an improvement.

Change-Id: Ib26ccfa7b945cb4e8f2ec4adc5e6ae91cbaae02e
Partial-Bug: #1394043"
a93abbbfef7f0b88be0ad42048d52b658c29e1c4,2014-12-12 01:06:09+00:00,"Catch duplicate errors scheduling SNAT service

Catch DBDuplicateEntry errors when scheduling SNAT to
a service node to prevent harmless tracebacks in the log.
These can occur if scheduling occurs concurrently,
so they are safe to ignore.

Closes-Bug: #1381958
Change-Id: If242b04b372609f640f3ce88f4245c17a45bf69d"
5b0aa48ec1502b3522ff19eada74855d98ec25de,2014-12-12 01:45:36+00:00,"Mock up time.sleep to avoid unnecessary wait in test_ovs_tunnel

Unnecessary wait in ovs tunnel UT introduces extra 6 seconds time cost,
and makes 3 test_daemon_loop cases the slowest tests. Mock up time.sleep
to reduce UT time, from around 6.272s to 0.135s.

Closes-bug: #1401457

Change-Id: Ic0a968a400268af1f66c91e4c39e7d3acf492ef3"
622d872efc8e0317eaf6ade870f3f01a9cc64e90,2014-12-12 16:17:00-08:00,"Generate testr_results.html for neutron functional job

Tweak job post_test_hook script to generate testr results
the same way other jobs do, with a pretty html view that
is easy to digest and navigate.

Closes-bug: #1401340

Change-Id: Ib355f34917580b88bda3d550e33fc630a8e7120b"
77860af4831ed34b3b1b2299cf11041aa5573558,2014-12-15 05:15:16+00:00,"openvswitch/ofagent: Remove OVS.enable_tunneling option

The option has been marked deprecated in IceHouse.
Please use AGENT.tunnel_types=gre instead.

DocImpact
Related-Bug: #1195374
Change-Id: Iea6159c5949a63a0b680818a3fd0928d470115bd"
7c18d1191c79fcfe46b60b6e5d8f06a687c86688,2014-12-15 00:13:01-08:00,"Fixed test test_update_port_security_off_address_pairs

This test checks that port-update fails with 409 return code when
port-security is turned off on a port which contains address-pairs.
The test had a typo ('security-groups' -> 'security-group') which would
have cause it to produce false-positive.
This change rewrites the test and eliminates the possibility of this
false-positive to occurs.

Change-Id: Ib54ad089872f28eb28a3d4d050ba0ee8fdc2bfe2
Closes-Bug: #1400725
Signed-off-by: Roey Chen <roeyc@vmware.com>"
f0894c7bf99d918c0e67ab25498d53e990c09aff,2014-12-15 16:20:21+08:00,"Improve performance of get_active_networks_info

RPC 'get_active_networks_info' currently uses nested loop to fill
the network structure with subnet and port info. Speed up this
operation by using itertools.groupby.

Change-Id: If765dd8f2f8010b79eb168179a64dccf940e9cbb
Closes-Bug: #1390356"
e33349e216e9361f4d93e012b91dd69b4bea9e92,2014-12-15 12:09:55+01:00,"tests: initialize admin context after super().setUp call

New policy code requires that CONF is already initialized when policy
checks are invoked. It means that no Neutron context objects should be
created before BaseTestCase.setUp() is called that will set
configuration, among other things.

Ideally, we would just make sure that all test cases invoke
super().setUp() as the very first line of any subclass setUp() methods.
But since some of test cases require prior setup (like mocking extension
manager) before proceeding to base class, we end up with magically
shuffling context instantiations to occur below super() calls.

Change-Id: Ib1039ea1ff9480ca57f9cb0c917469d0d2ad28b8
Closes-Bug: #1400301"
b38f1bfa7b4f662182f552530b43301b214baa8d,2014-12-15 11:11:26+00:00,"Fix neutron hang for IPv6 allocation pool update

While rebuilding IPAllocationPools, Neutron is using netaddr.iter_iprange
(a generator that produces IPAddress objects). For an IPv6 subnet, this is
a costly operation and is causing Neutron Server to hang. This patch
addresses the issue by replacing netaddr.iter_iprange with netaddr.IPRange
which provides the same functionality while calculating the IPSets.

Closes-Bug: #1401751
Change-Id: I2287e5348aab82e39cf1b6e2884d08237a09b06d"
655622e7e90d16225b4700d7e475f64c8c1a138c,2014-12-15 12:19:26+00:00,"Enable test_migration

After splitting in neutron database was left a number of tables
that don't have any models. Test should be improved to skip these
tables from checking.

Closes-bug: #1401424

Partially-Implements: blueprint services-split

Change-Id: I201b4a310eb26a86765c8541fba6e2d42431cf2a"
3f8c8abd0a8b629fc9a5e09608f22a73db30bdb8,2014-12-15 16:04:23+02:00,"Remove mlnx plugin

Mellanox plugin was marked deprecated in Juno.
This commit actually removes the code for Kilo.

Mellanox recommends users to use mlnx or SR-IOV MD

DocImpact
Closes-Bug: #1386539

Change-Id: I7d109bf62f71b2996aef4e0002f447ca3439a5cf
Signed-off-by: Moshe Levi <moshele@mellanox.com>"
3a7c3f77b0a311447c8db8d4d7c50326f40b2515,2014-12-16 11:19:09+03:00,"Avoid unnecessary explicit str() conversion around exceptions

There are number of places like

except Exception as exc:
            LOG.error(""Failed to get network: %s"", str(exc))

where str() is not needed since %s substitution already does
the same conversion. Also LOG.error could be replaced with
LOG.exception, so argument exc won't be needed at all.

Closes-bug: #1398839

Change-Id: I73cc6e1ce55ade08e7706b99a5ab075f7059a4ef"
532cd91fa79f6061399a1bf326a49c5e6f5ece6b,2014-12-16 13:51:02+00:00,"Remove locking from network and subnet delete op

delete_subnet in Ml2 plugin instead of using SELECT FOR
UPDATE deletes the IPAllocations that can be auto-deleted
straight away.
An exception is raised if there are ports that cannot be
autodeleted.

delete_network in ML2 plugin tries to delete all ports
and subnets before performing the network deletion.
No lock is needed here - if some other process modifies
the Port or Subnet table, adding new items, the network
deletion will fail because of a violation of a foreign
key contraint.
In that case the operation will be retried.

Change-Id: Ib4e9441a95d6c80b92a43d55fdeb18d7b51a1cf3
Closes-bug: #1332917"
b08fe1b9dc4b7247c5ed8c4f2e1c8e07ba56a739,2014-12-17 09:23:01+05:18,"Support 'alive' filter for get_agents() in agents_db

Presently 'alive' filter is not supported when the
neutron cli calls 'neutron agent_list --alive False'.

This patch fixes the issue by pruning the agent list
according to the 'alive' filter. If the client passes
invalid value to the alive filter, then InvalidInput
exception is raised.

DocImpact
APIImpact

Change-Id: I8935c09d82f6e88252560a5232adf22002cbae08
Closes-bug: #1398398"
79f89db7fef191e22f0494b468a099edd6f0d611,2014-12-17 15:07:28+11:00,"Correct arguments to logging function

ofctl_arg_supported contains a bad call to LOG.debug in an exception
path.

    LOG.debug(""...%s. Exception: %s"", (full_args, e))

This throws ""TypeError: not enough arguments for format string"" and
should be:

    LOG.debug(""...%s. Exception: %s"", full_args, e)

(Found via pylint)

Change-Id: Ib14666f60b16584f225b1e0c4fed82ef7e941aac
Closes-Bug: #1403296"
a1a908e815f27f630bc7a7a5dfc06031cfc2bf3b,2014-12-17 15:44:12+11:00,"Cisco: unsupported format character in log format

CiscoCfgAgent.hosting_devices_removed() contains an error in the
format string used to log errors:

    LOG.error(_LE(""Invalid payload format for received RPC message ""
		""`hosting_devices_removed`. Error is %{error}s. ""
		""Payload is %(payload)s""),
	      {'error': e, 'payload': payload})

""%{error}s"" should be ""%(error)s""

The existing version raises ""ValueError: unsupported format character
'{' (0x7b)"" when invoked.

(found via pylint)

Change-Id: Ic5e9db2a19aa7652cbbd1ee04d7e02914e8d0093
Closes-Bug: #1403304"
d481cdd3d9ea07a31c2480286d9b7f247049ba5d,2014-12-17 13:02:54+03:00,"Cleanup req_format in test_api_v2_resource

Since XML support has been removed test cases in test_api_v2_resource
no longer need to specify req_format.

Change-Id: Ic6572abc3121535e19d21e9a34d70bb42b9782de
Related-Bug: #1380787"
9833364fbd4705fc4a563192cf2707ffe8cf763d,2014-12-17 06:54:30-08:00,"Option for root_helper when checking namespace

Adds a configuration option to use the root helper in the ip netns list
command executed by the IP library when checking for the existence of a
namespace.  This prevents an unprivileged l3 agent from erroneously trying
to create another namespace when one already exists. This is necessary in
environments with constrained permissions on /var/run/netns via umask or
other access controls.

However, due to the overhead incurred by calling sudo every time on systems
where this restriction isn't in place, this configuration won't be desired
all of the time. So this patch also adds a sanity check that reports back
whether or not the root_helper is required for a deployment.

DocImpact

Closes-Bug: #1348812
Closes-Bug: #1311804
Change-Id: If7560161de3be6066af0d9866e6b5cd7c7247c33"
91b7fc7f162751936f7cb15d4add932a4aebd55b,2014-12-17 23:23:03+08:00,"Add OVS status and fix OVS crash

OVS crash/restart is unpredictable, so neutron-ovs-agent should be
robust enough under that situation. But currently ovs-agent doesn't
figure out this error status(only check ovs restart/normal status)
and still continue to apply subsequent operations(set br/add patch
port/...) till causing exceptions/crash. Add flag to fully represent
ovs status. Base on that, we can add proper fail-over code in method
rpc_loop, to treat ovs dead/restart gracefully to prevent agent
crashes while it is running.
Closes-bug: #1296202

Change-Id: Id058b7ddef2ed337627dc692d0418786ad14f4b4"
8e5c24336bee834334e56a5ef8ccb66e380baa3b,2014-12-18 14:20:27+00:00,"Update heal_script for alembic 0.7.1

Alembic 0.7.1 contains checks of foreign keys so
method check_foreign_keys is not needed anymore.
Heal script should be updated to make it possible to use alembic
methods.

Closes-bug: #1398417

Change-Id: I7d0ba7f00567ae5a4dd0669ed86d6e8d554ca4ec"
3e0745827f414ecc39a0b0a40349e3646a8e2db9,2014-12-18 22:41:05-05:00,"Move DB TestModelsMigrations from unit to functional

The tests to check that DB migrations and models are in sync depends
on the mysql and postgresql backends being available with a specific
DB user and database created. This violates the principles for unit
tests and therefore these tests should be moved to functional tests.

For these tests to work in the functional job in the gate, the
backends must be installed and the DB user and database created.
We do this via the functional gate hook.

Closes-bug: #1372981

Change-Id: I7b89feef3f19ca07dbfb05acfaa30529a5bf683d"
5981b9c11651589a0ed0ae4844f9284da84bab27,2014-12-19 10:18:55+01:00,"Remove NSX 'service' plugin

Following the spin-off for Neutron advanced services, this plugin
has become non-functional.
This patch removes the plugin, the service drivers, the database
models which kept tracking of resource associations, exceptions,
and obviously unit tests.

As there were some extensions which were leveraged only by this
plugin, they are being removed as well. In particular, one of
these extensions, 'routed-service-insertion' was in the
neutron.extensions package rather than neutron.plugins.vmware
package. This was for historical reasons. As no other plugin is
using this extension, it is being removed as well with this
patch.

By removing this plugin vmware the temporary skips applied to
neutron unit tests can be lifted. This patch does this.

Closes-Bug: #1403585

Change-Id: I0717f955b0f787c2951cb9db44ea5decc5d3dff0"
66f5eadec0adfa1dc55809fbe52b087a17c8a794,2014-12-19 02:04:02-08:00,"Allow setting a tenant router's external IP

Adds an external_ip option to the router creation
and update operations to set the IP address the router
will try to use as its fixed IP on the external network
it's attached to. By default this is restricted to an
admin-only operation by policy.json.

DocImpact
ApiImpact

Implements: blueprint specify-router-ext-ip
Closes-Bug: #1188427
Change-Id: Iba7c606eea48181fc10e9d0d5dc667e6f48f37de"
e4fd24d0459a708cfeed4494f177e3123e842b3f,2014-12-20 09:39:55-08:00,"Copy the contrib directory instead of moving it

This is necessary because pbr is stupid enough not to be
able to handle symlinks. The initial symlink was necessary to
avoid breaking the functional job. Once change [1] merges we
can drop the old contrib directory.

[1] https://review.openstack.org/#/c/142603/

Change-Id: I683009b1c5b3520e5f9f2c17a9a0dabefdeebe45"
3bf7e4574267eca9b013d5485477458baf7a2891,2014-12-20 20:57:54-08:00,"Prevent symlinks to be added to the tree

Symlinks cannot be allowed because they are not supported by distutils.
Adding them results into package build failures.

This patch add a check that verifies that no symlinks can slip in.

Closes-bug: #1404605

Change-Id: I0d308127081bb2fa4ff7d7e0ed2f1b6e915163c9"
1e562decdc03295dec4cb37d26162e5d9aa31079,2014-12-21 16:35:20+02:00,"Update L3 agent drivers singletons to look at new agent

L3 agent drivers are singletons. They're created once, and hold
self.l3_agent. During testing, the agent is tossed away and
re-built, but the drivers singletons are pointing at the old
agent, and its old configuration.

Change-Id: Ie8a15318e71ea47cccad3b788751d914d51cbf18
Closes-Bug: #1404662"
a9571b5d8ecc2db8f2d0808eb444bab4baf348c3,2014-12-22 10:25:58+11:00,"Fix typo'd format parameter in midonet_lib.py

In add_static_nat(...):

        LOG.debug(""MidoClient.add_static_nat called: ""
                  ""tenant_id=%(tenant_id)s, chain_name=%(chain_name)s, ""
                  ""from_ip=%(from_ip)s, to_ip=%(to_ip)s, ""
                  ""port_id=%(port_id)s, nat_type=%(nat_type)s"",
                  {'tenant_id': tenant_id, 'chain_name': chain_name,
                   'from_ip': from_ip, 'to_ip': to_ip,
                   'portid': port_id, 'nat_type': nat_type})

Note port_id vs portid.  This line of code raises a KeyError if debug
logging is enabled.

(Found via pylint)

Change-Id: I4d76255a559489f2f0e074b4489cfa5f33f1dddf
Closes-Bug: #1404755"
e3492286ca247c2f910d073044dd2b9c5387d150,2014-12-22 14:52:42+11:00,"ml2: remove superfluous %s in LOG.debug() format

ml2.db.get_dynamic_segment() includes this line:

   LOG.debug(""No dynamic segment %s found for ""
	     ""Network:%(network_id)s, ""
	     ""Physical network:%(physnet)s, ""
	     ""segmentation_id:%(segmentation_id)s"",
	     {'network_id': network_id,
	      'physnet': physical_network,
	      'segmentation_id': segmentation_id})

Note the superfluous %s in the format string.  At run-time, %s prints
the args hash again and doesn't cause an error, but this is clearly
unintended.

Since there doesn't seem to be any value that was meant to be used
instead, this change simply removes the %s.

Change-Id: I414c7b4497f59927d8b6ec5f057dca19aa4ef122
Closes-Bug: #1404782"
96f40c2c80eee96dc9475d17a7248eeb78ccc383,2014-12-22 15:11:07+11:00,"Cisco: logging incorrectly called with (fmt, arg) tuple

cisco.db.n1kv_db_v2._validate_segment_range_uniqueness() includes these
lines:

   msg = (_(""NetworkProfile name %s already exists""),
          net_p[""name""])
   LOG.error(msg)
   raise n_exc.InvalidInput(error_message=msg)

As written, msg is a tuple, and the various logging lines below print
the tuple members without properly expanding the format string as
intended.

The format in msg should have been expanded using % - as was presumably
the intention.  This change fixes this and a similar example elsewhere
in this file.

Change-Id: I993245a18ff3db5d5700fb1298ffc958d5827736
Closes-Bug: #1404785"
7a006a83e9023740122b575a9518541ff57c1cb5,2014-12-22 17:12:54+11:00,"Use lazy logging interpolation

There are a small number of examples of ""eager"" interpolation in
neutron:
  logging.debug(""foo %s"" % arg)

These should be converted to perform the interpolation lazily within
the logging function, since if the severity is below the logging level
then the interpolation can be skipped entirely.

This change addresses all such current examples found in neutron core
via a pylint test.  Vendor plugins and services are fixed elsewhere.

Change-Id: I823d8453cd76e4985cabd31ca6b939f43a80b36c
Partial-Bug: #1404788"
65dd2e510f48d4e5309fb550c9495be5b4bad253,2014-12-22 17:12:54+11:00,"bigswitch: Use lazy logging interpolation

There are a small number of examples of ""eager"" interpolation in
neutron:
  logging.debug(""foo %s"" % arg)

These should be converted to perform the interpolation lazily within
the logging function, since if the severity is below the logging level
then the interpolation can be skipped entirely.

This change addresses all such examples found in bigswitch via a pylint
test.  Other occurrences are addressed elsewhere.

Change-Id: I23fd4e7d0e4173e753a124d62a1563ce6ac674ca
Partial-Bug: #1404788"
15581431c1a30a30f33860e0f895b7973d830e48,2014-12-22 17:12:54+11:00,"embrane: Use lazy logging interpolation

There are a small number of examples of ""eager"" interpolation in
neutron:
  logging.debug(""foo %s"" % arg)

These should be converted to perform the interpolation lazily within
the logging function, since if the severity is below the logging level
then the interpolation can be skipped entirely.

This change addresses all such examples found in embrane via a pylint
test.  Other occurrences are addressed elsewhere.

Change-Id: Iabceb8c7d32111ae97d1200fbd25681e317f7bb7
Partial-Bug: #1404788"
4a5a8aab0f6a451642b459cdc510edb4e36a9858,2014-12-22 17:12:54+11:00,"linuxbridge: Use lazy logging interpolation

There are a small number of examples of ""eager"" interpolation in
neutron:
  logging.debug(""foo %s"" % arg)

These should be converted to perform the interpolation lazily within
the logging function, since if the severity is below the logging level
then the interpolation can be skipped entirely.

This change addresses all such examples found in linuxbridge agent via a
pylint test.  Other occurrences are addressed elsewhere.

Change-Id: I5cb3bbb401f5049760dfe5263a52bd43f23dcfd4
Partial-Bug: #1404788"
a70a38fc8c23461a08ecadb113d2c54eb4e5bbc4,2014-12-22 17:12:54+11:00,"brocade: Use lazy logging interpolation

There are a small number of examples of ""eager"" interpolation in
neutron:
  logging.debug(""foo %s"" % arg)

These should be converted to perform the interpolation lazily within
the logging function, since if the severity is below the logging level
then the interpolation can be skipped entirely.

This change addresses all such examples found in brocade
l3_router_plugin via a pylint test.  Other occurrences are addressed
elsewhere.

Change-Id: Ia2d51e8ecbc7af81390577ec69c5ce18523b65f3
Partial-Bug: #1404788"
4f3a9135acb561172f7af45bc82739d6dc49f23c,2014-12-22 11:37:38+01:00,"ipv6: set OtherConfig flag for DHCPv6 stateless subnets

In case of DHCPv6 stateless subnets, we should inform DHCP clients about
other configuration values available from DHCP server. This is done by
setting O (other) flag in RAs, which is controlled by AdvOtherConfigFlag
setting in radvd case.

Since radvd configuration file becomes quite complex, migrated its
generation to Jinja2.

Added a basic unit test that checks that flag is set for stateless mode
and not SLAAC. For stateful, it doesn't really matter whether other flag
is set, so no need to expect any value of it.

No more unit tests seem to be needed: conditional prefix generation is
already covered in test_l3_agent, and other statements are common for
all ipv6_ra_modes.

Change-Id: I1ddad3e1f5efce2b6da4ec00b9294e08fe1e85dd
Closes-Bug: #1397022"
c948e4318665492cd9a46bfc9ec47250b8cc9692,2014-12-22 11:42:35-05:00,"ML2 UT: Fix incorrect mock return value

In the UT for ML2 Cisco Nexus MD,
in the function test_ncclient_version_detect()
The value being passed into the mock is incorrect
to mock the ncclient connect object.

Change-Id: Ife1fc2a8f8fe284605ad77cee4ffa307e6d5360c
Closes-Bug: #1404927"
7da314434e445ce3a6f3642c784954ef61154b7f,2014-12-23 11:06:50+00:00,"validate L3 HA min/max _l3_agents_per_router

The below missing validation is added for L3 HA
max_l3_agents_per_router >= min_l3_agents_per_router

Closes-bug: #1400311
Change-Id: I1d548b9a0a04c8855ada42206c2a333597c2c85b"
0937dca14b1f60bdf3d4377ee305d41a1721f153,2014-12-23 18:50:08+00:00,"get_binary_name should returns strings without spaces

Iptables does not support chain names with spaces. It implies
get_binary_name should return strings without spaces (they are used as
chain name prefix). But currently 'python -m unittest $module' implies
spaces in get_binary_name() result, it disallows to use it when $module
is a functional test module. This change replaces spaces with
underscores in get_binary_name results.

Change-Id: Ie7c8518b92be46a4eea4e9345713fdeba844126d
Closes-Bug: #1404250"
8504dedd9c8b3fe899c5806115a6f0367c30e27e,2014-12-23 19:36:42+00:00,"Fixes spelling error

Closes-Bug: #1404341

Change-Id: I1e0209ab293494942efab12baabd4858df40e3aa"
7e65529923953c815e77d726b56f94635367532f,2014-12-23 19:40:08+00:00,"Add validation for the dvr router l3agent binding

Validates dvr router add/remove cases to the
l3agents running in different dvr modes such
as ""dvr_snat"" and ""dvr"" mode.

In the case of distributed virtual routers it
does not make sense to move distributed routers
from one ""dvr"" node to another ""dvr"" node.

Also added some unit tests that addresses the
validation of legacy routers to dvr agent and
dvr routers to legacy agent.

Partial-Bug: #1369721

Change-Id: I008dda6abaf25094b11f3730b951e096dd3b7025"
b78c5e54abd10fc71a46788110f9f36e6496414e,2014-12-24 01:21:44+01:00,"Do not run neutron-ns-metadata-proxy as root on L3 agent

Currently neutron-ns-metadata-proxy runs with root permissions when
namespaces are enabled on the l3 agent because root permissions are
required to ""enter"" in the namespace. But neutron-ns-metadata-proxy
permissions should be reduced as much as possible because it is
reachable from vms.

This change allows to change neutron-ns-metadata-proxy permissions
after its startup through the 2 new options metadata_proxy_user and
metadata_proxy_group which allow to define user/group running metadata
proxy after its initialization. Their default values are
neutron-l3-agent effective user and group.

Permissions drop is done after metadata proxy daemon writes its
pid in its pidfile (it could be disallowed after permissions drop).

Using nobody as metadata_proxy_user/group (more secure) is currently
not supported because:

* nobody has not the permission to connect the metadata socket,
* nobody has not the permission to log to file because neutron uses
  WatchedFileHandler (which requires read/write permissions after
  permissions drop).
This limitation will be addressed in a daughter change.

DocImpact
Partial-Bug: #1187107
Change-Id: I55c8c3fb14ed91ae8570f98f19c2cdbaf89d42fc"
4fdda65a5b9f379af997e1e971865ccfa7a93156,2014-12-23 16:25:06-08:00,"Clean-up sanity checks done via shell scripts

Move the various checks done via shell into a single file;
this is cleaner and we'll have a lot more space to explain
what is going on.

Related-bug: #1404605

Change-Id: Ibb451c6a25217f37b73983c30891f55b35f143cd"
87a3d9fc3a41e45d7c14517243b3f8bda9c0d367,2014-12-24 10:34:32+08:00,"Remove _delete_port_security_group_bindings from delete_port

Since SecurityGroupPortBinding has a foreign key constraint with Port
and cascade deleting is defined, SecurityGroupPortBinding can be
deleted when port is deleted, thus _delete_port_security_group_bindings
call in ML2 delete_port is not needed and can be removed. Redundant
calls in other core plugins are also removed in this patch.

_delete_port_security_group_bindings is needed when updating ports so
this method cannot be removed directly.

Change-Id: I33c787fbed46d6049d3b24ccd246a8484d8aa306
Closes-Bug: #1373199"
8399577c6edd2352047c36e5cc4a67d806b6a5ac,2014-12-24 15:06:01+03:00,"csr1kv_hd_driver: Improve exception handling

When logging exceptions the exception handling should make use
of save_and_reraise.

Partial-bug: #1305032

Change-Id: I316417f3c9cbb28ea0cf2cd24a1f5b2b803b5a95"
787c8dd29f7abf5f4e828b38bfd56f509f7f89ce,2014-12-25 11:10:50+05:18,"Do not count dvr agents while creating HA ports

Presently dvr agents are not excluded when a
ha router interface is created, because of which
an interface is created even in the dvr agent namespace.

This patch fixes the issue by supporting a filter - 'agent_modes'
in the function L3AgentSchedulerDbMixin.get_l3_agents.
If this filter is defined, only the l3 agents whose modes
defined in this filter are returned

Change-Id: I9383e2a30ddc4f2c3e04ff0821726b8dc3ec89a0
Closes-bug: #1397209"
3f0bf6cfac2e151d5a4a7f076062b3365bdbf457,2014-12-27 00:33:41-07:00,"Don't unnecessarily loop through all ports/interfaces

The ovs-vsctl 'list' command can take a list of records as an
argument, so there is no need to manually loop through all records
discarding the ones with names that don't match the bridge's
port name list.

Also, since the data is returned as json, the ofport returned isn't
a string, so we don't have to convert it to int for testing.

Closes-Bug: #1404935
Change-Id: Ica20f8f8315196aa5a04657d28dde41a75f0368d"
8e7a0dbb12082f6159d98a4628fb8a6fcd05e95a,2014-12-27 11:13:46-08:00,"Eventlet green threads not released back to pool

Presently, the wsgi server allows persist connections. Hence even after
the response is sent to the client, it doesn't close the client socket
connection. Because of this problem, the green thread is not released
back to the pool.

In order to close the client socket connection explicitly after the
response is sent and read successfully by the client, you simply have to
set keepalive to False when you create a wsgi server.

Added a parameter to take advantage of the new(ish) eventlet socket timeout
behaviour. Allows closing idle client connections after a period of time, eg:

$ time nc localhost 8776
real    1m0.063s

Setting 'client_socket_timeout = 0' means do not timeout.

DocImpact:
Added wsgi_keep_alive option (default=True).
Added client_socket_timeout option (default=900).

SecurityImpact

Closes-Bug: #1361360
Change-Id: I3a361d6590d1800b85791f23ac1cdfd79815341b"
f854cf3af9ec895fa3e368af7c57c7548cf0bc5b,2014-12-29 15:19:02+01:00,"VMware: fix security group check on port create

The code did not consider an empty list among the cases
in which security groups are not supplied on port create.

Change-Id: I325cce2165d2ec683ecac3cabdbfb80a03b288c9
Closes-Bug: #1405311"
cd78c7cc11940ee2e46e55001b2cfa6fbf0f7159,2014-12-29 15:12:52-07:00,"Retry on unassigned ofport instead of treating it as a failure

Open vSwitch will return '[]' when querying an interface's ofport
when the ofport has not yet been assigned. This doesn't signal a
failure, but the get_port_ofport code was treating it as such.
This patch uses a decorator from python-retrying which has been
added as a dependency of oslo_concurrency and therefore packaged
everywhere. The call to fetch the ofport is retried until the
vsctl_timeout is reached and, on failure, INVALID_OFPORT is
returned.

The add_port function will attempt to delete the port if
INVALID_OFPORT is returned from get_port_ofport. add_port is also
extended to take optional Interface options so that the
add_tunnel_port and add_patch_port functions can reuse it instead
of just duplicating its functionality.

Closes-Bug: #1341020
Change-Id: Ifc52d8589c7aafd360893cb9c1cdcbf43b04ee2c"
3db0e619c83892a7aab61807969205253833ff8d,2014-12-30 13:01:55+00:00,"Stale VXLAN & GRE tunnel endpoint deletion from DB

Description:
Stale GRE and VXLAN tunnel endpoints persists in neutron db this should be
deleted from the database. Also, if local_ip of L2 agent changes the
stale tunnel ports and flows persists on br-tun on other Compute Nodes and
Network Nodes for that remote ip this should also be removed.

Implementation

Plugin changes:
Added host column in 'ml2_vxlan_endpoints' and 'ml2_gre_endpoints' table.
Added delete_endpoint method for deleting the stale endpoints from db.
Modified tunnel_sync() method to accommodate these changes.
Modified testcases in test_type_vxlan.py
Modified testcases in test_type_gre.py

Agent changes:
Added tunnel_delete rpc for removing stale ports and flows from br-tun.
tunnel_sync rpc signature upgrade to obtain 'host'.
Added testcases for TunnelRpcCallbackMixin().

This patch-set only deals with plugin side changes.

Partial-Bug: #1179223

Change-Id: I75c6581fcc9f47a68bde29cbefcaa1a2a082344e"
2bdf7d67a7e20cc688f292155ae2b29af785b920,2014-12-30 18:17:19-08:00,"Add a constant for router interface device owners

In the absense of a port object that includes a check for whether a
given port is implementing a router interface, this change adds the
ROUTER_INTERFACE_OWNERS tuple containing the relevant DEVICE_OWNER_*
constants.

This change was suggested by https://review.openstack.org/#/c/129865/

Change-Id: I1c45c29617d692cc05b44f7f2c4ec1e5252be303"
ff03b268f78693c781c83aec575777381f5bcb95,2014-12-31 03:26:52+00:00,"ovs_dvr: Use lazy logging interpolation

There are a small number of examples of ""eager"" interpolation in
neutron:
  logging.debug(""foo %s"" % arg)

These should be converted to perform the interpolation lazily within
the logging function, since if the severity is below the logging level
then the interpolation can be skipped entirely.

This change addresses all such examples found in ovs agent via a pylint
test.  Other occurrences are addressed elsewhere.

Change-Id: Ie215f33818cc5c16e570ace4c750df5371d27e09
Partial-Bug: #1404788"
73c9a5fc7c0ed9758af28e7061428544b2475af0,2014-12-31 15:33:44+11:00,"Enable the ""not-callable"" pylint check

This check catches attempts to call variables that pylint believes are
not functions.  A trivial example would be:

    # Trivial example caught by this check:
    foo = dict()
    print foo('bar')  # <- oops, meant foo['bar']

This change enables the ""not-callable"" pylint check, after disabling a
few cases where the alert triggers but the usage was intended (defining
decorators).

Change-Id: I09ad929902509018fe7183a15b784601c36b6196
Related-Bug: #1356224"
907693ea9b13819f733462d88fcbc096a5926a4d,2014-12-31 13:53:52+05:18,"Confusing message deleting default security group

Trying to delete default security group from a non-admin
user gives an error ""Removing default security group not
allowed. (HTTP 400).
But this message is not clear as the user does not get to
know why is he not allowed to remove the default security
group.

So updated the error message to give a more optimal message
to the user.

Change-Id: I25744b854371208d68a5cbdcf83079db7c54f96f
Closes-Bug: #1403743"
bc343dc92d4b8f25fc32d0d4039249ccdfb01304,2014-12-31 18:30:03+08:00,"Delete the console scripts for lbaas and vpnaas

Codes of lbaas and vnpaas have been moved out, so we need to
remove these console scripts.

Closes-Bug: #1405095

Change-Id: Id91161ecacd902d1dc28a4a0dd01da3778486a88"
e3383f9ac573863c49bf02ff65ea1f8ac1f2b5ee,2015-01-01 09:34:39-08:00,"Improve unit test coverage for Ml2 db.py

From coverage report:

Module statements missing excluded branches partial coverage
neutron/plugins/ml2/db 149 9 0 24 3 90%

Partial-Bug: #1269131
Change-Id: I5ef2af33d3a723fadfe618064094ea22241b7da1"
5de1d2ed67e00a010f23c5f9055556745a55957a,2015-01-04 12:16:42+00:00,"Ignore non-existent ports during OVS intf list

A recent commit[1] to pass the list of port names directly to
ovs-vsctl during a list operation introduced a new possible
failure condition where one of the names might refer to a port
which no longer exists. By default this causes ovs-vsctl to quit
in a fit of rage[2].

Previously, all interfaces were retrieved and the ones that were a
subset of the name list were processed. The name list could contain
extra non-existent names (e.g. recently deleted interfaces).

This patch just passes the '--if-exists' flag to the 'list Interface'
command to match the same previous behavior.

1. 3f0bf6cfac2e151d5a4a7f076062b3365bdbf457
2. Example: Stderr: 'ovs-vsctl: no row ""tap80664420-ea"" in table Interface\n'

Closes-Bug: #1407190
Change-Id: I8f359981386d13fb455281a72b8bb245395c0909"
d50595d5fae105e7c4cdb8a2b78302a6883e2033,2015-01-05 19:26:49+05:18,"Add help text for 'host' parameter in neutron.conf file

This patch adds the help text for 'host' parameter in
neutron.conf which is presently missing and updates
the neutron/common/config.py accordingly

Change-Id: Iddfc9c44b3fae95cbae1cfe1142c3d3a92749799
Closes-bug: #1406052"
1d80f54fb9c0642489a9fa9f922406e1fdd58b6e,2015-01-05 13:37:59-08:00,"Deletes floating agent gw port on disassociate

This patch deletes the floating agent gw port
on floatingip disassociate.

A recent change in the neutron trunk broke
this functionality. This was introduced by
the patch that addressed the re-order
operations in (l3_dvr) update floating ip.

The current patch fixes the problem.

Change-Id: I98e766cf4ed33412d9d5dae07217553acbb5009c
Closes-Bug: #1394026"
dc3ab47b21d444774bcc70fde6f6763c22dc8ae1,2015-01-06 09:41:01+09:00,"Skip adding ips from non dhcp enabled subnets to hosts file

If a network had a mix of dhcp and non dhcp enabled subnets,
then ips from all subnets were added to the hosts file.
This fix ensures only ips from dhcp enabled subnets are added.

Closes-Bug: #1316444
Change-Id: I673088f7be0fb16a27b09e07f8ac41d21d1ea4d4"
787fab3053550e5a28c56fa61562cdd96841507e,2015-01-05 18:32:55-08:00,"Tweak gate hooks scripts to handle both functional and api jobs

With this change both the API and Functional job will benefit
from the use of gate hooks. This is especially useful to make
the API job emit the test results the same way other jobs do.

NOTE: Changes are applied to both contrib directories under
neutron/tests and neutron/tests/functional; these two directories
are supposed to be in sync until change [1] merges, after which
we can drop neutron/tests/functional/contrib, in favor of
neutron/tests/contrib. This was done because of the symlink issue
caused by [2].

[1] https://review.openstack.org/#/c/142603/
[2] https://review.openstack.org/#/c/143152/

Change-Id: I0b823b17d6317e9409fd9b5872c5f4674c1b6824"
a04fa671209343009887575fdda9c8a3a7d23ba0,2015-01-06 10:35:10+08:00,"print error when no match mapping found in check_segment_for_agent

error print when no match PHYSICAL_NETWORK mapping found in function
check_segment_for_agent for OVS and linuxbridge mechanism driver.

Change-Id: I58c43328f0512de25720871fc51c79f074493cdf
Closes-Bug: #1404962"
501df939a543908554e268ade0c1dc9d12cf11a5,2015-01-06 02:37:59+00:00,"Add support for retargetable functional api testing

This patch introduces the concept of a 'retargetable' functional api
test.  Such a test targets an abstract client class, and by varying
the implementation of the client, the test can target multiple
backends.

The test added by this patch (test_network_lifecycle) can be run
against the programmatic plugin api (for configured plugins) via both
tox -e functional and tox -e dsvm-functional.  The latter env is used
by the gating neutron-dsvm-functional job.

The test can also be run against a live Neutron service via 'tox -e api'
which will soon be run as part of the check queue by the
neutron-dsvm-api job [1].  Running this tox env requires
devstack-deployed Neutron and Tempest.

The intention is to refactor the existing plugin tests
(e.g. NeutronDbPluginV2TestCase) to use this model.  Functional tests
don't have to isolate functionality - they just need to exercise it -
so fewer tests will be required.  The new tests will be able to target
plugins directly rather than through the wsgi stack, so execution time
will be decreased.  The refactored tests should be easier to maintain
and take less time to run.

Perhaps best of all, since the same tests will be able to target a
deployed service in the neutron-dsvm-api job, the deployed behaviour
of api changes will finally be able to gate merges to the Neutron
tree.

Notable parts of the change:

- tests/api
  - base_v2 -      defines the client interface (BaseNeutronClient)
                   and the base class (BaseTestApi) for the
                   retargetable test (test_network_lifecycle)

  - test_v2_rest - implements the client interface for the tempest
                   rest client and configures the retargetable test
                   with scenarios for json serialization

- tests/functional/api
  - test_v2_plugin - implements the client interface for the
                     programmatic plugin api and configures the
                     retargetable test with scenarios targeting the
                     linuxbridge and openvswitch plugins

- tests/unit
  - refactor bits of the existing plugin tests for reuse

1: https://review.openstack.org/#/c/82226/

Implements: bp retargetable-functional-testing
Change-Id: Ib5470040c0fa91ec143f38d273e1e259b3adfb2e"
1d75a6fd3bce8ccad52d3f33d5118f160c992f60,2015-01-06 12:04:43+00:00,"Deal with PEP-0476 certificate chaining checking

PEP-0476 introduced more thorough certificate chain verfication
for HTTPS connectivity; this was introduced in Python 2.7.9, and
breaks a number of unit tests in the neutron codebase.

Disable certificate chain verification for keystone SSL tests
using the backwards compatible SSLContext provided for this
purpose.

Change-Id: I25859d8981a022b4f625ce57ecd28da3820a7b17
Closes-Bug: #1403068"
93bf7a02d4ece28bdfb88c852b8557a50017361d,2015-01-06 12:13:43+00:00,"VMWare-NSXv: VMWare NSXv database models

For Kilo, the vendor-specific code should be moved to stackforge repo,
excluding the database models (https://review.openstack.org/#/c/134680/).
This patch adds the database model for VMWare NSXv plugin from
stackforge/vmware-nsx repo.

Partially-Implements: blueprint vmware-nsx-v

Change-Id: I17cbc1ba59131bd3bdefa232800842a9e739945f"
e5713f932482210107dcfd7bac6a78524c8bad26,2015-01-06 16:05:33+00:00,"Validate IPv6 subnet while associating to Router

Currently Neutron allows attaching a subnet (configured to use an external
router, by only setting ipv6_address_mode and leaving ipv6_ra_mode unset)
to Neutron Router. Ideally Neutron should not allow this operation and
should return an appropriate error message to the user.

APIImpact
Closes-Bug: #1393527
Change-Id: I9d597e6f5e8aea63222bb9f5ed8289e4ce28bbc3"
8d848353fb1979d3c9cb7e5970073dcf28d60516,2015-01-06 12:21:55-08:00,"Drop functional/contrib directory

This has been replaced by tests/contrib and the infra change [1]
is now in force and this copy is no longer necessary.

[1] https://review.openstack.org/#/c/142603/

Change-Id: Idbe0814e6b258d2f394894c1923f459cc1bdd4d2"
6ee81d35fc269863f1fe08c57f3672fdc48197cf,2015-01-06 17:52:10-05:00,"HA for DVR - schema migration and change

To support HA for DVR SNAT, default SNAT has to be schedulable
on multiple L3 agents. The csnat_l3_agent_bindings table is being
modified to include l3_agent_id in the primary key.
The migration script and Class definition update is included in
this patch. For modularity and code management, HA/DVR methods
that would make use of this change will be included in a different
patch.

Partial-bug: #1365473
Change-Id: Idfe93cace0c1b633be6e786206fbec6e1f3c13cd"
8479921e111e1c306db76c52b33115cc5a77c420,2015-01-07 10:45:47+03:00,"Catch PortNotFound and SubnetNotFound during network_delete

In some cases PortNotFound exception during network_delete
could be caused by concurrent port deletion by DHCP agent.
This condition should not prevent network from deleting.

Change-Id: Ie6eae4cecb64120c41de9823d9e72066094ad2ce
Closes-Bug: #1405197"
cddf3388993539aad450de017070d7902d8ee29f,2015-01-07 09:46:01+00:00,"Make lb mechanism driver use enable_security_group flag

This patch allows Neutron security groups to be enabled or
disabled with the enable_security_group flag when using the
linuxbridge ml2 mechanism driver.

Closes-Bug: #1398996
Change-Id: I883c67c93e85668cd9d90b0486e448d906fdf8ed"
ea587e113a838f74efed9a04c78c0ff3d860d04b,2015-01-07 13:56:00+02:00,"Make L3 HA VIPs ordering consistent in keepalived.conf

Currently the order of VIPs in keepalived.conf is determined
by sorting the VIPs whenever one is added or removed. As it
turns out, keepalived doesn't like it when the primary VIP
changes. One side effect is that virtual routes, in our case
the router's default route, may be removed.

This patch fabricates an IP address on the router's HA interface
and uses it as the primary VIP.

Closes-Bug: #1404945
Change-Id: I993daf594a28918de6fafff465f5f40e7b89305e"
012ffe86752416cd55269924d6236cdfac6b7434,2015-01-07 16:08:01+01:00,"Bump minimal dnsmasq version to 2.67

Versions prior to 2.67 did not support MAC address matching for IPv6 clients.
Quoting dnsmasq CHANGELOG:

""
version 2.67
[...]
    Support identification of clients by MAC address in
    DHCPv6. When using a relay, the relay must support RFC
    6939 for this to work. It always works for directly
    connected clients. Thanks to Vladislav Grishenko
    for prompting this feature.
""

Change-Id: I2f7dba6e3f8ea4ddebe7638d908b2ae42997225a
Closes-Bug: #1408297"
be6c51ccd72a3cea02e5feef1b6162b451a88bd1,2015-01-07 15:13:25+00:00,"Remove SELECT FOR UPDATE from delete_network and delete_subnet

delete_network and delete_subnet instead of using SELECT FOR UPDATE
delete the ports that are allowed to be auto deleted straight away.
Then a check is performed, if there are ports still associated
with the network or the subnet that cannot be autodeleted,
an exception is raised. The operation will be rolled back.

Partial-bug: #1331564

Change-Id: I29178204b3a220c1c6010f59272981fb1b4099fe"
eeff5d06b2099ed9813091926dd8cef58680ad8f,2015-01-07 15:34:13+00:00,"Reset policies after RESOURCE_ATTRIBUTE_MAP is populated

The REST API relies on neutron-specific policy checking logic that is
only available after the extensions are loaded and the
RESOURCE_ATTRIBUTE_MAP is populated. This patch resets the policies
immediately after these steps are done. This ensures that in the event
the policies are prematurely loaded for any reason, the on-demand
loading of the policies will reload the policies and properly configure
the neutron specific checks on the next policy check.

Change-Id: Ic2ab3f0179b0c192e63af0bc4268d92aa26bdabe
Closes-Bug: #1398566
Related-Bug: #1254555"
2ee08c3464c53abaf9bc5493132ad7958611e3b8,2015-01-07 13:03:13-05:00,"Move postcommit ops out of transaction for bulk

Currently, the bulk create operations in ML2 are executed in
a transaction. This means all precommit and postcommit operations
for such operations are in a transaction. Postcommit operations
are expected to be executed outside of transactions as they may
communicate with a backend and introduce substantial delays. This
fix removes the postcommit operations from the transaction for
bulk create network/subnet/port operations.

Change-Id: I9a9683058088e50d9443040223232bf5e1396ccf
Closes-Bug: #1193861"
5e5f74180c264d3bae2be1cf62ae89ab656c2dd7,2015-01-07 20:06:09+01:00,"Fix UT for L2pop test_get_agent_ports_no_data()

Previously loop in this test has never been executed because returned
generator was empty. This patch validates that generator is empty.

Change-Id: I900cd7bccee16487ab5469a2222afd294d9dee25
Closes-Bug: #1365388"
2d9d77747d2a16a1bf944e15bf5a7b6fc5e3fe08,2015-01-07 21:09:26+00:00,"Correct l3-agent iptables rule for metadata proxy

2 iptables rules are defined to ensure the metadata proxy is reachable
from vms on 169.254.169.254:80:
* REDIRECT 169.254.169.254:80 packets to the router on port 9697
* ACCEPT traffic to 127.0.0.1 on port 9697

The REDIRECT rule replaces destination ip by:
 * 127.0.0.1 if the packet is local,
 * router ip (the one on the input interface, metadata proxy case).

So ACCEPT rule filter is not matched ... the metadata proxy is only
reachable because INPUT policy is ACCEPT.

This change removes the destination constraint in the ACCEPT rule.

Change-Id: Iea700bdd121bbc56a3489a63e2a5391867fad0d6
Closes-Bug: #1399462"
7eb23f662cd62f29700ae51ee16dc535d251fc27,2015-01-07 16:57:57-05:00,"Add index generation for IPv6 rules for DVR

For IPv6 support with DVR the index used for rule priority and
route table needs to be generated such that the index is 32 bits
or less but greater than the system generated rule entries.

For IPv4 the numeric value of the network is used as the index.
For IPv6 the 30 bit xor-folded crc32 of the cidr is used.
Values smaller than system generated entries are extended into
the range freed up because of xor-folding.
For code modularity, index generation is wrapped into a helper
method.

Partial-bug: #1376325

Change-Id: I4bcde80257ef5fe7c744086019841cdef5e3c60c"
c41f4a397dc32efa39a0fcce2131caa46692cb03,2015-01-08 16:28:25-08:00,"Validate legacy router services before migration

When legacy routers are migrated to distributed
routers, we need to make sure that there are no
Advanced services associated with the router.

If Advanced services such as FWaaS or VPNaaS is
associated with the router, we raise an exception
and stop the migration.

Partial-bug: #1348309

DocImpact

Change-Id: I65909040a16b022108e481344064d375050d731c"
a7eead2f1fa71466c5734413165752dc9386ca89,2015-01-09 11:41:29+08:00,"Remove DBDuplicateEntry columns check

DBDuplicateEntry exception does not provide columns for db2.
we have to remove this exception columns check in neutron/
db/agents_db.py. It is safe to remove columns check here, since
only the duplication of host and agent_type can raise this
exception.

Change-Id: I00d7b7c64de2912dda9fa57c08d90b1ef1c3aed7
Closes-bug: #1391766"
0cb3b54fcf297baa8c168a5547deeabda8324114,2015-01-09 19:49:45-08:00,"Move metadata agent entry to its own file

Break main() and configs out of agent logic. This makes metadata
consistent with the L3 and DHCP agents [1, 2].

Along with [3], this is done to better delineate what the agent module
inner boundaries are about. More to follow to finish off the cleanup.

[1] https://review.openstack.org/#/c/145979/
[2] https://review.openstack.org/#/c/146024/
[3] https://review.openstack.org/#/c/146151/

Change-Id: I2842f7c21db6f6dabdd2549f91a9001220454c22"
c7e533c3679a1f4a612f3b53354cb7cb5bc1ba12,2015-01-12 09:45:01+00:00,"Allow IptablesManager to manage mangle table

This change enables the IptablesManager to manage mangle table (used
by daughter change).

Partial-Bug: #1187102
Change-Id: Ic2d681f1515aaa541c6d137ce981622f2fff90e5"
d580f78a0ed59cfa9273403197be776a10941d97,2015-01-12 12:19:04+00:00,"Code improvement in type_vxlan.py and type_gre.py files

This patch set basically addressing the review comment
given in the following patch-set:
https://review.openstack.org/#/c/121000/

Co-Authored-By: Romil Gupta <romilg@hp.com>

Change-Id: I12cbb4737e4938b8da808cb19f5e9d1e290f2559"
d9f3e46633b4a776d9c24a4e6e8ed61790ae790f,2015-01-12 15:39:07+03:00,"Catch StaleDataError in update_device_down

For some reason sometimes at the same time for the same port
delete_port and update_device_down commands have been executed.
This arise StaleDataError in update_device_down. In other situations
these commands are executed one after another and the error doesn't
appear.

This errors does not show anything broken, but to avoid confusion
it will be skipped.

Closes-bug: #1405379

Change-Id: I4e5a3d1f1866b9cfba44d3cb7ccc5b2dee1d9633"
fe59a3a1bcc9553c8cdc3f391e1431d3f27d6d28,2015-01-12 13:27:03-08:00,"Fix AttributeError on check_foreign_keys in functional job

Since change 75b402be3b8, the method is no longer available. This
patch makes a similar fix for the Neutron's functiona job test case.

Closes-bug: #1409909

Change-Id: I7866c0bf6c5fe3f37c5a7ea7f9161087b913127a"
fff86b689e2ff0d4f6815ba1dd22ea7805202ab5,2015-01-13 07:16:08+02:00,"Speed up initial L3 full sync time

When a L3 agent starts up the initial full sync occurs
on the first periodic task interval.
This means that from the point the agent is ready to
process updates it can take ~1 minute until traffic
can start flowing through the L3 agent's routers.

When using a highly available solution (not VRRP)
the startup delay adds around a full minute to
the minimum downtime.

This patch simply does a manual (i.e. not periodic) full
sync once the L3 agent is ready (in 'after_start' method).

The change results in a much faster sync on a new agent.
With the patch it takes several seconds until routers are
created on the new/restarted L3 agent.

Closes-Bug: #1407410

Change-Id: I2447a4cdfff5e915f0b5da88e16c9b6944ea9563"
681ac331765892cfc8885907f87d2b3168a66012,2015-01-13 08:26:12+00:00,"VMWare NSXv DB model bugfix

DB Model and migration for VMWare NSXv had two issues:
In DB migration, nsxv_security_group_section_mappings table is not dropped on downgrade.
In nsxv_models.py, tz_network_bindings_binding_type enum name should be
nsxv_tz_network_bindings_binding_type to match migration code.

Change-Id: Ib5e8a2078d9c86da6375c7b6a39f48d5bba4e06e
Closes-bug: #1409411"
f996a7b46878f543ecf775380529af10fe87b8cb,2015-01-13 17:32:02+03:00,"Specify prefix length for IPv6 subnets

If Network contains dhcpv6-stateful Subnet with prefix other than /64,
dnsmasq refuses to start if prefix-len is not specified in dhcp-range
option.  From dnsmasq(8) manpage:

    For IPv6, the parameters are slightly different: instead of netmask
    and broadcast address, there is an optional prefix length which must
    be equal to or larger then the prefix length on the local interface.
    If not given, this defaults to 64. Unlike the IPv4 case, the prefix
    length is not automatically derived from the interface
    configuration. The mimimum size of the prefix length is 64.

It is safe to always specify prefix length, so dnsmasq will use correct
configuration.

Change-Id: Ibef1f55926585016f0054accd7f7ef5a022e3fe1
Closes-Bug: #1372883"
a7b54d3c60ff6dd63273b573bcc5c572faab22a8,2015-01-13 08:09:58-08:00,"Fix topic for provider security group update

Commit 8098b6bd20bb12520e438ef9125dc7b96664f712 accidentally changed
the topic for the provider security group update to a regular member
update. This resulted in the L2 agent not asking for the latest
security group rules after a DHCP port was created. If a regular
compute port was brought online and wired up by the L2 agent
before the DHCP port was created, the VM would never get its allow
rule to communicate with the DHCP server.

Co-bug-squasher: Armando

Closes-Bug: #1403291
Change-Id: I382f2e1390c9a3ff558e152eeb76f0f827266cb4"
4c9c88601a060eb3a25b6e8dd0c98e04809f49c0,2015-01-13 17:22:15+00:00,"Midonet plugin decomposition

Remove the midonet plugin code and add the requirements.txt file to
set the dependency to the vendor plugin. Dependency is not pinned: we
will use the newest library during the Kilo cycle and we will submit a
patch with the pinned version a bit before the Kilo code freeze.

Vendor plugin code is available here:
https://github.com/midonet/python-neutron-plugin-midonet

Plugin already available in pypi:
https://pypi.python.org/pypi/neutron-plugin-midonet/

DocImpact
Partially-implements: blueprint core-vendor-decomposition
Closes-bug: #1408339

Change-Id: I867ab6753cd45abb65e850cd6aaef7bb0c5bbddb"
f67f309854bd8ffe17744cab3787fe334dac6265,2015-01-14 00:04:01+00:00,"Remove main alias for bw compat with vpn agent

The alias becomes no longer necessary when [1] merges.

[1] https://review.openstack.org/#/c/146144/

Partially-Implements: bp restructure-l3-agent

Change-Id: I4f3498b4ecb6539c96e31baf972ac715443bc93c"
bb195338e4144929c193a6b5bf0e8024d551c885,2015-01-13 16:46:57-08:00,"Log iptables rules in a readable format

When troubleshooting issues having to parse the \n mentally is kind of
difficult. Be nice to the user and have the newlines interpreted correctly.
It's fine if we waste some spaces in the logs, storage is cheap these days.

Related-bug: #1403291

Change-Id: Ia6c651ae0d17c0165e4fe833c523061a66f7d7d1"
a640318bda7e94278434bafba75d39052ef217ab,2015-01-14 12:52:06+09:00,"misc-sanity-checks.sh: Some cleanups

Some cleanups for commit 4fdda65a5b9f379af997e1e971865ccfa7a93156.

- Don't assume the path of mktemp command.  It's /usr/bin/mktemp
  for some platforms. eg. NetBSD.  Also, always provide a template
  as it's necessary for some platforms, eg. OS X.  This snippet was
  taken from the example in NetBSD's mktemp(1).
- Move a comment to the appropriate place.
- Improve a regex to ignore more comments.
- As the pattern for find -path is not a regex, no escape is necessary
  for period.

Closes-Bug: #1405584
Change-Id: Ia8358f0f7ebe9bc445ce5aa3c4f340546f37db05"
d05b9790e84e95e256947216572ad67807ae064a,2015-01-14 10:01:44-08:00,"Move agent cleanup scripts to cmd module

Ensure naming consistency across the various entry points.

This patch better separates active elements of Neutron agents from
operator's utilities.

Along with [1,2,3], this is done to better delineate what the agent
module inner boundaries are about. More to follow to finish off the
cleanup.

[1] https://review.openstack.org/#/c/146024/
[2] https://review.openstack.org/#/c/145979/
[3] https://review.openstack.org/#/c/146239/

Change-Id: I1d2d2938aa7fa1c60e0f0dc70997778a1930efef"
434665eb785a3abec654b6dd0b57ac2c78b0ced8,2015-01-15 09:23:01+08:00,"Enable adding new tag with options

It is useful to add a new tag when update the options
with dnsmasq.
We have a use case in Ironic to support ipxe with dnsmasq.
It looks like this:
dhcp_opts.append({'opt_name': 'tag:!ipxe,bootfile-name',
                  'opt_value': CONF.pxe.pxe_bootfile_name})

Change-Id: Idfaae9e8f8b7582f988e9da8707ef7d4823c6ff4
Closes-Bug: #1384577"
cd318a25925a303b8af23472890384c204a50631,2015-01-14 21:03:42-08:00,"Initial thin ML2 mechanism driver

This commit thins the in-tree OpenDaylight ML2 MechanismDriver. A matching
change to the stackforge/networking-odl project has the backend logic
there.

Closes-Bug: #1409151

Change-Id: Ic9c6565489e56a7e84b14fd2bba55f4b35f977ea"
b900d52ebbe0c9d16366ce636fd23f7f6276afd7,2015-01-15 07:38:41+00:00,"VMWare-NSXv: VMWare NSXv configuration file

For Kilo, the vendor-specific code should be moved to stackforge repo,
excluding the configuration files (https://review.openstack.org/#/c/134680/).

This patch adds config options for vmware NSXv plugin

Partially-Implements: blueprint vmware-nsx-v

Change-Id: Ibf8e9e1983d47b23397d00dfd4123a39049b0af2
Signed-off-by: Roey Chen <roeyc@vmware.com>"
0e9168de80bbb6b4a3d84a46d833509ed4560e51,2015-01-15 15:20:09+03:00,"base.py: Improve exception handling

When logging exceptions the exception handling should make use
of save_and_reraise.

Change-Id: I3fd3aea1719d493b4184247991e2e5f79c4218aa
Closes-bug: #1305032"
53c7d82c681344d21ebfd64433b8f682ed70c4e5,2015-01-15 15:13:40+01:00,"Dropped fixture module

The only single remaining usage of those fixtures in the tree was for
oslo.config fixture, which is now available via oslo.config library
itself.

Change-Id: I997a3a086598a8addf093790db102cd130588d95
Closes-Bug: #1399804"
f0ffdeb221bf8ce466ac7a68f2cb8590fcf937be,2015-01-15 06:23:42-08:00,"VMWare-NSXv: VMWare NSXv extensions

For Kilo, the vendor-specific code should be moved to stackforge repo,
excluding the extensions (https://review.openstack.org/#/c/134680/).

This patch adds the extensions VMWare NSXv plugin from
stackforge/vmware-nsx repo.

There are 2 new extensions:
1. advanced_service_providers - this is required to enabled the NSXv to provide
                                metadata support (there is no metadata agent)
2. vnic_index - the security group support for the NSXv requires the vNIC index

Change-Id: I8c7aa95db1caf020afaa217d9c543b9031fab371
Partially-Implements: blueprint vmware-nsx-v"
1e00041b0bcb83175760eb6347bb3eae55649328,2015-01-15 16:19:08+01:00,"make delete_router send delete_port to core_plugin

Have delete_router API call also delete the gateway port if needed.
Currently, the db_base_plugin_v2 method is called, bypassing the
core_plugin overload of this method. The consequence is that,
in ML2, mechanism drivers are not aware of the port deletion.

In this patch, tha gateway port is deleted through a common
method. This method checks if floating IP and VPN are attached
to the router, so those checks are removed from the delete_router
method.

Closes-Bug: #1361540

Change-Id: Iae98f3fe89126a76f16ed9c5230ce299a09ce8d8"
35d838ff600729f4b7b2ac8be92d3a3be4d96cb8,2015-01-15 21:01:06+01:00,"Migrate to oslo.concurrency

Namespaces are not used anymore, so imports are for oslo_concurrency,
not oslo.concurrency.

lockutils direct call is not supported anymore, so using shipped
lockutils-wrapper instead.

Use ExternalLockFixture to set lock_path for unit testing.

Updated cache and cache/_backends module from oslo-incubator to use
oslo.concurrency and not incubator version of lockutils module.

Dropped lockutils incubator module that is now moved to oslo.concurrency. Not
dropping fixture module that includes lockutils fixture since other fixtures
are still used in the tree.

Closes-Bug: #1387092
Change-Id: I2ba2295f8f5d55f272a9d23555940586b25b5a1c"
b63755abd905f7e01c6e7d65887e5e0c7c01a45c,2015-01-15 21:30:57+00:00,"Don't log a warning if an iptables chain doesn't exist

The iptables_manager remove_chain() function calls LOG.warn()
if asked to remove a chain that it doesn't know about.  This
is spamming the neutron-full gate job pretty bad.  Change to
LOG.debug() since reverting the change that caused it is
difficult since the FWaaS code has been split-out from the
tree.

Introduced in change 6eee93a98c67

Change-Id: Ieb20ae01137223110abf3c933e4981ff39055398
Closes-bug: #1404016"
4d143b710de22cd8c052c02fab7fdb5273ab4a93,2015-01-15 19:46:05-05:00,"ML2: Driver API changes for hierarchical port binding

The following ML2 driver API changes are required to support
hierarchical port binding:

* Add segments_to_bind PortContext property containing the list of
  network segments with which a mechanism driver should try to bind
  the port. All mechanism drivers that bind ports should now use this
  property in place of network.network_segments, which contains only
  the network's static segments.

* Replace several PortContext properties (bound_segment, bound_driver,
  original_bound_segment, original_bound_driver) with new properties
  (binding_levels, top_bound_segment, bottom_bound_segment,
  original_binding_levels, original_top_bound_segment,
  original_bottom_bound_segment) in order to represent hierarchical
  bindings.

* Add stubbed-out continue_binding() method to PortContext, allowing
  mechanism drivers to partially bind the port.

All existing drivers and unit tests are updated accordingly.

The DB schema changes and logic required for hierarchical port binding
will be implemented in dependent patches.

Gerrit Spec: https://review.openstack.org/#/c/139886/

Partially-implements: blueprint ml2-hierarchical-port-binding

Change-Id: Icb1a016f4661e427cb6cfa3452802ba5e64b7124"
6e5762be5b3324f1cf0e52f2680455d760bcc3ea,2015-01-16 00:58:14+00:00,"Refactor the _get_external_device_interface_name method

Currently this method does two things. It returns the
external interface name as its name indicates and
creates some interfaces in the case of the dvr mode.
This patch split these two things into two methods and
refactor a bit the code according to this change.

Related-Bug: #1375994
Change-Id: I7dc2c03457cbb209c84584c2badffd12048e9617"
6617f8fccc8d99520a87cd84a598c4f9a1a43761,2015-01-16 09:08:09+00:00,"Change transaction isolation so retry logic could work properly

Lower isolation level from REPEATABLE READ to READ COMMITTED for
transaction that is used to create a network.
This allows retry logic to see changes done in other connections
while doing the same query.
Perform that only for mysql db backend.

Change-Id: I6b9d9212c37fe028566e0df4a3dfa51f284ce6e9
Closes-Bug: #1382064"
14fdfeb72a3a36f0be0f788ded2b94286c69d428,2015-01-16 13:41:00-08:00,"Revert ""Change transaction isolation so retry logic could work properly""

This reverts commit 6617f8fccc8d99520a87cd84a598c4f9a1a43761.

Nip bug #1411816 in the bud, until we figure out what's going on.

Change-Id: Iccae2e06d79221583c79bd9fab4f5eda52979124"
4906e0cf8e9123424d8d6e794a704e3e18f24689,2015-01-16 23:40:13+00:00,"Disable unbalanced-tuple-unpacking

This check seems to have changed and started to break in Neutron.
Disabling it is one way we could get back to good.

Change-Id: I6d06d43cb2e78501cd69fcb3940694d04d936fa8
Closes-bug: #1411865"
c9974b9269e5e9943c7b920d9a0569dc80ddebb8,2015-01-18 11:37:43+00:00,"Fix pylint unbalanced-tuple-unpacking warning

Pylint last version(1.4.1), at least, reports an
unbalanced-tuple-unpacking warning[1] in keepalived[2] module because
self.authentication is defined as an empty tuple in __init__ method and
unpacked in build_config method as if it was a 2-tuple.

self.authentication references an empty tuple (defined in __init__
method) or a 2-tuple (updated in set_authentication method). Such
warning is a false positive because the unpacking is only performed if
self.authentication is not evaluated to false which only appends if
self.authentication is a 2-tuple.

Defining self.authentication as None in __init__ avoids such warning
without disabling unbalanced-tuple-unpacking warning check.

[1]
W:252,12: Possible unbalanced tuple unpacking with sequence defined at
line 153: left side has 2 label(s), right side has 0 value(s)
(unbalanced-tuple-unpacking)

[2] neutron.agent.linux.keepalived

Change-Id: Ifcdf08e574ef44a65c6d121323cbe31d9af2f921
Closes-Bug: #1411865"
690f87977826f670aeea1f8165339e6c5af4f920,2015-01-20 15:12:28+05:18,"Improve test coverage of dhcp agent scheduling

This patch adds few unit test cases and functional test cases
for schedule() and auto_schedule_networks() of DHCP agent
ChanceScheduler.

Change-Id: I6ed7c48bcf5fc43d805c7898c7d6f019b6792e18
Closes-bug: #1331516"
babdc213744a3f08a7d6d781cf29cb4a870abc65,2015-01-20 09:36:16-05:00,"SIGHUP keepalived if L3 agent restarts

Currently restarting the L3 agent does not SIGHUP any running
keepalived processes. This is an issue if the L3 agent crashes
and is then restarted by an external tool. In this case, the L3
agent resyncs with the controller but does not SIGHUP keepalived.

It's also an issue during upgrades.

Closes-Bug: #1412542
Change-Id: Iec29b483f499f02c593f6e0663c7f3504c615c1a"
9436cbdfb2c0d113517bc6108ded7d0397a096cb,2015-01-20 15:13:20-08:00,"ml2: remove stale _filter_nets_l3 in get_networks

The commit of 0156ec175cc047826b211727d43d5d14a3e1f2d2
change-id of I47e01a11afaf6e6bcf06da7bd713fd39b05600ff
which fixes bug 1132849 removed the call of _filter_nets_l3 methods.
But somehow the fix missed ml2 plugin.
This patch fixes ml2 plugin and removes the unused mothod.

Change-Id: I4d13223c170fd6777773970e0d22a191b98dd5ee
Closes-Bug: #1382360"
72e285ac1aad2f5a4b246435cf4d4b0126fb3431,2015-01-21 08:13:49-05:00,"Improve agent-based flat/vlan ml2 port binding failure logging

Port binding failure is an error and should be reported as such.
Additionally, if a port binding fails on a host due to missing
bridge mappings, it's currently quite a mystery to find out. This
should be logged instead of requiring users to debug code. Not
everyone enjoys debugging Python, as weird as that is!

I refactored out the common code in check_segment_for_agent
in order to make logging more robust for all agent-based mechanism
drivers. The OVS and LB mech drivers already log due to a bridge
mappings mismatch and the other agent based mech drivers
will now log as well.

Closes-Bug: #1377710
Change-Id: I451a0763908adcd845721e8cda7f3189da6c8b81"
3794b4a83e68041e24b715135f0ccf09a5631178,2015-01-21 11:51:07-08:00,"Fixes Multiple External Networks issue with DVR

Current L3 agents can support more than one
external network when configured properly.

On DVR routers, router-gateway-set was
returning a 500 error, when two external
networks were configured in the system.

The problem resides in the scheduler where the
bind_router is called twice when the
reschedule_router is called from update_router.

The _schedule_router binds the snat
and the qrouter with the respective agents.

But after scheduling it does not return agent.

And in the case of two external networks, the
get_candidates always returns a valid candidate
to be processed and hence the bind_router is
called twice.

This patch fixes the _schedule_router function
and hence avoids the multiple calls to
bind_router.

This prevents the update_router from failing
and causing the nested rollback for the
transactions.

Change-Id: I24d44c60a3ea5bbc9e3f44aa5191deff315723ca
Closes-Bug: #1374473"
ee4bae211309e0f1fcee5565ddd2379997e1de13,2015-01-21 16:02:02-08:00,"Initialize dist_fip_count after agent restart

Runtime router variable dist_fip_count has been
used to keep track of FIPs for DVR routers.
This variable is not re-initialized correctly on
agent restart and can get stale from other errors
which cause problems with namespace and port cleanup.

This patch will initialize the ri.dist_fip_count
once in process_router for dvr routers only.  This
method was selected instead of the _router_added or
_router_removed path because it is the one central
entry point for rotuer add, delete, and update.

The object self.agent_gateway_port also needs to be
properly handled after an agent restart and this
patch will handle that as well.

When needed, the system will be read via system
calls to determine the state of namespaces and ports
since the variables cannot be relied on.
System calls will be kept to a minimum to reduce
and possible performance hits.

Change-Id: Iae5ebf5249f8e16ab57df78e042293ca2855ddf1
Closes-bug: #1367039"
e171271f127cb48a89df78ec98ba732caf2da980,2015-01-22 09:44:05+00:00,"Move shared metadata driver related config options

This change moves metadata driver related config options to metadata
driver module to prepare the use of metadata driver method in the dhcp
agent (daughter change). The metadata_port option is not moved as the
dhcp agent uses a non-configurable port (80).

Change-Id: Ie45fdad86f33d35fca3096c4c52fae941a279e76
Partial-Bug: #1187107"
705b76d02db318ecedcbd96d09af9785f14429ee,2015-01-22 08:48:53-08:00,"Ignore 404 error and lower a warning log to info

Ignore an expected 404 error. Lower the severity of an informational log entry
from warning to info to avoid polluting the server.log

Closes-Bug: #1413457
Change-Id: Ib6316cdda0aed10d8f430790b0c4f909ad833eb0"
09fe057cd475fe9068339f9805fa855476e248bf,2015-01-22 19:08:47+00:00,"Use db constraint to ensure mac address uniqueness

Currently port mac address uniqueness per network is checked before Port
db object create but without locking. It implies 2 port create requests
can allocate the same mac address on a network if each request performs
mac address uniqueness check before the other creates the Port db object.

This change replaces the check by a db unique constraint on Port
(network_id, mac_address).

Change-Id: Iad7460356ceb74d963cddf5ec33268d77792f1fe
Closes-Bug: #1194565"
ccd5fe83884cf72c7e69091f318628884665f971,2015-01-23 14:10:07+11:00,"If router is HA, get current_cidrs from keepalived object

When using L3 HA and keepalived neutron is no longer directly managing
the floating IP addresses itself. Neutron should not check against
which addresses are currently configured on the system, but the
addresses the keepalived object has configured.

Co-Authored-By: Benoit Page-Guitard <benoit.page@gmail.com>
Change-Id: I56045ede3a3dc1a7044a22913ee38ed382a81052
Closes-Bug: #1400217"
c86b8f224831ab9171ac638f1ed5585d903f0be9,2015-01-23 10:58:17+00:00,"Functional test IPAM DB operation

Add a functional test to check that the IPAM logic is correct and
that the data stored in the DB are sane.

Partial-bug: #1331564
Change-Id: I7776a50824184663abd37e210d08a63eb5519cea"
f72b07e5d184946271b090905c2f2ea67fc1479a,2015-01-23 19:18:52+03:00,"Add index on db ""allocated"" columns

ml2_vxlan_allocations, ml2_gre_allocations, ml2_vlan_allocations tables
have the 'allocated' field.

There are a lot of similar queries to these tables which look
like the following:

SELECT ml2_vxlan_allocations.vxlan_vni
AS ml2_vxlan_allocations_vxlan_vni,
ml2_vxlan_allocations.allocated
AS ml2_vxlan_allocations_allocated
FROM ml2_vxlan_allocations
WHERE ml2_vxlan_allocations.allocated = 0 LIMIT 1;

Performing such selects can take quite a lot of time and if a transaction
which performs allocation is executed in parallel, it can lead to
allocation failure and retry.

Adding an index on ""allocated"" column significantly improves
the performance. For ml2_vlan_allocations table created
an index on (physical_network, allocation) together.

Example for MySQL for execution of query
select * from ml2_vxlan_allocations where allocated = 0;
when on the table with ~3 mln entries, ~500K of which
have allocated = 0:
+-----------------------+---------------------+
|No index on ""allocated""| Index on ""allocated""|
+---------------------------------------------+
|      2.02 sec         |       0.43 sec      |
+-----------------------+---------------------+

Closes-Bug: #1412348
Change-Id: Ie90ba611dcae6bd0cb7686a0c7b29b9484eae693"
c9698ca0f7a6ae5e55b8b95f900e859581046c6b,2015-01-23 11:36:32-05:00,"Configure IPv6 LLADDR only on master L3 HA instance

HA standby routers must never transmit traffic from
any of their ports. This is because we allocate the same
port on all agents. For example, for a given external interface,
we place the same port with the same IP/MAC on every agent
the HA router is scheduled on. Thus, if a standby router
transmits data out of that interface, the physical switches
in the datacenter will re-learn the MAC address of the external
port, and place it on a port that's looking at a standby and
not at the master. This causes 100% packet loss for any incoming
traffic that should be going through the master instance of the
router.

Keepalived manages addresses on the router interfaces, and makes
sure that these addresses only live on the master. However, we
forgot about IPv6 link local addresses. They are generated
from the MAC address of the interface, and thus are identical on
all agents.

This patch tries to treat IPv6 link local addresses the same
as IPv4 addresses - define them as VIPs and let keepalived
move them around.

Closes-Bug: #1403860
Change-Id: Ia5071552239c9444c5105a150b268fb0437e4b85"
0c5d35f37c9767038269d6a9e1a04e742ca925fc,2015-01-23 19:35:38+00:00,"Overload correctly BASEV2.__table_args__

neutron.db.model_base.BASEV2 defines __table_args__ attribute. Its
subclasses overloading __table_args__ should inherit __table_args__ from
parent class.

A migration script is not needed as __table_args__ are not overloaded in
neutron.db.migration.models.frozen module.

Closes-Bug: #1413985
Change-Id: Ied625252714e2e952f9831d0d03c4573306fe29d"
63a77d27b6e2b137ef8630bdc89bd49f4189dbb7,2015-01-26 10:44:43+08:00,"Mention networking_odl in README.odl

Change-Id: If7f7cffd454864fb9b531dd3b56460517a35f3ad
Closes-Bug: #1413439"
2794bb89d664355ae1194a0b1f8346c1538caef8,2015-01-26 11:55:31+09:00,"attributes: Additional IP address validation

Introduce an additional IP address validation instead of assuming
that netaddr provides it.  Namely, it ensures that an address
either has ':' (IPv6) or 3 periods like 'xx.xx.xx.xx'. (IPv4)

The ""'1' * 59"" test case recently introduced by
commit 1681f62ec91b6c3705a14393815542dc1746de71 fails on
some platforms because it's considered a valid address by
their inet_aton.  Examples of such platforms: NetBSD, OS X

While one might argue it's a fault of the platforms, this is
a historical behavior which is probably too late to change there.

(The breakage has been hidden by later UT changes in
commit 35662d07628452d14306f5197871ad64f6396ff3 .
This commit includes a UT change to uncover the problem again.)

Closes-Bug: #1394867
Related-Bug: #1378450
Change-Id: Ibe02f8b7c4d437bf7abbe7304ca138bdcf4bfdb9"
332204fec7e96339947aa662b25adc9925609c4f,2015-01-26 16:56:59+01:00,"dhcp: move dnsmasq version check to sanity_check

We should avoid checking version numbers in runtime. In that way, we may
break some existing setups by minimal version bumps that are often not
critical for operation. One example is a recent version bump to support
IPv6 DHCP stateful address assignment mode. Even though old dnsmasq
version made this particular mode to fail to assign addresses to
instances, other IPv6 modes, and, even more importantly, all IPv4
networks continued to operate with no issues.

So let's move the fatal check from DHCP agent into sanity_check tool to
avoid potential breakages on neutron update.

In ideal world, we would make the check smarter. Since current version
cap is due to missing hwaddr matching for IPv6 clients for old dnsmasq
versions, we could preconfigure and start up dnsmasq server in a
namespace, and request a IPv6 lease from it. That would require a DHCP
IPv6 client installed though, and I'm not sure we can always expect it
to be present, so leaving it as-is for now.

Since DHCP drivers are pluggable, we cannot drop check_version method
from DhcpBase to support other drivers that may live in the wild.

Note: we could mark the method as deprecated if we really want to get
rid of it.

Closes-Bug: #1412818
Change-Id: I7a75cccf3880d3b18005ae0def5a17dfd8a00182"
4d774ef13cc4292f4fd95082ec1ceb0db24b39c7,2015-01-26 16:34:51-05:00,"Add address family to 'ip rule' calls

Without an address family, 'ip rule' won't work with IPv6
arguments because it assumes IPv4.  This causes the l3-agent
to throw an error when adding a rule in DVR mode.

Also changed these functions to be more symmetrical and take the
same arguments, which required a little tweaking, but it looks
much cleaner now.

Change-Id: I85718d8d6ffcf3dec2a6b92641a731af813114aa
Closes-bug: #1376325"
9114af09a43705885fd63979a852d56d3bdf53da,2015-01-26 18:52:31-06:00,"Ensure ofports are converted to string before trying to use join()

Change-Id: Idfe0bf8bedbe4bc165a33f66785eb6b5b38a5a0e
Closes-bug: #1415043"
8a0c02225901bb82ae3f5aa3dfc707edfe1d3177,2015-01-27 06:03:09+02:00,"Fixes Hyper-V agent root_helper issue

This patch I2aaa55e8e539e47427e56b4da42321cfcfcde622 introduced a
reference to the root_helper config option in the Hyper-V Neutron
agent without it being registered. For this reason,
the Hyper-V Neutron agent fails to start.

As the root helper is not used by the Hyper-V Neutron agent,
all the occurences within the agent can be safely removed.

Change-Id: I85a6cc640e3fc7bcc8ab53a10824c206a15cda7c
Closes-Bug: #1415010"
e90ea7ce3f1aae1dce216618da49d37a64d3bb91,2015-01-26 21:08:04-08:00,"VLAN support for DVR

Brings in VLAN underlay support for
distributed virtual router. In line with
it brings in the ability to route packets
between VLAN and VXLAN (or) VLAN and GRE
networks via distributed virtual routers.

Implements: blueprint neutron-ovs-dvr-vlan
Closes-Bug: #1374995
Change-Id: If1eb9deef76a49bd0ae0d90ad5ad6a495d97a3b2"
7632f5dba619bbd9286708f59c31fa392b9c419c,2015-01-27 15:46:59+02:00,"Deleting HA router with attached port causes DB inconsistencies

When a HA router is being deleted with 'python-neutronclient'
while it has an attached interface the deletion will fail since
the router is in use. The order in which the deletion
is done is - first remove the HA interfaces from DB and
then delete the router. In this case the HA interfaces were
indeed deleted but the router itself was not (router is in use).
This causes the DB to be inconsistent where an HA router
exists in the DB while it's ports were removed from the DB.

This patch simply deletes the router first, and then
we know it's safe to remove it's HA interfaces as
well. If the router is in use and deletion fails
the HA interfaces remain intact.

Closes-Bug: #1402698

Change-Id: I956d0094ae6e2412e859d79feeb4003941d2bb4b"
97f28d24450d27d3326334bce0dbba0dbbd28cbe,2015-01-27 13:59:00-08:00,"Fix AttributeError when using DVRServerRpcApi

This time with tests for the joy of Maru and Assaf. More
context on [1].

[1] https://review.openstack.org/#/c/143778/

Related-bug: #1394848
Closes-bug: #1414812

Change-Id: I8ad1f1ad6caaee1f18a44f06cea532f4aa9a82b6"
421b5cd43b52e1fcec0713a9ad29bf9c90b5f45b,2015-01-28 09:09:24+02:00,"Allow 'max_l3_agents_per_router' to be set to '0'

Currently the field 'max_l3_agents_per_router' from
'neutron.conf' cannot be set to '0' even though the comments
and code indicate it is be supported. The value
means 'unlimited' agents per router is allowed on HA routers.

This issue is a regression that was caused by:
7da314434e445ce3a6f3642c784954ef61154b7f

This patch adds a special handling for this value when validating
the config. When a value of '0' is used, the further validation
of max value is skipped.

Change-Id: Iac85768b350ee16c34893218738974a2692202aa
Closes-Bug: #1414548"
c85e394498ea5f8862ee25e8137660a3c3932bdf,2015-01-28 14:06:54+05:18,"Freescale FWaaS Plugin: Update to setup.cfg

Partially implements: blueprint freescale-fwaas-plugin

Depends-On: https://review.openstack.org/#/c/148884/

Change-Id: If16171fb288ca2f430a2c496f452d4e2acc06b21"
939f55822615bb352d86d575fbdf50337be6c8a8,2015-01-28 13:21:14-08:00,"Do not check twice IP allocations for auto-address subnets

For auto-address subnets such as those with SLAAC and DHCP_STATELESS
address modes it is ok to delete them even when there are active IP
allocations.

The current logic might trigger unexpected 409 errors if IP
allocations are made on these subnets concurrently with their
deletion.

This patch simply ensures the final check for active IP allocations is
not performed for this class of subnets; since all IP allocations will
be removed anyway, it does not make sense to check whether there are
allocations at all. In fact, doing this check might cause a failure
of the delete operation if an IP allocation is made concurrently.

This patch also factors out the logic for checking whether there are
IP allocations on the subnet to avoid code duplication.

Closes-Bug: #1414199

Change-Id: I1c4ca6f677845f6e2e8d88f3629c0e91ca73b5d0"
79c97120de9cff4d0992b5d41ff4bbf05e890f89,2015-01-29 14:08:29+03:00,"Default security group table

This change prevents the race condition by enforcing a single default
security group via new table default_security_group. It has tenant_id
as primary key and security_group_id, which is id of default
security group. Migration that inroduces this table has sanity check that
verifies that there is no duplicate default security group in any
tenant.

This idea has come up from discussion in comments to
https://review.openstack.org/135006

DocImpact

Closes-bug: #1194579

Change-Id: Ifa8fbddd22bce4c50836cf443ebe10dff37443ef"
0db17ea6ece6ce3135034052bb974226074302b6,2015-01-29 22:59:04+03:00,"Add option to remove networks from dead DHCP agents

Networks are removed from dead agents after a certain
configurable time.
Then unhosted networks could be picked up by alive DHCP agents.

The feature is added for all plugins that support DHCP scheduling

DocImpact
Change-Id: I6ab03b1642f54aa1d5de8844d95c758f1cb273f1
Closes-Bug: #1386794"
cf99eb988e05c56d3842ac388dfe9ada5aa8af86,2015-01-29 15:00:21-08:00,"Allow port mac_address to be modified

With ironic servers, a NIC can fail and be replaced with one that has a
different mac.  The corresponding neutron port needs to be updated with
the new mac address so the NIC can be guaranteed to retain the same IP
address.

This change enables this feature in the ml2 plugin.  There may need to
be changes to other plugins to disable or complete the implementation of
this feature.

Closes-Bug: #1341268
Partially-implements: blueprint allow-mac-to-be-updated
APIImpact: Ports
DocImpact: minor port update api change
Change-Id: I1864c0882cda7eddc9ced519ed3f96c91b2b63f3"
13a3848de208212bad392a57ad43a7f5cf15c5df,2015-01-29 16:09:37-08:00,"Thining Arista ML2 driver from neutron tree

Moving all the back-end drivers for the Arista
ML2 driver. The DB Models and Config is
left in the tree. Rest all is moving to
networking-arista project.

Reorganize the code to ensure a smoother transition
to a decomposed Arista ML2 driver.

The code is being moved in [1].

[1] https://review.openstack.org/#/c/148682/

Partial-bug: 1412577
Related-blueprint: core-vendor-decomposition

Change-Id: Ibbd82d7a18fdb8d6b8d4bfa7bcafe8a2d91a20e1
Co-Authored-By: Armando Migliaccio <armamig@gmail.com>"
1d776bc16c033f33e61fd6832f2e94e24cdd1c5f,2015-01-30 09:34:49+00:00,"Allow to request metadata proxy only with redirection

metadata service should be requested on 169.254.169.254:80 and router
namespace iptables rules redirect the request to the metadata-ns-proxy
on 127.0.0.1:$metadata_port. But currently the metadata-ns-proxy can be
requested directly on $router-ip:$metadata_port.

To avoid such behavior, this change marks packets redirection in mangle
table (PREROUTING), redirects (PREROUTING) them in nat table, accepts
them in filter table (INPUT) using the mark. Packets send to the
metadata proxy port without mark (so directly) are dropped. The
mark can be configured through the new option metadata_access_mark.

Remark: redirected packets are not local packets (in general), so
setting metadata proxy server host to 127.0.0.1 will disallow direct
queries but so redirected queries.

DocImpact
Partial-Bug: #1187102
Change-Id: I6a9bb12c8bf68c6fcf4e4060f8dfe44a309a41da"
1a5301ef9ac5a37a4642924cfc94c6ff41b6f4bc,2015-01-30 08:35:47-05:00,"Hardening unittest, make resilient to address assignment order

Changed functions in test_db_plugin.py and test_n1kv_plugin.py
to replace assertEqual with assertIn

Change-Id: Ibf272af24778eea02d9de23103d30f534109fe9c
Closes-Bug: #1416135"
c6ff2949aef1987d056d5e7313ce8ce33df2dc5d,2015-01-30 10:17:38-08:00,"Add requirements.txt file for OpenDaylight Mech Driver

Move the driver into its own module, but make the change
backward compatible so that we don't break the ODL driver
counterpart (which will use the new module when [1] merges).

[1] https://review.openstack.org/#/c/151707/

Related-Bug: #1409149
Partial-Implements: bp/core-vendor-decomposition

Change-Id: I675d57dc378766230c55ac0ff13966917321b8ef"
87f26929ee8e17d132c6d8c719e97e6795675caf,2015-01-30 15:46:55-05:00,"Remove duplicate logging of attribute validation errors

Removed logging at top level function _validate_dict() and
added logging at the lower level functions wherever necessary.

Change-Id: I09ec62ef5998aea5735ff641166cbc5b469775e9
Closes-bug: #1397310"
8860933d3213c728bc0f9b8a4fdb61475f02c1c3,2015-01-31 12:11:31+08:00,"Drop deprecated namespace for oslo.rootwrap

The oslo team is recommending everyone to switch to the
non-namespaced versions of libraries.[1]
oslo.rootwrap suggests use oslo_rootwrap.cmd:main.[2]

[1]https://blueprints.launchpad.net/oslo-incubator/+spec/drop-namespace-packages
[2]https://github.com/openstack/oslo.rootwrap#using

Change-Id: Ifa37c01b95c65bc3b4966283ff289dd724a7f8cd"
f97a9cb366f09d33400efb9a172fe462e27aadbd,2015-01-31 15:45:25+00:00,"Don't pass the port down to the floating ip processing

This is justified by the Law of Demeter.  I ran in to this while
trying to refactor the floating ip processing here [1].  The scope of
that patch can be reduced significantly with this refactor.  Also, it
helps us to decouple the floating ip NAT processing from the details
of the port which is a long-term goal.

[1] https://review.openstack.org/#/c/142863/

Change-Id: I606dfd43977934f1accea60911e10e71c1cbba73
Partially-Implements: bp/restructure-l3-agent"
c9a86800f421af7a3c98de2d5ccdf8917d315e79,2015-01-31 11:08:01-08:00,"Drop bw compact module for OpenDayLight

Following change [1], this bw-compat measure can be dropped.

Depends-on: https://review.openstack.org/#/c/151707 [1]

Change-Id: I2283759a5b0ee995573d4e4357dafb3e66ca4aed"
81ba3651504c25f3990e4fab5fcfc903713ad8bb,2015-02-01 00:16:34-06:00,"fixes error logging to use the right exception parent class

looks like this was missed

Closes-Bug: #1416798
Change-Id: If68c13b550d665dfa24b7380f53bee7f6fccdb23"
c17faaad2b1030b16c1464b4ca3325a19631833d,2015-02-02 18:54:21+03:00,"Log tenant ports if subnet could not be deleted

Change-Id: Icd64cda9de2bb1c3ab090366a7a20cec894dca14
Related-Bug: #1357055"
9213a5a9f89f9b0833e9d0dc088aaf3ce99a4d8f,2015-02-02 08:53:32-08:00,"Refactor ml2 manager

Refactor code to facilitate other changes. Keeping the
refactored code in different patch for ease of review.
This patch mainly consolidates the keys that are referenced
together most of the time in reference to providernet
extension. By doing this, the subsequent changes are less
repetitive and makes the code little cleaner as well.

Change-Id: Idc0648d5c4688c8f797cc5427b71c2a3919ce722
Related-Bug: #1333475"
6e4a992d31b67c457d56d28063a986152c70c842,2015-02-02 09:17:33-08:00,"Discriminate loaded extensions using their alias

This patch simply changes the logic for discriminating which
extensions have already been loaded using the extension alias
rather than the module name.

This will avoid failures already observed in unit tests occurring
if two extension modules happen to have the same module file name
even if they're unrelated.

This change cannot be unit-tested as the neutron unit test
framework is currently lacking a mechanism to mock and validate
extension loading from the file system.

Closes-Bug: #1417180

Change-Id: Ia214a7c5b1127dbbec3c81023fdbc48d7fadf18f"
4f5b01c18b66e9f456150ceed08e8f0264499d7e,2015-02-02 14:07:01-08:00,"Make prevent_l3_port_deletion handle missing port

This adjusts the prevent_l3_port_deletion function to handle
the case where the port ID that is passed to it does not have
an entry in the database.

Previously it was raising an exception in this case, which is
inconsistent to how ML2 was handling concurrent port_delete requests
further in the port delete function (log them but don't fail).

Closes-Bug: #1416554
Change-Id: I6da021bdf0c79f72336416d02ab989407f352904"
1f337c761bf73df050e435214935c498a2b3d028,2015-02-02 23:02:17-08:00,"Configures RADVD to send managed flag in RA
for DHCP_STATEFUL

RADVD process is configured so that it sends
managed flag in RA for the subnets with
ra_mode set to DHCP_STATEFUL. UT case is
updated to check the presence of managed
flag in config file of RADVD for
DHCP_STATEFUL.

Change-Id: If685846c0c0f67bf4c40f4f268b9d03bfa2b1654
Closes-Bug: #1377843"
ef7e6a8553954aeb4444c90f65ac3fece8be201a,2015-02-03 17:47:46+03:00,"Improve robustness of network failover

In some cases when remove_network_from_dhcp_agent is called
concurrently by more than one neutron server it leads to unexpected
DB exception when NetworkDhcpAgentBinding is removed.
Need to avoid such case and make remove_networks_from_down_agents
method resistant to such issues by catching broad exception.

Change-Id: I653e200d89eb795ded742bb49420f09f66625587
Closes-Bug: #1417629"
a584e35775391a2a93535482c5a05ff8774cb56b,2015-02-04 10:04:08+08:00,"Fix extra-dhcp-opt on stateless dhcpv6 subnet

The opts in dnsmasq opt-file is depending on the tag set
in the host-file. When you have only one stateless dhcpv6 subnet,
it will be filtered by the _iter_host() function, and will not be
written to the host-file, this may lead to extra-dhcp-opt not working.

Closes-Bug:#1411137

Change-Id: Ieed16280fb3c4c91f7d906c0410446d2a112b93e"
74a16fde1c9972dc3c5d07215ca9d5e8f2e23d70,2015-02-04 12:44:40+03:00,"Pass '--dhcp-authoritative' option to dnsmasq

When dnsmasq is restarted, it forgets about all leases (since it runs
with leasefile-ro option). When client tries to renew its lease, dnsmasq
sends DHCPNAK reply with message ""lease not found"". Then client shuts
down the network and re-request lease from DHCP server (and gets exactly
same IP address). There's a small network downtime which affects
services, like zookeeper, running in VMs.

Change-Id: Ieff0236670c1403b5d79ad8e50d7574c1b694e34
Closes-Bug: #1345947"
d93e0098ebd5f333d6f496f10a663cd4351410ae,2015-02-04 15:27:48-07:00,"Refactor logging in loop to only log debug messages once

Logging entries in a loop to a file can be expensive for a large
number of objects (e.g. ports) in a loop. Rather than perform the
overhead of logging a debug entry for each line within the hosts
file, move the debug trace of the contents to after the loop to
bulk up the I/O operations.

Change-Id: I3ad7864eeb2f959549ed356a1e34fa18804395cc
Closes-Bug: #1414218"
ea4abf0199bebc5f67ae5437076bdc638615e56b,2015-02-04 21:05:39-05:00,"Log entry when no Floating IP interface present

Having a log entry here in process_router_floating_ip_addresses
would make it easier to understand why the status of floating ips
wasn't updated.

Change-Id: If7ff3d8951010ed2a4e802acdb948cfdfcb5dda6
Related-bug: #1415522"
7a2a85623da4d296c5dfe5dc8b6fdb772d74ce92,2015-02-05 15:09:32+01:00,"oslo: migrate to namespace-less import paths

Oslo project decided to move away from using oslo.* namespace for all their
libraries [1], so we should migrate to new import path.

This patch applies new paths for:
- oslo.config
- oslo.db
- oslo.i18n
- oslo.messaging
- oslo.middleware
- oslo.rootwrap
- oslo.serialization
- oslo.utils

Added hacking check to enforce new import paths for all oslo libraries.

Updated setup.cfg entry points.

We'll cleanup old imports from oslo-incubator modules on demand or
if/when oslo officially deprecates old namespace in one of the next
cycles.

[1]: https://blueprints.launchpad.net/oslo-incubator/+spec/drop-namespace-packages

Depends-On: https://review.openstack.org/#/c/147248/
Depends-On: https://review.openstack.org/#/c/152292/
Depends-On: https://review.openstack.org/#/c/147240/

Closes-Bug: #1409733
Change-Id: If0dce29a0980206ace9866112be529436194d47e"
568f3562ae540a2eb5d6784d43f92786084d34f6,2015-02-05 10:10:34-08:00,"Restore and fix vmware unit tests

This patch actually restores vmware unit tests, by adding back
the __init__.py file which was renamed during the advanced
service spinoff and not reinstated when fixing vmware code to
comply with the spinoff.

Furthermore, this patch also fixes a minor issue with context
usage in vmware unit tests which is triggering failures because
of the new database constraint introduced with the commit
79c97120de9cff4d0992b5d41ff4bbf05e890f89

Finally, flake8 tests on vmware directories are also restored
with this patch.

Change-Id: Ib63463fca28bbb4a1eb60b8f5f4b63b3d3367c9e
Closes-Bug: #1416593
Closes-Bug: #1416596"
9c5575abe671305540ef874c03e8a1387d47db92,2015-02-06 05:15:09+00:00,"Drop devstack-gate files from Neutron repo

These files are no longer necessary, as [1,2] have
merged successfully.

[1] https://review.openstack.org/#/c/148052
[2] https://review.openstack.org/#/c/148641

Change-Id: Ia2a5c71ec5f6b8a7e477150b10faf9e856074763"
f022caed48f7e0c2c97be22b90f4c3c5f24c6c31,2015-02-06 08:47:55-08:00,"l2-pop shouldn't notify agent about inactive ports

When an agent starts, or the first port of an agent becomes active,
l2 population mechanism driver will notify the agent of all ports on other agents.
It should not notify about inactive ports.

Basically, this patch-set is needed for fixing the bug 1332450.

Co-Authored-By: Romil Gupta <romilg@hp.com>

Closes-Bug: #1334292
Change-Id: Ifbbd7c4e22d4a6383a3c77a9d9ac9a37302c38c3"
67e45d324af39a66fbd4ad175e410407b2720e68,2015-02-07 05:42:28+08:00,"Add the rebinding chance in _bind_port_if_needed

Make function _bind_port_if_needed to bind at least one time when the port's
binding status passed in is already in binding_failed.

Change-Id: I823ff5ca66833cdca459f13ab28f5075ae03ded3
Closes-Bug: #1399249"
aede59641c871c5a22ce3c073494113c50f3591f,2015-02-07 00:24:10+00:00,"Cleanup dead code for dnsmasq

In fix of bug 1202392, there was dead code left [1]. This patch
cleans them up.

[1] https://review.openstack.org/#/c/37580/

Change-Id: I02edb9ce6ac639e84089afea5a900462e61b934a"
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,2015-02-06 20:04:09-05:00,"Correctly mock-out 'ip route...' calls in IPv6 test

In neutron/tests/unit/test_linux_interface.py, test
TestABCDriver.test_l3_init_with_ipv6() missed
mocking-out calls to 'ip route...'.

Introduced in commit fc7cffedbe60.

This also required forcing init_l3() to always specify
that the netaddr library should return a zero-filled
network for IPv6.

Change-Id: Ic69830ac21113815794def5227fc21664d7fcbb8
Closes-Bug: #1418704"
5f5260e47333bcbafb8818a63e6419ed8460ec37,2015-02-06 21:06:24-08:00,"Remove VPN specific exception

This exception is an overkill, and can be safely removed. The tests
affected were not designed to cover any regression as they were asserting
that the mocked Exception was being raised, defeating the very purpose of
catching the regression; they have been revised to ensure that the checks
are not misplaced in future revision of the code, or that they behave the
way they are supposed to.

Partially-Implements: blueprint services-split
Depends-On: https://review.openstack.org/#/c/153543/

Change-Id: I22cc8cd4383259dd4ee20bcbc041d589172d88c8"
e228a3dc69eca08896c4e22d6a2d51b60a9a0a94,2015-02-09 13:34:39+01:00,"Search in /sys/class/net for network devices

When using /sys/devices/net/virtual to search for tap devices, not all
devices are listed there (i.e. when using Xen).
Also according to the Linux kernel documentation (see
ABI/testing/sysfs-devices), /sys/class should be used
instead of /sys/devices.

Change-Id: I9b4981332b66b6d3f9c36511c81432d3e7644bdd
Closes-Bug: #1419754"
89025a8dd93918ac2967726ec7bb8ee5aa22d924,2015-02-09 12:30:09-08:00,"Fix lack of device ownership enforcement for DVR routers

The enforcement rule was applied to centralized router interfaces, to avoid
a potential security vulnerabilty.

Even though DVR routers are fundamentally different from centralized routers,
there is no good reason as to why the rule should be skipped for DVR interfaces.

This patch sanitizes the insanity a bit and closes this potential loophole by
preventing the operation for DVR routers too.

Related-bug: #1243327
Closes-bug: #1410984

Change-Id: I048e6e3926e1c74cf9ecb63cfb53a0b1afb3c579"
24b11ded7f6ff12f9484aecdb8d30498bf1b9025,2015-02-09 19:49:27-06:00,"monkey patch stdlib before importing other modules

Some oslo libraries assume that stdlib is already patched when
they are imported (e.g. oslo_concurrency.processutils tests the
'time' module for monkey_patching to detect which 'subprocess'
module to import.

This can cause issues when things like test frameworks import
modules that monkey_patch, as the order imports are made can break
this kind of check. It is always good to monkey patch as soon as
possible, hence trying to do the patching in neutron/__init__.py.

This is an alternative to https://review.openstack.org/#/c/153225/
which just patches neutron/tests/__init__.py. Unfortunately, just
monkey_patching in tests/__init__.py didn't fix all of the issues
I ran into. For example, tempest tests were failing with timeouts.

Closes-bug: #1418541
Change-Id: I7f2115a99acae5b6d61aab2f7334f498b8d99858"
294d778eb870fcb0e463347ce931758ef296e309,2015-02-10 13:22:33+09:00,"OVS DVR: Use a right mac address value to compose a flow

Closes-Bug: #1420092
Change-Id: Ifbeab18e6f9dfc4564b931543ceb3a65edc03b91"
6dce817c7c210b0c0862463384221ba5730cb8f3,2015-02-10 17:38:09+03:00,"Provide routes for neighbor IPv4 subnets

Network may contain several Subnets.  In this case all these subnets are
accessible via same link and two VMs with addresses from different
Subnets may talk to each other directly, bypassing default router.  For
this to work, ""neighbour Subnets"" should have entry in VM's routing
tables.  RFC3442 describes this situation:

   In some cases more than one IP subnet may be configured on a link.
   In such cases, a host whose IP address is in one IP subnet in the
   link could communicate directly with a host whose IP address is in a
   different IP subnet on the same link. In cases where a client is
   being assigned an IP address on an IP subnet on such a link, for each
   IP subnet in the link other than the IP subnet on which the client
   has been assigned the DHCP server MAY be configured to specify a
   router IP address of 0.0.0.0.

When network contains more that one IPv4 subnets, report these subnets
in 'classless-static-routes' DHCP option.

DocImpact

Change-Id: Ifcf1d99e0f0136bf52b8d13675b7ccfd48005fab
Closes-Bug: #1372885"
e1cf83534552ca39f8408d531b9f5bd814586ce2,2015-02-10 18:17:40+03:00,"Add index on tenant_id

This will greatly speed up SELECTs with filters by tenant_id (e.g.
when checking if we are going to exceed the quota value per resource
per tenant).

Closes-bug: #1419815

Change-Id: Iab80cce701e1f12dbf7a4f60d5ce945c6e7d0e2d"
d6a55c17360d1aa8ca91849199987ae71e8600ee,2015-02-10 18:18:06+03:00,"Remove port from ovsdb after its deletion

When port is being deleted via API it is not removed
from ovsdb and corresponding iptables chains remain
even though the port does not exist.

This patch adds a notification for the ovs neutron agent,
upon which the port is deleted from ovsdb.

Co-Authored-By: Akash Gangil <akashg1611@gmail.com>
Closes-Bug: #1333365
Change-Id: Iccda3bee98d561ef3a06d0317d3d68d6b1dfb76b"
90df090945e9800d354c34fd03236385bff82a4e,2015-02-10 20:03:15+00:00,"Remove use of keepalived 'vrrp_sync_group' as it is unused

Now keepalived configuration wraps the VRRP instances with a
'vrrp_sync_group'. The VRRP sync group functionality is only
relevant when more then one VR instance is contained in it.
In that case the VRs in the group will have the same state.
Our use of keepalived uses a single instance per router.

This patch simply removes the 'vrrp_sync_group'.
In this patch VR instances are used on their own and they now
hold the 'notify_scripts'.

Note that the same VRRP functionality is preserved with this
patch.

Another motiviation for this patch, aside from removing
useless configuration, is to lay the foundation for a future
patch that will the related bug by adding 'track_script'
that are not supported with 'vrrp_sync_group'.

Change-Id: I33b81049cd9cf140244bbf121d1a71492161c77c
Related-Bug: #1365461"
40a51b1d6bd488d5e16d02e6b2a7124192216766,2015-02-11 06:38:24+09:00,"NEC: Merge NEC plugin models into single module

To simplify the maintenance of plugin-specific models,
this patch moves all models of NEC plugin into a single module.

Partial-Bug: #1419396
Related blueprint core-vendor-decomposition

Change-Id: Icd914450bf80bd64abb4bb49c7048d678fd0bf0f"
67c4c6d809e4c9e112d9fb848b5bdce9d5cd04ac,2015-02-11 00:24:37-08:00,"Stale VXLAN and GRE tunnel port/flow deletion

Description:
Stale GRE and VXLAN tunnel endpoints persists in neutron db this should be
deleted from the database. Also, if local_ip of L2 agent changes the
stale tunnel ports and flows persists on br-tun on other Compute Nodes and
Network Nodes for that remote ip this should also be removed.

Implementation

Plugin changes:
The plugin side changes are covered in following patch-set
https://review.openstack.org/#/c/121000/.

Agent changes:
Added tunnel_delete rpc for removing stale ports and flows from br-tun.
tunnel_sync rpc signature upgrade to obtain 'host'.
Added testcases for TunnelRpcCallbackMixin().

This patch-set agent deals with agent side changes.

Closes-Bug: #1179223
Closes-Bug: #1381071
Closes-Bug: #1276629

Co-Authored-By: Aman Kumar <amank@hp.com>
Co-Authored-By: phanipawan <ppawan@hp.com>

Change-Id: I291992ffde5c3ab7152f0d7462deca2e4ac1ba3f"
31ee6f094f54554212616fbb34b3566b40ee9279,2015-02-11 16:57:33-05:00,"Move NCS mech driver to its new home

The NCS driver is scheduled for decomposition, and in the targetted vendor repo
the files are in a new location in the tree. Before we can decompose the driver
we must move it to its new location in the neutron tree.

A future patch will decompose (thin) the driver and add requirements.txt.

Partial-Bug: #1416713
Partially Implements: blueprint core-vendor-decomposition

Change-Id: If9d098bbbd571f53f945122e007d12d561295546"
934c04d19ae7ee17e48b3a39881d576cb19b27fe,2015-02-11 15:41:19-08:00,"Remove unused RPC methods from l3_rpc

This removes the unsued RPC methods from
l3_rpc.py. 'get_snat_router_interface_ports""
was defined but not used by any agent.

Change-Id: Ide08e2a4b183b4f2616550efd5b1fb726b016b4c
Closes-Bug: #1421011"
f7a5aa28b773f5e08a12960d55439b7647766a93,2015-02-12 19:56:31+01:00,"Raise timeout for test_conntrack_disassociate_fip

It seems that 15 secs is not always enough, so raise the timeout to
something guaranteed to indicate a failure.

Change-Id: I4821983ebb2ef9483c0d35737794ddb45ddd4ac6
Closes-Bug: #1421354"
4f17ee26ff3a3dc17364b67fdab19ba17b8cd719,2015-02-12 15:32:31-08:00,"Fix AttributeError exception for API's test_network_lifecycle

Change I2be04f600e6bd8d7d78948d25395d8e04fa0dea3 moved the
exception to tempest_lib. We should use the new import.

Closes-bug: #1421454

Change-Id: Id9ec2537261f101b1bed895bfe5ef2943b8548d2"
f0cebe4294787af4ec651cfa417423d886a133de,2015-02-13 14:56:32+03:00,"Fix index name in downgrade 26b54cf9024d migration

In downgrade of migration 26b54cf9024d_add_index_on_allocated is
trying to drop index 'ix_ml2_vxlan_allocations_allocated',
which is not exits.

Closes-bug: #1421618

Change-Id: I4c75e78512cc6d112a23ab5c7de6e8ca104891b0"
77c073b743a257781b068552ca2af175c4c2cd30,2015-02-13 15:56:39+03:00,"Fix usage drop_constraint in 2a1ee2fb59e0 migration

Downgrade for migration 2a1ee2fb59e0_add_mac_address_unique_constraint
fails as it gets wrong parameters name, source and local_cols,
although it expects name, source and type_.

Also as MySQL creates index for unique constraint it should be used
""with migration.remove_fks_from_table"".

Closes-bug: #1421631

Change-Id: Id86b2f339a6fb33fc4fd637ffbfc2cb6e75ef4fb"
9c9db24738161aef465489b320e6f54a94b4cac7,2015-02-13 17:31:26-08:00,"Remove RPC dependency to create FIP agent gw port

The Floatingip Agent Gateway port was initially
created when the agent requests one through an
RPC exchange.

We are seeing more failures in this area of the
code where there is delay in getting the agent
gateway port from the plugin through RPC.

Change-Id: Ieaa79c8bf2b1e03bc352f9252ce22286703e3715
Related-bug: #1415522"
0b790f649631f449dc576492b96fecfa54049e45,2015-02-13 23:30:25-05:00,"ML2: DB changes for hierarchical port binding

To support hierarchical port binding, the driver and segment columns
are moved from the ml2_port_bindings and ml2_dvr_port_bindings tables
to a new ml2_port_binding_levels table. This new table can store
multiple levels of binding information for each port. It has the host
as part of its primary key so that it can be used for both normal and
DVR port bindings.

The cap_port_filter column is also removed from the
ml2_dvr_port_bindings table, since the adjacent driver and segment
columns are being moved, and this can trivially be done via the same
DB migration. It was included in the table by mistake and was never
used.

The logic required for hierarchical port binding will be implemented
in a dependent patch.

Gerrit Spec: https://review.openstack.org/#/c/139886/

Partially-implements: blueprint ml2-hierarchical-port-binding

Change-Id: I08ddc384763087fbac0fa3da3ed6e99b897df031"
d675fddb579c26991cdab58d2b8a034ad161f494,2015-02-14 04:36:29+00:00,"ML2: Hierarchical port binding

The ML2 port binding logic is modified to support hierarchical
bindings. If a mechanism driver's bind_port() calls continue_binding()
rather than set_binding(), the supplied dynamic segments are used for
another level of binding.

Gerrit Spec: https://review.openstack.org/#/c/139886/

Implements: blueprint ml2-hierarchical-port-binding

Change-Id: Id741c2d6c443fa0eac5ecf8d964b3fc14b5d3abe"
a172e200685567a71844f65ae09d79635073a2f8,2015-02-16 09:23:10-05:00,"Delete qg device during DVR-SNAT router deletion

In the DVR SNAT case, the 'qg' device was not deleted because
of patch:
https://review.openstack.org/#/c/151882/

During functional testing, the device is deleted
during the external bridge deletion. Because that happens after
the SNAT namespace is already deleted, it can cause a kernel
panic or ovs-vswitchd crash for certain OVS versions.

Also added assertions that all router interfaces were properly
cleaned up during functional testing, and enabled the unit tests
to catch this type of error.

Change-Id: Ica86a030860aa967d5b685b5bfb5546a85b2a809
Closes-Bug: #1418097"
740ddc5043e39f3babb57896652d11c223f1f385,2015-02-16 14:37:17+00:00,"Setup br-tun in secure fail mode to avoid broadcast storms

When not creating br-tun in secure fail mode, there are chances to
get a broadcast storm from br-tun.

For example, this occurs when at least three nodes have the br-tun
OpenFlow rules reset in and a broadcast/multicast packet enters br-tun.

This can happen if:
  * openvswitch is restarted, until the agent reloads the Openflow rules.
  * during neutron-openvswitch-agent restart, br-tun is reset, and there
is a few seconds timeframe where tunnel endpoints are plugged and OF
rules are reset.

Secure fail mode doesn't forward traffic by default if no rule is hit.

Change-Id: Iba5ded14179156decb16dcd4b898c026660f9653
Closes-bug: #1421232"
7076d9edee29b852833d934761052efcbc6e8fcf,2015-02-17 12:29:50+00:00,"Hyper-V: Fixes security groups issue

After this patch If19be8579ca734a899cdd673c919eee8165aaa0e refactored
securitygroups_rpc, prepare_devices_filter attempts to use methods
unimplemented by the HyperV security groups driver.

For this reason, binding ports fails with NotImplementedError if
security groups are enabled.

Until the HyperV security groups driver reaches parity, the
use_enhanced_rpc property should be set to False on the
HyperVSecurityAgent, falling back to the old behaviour.

Change-Id: I1a7ee2b92367d2d59932b8b39372a055bf19951b
Closes-Bug: #1415523"
ee2d52b0eb9a75df36c656462918c6f08955ad51,2015-02-17 18:48:02+03:00,"Skip DBDuplicateEntry exception in security group creation

An DBDuplicateEntry expection appeared if it is attempted to
create secutity groups in more then one thread. In this situation
at one moment it is trying to be created 2 default security groups
which is not allowed. In this case exception should skipped with
a message about failed attempt.

Closes-bug: #1419723

Change-Id: Id6fe997ad3b72f875160e1e31a3dc17c3cc53b75"
579da4988084bc412f5477492f1311c0022a0322,2015-02-17 18:41:19+00:00,"Fix FIP agent gw port delete based on external net

Today the FIP agent gateway port for DVR is deleted
based on the host. When there are multiple external
networks, then the port deletion for the second
external network may fail.

So the current fix checks for the valid host and
external network id and then deletes the FIP agent
gw port if it is the last one to be deleted.

Closes-Bug: #1421886

Change-Id: Ic5dfb88409c39d06d912263b338d0c5f7ebd3bcb"
d15807005f702e2810651b3917f034bdef40529c,2015-02-18 11:17:34+03:00,"Add a functional test that checks HA router is configured on a restarted agent

Functional test should  validate the expected behavior of patch
https://review.openstack.org/#/c/148335/.

That test would pass if keepalived received the SIGHUP signal the
2nd time the router was configured on new agent,
and it would fail otherwise.

Closes-bug: #1413684

Change-Id: Iaa72402920cd0854e1738e7de87b8cba46ecd9f9"
0dec0aca4e4d12c38ee034c16a84433814bcbc74,2015-02-18 11:46:55+00:00,"Revert ""Add the rebinding chance in _bind_port_if_needed""

This reverts commit 67e45d324af39a66fbd4ad175e410407b2720e68.

This commit caused a regression in tripleo-ci where some dhcp
options ended up missing(tftp options).

Closes-Bug: #1421835
Change-Id: Ibe68eceb2f5a36cf40cc1c378c1a59a35bfcbf7f"
81ea614570397fbe0722060d3faa703e7ded9151,2015-02-18 13:33:57+01:00,"Don't monkey patch netns_cleanup

There is no reason to monkey patch the tool (it does not rely on any
special kind of model of concurrency). It's better to avoid eventlet
wherever possible, and there are discussions on whether we want to start
dropping eventlet usage agent by agent, so it's worth keeping as much of
code out of monkey business.

Related-Bug: #1418541
Change-Id: I1c1bb5a23e191da660efe9d4179ffaf5fec647f9"
ea76d10e7492eb90f6777940304c67691caa366b,2015-02-18 13:33:57+01:00,"tests: monkey patch stdlib before importing other modules

Some oslo libraries assume that stdlib is already patched when they are
imported (f.e. oslo.concurrency.processutils currently checks whether
time module is monkey patched on import to detect which subprocess
module should be used).

For services, we achieve this by moving monkey_patch() calls as high in
import list as possible. But for tests, we don't control the order in
which testr loads test cases. So to be on safe side, we should make sure
any attempt to load a test case from the tree results in eventlet patch.

We can't put the monkey_patch() call into e.g. neutron/__init__.py to
reuse it both for tests and for services, because in that case we may
break flake8 that loads hacking checks from neutron.* namespace and
relies on proper (unpatched) subprocess module.

Closes-Bug: #1418541
Change-Id: Id58409000d0e086f3fb664a15935af4f1708c396"
37115731515895ea224b1dafd71250d0b002ad40,2015-02-18 13:33:57+01:00,"Monkey patch all the code inside neutron/cmd/eventlet/...

The directory is initially empty.

We are going to maintain entry points for all services and agents that
run in eventlet mode in this directory, and monkey patch them from
there, instead of spreading monkey_patch() calls throughout the library.

This will guarantee us that all the services that are maintained in this
part of the tree monkey patch stdlib properly, before doing any other
imports.

This is also useful to track which parts of the project require
eventlet.  This will later help to migrate services one by one out of
eventlet to real threads in case we decide to move this direction.

Related-Bug: #1417386
Related-Bug: #1418541
Change-Id: I2bc16ca4422c01d64e9fac4910214dbb0d0326ff"
1ae0a4b632425b2f229fd86b9e7730cb4015e60b,2015-02-18 13:33:57+01:00,"Moved several services into neutron.cmd.eventlet

- dhcp-agent
- l3-agent
- metadata-agent
- metadata-proxy
- metering-agent
- server

This allows us to remove explicit monkey_patch() call.

Also removed ability to execute neutron-server avoiding a corresponding
entry point.

Depends-On: I2d7081dbd4cb532332e3b66667bb8c71aa5a6658

Related-Bug: #1418541
Change-Id: I89e3e8e23374ab1a9a1844b3caaa88e162418546"
faa9a6fb46f1c32ae7cf79dab55501c585eda7aa,2015-02-18 10:29:08-05:00,"Check if routing rule exists before adding

Since there is no equivalent to 'ip route replace...' with
'ip rule...', we need to check the existence first before
adding, as otherwise we'll end up with multiple identical
routing rules.

Change-Id: I8f1f2424dd854fad8a72478463fa8fadd6a5c168
Closes-Bug: #1398865"
91df66bb666390e49048ee77ed6e7cb24c455232,2015-02-18 12:38:34-05:00,"Combining sec groups member update RPC calls

This change allows combining multiple RPC calls for
security group member/provider updates that are needed
as a result of create bulk port operations.

Change-Id: Ibfe84f40e55a9847cbcaa4a7344988b2d3fb895e
Closes-Bug: #1373634"
707890ef22c203389f61ddfe8025f1b0e2afe819,2015-02-18 17:58:16+00:00,"Get rid of rpc to fetch fip agent port on agent.

This patch is dependent on the plugin side patch
Change-Id: Ieaa79c8bf2b1e03bc352f9252ce22286703e3715
for retrieving the fip agent port from the
router_update message.

This would reduce the wait time substantially.

Change-Id: I47bc43bab4bff59d14e2cdbce9f8b47826d392d9
Related-Bug: #1415522"
171d4a6f0066ab29bc5533b0bf85c5daa9f17507,2015-02-18 10:55:51-08:00,"Fix static strings with labels for DVR

There are couple of static strings introduced for
DVR configuration such as the L3 agent mode.

This patch would clean up the static strings with
the labels.

Closes-Bug: #1411351
Change-Id: I143262e62ee994e6c01d63e4ea7d5f6292de8286"
fef04147bd68bc101c74c93d4e94f5f5b4643d6f,2015-02-18 21:11:26+00:00,"fix for _get_external_device_interface_name trace

On removal of external gateway from DVR the code path
external_gateway_removed(...) was trying to access the
agent gateway port interface even when no fip namespace exists.
This change checks for existence of namespace before
accessing the agent gateway port interface through
_get_external_device_interface_name(...) or looking for
floating ips that may have been configured on the
port.

Change-Id: Idcf28ff93f16f1d692fe7acb678fb90aabe5af5e
Closes-Bug: #1421497"
28fe7e85cc26d1a0254990ebee1bececae06f374,2015-02-19 11:06:04+04:00,"Unify logic that determines liveliness of DHCP agent

For DHCP agents sometimes it's not enough to check agent's last heartbeat
time because in its starting period the agent may fail to send state reports
because it's busy processing networks.
In rescheduling logic such DHCP agent is given additional time after start.
Additional time is proportional to amount of networks the agent is hosting.
Need to apply the same logic to DHCP agent scheduler to avoid a case
when starting agent is considered dead and a network gets more hosting
agents than configured.

Change-Id: I0fe6244c7d2ed42e4744351be34f251318322c54
Closes-Bug: #1417708"
a1318ae187f1695e2e49bbde32eb75230e96aefe,2015-02-19 13:48:00+00:00,"Default route missing for IPv6 subnets in HA Router

In an HA setup, keepalived would configure the default gateway (in the master
HA router) by parsing the ""virtual_routes"" section of keepalived.conf file.
The ""virtual_routes"" section is properly constructed for an IPv4 subnet, but
requires a minor change for IPv6 subnets.

Closes-Bug: #1414937
Change-Id: I54070e048577292d98d86fcc9ca8b9d3e72b4ebe"
cf53e4a8fc268d471d9feb8338c978633c814bb4,2015-02-19 15:27:01+00:00,"Remove error logs for a common situation (non created ipsets)

The log message was initially added by me as part of a
iptables_firewall refactor.

Ipsets for empty IP address lists aren't currently created,
that means that we can't reference empty security groups
(as ipsets) via iptable rules, and that's a normal condition,
not an error.

Closes bug: #1421772
Change-Id: I6b1ae1fb505ce5e76ef8cf7ef7df38cff57e0000"
639b885cb75a09689e71c7e5f7a388ab3a72bc91,2015-02-19 16:49:56-05:00,"Fix type of exception in ml2 l2pop

Closes-Bug: #1423703
Change-Id: Ie6e2b33a8084381c01a35e3ded6b021f540ef42e"
aedb9768d72079cfe6538f38b517adb4d81beb73,2015-02-20 09:46:40+02:00,"Remove versioning import of novaclient

novaclient has specific function novaclient.client.Client for obtaining
client object. This fuction should be used instead of direct import.
Also, contrib path dependends on version, so we should get it based on
versioned client.

Change-Id: If9c55446c4d10a58e9723f5c333082bcacb431b8
Closes-Bug: #1418017"
4f55c8f689861631a8060e9918066792f56dfcf5,2015-02-20 17:32:32+03:00,"Improve exception handling in _process_router_update()

in _process_router_update() where _process_router_if_compatible()
method is called only RouterNotCompatibleWithAgent exception is handled.
In case any other (intermittent) exception happens inside
_process_router_if_compatible() (e.g. MessagingTimeout on fetching
external net from server) it results in a situation where agent completely
forgets about the router and continues working as usual while server
shows router hosted by agent.

This patch adds handler for broader exception there and set
fullsync = True like it's done earlier in _process_router_update()
when getting routers from server.

Change-Id: I5bfc540a926349848702100744f97c597b852604
Closes-Bug: #1423571"
ac6cf685176c3a985a71174b9e8f0161068e38e0,2015-02-20 21:20:21+00:00,"Do not run neutron-ns-metadata-proxy as root on dhcp agent

Currently neutron-ns-metadata-proxy runs with root permissions when
namespaces are enabled on the dhcp agent because root permissions are
required to ""enter"" in the namespace. But neutron-ns-metadata-proxy
permissions should be reduced as much as possible because it is
reachable from vms.

This change allows to change neutron-ns-metadata-proxy permissions
after its startup through the 2 new options metadata_proxy_user and
metadata_proxy_group which allow to define user/group running metadata
proxy after its initialization. Their default values are
neutron-dhcp-agent effective user and group.

This change delegates metadata proxy management to metadata driver
methods in order to reuse the work already done on l3 agent side.

Permissions drop is done after metadata proxy daemon writes its
pid in its pidfile (it could be disallowed after permissions drop) and
after metadata proxy daemon binds its privileged server port (80).

Using nobody as metadata_proxy_user/group (more secure) is currently
not supported because:

* nobody has not the permission to connect the metadata socket,
* nobody has not the permission to log to file because neutron uses
  WatchedFileHandler (which requires read/write permissions after
  permissions drop).
This limitation will be addressed in a daughter change.

DocImpact
Closes-Bug: #1187107
Change-Id: I53e97254d560e608101010f67bd2dcdec81fb6a2"
dce830671c48483fce76285b07a31bbb42e694a6,2015-02-20 17:36:47-08:00,"adopt namespace-less oslo imports

Changing the leftovers that I found with latest code.
Initial review link: https://review.openstack.org/#/c/147215/

Change-Id: I5adbed9bbe9cb6e819dd2a8a72e7fbeee06fbf00
Closes-bug: #1423389"
13427a40768f1a4646520c6b7e3e8c988ce6e18c,2015-02-23 10:07:03+11:00,"Make nova notifier work with sessions

This allows a variety of additional authentication methods and gives us
keystone V3 auth for free.

DocImpact: Deprecates the nova_admin_* config options in favour of
putting nova config options in the [nova] section.

Closes-Bug: #1403686
Change-Id: Ia9941cd3e85f21cbd4db9eb3cef8b200131af9ce"
95e07c62946682c6ca393d953e7922ed47bf3edc,2015-02-23 10:48:52+09:00,"test_l2population: Use a fake mech driver instead of ofagent

As ofagent mech driver is subject to be moved out of neutron tree
for vendor code decomposition, use a fake mech driver for UTs
instead.

An alternative to remove the relevant test cases was considered.
But it's still nice to have test cases involving multiple drivers.

Anyway using fake drivers rather than real ones for UTs like this
is a good thing.

Partial-Bug: #1412653
Related: blueprint core-vendor-decomposition
Change-Id: I4b0d344da9ccbda79482f64535396fcc1a495d0f"
404abc89020366a22eb23a1869033cbad0562093,2015-02-23 11:25:54-08:00,"Nuage core plugin decomposition

Taking out Nuage's core plugin out of tree and putting
it at nuage's github repository.
https://github.com/nuage-networks/nuage-openstack-neutron

Change-Id: I6d02df85c7a2c307ad11442d0afdd50c64210af4
Partially-implements: blueprint core-vendor-decomposition
Closes-bug: #1422930"
c308dc89076e99d15cac7100ecc90df2ddb5f4fa,2015-02-24 12:08:51-06:00,"Ensure arping always exits

It is possible for the arping process to hang if the interface is
removed while it is running. This patch adds a timeout to ensure
that the process eventually exits no matter what.

Change-Id: I60458b91e88b3fbd9fbc19c004e47a005b0ed408
Closes-Bug: #1425173"
7c53956d7dad80cda40c5f12568ed5d85e5b6b75,2015-02-24 10:10:35-08:00,"Fix misspellings words in neutron

All misspelled words found in neutron code have been fixed

Change-Id: I3872b8b08d6b8ea9c3973b32cdc9897a94b4cbbc
Closes-Bug: #1424139"
b117e8ec854dd0a26d04beb7e1effedffec3cb3a,2015-02-24 16:55:58-05:00,"Move the assignment of existing_floating_ips before try block

In function _process_external() in agent/l3/agent.py, the call to
iptables_manager.defer_apply() may throw an exception, making a
later call to _update_fip_statuses() use an un-initialized value.
This will throw its own UnboundLocalError, with the result being
no iptables rules will be applied.

Added tests to cover both the defer_apply() code exception
processing, as well as this new case where we might jump to
_update_fip_statuses() without having done any work on floating
IP addresses.

Change-Id: I0045effc9319772127758be4aacca02ab5c236cd
Closes-Bug: #1413111"
fe4fc0ebe21343b4fc7b4238674d80d692dded5d,2015-02-24 21:14:03-08:00,"Create/Delete FIP Agent gateway port only if DVR Routers

A recent patch for creating FloatingIP Agent gateway
port without RPC dependency was trying to create
FloatingIP Agent Gateway port for both Legacy and
DVR routers.
""Change-id: Ieaa79c8bf2b1e03bc352f9252ce22286703e3715""

This patch fixes the problem by checking for the router,
before it tries to create or delete a FloatingIP Agent
Gateway Port.

Change-Id: I588b518d2fffd3943abe6d70fb0308adbe46e974
Closes-Bug: #1423422"
911f8b57f80798ec8fe3c82282fb4c812cc9472c,2015-02-25 19:09:27-05:00,"Change L3 agent AdvancedService class to be non-singleton

The idea behind the AdvancedServices (Metadata, *aaS) services
to be singletons was to (1) offer a way to get an instance of such
a service in a convinient manner, and to (2) ensure that only one
service registered per service type.

(1) Since the AdvancedService.instance method required an instance
of a L3 agent, this point was kind of missed. If you have a L3 agent
instance in your hand, just use it to access the service you're looking
for.

(2) This is now fulfilled by asserting that only one driver is registered
(per type) in the .add method.

The motivation to make them non-singletons is that:
a) They don't need to be
b) The code is simplified this way
c) I've been facing crazy issues during functional testing where we're
   constantly instantiating L3 agents, and the (singleton) metadata
   service was referencing the wrong configuration object. The service
   was re-initialized during a test, screwing up the configuration of
   other mid-run tests.

Closes-Bug: #1425759
Depends-On: I155aece9b7028f1bdd3d9709facef392b38aec27
Depends-On: I199f6a967c64e921624b397fa5b7dfc56572d63a
Change-Id: I192e4d12380346c53c8ae0246371ccc41a836c4c"
0216afc6bcbb2ca6c57cdf92d22337de4a2e7bb6,2015-02-26 08:01:01+00:00,"remove unused code in metadata agent code

Change-Id: Ia5b1449dd952e26de3ee651a30258f0b66080e09
Closes-bug: #1425833"
4d4de151e9a0edd86b8ce5b055e56a5784d5c08f,2015-02-26 13:12:28+03:00,"Avoid DetachedInstanceError after session rollback

In some cases this exception is thrown while accessing Agent
object from logging statement after a transaction was rolled back.
There is a unit test that covers thsi code patch, but the issue
is not reproducible with sqlite.
Just avoid accessing db object after session had been closed.

Change-Id: Iff6b72156b08f177bd0c71f6ba93d3bf46c82fa4
Closes-Bug: #1424578"
6b0a98563ca1e22b006df8cd5bc0e6dbde999bc0,2015-02-26 11:01:14+00:00,"Correct db functional tests to support oslo.db 1.50

Currently test_migrations[1] uses _cleanup private method defined in
oslo_db.sqlalchemy.test_migrations which has been removed in oslo.db
1.5.0. This change corrects test_migrations[1] based on oslo.db
change I16bfa3af0e1ad6a9231ea38dea7cd76092347f55.

[1] neutron.tests.functional.db package

Change-Id: I35676ca2e5900d7fd95a11d6c7dd3ad1c9a686e2
Closes-Bug: #1425890"
c8c07d6f47099bbe6070369db2d70a6294a9be33,2015-02-26 14:05:42+03:00,"Avoid ObjectDeletedError while accessing deleted binding

In some cases access to db object's attribute triggers its refresh.
When the object has been already removed from the database, it could
lead to ObjectDeletedError being thrown.
Unit test was added to cover code path where the issue occurs
however issue doesn't seem to be reproducible with sqlite.

Change-Id: I0d6f9a91572c89cf7da1b66b880aeaa6b4b1987e
Closes-Bug: #1424593"
841b2f58f375df53b380cf5796bb31c82cd09260,2015-02-27 10:46:51+00:00,"Make del_fdb_flow() idempotent.

Addresses an issue where del_fdb_flow() gets a duplicate call for
the same port, which results in a KeyError. This change makes the
call more idempotent, so that it doesn't cause other follow-on
errors as a result of the uncaught exception.

Change-Id: I7a3a34dd654e143dee06c3e4642e859211a312ca
Closes-bug: #1421105"
7907d40075de7528122b0e900a5699b280a04901,2015-02-27 08:47:50-05:00,"Allow AsyncProcess to block on process start and stop

* Move utility functions from the test tree to the non-test tree
* Add tests for the newly moved functions
* Use these functions in AsyncProcess

This will allow the ip monitor in the following patch to start
and stop in a synchronous manner.

Related-Bug: #1402010
Change-Id: I03727d8acc17e561d3473b0ebecfbe49cb5523b1"
5917fcff32a51e755b7bb90790cac5afd92556e8,2015-02-27 17:14:29+03:00,"Make listing security groups faster

If we have a large number of security groups (more than 1000) with
security group rules (about 100 for each group) listing them
could take rather long time(more than 1 minute).

Adding lazy join to backref to SecurityGroupRule model will make
it faster at list on 15%.

Change-Id: I648a48cdefe0faf75c0c62bd8adffc12547293be
Closes-bug: #1426383"
1349891fce528365e5d1abce95d019ce40275234,2015-02-27 18:11:55+01:00,"tests: initialize policy in BaseTestCase

This is needed to avoid test cases breaking policy file search code from
oslo.config by mocking out stdlib functions from os module like
os.path.isdir or os.path.exists.

This also allows us to remove explicit policy setup from test_api_v2 and
test_policy files.

Note that for test_netns_cleanup, test_ovs_cleanup, and test_config, we
removed test_setup_conf test cases. They test a function that is used in
other test cases only, and hence do not belong to the suite. This allows
us to avoid hacks around those test cases that do not play nice with
global config-file options we set in BaseTestCase.

Change-Id: If14a3c741837193ad104467f0cf4486a6a386e6d
Closes-Bug: #1426369"
294019139d575bd7144cfcc229c98c8497bfbf7c,2015-02-27 20:47:42+00:00,"Revert ""Remove port from ovsdb after its deletion""

Sentinel patch to establish whether commit [1] is at
fault of the sudden spike of DBDeadlock errors.

[1] d6a55c17360d1aa8ca91849199987ae71e8600ee

Change-Id: I021e94e322f9b5eca665ea3aede41e034d3047cc
Closed-Bug: #1426543"
df63520f17061cedfc1d9289c7905db33536dadd,2015-02-27 23:12:10+00:00,"Password config options should be marked secret

If passwords are not marked secret, there is the potential for
them to be logged in a world readable location.

Link to the OSSG guideline (may change in the future):
https://github.com/hyakuhei/OSSG-Security-Practices/blob/master/sensitive_config_file_options.md

Oslo.config descriptions:
http://docs.openstack.org/developer/oslo.config/cfg.html#special-handling-instructions

SecImpact

Change-Id: I6d5c80b7610d593fdd331c726039f1456d2c5bf7"
e6ea486a9c82e2b083fbd181e31e45e0a5c43e42,2015-03-02 07:01:14+00:00,"ovs_neutron_agent should exit gracefully

In this patch set if any error occurs during agent initialization
phase, then it terminates ovs neutron agent gracefully.

Closes-Bug: #1351135

Co-Authored-By: Aman Kumar <amank@hp.com>
Co-Authored-By: Neethi Shasidhar <neethi209@gmail.com>

Change-Id: I14d091c73c8f8f4dfe70e7f9a7f7683b5fb0fd7f"
5264b3d234110e26d1db24a7972dbbca74f15bbe,2015-03-02 16:19:50+09:00,"Add a functional test for iptables_manager.binary_name

Related-Bug: #1367075
Change-Id: Iaa940b3a04302c6eb3674a2840d54df8b62c1926"
f78ce6782a57d6fd63c6e1dabd6a45cbd5c458cc,2015-03-02 15:07:41+02:00,"Removing a router twice from the same agent shouldn't cause an error

When we remove a router from an agent that has already been
unscheduled from we raise an exception that eventually causes an error.
The method '_unbind_router' raises a 'RouterNotHostedByL3Agent' exception
on failure. In both cases the actual removal of the router
from the same agent has no effect.

The solution is to stop raising 'RouterNotHostedByL3Agent' so
that _unbind_router() being invoked without error can indicate that
the router is no longer bound.

This solution matches the behaviour found when trying
to schedule a router to the same agent twice.

This change is a result of the discussion in:

https://review.openstack.org/#/c/144681/2

Closes-Bug: #1406705

Change-Id: I015bfc0fde11ba4f39417e4c134faa8132cb3eac"
a48a13954881b771eaaaa1c1446e149313eb9803,2015-03-02 14:28:49+00:00,"PLUMgrid plugin decomposition

As part of the plugin decomposition work, this change
removes PLUMgrid plugin code from Neutron and moves it
to networking-plumgrid repo [1]. Plugin code, config,
drivers and unit test cases are all moved to
networking-plumgrid.

Updated vendor decomposition progress chart

[1] https://github.com/stackforge/networking-plumgrid

Partially-implements: blueprint core-vendor-decomposition
Closes-bug: #1426752
Change-Id: I34c952d1c259f44ed8028ded0b58a5db908dd245"
17cae2cb7e6ece0d7219fdd92e2d0eb96992b852,2015-03-02 10:52:50-08:00,"Prevent direct port-delete of FIP Agent GW and CSNAT

FloatingIP Agent GW Port and Centralized SNAT port
that are currently used by DVR in FloatingIP and
SNAT Namespaces respectively should not be allowed
to delete directly using the Port-delete command by
an admin.

This patch fixes the above stated issue by adding the
respective device-owners to the router_device_owners
list in l3_dvr_db.py

Change-Id: Ibdddf2af348907d2ec7513693d546739e16437dc
Closes-Bug: #1425504"
816efd30bbe9da0f1d3f1c49cc2b0d0ae2bb184d,2015-03-03 06:50:18+09:00,"contribute.rst: Fill in the current status of ofagent

Partially-implements: blueprint core-vendor-decomposition
Partial-Bug: #1412653
Change-Id: I2bc9a8aa0d4036f2cc15f49e73a019fcd9b4215c"
af4de720545167b8ca29f1256ec577b5dc108237,2015-03-03 06:50:34+09:00,"ofagent: Vendor code decomposition

networking-ofagent is now available on StackForge.
(http://git.openstack.org/cgit/stackforge/networking-ofagent)

Partially-implements: blueprint core-vendor-decomposition
Closes-Bug: #1412653
Change-Id: I8a5bd10a346df5ec726635c47f18bb5c472823ed"
6b991396f4c404f01ce7fcebc7880e1f5f0f0ff5,2015-03-03 07:25:48+09:00,"Metaplugin decomposition

The main code of Metaplugin is available here:
https://github.com/ntt-sic/networking-metaplugin

Change-Id: I9bf6609df4bbe5ed679fb42156f8dea4c87303c6
Partially-implements: blueprint core-vendor-decomposition
Closes-bug: #1415304"
58d737ed52df10157f0014f28d568543262caa5a,2015-03-02 14:48:25-08:00,"Use oslo_config choices support

The oslo_config library added support for a choices keyword argument in
version 1.2.0a3.  This commit leverages the use of choices for StrOpts in
Neutron's configuration.

References:
http://docs.openstack.org/developer/oslo.config/#a3
https://bugs.launchpad.net/oslo-incubator/+bug/1123043

Change-Id: I2f935731ed7e1dea6d297dd72960d01cb8859656"
a82357cc31dcdb71e4a88c75cb31e2cfabe3e97c,2015-03-03 17:35:13+01:00,"oslo: sync all modules that depend on incubator log module

We're going to switch to oslo.log, so we need to untangle incubator
modules from the old log module. This is achieved by synchronizing all
the modules that used the module before from oslo-incubator.

Note that incubator modules now use standard logging module (and not
e.g. oslo.log).

The following modules (and their dependencies) are synced:
- eventlet_backdoor
- fileutils
- loopingcall
- periodic_task
- policy
- service
- systemd
- threadgroup
- versionutils

The latest commit in oslo-incubator at the moment of sync is:
- f989c4397d7e83c3e73e8da01a9f27bf4ca38b73

Changes to modules are minor and hence are not expected to break
anything.

Change-Id: I360863a5a4fa6a179c6884cff84553a35d889719
Related-Bug: #1425013"
aec3a94cd360be94a20d095241e5b2a6dd5ec21f,2015-03-03 20:06:14-05:00,"Introduce ip address monitor

In Juno, we used keepalived notifier scripts to report the local
state of an HA router's state. These have been found to be
unreliable. The proposed approach is to not use them altogether.
Instead, monitor the omnipresent VIP on the HA device - It is
only configured on the master instance. In order to do that,
we'll use the 'ip monitor address' wrapper introduced in this patch
to get address change events as they happen to avoid polling.

Related-Bug: #1402010
Change-Id: Icc2c07efb7e20008ff5b07d7df2104e6099091d7"
e80ab8113edf54e5d3623f55bdbd11ab19cac1eb,2015-03-04 15:46:00-05:00,"Raise error upon deleting subnet with router ports

Fixes an issue where SLAAC and DHCPV6-stateless subnets can be
deleted even if they are attached to an internal router port.
This patch raises an exception whenever a subnet is deleted
that has existing IP Allocations on an internal router port.

Change-Id: I0a16156274b5736236654fca6700ef2d67f4519b
Closes-Bug: #1424760"
287754bd40393ff12e91ccb81287364fcbae13ed,2015-03-04 23:32:31-05:00,"Change metadata driver unit tests to use monitored spawn

The modified unit test is currently the sole user of the
unmonitored _spawn_metadata_proxy. We must remove this usage so that
when the L3 agent manages the metadata proxy for HA routers,
the unmanaged methods may be removed.

Related-Bug: #1402010
Change-Id: Ib57e63dcadc378ac51702949ed24901d403002dd"
deaa70bd75352f6c1974a01bc971086912c74e9e,2015-03-05 15:25:09+00:00,"Remove references to 0.0.0.0/0 in iptable rules

Iptables removes 0.0.0.0/0 as rule source (-s) because any packet
matches the filter. Based on the discussion in the patch [1],
references to 0.0.0.0/0 are removed in the current patch.

[1] https://review.openstack.org/#/c/160782/

Closes-Bug: #1428127
Change-Id: I8cd96438ef21edfd75483eec3ebfebcee24a8300"
2387f23f12fdc546df0a160ca791d00ce492a795,2015-03-05 11:59:26-08:00,"Adding DB model changes for Nuage Plugin post decomposition

Due to decomposition of plugin work initiated during K release,
nuage plugin have gone through much changes without them being
incorporated upstream. But as per the decomp spec guideline,
we need to keep migration and model definition upstream.
So adding new schema along with migration script into K release.

Change-Id: Ia825c764917b15910bae232edc340fa315b9ffab
Closes-bug: #1424113"
b80775010c1e518f8c94d82de0f8026a45cce342,2015-03-06 05:39:44+00:00,"Replace IPv4 and IPv6 default addresses with constants

At various places in Neutron we are using IPv4 and IPv6 default addresses in
numeric format. This patch replaces them with constants to ensure consistency.

Closes-Bug: #1427645
Change-Id: I9817a95646546704e44fa70292eaa94635bb7395"
857322c30ecfed11e770f0aea7b234f8ffdc0db1,2015-03-06 18:37:41+03:00,"Use accessors instead of private attributes for Ml2 plugin

Start using accessors instead of private attributes of PortContext
and NetworkContext where it is possible.

Closes-bug: #1424587

Change-Id: Ie3d963ae6cee9782d65ba683936072602c78ebaa"
7e62260311afcf9c7bde6b7e15fb3f4d509eaaa3,2015-03-09 16:13:25+05:18,"[contribute.rst] Current status of Freescale Codebase.

Partially-implements: blueprint core-vendor-decomposition

Closes-bug: #1427588

Change-Id: Ic7a04eee1fe9e9a620ca6bcb843bcf2ed87cad26"
0198a8c91f973c5a205b64e21ed9057ab33d5615,2015-03-09 12:47:52+00:00,"Fix wrong log output in neutron/neutron/agent/linux/dhcp.py

When all subnets are turning off dhcp and killing the process,
this wrong log output ""Killing dhcpmasq for network ..."" occurs.
It should be ""Killing dnsmasq for network ...""

Change-Id: Ic12dc66365d9d127b59279581227060ca6e65105
Closes-Bug: #1429775"
34008eb55409d6ff2732da045246a84f144044c4,2015-03-10 10:27:50+09:00,"linuxbridge UT: Do not create the same instance in each cases

Reuse the one created by setUp() instead.

Related-Bug: #1430098
Change-Id: I2cf1123c66a81ad967507a2fefb89c306cdb28bb"
ce0b13982158d813024cad1fae7f495e3545b7ee,2015-03-10 10:27:56+09:00,"linuxbridge UT: Mock get_interface_by_ip

To avoid querying devices on the system running UT,
which might or might not work.

The regression was introduced by
commit b7a56fd1b44649daa1f768157e68a135b9e01dd1 .

Closes-Bug: #1430098
Change-Id: I2dcdf4b9516e0a90dffee26684fdce7f0ce43cd8"
4840fe79d7d58d26cd65113f896e766ddf55f201,2015-03-09 18:53:09-07:00,"Don't start transaction during floating IP delete

The previous floating IP code was starting a transaction to
delete the floating IP object from the database and then
calling the core plugin's delete_port method which could make
many yielding calls, risking deadlocks.

This patch updates the relationship between floating IP and the
ports table to allow the port deletion to automatically clear
the floating IP object via a cascade.

Closes-Bug: #1426543
Closes-Bug: #1426482
Change-Id: I4b1cdc198c18d5c673a35aaf9c7e960f97f1e20b"
edcda156a0be5bed91c66a4c13d230b1a4e29122,2015-03-10 02:00:01+00:00,"ofagent: Have a thin driver module

It seems preferable to have a thin driver module
rather than directly referencing an external module in setup.cfg.

This also introduces ""ofagent"" directory which can be used to
put requirements.txt later.

Closes-Bug: #1412653
Related: blueprint core-vendor-decomposition
Change-Id: Id86ade4ae75dceb5ce4283869f42f4c0d1af7c4d"
3b0544757724fecbe7b6045b8126c40c4251a22e,2015-03-10 03:59:39+00:00,"portsecurity_db: Fix a usage of is_attr_set

I believe this is the intention of the original change.
commit a5ccc2358dcc2cee5bc8db6a4448f58bae40b67b

Also, add a test case which would have revealed the problem.

Closes-Bug: #1429754
Change-Id: I1481492404e7388b145860820a308452da24e24f"
b9e02f22ef20c2080e95b582694063165e920b66,2015-03-10 00:17:24-04:00,"Change linux/ip_lib code to better handle address families

The code in linux/ip_lib doesn't handle IP address families
similarly amongst all its APIs.  It also doesn't consistently
handle how it passes options and arguments along to /sbin/ip

So in the spirit of re-factoring, let's try and fix that:

1. Have the code determine the IP address family from its
   arguments, given that it was passed an IP address.

2. Always follow an (options, command, arguments) style.
   Options need a '-' prepended and go first, followed by the
   command, and finally by any arguments.

3. In cases where we can't infer an address family but need
   one it is now required (e.g. listing routes).

I also cleaned-up the IpRule class to fall in line with the
other classes.

Change-Id: Idcb9af698e3ea2d99a6a281c86fa13f51499b628
Closes-Bug: #1419805"
1fdbcb13432c9d31e42d28912f5575a9a623c627,2015-03-10 16:28:02+09:00,"NEC plugin code split

- Removes main codes and unit tests of NEC plugin
- Add plugin-specific requirements.txt to the plugin dir.
- Move config to the plugin top dir
- Remove references of networking_nec from config module
  because it may prevent config guide generator.
- agent command can be moved to neutron/cmd/eventlet
  if some consensus has been made.

Closes-Bug: #1419396
Related to blueprint core-vendor-decomposition

Change-Id: I946e0f829e8f6251a63572331c783d7a7b5f6c01"
2db7182570f8217ba63d230f8f644b597ed417e9,2015-03-10 10:55:05+03:00,"Improve performance of _get_security_group_member_ips

Use set operations instead of using list.
Currently complexity of the method is O(n^2) where n is
amount of ips (amount of VMs in the network).
When amount of VM is big (large L2 domain), this method
can significantly load the controller.
Reduce method complexity to O(n) on average.

Change-Id: If1660e8227e5c5cd80d49ebcc6a2e06d33d31939
Closes-Bug: #1429753"
f9b2791735863b58171ee8be46c47ef3ed2c5edd,2015-03-10 13:43:24+03:00,"Prevent calling waitall() inside a GreenPool's greenthread

When neutron-server is running with several api workers
sending it a termination signal (SIGTERM, SIGHUP or SIGINT)
leads to waitall() being called inside a GreenPool's greenthread.

The reason is that a wsgi server is started in a green thread
from the same green pool that is passed to the server itself
to be used for spawning client green threads.

To avoid it, it is reasonable to use different pools for spawning
a wsgi server and for its internal usage.

This is also the case for metadata agent running with several
metadata workers.

Change-Id: I38174396f06fcb29ac0776534ac6494dabb00df6
Closes-Bug: #1423250"
fa519080a17529db3bcd4c9000a649b26a225d11,2015-03-10 14:24:53+03:00,"Don't notify dead DHCP agent of removed networks

This is needed to avoid a case when agent sees network
removal notifications on startup. Processing of those notifications
may overlap with processing of active networks and DHCP might be
disabled on some of active networks as a result.

Change-Id: I8271e8fce8b4d80a339f598b98467694774a299e
Closes-Bug: #1429737"
eb9819690b3fb5705e13963fba3ed3ef6cd9c153,2015-03-10 22:57:58+01:00,"Added oslo.log dependency

This is needed for vendor libraries out of tree to start switching their
code to oslo.log logging interface. Hopefully, they will be able to run
against neutron core using neutron.openstack.common.log while executing
oslo_log.log.* calls.

Change-Id: I666389efe65526bda66c5f70170687638d1a5038
Related-Bug: #1425013"
974991db5528eb8b227eb883a1b1ef1a918e4d14,2015-03-10 15:18:37-07:00,"Fix non-existent self.local_subnets in DvrRouter class

Found via the pylint no-member check.

Co-Authored-By: michael.smith6@hp.com

Closes-Bug: #1423777
Change-Id: I280948300810f199988a943aeb6577243423a4e7"
f371f29cd0ed0fc3d8c4811dce8e2c31f39a0673,2015-03-11 04:58:46-07:00,"Raise QuotaResourceUnknown in the quota engine

This patch lets the quota engine verify whether it manages a resource
for which a limit is being checked.

So far this check has been delegated to the drivers. This is
conceptually wrong and also lead to code duplication.

Unit tests and some docstrings are also fixed accordingly as a
part of this patch.

Closes-Bug: #1430519
Related to blueprint better-quotas

Change-Id: If1467881f13e30afa53a23b904f8eae5c7264834"
0f0b8cfe535dc306e8acd3b190a40516ddb84280,2015-03-11 22:16:16-04:00,"Stop using RPC namespace to unbreak rolling upgrades

This is a temporary patch until we get an Oslo messaging
release that supports Targets with multiple namespaces:
https://review.openstack.org/#/c/163673/

Change-Id: I96e01c00991a9d8602ebc89dbad5206b805c67eb
Related-Bug: #1430984"
f6e20ce3e3b61b9aca6ae389dcf0b8068d28a6dc,2015-03-12 13:13:53+09:00,"ofagent: Update after networking-ofagent release

Closes-Bug: #1412653
Related: blueprint core-vendor-decomposition
Change-Id: Ibccc46f1d2b944ac12d8765fddd94f01fd89390b"
22328baf1f60719fcaa5b0fbd91c0a3158d09c31,2015-03-12 11:22:56+01:00,"Migrate to oslo.log

It's mostly a matter of changing imports to a new location.

Non-obvious changes needed:
* pass overwrite= argument to oslo_context since oslo.log reads context
  from its thread local store and not local.store from incubator
* don't store context at local.store now that there is no code that
  would consume it
* LOG.deprecated() -> versionutils.report_deprecated_feature()
* dropped LOG.audit check from hacking rule since now the method does
  not exist
* WritableLogger is now located in oslo_log.loggers

Dropped log module from the tree. Also dropped local module that is now
of no use (and obsolete, as per oslo team).

Added versionutils back to openstack-common.conf since now we use the
module directly from neutron code and not just as a dependency of some
other oslo-incubator module.

Note: tempest tests are expected to be broken now, so instead of fixing
all the oslo.log related issues for the subtree in this patch, I only
added TODOs with directions for later fix.

Closes-Bug: #1425013
Change-Id: I310e059a815377579de6bb2aa204de168e72571e"
bd30eb655c7ddb240aee5562c1db3fed0e09d722,2015-03-12 10:17:19-04:00,"Remove dead code

Since VPNaaS has been updated, the get_snat_ns_name() method
is no longer needed.

Change-Id: Id852614efc5ef20f8dc2c8ed5cd0b97b354e995e
Closes-Bug: #1430967"
300025b14cd6bfe5af096d40aaed90abf2716002,2015-03-12 08:38:58-07:00,"Remove router binding with router-interface-delete

When ""neutron router-interface-delete ROUTER subnet""
command is executed to delete a router interface, it
should check for dvr ports changing on nodes which
have their l3-agent binded to the router. And if there
is any node has no port related to the router, the
binding to the L3-agent should be removed from the
""RouterL3AgentBindings"" table.

This patch fixes the problem mentioned above.

Closes-Bug: #1413630

Change-Id: I9e2b115079fa2c66c98b9c45386d139fdebf63e7"
458ff52c61ce7b6755df56fc2a940e4f04a6170b,2015-03-12 23:01:54+00:00,"Start metadata agent without trying to connect db

We set conf.database.connection into empty in agent,
and tell wsgi does not to connect db in this case.

Change-Id: Icb83157ef6f1157068f3d4238b946fdbb890083f
Closes-bug: #1425844"
5dbb34b56fc42d9c68bf6647910a437a2ad6b29e,2015-03-12 23:17:04-04:00,"Refactor retry mechanism used in some DB operations

Use oslo_db helper that will allow to restart the whole
transaction in case it needs a certain operation to be repeated.
This is a workaround for the REPEATABLE READ problem where
retrying logic will not work because queries inside a transation
will not see updates made by other transactions.
So, run every attempt in a separate transaction.

Change-Id: I68f9ae8019879725df58f5da2c83bb699a548255
Closes-Bug: #1382064"
405baef29ffae96bcf5410d5d93217f219a1bfda,2015-03-13 13:22:06+09:00,"Improve validate of remove_router_interface

Improve validate of remove_router_interface as described in
API referrence [1].

[1]http://developer.openstack.org/api-ref-networking-v2.html
   PUT: /v2.0/routers/{router_id}/add_router_interface
   PUT: /v2.0/routers/{router_id}/remove_router_interface

Also, add missing unit tests to cover a [add; delete] time
[none; subnet id only; port id only; both ids] matrices.

Change-Id: Ie4ddf61c4a4930a58d0817119566d2285a394065
Closes-Bug: #1416308"
59137d0ede2db20c4218e98a66a246f055451dc2,2015-03-13 10:35:40+00:00,"Fix netns-cleanup broken by ProcessMonitor refactor

Change I0da6071037f9728cc20403324e36c32116bcf00d broke the
netns-cleanup script. As the process_monitor parameter
is now mandatory for the dhcp driver.

Change-Id: I69617c67815b71a05a25936c5e7acc7c116c0dd6
Closes-bug: #1430762"
e99f6e00cfd397bb74d44c9462dfcfa545dbed8c,2015-03-13 11:45:39+00:00,"fix check_ports_exist_on_l3agent in no subnet case

If no subnets attached to the given router, this check
should return False.

Currently, if no subnets attached to given router, the
following process in this method will fetch all ports
to continue its checking, consider those ports are not
related to the given router, the following checking
should be invalid.

To issue #1378066, after running ""router-gateway-clear"",
_schedule_router will be triggered, and the invalid
checking will make processing in get_candidates believe
that all l3-agents are valid to schedule this router,
and finally, invalid records are inserted into table
RouterL3AgentBindings.

Closes-Bug: #1378066
Closes-Bug: #1417908
Closes-Bug: #1420032

Change-Id: If96d866c831330cca68a5fe5a0f27f178bbf40a6"
bad92a463ee4761833cdfcc7bb55f553ba3aa803,2015-03-13 07:32:42-07:00,"Brocade vendor code decomposition from neutron repo.

Brocade code decomposition of VDX mechanism driver,
includes moving out the driver and unit tests. Left
behind are the DB model for migration and config

Closes bug: #1427793

Change-Id: I3b06a1800cce1ddbb87c6ebd7981e3f249df5060"
65efa1bdb8c991c68803ba0ff928577a46bc8fcd,2015-03-13 18:32:20+03:00,"Reduce db calls count in get_devices_details_list

Each Neutron agent will impose db calls to Neutron Server
to query devices, port and networks.
Network caching is added to reduce the number
of db calls on get_devices_details_list.
Added unit tests for the check caching.

Change-Id: I933dfe9b020b15b39bc932e62d599c5d654347e1
Closes-Bug: #1370361"
3e93bf220e231de8b505735da2fd14786fd1f724,2015-03-13 13:18:24-04:00,"Remove vendor entry point

Remove entry point pointing to external vendor package.
This console script entry point already exists in the vendor repo.

Change-Id: Ib85acffc155ae6b49477f90d06346269330220b5
Closes-bug: #1431627"
89b9e8597816a5ac2f5a48133777c88abb91914e,2015-03-14 07:17:00-07:00,"Prevent updating mac address of bound port

Currently, a port's mac address can be updated even if it is bound.
This fixes the _check_mac_update_allowed() call to pass just port update
attributes rather than the entire payload and fills in missing testing.

Change-Id: Iee8492e9b4fcdb07eb438eb6f5958d7addeb3d8f
Closes-bug: #1429672"
05f234481474aa05f59c4af459b4343d21397afc,2015-03-17 04:22:34+00:00,"Schedule net to a DHCP agt on subnet create

Change the DHCP notifier behavior to schedule a network
to a DHCP agent when a subnet is created rather than
waiting for the first port to be created.

This will reduce the possibility to get a VM port created
and have it send a DHCP request before the DHCP agent is
ready. Before, the network would be scheduled to an agent
as a result of the API call to create the VM port, so the
DHCP port wouldn't be created until after the VM port.
After this patch, the network will have been scheduled to
a DHCP agent before the first VM port is created.

There is still a possibility that the DHCP agent could be
responding so slowly that it doesn't create its port and
activate the dnsmasq instance before the VM sends traffic.
A proper fix will ensure that the dnsmasq instance is
truly ready to serve requests for a new port will require
significantly more code for barriers (either on the subnet
creation, port creation, or the nova boot process) are too
complex to add this late in the cycle.

This patch also eliminates the logic in the n1kv plugin that
was already doing the same thing.

Closes-Bug: #1431105
Change-Id: I1c1caed0fdda6b801375a07f9252a9127058a07e"
8dee8df12b402943b3f7f2e34d3ccc2c00068619,2015-03-17 14:08:07+03:00,"Handle DBDuplicateError exception properly when creating default sg

Previously, an exception was not caught in one of invocations
(create_network) of _ensure_default_security_group.
Move exception handling inside that method so it never fails
with such exception.

Change-Id: Ibb0597d4db187c856f9ac1d9700701e0165c3c73
Closes-Bug: #1419723"
46e3a2f4e9ea94e2074e2bdedfaf599c743af852,2015-03-17 08:32:24-07:00,"Brocade Vyatta vrouter shim plugin for vendor decomposition

Vendor plugin code is available at:
https://github.com/stackforge/networking-brocade/tree/master/networking_brocade/vyatta

DocImpact
Partially-implements: blueprint core-vendor-decomposition
Closes-bug: #1414733

Change-Id: I2503560795567a77df855b5137f4231dea3520ad"
ce9ee556ac661c0cee358cadef4bc2d54df8104d,2015-03-17 09:07:43-07:00,"IBM SDN-VE Plugin decomposition

This addresses the changes in ml2 mech-driver
and l3 service plugin to comply with the
core-vendor-decomposition spec

The monolithic sdnve plugin will not be removed with this change
as it is still being used. Once the ml2 plugin is merged and the
older plugin becomes obsolete, it will be removed from the
neutron tree.

Partially-implements: blueprint core-vendor-decomposition
Closes-bug: #1430216
Change-Id: I5bc85a5f0a62b690004d8352b3bc43b9612c213d"
89eef8904723bc2b1306733d4e56219727ad6d07,2015-03-17 18:45:51-04:00,"Don't delete HA router primary VIP on agent restarts

An HA router's primary VIP was being deleted from the router
namespace when the L3 agent is restarted. Make sure that
doesn't happen and change the functional test to make sure
the bug stays squashed.

Change-Id: I0e5b416152bacf496de54bedee0fca8d3950be2b
Closes-Bug: #1432806
Closes-Bug: #1432785"
259f969c030491690f1e6c856b505acbb0746657,2015-03-17 19:35:03-04:00,"Include IPv6 SLAAC addresses implicitly for port create

(Patch set #1 for the multiple-ipv6-prefixes blueprint)

This patch set resolves an issue whereby auto-address subnets
are not being included implicitly for port create operations
that include a fixed_ips list.

Change-Id: I61beb2d663dfa6070b529b567d79664b1cb69810
Partially-implements: blueprint multiple-ipv6-prefixes"
5dccff1cb3367f88b7a7851988b19caad313b036,2015-03-18 14:50:48+09:00,"Fix DBDuplicateError handling in _ensure_default_security_group

The coding in change-id Ibb0597d4db187c856f9ac1d9700701e0165c3c73
catches and ignores DBDuplicateError in a nested transaction.
It would cause another exception, InvalidRequestError, on the
next operation.  (""This Session's transaction has been rolled back"")
This commit fixes it.

Also, tweak a test case to expose the error.

Closes-Bug: #1433418
Related-Bug: #1419723
Change-Id: Ie4de271c0512fb2ecc6ed6842ad20386e3785a9c"
6c61cf7af71a3661a14900b7baa2e7985ba6673f,2015-03-18 10:38:44+00:00,"Run more Rally benchmark on every patch

* Since 24 Nov 2014 we added a lot of Neutron benchmarks

Running more Neutron related benchmarks in Neutron gate allows
to avoid performance regressions and races.

* Neutron benchmarks are described here:
https://github.com/stackforge/rally/blob/master/rally/benchmark/scenarios/neutron/network.py
It's quite simple code be free to take a look.

* All changes in concurrency and times are related to optimization
of duration/usefulness

* To get description of benchmarks use:

   rally info find NeutronNetworks.create_and_update_networks

New benchmarks:

- NeutronNetworks.create_and_update_networks

- NeutronNetworks.create_and_delete_networks

- NeutronNetworks.create_and_update_subnets

- NeutronNetworks.create_and_delete_subnets

- NeutronNetworks.create_and_update_routers

- NeutronNetworks.create_and_delete_routers

- NeutronNetworks.create_and_list_routers

- NeutronNetworks.create_and_update_ports

- NeutronNetworks.create_and_delete_ports

- NeutronNetworks.create_and_list_ports

- Quotas.neutron_update

related bug: #bug 1419723
Change-Id: Ie3c84e057fc96c0f35ad77b7297c564442ebcf10"
e1377425b7586b2071340f39796669d2e593f145,2015-03-18 14:43:13+00:00,"Include IPv6 SLAAC addresses implicitly for port update

(Patch set #4 for the multiple-ipv6-prefixes blueprint)

This change adds functional code and UT for port-update
handling changes as described in the Neutron blueprint
'multiple-ipv6-prefixes'.

Whenever a port is updated on a network that includes one
or more auto-address subnets (e.g. SLAAC or DHCPv6-stateless),
then any addresses that the port previously had for those
subnets needs to be implicitly retained for the update
operation. This patch set adds this implicit retention
of the auto-addresses for port update operation.

Change-Id: I91687d05a48bc3938e4bf34a7c454823a500730c
Partially-implements: blueprint multiple-ipv6-prefixes"
387f396db83179ce109162022ab23e0c8b59c9bf,2015-03-18 08:57:04-07:00,"Make DHCP tests cleanup neutron manager reference

The DHCP scheduler unit tests occasionally call methods
on the core plugin via the neutron manager (e.g. in report_state).
However, they weren't calling the normal unit test cleanup routines
for tests that call the core plugin so they were leaving stale
references in the manager.

This patch uses the setup_coreplugin helper that sets up the
configuration for the core plugin and adds the cleanup call
to ensure that the neutron manager is cleaned up at the end
of each test.

Closes-Bug: #1434278
Change-Id: Ic35629659574121c739574c1ed39364d6977c3ea"
c3b7f1b2ae7af995f4815e3571c9828683dc0db7,2015-03-19 10:03:47+13:00,"Fix metering agent failure when chain missing

The metering agent will fail if one of the iptables chains
is missing, which will cause errors extracting data from
all the other chains. Add a simple try/except to let the
loop continue.

Closes-Bug: #1421037

Change-Id: I370ee0e2cc58ca7e1c5ef9bf4dbcce5abf7545a1"
9bae3b1832798a274bef4a77e5acda1abaa51f2a,2015-03-18 18:59:33-04:00,"Replace keepalived notifier bash script with Python ip monitor

Previously L3 HA generated a bash script and copied it to a per-router
configuration directory that was visible to that router's keepalived
instance. This patch changes the in-line generated Bash script to a
Python script that can be maintained in the repository.
The bash script was used as a keepalived notifier script, that was invoked
by keepalived whenever a state transition occured. These notifier scripts
may be invoked by keepalived out of order in case it transitions quickly
twice. For example, if the master failed and two slaves fight for the new
master role. One will transition to master, and the other will often
transition to master and then immidiately back to standby. In this case,
the transition scripts were often fired out of order, resulting in the
wrong state being reported.

The proposed approach is to get rid of the keepalived notifier scripts
entirely. Instead, monitor IP changes on the HA device. If the omnipresent
IP address was configured on the HA device, it means that we're looking
at a master instance. If it was deleted, the router transition to standby
or fault.

In order to keep the L3 agent CPU usage down, it will spawn a process
per HA router. That process will start the ip address monitor.
Whenever it gets an IP address change event, it will notify the L3 agent
via a unix domain socket.

Partially-Implements: blueprint report-ha-router-master
Change-Id: I2022bced330d5f108fbedd40548a901225d7ea1c
Closes-Bug: #1402010
Closes-Bug: #1367705"
b049971c5652adc8e6146f15180ceccc58f8ae9a,2015-03-18 23:07:56+00:00,"Allow to request metadata proxy only from internal interfaces

Currently the metadata service can be requested on 169.254.169.254:80
from all interfaces including external interfaces. This change updates
PREROUTING rules to allow request on 169.254.169.254:80 only from
internal interfaces.

Change-Id: I44a9e03992f9e2a7bd4d798ae69d8aa7d75d3078
Closes-Bug: #1187102"
96aa9f93600d6e97394ad725e095d5539848ca2d,2015-03-19 13:44:21+09:00,"Fix a usage error of joinedload + filter in dhcp scheduler

This commit fixes filtering in get_dhcp_agents_hosting_networks.

Also, separate the argument ""active"" into two; active (heartbeat thing)
and admin_state_up.  Because all in-tree callers with active=True seem
to mean only the former, currently the new admin_state_up argument is not
used.  (Thus this commit doesn't change any behaviour yet.  The argument
might be useful for other changes like [1])

[1] https://review.openstack.org/#/c/147032/

Details:

With the current coding, joinedload() produces a JOIN and
the following filter() on the columns from the joined table
would create another JOIN of the same table.  (As t1 in the
following example).  It doesn't seem to be the intended
behaviour.  As a consequence the filter (WHERE clause in
the following examples) doesn't work as expected.

Queries before this fix looked like the following,
where t1 and t2 are Agent and NetworkDhcpAgentBinding respectively:

    SELECT t2.aaa, t1_1.bbb, ...
    FROM t1, t2 LEFT OUTER JOIN t1 AS t1_1 ON t1_1.ccc = t2.ddd
    WHERE t1.eee = ...;

After the fix, it would be:

    SELECT t2.aaa, t1.bbb, ...
    FROM t2 JOIN t1 ON t1.ccc = t2.ddd
    WHERE t1.eee = ...;

Reference: http://docs.sqlalchemy.org/en/rel_0_9/orm/loading_relationships.html#contains-eager

Closes-Bug: #1414905
Change-Id: Idf9ffdb849de58fba8c18c357ffa10cf0f398140"
e5cdaf22f82f1aac429e815d72123e3333bacd5d,2015-03-19 14:38:32+09:00,"Enable to specify context on POST requests during unittests

NeutronDbPluginV2TestCase has a method 'new_create_request'
to send 'POST' request. But, it doesn't have a argument 'context'.
So, we can not execute create-test as a tenant-user(NOT admin user)

  e.g. FWaaS resources can not test with the context in creating.

This fix enables to specify 'context' when executing new_create_request.

Closes-Bug:  #1423470
Related-Bug: #1408236
Change-Id: Id8dc8cff87ca658e86c192b8da047f0c62989a4e"
28616cd45c1691845290217a5c41d3aad8129724,2015-03-19 17:02:30+09:00,"Add a missing mock in DHCPAgentWeightSchedulerTestCase

start_periodic_dhcp_agent_status_check needs to be mocked
when instantiating ml2 plugin.

The test case in question was introduced by
change I5ec8adf0c4336f885d603662223caa7694708876.

Closes-Bug: #1433944
Change-Id: I2d0b57e37d10b6dbd1a06dc7bba004890e238ce6"
b6c92f6a5f6561812fa5329e1108569700f38f9a,2015-03-19 14:30:10+02:00,"Remove redundant unit tests from OVS DVR Agent

The same test exists in test_ovs_neutron_agent.py
test_create_agent_config_map_enable_distributed_routing

Closes-Bug: #1434051

Change-Id: I0ebba4348cbc83dd1d59ff1111c0c21054ba47b3"
b96a22661290ce2ea747537512eab2fb767679e6,2015-03-19 07:21:53-06:00,"Improve DVR scale performance

Only process floating ips on a router that are relevant to the agent
hosting the router (don't process floating ips assigned to a router
if the associated vm is not hosted on the compute node requesting the
router sync). In this way, the number of database calls made during
the DVR router updates is optimized to eliminate unnecessary
duplication of calls which return the same data or are made to get
data for routers which are not relevant to the sync_routers request
from the agent.

Change-Id: I4e8477bb61ffff164d2f3bbebb94e95a25838ce0
Partial-Bug: #1413314"
c1893ae8d4579840ce9bfe95fbf80aa952a1110e,2015-03-19 10:54:35-07:00,"Fix create_security_group_rule_bulk_native to return all created rules

create_security_group_rule_bulk_native should return all of the created
security-group rules, but returns only one, this patch fix the issue and
adds a unittest to validate it.

Closes-Bug: #1434207
Change-Id: I8611c83fecf90e025b24b09fc3a371cbeebce637"
45cbe9fd9ad3ee872a75e78d6af0618baac0f89d,2015-03-20 03:01:12-07:00,"Validate when DVR enabled, l2_pop is also enabled

The agent should fail to start when
enable_distributed_routing = True and l2_population = False
otherwise the router won't behave as expected.

All the cross subnet traffic (between VMs of the same tenant)
in DVR is now handled locally on the compute node using the router namespace.
A Linux namespace is created for every virtual router,
on each compute node that hosts VMs that are connected to that router.

The local DVR performs the routing and replaces the source MAC address and
the destination MAC address for every packet leaving the compute node.
In order to do that correctly, the router must be populated with
all the L2 addresses of the attached networks

Change-Id: Id2b56d852eff4773a347f490b19ad9eefc86af9c
Closes-Bug: #1417633
Co-Authored-By: Romil Gupta <romilg@hp.com>"
dbe37d571474ca759e57e61308cd3926a00b481e,2015-03-20 14:46:48+03:00,"Fix validation of physical network name for flat nets

Fix validation of physical network name for flat nets for
the case when physical network names are not set.

Closes-bug: #1424548

Change-Id: Ibb64af48ff65ca515f48cfba176a89afc9103f1e"
a13d1151764abcf48315d8cccaa56be7f35cb3c2,2015-03-20 06:49:09-07:00,"Allow plugin to specify security-group rules ids upon creation

This patch enables plugin to specify the security-group rules ids,
it is optional and defaults to current behavior.
This approach is already used with network creation, where a plugin can
specify the network uuid.

Closes-Bug: #1434067
Change-Id: I034f0ffc2200f64926617e87861a97838e76342c"
3106d358f1963f9f9611018ad77eadd13874242d,2015-03-20 20:04:52+00:00,"Move metadata proxy shared options to neutron.conf

This change moves metadata proxy options shared between dhcp and l3
agents to neutron.conf. This change prepares follow-up changes allowing
to run metadata proxy with nobody user/group

Change-Id: I1828e322791b8a697765cad2f12857e3d6deae68
Related-bug: #1427228"
ec90cad414dd2a2e17c45ee6b75c569b75b88722,2015-03-20 14:42:07-07:00,"Fix usage of 'default' parameter in 1955efc66455 migration

'default' is useless in migration, to provide default value in db
should be used server_default instead.

Closes-bug: #1434601

Change-Id: If17b48213e03f4b01db08186c272c67709e147f5"
c0289458fa9055ee488989828951d15fa2a06da3,2015-03-21 06:09:09-07:00,"Fix intermittent failure in TestNetworksFailover UT

Ensure that the periodic check does not get in the way of method
calls being tested, by stopping the periodic task from running.

This patch moves the mock for the periodic check into the
setup_coreplugin call so it gets called by unit tests that
use the core plugin.

The previous location after the construction of the API router was
too late because the core plugin was already constructed by the
neutron manager. This led to random failures because the periodic
tasks leaked by all of the unit tests would occasionally preempt
test_reschedule_network_from_down_agent in automatically removing
a network from an agent.

Co-Author: Jenkins <jenkins@review.openstack.org>

Change-Id: I60ad7fa8ca874f93b7f806a0e035be84180a5de9
Closes-bug: #1432958"
2dab8a30e7a9b6f5b894414cae4dead56a296202,2015-03-22 08:33:44-04:00,"Fix missing spaces in strings split across lines

Change-Id: Ib40614aaff78a1a2c5d7aa20679ee48f18441218
Closes-bug: #1430994"
cd4d2f03e83c326f849a0b18a666a406087c94e7,2015-03-24 11:23:17+03:00,"Fix handling of before/after notifications in linuxbridge agent

Avoid problem similar to described in bug #1367881

Change-Id: I76059469c20be9161743ba730e46da1789ded4a8
Closes-Bug: #1407887
Related-Bug: #1367881"
94951504a12735309e84f643d6d685a77bbd8f5a,2015-03-24 11:44:15+01:00,"Fix common misspellings

Wikipedia's list of common misspellings [1] has a machine-readable
version.  This patch fixes those misspellings mentioned in the list
which don't have multiple right variants (as e.g. ""accension"", which can
be both ""accession"" and ""ascension""), such misspellings are left
untouched.  The list of changes was manually re-checked for false
positives.

[1] https://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines

Partial-Bug: #1390035
Change-Id: Ie5d86247cc4f50b6578a9b76c9c8cade35128d5a
Signed-off-by: Martin Kletzander <mkletzan@redhat.com>"
9902c101f26c72bd416e07c4539a4d63945a86c7,2015-03-24 10:46:03-04:00,"Deprecate use_namespaces option

Change-Id: I3a769a0195aba45ec836b669fe049f0b8eba884f
Closes-Bug: #1435382"
5a480be4a806e9f9b6e87f217a43fcc5fd8553dc,2015-03-25 15:06:21+09:00,"Fix a usage error of joinedload + filter in l3 scheduler

This commit fixes admin_state_up filtering in
get_l3_agents_hosting_routers.  Also, adapt its callers
which rely on the current broken implementation.

Details:

With the current coding, joinedload() produces a JOIN and
the following filter() on the columns from the joined table
would create another JOIN of the same table.  (As t1 in the
following example).  It doesn't seem to be the intended
behaviour.  As a consequence the filter (WHERE clause in
the following examples) doesn't work as expected.

Queries before this fix looked like the following,
where t1 and t2 are Agent and RouterL3AgentBinding respectively:

    SELECT t2.aaa, t1_1.bbb, ...
    FROM t1, t2 LEFT OUTER JOIN t1 AS t1_1 ON t1_1.ccc = t2.ddd
    WHERE t1.eee = ...;

After the fix, it would be:

    SELECT t2.aaa, t1.bbb, ...
    FROM t2 JOIN t1 ON t1.ccc = t2.ddd
    WHERE t1.eee = ...;

Reference: http://docs.sqlalchemy.org/en/rel_0_9/orm/loading_relationships.html#contains-eager

Partial-Bug: #1414905
Closes-Bug: #1410841
Change-Id: I2243cdfda5c6fe5ef67f96e3274d5381a6e50e62"
4c6b565371cef95b63cb81f2ee90f65c2d560a80,2015-03-25 12:38:24+03:00,"Add some useful notes in  devref/db_layer.rst

Added information about difference between default and server_default
parameters for columns.

This was suggested in comments to I466202ac8c378f1e19e42ec2880d0c8fbc35fd28.

Related-bug: #1295539

Change-Id: I605ab8a4f3af80497fb8ad21d43fa13d8d533325"
81ac74359ce08a252dd8935b44ba3975a96c66ff,2015-03-25 16:57:04+00:00,"Cisco Nexus1000V ML2 Mechanism Driver

Introduces the Cisco Nexus1000V Mechanism driver for ML2 plugin.
All the vendor specific code resides in stackforge repo networking-cisco.

Closes-Bug: #1425632
Partial-Implements: blueprint core-vendor-decomposition

Change-Id: I66bf83f45bf1e0269d0876196f6aa032b0fa859f
Co-Authored-By: Steven Hillman <sthillma@cisco.com>"
c96b4f0f6e4e18842bb738cdd688a3129d24a71d,2015-03-25 17:03:07+00:00,"Cisco UCS Manager ML2 Mechanism Driver

Introduces a ML2 based Mechanism Driver for Cisco UCS Manager. The vendor
specific driver code referenced by this MD resides in stackforge repo
networking-cisco. This MD did not exist in the Neutron tree before so no files
have to be removed as part of this change.

DocImpact

Partially-implements: blueprint core-vendor-decomposition
Implements: blueprint ml2-ucs-manager-mechanism-driver
Closes-Bug: #1434401

Conflicts:
	etc/neutron/plugins/ml2/ml2_conf_cisco.ini
	neutron/db/migration/alembic_migrations/versions/HEAD
	setup.cfg

Change-Id: I5a32b18f0d4e3ef55738c51e65e3e81d8f415da4"
5b44f48ff384d60833c0fadcea78f35ce98d6f11,2015-03-25 13:59:35-07:00,"Add L3 router plugin shim for Brocade MLX

Change-Id: I4eba6a3fb8ce2b22e0d142643d753ee2314425b8
Closes-Bug: #1428316"
d6f1fb67d2ee7b5d138ab952a1d6ae7673aeab77,2015-03-25 23:22:28+00:00,"If configured, set the MTU for fpr/rfp intefaces

if network_device_mtu parameter is configured, set the MTU for
fpr and rfp interfaces to the value specified by the parameter
at the time of creation of these interfaces.

Enhanced DVR functional test to verify MTU gets
set for the fpr/rfp interfaces.

Co-Authored-By: Adolfo Duarte <adolfo.duarte@hp.com>
Closes-bug: #1429162
Change-Id: Ie41122d1f7306dfd3debbbb8dbf2ecabf716dcb8"
bb9b0e01a4fe8df80c1917235252d721324828a5,2015-03-26 14:22:16+08:00,"Use 1/0 as booleans for DB2

DB2 stores booleans as 0 and 1. It does not recognize True/False.

Change-Id: Idaba2fa5bba259e69a1f92c531c3389b3293cf75
Closes-Bug: #1436674"
1c49571d296db07deb766149fe66756b5b4db66a,2015-03-26 02:38:26-07:00,"Follow up patch for Validate when DVR enabled, l2_pop is also enabled

Reference:
https://review.openstack.org/#/c/165311/

For a VLAN underlays, DVR does not mandate l2-pop to be turned ON.

So just checking for enable_tunneling and validating for l2-pop being
turned ON is more than sufficient.

Change-Id: I96695dc623b4ea37d3ef1384eb9ac9c1384d3da3
Closes-Bug: #1417633"
857345c9e21a044b3e2a9cd7b070e34bd75c27fd,2015-03-26 15:35:05+02:00,"Added note about removing bridge from mappings

A bridge removed from mappings is not managed by the OVS agent anymore,
but continues to be connected to the integration bridge.
Added a note about it in the config so that deployers make sure they
don't end up in a sticky situation.

Change-Id: I8992f842046651e0f231c6bf08b65efa07056757
Related-bug: #1436267"
6abc6399df4903881a1ee292be9f721e0252c529,2015-03-26 21:47:00+00:00,"Send only one rule in queue on rule create/delete

Now we send all labels and rules per rule create/delete
and rebuild whole iptables chains.
In this patch we send only affected rule and create/
delete only this rule from iptables.

Change-Id: I58ebd8d810c62980c09a340ee1680be17c12b74a
Closes-Bug: #1400280"
766c2738ae16ebbae37f26b17e261f0112616bb5,2015-03-27 10:33:31+09:00,"Enable services on agents with admin_state_up False

Previously when admin_state_up of an agent is turned to False,
all services on it will be disabled.
This fix makes existing services on agents with admin_state_up
False keep available.
To keep current behavior available the following configuration
parameter added.

* enable_services_on_agents_with_admin_state_down

If the parameter is True, existing services on agents with admin_state_up
False keep available. No more service will be scheduled to the agent
automatically. But adding a service to the agent manually is available.
i.e. admin_state_up: False means to stop automatic scheduling under the
parameter is True.
The default of the parameter is False (current behavior).

Change-Id: Ifba606a5c1f3f07d717c7695a7a64e16238c2057
Closes-Bug: #1408488"
3f0c2b552a28b2e9cb8b80dc1691680f65d812db,2015-03-26 22:20:58-04:00,"Revert ""Fix validation of physical network name for flat nets""

This reverts commit dbe37d571474ca759e57e61308cd3926a00b481e.

This validation change broke TripleO's os-cloud-config
setup-neutron script.

Change-Id: I94c419b26ba93c67c9064fc110c8986c1ff68897
Closes-bug: #1437116"
abc12279f774bafdc83e03234ef2bad679072a8b,2015-03-26 19:52:23-07:00,"Don't eagerly load ranges from IPAllocationPool

The subnet object eagerly loads the IPAllocationPools
associated with it. Each of these was eagerly loading
the IPAvailabilityRange objects associated with it.
On a large subnet with lots of churn, this could be
thousands of records. All of these records were being
loaded for every call to get_subnet, which means all
get_subnets, get_networks, and so-on. icky

This patch changes the relationship between IPAllocationPool
and available_ranges to a 'select' load, so they won't be
loaded until referenced. On my test system with a subnet
that contained 10k ports, this changed the subnet-show time
from 4.7 seconds to 0.56 seconds.

There is no performance downside to this in the upstream
code. At the time of this patch, there were no references
to 'available_ranges' on an IPAllocationPool result. The
logic that deals with the available ranges queries them
explicitly using join statements.

Change-Id: Ia94ce9437ad21e4f21526ba84213fd673693db34
Closes-Bug: #1437131"
c4a7447e2d659b3a240a62ae9d34e6e0b9cee7a3,2015-03-27 00:53:51-07:00,"Reload DHCP interface when its port is updated

When a DHCP port corresponding to a DHCP agent is updated,
trigger a reload on the namespace so it uses the latest port
attributes (e.g. IP address).

Closes-Bug: #1431248
Change-Id: I3d1d7b95a8baa4416f1ea3fbbf25a51b818c2c23"
04cd03840977bc32b2bcadcd185a8c4ae19b7159,2015-03-27 16:46:03-04:00,"No allocation needed for specific IPv6 SLAAC addr assignment

(Patch set #7 for the multiple-ipv6-prefixes blueprint)

On internal router ports, Neutron allows for an address to
be assigned for an IPv6 SLAAC subnet that is not necessarily
EUI-64. This makes it easier for subnet create, since a
convenient address, e.g. one ending in ::1, can be used as
the subnet gateway IP address.

Currently, when an internal router port is created with a specific
(non-EUI-64) address for a SLAAC subnet, the call flow includes
a call to _allocate_specific_ip. This call is not necessary,
since we're not allocating an address from a pool (and
recalibrating availability ranges, etc.).

This patch set prevents the call to _allocate_specific_ip for
this scenario.

Co-Authored-By: Baodong (Robert) Li <baoli@cisco.com>

Change-Id: I2533ee82980bb602faa663b875787ca50b268b34
Partially-implements: blueprint multiple-ipv6-prefixes"
fe210a6ae25a1b143ed97ef9ac366e16a18d9393,2015-03-27 19:03:07-07:00,"Remove auto deletion of routers in unit tests

Remove the automatic deletion behavior of the router
context manager in the L3 unit tests. Any tests that
depend on the router being deleted should do so
explicitly.

It additionally removes the logic from the test_l3_plugin
unit tests that was just related to tearing down enough
stuff to allow the context managers to exit. It was code
that distracted from what the tests were actaully verifying.

All of the context managers for port, network, and subnet
do not auto delete by default and that will be extended to
the L3 constructs as well. The patch that did this for
ports/subnets/networks is here:
https://review.openstack.org/#/c/102465/

Change-Id: Iec97198f18e9fc390ff0747b795f7f309c8f3990"
420c21f6c75484d047a2ed64e4c12f19c495e377,2015-03-27 23:37:58-04:00,"Support Dual-Stack Gateway Ports on Neutron Routers

(Patch set #2 for multiple-ipv6-prefixes blueprint)

This patchset adds support for dual-stack gateway ports on Neutron
routers. Some background on the changes included in this patchset:

- The L3 driver's init_l3() method has been changed to accept a list
  of gateway IPs, rather than a single gateway IP.
- The Neutron port dictionary's singular 'subnet' entry has been
  replaced with a 'subnets' list, since ports can now be associated
  with multiple subnets.
- The Neutron port dictionary no longer has a (singular) 'ip_cidr'
  entry, since a port can now be associated with multiple IP CIDRs
  (e.g. up to one IP CIDR per IP family on gateway ports).
  Instead, a 'prefixlen' entry has been added to the Neutron
  fixed_ips dictionary, so that the port's (multiple) IP CIDRs can
  be derived from the matching 'ip_address' and 'prefixlen' pairs
  in the port's fixed_ips.

Change-Id: I150da5938e79eeef0c947ddb1a4282e37d0515ee
Partially-implements: blueprint multiple-ipv6-prefixes"
e2666293c449ca98c52fc7f661be43323ee36828,2015-03-28 05:16:24+00:00,"Allow update of ext gateway IP's w/out port delete

(Patch set #5 for the multiple-ipv6-prefixes blueprint)

Updating an external gateway port currently triggers a port-delete
followed by a port-create. In the multi-prefix case, if a second
subnet is added to an external gateway port, the port will be
deleted, freeing the original IP allocation, and then the port will
be recreated with new IP allocations from the two subnets. This is
undesirable as the port can't keep the same IP address from the
original subnet.

This patch modifies the behavior so that a fixed-ip change on an
external gateway port will cause a port-update instead of a
delete/create. If the gateway port network id has changed, however,
the port will be deleted and recreated as before.

Change-Id: I5b19d3b167668ce5c04e7ce8adc63249a4501d0e
Partially-implements: blueprint multiple-ipv6-prefixes"
df7aa02aa5235b389ed8ad013acf9fccd7e877cd,2015-03-28 05:16:34+00:00,"Auto-update gateway port after subnet-create

(Patch set #6 for the multiple-ipv6-prefixes blueprint)

In the multi-prefix scenario, one can add two subnets
to an external gateway port by adding the two subnets
to the external network and using router-gateway-set.

However, if there is only one subnet on the port and
the user wishes to add another later, it is desirable
to have the newly-created external subnet automatically
added to the port. This patch adds this functionality.

Change-Id: I9395834f673038dc23b25eaeefe14895fe154e0e
Partially-implements: blueprint multiple-ipv6-prefixes"
f45f16537dc2948f69572328338afa2bcd06d10b,2015-03-28 18:06:18+09:00,"Update NEC plugin decomposition status

PyPI is now available and update the document.

Related-Bug: #1419396
Related to blueprint core-vendor-decomposition

Change-Id: I8d8d96fb4473aa03b518c2e223b9a92fa1cca7e9"
d907762f3cca1405eedaaad5d5841491576c8c54,2015-03-28 04:20:20-07:00,"Fix error raising in security groups method

In case there were security groups not belonging to tenant on port
_get_security_groups_on_port would try to raise exception but fail
trying to index set.

This patch simply joins the whole set as a string and inserts it
into the standard SecurityGroupNotFound exception.

No new exception types, no string freeze violations.

Co-Author: watanabe.isao <zou.yun@jp.fujitsu.com>
Co-Author: Jacek Swiderski <jacek.swiderski@codilime.com>

Change-Id: I039ea57269dc53ced8dece0985f33ce9ae7eab17
Closes-Bug: #1373816"
8c989e67b99745f55d462e21be0eaa00f6a0e9b8,2015-03-28 13:10:21-07:00,"Make L3 agent honor periodic_interval setting

The periodic_task decorator for the sync routers task was resulting
in a default spacing of 60 seconds. This meant that any values less
than that for the periodic_interval setting would not work correctly.
The fixed interval looping call would run at the periodic_interval
but this task would not execute every time as expected.

For example, if the periodic_interval was 40 seconds, the task would
only end up running every other interval (80 seconds in this case)
because every other attempt would be blocked by the default 60 second
barrier of periodic_task.

This sets the periodic_taks spacing variable to 1 second so the
interval is controlled only by the loopingcall as expected.

Ultimately periodic_task should probably be completely removed since
it's not compatible with the fixed interval loopingcall in this manner.

Closes-Bug: #1411085
Change-Id: I23818c3fab2640b241692f00f9b5a2f923e3cf31"
aa7356b729f9672855980429677c969b6bab61a1,2015-03-29 20:57:07-07:00,"Add simple ARP spoofing protection

Adds an option to setup OVS rules that will prevent
ports attached to the agent from sending any ARP responses
that contain an IP address not belonging to the port
(in fixed IPs or allowed_address_pairs).

It is disabled by default and requires an OVS version that
can match on ARP fields. If it is too old, traffic will
still flow but it won't have ARP spoofing protection.
There is a sanity check to verify that ARP header matching
is supported.

This prevention is specific to OVS so it will not help with
other plugins that use the reference iptables filtering. A
non-OVS-specific general approach will require something like
the ebtables integration in Ibc6d3d520c1383cf7e00f4bdeb7853a41ac4b14b.

Details:
A new table is added for ARP spoofing prevention. All ARP traffic
on the local switching table is sent to this spoofing table.
The spoofing table will allow all ARP requests because we aren't
interested in them. It will then install an ARP response allow rule
for each IP address the port is assigned. All other ARP responses are
dropped.

DocImpact
SecurityImpact
Partial-Bug: #1274034

Change-Id: I7c079b779245a0af6bc793564fa8a560e4226afe"
ca92ebdf968bef67e5259cdacce27c2cab84bd8a,2015-03-30 03:29:04-07:00,"Set floating IP port status to ""N/A""

The status of the port associated with a floating IP
would always show as DOWN. This caused confusion to
operators that weren't aware that this is expected behavior
since the port is only used for an IP allocation.

This commit sets the port status to ""N/A"" to reflect the fact
that the port associated with a floating IP has no operational
status.

DocImpact
APIImpact

Closes-Bug: #1196851
Change-Id: I2f94afa001b213d61f0e5892aae2e6e6de98fe4c"
3b66a9ff77a0c77075a1320d832f97de7aeab22a,2015-03-30 17:20:06+02:00,"tests: don't rely on configuration files outside tests directory

etc/... may be non existent in some build environments. It's also pip
does not install those files under site-packages neutron module, so
paths relative to python files don't work.

So instead of using relative paths to etc/... contents, maintain our own
version of configuration files. It means we need to maintain tests only
policy.json file too, in addition to neutron.conf.test and
api-paste.ini.test.

Ideally, we would make etc/policy.json copied under site-packages in
addition to /etc/neutron/. In that way, we would not maintain a copy of
policy.json file in two places.

Though it seems that setuputils does not have a good way to install
files under site-packages that would consider all the differences
between python environments (specifically, different prefixes used in
different systems).

Note: it's not *absolutely* needed to update the test policy.json file
on each next policy update, though it will be needed in cases when we
want to test policy changes in unit tests. So adding a check to make
sure files are identical.

This partially reverts commit 1404f33b50452d4c0e0ef8c748011ce80303c2fd.

Conflicts:
	neutron/policy.py

Related-Bug: #1433146
Change-Id: If1f5ebd981cf06558d5102524211799676068889"
34380df15b3e28d7bfa4ca3a5a11fcbbcb65e376,2015-03-30 09:58:09-07:00,"Only call get_engine().pool.dispose if _FACADE

Avoid calling neutron.db.api.get_engine().pool.dispose() if
an engine facade has not yet been created since there won't
be any connections to get rid of. Calling it on services
that do not use the DB (e.g. agents) unnecessarily creates
a database connection engine that will never be used.

Change-Id: I3dbad1bef5da7b3765898e7d539b4d119b89e73a
Closes-Bug: #1433536"
b278feada205330898897bcc446bb3623414f1e1,2015-03-30 21:17:19+00:00,"Fix functional configure script

A recent change to devstack renamed lib/neutron to lib/neutron-legacy,
and this change updates the functional setup script to reflect the
change.

Change-Id: I5eb4b4052da4b0db128feb42feae50a8bc59f373
Closes-Bug: #1438426"
5154d974fdce4625710d3b4f360d45568678eb2f,2015-03-31 10:05:03+09:00,"Make floatingip reachable from the same network

The problem is that if one tries to communicate from a tenant network
to floatingip which attached to a port on the same network, the
communication fails.

This problem is a regression cased by [1].
[1] https://review.openstack.org/131905/

Before [1] SNAT rule is as follows:
-s %(internal_cidr)s -j SNAT --to-source ...
(for each internal interface)

After [1] SNAT rule is as follows:
-o %(interface_name)s -j SNAT --to-source ...
(for an external interface)

The new rule was considered a super-set of the packets going out to
the external interface compared to the old rules. This is true but
there is a lack of consideration.

Note that the packet is 'going out to external interface' OR 'DNATed'
at this point since the rule:
! -o %(interdace_name)s -m conntrack ! --ctstate DNAT -j ACCEPT
was applied already. So we should consider the following three cases.

1) going out to external interface
should be SNATed. It is OK under the new rule but there was a lack
of rules for packets from indirectly connected to the router under the
old rules. ([1] fixed this.)

2) DNATed (and going out to internal interface)
2-1) came in from internal interface
should be SNATed because the return traffic needs to go through the
router to complete the conntrack association and to reverse the effect
of DNAT on the return packets. If a packet is not SNATed, the return
packet may be sent directly to the private IP of the initiator.
The old rules done SNAT in this case but the new rule doesn't.

2-2) came in from external interface
nothing to do.

This patch adds a rule for the case 2-1).
This patch also adds mangle rules to examine whether a packet came from
external interface.

Change-Id: Ifa695ac5428fb0edba60129a4d61ec0e127a5818
Closes-Bug: #1428887"
fa3a3401c1788dcffae64d93966c56cf963e7e28,2015-03-31 02:25:06+00:00,"Update .coveragerc after the removal of Cisco Nexus monolithic plugin

Related-Bug: #1350387
Change-Id: I3b8cb6412f1f13141a82515ab131e373b5a0628d"
e7e2609fae70dbffa0ddbf37c7804587e216648c,2015-03-30 20:36:59-07:00,"Handle no ofport in get_vif_port_to_ofport_map

Newly added ports to OVSDB might not yet have an
ofport number assigned to them. This causes the
return from the DB query to return a list instead
of a port number.

This patch handles that by attempting to convert
each result into an integer and then catching the
exception and continuing through the iteration to
ignore uninitialized ports like these.

It also adds a unit test based on data from a
failure observed in the gate.

Change-Id: I5c1bc8363cc7b07a03df12e3ccd49a09b1907ad2
Closes-Bug: #1444269"
03be14a569d240865dabff8b4c30385abf1dbe62,2015-03-31 10:56:11-07:00,"Revert ""Add ipset element and hashsize tunables""

This reverts commit b5b919a7a3569ccb93c3d7d523c1edfaeddb7cb9.

The current ipset manager code isn't robust enough to handle
ipsets that already exist with different parameters. This reverts
the ability to change the parameters so we don't break upgrades
to Kilo.

Change-Id: I538714df52424f0502cb75daea310517d1142c42
Closes-Bug: #1444201"
749886eb6b065a93dfad7fe7ed930cb77fe37b94,2015-03-31 11:20:18-07:00,"Increase max attempts to 2 for pings on ARP tests

If the server under test is under heavy load, the requirement
of the very first ping passing may be too strict. This patch
increases the max attempts to 2 for the ARP spoofing tests to
give time for the OVS flow changes to take effect.

Change-Id: Ib70790da23861a8ed9c77f9c11aaf8fa41bf581c
Closes-Bug: #1443916"
d313e668ba03a5438ce2c266bbb236303d5b3227,2015-04-01 06:54:19+00:00,"Fix reference to non-existent setup_dvr_flows_on_integ_tun_br

Found via the pylint no-member check.

Co-authored-by: Kevin Benton <blak111@gmail.com>

Closes-Bug: #1423775
Change-Id: Id4104fa783aa8c34917df6d16ff1290882f93af5"
a8c7db5b9d9bba44660de3c7a64295f9f318b63a,2015-04-01 09:38:21-04:00,"Remove ""Arguments dropped when creating context"" logging

This log was previously reduced from warning to debug.
Cinder removed it entirely in:
https://bugs.launchpad.net/cinder/+bug/1329156

The root cause is this:
Agent heartbeats use an admin context. The context is serialized
with its to_dict method, which exposes 'tenant' and 'project_name'
(These are properties of the class that are calculated from other
attributes). In the controller, this dict is used to initialize a
ContextBase, which does not accept tenant and project_name as arguments,
de facto sending those values as key word arguments.

We can either handle 'tenant' and 'project_name' specially, fix
it any other way, or drop the logging entirely. Is this logging
ever useful?

Change-Id: Ifd51b62bae7b96de44f04836015d2ed939bcb650
Closes-Bug: #1255441"
342859455690fed57adc9296c457f1bd7a7a93a2,2015-04-01 16:05:57+00:00,"Implement default subnet pool configuration settings

The default_ipv6_subnet_pool option was added [1] as an integration
point between prefix delegation work and subnet allocation work.  This
patch completes the integration with subnet allocation.  This
addresses the use case where a deployer wants all ipv6 addresses to
come -- by default -- from a globally routable pool of ipv6 addresses.

In a deployment with this option set, an API user can still access the
old behavior by passing None explicitly as subnetpool_id when creating
a subnet.

This patch also adds the default_ipv4_subnet_pool for completeness.

[1] https://review.openstack.org/#/c/166973

Change-Id: I301189b5cd31d7c5fa4a40fa3e04f8e6ac77592b
Partially-Implements: blueprint subnet-allocation"
fbc22784149cd6b3ca6d8161e360d3d7c10d94ac,2015-04-01 22:41:07+02:00,"Allow metadata proxy to log with nobody user/group

Currently metadata proxy cannot run with nobody user/group as
metadata proxy (as other services) uses WatchedFileHandler handler to
log to file which does not support permissions drop (the process must
be able to r/w after permissions drop to ""watch"" the file).

This change allows to enable/disable log watch in metadata proxies with
the new option metadata_proxy_log_watch. It should be disabled when
metadata_proxy_user/group is not allowed to read/write metadata proxy
log files. Option default value is deduced from metadata_proxy_user:

* True if metadata_proxy_user is agent effective user id/name,
* False otherwise.

When log watch is disabled and logrotate is enabled on metadata proxy
logging files, 'copytruncate' logrotate option must be used otherwise
metadata proxy logs will be lost after the first log rotation.

DocImpact
Change-Id: I40a7bd82a2c60d9198312fdb52e3010c60db3511
Partial-Bug: #1427228"
0d98dcc673631265d35d06dee3fe78a51b3be2f7,2015-04-01 20:45:12-07:00,"Move orphaned api test - deux

According to changes [1,2], API tests' new home is under neutron/tests/api.
Change 92d2054f8a slipped through the cracks. It seems also that wrong
imports lead to tests silently dropped (i.e. not executed). This patch
rectifies the issue.

 [1] https://review.openstack.org/#/c/169850/
 [2] https://review.openstack.org/#/c/167320/

Change-Id: I64be376d7cff9512bd027720116dc039831e7955"
593b64dee4c0923fc85d6656e29a2beb27f27b17,2015-04-02 16:44:36+00:00,"Refactoring of L3 agent notifications for router

The goal of this refactoring is to reduce duplication by
replacing the L3EventObservers mechanism (a specific
mechanism for L3 agent notifications), with the
CallbacksManager mechanism (a more general mechanism
currently in use), so that there is one method
used.

This is the first part of refactoring the L3 agent so that
it uses the new neutron.callbacks mechanism. To do this,
duplicate calls will be made for notifications related to
the router, only using the new callback mechanism.

This commit does two things. First, it puts in place the
notifiers for the new callback mechanism. Second, it updates
the metatdata proxy agent (which is in the same repo) to
use the new callback mechanism.

Later commits will update other repos from the old to new
callback mechanism, and to then remove the old callback
mechanism, once no longer used.

Change-Id: If134947957fd671aa99a0b2d2b37f7ec65e37766
Partial-Bug: #1433552"
692de8fa522f8da644bb8fc1d06c16403689f06c,2015-04-02 12:48:56-04:00,"Move network MTU from core REST API to extension API

The network MTU was added to the core REST API via
https://review.openstack.org/#/c/154921.  This commit
reverts that change and adds the network MTU to the
extension API.

Change-Id: I7a7d679f471ced3230f230684d5ae9789bcca305
Closes-bug: 1434671"
d82366fe015c6be91d12f3b94fb65f9a03189109,2015-04-02 13:09:30-07:00,"Always run dnsmasq as root

Regarding https://review.openstack.org/#/c/145829/
The old code of DnsMasq will always get root_helper from
neutron.agent.dhcp.agent.
However, new code will only set run_as_root when namespace
is used. That will cause permission error when namespace
is disabled and dnsmasq need to be started.

Change-Id: Ib00d6e54dba44dbbbec158b9e0518e6e42baceec
Closes-Bug: #1428007"
f93007952e40a7ae7cb2d4f3588059acf42ea209,2015-04-03 08:55:13+08:00,"Add index for port

This patch will speed up SELECTs Port with filters by
'network_id + device_owner' and 'network_id + mac_address'.

Closes-bug: #1421089

Change-Id: Ied90b6304df971a6049871f65df3e1aaee624647"
6c4091418eec5f40bd2fe0c264b1d7d2b70894da,2015-04-03 01:18:15+00:00,"Fix functional test using local timeout value

The ovsdb monitor test was using a timeout of 60s for monitor start.
This change sets the timeout to the global timeout value if it is
greater (it's 90s currently).

Closes-bug: #1439914

Change-Id: I95ee3d7dfdb5f010347a9d8db1b2bf610c0289d1"
54c05b500ac3ffad98cb480dc5bfd04bdcf91229,2015-04-03 03:19:51+00:00,"Support multiple IPv6 prefixes on internal router ports

(Patch set #3 for the multiple-ipv6-prefixes blueprint)

Provides support for adding multiple IPv6 subnets to an internal router
port. The limitation of one IPv4 subnet per internal router port
remains, though a port may contain one IPv4 subnet with any number of
IPv6 subnets.

This changes the behavior of both the router-interface-add and
router-interface-delete APIs. When router-interface-add is called with
an IPv6 subnet, the subnet will be added to an existing internal port
on the router with the same network ID if the existing port already has
one or more IPv6 subnets. Otherwise, a new port will be created on the
router for that subnet. When calling the router-interface-add with a
port (one that has already been created using the port-create command),
that port will be added to the router if it meets the following
conditions:

        1. The port has no more than one IPv4 subnet.
        2. If the port has any IPv6 subnets, it must not have the same
           network ID as an existing port on the router if the existing
           port has any IPv6 subnets.

If the router-interface-delete command is called with a subnet, that
subnet will be removed from the router port to which it belongs. If the
subnet is the last subnet on a port, the port itself will be deleted
from the router. If the router-interface-delete command is called with
a port, that port will be deleted from the router.

This change also allows the RADVD configuration to support advertising
multiple prefixes on a single router interface.

DocImpact

Change-Id: I7d4e8194815e626f1cfa267f77a3f2475fdfa3d1
Closes-Bug: #1439824
Partially-implements: blueprint multiple-ipv6-prefixes"
9bca9ca84b76cc5bba03e9c0ff42bceaf5d2b028,2015-04-03 11:09:28-04:00,"Refactoring cleanup for L3 agent callbacks

This commit completes the refactoring of the L3 agent callback mechanism.
The goal here is to also use the neutron/callbacks/ mechanism for L3 agent
notifications, instead of have two mechanisms.

[1] modified the L3 agent to send notifiactions for router create, udpate,
and delete events, using the neutron/callbacks/ mechanism.

[2] modified VPN to use this new mechanism, instead of the L3EventObservers
mechanism. Note:

[3] modified FW repo to no longer depended on the L3EventObserver and
related objects (it doesn't currently use the event notifications).

This commit removes the notifications for the L3EventObservers mechanism,
removed the related modules and tests, and adds in tests to verify that the
new notifications are called for the different events.

Once [1] and [2] are upstreamed, this commit can proceed.

Refs:
[1] https://review.openstack.org/#/c/164466/
[2] https://review.openstack.org/#/c/165226/
[3] https://review.openstack.org/#/c/167275/

Change-Id: I7c4b4ea5f9fb19abb812665cdae5fb70c84fe3ec
Depends-On: If5040a827a6903cc7cb5e59cdb7fb95f61b13d47
Closes-Bug: #1433552"
b7ac8501a0a4753be09b37525ec1665bafacdd8b,2015-04-06 16:28:00+00:00,"Skip example retargetable functional test

The example retargetable test that previously ran as part of the
functional suite is now skipped due to the fullstack example's db
fixture usage causing the test to fail if it the fullstack example
runs first on the same worker.

Change-Id: I0a34f9ba04c53a4291698be819070c66009c8b4a
Related-Bug: #1440797"
80bea7a38670620934faafd5f583fe6164b9f9b3,2015-04-06 18:31:37+02:00,"Allow metadata proxy running with nobody user/group

Currently metadata proxy cannot run with nobody user/group as metadata
proxy requires to connect to metadata_proxy_socket when queried.

This change allows to run metadata proxy with nobody user/group by
allowing to choose the metadata_proxy_socket mode with the new option
metadata_proxy_socket_mode (4 choices) in order to adapt socket
permissions to metadata proxy user/group.

This change refactors also where options are defined to enable
metadata_proxy_user/group options in the metadata agent.

In practice:
* if metadata_proxy_user is agent effective user or root, then:
  * metadata proxy is allowed to use rootwrap (unsecure)
  * set metadata_proxy_socket_mode = user (0o644)
* else if metadata_proxy_group is agent effective group, then:
  * metadata proxy is not allowed to use rootwrap (secure)
  * set metadata_proxy_socket_mode = group (0o664)
  * set metadata_proxy_log_watch = false
* else:
  * metadata proxy has lowest permissions (securest) but metadata proxy
    socket can be opened by everyone
  * set metadata_proxy_socket_mode = all (0o666)
  * set metadata_proxy_log_watch = false

An alternative is to set metadata_proxy_socket_mode = deduce, in such
case metadata agent uses previous rules to choose the correct mode.

DocImpact
Closes-Bug: #1427228
Change-Id: I235a0cc4f0cbd55ae4ec1570daf2ebbb6a72441d"
b5b919a7a3569ccb93c3d7d523c1edfaeddb7cb9,2015-04-06 15:33:01-04:00,"Add ipset element and hashsize tunables

Recently, these messages have been noticed in both tempest
logs, as well as reported by downstream users syslog:

  Set IPv4915d358d-2c5b-43b5-9862 is full, maxelem 65536 reached

So the default of 64K is not sufficient enough.

This change adds two config options to control both the number
of elements as well as the hashsize, since they should be
tuned together for best performance.  Slightly different
formats were required for 'ipset create' and 'ipset restore'.

The default values for these are now set to 131072 (maxelem) and
2048 (hashsize), which is an increase over their typical default values
of 65536/1024 (respectively), in order to fix the errors seen in
the tempest tests.

DocImpact

Change-Id: Ic0b5b38a840e737dc6be938230f4052974c8620f
Closes-bug: #1439817"
1105782e3914f601b8f4be64939816b1afe8fb54,2015-04-06 23:28:31+00:00,"Reorganize unit test tree

This change ensures that the structure of the unit test tree matches
that of the code tree to make it obvious where to find tests for a
given module.  A check is added to the pep8 job to protect against
regressions.

The plugin test paths are relocated to neutron/tests/unit/plugins
but are otherwise ignored for now.

Change-Id: If307593259139171be21a71c58e3a34bf148cc7f
Partial-Bug: #1440834"
5bdcacad62ba468de1bd339cad44428c2374d973,2015-04-06 23:28:45+00:00,"Merge open source plugin test code modules

The unit test reorg is about moving files around so a test module is
clearly associated with the code module it targets, but the test
modules in this change needed to be manually merged because they both
targeted the same module.

Change-Id: I80f4b97fadd318896e7fa4e7e7e939f924127b2a
Partial-Bug: #1440834"
21bef562c23d96fe41daeedeb43c0bb2d1c53ed0,2015-04-07 00:55:25+00:00,"Reorganize plugin test modules

This change moves plugin test modules to conform to the new rules on
unit test tree structure (see TESTING.rst).

Vendor plugin paths continue to be ignored, and unit test modules that
test features instead of modules are also ignored pending their
removal to the functional test tree.

Change-Id: I482c377ca72ffd58692ad84bd9692356513e4c98
Closes-Bug: #1440834"
e585c822e38919451beeb95406c521b09b18e9fc,2015-04-06 19:58:51-07:00,"Fix dynamic arp populate error for dvr routers

Recent refactor to the L3 Agent have introduced
this problem. When we create a VM after we
attach an interface to a router or when we add
an interface with an existing VM to a router, in
both cases the arp entries for the dvr serviced
ports are not getting populated in the Router
Namespace.

Closes-Bug: #1438969

Change-Id: I4a82e2435d176f3d9336d7f0dab9726c063840b9
Co-authored-by: Armando Migliaccio <armamig@gmail.com>"
78d3b40899b81dd2ecfadcc8547c8eabc6849e53,2015-04-07 12:42:13+09:00,"linuxbridge UT: Fix a regression of the recent ip_lib change

A recently merged change, I07d1d297f07857d216649cccf717896574aac301,
changed IPWrapper.get_devices to use /sys instead of executing ip command.
Unfortunately it broke linuxbridge unit tests, which seems to assume that
mocking utils.execute is enough in some places.  This commit fixes the
regression.

Closes-Bug: #1433417
Related-Bug: #1374663
Change-Id: I9570abe703b438a3fc358f747e25d023934d1ffd"
3c35b40b20b8245350968d0a78de03aacba0cc33,2015-04-07 16:39:49+09:00,"Remove duplicated l3 router scheduler test cases

Turn L3SchedulerTestCase to a mixin to reduce the number of
duplicated test cases.  There's no reason to run them in both
of L3SchedulerTestCase and L3ChanceSchedulerTestCase.

Closes-Bug: #1436164
Change-Id: Iee33f77fa2f9b9e20bb9c3fc4fb11a38de14bca5"
760fe6a8fabc921e75367b5f02bab4fc326b8115,2015-04-07 14:03:19+00:00,"Return from check_ports_exist_on_l3agent if no subnet found

The call to get_subnet_ids_on_router can return an empty list.
If the subnet_ids list is empty, the subsequent call to get
the ports on a subnet returns all ports.  If this occurs
when doing a remove_router_interface, the performance
of a remove_router_interface degrades significantly.  This change
returns immediately from check_ports_exist_on_l3agents if no
subnet is found.  A new unit test has been added to cover
the specific case of returning immediately without calling
get_ports when a remove_router_interface operation is performed.

Change-Id: I247d3bae152ab4f8ab7e00bd24d878eb08dca1ba
Closes-Bug: #1420032
Depends-On: I15bbf16fd4378c6431e9da8942d0968e7a012a91"
e37dcd4c76e3ab61c585b116c34d32382c592b9f,2015-04-07 15:15:33+00:00,"Remove check for bash usage

Arbitrarily restricting ourselves from using bash because developers on
platforms like netbsd don't want to install bash from ports doesn't
make sense.  Any non-trivial shell script is likely to use features
like arrays or string manipulation that are poorly supported (if at
all) by sh, and the continued bumping of the number of expected bash
scripts is an indication that the check is not serving its purpose
anyway.

Along with removing the check, all shebang references to /bin/bash
have been replaced with /usr/bin/env bash in an attempt to be more
compatible across different hosts.

Change-Id: Ief72dc380cc88af38959c330897e2c127e33c332
Closes-Bug: #1440824"
23351390d87c3541e9df05164201024be0a3d42f,2015-04-08 00:24:43+04:00,"OOP cleanup: start protected method names with underscore

This slightly improves readability of l3_schedulers module.

Change-Id: I362143939b513bb3b2a02e7472efa26e8c83cb96
Closes-Bug: #1436922"
31631e82bbf974c50fb913dafe0ad86e2c0e6a8b,2015-04-07 16:40:47-07:00,"Fix intermittent UT failures in test_utils

Change eba4c2941ee introduced these tests. However they are not that useful as they
simply mimick the code, without really ensuring that the behavior is expected, so
they provide negative value ([1]), plus, they fail randomly.

This patch removes them in favor of a more useful functional check.

[1] http://googletesting.blogspot.com/2015/01/testing-on-toilet-change-detector-tests.html

Closes-bug: #1441347

Change-Id: I8a321995295deef7f6d30be303486be491e2771f"
e8603512c4e7aa976ad29dfaf609505267b8c870,2015-04-08 10:36:34-04:00,"Consider all address scopes in init_l3

Currently init_l3 retrieves the list of global addresses from the kernel
on a specific device in a network namespace. If any of the addresses are
not in the ip_cidrs argument to init_l3, they will be deleted. The
problem with only listing global addresses is that if a site-local or
link-local address is added during a subnet-create, and the user wishes
to later delete the address, init_l3 will never consider that address
for deletion.

To fix this, init_l3 should not limit its scope when listing addresses
on an interface. It should, however, ignore the default IPv6 link-local
address assigned by the operating system as this address is not known to
Neutron and should not be deleted.

Change-Id: I3d7a3e318e32acae3836c51e4e2e95ae756e645b
Closes-Bug: #1437499"
aeb5efe3fbeae82a2d65f6bb68710d14156c58bf,2015-04-08 11:09:56-04:00,"Re-use context session in ML2 DB get_port_binding_host

This patch modifies ML2 DB get_port_binding_host method so that it
reuses the existing context session to do the database query
rather than creating a new database session.

Note that there are other methods in ML2 DB that do not re-use
the caller's session (get_port_from_device_mac() and
get_sg_ids_grouped_by_port()). These will be modified using
a separate bug (https://bugs.launchpad.net/neutron/+bug/1441205).
Change-Id: I8aafb0a70f40f9306ccc366e5db6860c92c48cce
Closes-Bug: #1440183"
809e434d2da99cb3e1a778be9838b1175e785e76,2015-04-08 08:35:13-07:00,"Moving VLAN Transparency support from core to extension

* Moving VLAN Transparency support from core to extension
* Remove the older unit tests and add new corresponding ones

DocImpact
Closes-Bug: #1434667

Change-Id: Ic551475ed7b64aad9627a57abb0df41acc19bfc1"
3d1277555e183a81b56c2ea2dc01342d8333afdd,2015-04-08 10:40:30-07:00,"Add missing config parameters in neutron.conf

Include all missing configuration parameters already
integrated in Neutron code.

Change-Id: Iefa344a2f9ec2c74f6314e7c783ff3b213d76ea3
Closes-bug: #1438329"
0107bdd5f03e3d0fef6be88b8b586f735f610522,2015-04-08 10:58:33-07:00,"Revert ""IPv6 SLAAC subnet create should update ports on net""

This reverts commit 81f4469b620ec221f53d3ffb4d00b90896dc5ce1.

Change-Id: I63a392fccda29ceff3e91c0a4de741d263bd0e8e
Related-bug: #1441382
Related-bug: #1440183"
1e06631d947a25589981b04acb221b2e4870dc2c,2015-04-08 12:54:27-07:00,"Update L3 Agent Scheduler API tests

Changes [1,2] recently merged in temptest. Change [2] in particular
is required if we run the API tests with DVR enabled, because now the
binding logic has been altered by [3].

This patch ensure that should that happen, the API job doesn't fail.

[1] https://review.openstack.org/#/c/169895/
[2] https://review.openstack.org/#/c/165246/
[3] https://review.openstack.org/#/c/154289/

Change-Id: Iead1b90030098139090ae6ad4b77f50068817083"
29dd67ff754eba3064549886c0906a83500d1879,2015-04-08 23:50:52+03:00,"Avoid synchronizing session when deleting networkdhcpagentbinding

Synchronizing session on delete leads to traces in neutron-server
logs when such binding is deleted concurrently.
Also, catch and ignore ObjectDeletedError during iterating over
bindings, that is possible since the code is not within a transaction.

Change-Id: I7a2c9a8a59ce313c7d242230eeb5da69986bfbd4
Closes-Bug: #1424593"
d5aa1831ac95c16fcee6ec0bb8f0bf07afbe384c,2015-04-09 01:23:46+03:00,"Add logging to dangling port to ml2 delete_subnet

This is useful when trouble shooting test failures.
Also, in db_base_plugin_v2, log only port_id instead of
full allocation object.

Change-Id: I3d77318aee70836de125687a7f6c0f495d545f21
Related-Bug: #1357055"
f92d22d91b8a29a0088c69a1cf4940c822d38847,2015-04-09 15:20:30+03:00,"Sync service from oslo-incubator

This sync includes changes that are required to fix handling
of SIGHUP in Neutron.

The following changes and bugfixes are included:

d24b658 Revert ""Optimization of waiting subprocesses in ProcessLauncher""
593005b ProcessLauncher: reload config file in parent process on SIGHUP
f29e865 Store ProcessLauncher signal handlers on class level
bf92010 Optimization of waiting subprocesses in ProcessLauncher

Change-Id: If0aab4e8978422346f6ba4c9e6272cdaf39db6cb
Closes-Bug: #1433142
Related-Bug: #1276694"
d9251d6e35ac87b755b63aa58bb32da20496dfba,2015-04-09 15:29:31+03:00,"Handle SIGHUP in dhcp and l3 agents

All launchers implemented in common.service require each service to
implement reset method because it is called in case a process
receives a SIGHUP.

This change adds the reset method to neutron.service.Service class
which is used to start dhcp and l3 agents.

Now dhcp and l3 agents don't die on receiving SIGHUP and support
reloading policy_path and logging options in config.

Partial-Bug: #1276694
Change-Id: I96010e44928a665bea546865b2c81bde4ed0adf2"
e4095758868f6debdddb5a7cd65f8c0a244bee66,2015-04-09 18:51:03+03:00,"Revert connection option post full-stack tests

The full-stack framework overrides the database connection string before
every test is started, but after the test it doesn't revert the string
back to what it was originally. Since after the test the database is
deleted, the string is not actually valid once the test finished, and
this conflicts with tests which are ran on the same job (specifically
the retargetable tests - see associated bug). The proposed patch saves
the original connection string and reverts it after the test finishes.

Change-Id: I96c01483009084cbc2b81588a1283e84e6bcb4c4
Closes-bug: #1440797"
dc31fecdd978a8c56d33bc0f1672e680e273111d,2015-04-09 19:00:49+03:00,"OVSDB python binding should use row.delete() to remove rows

The OVS python IDL recognize a delete event when delete() is called
on the row, this should be used to remove rows from the db

Change-Id: I50c94a4f089659d78f8881653cd55d4ef069cdc1
Closes-Bug: #1442217"
ff9c92c712be07f9fa39832debc2af7ee239515b,2015-04-09 11:42:29-05:00,"Non-json body on POST 500's

If the body of a POST request is not json, we get crashes.
This can happen when middleware sends along unexpected data.

Closes-bug #1441879

Change-Id: Ifac59476e4785b86bca6e2a54759f4271629a193"
81098620c298394e1a98127ceeba7f297db2d906,2015-04-09 17:00:57+00:00,"Double functional testing timeout to 180s

The increase in ovs testing is resulting in job failure due to
timeouts in test_killed_monitor_respawns.  Giving the test more
time to complete should reduce the failure rate.

Change-Id: I2ba9b1eb388bfbbebbd6b0f3edb6d5a5ae0bfead
Closes-Bug: #1442272"
edbade486102a219810137d1c6b916e87475d477,2015-04-10 01:12:01+00:00,"Router is not unscheduled when the last port is deleted

When checking for ports that are still in use on a DVR router,
the L3 agent scheduler makes the assumption that a port's
network must be owned by the same tenant. This isn't always
true as the admin could have created a shared network that
other tenants may use. The result of this assumption is that
the router associated with the shared network may not be
unscheduled from a VM host when the last VM (created by a
non-admin tenant) using the shared network is deleted from
the compute node.

The owner of a VM may not own all the ports of a shared
network.  Other tenants may have VMs using the same shared
network running on the same compute node. Also the VM owner
may not own the router ports. In order to check whether a
router can be unscheduled from a node has to be run with
admin context so all the ports associated with router are
returned from database queries.

This patch fixes this problem by using the admin context to
make the queries needed for the DVR scheduler to make the
correct unschedule decision.

Change-Id: I45477713d7ce16f2451fa6fbe04c610388b06867
Closes-bug: #1424096"
b3334eca0ae9f9c64ccd646035e69081f669e3e4,2015-04-10 15:13:37+02:00,"Removed ml2_conf_odl.ini config file

The file is already packaged into decomposed networking-odl repo [1].

[1]: https://git.openstack.org/cgit/stackforge/networking-odl/tree/etc/neutron/plugins/ml2/ml2_conf_odl.ini

Closes-Bug: #1442615
Change-Id: Ic280454190aab4e3b881cde15a882808b652861e"
2749fd41f066dd51116c2a18198f79aa3c640156,2015-04-10 16:01:52+00:00,"Fix routerid constraint migration

The migration to add a fk constraint to the routerl3agentbindings
table could fail if orphaned records existed.  This change ensures
that binding records are properly sanitized before constraint
addition is attempted.

Change-Id: Iace190916c9c0b9be75ddd43c4ca86480f8e017f
Closes-Bug: #1442683"
52cd81934b6a64bda80a140446d8895413789221,2015-04-10 18:14:53+02:00,"context: reuse base oslo.context class for to_dict()

It is need to conform to expectations of consumers that rely on
oslo.context behaviour (f.e. oslo.log that relies [1] on user_identity
field being set for context objects).

[1]: https://github.com/openstack/oslo.log/blob/master/oslo_log/_options.py#L99

Closes-Bug: #1433687
Change-Id: I95e803b96e6e3e5b8c12298dc6327b974330c639"
fd162a82776d64af9abc5595d1b8d2473dfce8f2,2015-04-10 19:11:58+02:00,"Kill hostname validation for subnet:dns_nameservers

DNS servers that are hostnames seem like a bad idea. They are also not
supported by base_db_plugin_v2 [1] anyway, so there is no big reason to
pass them thru API validation only to receive InvalidInput later inside
plugin code.

[1]: http://git.openstack.org/cgit/openstack/neutron/tree/neutron/db/db_base_plugin_v2.py#n1049

Change-Id: I2db00fe266fe0748d0e6327fbad22fa16b751da8
Related-Bug: #1396932"
c72559f32dc7cabcd5614ae07e0da2e2248c2785,2015-04-10 15:54:32-04:00,"Move iptables and ipset config registration into modules

Do not do this on a per-object basis, but instead in the module.

Change-Id: Ib1cc604c7c0135ca62a6194d8e20a3c29d3c5ed6
Closes-bug: #1441163"
8791f8e86dad5779d62e8d9e87d42af156b18829,2015-04-13 05:21:37+00:00,"Fix native OVSDB db_get handling for UUID columns

The OVS IDL python library returns Row objects for uuid-containing
columns. Ensure that db_get returns UUID strings in this case.

Closes-Bug: #1438751
Change-Id: Ia842a04fcad86329825d75db57680c7f23bed350"
596a8c4c2c7588d4085f72fd5994b2d1cc8aab9e,2015-04-13 09:28:23+03:00,"Add OVSDB connection as a parameter to the transaction

This adds the ovsdb connection as a parameter to the transaction
in the IDL implementation.
This allows other users to use this with a different connection

Change-Id: Iedc0a836c1fc11c88de275c6714e9657b40292df
Closes-Bug: #1440638"
aa7567e8bb4fef17f6fc1d496ac6b75f10039063,2015-04-13 09:31:52+03:00,"allow OVSDB connection schema to be configurable

Add the schema name as a parameter to the OVSDB IDL connection.
That way other users can use this with other schemas

Change-Id: I55ab5ae4f3f937d236eee773f9717b5090c18557
Closes-Bug: #1441180"
7f406805d93298d0e65d340c2a06ba0d2dd6ff76,2015-04-12 23:59:31-07:00,"Move values for network_type to plugins.common.constants.py

It is quite confusing to have values for network type in common.constants.py
instead of having in plugins.common.constants.py.

Currently, the plugins/common/constants.py consists network_type constants
like VLAN, VXLAN, GRE etc. but values for network type like ranges
are defined in common.constants.py which is not good, it is better to have
both things at the same place.

This patch set addresses the same.

Moved out few methods which are predominantly used in plugins
from common.utils.py to plugins.common.utils.py.

Removed constants which were used in neutron-fwaas from
plugins.common.constants.py: https://review.openstack.org/#/c/168709/

Closes-Bug: #1441043

Change-Id: Iecfb15c541ed5d3cce95ba48f072af7fa60ac6f1"
791d57922b00857e3f8bb753bff9499f3c4e1ab9,2015-04-13 20:40:51+05:18,"Fix the ImportErrors in l3 and dhcp scheduler functional tests

Change-Id: I5b8746d37173869f78a9c23834f10d630d2a36cd
Closes-bug: #1443480"
594353722ccba27d19c693c2f77905758e46223a,2015-04-13 15:15:56-04:00,"Add block name to switch config options for MLX plug-ins.

In the INI files, the switch_names option uses a dynamic
value to determine the block names for the switch options.
In order to create proper config option reference docs,
there needs to be an example block name for the switch
options.

Change-Id: Ic5bf6de02ba1b7d1bc90ee29a5a0570fb45b9956
Closes-Bug: #1442357"
2797efc39faca97039714d3ffb6520634bf65b74,2015-04-14 09:30:23+05:18,"Add clock sync error detection on agent registration

For the server to determine if an agent is alive or not,
it depends on the agent's clock being mostly in sync with the server
clock. The neutron-server may reject and return the request if
there's a timestamp difference between the two nodes. Currently
there's no good way to detect this condition from the agent code.

This fix will improve the error handling
logic by writing an appropriate log in the neutron server's log
file for an early detection of the problem.

Change-Id: If884f90c4b1786cfc63d3e2ff2d66f92122258c2
Closes-Bug: #1432582"
40a1f410ff45ce129c08da0cd071020c7ea338af,2015-04-14 11:43:15-04:00,"Fix intermittent ipset_manager test failure

Change ipset_manager _refresh_set() to make a copy of the list of
IPs when creating a set, instead of using a reference, else any
change to the set could update the caller's data.

Also made the IpsetManagerTestCase classes always pass maxelem and
hashsize to the parent class.

Change-Id: I45fc716ab0952b80363b0c7dabae29cda05604dc
Closes-bug: #1442377"
76fa87e12eb69c962dd85a3399d3dbce0c5a3271,2015-04-14 18:39:22+00:00,"Pass correct port ID back to RPC caller

The previous response to get_device_details calls was returning
whatever the caller requested as the port_id in the response.
This was only correct in the case where the port_id was used
directly. In cases where device names were passed in, there was
no way to retrieve the full port ID.

This corrects that behavior by using the port ID from the database
and adds tests to ensure the behavior remains correct.

Closes-Bug: #1443714
Change-Id: Ibfc7b6659a29e892dfe6e83bd9340feb40e920dd"
2c3b0763bade1b9765cd83bbfe9ee6002770b6e0,2015-04-14 20:01:44-04:00,"Stop running L3 functional tests with both OVSDB interfaces

Running the L3 functional tests with both OVSDB interfaces doubles
the run time and may discourage developers from running them
frequently during development. Since the OVSDB interfaces
are tested explicitly, I don't think the trade off is worth it
here. The L3 functional tests use OVS in a *really* trivial way
and won't catch any issues that the explicit tests won't.

Added an OVSInterfaceDriverTestCase plug functional test that runs with
both OVS interfaces to make it harder to introduce regressions.

Related-Bug: #1442272
Change-Id: I387db347fe34f8497069ddf768624bccb9d1de8b"
8be4e4d5fc052655f7a968fc5016c84aca48758e,2015-04-14 18:33:16-07:00,"Provide details for configure multiple DHCP agents

The help text is not that good for operation. This fix adds more
information about the option 'dhcp_agents_per_network'.

Change-Id: I955c1e9989a9c65b0ffdbbdca9113c795ec72fe6
Closes-Bug: #1370934"
26b4e57858ef83ef9343f053c2835a95f6e6c860,2015-04-15 04:59:22+00:00,"Added config variable for External Network type in ML2

Description:
With the ML2 Plugin, every network created has segments with
provider:network_types being tenant_network_types.
When applied to external networks, the types that could be in
tenant_network_types parameter (like vxlan or gre) are not appropriate.

Implementation:
Added new config variable 'external_network_type' in ml2_conf.ini
which contains the default network type for external networks
when no provider attributes are specified, by default it is None.

It also includes small code re-factoring/renaming of import statement.

DocImpact

Closes-Bug: #1328991

Co-Authored-By: Romil Gupta <romilg@hp.com>

Change-Id: Idbbe6bced73cfedbe0f8e7abba35f87589b1a004"
ae0107f95664a3430131228600446cd7269e03ad,2015-04-15 09:26:54+03:00,"Enhance OVSDB Transaction timeout configuration

OVSDB Transaction currently takes the timeout parameter
from a context object that assume to have a vsctl_timeout attribute
This doesnt fit well for other users of this class (like OVN)

This fix configure the transaction timeout in a more common way

Change-Id: I51bb8d8fdc6d061d44af828818aaf62e187795fd
Closes-Bug: #1444277"
e20a279b28f572a6ef2a5dee6cd38b973ff98248,2015-04-15 12:00:26+03:00,"Use 'port' instead of 'ports' to reference port from IPAllocation

'ports' is just confusing as IPAllocation can be associated
with only one port.

Closes-Bug: #1442527
Change-Id: I36bfa65956f54e4b290bb7568499a47eca7c126f"
55536a4ecb6c71e5451b8a9664d87e32146f071d,2015-04-15 19:52:51+00:00,"Removed ml2_conf_odl.ini config file

The file is already packaged into decomposed networking-odl repo [1].

[1]: https://git.openstack.org/cgit/stackforge/networking-odl/tree/etc/neutron/plugins/ml2/ml2_conf_odl.ini

Closes-Bug: #1442615
Change-Id: Ic280454190aab4e3b881cde15a882808b652861e
(cherry picked from commit b3334eca0ae9f9c64ccd646035e69081f669e3e4)"
9e7f484adc199b424bb9a5390c8cf3ced0f77278,2015-04-16 14:03:59+03:00,"OVS_LIB API addition - change bridge controller connection-mode

Add an API to change controller connection mode to 'out-of-band', feature
which might be useful for many projects using Openflow controller with OVS

Change-Id: If93f6858f4eed05f5f1d9bdb1667838d80c490cd
Closes-Bug: #1433208"
dd2f87ae3fabaf4c1b46cd1dba0fe035c17e767e,2015-04-16 11:27:07-07:00,"Clarify the init logic for the ML2 plugin

This patch cleans up the init logic for the plugin so that
we better separate the tasks required for establishing
the integration with DHCP and RPC layers.

In other words: some bikeshedding whilst dealing with bug #1444112

Change-Id: I68710ad002b0e1b5bff40baa5de343b0bd7ecea6"
decdf03c61f303fcfc82fe601beb4096d3305536,2015-04-16 12:12:47-07:00,"Quota model: use HasTenantId mixin

This change simply changes the Quota model class to obtain
the tenant_id from the mixin class. As the attribute in the
mixin is identical to that in the model there is no need for
a migration.

This patch also removes a reference to quota classes in the
docstring, as Neutron does not implement those. It is good
to be careful when copying and paste code.

Change-Id: Idab15d5ef2ddd2b830a7dcde46990506064535f7
Closes-Bug: #1445169"
a38b5df5cd3c47672705aad4c30e789ae11ec958,2015-04-17 01:16:41+00:00,"Set IPset hash type to 'net' instead of 'ip'

The previous hash type was 'ip' and this caused a major
issue with the allowed address pairs extension since it
results in CIDRs being passed to ipset. When the hash type
is 'ip', a CIDR is completely enumerated into all of its
addresses so 10.100.0.0/16 results in ~65k entries. This
meant a single allowed_address_pairs entry could easily
exhaust an entire set.

This patch changes the hash type to 'net', which is designed
to handle a CIDRs as a single entry.

This patch also changes the names of the ipsets because
creating an ipset with different parameters will cause an
error and our ipset manager code isn't robust enough to handle
that at this time. There is another ongoing patch to fix
that but it won't be ready in time.[1]

The related bug was closed by increasing the set limit, which
did alleviate the problem. However, this change would also
address the issue because the gate tests run an allowed address
pairs extension test with the CIDR mentioned above.

1. I59e2e1c090cb95ee1bd14dbb53b6ff2c5e2713fd

Related-Bug: #1439817
Closes-Bug: #1444397
Change-Id: I8177699b157cd3eac46e2f481f47b5d966c49b07"
8b8095e43a143426c501669167490d7867a55749,2015-04-16 18:28:38-07:00,"Revert ""Add ipset element and hashsize tunables""

This reverts commit b5b919a7a3569ccb93c3d7d523c1edfaeddb7cb9.

The current ipset manager code isn't robust enough to handle
ipsets that already exist with different parameters. This reverts
the ability to change the parameters so we don't break upgrades
to Kilo.

Conflicts:
	neutron/agent/linux/ipset_manager.py
	neutron/tests/unit/agent/linux/test_ipset_manager.py

Change-Id: I538714df52424f0502cb75daea310517d1142c42
Closes-Bug: #1444201
(cherry picked from commit 03be14a569d240865dabff8b4c30385abf1dbe62)"
a6b2c22dcea73754dbfd0ef39c60ad28ab2dbb73,2015-04-16 19:13:57-07:00,"Set IPset hash type to 'net' instead of 'ip'

The previous hash type was 'ip' and this caused a major
issue with the allowed address pairs extension since it
results in CIDRs being passed to ipset. When the hash type
is 'ip', a CIDR is completely enumerated into all of its
addresses so 10.100.0.0/16 results in ~65k entries. This
meant a single allowed_address_pairs entry could easily
exhaust an entire set.

This patch changes the hash type to 'net', which is designed
to handle a CIDRs as a single entry.

This patch also changes the names of the ipsets because
creating an ipset with different parameters will cause an
error and our ipset manager code isn't robust enough to handle
that at this time. There is another ongoing patch to fix
that but it won't be ready in time.[1]

The related bug was closed by increasing the set limit, which
did alleviate the problem. However, this change would also
address the issue because the gate tests run an allowed address
pairs extension test with the CIDR mentioned above.

1. I59e2e1c090cb95ee1bd14dbb53b6ff2c5e2713fd

Related-Bug: #1439817
Closes-Bug: #1444397
Change-Id: I8177699b157cd3eac46e2f481f47b5d966c49b07
(cherry picked from commit a38b5df5cd3c47672705aad4c30e789ae11ec958)"
05a9f16257c2953bf40d11ca2a2f9651ba4e86b2,2015-04-16 19:17:02-07:00,"Avoid double-hopping deletes for security group rules

There is no need to get and delete; we can delete with one bullet.
This will most likely have quite a decent performance benefit overall.

The patch preserves the existing logic of raising and error on the missing
element; a test was added to spur up the coverage.

Related-bug: #1444112

Change-Id: Iaef77bd3f7775ed91d374838fb5488d925b4062c"
10b17a884452736a6b214bcb7705b955192a1748,2015-04-17 03:36:50-07:00,"Set loading strategy to joined for Routerport/Port

The RouterPort model has a relationship to the ports model which
is frequently relied on to get the port IDs of interfaces attached
to a router. However, this defaults to the loading strategy to
'select', which meant a new query was being emitted for every
interface to the ports table just to get the ID.

This patch adjusts the relationship to be 'joined' by default so
one query will fetch the related ports.

Another option would have been not to use the port object at all since
the ID is all that the callers were usually interested in. However,
they would end up using the ID to do a port lookup, which is being
optimized away in another patch anyway so the full port object from
the relationship will end up getting used.

Change-Id: Id1ae35f845f7367d5f1f065c6fa637da7b980a2b
Partial-Bug: #1445412"
6c6d3c9cca17a788a31526bb652dcdfc7bb54326,2015-04-17 04:18:56-07:00,"Strip unnecessary overrides in extraroute_db mixin

The extra route DB mixin seemed to be overriding the
get_router and get_routers method for no reason. They
both just called the super version of themselves with
the same arguments.

This patch just pulls those functions out. Found in
tracebacks while working on a related bug.

Change-Id: Ifd1a0676073e91104db3a13df6fe1eb2189f20f5
Related-bug: #1445412"
3310c3c3d4c05c0d13f32f08f978ba4813e2a39a,2015-04-17 05:13:52-07:00,"Remove double queries in l3 DB get methods

Two frequently called functions were querying the routerport table
and the corresponding ports just to get the port ID. Then they were
calling get_ports again with those port IDs, resulting in two queries
to the port table when there should have only been one.

This eliminates the second call to get_ports since all of the necessary
data hase been retrieved from the port table.

Change-Id: I806e9c380b7de048fe084b2baf4b6f92ab0edf6b
Partial-Bug: #1445412"
9b53b82ce7dad551ebc0f02ff667d5345fb7e139,2015-04-17 13:13:38+00:00,"ML2: Change port status only when it's bound to the host

Currently, nothing prevents the port status to be changed to BUILD
state when get_device_details() is sent by a host that doesn't own
the port.
In some cases the port might stay in BUILD state.
This could happen during a live-migration, or for multi-hosted ports
such as HA ports.
This commit allows the port status modification only if the port
is bound to the host that is asking for it.

Closes-Bug: #1439857
Closes-Bug: #1438040
Closes-Bug: #1416933

Change-Id: I9b3673f453abbafaaa4f78542fcfebe8dc93f2bb"
e2f6902315de76a1020aa87ea161c8fdc6697ed7,2015-04-17 13:23:39+00:00,"Fixes race condition and boosts the scheduling performance

This patch fixes a race-condition that occurs when the
scheduler tries to check for dvr serviceable ports before
it schedules a router when a subnet is associated with
a router.

Sometimes the dhcp port creation is delayed and so the
router is not scheduled to the l3-agent.

Also it boosts the scheduling performance on dvr-snat
node for scheduling a router.

This patch will provide a work around to fix this race
condition and to boost the scheduling performance
by scheduling a router on a dvr-snat when
dhcp is enabled on the provided subnet, instead of checking
all the available ports on the subnet.

Closes-Bug: #1442494

Change-Id: I089fefdd8535bdc9ed90b3230438ab0bfb6aab4f
(cherry picked from commit c65d3ab6ad4589e6e4a6b488d2eb5d1e4cfee138)"
c65d3ab6ad4589e6e4a6b488d2eb5d1e4cfee138,2015-04-17 09:07:05-07:00,"Fixes race condition and boosts the scheduling performance

This patch fixes a race-condition that occurs when the
scheduler tries to check for dvr serviceable ports before
it schedules a router when a subnet is associated with
a router.

Sometimes the dhcp port creation is delayed and so the
router is not scheduled to the l3-agent.

Also it boosts the scheduling performance on dvr-snat
node for scheduling a router.

This patch will provide a work around to fix this race
condition and to boost the scheduling performance
by scheduling a router on a dvr-snat when
dhcp is enabled on the provided subnet, instead of checking
all the available ports on the subnet.

Closes-Bug: #1442494

Change-Id: I089fefdd8535bdc9ed90b3230438ab0bfb6aab4f"
a6af531339c870bdc330f3343c91dce3e6757c3e,2015-04-20 15:23:49+09:00,"l2pop UT: Expire cached db objects before reusing a session

Partial-Bug: #1441488
Change-Id: Ic22ae49d99b52e9f650ea0ed638842e7c91831af"
b339391bcb223c0f03d30f36dea47d13adb12c71,2015-04-20 12:52:35+00:00,"ML2: Change port status only when it's bound to the host

Currently, nothing prevents the port status to be changed to BUILD
state when get_device_details() is sent by a host that doesn't own
the port.
In some cases the port might stay in BUILD state.
This could happen during a live-migration, or for multi-hosted ports
such as HA ports.
This commit allows the port status modification only if the port
is bound to the host that is asking for it.

Closes-Bug: #1439857
Closes-Bug: #1438040
Closes-Bug: #1416933

Change-Id: I9b3673f453abbafaaa4f78542fcfebe8dc93f2bb
(cherry picked from commit 9b53b82ce7dad551ebc0f02ff667d5345fb7e139)"
d9e3352f9a7df6e7bc571ca1696a1ef4ca716654,2015-04-20 15:22:41-04:00,"Log caught exceptions while deleting a router

Change-Id: I2c270f1eebf4f3c0d2cecdef457efc626e503975
Closes-Bug: #1446349"
ccd30a8cab6b91259cfb09b16a8fbbf69747cdf4,2015-04-21 00:02:36+02:00,"Correct inconsistent enable_snat management

Neutron resets enable_snat attribute when external_gateway_info is
cleared but not when external_gateway_info is only updated which
implies the following sets of actions have different behaviors:

  neutron router-gateway-set router1 pub1 --disable-snat
  neutron router-gateway-set router1 pub2

enable_snat is False after the last command

  neutron router-gateway-set router1 pub1 --disable-snat
  neutron router-gateway-clear router1
  neutron router-gateway-set router1 pub2

enable_snat is True after the 2nd command resets the gateway AND
enable_snat.

This change proposes to always reset the attribute enable_snat when
enable_snat is not provided in external_gateway_info on POST/PUT for
consistency.

APIImpact
Change-Id: Ibab289936c55b1cf9614b44a4f18f54c959ee9e8
Closes-Bug: #1384146"
d36940b720616ec6607c62eca50023eb00bdae01,2015-04-21 01:16:02+00:00,"ovs_lib: Fix a race between get_port_tag_dict and port removal

get_port_tag_dict() gets a list of ports using get_port_name_list()
and then queries the db again for ports in the list.
It fails if some of ports disappeared in between.
This change fixes it by ignoring ""not exist"" errors in the later query.

Closes-Bug: #1444797
Change-Id: Ic54b644bb1d72a4664b70f124863d17805c26fff"
649599457e29b58ad0aec9ace990e0a2b59b05d0,2015-04-20 20:42:13-07:00,"Defer creation of router JSON in get_routers RPC

The get_routers method in the l3 RPC code has a log.debug
statement that formats all of the router data as indented
JSON. This method can be expensive if there are hundreds
of routers being synced and it happens even if debugging
is disabled since the function call result is the parameter
to the debug statement.

This patch adds and leverages a small helper class that takes a
callable and its args and defers calling it until the __str__ method
is called on it when it's actually trying to be rendered to a string.

Change-Id: I2bfceb286ce30f2a3595381b62bdc6dd71ed8483
Partial-Bug: #1445412"
0cde6752f86d84541c8c10a39bb1c8b0d65e5482,2015-04-21 14:09:22+09:00,"Revive BaseLinuxTestCase._create_namespace

It was removed by commit 7f7343b1afc0b1b953e5c36a753397a6d37316cb
but still have a few users.

Closes-Bug: #1446465
Change-Id: I2914700f17ae38a775735906931f0f616c13c602"
f85de393c469d1e649a1c1e5ee1b683246442351,2015-04-20 22:35:23-07:00,"Only update MTU in update code for MTU

The ML2 create_network_db was re-passing in the entire network
with extensions like vlan_transparency present that was causing
issues in the base update function it was calling.

This corrects the behavior by having it only update the MTU, which
is the only thing it was intending to update in the first place.

Change-Id: I723c5c138e0830de98f6024c7635ec65065e9346
Closes-Bug: #1446784"
9701bd479529ccc243e48fdb944c284d2921c376,2015-04-21 02:32:13-07:00,"L3 DB: Defer port DB subnet lookups

_populate_subnets_for_ports was being called multiple
times for different interface types during the get_routers
process.

This patch eliminates those extra queries by deferring the
subnet information population until after all of the interfaces
have been looked up. Includes a function rename as well to
indicate that a function is only used internally.

Change-Id: Ib46f685d72eb61ecbaa2869e28fb173cd6d49552
Partial-bug: #1445412"
868e67b480b08cc815d802cf950547c6b5ac0153,2015-04-21 08:10:07-07:00,"Add security groups events

ML2 mech drivers have no direct exposure to security groups,
and they can only infer them from the associated network/ports.
This is problematic as agentless ML2 mech drivers have no way of
intercepting securitygroups events and propagate the information
to their backend, or more generally, react to them.

This patch leverages the callback registry to dispatch such events
so that interested ML2 mech drivers (or any interested party like
service plugins) can be notified and react accordingly.

This patch addresses create/update/delete of security groups and
create/delete of security groups rules. Other events may be added
over time, if need be.

This patch is only about emitting the events. The actual subscription
and implementation of the event handlers will have to take place where
deemed appropriate.

Closes-bug: #1444112

Change-Id: Ifa1d7ee9c967576f824f1129dd68e6e3abd48f5c"
3b74095a935f6d2027e6bf04cc4aa21f8a1b46f2,2015-04-21 18:53:28+02:00,"tests: confirm that _output_hosts_file does not log too often

I3ad7864eeb2f959549ed356a1e34fa18804395cc didn't include any regression unit
tests to validate that the method won't ever log too often again,
reintroducing performance drop in later patches. It didn't play well
with stable backports of the fix, where context was lost when doing the
backport, that left the bug unfixed in stable/juno even though the patch
was merged there [1].

The patch adds an explicit note in the code that suggests not to add new
log messages inside the loop to avoid regression, and a unit test was
added to capture it.

Once the test is merged in master, it will be proposed for stable/juno
inclusion, with additional changes that would fix the regression again.

Related-Bug: #1414218
Change-Id: I5d43021932d6a994638c348eda277dd8337cf041"
927399c011409b7d152b7670b896f15eee7d0db3,2015-04-21 11:28:59-07:00,"Block allowed address pairs on other tenants' net

Don't allow tenants to use the allowed address pairs extension
when they are attaching a port to a network that does not belong
to them.

This is done because allowed address pairs can allow things like
ARP spoofing and all tenants attached to a shared network might not
implicitly trust each other.

Change-Id: Ie6c3e8ad04103804e40f2b043202387385e62ca5
Closes-Bug: #1447242"
4000b18275112a0c9e3aa055fbaea634ac89a382,2015-04-21 19:22:45+00:00,"Fix test discovery for api and functional paths

The use of the builtin unittest test loader was silently dropping tests
that couldn't be imported.

This change also drops the retargetable path from discovery in the api
path due to a previously-masked configuration problem, and fixes an
invalid import in a functional testing fixture module.

Fullstack tests are also disabled temporarily pending a fix for #1446261.

Change-Id: Ie44e45c117bd864538e7919dfcf499091fde7752
Related-Bug: #1440834
Related-Bug: #1443480
Closes-Bug: #1446405"
2414834ffeb8ba7ce2401236d01c88702fec5a14,2015-04-22 09:32:02+12:00,"ARP spoofing patch: Low level ebtables integration

ARP cache poisoning is not actually prevented by the firewall
driver 'iptables_firewall'. We are adding the use of the ebtables
command - with a corresponding ebtables-driver - in order to create
Ethernet frame filtering rules, which prevent the sending of ARP
cache poisoning frames.

The complete patch is broken into a set of smaller patches for easier review.

This patch here is th first of the series and includes the low-level ebtables
integration, unit and functional tests.

Note:
    This commit is based greatly on an original, now abandoned patch,
    presented for review here:

        https://review.openstack.org/#/c/70067/

    Full spec can be found here:

        https://review.openstack.org/#/c/129090/

SecurityImpact

Change-Id: I9ef57a86b1a1c1fa4ba1a034c920f23cb40072c0
Implements: blueprint arp-spoof-patch-ebtables
Related-Bug: 1274034
Co-Authored-By: jbrendel <jbrendel@cisco.com>"
7743e571cd15ec50a35a34dc3cc668702c54393d,2015-04-22 04:18:24+04:00,"OOP naming cleanup in l3_dvr_db

Start protected method names with underscore.

Closes-Bug: #1446911
Change-Id: Iddf4f467118e40eb5b4bfe18bde00aa9d34b2ec4"
407be289360ec6dabbbe14d9b18dae7c9fa2db79,2015-04-22 13:31:06+09:00,"Fix typo acomplished => accomplished

Change-Id: I73722e9984917a5a8c4e74207cf14d4040a7cf2f
Related-Bug: #1390035"
0109578a8ec07f743f7e2b654007e17f145ea20f,2015-04-22 15:35:45+04:00,"Fix incorrect query for user ip allocations

Previously the query was fetching an IPAllocation object incorrectly
relying on the fact that it has port attribute that should be
join-loaded when it really is not.

Incorrect query produced by previous code:
SELECT ipallocations.port_id AS ipallocations_port_id,
       ipallocations.ip_address AS ipallocations_ip_address,
       ipallocations.subnet_id AS ipallocations_subnet_id,
       ipallocations.network_id AS ipallocations_network_id
FROM ipallocations, ports
WHERE ipallocations.subnet_id = :subnet_id_1
      AND ports.device_owner NOT IN (:device_owner_1)

The query then may have produced results that don't satisfy
the condition intended by the code.

Query produced by the fixed code:
SELECT ipallocations.port_id AS ipallocations_port_id,
       ipallocations.ip_address AS ipallocations_ip_address,
       ipallocations.subnet_id AS ipallocations_subnet_id,
       ipallocations.network_id AS ipallocations_network_id
FROM ipallocations JOIN ports ON ports.id = ipallocations.port_id
WHERE ipallocations.subnet_id = :subnet_id_1
      AND ports.device_owner NOT IN (:device_owner_1)

Change-Id: I34682df784e30e3ce49ee48c690f8b799ad58149
Closes-Bug: #1357055"
d506b50badda7af30d1154561acd45caef44ca11,2015-04-22 08:58:02-04:00,"Add use_slave DB api support

The example configuration refers to slave_connection[1] but slaves aren't used
in the codebase. This change will enable plugin authors to use
slave_connection by passing use_slave=True to the SQLAlchemy session[2][3].

[1] http://docs.openstack.org/juno/config-reference/content/section_neutron.conf.html
[2] http://docs.openstack.org/developer/oslo.db/api/sqlalchemy/session.html#oslo_db.sqlalchemy.session.EngineFacade.get_session
[3] https://wiki.openstack.org/wiki/Slave_usage

Change-Id: I6f46c11fad5c58577654a4011cf82d19f6d3e1e3"
fc6484357c266d7e6111afd0003a6ff3daec9022,2015-04-22 11:52:37-04:00,"Fix DVR functional tests resources leak

Change-Id: I882bd9127a61de7e016abfca53d22b01cbf57835
Closes-Bug: #1446288"
ec408ac379108eee26d87a8d9834180db11877e0,2015-04-22 13:39:18-07:00,"Ensure metadata network works with DVR

As DVR routers use a different type of interface, this patch
amends the DHCP agent code ensuring that a metadata proxy is
spawned when the metadata network feature is enabled on the
DHCP agent.

Change-Id: Id7f2e891c0753620a604cf6160c6b592db1aa284
Closes-Bug: #1447344"
8959032dfb195ba3836e50fbccecbfedb9164038,2015-04-22 14:29:40-07:00,"Remove dependency on weak reference for registry callbacks

The use of weakref was introduced as a preventive measure to avoid
potential OOM kills, however that limited our ability to employ
certain functions as callbacks, such as object methods (see [1] for
an example).

Since the adoption of the callback registry, it has been observed that
callbacks are generally long lived (for the entire duration of the
process they belong to), therefore this limitation appears to be too
restrictive at this point in time.

Some might argue that it's better safe than sorry, but until we
have some evidence of actual OOM kills, it's probably best to take
the bolder action of removing the adoption of weak references and
deal with the potential fallout, should it happen.

[1] https://review.openstack.org/#/c/175179/

Change-Id: Idcd0286fc4235af82901c8a17ea45bc758b62b37"
d72572729152e709c5f7ebae2896d5f66748b59b,2015-04-23 11:24:40+09:00,"Make sure OVS restarts when Exception occurred

This fix let flows in br-tun automatically recover from an Exception,
which is an ideal situation.
Simplly improve a missed flag will make sure OVS restart properly
after we walked out of Exception loop.

Change-Id: Id0ac9399ec39fef19ce71566670ed245c681192e
Closes-Bug: #1439472"
0c1f96ad5a6606c1205bd50ea944c3a383892cde,2015-04-23 12:23:00+09:00,"Restrict subnet create/update to avoid DHCP resync

As we know, IPs in subnet CIDR are used for
1) Broadcast port
2) Gateway port
3) DHCP port if enable_dhcp is True, or update to True
4) Others go into allocation_pools
Above 1) to 3) are created by default, which means if CIDR doesn't
have that much of IPs, subnet create/update will cause a DHCP resync.

This fix is to add some restricts to the issue:
A) When subnet create, if enable_dhcp is True, /31 and /32
   cidrs are forbidden for IPv4 subnets while /127 and /128 cidrs are
   forbidden for IPv6 subnets.
B) When subnet update, if enable_dhcp is changing to True and there are no
   more IPs in allocation_pools, the request should be denied.

Change-Id: I2e4a4d5841b9ad908f02b7d0795cba07596c023d
Co-authored-by: Andrew Boik <dboik@cisco.com>
Closes-Bug: #1443798"
cbfb3e487d97998ec49d7faa751bc26202da7d0e,2015-04-22 21:53:39-07:00,"Only update MTU in update code for MTU

The ML2 create_network_db was re-passing in the entire network
with extensions like vlan_transparency present that was causing
issues in the base update function it was calling.

This corrects the behavior by having it only update the MTU, which
is the only thing it was intending to update in the first place.

Change-Id: I723c5c138e0830de98f6024c7635ec65065e9346
Closes-Bug: #1446784
(cherry picked from commit f85de393c469d1e649a1c1e5ee1b683246442351)"
0536ec113bc438265ba547bb8a8006aa96e646e3,2015-04-23 14:57:06+09:00,"Restrict subnet create/update to avoid DHCP resync

As we know, IPs in subnet CIDR are used for
1) Broadcast port
2) Gateway port
3) DHCP port if enable_dhcp is True, or update to True
4) Others go into allocation_pools
Above 1) to 3) are created by default, which means if CIDR doesn't
have that much of IPs, subnet create/update will cause a DHCP resync.

This fix is to add some restricts to the issue:
A) When subnet create, if enable_dhcp is True, /31 and /32
   cidrs are forbidden for IPv4 subnets while /127 and /128 cidrs are
   forbidden for IPv6 subnets.
B) When subnet update, if enable_dhcp is changing to True and there are no
   more IPs in allocation_pools, the request should be denied.

Change-Id: I2e4a4d5841b9ad908f02b7d0795cba07596c023d
Co-authored-by: Andrew Boik <dboik@cisco.com>
Closes-Bug: #1443798
(cherry picked from commit 0c1f96ad5a6606c1205bd50ea944c3a383892cde)"
53b3e751f3c7b32bed48c14742d3dd3a1178d00d,2015-04-23 08:43:42+00:00,"Double functional testing timeout to 180s

The increase in ovs testing is resulting in job failure due to
timeouts in test_killed_monitor_respawns.  Giving the test more
time to complete should reduce the failure rate.

Change-Id: I2ba9b1eb388bfbbebbd6b0f3edb6d5a5ae0bfead
Closes-Bug: #1442272
(cherry picked from commit 81098620c298394e1a98127ceeba7f297db2d906)"
38211ae67cb76ade85b08c028b6e88bfc867afc9,2015-04-23 11:21:15+02:00,"tests: confirm that _output_hosts_file does not log too often

I3ad7864eeb2f959549ed356a1e34fa18804395cc didn't include any regression unit
tests to validate that the method won't ever log too often again,
reintroducing performance drop in later patches. It didn't play well
with stable backports of the fix, where context was lost when doing the
backport, that left the bug unfixed in stable/juno even though the patch
was merged there [1].

The patch adds an explicit note in the code that suggests not to add new
log messages inside the loop to avoid regression, and a unit test was
added to capture it.

Once the test is merged in master, it will be proposed for stable/juno
inclusion, with additional changes that would fix the regression again.

Related-Bug: #1414218
Change-Id: I5d43021932d6a994638c348eda277dd8337cf041
(cherry picked from commit 3b74095a935f6d2027e6bf04cc4aa21f8a1b46f2)"
2f9b0ce940099bcc82d2940b99bdc387db22d6fc,2015-04-23 17:03:15+05:18,"Spawn RADVD only in the master HA router

Currently radvd is spawned in all the HA routers irrespective of the
state of the router. This approach has the following issues.

1. While processing the internal router ports (i.e., qr-xxx), ha_router
   removes the LLA of the interface and adds it as a VIP to Keepalived conf.
   Radvd daemon is spawned after this operation in the router namespace
   (if the port is associated with any IPv6 subnets). Radvd notices that
   qr-xxx interface does not have the LLA, so does not transmit any Router
   Advts. In this state, VMs fail to acquire IPv6 addresses because of the
   missing RAs. Radvd does not recover even after keepalived configures the
   LLA of the interface. The only solution is to restart/reload radvd daemon.
   Currently keepalived-state-change monitor does not do any radvd related
   operations when a state transition happens. So we endup in this state
   forever.
2. For all the routers in Backup state, qr-xxx interface does not have LLA
   as it is managed by keepalived and configured only on the Master HA router.
   In such agents syslog is flooded with the messages [1] and this can cause
   loss of other useful info.
   [1] - resetting ipv6-allrouters membership on qr-2e373555-97

This patch implements the following.
1. If the router is already in the Master state, we configure the LLA as a VIP
   in keepalived conf but do not delete the LLA of the internal interface.
2. We spawn radvd only if the router is in the Master State.
3. Keepalived-state-change monitor takes care of enabling/disabling radvd upon
   state transitions.

Closes-Bug: #1440699
Change-Id: I351c71d058170265bbb8b56e1f7a3430bd8828d5"
4625c45a30ffe09fbd29c16337e64e264de75bd8,2015-04-23 07:10:34-07:00,"Remove backward compatibility for check_is_admin

This routine in policy.py used to have a backward compatibility
check to ensure proper behaviour even when the policy.json file
did not have a specific 'context_is_admin' policy.
However, this backward compatibility check does not work. It
appears indeed that it has been broken for several release cycles;
it is also possible that actually it never worked.
When the 'context_is_admin' policy is not in the policy.json file
the enforcer simply ends up evaluating whatever is the default
policy configured there.

Therefore this patch:
- Removes the backward compatibility check, since it does not work
- Fails, for safety, check_is_admin if 'context_is_admin' policy is
  not specified
- Fixeds check_is_advsvc in the same way (the backward compatibility
  check never made any sense for this function)
- Fixes unit tests adding appropriate tests for check_is_admin and
  check_is_advsvc

Change-Id: Ia47e5781d86a3f21b9d837c9ac70a62ac435d20b
Closes-Bug: #1445690"
e2d5be1cb3094ffbfc979aa04262f3dbc43f38ec,2015-04-23 15:00:09-04:00,"Fix L3 agent functional tests random failures

The test_ha_router_failover tests were not being unmocked. This
is because the same object was being mocked twice, but unmocked
once. The mock.patch.stopall call in the tests base class was rewinding
the value of the object from the second mock to the first mock.

Follow up tests in the same worker were using namespace
names defined via the first mock in the failover test.

Closes-Bug: #1446261
Change-Id: I8f24b8bb3a6a501dbe210c2cc67c47fa4b76257c"
9274c590a78444e9157afd4d41bff566b26c9323,2015-04-24 03:42:07+00:00,"Neutron to Drop Router Advts from VM ports

As part of Spoofing filter chain Neutron drops all the outbound
traffic where MAC/IP does not match the IP address assigned
to the VM ports (inc' allowed_address_pairs). Along with this,
we also drop traffic associated to dhcp[v6] server (i.e., do
not allow a VM to run dhcp[v6] server). Currently we do not
have any rules to drop Router Advts from VM ports. This can create
issues in the network as other devices in the network may not have
any protection for this kind of stuff.

Even if we allow RAs from the VM ports, because of the Anti-Spoofing
rules that are applied, a VM cannot act as a IPv6 router (i.e., it
cannot forward IPv6 traffic). So there is no point in allowing Router
Advts from VMs assuming that it would be useful in Service VM use-cases.
In order to properly implement IPv6 router as a Service VM, one needs
to use the port_security_extension [1] which allows us to disable
security group rules/anti-spoofing filters on the VM ports.

[1]https://review.openstack.org/#/c/99873/22/specs/kilo/ml2-ovs-portsecurity.rst

This patch disables Router Advts from VM ports.

Closes-Bug: #1372882
Change-Id: I8db5d6dbe60bf04f4e3754a886c6aa8a97a16bab"
72e388445eb6f6903ccfc5079aa206ac2cbcfd5e,2015-04-24 16:34:52+10:00,"Return exception when attempting to add duplicate VIP

Neutron should never attempt to add a VIP to keepalived's config
multiple times, and to do so is an error.  As such this adds an
exception if this is ever attempted.

Change-Id: If1c41c3164e8a998c73f9b7aa566e2ba6570f54b
Closes-Bug: #1400217"
db9ac7e0110a0c2ef1b65213317ee8b7f1053ddc,2015-04-24 03:14:22-07:00,"Don't resync on DHCP agent setup failure

There are various cases where the DHCP agent will try to
create a DHCP port for a network and there will be a failure.
This has primarily been caused by a lack of available IP addresses
in the allocation pool. Trying to fix all availability corner cases
on the server side will be very difficult due to race conditions between
multiple ports being created, the dhcp_agents_per_network parameter, etc.

This patch just stops the resync attempt on the agent side if a failure
is caused by an IP address generation problem. Future updates to the subnet
will cause another attempt so if the tenant does fix the issue they will
get DHCP service.

Change-Id: I0896730126d6dca13fe9284b4d812cfb081b6218
Closes-Bug: #1447883"
88510ef1b153fc548fc5bccc24e116a0882e66a8,2015-04-24 13:21:49+03:00,"Refactor socket ssl wrapping

Move socket wrapping into a separate method in order to separate
its logic from other action done in _get_socket. Now, ssl wrapping
is applied to the socket returned by _get_socket method.
Additionally checks for ssl config options are now performed during
init and not each time wrap_socket is called.

Added unit tests.

Related-Bug: #1276694
Change-Id: I706517ae351a7a681623ec91c9657a2f61cd2679"
d37e566dcadf8a540eb5f84b668847fa192393a1,2015-04-24 04:10:02-07:00,"Don't resync on DHCP agent setup failure

There are various cases where the DHCP agent will try to
create a DHCP port for a network and there will be a failure.
This has primarily been caused by a lack of available IP addresses
in the allocation pool. Trying to fix all availability corner cases
on the server side will be very difficult due to race conditions between
multiple ports being created, the dhcp_agents_per_network parameter, etc.

This patch just stops the resync attempt on the agent side if a failure
is caused by an IP address generation problem. Future updates to the subnet
will cause another attempt so if the tenant does fix the issue they will
get DHCP service.

Change-Id: I0896730126d6dca13fe9284b4d812cfb081b6218
Closes-Bug: #1447883
(cherry picked from commit db9ac7e0110a0c2ef1b65213317ee8b7f1053ddc)"
e6bd3ed9c86ff493b7087c99797bfd3fb473c3a7,2015-04-24 16:32:13+00:00,"Fix MismatchError to nondeterministic order for list of controllers

The list of controllers returned by the ovsdb server can be in any order,
therefore we can't assert likes for likes. Assert the sorted lists instead.

Change-Id: Ice3bb8cc0b3da70f8c9aae50d8cdae2b474ff49b
Closes-bug: #1448202"
d0d7030ce78cf3fb182a8d824b3770ab0f124d7a,2015-04-24 16:43:26+00:00,"Utilities for building/parsing netns names to facilitate testing

Creating these utilities allows functional tests to mock them out more
easily to in order to change the namespace identification and cleanup
behavior.

Change-Id: I76cb2dc43a0ca4a7ea27c2ea71b27068b92154ce
Related-Bug: #1446261"
521e036a45eeb26c72e66aae2dab1a3b383bccc5,2015-04-25 00:50:25+04:00,"Move test_get_user_allocation*returns_none test to a proper class

Move it out of NeutronDbPluginV2TestCase so there is no test
duplication.

Change-Id: Ib01f2d651c1b0a48062656bd1f66c52481a86ad6
Closes-Bug: #1448268"
4be5c2f6dc635e1139e268b078ba3c28c3bcefb6,2015-04-24 23:32:23-07:00,"Replace unnecessary call to get_sync_routers

Replaces a call to get_sync_routers with a single-column
router DB query in a method that doesn't use any of the
gateway information get_sync_routers spends extra
time populating.

Change-Id: I35eae975209316aad6b2c97c909dce385729864d
Partial-Bug: #1445412"
a80924dc3e648984873833399350ba4817f1eaa9,2015-04-25 10:17:07-07:00,"Don't update port with host id of None

In the L3 RPC code if the host for a port is not
present, it ends up calling update_port with the
host_id set to None. This does not update the host
id at all because it's treated as an unset attribute
which leads to the same thing happening on the next
iteration. These pointless update calls are expensive
because they involve a semaphore and calls to mechanism
drivers.

This patch adjusts the logic to only send a port
update if it actually has a host to ensure is on
the port.

Change-Id: Ic55496dd2ba3abcef0a2de9fc8699c391b79fa51
Partial-Bug: #1445412"
682c0fdcc2faad07e82968a7a7739f2dedd7173f,2015-04-25 10:20:01-07:00,"Eliminate extra queries used to retrieve gw_ports

The _get_sync_routers method was calling get_routers and
then getting the gateway ports from the db in a separate
get_ports call. This extra call is unnecessary since is
already an SQL relationship directly between the router
and it's gw_port.

This patch eliminates all of the additional gw_port retrieval
logic by replacing the get_routers call with a _get_collection
call to make use of the gw_port object already present on
each router object.

Change-Id: I478bfef8b0273b343aa72bcd6787a486eba4f006
Partial-Bug: #1445412"
99de7cdf700218a54fa6fc2e194cca3ccb35abd4,2015-04-27 13:20:38+00:00,"Support multiple IPv6 prefixes on internal router ports for an HA Router

As part of BP multiple IPv6 prefixes, we can have multiple IPv6 prefixes on
router internal ports. Patch, I7d4e8194815e626f1cfa267f77a3f2475fdfa3d1, adds
the necessary support for a legacy router.

For an HA router, instead of configuring the addresses on the router internal
ports we should be updating the keepalived config file and let keepalived
configure the addresses depending on the state of the router.

Following are the observations with the current code for an HA router.
1. IPv6 addresses are configured on the router internal ports (i.e., qr-xxx)
   irrespective of the state of the router. As the same IP is configured on multiple
   ports you will notice dadfailed status on the ports.
2. Keepalived configuration is not updated with the new IPv6 addresses.

This patch addresses the above issues for an HA Router.

Closes-Bug: #1446161
Partially-implements: blueprint multiple-ipv6-prefixes
Change-Id: Icb9a0e4e6e5deafbdc0135ce7e6b100b1725df66"
f6845986446601b92082c811f4181016ef0fefc8,2015-04-28 08:23:11+03:00,"Suppress exception when trying to remove non existing device in SNAT redirect

L3 service plugin first calls to remove_router_interface from the L2 OVS agent
which delete this port from OVS and then the service plugin calls
to remove the router interface from L3 agent.

Catch the exception thrown on the delete gateway, if its due to device doesn't exists
ignore the exception

Closes-Bug: #1435012
Change-Id: Ieeaa01e7c0393f5200d1a8d2bbbc16befe7699a2"
dd05b8b8290e9310b77518dcf439bb1793a716a0,2015-04-28 17:11:21+00:00,"Add icmpv6 to sg_supported_protocols

support using icmpv6 (protocol num 58) in the protocol option, when creating
a security group rule.At this time, port_range_min/port_range_max represent
icmpv6 type/code, and you can use only port_range_min to specify just one type.
eg:neutron security-group-rule-create --direction ingress \
   --ethertype ipv6 --protocol icmpv6 --port-range-min 134 SECURITY_GROUP

ApiImpact
DocImpact
Partial-Bug:#1427973
Change-Id: Ide4f7476cdb8a4f04f72983917ce7dbfc7be90a5"
7759db3fe9396e4385fdfc01c0d86c1ce33e294f,2015-04-28 16:07:47-04:00,"Remove 'IP' from device exception message

Message should match others of this type elsewhere, and isn't
IP-specific.  Cleanup from https://review.openstack.org/#/c/168806/

Change-Id: I4cd3eb86e078f069b871b3cd08b66024682f92a6"
6dac1d6a4b882e51102caeacd9ed8d960c22c84d,2015-04-29 04:54:38+00:00,"Rename delete_gateway method name

Fix last comments from bug #1435012
Some comments were left out and the patch is already merged.
This patch address these comments.
Rename method and remove an unneeded comment

Change-Id: Ie087edf1fee7136eddf75ce01d4b640211445bfa"
3e4e932a4d9dbfac908cf03c221b350e645d8b17,2015-04-29 14:53:43+00:00,"Fix _device_to_port_id for non-tap devices

This adjusts the _device_to_port_id function in ML2
to recognize other interfaces that belong to Neutron
under different name prefixes.

Adds unit tests to achieve full converage of _device_to_port_id
method.

Closes-Bug: #1443710
Change-Id: I80284ee67e5876cf5689e49e1592ca1351ae5fa1"
b65b1e6645a48174703591f0f8bec8d79d294d9b,2015-04-30 01:40:22-07:00,"Updated ovsvapp_agent.ini in neutron

we have added the vxlan support for OVSvApp l2 Agent.

References:
https://review.openstack.org/#/c/168866/
https://review.openstack.org/#/c/175148/
https://review.openstack.org/#/c/177616/

Change-Id: I8061a1280b765e71aa682711c55c469f8425dac6"
a377b4fc95f58749178b881d0104ecfaa0b26714,2015-05-01 01:08:29+08:00,"Fix port creation verification of the port-security extension

When port is created, we should check the content of the security-group and
address-pairs like we do when port updated.
This patch also updates address-pairs testing unskipping some
port-security-related tests.

Change-Id: Ia27881a34ff99cad34c84764d2bf8a6cdf77af9c
Closes-Bug: #1446087"
661dea6b5e1861e56bfccc8ebe1ae637a70b3cbd,2015-04-30 10:37:24-07:00,"Context: is_admin==True implies is_advsvc=True

With this change is the is_admin parameter is set to True when
creating a context, the is_advsvc property is set to True as well,
without executing a pointless check with policy engine.

Closes-Bug: #1450244

Change-Id: I0a21a82692665599260d07c00c55df18fc926eb5"
723162501a5e2e5f202af9d95a1b946e3d43cf96,2015-05-01 14:26:40+00:00,"Finally let L3 and DHCP agents cleanup namespaces by default

There has been a problem with iproute package that resulted in errors
when deleting the namespaces, so deleting was turned off by default.
According to tests with iproute version 3.12.0 there is no such issue
so the option could be safely turned on by default.

DocImpact
Related-Bug: #1052535
Related-Bug: #1402739

Change-Id: I4c831f98fb2462382ef0f9216e265555186b965a"
9e0993b6adbc23b31e0c88cdb7404416a144420d,2015-05-01 16:32:23-07:00,"Deprecate config-based Quota Driver

This patch displays a deprecation warning everytime the quota
driver neutron.quota.ConfDriver is loaded.
The driver will be removed in the ""M"" cycle.

Change-Id: Ifb799755bce50bb089f8df020286fd2e95c80a68
Closes-Bug: #1430523"
dbe7ba1868f35af0142f78c70693ed69e6f42ca3,2015-05-02 05:21:22-07:00,"OVS-agent: Ignore IPv6 addresses for ARP spoofing prevention

The flow rules to match on ARP headers for spoofing prevention
fail to install when an IPv6 address is used. These should be
skipped since the ARP spoofing prevention doesn't apply to IPv6.

Co-authored-by: Kevin Benton <blak111@gmail.com>
Closes-Bug: #1449363
Change-Id: I4bb3135e62378c5c96d1ac0b646336ac9a637bde"
26284228dfc3c5f121f869dd6b2d2a492afaf659,2015-05-03 01:48:38+00:00,"Get all interfaces for get_snat_sync_interfaces

The get_snat_sync_interfaces method was being called for
each router individually during a sync, which resulted
in a new query to the database.

This patch eliminates that waste by querying for the snat
interfaces for all of the routers in the list at once.

Change-Id: I1e44a0cf15a70632e8b62ac89ce807a7a457747d
Partial-Bug: #1445412"
a4ada8e0a980a40384c5c0fcd43b872469dcded7,2015-05-04 15:23:12-04:00,"Enhance configure_for_func_testing.sh for *aaS use

Modify the script so that it can be used by the *aaS functional tests.
This is done by allowing callers, namely other *aaS repos, to override
information, like the project name and virtual environment used (for
example, VPNaaS has two functional jobs with different virtual env).

Change-Id: I450273036e938a4acc9a7bc1dc193a9c207b2d58
Closes-Bug: #1446807"
bd5373b670cdd7f21f8a1ece98fde6be9fda71ab,2015-05-05 16:59:37+08:00,"Use iptables zone to separate different ip_conntrack

ip_conntrack causes security group rule failures when packets share
the same 5-tuple. Use iptables zone option to separate different
conntrack zone. Currently this patch only works for OVS agent.

Co-authored-by: shihanzhang <shihanzhang@huawei.com>

Change-Id: I90b4d2485e3e491f496dfb7bdee03d57f393be35
Partial-Bug: #1359523"
8e24c7ef566fac7a41b40a12d3480fbdd0ab252b,2015-05-05 17:57:49-04:00,"Reduce prefix and suffix length in ipsets

The new NET prefix introduced by I8177699b157cd3eac46e2f481f47b5d966c49b07
increases collision chances by trimming the sg_id by 3 more chars.

This patch reduces the prefix to 1 single char and also reduces the
swap suffix to reduce the chances of collision.

Change-Id: I8a1559e173a05b2297c5cd2efa9fee7627b88a4f
Related-Bug: #1439817
Related-Bug: #1444397"
4cd1600b2548b3d15cdbc9dcc368c375d2f7fee9,2015-05-06 04:43:01-07:00,"Remove use of contextlib.nested

Removed use of contextlib.nested call from codebase, as it has been
deprecated since Python 2.7.

There are also known issues with contextlib.nested that were addressed
by the native support for multiple ""with"" variables. For instance, if
the first object is created but the second one throws an exception,
the first object's __exit__ is never called. For more information see
https://docs.python.org/2/library/contextlib.html#contextlib.nested
contextlib.nested is also not compatible with Python 3.

This is the first patch in a series for removing use of
contextlib.nested.

Added hacking check to catch if any new instances are added to
the codebase.

Line continuation markers (e.g. '\') had to be used or syntax
errors were thrown. While using parentheses is the preferred way
for multiple line statements, but in case of long with statements
backslashes are acceptable.

Partial-Bug: 1428424
Change-Id: I171fbdb89892a3d4548bf2ca52f4a7dd9ef8dccb"
cf84ec4c10461bef6dd57b9645cb902e0c16584f,2015-05-07 00:10:50+02:00,"Allow to define enable_snat default value

Currently neutron resets enable_snat attribute to True when enable_snat
is not provided in router external_gateway_info. But in some deployments
(private/enterprise clouds) such behavior is not the expected default
one as snat/nat/floating-ips is not used (at least by default).

This change defines the option enable_snat_by_default which allows
deployers to set enable_snat default value when neutron resets it. The
option default value is True for backward compatibility.

DocImpact
APIImpact
Closes-Bug: #1388858
Change-Id: I455a552230ec89fe907a087c1de8c8144b5d086e"
f77c17ef9993ea8c545dc044ad2ac013a28dbc22,2015-05-08 08:23:35+12:00,"ARP spoofing patch: Data structures for rules.

ARP cache poisoning is not actually prevented by the firewall
driver 'iptables_firewall'. We are adding the use of the ebtables
command - with a corresponding ebtables-driver - in order to create
Ethernet frame filtering rules, which prevent the sending of ARP
cache poisoning frames.

The complete patch is broken into smaller patch sets for easier review.

This patch set here includes the some classes for the maintenance of ebtable
chains and rules.

Note:
    This commit is based greatly on an original, now abandoned patch,
    presented for review here:

        https://review.openstack.org/#/c/70067/

Full spec can be found here: https://review.openstack.org/#/c/129090/

SecurityImpact

Change-Id: I3c66e92cbe8883dcad843ad243388def3a96dbe5
Implements: blueprint arp-spoof-patch-ebtables
Related-Bug: 1274034
Co-Authored-By: jbrendel <jbrendel@cisco.com>"
f1b4dfd52bd37ff613b0f8c9156386b6032295b2,2015-05-08 07:29:04+09:00,"Add missed actions into policy.json

This patch adds following actions into policy.json.

  1. v2.0/fw/firewall_policies/{firewall_policy_id}/insert_rule
  2. v2.0/fw/firewall_policies/{firewall_policy_id}/remove_rule

Closes-Bug: #1439383
Change-Id: I8051a97852f0f1f21bf266c16a477a5e2fd32062"
3a1175b88a436eecf00b8f04e5cc9f5cbce3ee06,2015-05-07 22:56:56+00:00,"Check for missing network in _bind_devices

_bind_devices was making the assumption that the ports it
was operating had local VLAN map entries for their network.
This wasn't the case when a network was deleted right before
_bind_ports was called because the VLAN was reclaimed.

This patch just checks to see if the the network ID has an entry
in the map. If not, it skips the port. The port will be handled
on the next scan_ports iteration when the agent will discover that
the port is no longer defined on the plugin and it will be placed
in the DEAD vlan.

Change-Id: Ica51d727aceb41848fec0f4edbd16916365941ee
Closes-Bug: #1452903"
9c857dab6289047a272a4519479903c92a84dc4c,2015-05-09 07:14:17+00:00,"remove router interface on Arista L3 plugin fails

The failure is because of mismatch of the
parameters to _validate_interface_info(). This patch removes
this code as it can be inherited from upstream

Change-Id: I5a92c6d05876e9ab5201e8fac018433eeb5c89e4
Closes-Bug: #1453323"
1d9fd2aec00cb85034e5a23cc1beac33c74e0110,2015-05-11 02:18:54+04:00,"Randomize tunnel id query to avoid contention

When networks are created rapidly, neutron-servers compete
for segmentation ids which creates too much contention and
may lead to inability to choose available id in hardcoded amount
of attempts (11)
Randomize tunnel id selection so that condition is not hit.

Change-Id: I7068f90fe4927e6e693f8a62cb704213b2da2920
Related-Bug: #1382064
Closes-Bug: #1454434"
dcc9840684de11835625730aeca10aeaf416929b,2015-05-11 04:30:11+04:00,"Catch ObjectDeletedError and skip port or subnet removal

When network is deleted service ports are deleted in the scope of
delete_network. Service ports could also be deleted by other entities
such as DHCP agent releasing dhcp port.
That could rarely lead to a race condition when port object used in
_delete_ports helper is already deleted causing ObjectDeletedError
exception.
Need to handle it and prevent object deletion in that case.

Change-Id: I531251d3211545c82a5bb7a471b7915da9b763b7
Closes-Bug: #1454408"
a6b6e5597f32dfb0d92dc168d91e83d6daafe227,2015-05-11 04:03:40-07:00,"Deprecate quota_items, register resources upon REST initialization

Register 'core' resources when the respective rest controllers are
instantiated, rather than at module load time.

Since in this way there will not be any need to iterate over
quota_items, the option is being deprecated.

This patch does not supply unit tests as the already-existing
routine for registering a resource from quota_items is being
deprecated as well (and was not covered by any unit test beforehand).

DocImpact

Change-Id: Icdb744adfd86d38363239a454ccf04f3c6b9c158
Closes-Bug: #1453322"
3488559abaaffe28b0831689288938261a458adc,2015-05-12 12:44:25+03:00,"mlnx MD: mlnx_direct removal

mlnx_direct is deprecated from Juno release. sriov-nic-switch
with macvtap port is the replacement for it.
This patch removes the mlnx_direct from mlnx MD and
from the supported vif_types.

Closes-Bug: #1453410

Change-Id: I7ee528dc04cdafa27455d5f8fd18c04c858466d8"
54fc39308277d4aedc3e399286714d719ecacfbb,2015-05-12 11:44:14+00:00,"tests: don't allow oslo.config to autodiscover config files

oslo.config makes attempts to autodiscover configuration files using
find_config_files() helper. If e.g. /etc/neutron/neutron.conf exists,
and is not readable, the following test failure can be experienced:

oslo_config.cfg.ConfigFilesPermissionDeniedError: Failed to open some
config files: /etc/neutron/neutron.conf

Unit tests must not rely on any external state of the system and run
successfully no matter whether neutron is actually installed on the
system, or not.

Closes-Bug: #1442543
Change-Id: Ic90d8c40b2072fdda152703b84081719936b5f4e"
39af7fb15ef5abe9402d80da207c2c43ca905d23,2015-05-12 20:04:37+08:00,"setup port filters when sg rules change

when security group rules change, the l2 agents which have the
ports in this security group should reload iptables, this bug
was introduced by patch#118274.

Closes-bug: #1452718
Change-Id: Idb1577128be5d8812024467f599166bc131d57ea"
0ace88fd4a75ff213dc36fd16c1f8e7080ab7d6d,2015-05-12 11:17:32-04:00,"Add VIF_DELETED notification event to Nova

It's possible to delete a neutron port that is currently associated
with an instance. When it happens, neutron should notify nova of the
port deletion event so that Nova can take proper actions.

Refer to I998b6bb80cc0a81d665b61b8c4a424d7219c666f for the nova patch
that handles the event.

Change-Id: Iff88cd12ae18017ef3e776821bcf3ecf3b4f052f
Related-Bug: #1333365
Related-Bug: #1448148"
8d4cbb3911a4c5b38ef998b0425eab1994b3bc2d,2015-05-12 20:32:54+00:00,"Append @randtoken to L3 agent namespaces in full stack tests

Change-Id: Ib180a5836f653385ec2877c50fbca6f850eff351
Closes-Bug: #1446261"
251f551a5fe8fe05cdc8c9b9cfad357245b39bb9,2015-05-13 22:23:58+00:00,"Block subnet create when a network hosts subnets allocated from different pools

This change will ensure that all subnets with the same ip_version on a given
network have been allocated from the same subnet pool or no pool. This
provides cleaner subnet overlap detection.

Change-Id: I3c7366c69b10c202c0511126fbee6b3aac36759e
Closes-Bug: #1451559"
c003b450b34dcbb2e67b3ffb573cf68f23eb213f,2015-05-14 08:59:19+08:00,"Allow updating port 'binding:host_id' be None

with ml2 plugin, it should allow updating port 'binding:host_id'
be None directly, there is already a bug in nova#1441419.

Change-Id: I93e4c513e40a7cf5740dde6c658e2470788d716a
Closes-Bug: #1453715"
f3f2e59ae76ab2a52ee448bf53722be5503f0d43,2015-05-14 02:16:25-07:00,"Remove use of contextlib.nested

Removed use of contextlib.nested call from codebase, as it has been
deprecated since Python 2.7.

There are also known issues with contextlib.nested that were addressed
by the native support for multiple ""with"" variables. For instance, if
the first object is created but the second one throws an exception,
the first object's __exit__ is never called. For more information see
https://docs.python.org/2/library/contextlib.html#contextlib.nested
contextlib.nested is also not compatible with Python 3.

Multi-patch set for easier chunks. This one addresses the
neutron/tests/unit/agent/test_securitygroups_rpc.py tests.

Line continuation markers (e.g. '\') had to be used or syntax
errors were thrown. While using parentheses is the preferred way
for multiple line statements, but in case of long with statements
backslashes are acceptable.

Partial-Bug: 1428424
Change-Id: Ia66b98423b14fc7d1bbf6d8a673a49f798d328fa"
d4a39439727055fed2cc0661f1ba02c73fd523dc,2015-05-14 13:04:26+03:00,"Add client id option support to dhcp agent

According to the dnsmasq man client id option should be
written to dhcp-hostsfile and not to the dhcp-optsfile.
Also this patch update the dhcp_release command to take
into account the client id when releasing old leases.

Closes-Bug: #1447105

Change-Id: I6f11b12040ad4e00ae871be45edda3b52b4ee0da"
6deed4363b6765093d0f3731f40c428810940f9b,2015-05-14 17:43:28+03:00,"Don't pass namespace name in disable_isolated_metadata_proxy

It's not always possible/convenient to get namespace name
when need to disable some process (like metadata process for stale
router, see related bug). Since namespace name is not required
for process manager to disable process we can remove this parameter
from disable_isolated_metadata_proxy()

Change-Id: I0e0da01d9640aa9920f41989804fc6f320c1c1eb
Related-Bug: #1455042"
cc1efd085524cd30d6a238a584df193133d27015,2015-05-15 09:45:39+03:00,"Support for concurrent full-stack tests

This patch introduces the last step of complete test separation for
full-stack tests - separate rabbitmq queues - in the form of rabbitmq
virtual hosts.

* This patch also renames EnvironmentFixture to FullstackFixture, for
  clarity.

Change-Id: I24776e3970a73fdd3271023da7967f2c7261621b
Closes-bug: #1452737"
bf71868ba809587b72da68b8cd4c248cf33990a1,2015-05-15 17:58:13-04:00,"Optimize IptablesManager._find_last_entry

As it turns out calling .strip() thousands of times can be expensive.
I'll defer to security groups and iptables experts to try and find ways
to call the method less often, cache the results, or any other clever
trick.

Moving strip to the return statement speeds up the method by more than
x2.

Change-Id: I7522c6db50c76274bef93e0f0ea6a78d508b7fbe
Related-Bug: #1455675"
3d2543d710c7071ffeb5c9857ac30a4d95695a7b,2015-05-20 16:20:27+08:00,"fix DHCP port changed when dhcp-agent restart

When DHCP server is started, the periodic task is running
before loading cache state.The method port_update_end
need to use the cache information, but the cache information
has not been loaded.

Change-Id: I0d1da11bb559b7f0f9d4428b82573fb26916a933
Closes-Bug: #1420042"
12889f70e1ae547598f4c663e9da5b9bb03e347e,2015-05-20 12:04:05-07:00,"Match order of iptables arguments to iptables-save

The way we were forming our iptables rules was not matching
the output of iptables-save. This caused the logic that preserves
counters to miss many of the rules.

This patch corrects the order for the comments and the allowed address
pairs to match the output order of iptables-save.

Closes-Bug: #1456823
Change-Id: I34c2249d0865485578767865c82414e1d813d563"
86d5944fcc2f44aac7cd786ea429f942fc5cb66e,2015-05-20 17:38:39-07:00,"Fix minor errors in the Vyatta L3 Plugin:

update management_network to management_network_id in vrouter.ini
Fix copyright header to refer to Brocade in vrouter_neutron_plugin.py
Fix neutron.service_plugins brocade_vyatta_l3 entry in setup.cfg

Change-Id: Ib9eb4a825454d99607deca61ceeb7acb43a9b248
Closes-Bug: #1457235"
84fb6660a337e5e1f515b600ac8c22c6fdf82ec9,2015-05-21 02:09:22-07:00,"Adding loadbalanacerv2 device owner constant to neutron constants

The neutron constants doesn't have the constant for device owner
lbaasv2. This fix adds the constant. This is needed for the bug 1430394
as we need to check the device owner when the port is to be deleted.
Partial-Bug: #1430394

Change-Id: I222a9f44c5ed6c879feb2fb9e04047ae8f2c7745"
032847b3030106a9e605b3088826b599789d7991,2015-05-21 14:48:28-07:00,"Remove use of contextlib.nested

Removed use of contextlib.nested call from codebase, as it has been
deprecated since Python 2.7.

There are also known issues with contextlib.nested that were addressed
by the native support for multiple ""with"" variables. For instance, if
the first object is created but the second one throws an exception,
the first object's __exit__ is never called. For more information see
https://docs.python.org/2/library/contextlib.html#contextlib.nested
contextlib.nested is also not compatible with Python 3.

Multi-patch set for easier chunks. This one addresses the
neutron/plugins/ml2 directory.

Line continuation markers (e.g. '\') had to be used or syntax
errors were thrown. While using parentheses is the preferred way
for multiple line statements, but in case of long with statements
backslashes are acceptable.

Partial-Bug: 1428424
Change-Id: I7bbe4cec511125b4b2c954aa93e2d9ff6871b9e0"
9b893767a5214177e30f596b6eed8324278d5050,2015-05-23 22:58:35-07:00,"Ensure mac address added to iptables is always in unix format

When a allowed address pair entry is added with a mac format
other than unix format the ovs-vs agent keeps on restarting as
it is not able to save the proper iptables due to the error
""Error while processing VIF ports"". This fix makes sure
that the mac address sent to the iptables firewall is always
in the unix format

Change-Id: I86bbf3cb2adf9b998190e472691c01d068ebab9c
Closes-Bug: #1457971"
5f28762ae2a96b8062628d0cac81f5da94c6ed34,2015-05-25 16:59:32+03:00,"Add callback prior to deleting a subnet

When using LBaaS and trying to delete a subnet, neutron has no way of
knowing if the subnet is associated to some pool. As a result, the
subnet is deleted but the pool remains associated to the (now
nonexistent) subnet_id.  This patch lays the ground-work for adding a
check in LBaaS' side to prevent such cases.

Related-Bug: #1413817
Change-Id: I3d5e231b67c72ffd919c92d65b57da56c63e053c"
3682e3391f188845d0c7f382f0ccd4b38db3904e,2015-05-25 16:09:08+02:00,"Ensure non-overlapping cidrs in subnetpools without galera

_get_allocated_cidrs[1] locks only allocated subnets in a subnetpool
(with mysql/postgresql at least). It ensures we don't allocate a cidr
overlapping with existent cidrs but nothing disallows a concurrent
subnet allocation to create a subnet in the same subnetpool.

This change replaces the lock on subnetpool subnets by a lock on the
subnetpool itself. It disallows to allocate concurrently 2 subnets in
the same subnetpool and ensure non-overlapping cidrs in the same
subnetpool.

Moreover this change solves a trouble with postgresql which disallows
to lock an empty select with an outer join: it happens on first subnet
allocation in a subnetpool when no specific cidr is provided. Moving
the lock ensures the lock is done on a non-empty select.

But this change does not ensure non-overlapping cidrs in subnetpools
with galera because galera doesn't support SELECT FOR UPDATE locks. A
follow-up change will (try to?) remove locks from subnet allocation[1]
in order to ensure non-overlapping cidrs in subnetpools also with galera.

[1] in neutron.ipam.subnet_alloc.SubnetAllocator

Closes-Bug: #1451558
Partial-Bug: #1451576
Change-Id: I73854f9863f44621ae0d89c5dc4893ccc16d07e4"
9fc7f56565925a53f2212706431af479752bb8d9,2015-05-25 18:19:07-04:00,"Skip external tables for neutron-db-manage --autogenerate

DB tables that do not have models in the neutron tree cause
neutron-db-manage --autogenerate to create commands to drop the
tables. This fix hooks into alembic's environment with a include_object
callback that ignores external tables.

We already had a list of external tables for use by the migration tests,
so re-use them for --autogenerate.

Partial-bug: #1458682

Change-Id: I2c0bc73f72840c401c578e87d8178a79f05aad82"
f0decf6a4061be18999c87eab6ae152d9f75f99f,2015-05-26 10:11:52+10:00,"Use os._exit after forking

As the docs point out(*), _exit should be used after a fork() to avoid
both processes flushing filehandles, calling destructors with side
effects, etc.  This change does just that.

(*) https://docs.python.org/2/library/os.html#os._exit

Change-Id: I68da6283c44ab8857baf217ac1443bd17988257d"
8ee3020c47cd7eb716216852a90c3db595e2c3c6,2015-05-26 02:57:08-07:00,"Remove use of contextlib.nested (api-tests)

Removed use of contextlib.nested call from codebase, as it has been
deprecated since Python 2.7.

There are also known issues with contextlib.nested that were addressed
by the native support for multiple ""with"" variables. For instance, if
the first object is created but the second one throws an exception,
the first object's __exit__ is never called. For more information see
https://docs.python.org/2/library/contextlib.html#contextlib.nested
contextlib.nested is also not compatible with Python 3.

Multi-patch set for easier chunks. This one addresses the tests from
neutron/tests/unit/api directory.

Line continuation markers (e.g. '\') had to be used or syntax
errors were thrown. While using parentheses is the preferred way
for multiple line statements, but in case of long with statements
backslashes are acceptable.

Partial-Bug: 1428424
Change-Id: I09673f9d4c7f07d3043804676fef018905dd1239"
a1d679678daa560c86bb84303aee6163296ec653,2015-05-26 13:40:42+00:00,"Force order of dhcp.needs_resync_reasons dictionary elements

This fixes the test_periodoc_resync_helper unit test that breaks with
a randomized PYTHONHASHSEED (see the bug report).

The test assumed that the dhcp.needs_resync_reasons dictionary from
neutron.agent.dhcp.agent had elements in a particular order. Found with
PYTHONHASHSEED=2.

The fix refactors the test case to force a sorted dhcp.needs_resync_reasons
dictionary.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with
a randomized PYTHONHASHSEED, but they are not addressed here. They will
be addressed in separate patches.

Change-Id: Ia7fc2c3e605d92d8497d44e28054bdda613cebf2"
7ea278087c32235efa793c8c815aff3861410f13,2015-05-26 20:20:57+03:00,"OVS_LIB support API for setting fail mode 'standalone'

The current API only support setting a bridge fail mode
to secure, this patch allow the user to set it to 'standalone'
as well

Change-Id: If7e6532dc7f8527c35834a37144ea4386fe1b861
Closes-Bug: #1458924"
539738a8eeebcc9f22987fcb0a241c6b8c3d561a,2015-05-27 08:37:20+02:00,"Do not assume order of get_sync_data_metering response elements

This fixes the test_add_metering_label_rpc_call[1] unit tests that breaks
with a randomized PYTHONHASHSEED (see the bug report).

The test assumed that the get_sync_data_metering[2] had response
elements in a particular order. Found with PYTHONHASHSEED=1.

The fix refactors the test_add_metering_label_rpc_call test case to handle
an unsorted get_sync_data_metering response. The fix defines the class
UnorderedList[3] which is equal to any permutation of itself.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with
a randomized PYTHONHASHSEED, but they are not addressed here. They will
be addressed in separate patches.

[1] neutron.tests.unit.services.metering.test_metering_plugin:
 TestMeteringPluginL3AgentScheduler
 TestMeteringPluginL3AgentSchedulerServicePlugin
[2] neutron.services.metering.metering_plugin.MeteringPlugin
[3] neutron.tests.tools

Change-Id: I5d42b827bc72dcacd38eaa2377ce16c47a9e7dbb"
e9d17b8bfff31072a3d017ce64e36ac99007a052,2015-05-27 11:42:13+02:00,"Do not assume order of iptables_firewall method responses

This fixes the iptables_firewall group unit tests[1] that breaks with
a randomized PYTHONHASHSEED (see the bug report).

The test assumed that the _get_remote_sg_ids and
_determine_remote_sgs_to_remove methods from
neutron.agent.linux.iptables_firewall returned elements in a particular
order. Found with PYTHONHASHSEED=1.

The fix refactors the test case to handle unsorted responses from
_get_remote_sg_ids and _determine_remote_sgs_to_remove.

[1] neutron.tests.unit.agent.linux.test_iptables_firewall:
 test_prepare_port_filter_with_new_members
 test_prepare_port_filter_with_sg_no_member
 test_remove_port_filter_with_destroy_ipset_chain

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with
a randomized PYTHONHASHSEED, but they are not addressed here. They will
be addressed in separate patches.

Change-Id: I19e51452a2bde0721559df746047239f68614336"
ce957ac83a85a421f2e60cc39a3103291ba95e4a,2015-05-27 14:54:35+02:00,"Do not assume order of convert_kvp_list_to_dict method responses

This fixes the test_attributes unit tests[1] that breaks with a
randomized PYTHONHASHSEED (see the bug report).

The test assumed that the convert_kvp_list_to_dict method from
neutron.api.v2.attributes returned elements in a particular
order. Found with PYTHONHASHSEED=1.

The fix refactors the test case to handle unsorted responses from
convert_kvp_list_to_dict.

[1] neutron.tests.unit.api.v2.test_attributes.TestConvertKvp

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with
a randomized PYTHONHASHSEED, but they are not addressed here. They will
be addressed in separate patches.

Change-Id: I864904db1428b88c482ad17a69b33e876a8d042c"
e135bcea472e08347fc3dc3df01aa1fa909504fb,2015-05-27 19:57:04+02:00,"Do not assume order of dictionary elements in init_l3

This fixes the test_interface unit tests[1] that breaks with a
randomized PYTHONHASHSEED (see the bug report).

The test assumed that the init_l3 method from
neutron.agent.linux.interface had dictionary elements in a particular
order. Found with PYTHONHASHSEED=2.

The fix refactors the test case to handle unsorted dictionaries in
init_l3.

[1] neutron.tests.unit.agent.linux.test_interface.TestABCDriver

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with
a randomized PYTHONHASHSEED, but they are not addressed here. They will
be addressed in separate patches.

Change-Id: I1948593b4d7a0069ef060512942b548c74a6b369"
98d8ad911d07a20af18edb0cac4bcf141a83d969,2015-05-27 14:15:48-07:00,"Persist DHCP leases to a local database

Due to issues caused by dnsmasq restarts sending DHCPNAKs,
change Ieff0236670c1403b5d79ad8e50d7574c1b694e34 passed the
'dhcp-authoritative' option to dnsmasq. While this solved the
restart issue, it broke the multi-DHCP server scenario because
the dnsmasq instances will NAK requests to a server ID that
isn't their own.

Problem DHCP Request Lifecycle:

Client: DHCPDISCOVER(broadcast)
Server1: DHCPOFFER
Server2: DHCPOFFER
Client: DHCPREQUEST(broadcast with Server-ID=Server1)
Server1: DHCPACK
Server2: DHCPNAK(in response to observed DHCPREQUEST with other Server-ID)
          ^---Causes issues

This change removes the authoritative option so NAKs are not
send in response to DHCPREQUEST's to other servers. To handle
the original issue that Ieff0236670c1403b5d79ad8e50d7574c1b694e34
was inteded to address, this patch also allows changes to be persisted
to a local lease file.

In order to handle the issue where a DHCP server may be scheduled
to another agent, a fake lease file is generated for dnsmasq to start
with. The contents are populated based on all of the known ports for
a network. This should prevent dnsmasq from NAKing clients renewing
leases issued before it was restarted/rescheduled.

Closes-Bug: #1457900
Change-Id: Idc91602bf8c474467e596cbd5cbaa8898952c841"
2b7e6552e82f899a91ce3d6973d90778440fac8c,2015-05-27 14:56:54-07:00,"Remove time formatting in agent clock error

This removes time formatting that may be hiding timezone
issues that are leading to a delta being calculated between
the agent and the server even when it shows none. It also
adds logging of the difference so we can see how far off it
thinks they are.

Example message:
during the registration of Open vSwitch agent has a timestamp:
2015-05-19T18:15:27Z. This differs from the current server
timestamp: 2015-05-19T18:15:27Z by more than the threshold agent
downtime: 75.

Note that the timestamps are exactly the same after formatting.

Change-Id: Ibfc30444b7a167fb18ae9051a775266236d4ecce
Related-Bug: #1456760"
817b45b6406d9730859535ac54d73ec5c85451d0,2015-05-27 17:42:19-07:00,"Process port IP requests before subnet requests

When a port requests multiple fixed IPs, process the requests
for specific IP addresses before the ones asking for a subnet.
This prevents an error where the IP that was requested happens
to be the next up for allocation so the subnet request takes it
and causes a DBDuplicateEntry.

Closes-Bug: #1459467
Change-Id: I645565c7fe0c47c58d686b25020bb49a0b9089f5"
7a3934d982ef29d8851450b5586319201baa0122,2015-05-27 17:51:31-07:00,"Switch to dictionary for iptables find

The code to find the matching entry was scanning through a
list of all rules for every rule. This became extremely slow
as the number of rules became large, leading to long delays
waiting for firewall rules to be applied.

This patch switches to the use of a dictionary so the cost
becomes a hash lookup instead of a list scan.

Closes-Bug: #1453264
Closes-Bug: #1455675
Change-Id: I1e6fe5e50b9c13066c966c252cadc8ed1d08f686"
714c311871333c19c4d6203f79a948b184bf11cf,2015-05-28 09:17:15+03:00,"Addressing follow up comments for OVS_LIB fail_mode setting API

Review https://review.openstack.org/#/c/185659/ got merged before i could
see and address the last comment.
This is a follow up patch to address that change

Change-Id: I19135a75cf25e03d6c1f89d7c18e8da3af2ec643"
b4363a48214f1bb21bd7934f05a6440bb5d66bb7,2015-05-28 09:44:54+02:00,"Fix PYTHONHASHSEED bugs in test_security_groups_rpc

This fixes the test_security_group_member/rule_updated unit tests[1]
that breaks with a randomized PYTHONHASHSEED (see the bug report).

The test assumed that several dictionaries had elements in a
particular order. Found with PYTHONHASHSEED=2.

The fix refactors the test case by injecting values using the same
ordering[2].

[1] neutron.tests.unit.agent.test_securitygroups_rpc.\
   TestSecurityGroupAgentWithOVSIptables

[2] https://github.com/openstack/neutron/blob/\
   e8364a72e62d83e5a76bec1d7aa76ecfe2ed53ac/\
   neutron/tests/unit/agent/test_securitygroups_rpc.py#L1630-L1635

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with
a randomized PYTHONHASHSEED, but they are not addressed here. They will
be addressed in separate patches.

Change-Id: I5077764045a34d1be0e85bb4b80f3655e87692cc"
36a1d14b58028d0294e67786129a2a09ce393cde,2015-05-28 16:31:50+00:00,"Do not assume order of security group rules

This fixes the unit tests[1] that breaks with a randomized
PYTHONHASHSEED (see the bug report).

The test assumed that the security_group_rules_for_devices method from
neutron.agent.securitygroups_rpc returned security group rules in a
particular order. Found with PYTHONHASHSEED=2.

The fix refactors the test case to handle unsorted security group rules.

[1] neutron.tests.unit.plugins.ml2.test_security_group.\
    TestMl2SGServerRpcCallBack.\
    test_security_group_rules_for_devices_ipv4_ingress_addr_pair

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with
a randomized PYTHONHASHSEED, but they are not addressed here. They will
be addressed in separate patches.

Change-Id: I1b2bd4100c19004f12822c414aefc86aae9849db"
a0c9745e90596d4a3207e844332e078ca7ecc5fa,2015-05-28 17:01:47-07:00,"Use correct time delta function

The .seconds attribute of a timedetla object cannot be taken in
isolation because it can overflow into days. For example, a -1 second
difference will become -1 day and 86399 seconds.

This became a problem when the agent clock was slightly ahead of
the server clock. When calling (server_time - agent_time).seconds
in this scenario, it would go below 0 in the daily seconds and
wraparound to 86399 seconds and -1 day.

This patch corrects the issue by using a method in timeutils that
ends up calling total_seconds(), which was designed for this usecase.
It also restores the formatting that was removed in patch:
Ibfc30444b7a167fb18ae9051a775266236d4ecce

Closes-Bug: #1456760
Change-Id: Ie90249ab68bb5f8d117872d52180c7087d8fac9b"
c9fcbc2e7758acf08867db9a7bc89685cd916bbb,2015-05-29 12:11:51+08:00,"Fix ovs agent restore local_vlan_map failed

when ovs agent restart, it will restore the local_vlan_map, but in
some condition, if a device does not be set tag in ovsdb, the function
'db_get_val(""Port"", port.port_name, ""tag"")' will return a empty list,
it does not need 'provision_local_vlan' for this device.

Change-Id: I70ed30e6ea5d13e6f14bb41c957320cc21dbca1b
Closes-bug: #1458709"
b058658780f0ccb2787c26e3e95cabcc8e2e6349,2015-05-29 13:55:55+03:00,"Cleanup stale metadata processes on l3 agent sync

Currently l3 agent only cleans up stale namespaces.
The fix adds checking and deleting stale metadata processes
to NamespaceManager class responsible for clearing stale
namespaces

Change-Id: I2b081803e312589d3d8a7808d286a6c9827ef53f
Closes-Bug: #1455042"
77303fbeaa060bcee2befad65dccb457fbb6ab65,2015-05-29 17:44:01+02:00,"Sort _get_new/deleted_set_ips responses in unittests

This fixes the test_set_members_adding/deleting_less_than_5 unit test
that breaks with a randomized PYTHONHASHSEED (see the bug report).

The test assumed that the _get_new/deleted_set_ips from
neutron.agent.linux.ipset_manager return elements in a particular order.
Found with PYTHONHASHSEED=1.

The fix refactors the test case to force sorted responses from
_get_new/deleted_set_ips during unittests.

Partial-bug: #1348818

Note: There are several other unrelated unit tests that also break with
a randomized PYTHONHASHSEED, but they are not addressed here. They will
be addressed in separate patches.

Change-Id: I8408365825ec1e97a83c2181f38ec1f9468df91e"
9ff8cd524621daf6cd20da939238eee14b5a231f,2015-05-29 16:29:47+00:00,"Improve test_set_members_deleting_less_than_5

In test_set_members_deleting_less_than_5[1], 3 ips are deleted from
ipset but test_set_members_deleting_less_than_5 checked that the
first one was deleted because the call ordering was non-trivial.

The test was successful because
assert_has_calls(expected_calls, any_order=False) allows extra calls
before and after expected_calls.

A parent change[2] forces the call ordering, this allows to check that
the 3 ips are deleted.

[1] neutron.tests.unit.agent.linux.test_ipset_manager
[2] I8408365825ec1e97a83c2181f38ec1f9468df91e

Related-Bug: #1348818

Change-Id: I773e2cd19fdec634b728d0c3a78c1d66392c743f"
422588e13338dab4a5ba1973c96256690ba4adf5,2015-05-29 23:18:46+02:00,"Get completely rid of contextlib.nested

`contextlib.nested` is deprecated since Python 2.7 and incompatible with
Python 3. This patch removes all its occurences by using the helper
script at [1].

This is a necessary step to allow us running all unit tests with
Python 3 (not just a small subset as it is done now).

[1]: https://github.com/adrienverge/context_unnester

Change-Id: I8d1de09ff38ed0af9fb56f423a2c43476408e0fb
Blueprint: neutron-python3
Closes-Bug: #1428424"
ef5b4f52749b246d8165058ff320399c9c13f5ac,2015-05-30 01:23:05+00:00,"Enable random hash seeds

Neutron tests have been updated in order to support random hash seed. It
allows to remove PYTHONHASHSEED=0 in tox.ini and remove hashtest tox
environment.

Closes-Bug: #1348818
Change-Id: I1063304dda887eb82c0de8516d5a483fa8943fc1
Depends-On: I8408365825ec1e97a83c2181f38ec1f9468df91e
Depends-On: I1b2bd4100c19004f12822c414aefc86aae9849db
Depends-On: I5077764045a34d1be0e85bb4b80f3655e87692cc"
e007167a700aa5b80ecb48adff0ac36bb330591d,2015-05-29 20:54:29-07:00,"Don't delete port from bridge on delete_port event

Commit d6a55c17360d1aa8ca91849199987ae71e8600ee added
logic to the OVS agent to delete a port from the integration
bridge when a port was deleted on the Neutron side. However,
this led to several races where whoever created the initial
port (e.g. Nova, L3 agent, DHCP agent) would be trying to
remove the port from the bridge at the same time. These
would result in ugly exceptions on one side or the other.

The original commit was trying to address the problem where
the port would maintain connectivity even though it was removed
from the integration bridge.

This patch addresses both cases by removing the iptables rules
for the deleted port and putting it in the dead VLAN so it loses
connectivity. However, it still leaves the port attached to the
integration bridge so the original creator can delete it.

Related-Bug: #1333365
Closes-Bug: #1448148
Change-Id: I7ae7750b7ac7d15325ed9f2d517ca171543b53be"
c44506bfd60b2dd6036e113464f1ea682cfaeb6c,2015-05-29 21:04:32-07:00,"Don't update floating IP status if no change

The floating IP status was going through all of the
status update code every time the L3 agent sent in
an update, even if the status didn't change.

This patch skips sending updates to the server if the
agent doesn't change the status.

Change-Id: Ic3736bed3dc3e4ccb91f4acfabbf033949e09ce0
Partial-Bug: #1445412"
9b29f62491ec0e1cb27601e6ad53cf152de5eb66,2015-06-01 10:24:09+03:00,"Refactor mlnx mechanism driver to support infiniband only

The old mlnx mechanism driver was used for SR-IOV with Ethernet
and infiniband support but the PCI allocation wasn't done by nova.
Juno introduced sriovnicswitch mechanism driver for SR-IOV with
Ethernet support. Mellanox recommends on using it.
The updated mlnx mechanism driver supports SR-IOV infiniband.

* support only port vnic_type 'direct'
* update vif_type name to ib_hostdev (the ib_hostdev is generic vif_type
  for SR-IOV infiniband see https://review.openstack.org/#/c/187052/)

Closes-Bug: #1460430
DocImpact

Change-Id: Ia822b492afdfeb1aecf373d5a8cdb72174512884"
4a234ab1a35708bf85fe57d9290056ac74227eab,2015-06-01 12:59:38+03:00,"Remove comment about hash seed in tox.ini

Enable random hash seeds change [1] has merged so the comment
can be safely removed.

[1] https://review.openstack.org/#/c/185572/

Change-Id: I93f64841792f9c38f5121ca47c130ad769c11dc4"
96e2314c8c0f06967b53828b0a771973f0031243,2015-06-01 16:25:27-04:00,"Modify ipset functional tests to pass on older machines

Production code uses ipset exclusively in the root namespace,
however functional testing uses ipset in namespace for isolation.
This poses an issue as ipset is not supported in namespaces on
all kernels and distributions (I'm looking at you CentOS/RHEL 7.1).

This patch changes the ipset functional tests to work in the root
namespace while taking care of cleanups.

Change-Id: I08b2f59197ed76e59b2e58b5a10820653e857cda
Closes-Bug: #1460220"
cda0b14112484d4776c7ccb6be78b7e23fdd5424,2015-06-02 06:28:44+04:00,"Add route to metadata IP by default

Windows VMs try to resolve metadata ip 169.254.169.254 as
local address by default, which results in very slow access
to metadata url during boot.
Injecting direct route to metadata ip through a subnet's default
gateway helps Windows to avoid wasting time on mac resolution.

So this patch injects host route for metadata ip for networks plugged
into a router.

Closes-Bug: #1460793

Change-Id: Ic991f9d7f9a8cf942e3e29f2da03d73c0f26470a"
b48bccc60e4fd552d7b127376f41810b61e0ba9d,2015-06-02 13:16:34+00:00,"Remove get_dhcp_port RPC method

This method was last used in Icehouse.  I think we can safely
remove all of its code and tests. Icehouse to Liberty rolling
upgrades are in no way expected to work so I just bumped
the RPC version and removed all traces of the code.

Change-Id: Ia545c5be7da80c919ad5bae6074bc1cc3aa89fa0
Closes-Bug: #1314534"
ae8c1c5f80fd4fb7b4ab116677f4cff988c67cf1,2015-06-03 03:42:30+04:00,"Catch broad exception in methods used in FixedIntervalLoopingCall

Unlike other places where it might make sense to catch specific
exceptions, methods that are used to check L3 and DHCP agents
liveness via FixedIntervalLoopingCall should never allow exceptions
to leak to calling method and interrupt the loop.

Further improvement of FixedIntervalLoopingCall might be needed,
but for the sake of easy backporting it makes sense to fix the issue
in neutron before pushing refactoring to 3rd-party library.

Change-Id: I6a61e99a6f4e445e26ea4a9923b47e35559e5703
Closes-Bug: #1458119"
75f3aaa4cc42c2c1280f6c578e27e64cff8f860c,2015-06-02 17:04:49-07:00,"Check for 'removed' in port_info before reference

scan_ports can return early on no changes, in which case
'removed' won't be present in the dict. The deleted_ports
logic wasn't setup to handle that.

This patch checks for the key before trying to reference it.

Change-Id: I0e2c6d76515ad8e2a2addc8d40451ac003a150f7
Closes-Bug: #1461325"
45ea2cf10033e12c63b8ce2cd78b04755d0aba64,2015-06-03 05:44:54+00:00,"Wrap ML2 delete_port with db retry decorator

ML2 delete_port operation currently involves locking ports
and bindings tables which may lead to DBDeadlock errors in certain
cases when several ports are deleted concurrently.
That may happen due to specifics of Galera working in active-active
mode: it may throw deadlock errors when it fails to validate
a change with other members of the cluster.
The fix adds retries to delete port operation to overcome such
deadlocks

Closes-Bug: #1422504
Change-Id: I684691d59c5ac370d74314c3c91857dc709b2d9b"
6575db592c92791a51540134192bc86465940283,2015-06-03 05:52:51+00:00,"Revert ""Add VIF_DELETED notification event to Nova""

We need to wait until the nova support is added in
I998b6bb80cc0a81d665b61b8c4a424d7219c666f. Otherwise
this generates a ton of error messages in the nova api
log as well as on the neutron side.

This reverts commit 0ace88fd4a75ff213dc36fd16c1f8e7080ab7d6d.

Change-Id: I129c4e4c05cf07d45032fec6f57e0cc17a5a82af
Closes-Bug: #1461391"
9cac5c3a9f5238fde7fd4e1c01644cdfe48785d2,2015-06-04 07:11:10-04:00,"Decompose the NCS ML2 Mechanism Driver

The last of the Cisco drivers to decompose.

Closes-bug: #1416713
Co-Authored-By: Nikolay Fedotov <nfedotov@cisco.com>

Change-Id: Icd2b358fb0db3d859ee287225ab8eeb10d7da871"
ea5ad714cfcd336c0062ddeb13238c452117782a,2015-06-05 10:25:23+03:00,"Handle SIGHUP in ovs neutron agent

This change allows ovs neutron agent not to die on receiving SIGHUP
and reload its logging options.

Note that this patch allows changing only logging options.
All other config options are not handled explicitly and changing
them using SIGHUP can lead to unpredictable circumstances.
So, until changing other options is handled it is highly recommended
to use SIGHUP for changing ONLY logging options.

Change-Id: Ic0cf8a9ca7f3a16b556a6825e2979471ae136c33
Partial-Bug: #1276694"
8c5ef2cd6e1819c4f51b01cb3504da34ef377546,2015-06-05 12:31:09+03:00,"Start linuxbridge neutron agent using a launcher

This change ports linuxbridge neutron agent on common/service code
that will allow to handle termination signals (SIGHUP, SIGTERM, SIGINT).

Note that this patch allows changing only logging options.
All other config options are not handled explicitly and changing
them using SIGHUP can lead to unpredictable circumstances.
So, until changing other options is handled it is highly recommended
to use SIGHUP for changing ONLY logging options.

DocImpact
Change-Id: I1d834e0683b04111ef04c148cbd8d4acf2964065
Closes-Bug: #1461539"
713ba0e8d7ce59eaff41518360530b2e7831c322,2015-06-05 20:18:36+00:00,"Refactor awkward logic in setup_dhcp_port

I noticed this logic as I was reviewing another patch set [1].  I
didn't like removing subnet ids from dhcp_enabled_subnet_ids and I
wasn't too keen on the ips_need_removal semantics that were kind of
forced by the existing structure of the code.  I hope you find this
alternative much clearer.  I like straight-forward code with less
indentation that doesn't use awkward booleans like ips_needs_removal.

[1] https://review.openstack.org/#/c/157697/6

Change-Id: I8bd3d6924a855ea08f8096e66bd3bfbb165a4da3"
127de06c7e09e1468f2855a3033fb6193a6b9365,2015-06-05 22:58:33+02:00,"Clean only floating-ip related connection states

Currently init_l3 deletes connection states related to ALL ips deleted
in init_l3 but it's required only when floating-ips are deleted[1].

This change deletes only connection states related to floating-ips
deleted in init_l3 ... it avoids to delete connection states in dhcp
agents and on router internal ports!

[1] look at change Ia9bd7ae243a0859dcb97e2fa939f7d16f9c2456c

Closes-Bug: #1452434
Related-Bug: #1334926
Change-Id: Icfcfc585df6fd41de1e1345fd731e4631a6950ce"
b17ff81ef1b18395c0b0671a487f68201d739f43,2015-06-08 01:58:36+00:00,"Send 'security_groups_member_updated' when port changes

With ml2 plugin, when a port's IP or security group changes, it
should send 'security_groups_member_updated' message to other l2
agents which have same security group with this changed port.

Change-Id: I2e7622d2db4c173ac879a95a6e0adf92b858fe82
Closes-bug: #1448022"
b239f75644bfdfec86f8a8efdabd6b11b766e822,2015-06-08 14:20:59+08:00,"Update ipset members when corresponding sg member is empty

if a security group has a rule with 'remote-group-id', the ports
in this security group should update its relevant ipset member
when the remote-group members is empty.

Change-Id: I980ebfd8f6537f803d9d5cbf21ca33f727fea3b3
Closes-bug: #1458786"
b322ebae09cc59ed0a860ea6e39ed9b6fa6c5c12,2015-06-09 05:56:57+08:00,"Fixes bulk insertion of data to ml2_port_binding

We should use schema definition to insert bulk of data to table.
Closes-Bug: #1454566

Change-Id: I66b3ee8c2f9fa6f04b9e89dc49d1a3d277d63191"
e61865807c4c8ff959a7746fe3e17f1ae574c9d0,2015-06-09 04:47:07+00:00,"Defer segment lookup in NetworkContext object

Avoid call to get network segments for network context objects until
a caller actually tries to lookup the segments. This optimizes cases
where the user of a port context never looks at the segments of the
associated network context (e.g. update_port_status).

Closes-Bug: #1463254
Change-Id: I7e95f81d9a3ef26ccdb18c6bfdf9adc29523aa79"
734e77365b0f241a3cea0f3c9dfb1d5fcf6eac8c,2015-06-09 11:12:47+02:00,"Remove get_admin_roles and associated logic

get_admin_roles was introduced so that contextes generated from
within plugins could be used for policy checks. This was the case
up to the Havana release as several plugins invoked the policy
engine directly to authorize requests.

This was an incorrect behaviour and has now been fixed, meaning
that get_admin_roles is no longer need and can be safely removed.
This will result in a leaner and more reliable codebase. Indeed the
function being removed here was the cause of several bugs where the
policy engine was initialized too early in the server bootstrap
process.
While this patch removes the feature it does not remove the
load_admin_roles parameter from context.get_admin_context. Doing so
will break other projects such as neutron-lbaas. The parameter is
deprecated by this patch and an appropriate warning emitted.

As a consequence neutron's will now no longer perform policy checks
when context.is_admin=True. This flag is instead set either when
a context is explicitly created for granting admin privileges, or
when Neutron is operating in noauth mode. In the latter case every
request is treated by neutron as an admin request, and get_admin_roles
is simply ensuring the appropriate roles get pushed into the context
so that the policy engine will grant admin rights to the request.
This behaviour is probably just a waste of resource; also it is not
adding anything from a security perspective.

On the other hand not performing checks when context.is_admin is
True should not pose a security threat either in noauth mode or
with the keystone middleware. In the former case the software keeps
operating assuming admin rights for every requests, whereas in the
latter case the keystone middleware will always supply a context
with the appropriate roles, and there is no way for an attacker
to trick keystonemiddleware into generating a context for which
is_admin=True.

Finally, this patch also does some non-trivial changes in test_l3.py
as some tests were mocking context.to_dict ignoring the is_admin flag.

Closes-Bug: #1446021

Change-Id: I8a5c02712a0b43f3e36a4f14620ebbd73fbfb03f"
ea35b299f06050608f3e7bb6fbc880006ed31024,2015-06-09 04:11:58-07:00,"Allow update_port_status to take network param

Allow the update_port_status function to take a network as
an optional parameter to skip calling get_network again if
the caller has already done so.

Closes-Bug: #1463656
Change-Id: I994f3abdb1b0ad3b2766f409b206ad4a8b2309b6"
6d0d72973152bb45587437c80d4ffe0fe7bba761,2015-06-09 16:15:37+03:00,"Handle SIGHUP: neutron-server (multiprocess) and metadata agent

All launchers implemented in common.service require each service to
implement reset method because it is called in case a process
receives a SIGHUP.

This change adds the reset method to neutron.service.RpcWorker and
neutron.wsgi.WorkerService which are used to wrap rpc and api
workers correspondingly.

Now neutron-server running in multiprocess mode (api_workers > 0 and
rpc_workers > 0) and metadata agent don't die on receiving SIGHUP and support
reloading policy_path and logging options in config.

Note that reset is called only in case a service is running in daemon mode.

Other changes made in the scope of this patch that need to be mentioned:

* Don't empty self._servers list in RpcWorker's stop method

  When a service is restarted all services are gracefully shutdowned,
  resetted and started again (see openstack.common.service code).
  As graceful shutdown implies calling service.stop() and then
  service.wait() we don't want to clean self._servers list because
  it would be impossible to wait for them to stop processing
  requests and cleaning up their resources.
  Otherwise, this would lead to problems with rpc after starting
  the rpc server again.

* Create a duplicate socket each time WorkerService starts

  When api worker is stopped it kills the eventlet wsgi server
  which internally closes the wsgi server socket object. This server
  socket object becomes not usable which leads to ""Bad file
  descriptor"" errors on service restart.

Added functional and unit tests.

DocImpact
Partial-Bug: #1276694
Change-Id: I75b00946b7cae891c6eb192e853118e7d49e4a24"
53ec63c430d123cd1ed4acd3b94537e9cb380bcd,2015-06-09 08:56:51-07:00,"Fix a regression in ""Separate ovs-ofctl using code as a driver"" change

The tunnels are not getting established between Network Node and
Compute Nodes in non DVR mode with l2pop enabled and throws
the AttributeError: add_tunnel_port.

This fixes a regression in change Ie1224f8a1c17268cd7d1c474ed82fdfb8852eaa8.

Co-Authored-By: YAMAMOTO Takashi <yamamoto@midokura.com>
Closes-Bug: #1461486
Change-Id: I1106fd3dd32f6f827eb25dec4815ff1120af96f0"
9143ce10e422bd17c4817dfe08163879e0e5a4ca,2015-06-09 17:07:13+00:00,"Consume oslo.policy

Some non intrusive changes to tests are needed, so that we don't rely on
library symbols that are now private (f.e. parse_rule).

Closes-Bug: #1458945
Change-Id: I90326479e908042fec9ecb25fa19a8dd5b15e7d8"
b8a09568b5bde8b71ad00468c27b757c98d9c0da,2015-06-09 17:48:06+00:00,"Merge tag '2015.1.0'

This is a null-merge of the 2015.1.0 release tag back into the master
branch so that the 2015.1.0 tag will appear in the git commit history of
the master branch. It contains no actual changes to the master branch,
regardless of how our code review system's UI represents it. Please
ask in #openstack-infra if you have any questions, and otherwise try
to merge this as quickly as possible to avoid later conflicts on the
master branch.

Change-Id: I69e520148633c8f1ec1be019ec83f06f11b84060"
6886655b491aede40aa9f4a0bd4c6d402d5a7a78,2015-06-09 13:50:03-07:00,"Context: Remove logic for read_deleted and deprecate it

The read_deleted parameter in the Context object is simply unused.
This patch removes associated logic, and for what is worth, adds
deprecation warnings against explicit usage of read_deleted when
creating a context instance, generate an admin context, and
elevating a context instance.

Change-Id: Ic69d22dc229ebe8fac1f6be0c4860d19732505b1
Closes-Bug: #1449462"
27df3e9fb98407e94bdeb9df493a9a3a0be639ca,2015-06-10 19:56:19+02:00,"Ensure no ""agent"" functional tests are skipped in the gate

Some ""agent"" functional tests[1] can be skipped if some requirements are
not satisfied in order to allow developers to run functional tests on
various environments. These tests should not be skipped in the gate.

This change defines the decorator no_skip_on_missing_deps[2] to ensure
no ""agent"" functional tests are skipped in the gate. More precisely
no_skip_on_missing_deps transforms a skipTest into an error in:

* dsvm-functional and dsvm-fullstack jobs,
* functional and fullstack jobs when OS_FAIL_ON_MISSING_DEPS is
  evaluated as True.

The change enlarges OS_FAIL_ON_MISSING_DEPS environment variable scope
(ie: missing dependencies + system requirements).

[1] in neutron.tests.functional
[2] in neutron.tests.common.base

Change-Id: Iacd4a5ef249fc1d7c75135ead9d0cf99d8a98a06
Closes-Bug: #1459844"
c34ce7c9845cc56f981e0ee8714d1f9345df5852,2015-06-10 11:07:08-07:00,"Moving out the cisco n1kv section to stackforge

Since most of the n1kv plugin code resides in stackforge/networking-cisco
repo, it's best to move the n1kv section there

Change-Id: Ic1388980dea0d27dfa5e84869f1f20cc9bff78e5
Closes-Bug: #1441400"
1552f311532fdbd03a79ecfc1fae488b072c5a14,2015-06-11 15:19:12+03:00,"Fix Enum usage in 589f9237ca0e_cisco_n1kv_ml2_driver_tables

PostgreSQL is more sensitive with types than MySQL, it creates a
separate type when a Enum is created. In migration 589f9237ca0e
type profile_type is trying to be created, but the type with such
name was already created in havana_initial migration.

The solution for this is not to create type in 589f9237ca0e
migration when dialect is PostgreSQL and use already created.

Closes-bug: #1463301

Change-Id: I66e74d50cc70673de8635616076779cc20cde113"
ba2c44ef000221f8a18274a9569838d8c26014c0,2015-06-12 16:43:27+00:00,"Revert ""Revert ""Set default of api_workers to number of CPUs""""

This reverts commit 12a564cf03e612dda36df26df8d28dfc75f1af6e.

We should re-enable this feature on a controlled basis so that we can
flush out any outstanding issue we may have.

Related-bug: #1432189

Change-Id: I2cfd93fdb032b461022b729347390ff8636ccdeb"
1318437a0caf38e695a819848832a955fef7d909,2015-06-15 05:42:59+04:00,"Skip rescheduling networks if no DHCP agents available

This eliminates the problem of unscheduled networks in case
of communication failure between agents and servers which
can occur if messaging queue service fails.

Change-Id: Ied4fa301fc3d475bee25c47f3a01c2381ae9a01e
Closes-Bug: #1461714"
278a5fce29504c43d669feed210f7b3627616e22,2015-06-15 11:17:47+02:00,"Use PyMySQL in MySQL related functional/fullstack tests

mysql-python driver has been replaced by PyMySQL driver[1] in neutron
code but MySQL related functional/fullstack tests try to use
mysql-python driver because of MySQLOpportunisticTestCase[2] and tests
are skipped because mysql-python driver is no more available.

This change provides a backend implementation for mysql+pymysql, a base
base testcase MySQLTestCase[2] using mysql+pymysql implementation
(currently oslo.db provides none of them but will in the future) and
replaces MySQLOpportunisticTestCase with MySQLTestCase.

[1] I73e0fdb6eca70e7d029a40a2f6f17a7c0797a21d
[2] neutron.tests.common.base

Closes-Bug: #1463980
Change-Id: Ic5c1d12ab75443e1cc290a7447eeb4b452b4a9dd"
b370c69b75fe38cd285512f9516ce428e8a806dd,2015-06-15 11:18:03+02:00,"Ensure no ""db"" related functional/fullstack tests are skipped in the gate

Currently neutron uses MySQLTestCase[1] and
PostgreSQLOpportunisticTestCase[2] for functional and fullstack tests
using a real MySQL/PostgreSQL database. These classes skip tests when
the db is unavailable (db not installed/configured, missing packages,
etc.) which is fine when tests are runned by developers but not when
runned by the gate jobs.

This change updates MySQLTestCase[1] and defines PostgreSQLTestCase[1]
as PostgreSQL oslo.db test class wrapper: when the db is unavailable,
these classes ensure tests will:

* fail in the gate (dsvm-functional, dsvm-fullstack jobs),
* be skipped by default otherwise (functional, fullstack jobs).

[1] neutron.tests.common.base
[2] oslo_db.sqlalchemy.test_base

Closes-Bug: #1404093
Change-Id: I77b12e728ce9a7b0222c3df081842635f6375a3e"
ad1c7a35dec614a26de0a426950fa005df5f489d,2015-06-15 09:17:32-04:00,"Remove get_namespace from API extensions

Based on the conversation on the ML.

http://lists.openstack.org/pipermail/openstack-dev/2015-June/066219.html

APIImpact
DocImpact

Closes-Bug: #1464023
Depends-On: 6f900fc429bf24cb31e0d2f149aa732055fd5956
Change-Id: I3c406910991c33cf959c5345d76153eabe3ace2d"
fca84f69659e4e81790de405213f31e80fd8c239,2015-06-16 15:03:14+03:00,"Juno_initial migration

Havana was deprecated with the kilo release, and icehouse will be
deprecated with the liberty release, so havana_inital migration should be
removed and replaced with juno_initial.

Closes-bug: #1461103

Change-Id: I2e6802c9ab64d164bd888278d555dfeeaf47257b"
8f2014ea556404fb99c78add1e46b80c718cf491,2015-06-16 07:02:36-07:00,"Refactor scan_ports() and update_ancillary_ports() in OVS Neutron Agent

Used a helper method which contains the common code from scan_ports()
and update_ancillary_ports(). And also renamed the name of
update_ancillary_ports() method to scan_ancillary_ports() to have parity
between normal ports and ancillary ports.

Added unit tests for scan_ancillary_ports.

Co-Authored-By: Romil Gupta <romilg@hp.com>

Partial-Bug: #1329223

Change-Id: I8b3e00a9371d5a03cc8b4be24bf20eec10bef5df"
4e77442d529d9803ff90de905b846af940eaf382,2015-06-17 02:06:02-07:00,"Add deadlock retry to API and ML2 RPC port update

With the switch to the pymsql SQL driver, eventlet will now yield
during database transactions. This greatly increased our probability
of multiple coroutines running transactions on the same table that
result in deadlocks.

These deadlocks could result from many things including the following:
* a coroutine holding a pessimistic ""SELECT for UPDATE"" lock when
  another tries to update the locked records
* two coroutines both issue update statements using a WHERE clause
  invalidated by the other update (e.g. from a compare and swap approach)
* two coroutines insert records that, when combined, violate a unique
  constraint on the table in a master-master Galera deployment
* any two workers using ""SELECT for UPDATE"" in a master-master Galera
  deployment (write-set certification failure translates to deadlock)

This problem is exacerbated by the switch to multiple API and RPC
workers, each of which can lead to most of the errors above even
without the switch to pymysql.

This patch adds a deadlock retry decorator to the delete, create,
and update methods at the HTTP API layer. Additionally, it adds a
decorator to the update_port_status AMQP API in ML2 since it updates
the port table, which is a heavily locked table by ML2 making it a
prime candidate for deadlocks.

Nova has had relied on the deadlock retry mechanism for quite some
time now. We were limping along by not using additional workers and
by relying on the unyielding nature of the MySQL C driver to
serialize everything.

Closes-Bug: #1464612
Change-Id: I635cc49ca69f589f99ab145d4d51e511b24194d2"
7d704db18ec7635328bfce7dc6e936151f264f1f,2015-06-17 09:43:35+00:00,"Refactor rpc_loop() in ovs neutron agent

This patch segregates the port_info recieved by
scan_ports and scan_ancillary_ports.

This refactoring is basically required for this patch set:
https://review.openstack.org/#/c/165023/

Co-Authored-By: Romil Gupta <romilg@hp.com>

Change-Id: I9b43c230cda9d2659ad0e806bebe8a3dc12826ec
Partial-Bug: #1329223"
76dd333167920f447bdbedbbee10fdab593abe5b,2015-06-17 14:05:53+03:00,"Fix cisco_csr_identifier_map.ipsec_site_conn_id

Some database engines require exact match of sizes of foreign keys
and referenced fields. Foreign key ipsec_site_conn_id of table
cisco_csr_identifier_map is varchar(64) but it references field
id varchar(36) of table ipsec_site_connections. This gives error
while running migration scripts in such databases.

This fix only applies to new installations. Existing databases will
be corrected by migration scripts introduced in
https://review.openstack.org/190569 - they will take care of resizing
the field and adjusting the model.

Change-Id: I6cc9625a2d96d1330b06eb727cc7fa5363c697b8
Depends-On: I384a9bbaba05ef94174b666bdcfb276eedc74134
Closes-Bug: #1463806"
4a73ab99c9fcc63adbbb41d4a9b9ba8669afdc61,2015-06-17 14:39:32+02:00,"Move get_inteface_by_ip from LinuxBridge class to ip_lib

get_interface_by_ip is moved fro LinuxBridgeManager to ip_lib
as a more generic get_device_by_ip.

System-faking unit tests have been switched for functional
testing that also performs a negative test.

This can be reused in the openvswitch-agent code to validate
local_ip reusing the LinuxBridge logic.

Change-Id: I9237871a6e24dd99556c71844624be510e20d289
Related-Bug: #1464178
Related-Bug: #1408603"
31f846c1b9fa17d1812f78dffe1dcf883da52bab,2015-06-18 14:31:24+08:00,"Fix 'router_gateway' port status can't be updated

when it creates a ovs bridge without parameter 'bridge-id',
it's default 'bridge-id' is None, so ovs agent should also
deal with these ovs bridges, for example if ancillary bridge
br-ex does not be handled, the 'router_gateway' port status
can't be updated.

Change-Id: If428eadadfd36a9b19ea75920120e48ac49659f2
Closes-Bug: #1416181"
cdde9a3aeb929e80aa3c251a44060b8174ab7b6c,2015-06-18 10:03:44+00:00,"read_hosts_file_leases shouldn't parse stateless IPv6

Error when _read_hosts_file_leases tries to parse stateless IPv6 entry
in hosts file
TRACE neutron.agent.dhcp.agent ip = host[2].strip('[]')
TRACE neutron.agent.dhcp.agent IndexError: list index out of range

Neutron creates entries in dhcp host file for each subnet of a port.
Each of these entries will have same mac address as first field,
and may have client_id, fqdn, ipv4/ipv6 address for dhcp/dhcpv6 stateful,
or tag as other fields.

For dhcpv6 stateless subnet with extra_dhcp_opts,
host file will have only mac address and tag. So _read_hosts_file_leases
shouldn't check for ip address for this entry in host file.

Closes-bug: #1465330
Change-Id: Iad6605ac5c7bcd6ec9204352037ed021f5007738"
63e318f5f8159f108cf1e7a82c952fa5f882870f,2015-06-18 14:17:24+03:00,"Fix SR-IOV mech driver to set port status to down when agent is required

SR-IOV mech driver has 2 modes agent and agent-less. Currently in both
modes port status are active. This patch update the port status to down
when using agent mode. This will allow the SR-IOV agent to get port
update notification and apply its additional functionality
when launching vm.

Co-Authored-By: Berezovsky Irena <irenab.dev@gmail.com>

Closes-Bug: #1464186

Change-Id: Ibd9b31b4f2393b8732253d5cbfd36e8b5614860d"
42826a0e64b3499cda065fd9ffdf0b5af5754c85,2015-06-18 17:53:18+00:00,"Fixed the only sphinx warning in docs

We made previous attempt to get rid of all warnings, but it turned out
that gate does not execute tox's docs job but runs build_sphinx
directly.

The latter behaviour should be fixed, but while at it, we
should prepare neutron job to be executed in gate by cleaning up all
warnings.

Closes-Bug: #1466554

Change-Id: I8c265eae2175425568479116d1faef7d87fdcc02"
e3710f59481b4f9c3430228e8f074c845e93fbe7,2015-06-19 14:17:05+08:00,"Don't delete DVR namespace if there are still ports on this node

Skip deleting DVR namespaces if they contain ports in the BUILD or
DOWN status.

Change-Id: I026f2014ede800c0f4532ca15f1fccdaa59d5b61
Closes-bug: #1464527"
a04f44412bca2fce75ee32d16c71f6787b8a1682,2015-06-19 09:11:01+00:00,"Add sanity_check for keepalived ipv6 support

Currently Neutron does not validate the version of Keepalived.
In order to support configuring IPv6 default route, the minimum
version [1] of keepalived that is required is 1.2.10
This patch validates the required support in keepalived.

Although keepalived changelog mentions that IPv6 virtual_routes and
static_routes are supported in version 1.2.8, it is seen that in
v1.2.8 IPv6 default route is not supported. Support for default route
is added in keepalived v1.2.10. Observations on v1.2.8 are captured
at the following link - http://paste.openstack.org/show/165403/

[1] - http://www.keepalived.org/changelog.html

Closes-Bug: #1415756
Change-Id: I768ae233d2c2e24df93a4736ef6d8f4005770fa5"
6669ee9af6bd635ae7efbc2f02e10914549ef708,2015-06-19 11:04:59+01:00,"DHCP agent: Set an ""ipxe"" tag to work with Ironic

Ironic expects neutron to have an ""ipxe"" tag for the option 175 which is
sent by iPXE/gPXE when booting a node. The problem is that up to now this
tag was not created by Neutron, causing the nodes deployed with Ironic
+ iPXE to fail to boot. This patch is creating this tag when launching
the dnsmasq process.

DocImpact
Change-Id: I45a0f51365b37e7d85848fcdcbcf7aa6a1dddfed
Closes-Bug: #1442123"
538a7bf3c73d968185590d81a9b3a6523190aeb4,2015-06-19 04:02:12-07:00,"NSX QoS ext: RXTX factor can be decimal

In Nova flavors it is ok to specify a decimal RXTX factor.
For this reason when applying QoS to a port Neutron should not
convert this factor to an integer value, but simply ensure
it's a valid float number and positive.

Partial-Bug: #1463363

Change-Id: I983123ef7fd8f1b52b358aff3b579459fce63033"
b336b7c438f3f5d4ee8d23d6bb2d2cf8fe1657f4,2015-06-19 15:53:52+02:00,"Disable keepalived process in keepalived func test

Previously, keepalived process itself was disabled that lead to
respawning of keepalived by KeepalivedManager. This patch disables
KeepalivedManager in cleanup thus no respawn happens.

Closes-Bug: #1466873
Change-Id: If5524116e5d4fc41600920d31481282c5b797f7b"
74b0c53da5d7e4305606c100becf34966d8af350,2015-06-19 17:38:53+03:00,"Fix l3 agent to not create already deleted router

In case router is deleted during l3 agent resync,
the ""deleted"" event is processed with higher priority, then
resync event for the router may be processed which will recreate
already deleted router.
This happens due to timestamp not being properly updated for deleted
router in router processor.
The fix adds timestamp update for deleted router.

Functional test will be updated in a follow-up patch

Logging was improved to make debugging a bit easier.

Closes-Bug: #1455439
Change-Id: I2d060064acccc10591a3d90be9011f116548cfce"
35654ec23ef9db6bda313ea300ab76c287a98ceb,2015-06-19 21:46:31+00:00,"Decompose DVR CSNAT L3 Agent from Compute Node L3 Agent

Currently the same dvr router class is used both by the L3 Agent
in the compute nodes that is responsible for the virtual routers
namespace and the fip namespace and also used by the centralized
SNAT L3 Agent in the network node.
This is the first step to decompose the two into different
classes.

The above means that we have one class of DVR router which is used
for two jobs (the virtual router namespace wiring and the fips wiring
in the compute node in one hand and the centralized snat wiring in the other)
The end goal of this patch is to separate the two into different classes
which will also help maintaining it and also help projects that want
to use one but not the other (for example only use the centralized
SNAT behaviour with there own DVR implementation)

Change-Id: I581a097b9e7c49f20d0eb0e4ca66a25e90d9511b
Partial-Bug: #1458541
Partially-Implements: blueprint dvr-router-code-decompose"
d0d62927e661c84003845a61d2b991a54e723ed4,2015-06-20 12:42:20+00:00,"Fix RPC version to be a string

The RPC version was being passed as a float which caused an
exception.

Change-Id: I2a2888fcafcc426009fc841b81049a22e072ce75
Closes-Bug: #1467087"
ee14186fbb2486f9088103e9621bc366cc64c552,2015-06-21 01:40:19-04:00,"Allow setting Agents description to None

Fix the validator for the 'description' attribute of Agents, allowing
it to be set to None.

Fix an API test that had two problems:
 1. It was not restoring the description to the agent it had updated
 2. It was retoring the description to '' instead of None.

Closes-Bug: #1466642

Change-Id: I50723e1346be0953d26216ba24907bac008ccfb6"
3c72832c8b84af673722a34bba25eefc82154b47,2015-06-21 20:14:42-07:00,"Retry port status update on StaleDataError

During update_port_status, a port may be concurrently updated/deleted
by another process, which will result in a StaleDataError being
thrown. In the event it was an update, we want to retry to make sure
the port status is set to the desired state so third parties like Nova
get notified.

This patch uses the oslo_db wrap_db_retry decorator after converting
the StaleDataError into a RetryRequest that the decorator can catch.

Closes-Bug: #1465407
Change-Id: I0a9230d30f435ec3d48f033136e85c40ad489ef9"
c3d65a0ed920110223e1b73d6982968552ca7716,2015-06-22 11:06:18+00:00,"Switch to oslo_utils.uuidutils

Get rid of oslo-incubator uuidutils

Closes-Bug: #1467020
Depends-On: I2df519965883b05d5d58cdc4785c850b0685dc2c
Depends-On: I9f8e98ad9517864a9ffdacf01c0a9a5aab554edb
Depends-On: Ied0faac809a5b72b1cd466c8babc9ca5418692c3
Change-Id: Iebe491b981b4b7c02785412fadd27678bb5e47de"
9efa1fdeed86d249b2d3dde987a1fb98290140f0,2015-06-22 16:13:35+03:00,"l3 agent: do router cleanup for unknown routers

The patch adds cleanup on router delete for routers which
are unknown to agent. This should cover the case when router is
deleted during resync on agent init.

Functional tests were updated and now handle 3 cases for l3 sync:
 - no routers were deleted during agent downtime,
 - some routers were deleted during agent downtime
 - some routers were deleted during agent resync

Closes-Bug: #1464238
Change-Id: Id98111849fa88d6807f757864187b059c491aaac"
fe6654b25044de7d7d15573c689a0f003c018e99,2015-06-22 09:13:56-04:00,"Use string exception casting everywhere

Instead of the deprecated ""message"" member access,
casting to a string invokes the __str__ method of the exception
that is wired to return the message

Added a test of the failure cases of IpRouteCommand::delete_gateway
because they were missing

Running unit and functional tests locally no longer shows the warning
reported in the bug.

Change-Id: Ia79f526aa973ece1145615d65349f860aa3fd465
Closes-Bug: #1466542"
76b4803530c0d5f47659aa519585178cc33cba46,2015-06-22 17:19:44+03:00,"Fix callback registry notification for security group rule

Some housekeeping was done in
 - SecurityGroupDbMixin:
   - create_rule_bulk() calls to create_rule();
   - registry notification is in create_rule();
   - separate validation for a single rule and for a group of rules
 - SecurityGroupServerRpcMixin:
   - overriden methods call to corresponding super class methods;

Hopefully code is now self-documented enough

Closes-Bug: #1461024
Change-Id: Ia75d7e206716bbe74aae89e4cebd0c2c40af68a8"
408af3f7dab477517b1761aeda2b76384f5fffbe,2015-06-22 11:47:54-04:00,"Prepare for full stack CI job

Related-Bug: #1467275

Change-Id: I90f4794f48ae151a888f37df26c087a7fdcd9d31"
c384b13ae6b83a8bad944972c60bdcbe6f4fa050,2015-06-22 23:36:42+00:00,"Add IPset cleanup script

This will aid in removing stale IPsets when we change the prefix
used in creating IPset names.

Change-Id: Ia9ff79c34bd4c9124ec8663a8f616ded4f389f62
Partial-Bug: #1444201"
0a82b8ae1951073ff5f9b096485b3acf1a541428,2015-06-23 11:24:44-07:00,"Fix FloatingIP Namespace creation in DVR for Late Binding

DVR has dependency on the portbinding host to determine
where to start the FloatingIP Namespace when floatingip
is configured. But when we assign a floatingip to a port
that is not bound, even though the API will succeed, the
FloatingIP Namespace will not be created by the Agent and
so the FloatingIP will not be functional.

This patch addresses the issue by creating the Namespace
and configuring the rules when the late binding happens.

The agent will be requesting the FIP agent gateway port,
if required and then proceed to configure the FloatingIP
Namespace.

Change-Id: I9b9158bddb626c2bb535acd709452560546fd184
Closes-Bug: #1447034
Closes-Bug: #1460408"
04d44cee63f3fbba45956abd28f325d5ac3ca2d9,2015-06-23 21:04:06+02:00,"Extend default setenv instead of replacing it in tox.ini

Some tox jobs[1] define their own setenv without extending/referencing
default setenv, it disallows to define environment variables shared by
all jobs. This change updates previous jobs[1] in order to extend
instead of replacing default setenv and enable global environement
variables (used in daughter change).

One remark, this change sets VIRTUAL_ENV environment variable in updated
jobs[1] but it has no effect on them.

[1] (dsvm-)functional, (dsvm-)fullstack and api jobs

Closes-Bug: #1468059
Change-Id: I99184f7375571fb8569a24ba04ae267108f5da08"
7eb9d9d316d35840706a767576ff083c9a04d781,2015-06-24 01:32:44+02:00,"Support oslo_db 1.12

oslo_db 1.12[1] decorates oslo_context.context.RequestContext with
session management[2][3] and add a read-only attribute 'session'. Such
feature breaks Brocade plugin and its unittests because they define
on RequestContext the 'session' attribute which now is a read-only
property. This change uses neutron.context instead of
oslo_context.context in order to delegate session management to the
neutron.context and remove read-only attribute set.

A follow-up change will refactor neutron.context in order to use oslo_db
1.12 session management instead of homemade one.

[1] https://github.com/openstack/oslo.db/releases/tag/1.12.0
[2] https://github.com/openstack/oslo.db/commit/\
    fdbd928b1fdf0334e1740e565ab8206fff54eaa6
[3] https://github.com/openstack/oslo.db/blob/\
    fdbd928b1fdf0334e1740e565ab8206fff54eaa6/oslo_db/sqlalchemy/\
    enginefacade.py#L782

Closes-Bug: #1468128
Change-Id: I0e3331f9a383fa2562706eeadb229f55593b888c"
481d9a4f356d325e60e4c208c93693d755097bcd,2015-06-24 07:33:14+00:00,"dhcp fails if extra_dhcp_opts for stateless subnet enabled

vm on a network having IPv4 and IPv6 dhcpv6 stateless subnets,
fails to get IPv4 address, when vm uses a port with extra_dhcp_opts.

neutron creates entries in dhcp host file for each subnet of a port.
Each of these entries will have same mac address as first field,
and may have client_id, fqdn, ipv4/ipv6 address for dhcp/dhcpv6 stateful,
or tag as other fields.
For dhcpv6 stateless subnet with extra_dhcp_opts,
host file will have only mac address and tag.

If the last entry in host file for the port with extra_dhcp_opts,
is for dhcpv6 stateless subnet, then dnsmasq tries to use this entry,
(as dnsmasq reads the hosts file from EOF) to resolve
dhcp request even for IPv4, treats as 'no address found'
and fails to send DHCPOFFER.

So we sort the fixed_ips, so that ipv6 subnets for the port are added
first in host file, to avoid this issue.

Change-Id: I3bea58d86a3508e49cbac1d03c6b640836b4a7a2
Closes-bug: #1466144"
f527f8cf426ee63b592225d5e691ac107085784d,2015-06-24 02:15:29-07:00,"Don't process network_delete events on OVS agent

There is no reason to reclaim the local VLAN on a network_delete
event since it will be reclaimed when the last port is deleted anyway.

This method was racey with recent port creation events and lead to
occasional traces when it would yank the local VLAN out from underneath
an ongoing port wiring process.

Change-Id: I5eee6175c053006b35b6efe274d27931a9d5d89f
Closes-Bug: #1468251"
a84ef9ae54a7dfe6d9dee54a01b189dd40bce423,2015-06-24 03:31:10-07:00,"Make DHCPv6 out of bounds API test deterministic

The test_dhcp_stateful_fixedips_outrange API test was randomly
picking an IP from last + 1 up to last + 10 in the allocation
range. This made it fail randomly when there was an issue related
to the subnet allocation having an off-by-one issue.

This adjusts the test to just always test last +1 and +2.

Related-Bug: #1468163
Change-Id: I641ab092e0ea0aae67ec717b492118a2f8a6f4fd"
830e9114817765efc93c772dcbc735a6bb28a7ff,2015-06-24 06:51:58-07:00,"Deprecate ""router_delete_namespaces"" and ""dhcp_delete_namespaces""

These 2 configuration options are no longer be necessary.

They are marked as deprecated in this release and will be removed in the
next release.

Change-Id: I4e02a291738b16c7c9b7600f0bc9a47fb1318569
Partial-Bug: #1418079"
2e1b0ea4032f05afef16efd451e2eea5df901d97,2015-06-25 10:09:42+02:00,"ovsdb: attempt to enable connection_uri for native impl on startup

The port is in most cases disabled, so to use it, we should first enable
it, and it means that we should still rely on ovs-vsctl for that initial
call.

Closes-Bug: #1468259
Change-Id: I097b1c441df1f7f1785b8744f27809617bb21c14"
4b4cedaf853664535c05d47c99c920e74d1deb3a,2015-06-25 13:01:11+00:00,"Define SafeFixture base fixture

Currenty useFixture(myfixture)[1] ensures to call myfixture.cleanUp only
if myfixture.setUp succeed.

This change defines a workaround to ensure cleanUp call even if setUp
fails until testtools/fixtures support it: SafeFixture[2] which ensures
cleanUp call if setUp fails and replaces fixtures.Fixture use by
SafeFixture. This workaround will be removed when the bug will fixed in
testtools and fixtures[3].

[1] testtools.TestCase.useFixture, fixtures.Fixture.useFixture
[2] neutron.tests.tools
[3] see related bugs

Change-Id: I875934e8dde321a450c83fb95d175affd1f3bb83
Closes-Bug: #1464410
Partial-Bug: #1453888
Related-Bug: #1456353
Related-Bug: #1456370"
0af5abdb1f608a5e84a64627adf42dd8d5526560,2015-06-25 15:13:46+01:00,"Fix tox errors in thirdparty-ci docs

Fixes errors causing tox failures.

Change-Id: I361ef791c0de1aac1304bb8ad979066400930434
Closes-Bug: #1468765"
747738d36572079307f228a861a067ca0cd815c2,2015-06-25 09:12:21-07:00,"Skip ARP protection if 0.0.0.0/0 in addr pairs

Don't setup ARP protection on ports with allowed address pairs
that allow them to use any IP address. This is necessary because
OVS doesn't support the /0 prefix in rules that match on ARP headers.

Related-Bug: #1461054
Closes-Bug: #1468009
Change-Id: I913a86f22b228aa11fa3dabd9493c3995198f7ec"
334d9a33404f4c8438d105f91bff1a9fd9236513,2015-06-25 16:34:09-04:00,"Log OVS agent configuration mismatch

Change-Id: I55aef3bdc32dcee3436cb8b987fb796a4898b20e
Closes-Bug: #1468893"
0be1efad93734f11cd63fb3b7bd2983442ce1268,2015-06-25 17:06:02-07:00,"Remove ensure_dirs double-patch

test_spawn_radvd called mock.patch on ensure_dirs after the
setup method already patched it out. This causes issues when
mock.patch.stopall() is called because the mocks are stored
as a set and are unwound in a non-deterministic fashion.[1]
So some of the time they will be undone correctly, but others
will leave a monkey-patched in mock, causing the ensure_dir
test to fail.

1. http://bugs.python.org/issue21239

Closes-Bug: #1467908
Change-Id: I321b5fed71dc73bd19b5099311c6f43640726cd4"
993771556332d9b6bbf7eb3f0300cf9d8a2cb464,2015-06-25 18:38:09-07:00,"Remove double callback manager mocks

setup_test_registry_instance() in the base test case class gives
each test its own registry by mocking out the get_callback_manager.
The L3 agent test cases were duplicating this.

Partial-Bug: #1468998
Change-Id: I7356daa846524611e9f92365939e8ad15d1e1cd8"
25ae0429a713143d42f626dd59ed4514ba25820c,2015-06-25 18:38:17-07:00,"Remove double fanout mock

The test_mech_driver was duplicating a fanout mock already setup
in the setUp routine.

Change-Id: I5b88dff13113d55c72241d3d5025791a76672ac2
Partial-Bug: #1468998"
e64062efa3b793f7c4ce4ab9e62918af4f1bfcc9,2015-06-25 18:38:17-07:00,"Remove double mock of dhcp agent periodic check

The test case for the periodic check was patching a target
that the core plugin fixture already patched out. This removes
that and exposes the mock from the fixture so the test case
can reference it.

Change-Id: I3adee6a875c497e070db4198567b52aa16b81ce8
Partial-Bug: #1468998"
ba7d673d1ddd5bfa5aa1be5b26a59e9a8cd78a9f,2015-06-25 18:38:17-07:00,"Remove duplicated call to setup_coreplugin

The test case for vlan_transparent was calling setup_coreplugin
before calling the super setUp method which already calls
setup_coreplugin. This was causing duplicate core plugin fixtures
which resulted in patching the dhcp periodic check twice.

Change-Id: Ide4efad42748e799d8e9c815480c8ffa94b27b38
Partial-Bug: #1468998"
bd3604277f6a550d8757aa96a3164a189ab3af6d,2015-06-26 02:29:32-07:00,"Use last address in v6 allocation pool generation

This reverts commit 1d61c5f736b9df7253a1939fe55f1875f988d1f4,
which reverted ee51ef72d37a02005a7733b7f2faf7236db850a1 due
to an issue with the allocation pools being mis-aligned with
the last address of a v6 subnet.

IPv6 does not have a subnet broadcast address so the last IP
address can be used as a regular address. This patch tweaks the
automatic allocation pool generation to include that last address
on v6 networks.

This was found because
NetworksTestDHCPv6.test_dhcp_stateful_fixedips_outrange makes the
assumption that the default generated pools cover the entire usable
address space.

Related-Bug: #1466322
Closes-Bug: #1468163
Change-Id: I5a2518c819757cd1fb43244901fe3e2f6c576b34"
82fddfbb651911c7cb6818428ff7604c9745499c,2015-06-26 12:35:35+00:00,"Fix ip_lib get_gateway for default gateway on an iface

Currently get_gateway() of IpRouteCommand class always assumes
the presence of gateway_ip when default_route is seen.
Since we can also have interface routes without the gw_ip,
this patch fixes the issue by parsing the output accordingly.

Closes-Bug: #1467531
Change-Id: Icf988994b61cbdeb1261c5a0887f29ced41ada07"
724c78071da28bae838a4145a9d4cea42f853048,2015-06-26 15:06:49+00:00,"Restructure agent code in preparation for decomp

This commit moves the L2 agents (Linuxbridge and OVS) into the
ML2 directory, while at the same time also moving the ML2 server
bits into toplevel directories. It also moves the configuration
files and unit tests. We also move the l2pop RPC mixin while
here as well.

DocImpact
UpgradeImpact

Partially-Implements: blueprint reference-implementation-split
Partial-Bug: #1468433
Closes-Bug: #1427317
Change-Id: If6feca7b7a6bdd6c3c6feb929fa26fb4b1f72770
Signed-off-by: Kyle Mestery <mestery@mestery.com>"
f242b171e910da460b8d98182dc10c5840c2c7d0,2015-06-26 19:51:58+00:00,"Consolidate sriov agent and driver code

In preparation for decomposing the built-in reference implementation,
this commits consolidates the sriov agent and driver code into a
coherent place for it's life in the new repository. I've also given
the unit tests a new home.

DocImpact
UpgradeImpact

Partially-Implements: blueprint reference-implementation-split
Partial-Bug: #1468433
Closes-Bug: #1427317

Change-Id: Ic8b5215de76e191030228bc28773cd6535e889d8
Signed-off-by: Kyle Mestery <mestery@mestery.com>"
78700ba70620f7b53b5ae71332cca853f5afa467,2015-06-26 20:17:46+00:00,"Remove duplicated mock patch of ip_lib

The functional tests for agents were patching ip_lib in the
function to configure an agent, so any tests that relied on
multiple agents would patch ip_lib multiple times.

Partial-Bug: #1468998
Change-Id: Ibccf586dea870ec222369c0876f17f8eaf9a1aca"
1b60df85ba3ad442c2e4e7e52538e1b9a1bf9378,2015-06-26 20:18:51+00:00,"Add a double-mock guard to the base test case

Use mock to patch mock with a check to prevent multiple active
patches to the same target. Multiple patches to the same target
result in non-deterministic behavior when stopall() tries to
undo the patches.[1]

1. http://bugs.python.org/issue21239

Change-Id: I3dd3d561a0267d80f464c15d69a4258b0a5e8aba
Closes-Bug: #1468998"
e2a99fa3c456a57e6e74e53ab04ad4899d1a9cf2,2015-06-27 05:34:19+00:00,"lb-agent: handle security group updates in main loop

Patch I1574544734865506ff5383404516cc9349c16ec4 introduced deferring
firewall refreshes to the main loop of the ovs-agent to improve
performance. This patch enables the same on the linuxbridge agent.

Change-Id: Ia8fe229910d2be718da52cb341be163b86ace571
Closes-Bug: #1368281"
e28aa9761751d7fa12dba1c35076c3c975b7cd3f,2015-06-28 03:20:43+02:00,"Make '_create_router' function handle Boolean kwargs correctly

The function allows arbitrary kw arguments to be specificed.
Those kw arguments whose key is specified in the function
parameter 'arg_list' are then passed in the create router REST
API call.

The code line that checks if a kw argument key is included in
'arg_list' does not work with Boolean kw arguments. Nor does it
work with None kw argument values. This is a limitation as
tests in inheriting classes may need such kw arguments.

This patch fixes the faulty 'if' clause so that it simply
checks that the kw argument key is in 'arg_list'. This makes it
support Boolean kw arguments and kw arguments with value None.

Closes-Bug: #1482108
Change-Id: I5618dc4d5c803c7614dd1f579db3c79928007fb6"
f4e1289d8d381b775f7a6e5f98c507a99fd42b54,2015-06-29 09:31:43+08:00,"populate port security default into network

Previously, the default value would be populated into attr by API
controller, but some codes in plugin or service plugins call plugin
to create network directly, such as l3, which will have no default
value populated.
This patch fixes it by populating default port_security value into
network data.

In addition, for network without port-security set, we also give the
default value to populate the return network dict object, which will
let the extension construct the response dictionary gracefully for
those existing network.

Co-Authored-By: gong yong sheng <gong.yongsheng@99cloud.net>

Change-Id: I73abc98d83372f6259f17680806e6541458e2077
Closes-bug: #1461519
Closes-Bug: #1461647
Closes-Bug: #1468588"
e50e1a236983e0a59b9667bc546c92555c3d0e34,2015-06-29 05:40:26+04:00,"Add logging of agent heartbeats

When troubleshooting problems with cluster it would be
very convenient to have information about agent heartbeats
logged with some searchable identifier which could create
1-to-1 mapping between events in agent's logs and server's logs.

Currently agent's heartbeats are not logged at all on server side.
Since on a large cluster that could create too much logging
(even for troubleshooting cases), it might make sense to make
this configurable both on neutron-server side and on agent-side.

DocImpact

Change-Id: I0a127ef274a84bba5de47395d47b62f48bd4be16
Closes-Bug: #1452582"
604101ec58d8dd6e6af4aa61c0b2f0d382f89931,2015-06-28 20:46:04-07:00,"Add documentation for Linux Bridge (previously missing)

Change-Id: I092b609f43b37ed85d08bc80d1d048b945abe222
Closes-Bug: #1455979"
6d35f5fa91faf24694cf22bf9290f4743175b051,2015-06-29 13:01:57+09:00,"Fix subnet updating failure on valid allocation pools

Currently subnet updating with both allocation-pool and
gateway_ip options is failing because of wrong parameter check.
The check always checks gateway_ip against allocation pools in
db, even when the allocation_pool parameter is given.The fix
checks if given parameter of gateway_ip option doesn't conflict
with given parameters of allocation-pool.

Change-Id: Ia568aa1645b3160ab90a6010efd9a2b9b0d31ac8
Closes-Bug: #1469573"
6e693fc91dd79cfbf181e3b015a1816d985ad02c,2015-06-29 13:20:55+03:00,"Switch to oslo.service

oslo.service has graduated, so neutron should consume it.

Closes-Bug: #1466851
Depends-On: Ie0fd63f969f954029c3c3cf31337fbe38f59331a
Depends-On: I2093b37d411df9a26958fa50ff523c258bbe06ec
Depends-On: I4823d344878fc97e66ddd8fdae25c13a34dede40
Change-Id: I0155b3d8b72f6d031bf6f855488f80acebfc25d4"
8942fccf02e6e179d47582fdb2792a1ca972da21,2015-06-29 11:43:49-04:00,"Remove failing SafeFixture tests

The fixtures 1.3 release attempted to fix the fixtures resource
leak issue, but failed to do so completely. Our own SafeFixture
is still needed: The 1.3 release broke our SafeFixture tests,
but not the usage of SafeFixture itself. This patch removes
those failing tests for now to unbreak the gate. Jakub reported
a bug on fixtures 1.3:
https://bugs.launchpad.net/python-fixtures/+bug/1469759

We will continue to use SafeFixture until that bug is fixed
in fixtures, at which point we will be able to require
fixtures > 1.3.

Change-Id: I59457c3bb198ff86d5ad55a1e623d008f0034b8f
Closes-Bug: #1469734"
4dc68ea88bf4f07b13253bf9eeedffe22b1f8013,2015-06-29 17:37:59-07:00,"Read vif port information in bulk

During startup, the agent was making many calls per port
to read information about the current VLAN, external ID, etc.
This resulted in hundreds of calls just to read information about
a relatively small number of ports.

This patch addresses that by converting a few key functions to
lookup information for all of the ports at once.

Performance improvement on dev laptop for 250 ports from agent
start to port ACTIVE status:
   before: 1m21s
   after: 1m06s

Closes-Bug: #1460233
Change-Id: Ic80c85a07fee3e5651dc19819c6cebdc2048dda7"
9b23617111706ef6a89e8ba45457238acaea26e2,2015-06-29 22:26:10-07:00,"Increase ping count on ARP spoof test

The other IPv4 tests all have a count of 2 to tolerate
ping failures due to slow ARP response/interface setup/etc.
This patch increases test_arp_spoof_allowed_address_pairs_0cidr
to 2 to match.

Closes-Bug: #1470234
Change-Id: I82bd8397672194f6162eef5392d4f19d57450552"
8dd8a7d93564168b98fa2350eedf56acede42b0f,2015-06-30 12:06:07-04:00,"Remove bridge cleanup call

Remove the bridge cleanup call to delete bridges, since we are seeing
race conditions where bridges are deleted, then new interfaces are
created and are attempting to plug into the bridge before it is
recreated.

Change-Id: I4ccc96566a5770384eacbbdc492bf09a514f5b31
Related-Bug: #1328546"
3da491cf5fe629559281507f65f12a0e34eaedf7,2015-06-30 13:22:17-04:00,"Disable pylint job

Disabling pylint until it gets unbroken. Pylint 1.4.1 is using
logilab-common, which had a release on the 30th, breaking pylint.
Pylint developers are planning a logilab-common release tomorrow
which should unbreak pylint once again, at which point I'll
re-enable pylint.

Change-Id: I5d8aaab8192168946c2a0b74abc1a56848ca51a2
Related-Bug: #1470186"
0a3279107ffe483348cdf5ed4614537e72cbf62a,2015-06-30 14:58:50-04:00,"Move pylint dep from tox.ini to test-requirements

This allows us to pin pylint from global requirements.

Closes-Bug: #1470186
Depends-On: Ibad8cd2911efbe075ea2629c543f6ce1f216c938
Change-Id: I31cc18e0b4cd32728f5814aa9dbf403104f72c72"
7344e3ab8e3d4fd8af5b6f85184a0c093d88b6a4,2015-07-01 14:53:48+12:00,"Improve fixture usage.

There were two broad issues with fixtures.

Firstly, the 'SafeFixture' workaround for resource leaks in fixtures
<1.3 is not needed if we depend on fixtures>=1.3.1. While testtools
may raise a TypeError when trying to query a fixture that failed to
setup, this is only ever a cascading failure - it will not cause
tests to fail, cause leaks, or cause tests to incorrectly pass. That
will be fixed in testtools soon to stop it happening (but as it cannot
affect whether a test passes or fails or leaks happen there is no
reason to wait for that). Leaks are seen with fixtures 1.3.0 still
because eventlet raises a BaseException subclass rather than an
Exception subclass, and fixtures 1.3.0 didn't handle that - 1.3.1 does.

Secondly, some of the fixtures had race conditions where things were
started and then cleanups scheduled. Where possible I've fixed those,
but some of them require more significant work to fully address.

Change-Id: I3290712f7274970defda19263f4955e3c78e5ed6
Depends-On: I8c01506894ec0a92b53bc0e4ad14767f2dd6a6b3
Closes-bug: #1453888"
3e2ef95dfdfe19a0097f8d68f453cbabbb8f2169,2015-07-01 12:45:34+00:00,"Add bandwidth_limit rules as sub-collection of qos policy

This patch add support for qos extension according to the
spec modification [1].

[1] https://review.openstack.org/#/c/197004/

Change-Id: I9226932191464face6e20625e35ad4b7529db4ca"
49569327c20d8a10ba3d426833ff28d68b1b7a27,2015-07-01 13:54:50-07:00,"Fix log traces induced by retry decorator

Patch 4e77442d5 added a retry decorator to the API layer
to catch DB deadlock errors. However, when they occur, the
retried operation ends up being ineffective because the original
body has been altered, which leads the notification and validation
layers to barf exceptions due to unrecognized/unserializable elements.

This ultimately results to an error reported to the user.

To address this, let's make a deep copy of the request body, before
we pass it down to the lower layers. This allows the decorator to
work on a pristine copy of the body on every attempt. The performance
impact for this should be negligible.

Closes-bug: #1470615

Change-Id: I82a2a002612d28fa8f97b0afbd4f7ba1e8830377"
f1771131a85a2fe633126f354364205554ef71d1,2015-07-01 21:22:57+00:00,"Change the half of the bridge name used for ports

The code to generate the names of the patch ports
was based on a chunk of the bridge name starting from
the beginning. With the long suffix, this ended up
excluding all of the random characters in the name.
(e.g. br-int374623235 would create an interface br-in-patch-tun).

This meant that if two tests using patch interfaces ran together,
they would have a name collision and one would fail.

This patch updates the patch port name generation to use the
randomized back portion of the name.

Change-Id: I172e0b2c0b53e8c7151bd92f0915773ea62c0c6a
Closes-Bug: #1470637"
55cb8e4026f025a351896909ba6fa05e3f882003,2015-07-02 04:59:27-07:00,"OVS native DBListcommand if_exists support

Add support for the if_exists flag to the OVS native
db list command.

Closes-Bug: #1470742
Closes-Bug: #1470894
Change-Id: Ife48d99c145cfab7f0f5523f4cdfd33492085355"
571453c614577ffd47e23de9a35863d2f2119583,2015-07-02 12:46:50+00:00,"Update dhcp host portbinding on failover

When a dhcp server is moved to new host on failover,
tunnel is not created.

When a dhcp server is moved to new host,
1) network-hostagent binding is updated(properly i.e with new host).
2) dhcp port-hostagent binding is not updated
   ( dhcp port is still bound to old host)
If dhcp port-bound agent is different from the new dhcp agent
(which is now taking care of this dhcp port), neutron plugin won't
 notify the l2pop, and hence tunnel is not created.

As after failover, the new agent is taking care of this dhcp port,
update portbinding with the new host. This will allow neutron plugin
to notify l2pop(which will create tunnel).

Change-Id: Ib7d7dcddee005395af116ccd31a43853332ae317
Closes-bug: #1411163"
46608806aa7a9c60214e28429ca5a8b87b2a15de,2015-07-03 18:29:07+03:00,"DVR: cleanup stale floating ip namespaces

During l3 agent periodic resync NamespaceManager takes care
of cleaning up stale router namespaces. This is true
for qrouter- and snat- namespaces. However stale fip-
namespaces also need to be cleaned up.
The patch adds fip-ns handling to the NamespaceManager.

Closes-Bug: #1470909
Change-Id: Ib6a8ae2ff66c0e1dd0978838c3f274748898f73e"
26f50761efaa5bc362e35a41f0adc458e0224296,2015-07-04 07:34:24+00:00,"Update DVR agent to use get_vifs_by_id

The new get_vifs_by_id function retrieves all of the VIFs
for a port iteration at once to eliminate unnecessary multiple
calls to OVSDB.

Change-Id: If18557faead836121bfa3b4e6efccd0318ce72d3
Related-Bug: #1460233"
04197bc4bbf2bc611371060db839028c2686f87a,2015-07-06 23:04:06-07:00,"Add ARP spoofing protection for LinuxBridge agent

This patch adds ARP spoofing protection for the Linux Bridge
agent based on ebtables. This code was written to be minimally
invasive with the intent of back-porting to Kilo.

The protection is enabled and disabled with the same
'prevent_arp_spoofing' agent config flag added for the OVS agent
in I7c079b779245a0af6bc793564fa8a560e4226afe.

The protection works by setting up an ebtables chain for each port
and jumping all ARP traffic to that chain. The port-specific chains
have a default DROP policy and then have allow rules installed that
only allow ARP traffic with a source CIDR that matches one of the
port's fixed IPs or an allowed address pair.

Closes-Bug: #1274034
Change-Id: I0b0e3b1272472385dff060897ecbd25e93fd78e7"
5b6ca5ce898a2e9a810ec49a1712337a41822788,2015-07-07 11:13:41-07:00,"Make sure path_prefix is set during unit tests

Change 18bc67d5 broke *-aas unit tests.

This change ensures that mocking is done correctly, the same way
it is done for the other plugin attributes

Change-Id: I4167f18560e3a3aad652aae1ea9d3c6bc34dc796
Closes-bug: #1472361"
2feb44d81d2b48180f8481abcdc7ffe6857d473a,2015-07-08 03:02:16-07:00,"Add sub-project lieutenant for networking-plumgrid

Since networking-plumgrid has been approved [1] in
governance to be part of Neutron. So as per the
concept of Lieutenants for Neutron, this patch defines
clear point of contact for networking-plumgrid.

[1] https://review.openstack.org/#/c/197168/

Change-Id: I01706b69aac5ac3970913320ff717dc561ea4f8f"
e0abd3f1039f57cc825a844a33e8341534377d31,2015-07-08 17:36:34+00:00,"In Arista ML2 driver Reconfigure VLAN on VM migration

Whenever a VM moves from one compute node to the other, the VLAN on the old
switch interface was not removed and the VLAN was not being provisioned on the
new switch interface. With this patch, the VLANs are provisioned correctly.

Closes-Bug: #1471050
Change-Id: I658ef87ffd82119f41beda9ba019e29a62dc96ff"
324787c0b4bf6b8208c781a4c79dc7f14e67d8d6,2015-07-09 09:54:38+02:00,"Correct fcntl.flock use in Pidfile.unlock

This change corrects Pidfile.unlock[1] implementation, indeed currently
it uses fcntl.flock response as a condition but fcntl.flock is a ""void""
function.

[1] neutron.agent.linux.daemon

Closes-Bug: #1472725
Change-Id: If2320f29095ed388f9f6fe59d4d9b80d04adaa85"
310e1e05537f0ba0dd66fe3ffdda3837e90d1a8d,2015-07-09 17:33:17+00:00,"Make IPAM more pythonic

__init__.py is usually an empty file, or contains platform specific
code to make the package function. One more use is to have __init__.py
contain import statements, to import functions and classes, for convenience.

http://docs.python-guide.org/en/latest/writing/structure/#packages
http://mikegrouchy.com/blog/2012/05/be-pythonic-__init__py.html

Change-Id: I7408ac95f4970fbd7009257dfb698102ffabb6e3"
3a871a73b88f8b75d64c88271b6fc6cdd4b1cfc0,2015-07-09 17:54:32-07:00,"Fix failures introduced by the new version of mock

This reverts commit 1b60df85ba3ad442c2e4e7e52538e1b9a1bf9378.

The new version of mock is now released which has the fix to
make mock.patch.stopall behave deterministically. The code to
stop double-mocking is no longer required.

Other fixes:

'assert_has_calls' that have changed behavior in the new version
(no longer accepts single calls).

Calls to non-existent assert methods that did not exist and were
silently passing.

Use of autospec on a class with decorated functions.

Closes-Bug: #1473369
Change-Id: I164a9af2a7f9ac0f0229ec3c5071f7a470445c98"
1025baec55235bf4981872390f1bb65f4e3ae7e6,2015-07-10 18:55:58+08:00,"Fix duplicate entry catch for allowed address pairs

If None is submitted as a MAC address in an allowed_address_pair,
the port MAC will be used. So if two entries are submitted with the
same IP and one's MAC is None while the others is the port's MAC,
they will pass the API duplication check and fail to insert into the DB
due to a unique constraint violation.

This patch catches the db error and turns it into the same exception
the API uses on duplicate entries.

Closes-bug: #1373756
Change-Id: Ide995810d6fe0481d3add206bf0674cbbde7f05f"
dfbe804994a576994768c95720b4f0ba53e313d7,2015-07-10 10:47:50-04:00,"get_vif_ports: ignore non-Interface ports

This patch updates get_vif_ports so that it skips
ports which aren't in the 'Interfaces' table.

This fixes an issue where neutron-ovs-cleanup would
fail if any sort of OVS bond was on the bridge getting
cleaned up.  This is because bonds don't have the same
attributes as ports, and thus fail subsequent ovs-vsctl
queries.

Change-Id: Ic9d30e5916122ce23c5dc8631fbb71115ae8a960
Closes-bug: #1473179"
454ced5e0f8bb01ef7d64c9f507bf2b35d8fc553,2015-07-10 11:16:49-04:00,"Add constants for vhost-user vif

This change amends the portbinging extention to include
defintions of the VIF_TYPE_VHOST_USER and its related
VIF_DETAILS attributes

Change-Id: Idda3631b766ea9d7329d3b4beb6eb34a73870684
Closes-Bug: #1473278"
5b066a237ec0918d882ef2455aef4f2f9cb0606c,2015-07-11 00:33:31+02:00,"Enforce specific order for firewall.(un)filtered_ports and devices

Lots of tests in the file rely on specific order of devices and ports
with which they are iterated thru inside firewall implementation. This
is needed to match a regexp against iptables output generated by the
firewall driver.

In production code, those .(un)filtered_ports dictionaries are
unordered, and it would be not wise to enforce the order for them just
for the sake of those unit tests.

Instead, we 'patch' the agent firewall with ordered versions of dict for
those attributes.

Also enforce specific order for device_info dictionaries we pass into
firewall.

The failure was easily reproducible with PYTHONHASHSEED=111, and after
the fix, it's gone.

While at it, stop making assumptions about stable order of dict.values()
between multiple dictionaries with the same keys. It may actually work
for now, but it seems fragile. Overall simplified regex construction
code a bit, f.e. killing some dead or redundant code.

Closes-Bug: #1473413
Change-Id: I170087426bc961592b4c4923c64a5fea30d51c21"
75859529cf878dcc1b59768fac2b8a2ad14822df,2015-07-12 00:48:51+08:00,"Fix bug that resources in attr_map may point to same object

The assignment of attr_map may cause resources' attr_map point
to a same object. So once one resource's attr_map update, it maybe
affecte others.

Change-Id: Ica2c3082f9579b297f8c6323e04f8fd17c4da222
Closes-Bug: #1443342"
c27e66cc7c3427dfbc1e390693c6b0a3e656c783,2015-07-12 10:10:30+09:00,"Reject router-interface-add with a port which doesn't have any addresses

Fix a regression in commit I7d4e8194815e626f1cfa267f77a3f2475fdfa3d1 .

Closes-Bug: #1466750
Related-Bug: #1439824
Change-Id: Ic0c4c0adbffe14b1f08d4b2dee91e1dff41cc770"
2d390876b99c7ee227543663aa7345ba4bef714c,2015-07-12 16:44:33+09:00,"Lower log level of errors caused by user requests to INFO

When webob exception is returned, error level log is
always recorded even though we return 4xx (client error)
to users. 4xx error in response code means errors due to
user requests, so error level log is not appropriate.
This commit lowers the log level to INFO for such events.

Currently only case I see is webob.exc.HTTPNotFound returned
by the policy engine when a user requests an operation
prohibited by the policy, but I think there is no reason
we deal with 404 specially in neutron.api.v2.resource.

Change-Id: I9f042a90c9bf528be7cb835d7fe818ed1879054b
Closes-Bug: #1473556"
4cdc71e7d0e5220a5f12ee2dfea1ff3db045c041,2015-07-12 20:21:03-07:00,"Ensure floating IPs only use IPv4 addresses

Description:
Presently Neutron doesn't validate the address family of floating IP
addresses or the internal addresses they are associated with. It merely
associates the first IP of the floating IP's port with the first IP of
the internal port, unless a specified fixed IP is specified. This can
lead to incorrect or poorly defined behavior when IPv6 is present.

The existing L3 agent implementation only manages IPv4 NAT rules. While
IPv6 NAT and NAT protocol translation are possible, the existing
implementation does not support these configurations.

Presently a floating IP can be created on an IPv6 only external network
or associated with an IPv6 fixed IP, but the L3 agent is unable to bind
these configurations.

Implementation:
When creating and updating a floating IP, only consider IPv4 addresses
on both the floating IPs port and the internal port he floating IP is
associated with. Additionally disallow creating floating IPs on networks
without any IPv4 subnets, since these floating IPs could not be
allocated an IPv4 address.

DocImpact
APIImpact

Co-Authored-By: Bradley Jones <jones.bradley@me.com>
Change-Id: I79b28a304b38ecdafc17eddc41213df1c24ec202
Related-Bug: #1437855
Closes-Bug: #1323766
Closes-Bug: #1469322"
c6d0e45c9fb07fab4edf9be3a11ca00c8ffd0b84,2015-07-13 13:56:43+00:00,"Fixed L3 agent manual scheduling for HA routers

When a router is manually scheduled we check if a router can be scheduled
to the given L3 agent. In this check we were missing handling for
HA router, instead we raised an exception as a last resort.

In addition, we create an HA port on the newly scheduled agent.
The HA port is created within the router's namespace on that agent.
Previously when manually scheduling this was not done at all.

This patch takes care of HA routers by allowing them to be
manually scheduled to a L3 agent if the router is not already
scheduled to that given L3 agent.

The patch also adds an HA port in the router's namespace on the newly
scheduled L3 agent.

In addition the patch also removes the 'max_l3_agents_per_router'
enforcement when manually schedulling a router on a agent. This is
done as the admin should be able to schedule a router on an agent
if he desires, moreover this is consistent with the
'min_l3_agents_per_router' that is not enforced when manually
descheduling a router from an agent.

Co-Authored-By: gong yong sheng <gong.yongsheng@99cloud.net>
Co-Authored-By: Nir Magnezi <nmagnezi@redhat.com>
Closes-Bug: #1401095

Change-Id: I1e2d281cfec50e7fff4ec68659882fc7c0cb4a29"
63f58b525ef330223b54cd2e92bbceeffce1eb22,2015-07-13 15:26:43-07:00,"Moving out cisco n1kv extensions

Moving out Cisco N1Kv extensions to the openstack/networking-cisco
as part of the second phase vendor-core decomposition

Change-Id: Ib95309c7fa00c2afc3ebbfbbcb06ef430e90d6be
Depends-on: I408619a82497392a287dce6677673071ffc714f1
Closes-Bug: #1474129"
69ad73aaf21a36c5dfd64cfd1a4982d45cc6fe81,2015-07-14 09:02:44+00:00,"Disable python3 tests failing due to Routes < 2.0

At now, global-requirements has an entry:
Routes!=2.0,!=2.1,>=1.12.3
and this leads to Routes < 2.0 which is not compatible
with Python 3. This blocks updating of global requirements [1].
To avoid the situation, this commit disables python 3 related
error due to Routes version.

Closes-Bug: #1474266
Related to blueprint neutron-python3

[1] https://review.openstack.org/#/c/182746/

Change-Id: If5e6355505361cbefe04487b6d47ab9cc6ba861c"
9eed4167b63f0c0ad6c7ceeedc644e511c8dac75,2015-07-14 12:02:10-07:00,"Fix update_port_postcommit and port not found with DVR

Updating DVR Router interface ports was throwing
errors in the l2pop mechanism drivers function
update_port_postcommit.

PortContext's portbinding information does not show
the status of the ports. For DVR Router interface
ports the DVRPortbinding table contains the status
information for the ports.

In the case of the update_port method, there was
no code related to DVR that retreives the port
binding information from the DVRPortBinding table.

This was working before, since in the driver_context,
the PortContext was just returning the port status for
all router interfaces.

With the recent refactor to the driver_context, this
behavior changed and the PortContext was returning the
_binding.status for the DVR router interface ports and
the _port.status for the non DVR ports.

When the update_port function calls update_port_postcommit
with PortContext for DVR router interface ports, l2pop
was throwing an error saying that Portbinding does not
have the attribute 'status'.

This was causing addition of any second subnet to the
same network with respect to IPv6 to fail.
Because in the case of IPv6, when you add additional
subnets to the existing network, it just updates the port
with the IPv6 prefix instead of creating additional port.

In the case of IPv4 still we could see that there are
two different ports created for each subnet we try to
add.

This patch fixes the above issue in l2pop and allows the
DVR router interface ports to be successfull.

Also the _find_ipv6_router_port_by_network was returning
all the ports for DVR including the DVR CSNAT internal
ports which are not part of the router interface ports.

This patch also fixes this problem by returning false,
when it finds a DVR SNAT port.

Closes-Bug: #1465434

Change-Id: Id243a4b3f30071226411ace6d12550fc099901cc"
fa690cfc90a84e8e948621a94557dcf6f09f2678,2015-07-15 12:57:24+09:00,"Fix a regression in a recent IPAM change

The change I81806a43ecc6f0a7b293ce3e70d09d1e266b9f02
effectively removed _delete_port from NeutronDbPluginV2.
Unfortunately, it's still used directly by l3_dvr_db.

Closes-Bug: #1474639
Change-Id: I6ffb1d2d6f072ac1669637943eacad182244ca5c"
bc38335d5899b0a8bf195e30e264ff01f166ec7f,2015-07-15 17:16:31+08:00,"Avoid using logging in signal handler

In some cases, logging can grab locks and thusly attempt to reschedule,
which will fail in signal handlers. this patch removes the actions
from the signal handers, just set a flat if it got a signal, then in
rpc_loop, check the flag and perform appropriate actions.

Change-Id: I7a477e1c95b63fa8070ec9d08656156571421bb6
Partial-Bug: #1029727"
bcb4d237a79be9af18f1bcc792e1827c18b058d2,2015-07-16 11:26:36+02:00,"Add oslo db retry decorator to non-CRUD actions

The previously added decorators to the create and update handlers
in the API layer only applied to actions that followed the standard
create/update path. However, for API operations like add_router_interface,
a different path is followed that wasn't covered by a retry decorator.

This patch adds the decorator to handle deadlocks in those operations as
well.

Closes-Bug: #1475218
Change-Id: Ib354074e6a3f68cedb95fd774f905d94ca16a830
(cherry picked from commit 435ffa7c67cf8668063588e2af760c1ff595dfbb)"
d04335c448aa15cf9e1902e22ed4cd17b6ed344b,2015-07-16 05:19:45-07:00,"Add oslo db retry decorator to non-CRUD actions

The previously added decorators to the create and update handlers
in the API layer only applied to actions that followed the standard
create/update path. However, for API operations like add_router_interface,
a different path is followed that wasn't covered by a retry decorator.

This patch adds the decorator to handle deadlocks in those operations as
well.

Closes-Bug: #1475218
Change-Id: Ib354074e6a3f68cedb95fd774f905d94ca16a830"
5f249bd465a5cb7fc9d407dce27ac280cf375431,2015-07-16 23:44:55+09:00,"Add breakages in public API of devref

In wiki it is intended to keep track of neutron changes that may affect
external plugins and drivers. The information should be kept in a living
document in the devref area of the neutron code tree.

Change-Id: Ic73ffd02fbaea48fcb6ad29dd5c9e91870064cb1
Closes-Bug: #1470598"
2c98f6ee17f0fc589d327cc78487fe708779f964,2015-07-17 01:28:51+00:00,"Allow overriding of the neutron endpoint URL in metadata agent

Allow operators to set the endpoint url for neutron in the config
overriding the url that comes from the keystone catalog.

Change-Id: I93f81ef1be2de1038d9a899b0c4becdb5a8e8775
DocImpact
Closes-Bug: #1466258"
c5cb76315f0af0ab03185575bec91210f61c13e5,2015-07-16 19:01:25-07:00,"Alter unit test to match bug and cleanup ext logic

The unit test for bug #1443342 was only testing that a side effect
leading to the bug didn't occur (comparing object identities). This
patch updates the unit test to fully assert that the bug itself
doesn't occur without checking implementation details.

This also eliminates the branching that led to the original issue by
using setdefault to always return a dict to update.

Related-Bug: #1443342
Change-Id: I6c48681aa49c17bbadffa12bad1eea272c483437"
eb9226214fbf3d7a1812ca454c7c304769e262dc,2015-07-17 04:19:21+00:00,"Devref documentation for client command extension support

Change-Id: I51d5c26467b0e10e215838a02e6be81b6bc07ea9
Closes-Bug: #1470622
Depends-On: If71c9e2bbf888b1a68d3b7dc351f7df02f1a380f"
9d800021293d8564ced1c071b6415d9a97b3ef49,2015-07-17 14:14:27+08:00,"Unplug the VIF if dhcp port is deleted

if user delete the dhcp port, dhcp-agent should unplug
the VIF for this dhcp port, then the driver do
'reload_allocations' will raise a exception, dhcp-agent
resync for this network and re-create dhcp port.

Change-Id: I40b85033d075562c43ce4d0e68296211b3241197
Closes-bug: #1469615"
04f71b22e7a52c6dd01d498bdbed286007a65aa3,2015-07-17 23:37:52+00:00,"neutron-db-manage: fix check_migration for branch-less migration directories

I3823900bc5aaf7757c37edb804027cf4d9c757ab introduced support for
multi-branch migration directories in neutron-db-manage. That broke
check_migration for those projects without multiple branches.

The tool should properly handle both types of directories for forseable
future.

Related-Bug: #1475804
Change-Id: Ie4d20f5119018ffdebe2929b961c5ddb314ed734"
ce437729f9ac552939c5473c8c8fee52d214c8db,2015-07-18 05:21:51-07:00,"Validate that context exists

Commit 3e0328b992d8a90213a56ec5a4144677279bea66 broke external
decomposed plugins due to the fact that it assumes that the
context is set.

This patch validates that the context is set.

Co-Authored-By: Kevin Benton <blak111@gmail.com>

Change-Id: I3320f27be7b0fed1d3b37a5c5459d91b2bc4f13b
Closes-bug: #1475837"
141560b4221b9b58fd34405a8f94e826f92f35ff,2015-07-19 18:38:53-04:00,"Adds garp_master_repeat and garp_master_refresh to keepalived.conf

This patch aims to solve an issue when, in some cases, the L3 agent might
start before the OVS agent during a node boot process.
At such scenario, the L3 agent will configure the routers before the OVS agent
done syncing with the server and starts processing ovsdb monitor updates.

The result:
1. L3 agent finishes configuring an HA router
2. Keepalived spawned
3. In case of transition to master state, it (keepalived) sends gratuitous ARPs
                                                            ^---The issue
4. The OVS agent has just finished plugging its ports

Meaning, the gratuitous ARP will be lost, but the router acting as master.
Closes-Bug: #1453855

Change-Id: I2cffa7c0ebad20bd50396265aef9fcfa64018744"
e82b0e108332964c90e9d2cfaf3d334a92127155,2015-07-20 18:46:34+00:00,"Fix gateway port could not retrieve for subnet

In DVR routers when a port is added to a router, then
the command succeeds but the l2 ovs agent raises an
error stating that it could not retrieve the gateway
port for the subnet.

The reason for this is there is mismatch in the
ip_address returned from the subnet for the gateway
port and the actual ip_address of the port that we
added to the router.

Since the subnet info was passed to ""get_subnet_for_dvr""
this mismatch was seen.

Instead of passing the subnet we will be passing the
actual fixed_ips with all the details and the subnet
gateway port will be filtered based on the ip_address
in the fixed_ips passed.

Closes-Bug: #1404823

Change-Id: I87a3983951f814350e79f5e2274f4639bb6bc0f5"
3f8594bbf6dec651233f50eb032af33064c117be,2015-07-20 20:06:11+00:00,"Stop use of oslo_utils.timeutils.strtime()

oslo_utils.timeutils.strtime() is deprecated in version '1.6'.
We use datetime.datetime.isoformat() or datetime.datetime.strftime()
instead.

Change-Id: Id6e8645362fe70b1427d45d5b44048fe47aba0f7
Closes-Bug: #1475156"
73207ddd5e8b4be800b2d1603d73cabad30423ec,2015-07-21 08:22:48+09:00,"ovs_lib: Fix native implementation of db_list

Move the code to list records into the transaction.

Closes-Bug: #1473038
Closes-Bug: #1473049
Closes-Bug: #1475253
Change-Id: I9f367f5ba1ecc50b9bb94c6f52507033d0139611"
d6e36b4e2f5074c47c71bf32ba6762d573d5161b,2015-07-21 10:27:16+00:00,"Remove deprecated OVS and LB plugin DB tables

Now that the openvswitch and linuxbridge monolithic plugins have been
deprecated and replaced by ML2 mechanism drivers, we can remove their
database tables.

Also remove the migrate_to_ml2.py script which is no longer supported.

Change-Id: Ia8d77cb7e4e4b3d4957365cc124ac71a59e62745
Partially-Implements: blueprint reference-implementation-split
Closes-Bug: #1468433"
aa608d2e042e8c5033cdaf805615aaf03678edb7,2015-07-21 20:24:53+08:00,"Add conntrack-tool to manage security groups

This patch introduces conntrack-tool to manage security groups. When a
security group rule is deleted, the corresponding tracked connection
entries will also be removed from the kernel for the address.

Closes-Bug: #1335375
Partially-Implements: bp conntrack-in-security-group

Change-Id: Ibfd2d6a11aa970ea9e5009f4c4b858544d8b7463"
27503dad33bb045ac840f13a3e5fc0a5b603abb1,2015-07-21 17:55:02+00:00,"Fix race condition by using lock on enable_radvd

For an HA Router, radvd is spawned only in the Master Node.
KeepalivedStateChangeHandler after receiving the state notification
on the unix domain socket, would either enable/disable the radvd
process depending on the state of the HA Router. In parallel, if
there is a request to add an interface to the router, router.process()
would try to enable radvd in parallel. So there is a possible race
condition as two threads try to enable radvd in parallel. This patch
uses appropriate locking mechanism to prevent this race condition.

Closes-Bug: #1466663
Change-Id: I40df78cc57fcde5512336d9dfef88b3b06a69bcb"
b4e42a341894177a1c870a48b2641bae6c36696e,2015-07-22 15:15:12+08:00,"Add new ovs DB API to inquire interfaces name list in a bridge

In OVS, ports don't equal to interfaces when a bond port created. This patch
add the new API get_iface_name_list to get the interfaces' name, and it's
supplementary to the current get_port_name_list API.

Change-Id: I29c220e099b8dcf78248e2d660c435578bb2932d
Partial-Bug: #1460494"
4f89d9be7317ee5c82716306420e1d5efbcb7b31,2015-07-23 17:28:04+08:00,"Fix handling of port-range-min 0 in secgroup RPC and agent

For TCP/UDP protocol, port valid range is 0 to 65535, so for a
security group rule, its valid range is also 0 to 65535. this
patch makes two changes:
1. if a security group rule port_range_min is 0, l2 agent also can
   get port_range_min real value 0 when it gets this rule for a
   device via RPC.
2. For IptablesFirewallDriver, if port range is [0, xxxx], l2 agent
   also need add this rule to iptables.

Change-Id: If93c54a31d973187889ead2c2797ffdd40a4393d
Closes-bug: #1473965"
1ba38bfd3f4e505d53c40f3e1bee603bfc705b64,2015-07-23 09:35:28+00:00,"Disable port creation when invalid MAC address is provided

When a port is manually created with an invalid mac address like
'00:00:00:00:00:00' and associated to neutron router, we see an
exception in L3-agent logs. Since we do not have any valid use-case
to have a port with a mac_address of all zeros, this patch disables
the corresponding port creation/updation request.

Along with all zeros MAC, validation aganist broadcast MAC is also
included in this patch.

DocImpact

Closes-Bug: #1472243
Change-Id: I93875716550dbc1f299aee95c45144e4904af233"
d3708de0cb1dacc610bc9585a55dd260a862104d,2015-07-23 11:48:57+02:00,"Merge remote-tracking branch 'origin/feature/qos' into merge-branch

Also applied the following fixes:

===

1. cleaned up some pylint failures that were not spotted before:

Module neutron.objects.qos.policy: Metaclass class method __new__ should
have 'mcs' as first argument

Module neutron.objects.qos.rule: Lambda may not be necessary

===

2. Revert ""Introduce the AFTER_READ callback for ports and networks""

This reverts commit e3dba1424114575581c153e02227282e036ad0a2.

We don't use callbacks to extend resources anymore, instead relying on
ml2 extension drivers. No need for the patch to achieve QoS, and it also
breaks test_delete_subnet_with_callback that was added in master
recently.

===

3. updated requirements.txt and test-requirements.txt based on:

https://review.openstack.org/#/c/204398/

to avoid requirements gate checks failing due to incompatible
requirements comparing to global-requirements.txt

Change-Id: I744ab2d8327a428a5467f2d07d073a5f8c333520"
6ff8582896646f1e88d1a754cd476147e02c1834,2015-07-23 19:05:05+09:00,"Metaplugin removal

Metaplugin is removed in Liberty.
Remove all metaplugin related codes.

DocImpact
APIImpact

Co-Authored-By: Itsuro Oda <oda@valinux.co.jp>
Change-Id: I9cf36e1fd3a009c175e0d475af407a30f4e5c408
Closes-Bug: #1465126"
91d3a0219a43a2c06ea4043cc9eeb518815df391,2015-07-23 15:15:18+03:00,"Update port bindings for master router

An HA port needs to point to the correct host (where the master router
is running) in order for L2Population to work.

Hence, this patch introduces two fixes:
* When a port owned by an HA router is up we make sure it points to the
  right node where the master is running, or a random node if there is
  no master yet (This corner case is fixed by the 2nd bullet point).

* When a L3 agent reports it's hosting a master, we need to update the
  port binding to the host the master is now running on. This fixes
  both routers with no elected master (Yet) and failovers.

This patch also changes the L3 HA failover test to use l2pop.
Note that the test does not pass when using l2pop without this patch.

Closes-Bug: #1365476
Co-Authored-By: Assaf Muller <amuller@redhat.com>
Change-Id: I8475548947526d8ea736ed7aa754fd0ca475cae2"
e5e5f7a281fd89c06d65da3a6d3a1fe194647432,2015-07-24 10:39:25+08:00,"Create fip on subnet id

If there are multiple subnets in the external networks, users can expect
to create a floatingip on a specific subnet on which the quality or cost
is maybe different than other ones.

This patch allows users to create floating ip on specified subnet.

DocImpact
APIImpact

Change-Id: I7a3c27c1d0d2685e31201f1eac6ec74dfb96b279
Closes-Bug: #1468175"
38ed9ba08e7cc3c8d650bd15cd986159a3c45a46,2015-07-24 05:26:58-07:00,"Avoid printing log options multiple times

This patch ensures log_opt_values is invoked only once, thus
avoiding annoying multiple dumps of options values.

Note that is rpc_workers is greater than 0 a second dump will
be logged. This patch does not address this as REST and RPC
servers are going to be separated as a part of the feature/pecan
work.

Closes-Bug: #1477975

Change-Id: Ia5dcb609241de6ad30d9831c5fb98a9e2be6ad7f"
e004e1ad9da5df6e7ce0daac1c2de7e5a94db1ee,2015-07-24 16:57:09+03:00,"Add error message when migrate from distributed router to centralized

When trying to migrate from distributed router to centralized
a NotImplementedError occurs with empty message.
Need to concretize a message.

Closes-Bug: #1477509
Change-Id: I2b57ec5af38a0f87c1ab256cb8af66bc443be824"
7f152490bfe001ccef7b3d2815978853585dbea3,2015-07-27 11:25:23+00:00,"Fix dhcp autoschedule test assertion logic

The functional test for auto_schedule_networks passes even if the
method does nothing. This patch changes the test so it checks that
each expected hosted network is in hosted_net_ids.

Change-Id: I42130993b1af3f3d028e355d30322853453f064f
Closes-Bug: #1478531"
5df1a72c9517ebfc90998467e72c6d999119ee68,2015-07-27 10:21:52-04:00,"Fix KeyError: 'L3_ROUTER_NAT' in l3 scheduler functional test

The issue was introduced by commit with change ID:
Ic4df299bac83c80abf0890a81d2dd36d15993b33

In Neutron-speak we define the 'core plugin' as something like ML2, while
service plugins examples are L3, VPNaaS, etc. The code was initializing
the L3 service plugin as the core plugin, which is unexpected behavior.
The code will now use the DB core plugin base class as the core plugin,
and not initialize the service plugins. The tests will manually and locally
instantiate a L3 service plugin instance and use it.

Change-Id: I2b7d2f6ccd5fe18e322e70b4e376db23d76b9092
Closes-Bug: #1478273"
e9322c8f65fc7c5b621393cd242fb819c1f904f7,2015-07-28 13:54:56+09:00,"Fix a microsecond format of isoformat()

isoformat() omits the microsecond from the format when the microsecond is 0.
Therefore, use strftime('%Y-%m-%dT%H:%M:%S.%f') instead.

Related Change-Id: Id6e8645362fe70b1427d45d5b44048fe47aba0f7
Closes-Bug: #1478418

Change-Id: I27059fa3476ceb51033534cc60d40047d88390d7"
e34e67b8e6ad4a95762287161184a9f9ce81b429,2015-07-28 18:28:14-06:00,"Extend vxlan_group option to allow a range of group addresses

If vxlan_group is specified in CIDR notation, it is interpreted as a
range of group addresses. VXLAN VNIs are mapped to group addresses in
a many-to-one round robin fashion, or one-to-one if a large enough
range is provided. Since VNIs are 24 bits, a /8 such as 239.0.0.0/8
allows each VNI to use a unique multicast group. (239.0.0.0/8 also
happens to be the ""site-local"" multicast range.)

With multiple VNIs on a single multicast group, it is likely that
VTEPs will unnecessarily receive broadcast/unknown/multicast
datagrams for VNIs in which they do not participate. Using a range of
groups mitigates or eliminates this issue. It is thus an alternative
to the l2_population extension and driver for environments where both
multicast and linuxbridge are used.

The default setting is unchanged, but the comments in the ini file
suggest 239.0.0.0/8 as an alternative. Administrators are free to use
any valid multicast range that can be expressed in CIDR notation, and
should choose a size and starting address that make sense for their
environment.

DocImpact
Closes-Bug: #1477331
Change-Id: If9a3487a28ba2b02a6ef934c5421cec5d505b53c"
cb60d0bb4e0cc0cba68f59fdf5f4e89d6ec52950,2015-07-29 17:13:44+08:00,"Keep dns nameserver order consistency

Currently, there is no dns servers prioritization for subnets
for Neutron.

Generally speaking, it is useful to keep the order of dns
nameservers consistent. Add a new column named 'order' in table
'dnsnameservers' and add nameserver into DB one by one.

Closes-Bug: #1218629
Implements: blueprint keep-dns-nameserver-orderconsistency
Change-Id: Id937aea411397d39370368a4eb45be26c4eefa9e"
f0e8356d04d04600c072a1c0f0bdf274ff19ab8c,2015-07-29 14:59:51+00:00,"Update dhcp agent cache for network:dhcp ports

When a network with a dhcp_enabled subnet is scheduled on a dhcp
agent, dhcp driver creates the network:dhcp port for the subnet.
However, the port info is not updated in dhcp agents internal cache.
Subsequently if the user deletes the network:dhcp port, the port is
properly deleted on the server side (i.e., in the database) and when
the port_delete_end notification is sent to the dhcp agent, it simply
ignores it as the port entry would be missing in the cache. This patch
fixes this issue by updating the dhcp agents cache when dhcp driver
creates the network:dhcp port for the subnets.

Closes-Bug: #1478426
Change-Id: I69f5834dd964a4320c606c4e0aa2cdba70416943"
7cd340cb2300ce777f68a390834cdd51f77ad10a,2015-07-29 08:22:09-07:00,"Fixes a typo phys_brs in place of phys_br

Change-Id: I0301952d5f7d4cd78c5d35c38aa5c6caabcc6298
Closes-Bug: #1423774"
5b3bacedf6c014815bef03c2e821b5eb8ef92dcb,2015-07-30 00:12:26+00:00,"Moved out cisco n1kv mech driver and db models

Moving out Cisco N1Kv database models and the mech driver
to the openstack/networking-cisco repo as part of the second
phase vendor-core decomposition

Partial-Bug: #1479123
Partial-implements: blueprint core-vendor-decomposition

Change-Id: I65a704b238d8cbe2951a6912fa4f1e8518c6f412"
2e733a9c9e0166e52c4a052662a39a8ca825d112,2015-07-29 23:59:56-05:00,"Prevent update alloc pool over existing gateway ip

The gateway IP for a subnet is not allowed to be listed in the
allocation pool for that subnet. This restriction is checked and
enforced at subnet-create time.

During subnet-update, it is only partially checked. An
exception is returned if the update request tries to place the gateway
IP in an existing allocation pool OR if both gateway and allocation
pool are being changed and the gateway is located in the new pool.

If only the allocation pool is being updated, no check is made to
verify that the new allocation pool does not contain the existing
gateway IP.

Closes-Bug: #1479514
Change-Id: Id9583d6ad88188955388931cd688ca19bd2c9717"
991ea00e6c115343eabecc62e86072175823f81f,2015-07-30 09:40:46+00:00,"SR-IOV: Fix SR-IOV agent to run ip link commands as root

Commit https://review.openstack.org/#/c/155523/
remove the remaining root_helper args, but didn't
update the SR-IOV agent to execute them as root.

This patch updates the agent to execute ip link commands
as root and pass options argument as a list in the
self._as_root method.

Closes-Bug: #1479694
Change-Id: I53cafd61845a69fae3a759fb7526950d655ffa20"
03b70b109449f3b9329834c7aa88fd26ed71cf26,2015-07-31 09:33:52+00:00,"Ensure non-overlapping cidrs in subnetpools with galera

This change enables galera support in _lock_subnetpool[1]. It uses an
update to disallow 2 transactions performing concurrent subnet
allocation in the same subnetpool to succeed: the 2 transactions will
conflict because they update the same row so the db (including Galera
multi-writer cluster) will discard the last transaction and
Controller.create[2] will catch and retry the ""discarded"" allocation.

This change adds the ""hash"" attribute in ""subnetpools"" table to enable
previous update.

[1] neutron.ipam.subnet_alloc.SubnetAllocator
[2] neutron.api.v2.base

Change-Id: I74f7100a6fd9b7787be693adffec15ec468d0018
Closes-Bug: #1451576"
4021fe30a915c5478d1053b08e693c7f5c6270f4,2015-07-31 04:02:28-06:00,"Initialize port_info dict as blank in OVS agent

The first assignment of port_info was from the scan_ports function
which could result in an exception and result in port_info being
unbound for the port stats scan below.

This patch just initializes port_info as an empty dict so the port
stats will always have an input.

Closes-Bug: #1479105
Change-Id: I017a6dd334e2673072c977cc13b73e8cceb16712"
a8d1b7218038025d066472cfb9c17037f31bf791,2015-07-31 04:04:24-06:00,"Check that VXLAN is not in use in LB VXLAN check

The Linux bridge VXLAN supported check was only checking that the
test interface didn't exist instead of checking that both the interface
and the VXLAN didn't exist. This caused it to fail on startup if
a VXLAN interface existed under a different name using one of the
VXLANs that the agent tried to test support with.

This patch adds a check to ensure that the VXLAN ID isn't in use as well.

Closes-Bug: #1470579
Change-Id: I3a91ce54da86e319b7a4485dfae3fc99885383d4"
f6ffac2537870956efabe56326c3b30b2ecbf336,2015-07-31 14:53:22+01:00,"Fix order of calls in update_port

https://review.openstack.org/#/c/196908 introduced some extra logic to
do with DVR to update_port, however it changed the ordering of some of
the calls, this patch ensures that the calls that need to happen before
precommit happen in the right place.

Change-Id: I560100b3be76c616a93bf7d3264675dce6cef732
Closes-Bug: #1475297"
e4896b30e63729de4ac07f2baf23ed24dd0a00c7,2015-07-31 15:11:37-07:00,"NSX: Rename default_interface_name option

Since this option is configured in the DEFAULT section of nsx.ini,
the name of the option clashes with that in the networking_l2gw repo.
Proposal is to prefix our option with ""nsx_"" to avoid such interference.
Unfortunately this module was not moved to openstack/vmware-nsx
during decomposition and therefore this patch is being proposed on
the neutron repository.

Change-Id: Ib568333a5ab8ad76600beb4981d7c6047c0603a0
Partial-bug: #1480485"
78ff49ecf9e4ec3e0490909e8033aaeb5ea33c34,2015-08-01 05:16:32+00:00,"Remove unnecessary executable permission

Bunch of neutron source code files are marked as executable which is not
appropriate, this patch just 'chmod -x' to all of them.

Closes-Bug: #1468564

Change-Id: Idec4ae16501d68e044e103db24ad3be0e0751e9a"
3fe38d049f9c25045baff138ed82dd5e3ac8ad30,2015-08-02 13:53:48+00:00,"Move away nested transaction from _ensure_default_security_group

This patch remove the nested transaction started in
_ensure_default_security_group, before calling create_security_group.
Instead, a nested transaction will be started inside
create_security_group.

The purpose of this change is to reduce the time period in which the db
transaction is open (to avoid races, db lock timeouts, etc), when creating
the default security-group.

Closes-Bug: #1479558
Change-Id: Ia0efa72c70c2f405c851370b0b26770008e5ff95"
764f018f50ac7cd42c29efeabaccbb5aec21f6f4,2015-08-03 12:57:11+08:00,"Fix ipset can't be destroyed when last rule is deleted

when it deletes a security group all rules, it should
include this sg information in RPC method
'security_group_info_for_devices', otherwise the ports
in this sg can't corrcectly update their iptables and
ipset sets.

Change-Id: Ibb071ce84590bd46cda2c1e010a566e75e22b4d2
Closes-bug: #1460562"
ff8bd9d1e9a1f5c7445af2c8a4489623634cb417,2015-08-03 15:36:28+08:00,"Install arp spoofing protection flow after setting port tag

when ovs-agent set a tag for a port, it will first remove all
flows on this port, because it should guarantee that no drop_port
flow installed by port_dead remains, so arp spoofing protection
flow must be installed after it.

Closes-Bug: #1472452

Change-Id: I566d0fd93b39e81a34214f1a7a0a1decc9a169d6"
e79d602e3821955507907a872df6da4cc4d82e2f,2015-08-03 16:10:20+08:00,"Add DNS and DHCP log into dhcp agent

Enable set DNS and DHCP log of dnsmasq for dhcp agent
Add a new configuration named 'dnsmasq_base_log_dir'
in dhcp_agent.ini.

This entry should be a path of log file. It should
like this:

    dnsmasq_base_log_dir=/tmp

And the DNS and DHCP log will be written into the file
""/tmp/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/dhcp_dns_log"".
The dir path will be created if the given path doesn't exists.

DocImpact

Closes-Bug: #1475636
Change-Id: I87be346ec5059eaa8a29f48fe53933af82d1b155"
272768caddb17617e4b5af960075d07a623cd8ca,2015-08-03 13:41:05+03:00,"Add oslo db retry decorator to the RPC handlers

The decorator was previously added at the API layer
(commit 4e77442d529d9803ff90de905b846af940eaf382,
commit d04335c448aa15cf9e1902e22ed4cd17b6ed344b).
However some RPC handlers are also dealing with port
create/update/delete operations, like dhcp ports for example.
We need to cover these cases too.

Also remove db retry from ml2 plugin delete_port()
as it's not needed once we retry at the API and RPC layers.
(there is already a unit test on this)

The patch also adds a unit test for checking deadlock
handling during port creation at API layer.
Though it's not directly related to the current fix,
I decided to leave it for regression preventing purposes.

Closes-Bug: #1479738
Change-Id: I7793a8f7c37ca542b8bc12372168aaaa0826ac4c"
42188537172f4e1e633a0fb36ace5a522c730a32,2015-08-04 07:01:12+00:00,"Fixing ICMP type and code validation

The case where type is not specifed (None) but the code is '0' will not
result in an error, as it should.

APIImpact

Closes-Bug: #1480966
Change-Id: I878b13ec46a93947765227c40282efa9a7e02ca8"
e12851f2df398d12359b2aef1406748be426a694,2015-08-04 09:28:02-07:00,"Fix typos in neutron code

Fix typos found in neutron code and docs

Change-Id: I4afc3a4b36dd47d47d1238ac22e7f09e2d75050d
Related-Bug: #1424139"
fc7cae844cb783887b8a8eb4d9c3286116d740e6,2015-08-05 12:22:22+01:00,"DB, IPAM & RPC changes for IPv6 Prefix Delegation

This patch includes the DB, IPAM & RPC changes needed for the IPv6 Prefix
Delegation feature.

To enable this feature, the subnetpool_id attribute of subnets has been
modified to allow for a special subnetpool identifier - ""prefix_delegation"".

WORKFLOW:

1. Admin sets default_ipv6_subnet_pool in neutron.conf to ""prefix_delegation""
2. User creates a new IPv6 subnet without a CIDR or subnetpool ID
3. User creates an interface between this subnet and a router with an existing
external interface

The agent-side changes will follow in separate patches.

A documentation patch is up for review here:

https://review.openstack.org/#/c/178739

Video guides for configuring and using this feature are available on
YouTube:

https://www.youtube.com/watch?v=wI830s881HQ
https://www.youtube.com/watch?v=zfsFyS01Fn0

Change-Id: Ic0c6ed4dba74da94a75838178a1837f93d2d0885
Co-Authored-By: Baodong (Robert) Li <baoli@cisco.com>
Partially-Implements: blueprint ipv6-prefix-delegation"
6e3817433e443fd008ef433f54068c197c78465b,2015-08-05 17:52:29+03:00,"Fix: Skip rescheduling networks if no DHCP agents available

This fixes commit 1318437a0caf38e695a819848832a955fef7d909
which has inaccurate check for dead agents: in a case where
there is only one network scheduled to a subset of dhcp agents,
number of all dhcp agents will be not equal to the number of
dead binded agents

The unit test is updated to cover the described case.

Closes-Bug: #1461714
Change-Id: I1c9501316c931293aa8ba755a98779a7da27578d"
3b18aa3e1f4bb6d4d2f1264b37f8d784d57c4a28,2015-08-05 18:51:09+00:00,"Initialize ancillary_port_info dict as blank in OVS agent

The first assignment of ancillary_port_info was from the scan_ancillary_ports
function which could result in an exception and result in ancillary_port_info
being unbound for the port stats scan below.

This patch just initializes ancillary_port_info as an empty dict so the port
stats will always have an input.

Closes-Bug: #1479265
Change-Id: I37084bf27d4c328a7b78ca71cf26813207697361"
58e388261313025d1e713d4c17c99db12404b75f,2015-08-05 13:41:35-07:00,"Validate interface_mappings on Linux bridge init

Verify that the interfaces actually exist that are defined in
interface_mappings on Linux bridge startup. If they do not, exit
immediately similar to how OVS handles incorrect bridge_mappings.

This prevents an unfriendly exception in the rpc setup routine.

Change-Id: I050b9b66aa0b27f148e67123eedf29fe332e6f65
Closes-Bug: #1470584"
85ebf88afa04986cd0e5d65f20c9f286820d87a5,2015-08-06 18:23:21+08:00,"Broadcast service port's arp in DVR

When creating VMs, DVR router will broadcast VM's arp details to all the
l3 agents hosting it. that enable dvr can forwarding networking traffic
in link layer, but when the port is attached to the service liking
lbaas, their arp will not be broadcast, so the dvr do not know its mac,
and will cause that vms in other subnet can not reach the service port
through the dvr router.

Change-Id: Ia78a35f39981d6659fc220e02fb10917bda74e04
Closes-Bug: #1481613"
73845d564c910bb9113a3ba5963b368384efbaad,2015-08-07 17:16:17+08:00,"Pass the extension driver exception to plugin

The extension driver is intercepted by driver manager currently. It will
cover the errors/exceptions happened in extension drivers. The extension
process will continue even if preceding extension driver get a wrong/useless
extended result, or even no result.
This patch make process_[create|update]_<resource>() and
extend_<resource>_dict() methods return the exception, and log it with proper
level respectively, and also include a minor optimization for the
extend_<resource>_dict() methods.

Change-Id: I20a249c47b58292125476bc44b2372ca959509e3
Closes-Bug: #1468990"
ed9703e3edc1290b57132e408e2d1c1d021d9477,2015-08-07 21:17:20+08:00,"Remove quotes from subshell call in tools/split.sh

Always no quotes for $() statement.

We don't need quotes to hold blanks in result:
 # i=$(echo 1 2 3)
 # echo $i
 1 2 3
 #

These quotes can make something wrong in some case:
 # i=$(echo '!')
 #
 # i=""$(echo '!')""
 -bash: !: event not found
 #

No real problem for current code in split.sh, only to use a
better code style.

Change-Id: Ib86d59e10be0aca4774ad2fc656915a96b1b6c74
Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com>"
e64f5bdd22f7907cc77b9f94f5f6b6676dc57a93,2015-08-07 09:22:39-05:00,"Validate updated allocation pool before using it

The allocation pool specified during subnet-update is being
used in gateway validation checks before the allocation pool
is ever validated.  Errors indicating that the gateway IP is
invalid are returned when it is the allocation pool that is
actually in error.

Additional testing of the allocation pool is also being added
to the subnet-update unit tests.

Closes-Bug: #1479948
Change-Id: I854333d571bad2550ea5a0b93ff64ce44d0bd010"
2093d8727070829064b1a6005a9b411a383d246d,2015-08-07 11:26:53-05:00,"Introduce ItemAllocator class

The ItemAllocator class is used as the base class for
LinkLocalAllocator in preparation for adding
FipRulePriorityAllocator as a child class.

Change-Id: I2c77e5a895f750845b46d3e8a2326e01ea87ee78
Partial-Bug: #1414779
Signed-off-by: Ryan Moats <rmoats@us.ibm.com>"
b220d10125c859367069eeb43ea45e3650a782f9,2015-08-07 20:10:25+03:00,"Do not delete fip namespace during l3 dvr agent resync

This was introduced by commit 46608806aa7a9c60214e28429ca5a8b87b2a15de
which didn't take into account that fip namespace name is composed
from external network id rather than router id.
The fix is to ensure fip namespaces for the known routers are kept
by namespace manager on agent resync.

Closes-Bug: #1482521
Change-Id: I0ffd0a3f6d83f7356638827a1cfe4dabef24b891"
ba23a40a976033c3584b6b730e220311a11fb1d9,2015-08-09 23:45:52+05:18,"Use DeferredOVSBridge in setup_default_table

setup_default_table method in br-tun module fires multiple ofctl
calls. Using DeferredOVSBridge will help us save us few OVS calls.

Closes-Bug: #1259847

Change-Id: I2f01bae5d9efc5c6a6f577e92204c930eb1cf827"
02c80d8e82970922f1f1b1462f8435aed8280a71,2015-08-10 06:48:58+00:00,"Validate local_ip for OVS tunnel

When tunneling is enabled in OVS, validate if the
IP address in local_ip belongs to the host.

Closes-bug: #1408603
Change-Id: I4b4527c28d0738890e33b343c9e17941e780bc24"
53831c685bb6f9897dd384003c1307def062de05,2015-08-10 14:07:59+00:00,"Support delegation of bind_port to networking-odl backend driver.

The OpenDaylightMechanismDriver delegates bind_port to networking-odl
backend driver. Move check_segment toghether with bind_port as is
used only there. This will enabled extension of bind_port to
support other port types such as vhost-user in a separated patch-set
to networking-odl without requiring further changes to the front-end
component in neutron.

Change-Id: I27948ac0b440b8b4d04e496971593850e78739d0
Closes-Bug: #1477483
Depends-On: Id663147020b9780129c65ba0bb6d743a9de9cd4b"
ca0d7bce211d33ef8081684542ba4854cb743d74,2015-08-10 18:08:16+02:00,"Removed configuration option for qos agent driver selection

There is no (general) use case to allow users to configure qos driver to
load by qos l2 agent extension. So instead of getting the driver name
from the configuration file, hardcode it and potentially reuse for other
extensions that may also be interested in splitting extension into
agent agnostic and agent specific pieces.

Added driver_type parameter to AgentCoreResourceExtension.initialize().
Also updated the method signature to reflect that we expect l2
extensions to receive connection.

Finally, removed #noqa import for openvswitch.common.config from qos
extension unit test since it seems unneeded.

Change-Id: Iae4dcc20c967d1da216772a3a3660e0421263527
Partially-Implements: quantum-qos-api"
236e408272bcb9b8e957524864e571b5afdc4623,2015-08-10 11:27:51-05:00,"DVR: fix router scheduling

Fix scheduling of DVR routers to not stop scheduling once
csnat portion was scheduled. See bug report for failing
scenario.

This partially reverts
commit 3794b4a83e68041e24b715135f0ccf09a5631178
and fixes bug 1374473 by moving csnat scheduling
after general dvr router scheduling, so double binding does
not happen.

Closes-Bug: #1472163
Related-Bug: #1374473
Change-Id: I57c06e2be732e47b6cce7c724f6b255ea2d8fa32"
08f0bb9ce5c821b421394d2c7d9186f40c417f7d,2015-08-12 09:36:04+00:00,"Pass the extension driver exception to plugin

The extension driver is intercepted by driver manager currently. It will
cover the errors/exceptions happened in extension drivers. The extension
process will continue even if preceding extension driver get a wrong/useless
extended result, or even no result.
This patch make process_[create|update]_<resource>() and
extend_<resource>_dict() methods return the exception, and log it with proper
level respectively, and also include a minor optimization for the
extend_<resource>_dict() methods.

Change-Id: I20a249c47b58292125476bc44b2372ca959509e3
Closes-Bug: #1468990
(cherry picked from commit 73845d564c910bb9113a3ba5963b368384efbaad)"
4418bf426ac48935b27d235139912c2e3ec1d1b5,2015-08-12 12:41:37+03:00,"DVR: fix router rescheduling on server side

This fixes router rescheduling for dvr routers to
correctly handle CSNAT portion rescheduling on server side.

Next patch will make L3 agent aware of possible SNAT role
rescheduling to/from it.

Partial-Bug: #1472205
Change-Id: I069500a2f1de9a734124544a3f2d793e9fa2d27c"
653fd35be2ebc7bdfd1eb417d086cf0884be29cd,2015-08-12 11:27:01+00:00,"Destroy ipset when the corresponding rule is removed

if a security group has a rule which allow a remote group access,
but this remote group has no IPv4 and IPv6 members, L2 agent
should not clear the remote group in internal cache of sg_members,
because when above rule is deleted, L2 agent can get the remote group
id from the diff of pre_sg_members-sg_members, then destroy the ipset
set for remote group.

Change-Id: I801b14c9f506c5a07f8875b8f9be1b05d181b842
Closes-bug: #1463331"
764e716cd658dfa9b4cbb07be6bbbeff99e21eaf,2015-08-12 07:42:04-04:00,"Skip FwaaS test that is failing due to race condition

Change-Id: I8a7669b6aff0b407b192af803fbfb636c8f118bb
Related-Bug: #1483875"
0b5b6c7e746839d3f9bece6e782092bca3c9725e,2015-08-12 15:09:02+03:00,"Fix DVR interface delete by port when gateway is set

When removing a DVR interface by port, the subnet_id
passed to delete_csnat_router_interface_ports is None,
and so it deletes all the DVR SNAT ports for the
router.

This patch fixes this issue by passing in the right
subnet_id to the delete_csnat_router_interface_ports.

Change-Id: I16735195c6575454876acd0e99ef45f382963566
Closes-Bug: #1443524
Co-Authored-By: Swaminathan Vasudevan <swaminathan.vasudevan@hp.com>
Co-Authored-By: Oleg Bondarev <obondarev@mirantis.com>"
26b226f43ed436b190ca6392d289df3b0e090b30,2015-08-12 11:50:11-04:00,"Final decomposition of the ML2 NCS driver

Closes-Bug: #1484160
Related-Blueprint: core-vendor-decomposition

Depends-On: I713f2378050f514a427fb9937b2a1fc5cc48bd6f

Change-Id: I0a447fd5b176faf96fc0f5e164fa7a3b098ae74f"
2bb48eb58ad28a629dd12c434b83680aa3f240a4,2015-08-12 14:24:02-04:00,"Distributed router can not add routes

Centralized router can add routes, but distributed router can not,
the neutron router-update operation fails silently.  This is
because on a distributed router commands need to be run in the
snat-* namespace, and not the qrouter-* namespace as on a
centralized router.

Change-Id: I517effcfc299c67c3413f7dc3352b97515ff69db
Closes-Bug: #1405910
Co-Authored-By: Ryan Moats <rmoats@us.ibm.com>"
de81ab8385e8490b2320e23ee7dd86b43e22fd32,2015-08-12 15:52:19-05:00,"Preserve DVR FIP rule priority over Agent restarts

IP rule priorities assigned to DVR floating IPs need
to be preserved over L3 agent restarts. Reuse
the ItemAllocator class decomposed from Link Local IP
address allocation.  Also move commn unit tests to
ItemAllocator class.

Closes-Bug: #1414779
Change-Id: I6a75aa8ad612ee80b391f0a27a8a7e29519c3f8d
Co-Authored-By: Rajeev Grover <rajeev.grover@hp.com>
Co-Authored-By: Ryan Moats <rmoats@us.ibm.com>"
74a5e9166702031e7b6657e3e67bec00fd6145cb,2015-08-12 20:39:17-07:00,"Remove bigswitch mech_driver entry point definition

After vendor driver split, the entry point for bigswitch ml2
mechanism_driver is no longer valid. The new entry point is defined in
the networking-bigswitch stackforge repo.

Change-Id: Ie6e19a13e49d9d3e95f8ea2f10181592e9f156e5
Closes-Bug: #1484341"
603c0d03aed5fdeefb471086c0aef879938f9641,2015-08-12 23:50:58-04:00,"Support for independent alembic branches in sub-projects

Sub-projects shall now register their independent alembic migrations
via entrypoints in setup.cfg, and neutron-db-manage will discover them
and run them automatically.

If a service or sub-project is specified explicitly, then
neutron-db-manage will run on only that service or sub-project.

The advanced services project are just special cases of sub-projects.
For example, specifying the CLI option '--service lbaas' is the same
as specifying '--subproject neutron-lbaas'.

Specifying no service or sub-project will cause neutron-db-manage to
run the command on neutron and all installed sub-projects.

Added and consolidated documentation into devref for alembic migrations.

Partial-Bug: #1471333
Partial-Bug: #1470625

Change-Id: I9a06de64ce35675af28adf819de6f22dc832390d"
43f3d7506121084e29d5084ea3da7cbd2e7e7902,2015-08-13 15:34:06+03:00,"Add test that checks external tables are not changed

Alembic migrations should not change tables which models were moved
out of Neutron. This change add check for this.

Also this change remove clear_override from db_sync in
_TestModelsMigrations which is not needed.

Closes-bug: #1466704

Change-Id: I587cd6fb2baa82fd7e452bb8597136efa5b8084e"
98618644ce3c36eabfcc0aea49e7962b0506a567,2015-08-13 16:02:19+03:00,"Add configurable options for HA networks

The L3 HA mechanism creates a project network for HA (VRRP) traffic
among routers. The HA project network uses the first (default) network
type in 'tenant_network_types'. Depending on the environment, this
combination may not provide a desirable path for HA traffic. For
example, some operators may prefer to use a specific network for HA
traffic to prevent split-brain issues.

This patch adds configurable options that target the network_type and
the physical_network of the created HA network.

Doc-Impact
Closes-Bug: #1481443
Change-Id: I3527a780179b5982d6e0eb0b8c32d6dafeeab730"
25420bb1bbccb037866872efdf1e5d3458d286a6,2015-08-13 17:23:46+00:00,"Setup reference service providers for API test runs

Partial-bug: #1483266
Change-Id: Ia979fa2fdf25f3c1dbe9e7160d6dde2df51c305e"
0b19a1ef55b2533a55e9909755f31ee2026ce40f,2015-08-13 13:22:33-07:00,"Remove vmware plugin from neutron (etc part)

Remove neutron:/etc/neutron/plugins/vmware/ because
it has been moved to vmware-nsx:/vmware_nsx/etc/
in commit# b27bc1942195ff551cd22ddaf6853a25302cbb7e.

This is the first part of vmware plugin decomposition
(etc, extensions, and database).

Partial-bug: #1483453
Change-Id: Ic6fe5e256369a1b6aabdaadf019989f0e6a6e444"
9ba23658a34eac696a7eed9a8aaca6a4625d1391,2015-08-13 18:37:49-07:00,"l3_db: not use L2 plugin _get_port unnecessarily

This patch is clean up to prevent future breakage by eliminating
potentially dangerous code.

l3_db uses L2 plugin _get_port method unnecessarily instead of get_port.
It's dangerous because _get_port returns ORM db object which allows
the caller to update db rows directly. So the caller of _get_port may
update port db without notifying L2 plugin unintentionally.
In that case, L2 plugin or ML2 mechanism driver will be confused.
This patch replace _get_port with get_port method where possible.

Change-Id: I5a23f6cac5ea359645e6947fd69978f060c4ba97
Related-Bug: #1475093"
ff709d5b83abdc954311be9e7d52dfa9e9c3d7ba,2015-08-13 18:37:49-07:00,"l3: not use L2 plugin _get_subnet unnecessarily

This patch is clean up to prevent future breakage by eliminating
potentially dangerous code.

l3_db and related code use L2 plugin _get_subnet and related method
unnecessarily instead of get_subnet.
It's dangerous because _get_subnet returns ORM db object which allows
the caller to update db rows directly. So the caller of _get_subnet
may update subnet db without notifying L2 plugin unintentionally.
In that case, L2 plugin or ML2 mechanism driver will be confused.
This patch replaces _get_subnet and _get_subnets_by_network with
get_subnet, get_subnets_by_network where possible.

Change-Id: I85769e639a408a292b5bd70a9d9a1ac292e2b51c
Related-Bug: #1475093"
f1457af336b8b4ed72105b9d98a53f95c28c0c1e,2015-08-14 19:34:54+08:00,"Replace internal calls of create_{network, subnet, port}

When API controller calls method create_{network, subnet, port),
it made sure that the necessary default values for attrs are filled properly
according to attr mapping.

However, internal calls to these methods do not follow the convention,
when extension codes miss these values, exceptions will be thrown.

This patch introduces helper functions to fix up arguments and replaces
the direct callers of those methods.

Co-Authored-By: gong yong sheng <gong.yongsheng@99cloud.net>
Co-Authored-By: yalei wang <yalei.wang@intel.com>

Change-Id: Ibc6ff897a1a00665a403981a218100a698eb1c33
Closes-Bug: #1383546"
419ce6281dd1e44597617d44fe5496580536b0e5,2015-08-14 16:36:15+03:00,"DVR: do not reschedule router for down agents on compute nodes

Scheduling/unscheduling of DVR routers with l3 agents in 'dvr' mode
running on a compute nodes is done according to DVR serviced ports
created/deleted on that compute nodes. It doesn't make sense to reschedule
router from l3 agent on compute node even if it's down - no other l3 agent
can handle VMs running on that compute node.

Closes-Bug: #1470889
Change-Id: Ib998b9e459dd1a9ab740fafa5d84dc3211ca0097"
7e9b0e4ac53e83b18dd949564435710e86c7b81e,2015-08-15 06:36:22-07:00,"Use a conntrack zone per port in OVS

Conntrack zones per network are not adequate because VMs
on the same host communicating with each other cross iptables
twice. If conntrack is sharing the same zone for each cross,
the first one can remove the connection from the table on a RST
and then the second one marks the RST as invalid.

This patch adjusts the logic to use a conntrack zone per port
instead of per network. In order to avoid interrupting upgrades
or restarts, the initial zone map is built from the existing
iptables rules so existing port->zone mappings are maintained.

Closes-Bug: #1478925
Change-Id: Ibe9e49653b2a280ea72cb95c2da64cd94c7739da"
048316e98114145ad19285cdeedd0040b59a66f8,2015-08-16 14:42:48+09:00,"Python 3: encode or decode i/o data of Popen.communicate()

In Python 3, input and output for Popen.communicate() is bytes type.
Therefore, encode input data and decode return data for Popen.communicate().

Change-Id: I70f009e3366f0eeda5790652ea14f3627b934664
Blueprint: neutron-python3
Closes-Bug: #1479159"
7e699606bb30422c87cf554470b6c98cfe183417,2015-08-16 02:40:23-07:00,"Get rid of exception converter in db/api.py

The exception converter was necessary because the exceptions the
oslo db decorator looked for before were statically defined. The
retry decorator now accepts an exception_checker argument that takes
a function to call on exceptions to determine if they should be
caught.

This patch gets rid of the converted and replaces the one use case
with the new exception_checker argument.

Closes-Bug: #1485819
Change-Id: Ic619b03737cbf51276f87c4458ecc4183424731c"
8d0e5dac4d99b97d91db4e3781677bf83fc656aa,2015-08-16 07:45:44-07:00,"NSX plugin: Moving away plugin extensions

As part of plugin decomposition, this patch moves vmware-nsx extensions
out of the neutron repository.

Change-Id: Iff4c4781dd96b10733a98f176cf2f0f4d25cb34f
Related-Blueprint: core-vendor-decomposition
Partial-bug: #1483453"
7e0a4dc9797101833e183c3d1b95fb947af49eac,2015-08-16 19:27:59+00:00,"Unskip firewall test

Dependent patch addresses the issue, so we no longer
need to skip the test

Related-bug: #1483875

Depends-on: I455bbe00395377509beca5ec1d54cf4f7a57152d
Depends-on: I00d99c05328268b33c6f20b1d24e7507afccb92c

Change-Id: I41b51f36c1344dce20b1b9437c175469acfafb57"
2621940ded76b30333beb3369bb4214301ee7d78,2015-08-17 05:35:20+00:00,"Add network to SubnetContext

The network context is useful in the subnet context so that mechanism
drivers can access information such as the provider network type.

Closes-Bug: #1481882
Signed-off-by: Joe Mills<joe@midokura.com>

Change-Id: I718c80512af0f2a43855efb16c2c0da69ef6b741"
320d7a83ba269b16874f19e39a33bdc1d815ed5d,2015-08-17 09:11:20+02:00,"Redundant tests removed from ovs-lib unit tests:

The idea here was to remove redundant unit tests.
The approach here has been that if the function being tested does not
implement any custom logic (apart from calling ovsdb), the unit test
does not help.

Refer to the bug description for more details of the specific tests
removed.

Change-Id: I35dc60bb714566c33f5cee5aab3e5b83bd0610e3
Closes-Bug: #1459811"
9d0088d0fb14fa21891e434c0b983036f86ae62a,2015-08-17 19:19:53+00:00,"NSX: Move DB models as part of core vendor decomposition

This patch removes the database models from neutron repo.
Also removes README, common modules and plugin module.

Change-Id: I5d5b0acf34417889c2a449f22b92fd105697d90d
Related-Blueprint: core-vendor-decomposition
Partial-bug: #1483453"
805496dd5ce85c9280342f1702b12dd30b201bbb,2015-08-17 19:26:01+00:00,"Don't fatal error during initialization for missing service providers

Sometime during the split, code was added to fixup driver paths,
which imports service providers even for plugins which are not
in use. That, combined with neutron including default service
providers for VPN and LOADBALANCER, resulted in a really messy
mess in terms of removing VPN from the main neutron test suites.

This change stops the imports, so that if one of the services is
missing, neutron server can still start. It likely breaks the driver
path fixup, which can be fixed outside of this gate blockage.

Closes-Bug: #1483266
Change-Id: I23f9007357d8cbbae599997c244561a4e2f32ce1"
75edc1ff28a460342a9b5e5b7d63c6f4fb59862d,2015-08-18 12:24:41+05:18,"Setup firewall filters only for required ports

We can skip trying to setup firewall filters for ports which are
having port_security_enabled as False or which are not associated
to any security group.

Closes-Bug: #1482554

Change-Id: Ie65201308d93c746fe4ef38f402ec300227b7d27"
852752edad15e13ab08aee67ea54a1fd2e829942,2015-08-18 12:40:42+02:00,"quota: synchronize resync and count with other dirty_tenants code

We should synchronize every access or modification of
self._dirty_tenants or self._out_of_sync_tenants.

Closes-Bug: #1485969
Change-Id: If17f57e8905fd8d13438d0421f73468e77f723d9"
a264b329df82f3c391f75bd9ad73a1327616a43d,2015-08-18 17:18:35+03:00,"DVR: fix router rescheduling on agent side

The patch makes L3 agent aware of possible SNAT role
rescheduling to/from it.
The gist is to compare gw_port host change.
If it was changed and agent is not on target host then
it needs to clear snat namespace if one exists. If agent
is on target host it needs to create snat namespace from
scratch if it doesn't exist.

Host field was excluded from gw_port comparison on
agent side as part of HA Router feature implementation.
This code was moved to corresponding module.

Closes-Bug: #1472205
Change-Id: I840bded9eb547df014c6fb2b4cbfe4a876b9b878"
7cfcbac066842e2d1dd3578e9eb5801bb4a1af34,2015-08-18 17:22:27+03:00,"manual add/remove router for dvr_snat agent

This patch is to address the failure of manual move of
dvr_snat routers from one service node to another.

The entry in the csnat_l3_agent_bindings table is now removed
during the router to agent unbind operation.
Appropriate notification is now sent to the agent to remove
snat/qrouter namespace.

There were other places in the code
that needed to examine the snat binding table to
check if updates were required -
validate_agent_router_combination() and
check_agent_router_scheduling_needed().

Additionally, schedule_routers() was made optional
within the rpc _notification path since it can
override the manual move being attempted.

Change-Id: Iac9598eb79f455c4ef3d3243a96bed524e3d2f7c
Closes-Bug: #1369721
Co-Authored-By: Ila Palanisamy <ilavajuthy.palanisamy@hp.com>
Co-Authored-By: Oleg Bondarev <obondarev@mirantis.com>"
14e67087828d46a504180b7ac130732286502fb5,2015-08-18 15:41:22+00:00,"Final decomposition of ML2 Nexus Driver

This changeset removes the remaining ML2 Nexus Driver Vendor
code from the neutron repo.  It has been moved to  the
networking-cisco repo.

Change-Id: I95540f35f80ad8eba4bc3f6fa37095842e42c037
Closes-bug:  #1482366
Implements:  blueprint: core-vendor-decomposition"
a8bddee4f43c2772e4ca96acdee9b95feec733a9,2015-08-18 10:01:50-07:00,"Stop using quota reservations on base controller

The reservation engine is subject to failures due to concurrency;
the switch to pymysql is likely to also have a part in observed
failures. While no gate failures have been observed so far, this
is a time bomb waiting to explode and must be addressed.

For this reason this patch acts conservatively by ensuring the
API controllers do not use anymore reservation. The code for
reservation management is preserved, and will wired again on the
controller when these issues are sorted.

The devref for neutron quotas is updated accordingly as a part
of this patch.

Related bug: #1486134

Change-Id: I2a95fef0fdf64ef8781bef99be0fdc743346c17a"
6d6980903c36c2609a98145886b53723d33fed29,2015-08-19 04:58:41+00:00,"Fix tenant access to qos policies

fix policy.json to not allow tenants to create policies or rules
by default and allow tenants attach ports and networks to policies,
please note that policy access is checked in the QoSPolicy neutron
object in such case.

Closes-Bug: #1485858

Change-Id: Ide1cd30979f99612fe89dddf3dc0e029d3f4d34a"
9ebc9f808316ca249348d2c5cd2b9762373f96dd,2015-08-19 12:40:02+00:00,"Fix query in get_reservations_for_resources

For PostgreSQL if you're using GROUP BY everything in the SELECT
list must be an aggregate SUM(...) or used in the GROUP BY.
For reference:
http://www.postgresql.org/message-id/200402271700.28133.dev@archonet.com
Closes-bug: #1486467

Change-Id: Ieb4ead5c785ff17f580bfbc58f370a491733d96d"
d91cd8dc1a59a3d53009e34f1e2f47ed352f5205,2015-08-19 11:32:03-04:00,"Final decomposition of ML2 Cisco UCSM driver

The ML2 Cisco UCSM driver's entry point is being switched to the
networking-cisco vendor repo. The definition of the driver's db
file and all references to it in the neutron branch are removed.

Change-Id: I75eb165f3bb78d31bece26762ca0ff47cab2b79b
Implements: blueprint: core-vendor-decomposition
Closes-bug: #1484165"
9016c1f810ee734d4a19032a470d4acb9462639d,2015-08-19 22:56:52-07:00,"l2pop: check port mac in pre-commit to stop change

Check that a port mac address hasn't changed during the precommit
phase of the port update rather than the post commit so the resulting
exception actually stops it from happening.

Change-Id: I62f120b3c954fa4251a7d676cf2c623e6da5a98b
Closes-Bug: #1486379"
73673beacd75a2d9f51f15b284f1b458d32e992e,2015-08-20 11:00:15+03:00,"Graceful ovs-agent restart

When agent is restarted it drops all existing flows. This
breaks all networking until the flows are re-created.

This change adds an ability to drop only old flows.
Agent_uuid_stamp is added for agents. This agent_uuid_stamp is set as
cookie for flows and then flows with stale cookies are deleted during
cleanup.

Co-Authored-By: Ann Kamyshnikova<akamyshnikova@mirantis.com>

Closes-bug: #1383674

DocImpact

Change-Id: I95070d8218859d4fff1d572c1792cdf6019dd7ea"
a79bc732c5add649dc62742bd15a498e106bcd31,2015-08-20 16:59:55+08:00,"Add missing tenant_id validation in RESOURCE_ATTRIBUTE_MAP

This patch will add the validation for tenant_id of 255 bytes string.

Change-Id: Iaa8f78d2b70693d3365a41834d29e0f12ad3dd36
Closes-Bug: #1486314"
80ee562dec3f397ea6c18a4ca3a1e69ab996341e,2015-08-20 12:26:31+03:00,"Fix _ensure_default_security_group logic

In a case when first attempt to fetch default security group
fails and attempt to add it fails too due to a concurrent insertion,
later attempt to fetch the same default sg may fail due to
REPEATABLE READ transaction isolation level.
For this case RetryRequest should be issued to restart the
whole transaction and be able to see default group.

The patch also removes 'while True' logic as it's unsafe

Closes-Bug: #1475938
Change-Id: I20f65d3eae9421429aced1f4586cb6988ab577ff"
905064eb61479fcd8fdf0e600aaea38ba505d3bb,2015-08-20 11:54:12+02:00,"neutron-db-manage: sync HEADS file with 'current' output

alembic.get_heads() returns all heads for all branches it can find in
scripts dir, while in alembic_version table, it does not store any heads
that were overridden by other branches, even if those depends_on it
instead of having it as down_revision.

To keep 'current' output in sync with what is in HEADS file, we can
attach liberty_* branches explicitly to kilo revision.

It's also a good idea to have a separate 'heads' command that would show
the latest alembic heads based on scripts dir state. See [1] for more
details.

While at it, since different subprojects can link their expand/contract
branches to kilo in different way (some using depends_on the previous
release branch, while others, as suggested in this patch, thru
down_revision to kilo), we kill the check on the number of heads
returned by script.get_heads() since it may differ. If we want to
validate that we don't branch more than twice from kilo, we may add a
separate validation just for that.

[1]: https://review.openstack.org/#/c/204551/

Change-Id: If551633ab26e0eac549c1e13cfa0771383a1a060
Partially-Implements: blueprint online-schema-migrations"
09cad21208ca1745d2859aabeb43c5b028f227b6,2015-08-20 13:23:02+03:00,"DVR: make sure snat portion is always scheduled when needed

commit 236e408272bcb9b8e957524864e571b5afdc4623 introduced
a regression where if router without external gateway was already
scheduled to all dvr_snat agents, then when adding external gateway
to the router, snat portion scheduling was skipped.
The patch fixes regression and adds corresponding unit (functional
in fact) test.

Closes-Bug: #1486627
Change-Id: Iad7e53bd57836f257d7110bc054d58029484ab99"
f36d03f70bfaab09568ca871e00c4bb2e42577d8,2015-08-20 14:21:02+03:00,"Split DRIVER_TABLES in external.py

Split DRIVER_TABLES into separate lists for each driver.
This is needed for easier implementation of ModelMigrationSyncTest
in driver/plugin repositoties that were split out from Neutron.

Related-bug: #1470678

Change-Id: Id4558f2230f42377be1dd4f319a2c97122d1fa9d"
fad17a2d8449f8a364f40896ee0efe8248dbffd3,2015-08-20 13:22:01+00:00,"Sync FK constraints in db models with migration scripts

We do have a functional test that compares Neutron's db models with
migration scripts. The comparison is based on alembic library that had a
bug which is gonna be solved in the next release [1]. Once we start
using newer alembic, functional test mentioned above will start failing
due to models and scripts are not in sync.

This patch adds needed constraints discovered by running functional test
locally with dev version of alembic.

Note: There is already a patch [2] that fixes QoS.

[1] https://bitbucket.org/zzzeek/alembic/issues/317
[2] https://review.openstack.org/#/c/214215/

Change-Id: I0d0bddb05f543365d09e592bd81759534de49367
Closes-Bug: 1486936"
09852988d131bdd61e5685541fd2cec1e0e7b73d,2015-08-20 09:55:25-04:00,"Do not query reservations table when counting resources

Reservations are temporarily disabled, and therefore querying them
is pointless, and potentially harmful.

Change-Id: Iab1d0ffdc54cb5bd06a0d4fbd4eb095ac4b754b8
Related-Bug: #1486134"
b6fd5b9613203819d24a452df982a76c5e7d1daf,2015-08-20 18:09:53+03:00,"Only validate local_ip if using tunneling

Change I4b4527c28d0738890e33b343c9e17941e780bc24 introduced a new
validation to make sure that local_ip holds a valid IP that is present
in one of the interfaces on the machine. However, this test is not
relevant if tunneling is not enabled, since the value is ignored anyway.

This patch changes validate_local_ip to not check local_ip in case
tunneling is not enabled (if no value was put in the 'tunnel_types'
option).

Change-Id: I07119341076573a4226b5ad998bdff09c021ae30
Closes-Bug: #1487053
Related-Bug: #1408603"
e8303ce77c27391213948573108be02a72c34027,2015-08-20 19:57:03+02:00,"Remove VIF_TYPES constant

VIF_TYPES[1] lists all vif types including out-of-tree ones BUT was only
used by out-of-tree bigswitch code: dependent change defined VIF_TYPES
in bigswitch repo in order to allow VIF_TYPES removal from neutron code.

[1] in neutron.extensions.portbindings

Closes-Bug: #1486277
Related-Bug: #1486279
Depends-On: I79d0af975bb62a2ccea87eda5cf43f3f064b5078
Change-Id: I39fc344361c21332b947f21f157d4f2a27caad47"
86476becd884a0f238354335bc87e5209d67c94f,2015-08-21 00:12:29+02:00,"Move in-tree vendor VIF_TYPE_* constants

VIF_TYPE_* constants[1] defines all vif types BUT vendor ones are only
used by in-tree/out-of-tree vendor code. This changes moves in-tree
VIF_TYPE_* constants[2] to vendor modules to ensure they will be removed
from neutron code on decomposition.

[1] in neutron.extensions.portbindings
[2] VIF_TYPE_HYPERV/IB_HOSTDEV/HW_WEB/VROUTER

Change-Id: Iee73426221d693689ba24d2ce2660bb7351f02fc
Partial-Bug: #1486279"
7ea4eb6c760af72c1937f3857fa524206ecf639d,2015-08-21 09:34:40+08:00,"Fixed broken link in neutron-server's documents

The neutron-server document contains a link (http://neutron.openstack.org)
which is not exist anymore. This patch updates the link to neutron's doc site
and wiki page.

Change-Id: I9d137ed9c877fc1a12590bd743fac67d06711f7f
Closes-Bug: #1486848"
6063e70927ed436772c602ce0cf26d5d24486fbd,2015-08-21 08:15:56+03:00,"QoS: fix get bandwidth limit rules to filter them per policy

add qos_policy_id as filter before calling
QosBandwidthLimitRule.get_objects to get the bw rule(s)
which attached to that policy.

Closes-Bug: #1486053
Change-Id: Ie316cbe48c94f113699b09d9784115a3b0ade32f"
9750ab79c67f0f5b24cbbb9b7f2c499d4b911283,2015-08-21 07:09:18+00:00,"IPv6 display suitable message when MTU is invalid on iface

IPv6 protocol requires a minimum MTU of 1280 bytes on the interface
to configure an IPv6 address to the interface. This patch logs an
appropriate error message and exits the agent if ipv6 is enabled and
network_device_mtu is less than the minimum value.

DocImpact

Closes-Bug: #1475015
Change-Id: I13666de4e6f5f6775ad26342e513c3c17a003b8e"
63b03362821deadc0e65cce54b11cb7d4c2262d2,2015-08-21 12:18:32+01:00,"Add config option to specify ovs datapath.

This change introduces a new datapath_type parameter
to allow specification of the ovs datapath to be used.
This change introduces new functional and unit tests.

DocImpact
Change-Id: I929d8d15fc6cfdb799c53ef0f3722f4ed5c1096d
Partial-Bug: #1469871"
43d62c62a8525a1f2aa67b0ee201c09409fefa9a,2015-08-21 12:54:33+01:00,"DHCP agent: clarify logic of setup_dhcp_port

When the DHCP port already exists, the code for finding it is
unhelpfully mixed up with the code for updating its subnet IDs and
fixed IP addresses.  Clarify that area by splitting setup_dhcp_port
into 3 subroutines, for each of the existing, reserved and new port
cases.

Related-Bug: #1486649
Change-Id: I2a537560dc7a37299f4b7b4cd508d9309bbe1209"
053bfc5a4f03c620edf4d17a9bd7cebe001c142f,2015-08-21 15:16:30+03:00,"Graceful OVS restart for DVR

Graceful OVS restart that was intoduced in I95070d8218859d4fff1d572c1792cdf6019dd7ea
missed that flows are also dropped in setup_dvr_flows_on_integ_br.

Related-bug: #1383674

Change-Id: I7b24a159962af7b58c096a1b2766e2169e9f8aed"
e6708f6d47dc0bfdde3c9ced5066857c695ff717,2015-08-21 13:20:45+01:00,"ip_lib: support creating Linux dummy interface

This is for use by a DHCP agent interface driver in the
networking-calico project.  networking-calico connects VMs without
using bridging, so it needs an unbridged DHCP port interface with
which it can associate the DHCP subnet prefix, and the Linux dummy
interface (in conjunction with use of Dnsmasq's --bridge-interface
feature) is suitable for that purpose.

Partial-Bug: #1486649
Change-Id: I5485c187bc44bac3c2942c4fc9e5a502912a81a2"
f23eb3290a1943c12e0ffbfd812ff5443f57af3c,2015-08-21 16:32:53+02:00,"Only mark metadata packets on internal interfaces

Currently iptables rules set on L3 agent with metadata_proxy enabled
mark all packets coming from all interfaces including external interfaces.

This change updates PREROUTING rules from MANGLE table to mark packets
only from internal interfaces.

Change-Id: I01549df7b99be84cd46b6f97a5fd62aec1f43275
Closes-Bug: #1477553"
1787c85acfa800e88335d8336fbaadecece80fe2,2015-08-21 17:39:18+03:00,"Template for ModelMigrationTest for external repos

This change adds tempate for ModelMigrationTest which should be
implemented in all driver/plugin repositoties that were split
out from Neutron.

Also split DRIVER_TABLES into separate lists for each driver.
This is needed for easier implementation of test.

Closes-bug:#1470678

Change-Id: I02100d15d71519014db7c8894bd2cb36c86d32a0"
6334cac7c83dc53d20a91315eb3e75142c519fce,2015-08-21 15:06:32+00:00,"Remove the ML2 Nuage driver code

This changeset removes ML2 Nuage driver vendor code,
currently present in neutron core to vendor repo.

Closes-bug: #1486662
Related-Blueprint: core-vendor-decomposition

Change-Id: I6388e91ba56aa6b8f16c723f7d07234d262b6c16"
09b09de925a69bdb4f83b3709b83634f98d8d99f,2015-08-22 13:33:31-07:00,"Support dhcp metadata service for all networks

Vendors implementing Neutron L3 API in their devices may not be able to provide
metadata server access via the Neutron router. In such cases we want to allow
the metadata service as done for non-isolated networks segments.

DocImpact
Change-Id: I5f6ee9788717c3d4f1f2e2a4b9734fdd8dd92b40
Closes-Bug:#1483939"
20459979e0b37ad74190d77cb9b7574b012f8ac4,2015-08-24 17:43:08+08:00,"Add empty policy rule to get_rule_type action

Without this empty policy rule, get_rule_type will use default, which
will demand admin role or tenant_id in object. but rule_type has no
tenant_id in its body.

Change-Id: I92b1222fbcdc2efd13ca6f586cfefefc55b59189
Closes-bug: #1487324"
2ef027ed39e0398f2dbdd63b09a6a0279d6bc6c4,2015-08-24 03:13:14-07:00,"Make models_v2 explicitly import rbac_db_models

The Network model was implicitly relying on a core plugin to import
the db_base_plugin_v2 module which would import the rbac model module
so ""NetworkRBAC"" would be defined by the time something would query
the DB. However, this isn't the case for scripts or agents that are
importing models_v2 and trying to query the DB directly so they will
now break with an sqlaclhemy error about a missing model.

This patch makes models_v2 import the rbac_db_models module directly
so the model will always be defined.

This would have resulted in a circular import because the
rbac_db_models module required the HasId and HasTenant classes
in models_v2. So this patch also moves these helper classes
into model_base.

Change-Id: I338ce1c0ba55647e6410a63f937737f75a63057d
Closes-Bug: #1488032"
d74c57a1be28f6a3fd9dad77ee2d6da136c4554b,2015-08-24 11:15:32+00:00,"OVS agent don't hard code tunnel bridge name

In setup_tunnel_br the name of the tunnel bridge
should not be hard coded

Change-Id: I7aebc27eb8d9dd347b34e31f7810fbffd6edf49a
Closes-bug: #1487435"
e394b04e5c339e08435e9635a58c6d4689b6545b,2015-08-24 20:16:05+00:00,"Move in-tree vendor AGENT_TYPE_* constants

AGENT_TYPE_* constants[1] define all agent types BUT vendor ones are only
used by in-tree vendor code. This changes moves in-tree AGENT_TYPE_*
constants[2] to vendor modules to ensure they will be removed from neutron
code on decomposition.

[1] in neutron.common.constants
[2] AGENT_TYPE_HYPERV/MLNX/SDNVE

Change-Id: Id03fb147e11541be309c1cd22ce27e70fadc28b5
Partial-Bug: #1487598"
e649dc2681f5b365fb3169973cd213f0a8b72860,2015-08-24 20:26:01+00:00,"Remove out-of-tree vendor VIF_TYPE_* constants

VIF_TYPE_* constants[1] defines all vif types BUT vendor ones are only
used by out-of-tree vendor code. This changes removes out-of-tree
VIF_TYPE_* constants (dependant changes define them in their out-of-tree
repo).

[1] in neutron.extensions.portbindings

Closes-Bug: #1486279
Depends-On: I58d19aefb38d22b75df6231594de099d9a822c9e
Depends-On: I6d4a62399e21204038145363445d356dfb1bfe89
Depends-On: Iad7f549ae909358af308e32c543ba8eb072ff9d3
Depends-On: I68d765457fc45b5e2f72922809033188d4992cdd
Change-Id: I39fc344361c21332b947f21f157d4f2a27caad48"
3d28fc0bfcf7f8c1fa11f83b6f4f35d82ee2eafd,2015-08-24 17:26:35-05:00,"Add dns_label processing for Ports

Functionallity is added to enable users to specify a dns_label field during
port creation and update. This dns_label field will be used for DNS resolution
of the hostname in dnsmasq and also will be used when Neutron can integrate
with external DNS systems.

Change-Id: I6beab336dfd9b70b1af6e975939c602047faa651
DocImpact
APIImpact
Closes-Bug: #1459030
Implements: blueprint internal-dns-resolution"
cfa8f537710d8d7ef407b4194295f15ed03b3fa0,2015-08-25 04:19:29+00:00,"Decomposition phase2 of NEC plugin

As part of plugin decomposition effort, NEC plugin is removed
from the main neutron repo and moved to networking-nec repo.

Related blueprint core-vendor-decomposition
Closes-Bug: #1487929
Change-Id: I2ef7ec241f061516b72c4df9f959af027c4c366c"
4b329c345c7820ff12bf25a91228cdfbf99500df,2015-08-25 08:44:13+01:00,"L3 agent changes and reference implementation for IPv6 PD

This patch adds the common framework to be used by specific
implementations of the DHCPv6 protocol for Prefix Delegation.

It also includes a reference implementation based on the Dibbler
DHCPv6 client. Dibbler version 1.0.1 or greater is required.
Sanity tests are included to verify the installed version.

A patch for admin/user documentation is up for review here:

https://review.openstack.org/#/c/178739

Video guides for configuring and using this feature are available on
YouTube:

https://www.youtube.com/watch?v=wI830s881HQ
https://www.youtube.com/watch?v=zfsFyS01Fn0

Co-Authored-By: Baodong (Robert) Li <baoli@cisco.com>
Co-Authored-By: Sam Betts <sam@code-smash.net>

Change-Id: Id94acbbe96c717f68f318b2d715dd9cb9cc7fe4f
Implements: blueprint ipv6-prefix-delegation"
b939672d6bc84e7fb9c27857ee5e641f7c18aeb1,2015-08-25 09:42:12-04:00,"Fix AttributeError in _clean_updated_sg_member_conntrack_entries()

The conntrack work that recently merged introduced a bug
due to an incorrect 'if' statement, it was only detecting
when one variable was not set instead of both, which can
cause an exception.  This is currently causing jenkins failures
with a number of other changes.

Introduced in Change Id Ibfd2d6a11aa970ea9e5009f4c4b858544d8b7463

Change-Id: I2519fdceefc9255c21d8226cdeffec40a7d444f6
Closes-bug: #1488284"
9a4f2e51a5b8f6f96535ee6968e5a209dd518654,2015-08-25 18:46:25+03:00,"Validate router admin_state_up on upgrade to distributed

For proper upgrade of centralized router to distributed the router
needs to be disabled (admin_state_up set to false).
The patch adds corresponding validation.

Closes-Bug: #1428713
Change-Id: Idf25db0936eee892ecb169a8678ba7f0a2cfceb6"
a65ccdb573a5bb62d308eb00d81f60765d3948e8,2015-08-26 12:09:08+08:00,"Make delete-vlan-bridge and delete-vlan functions clear

Change delete_vlan_bridge function name to reflect that it doesn't
only work with vlans but also for example with vxlan, the same with
delete_vlan function.

This refactor work is needed to make the code clear.

Change-Id: I76f5f91aa9437aa4478e2876c9bb3dfd75e2ca63
Closes-Bug: #1488298"
cbeee7da500114d289f4cfc6b5e1ddaf8d5c8acf,2015-08-26 10:10:42+00:00,"SimpleInterfaceMonitor handle case when ofport is an empty set

ofport is usually an integer but when a port is not ready
ofport is an empty set.
This patch makes SimpleInterfaceMonitor handle that case too.

Change-Id: I91611d73e8d5551fc458082ce021cbeb5123a6f2
Closes-bug: #1485206"
cf003af20906f3ef556a39d4f4f7067193dbfb68,2015-08-26 17:23:04+03:00,"SR-IOV: deprecate agent_required option

When SR-IOV introduce in Juno Agent supported only link state change
Some Intel cards don't support setting link state, so to
resolve it the SR-IOV mech driver supports agent and agent less mode.
From Liberty the SR-IOV agent brings more functionality like
qos and port security so we want to make the agent mandatory.
(of course I already talked with Intel Guys to get their approval)

This patch deprecates the agent_required in Liberty
and updates the agent_required default to be True.

DocImpact
Closes-bug: #1488807
Change-Id: I8799425c2825415ef05bec909e6b4085ffc1e3c5"
298d225e2962d41ae08f2777facc938a84bf4ef9,2015-08-26 16:55:26+01:00,"DHCP agent: add 'bridged' property to interface driver

This allows a custom interface driver to use the reference DHCP agent
to provide DHCP service to unbridged TAP interfaces, by overriding the
definition of the property as follows.

    @property
    def bridged(self):
        return False

Partial-Bug: #1486649
Change-Id: I2c6bbd9df6833a65088173b021790eb23e64616b"
3a9e778399af8380b11c968da39e08b4a97a9f1f,2015-08-26 21:11:58+00:00,"Add snat ports cache to dvr router

This reverses the effect of [1] but in a way that works with the
current structure of the code and keeps DVR details in DVR classes

[1] https://review.openstack.org/#/c/200293

Change-Id: Ia8468881de6538882d4a14725b55db53e23d2e4c
Closes-Bug: #1479130"
34a329b4de7c801c15b3c214cc2b122ac82d0b72,2015-08-26 14:14:56-07:00,"Add a functional test to validate dvr snat namespace

Add a functional test to validate the dvr snat
namespace and its internal interfaces when internal
networks are removed and added.

Change-Id: Id44f5e5899e959be53b09e6f9bc732f553ae9a5a
Related-Bug: #1479130"
a584f4b42d5a93959d23ef03d06f6acb3eb62c00,2015-08-26 15:56:56-07:00,"Fix py34 No sql_connection parameter is established error

Tests that were using DB connections that did not happen to
import config.py were not setting the DB connection string.
The base test class now sets the string instead of relying
on an import to happen.

Change-Id: I7aceffff427d6526c0059dd88f67a58783292abd
Closes-Bug: #1489098"
4d1febcb16c47707fe2eadae670f2ada8c0408df,2015-08-27 10:56:12+03:00,"Update template for ModelMigrationSync test

Add some more useful details in template and update contribute.rst
with link for template.

Related-bug: #1470678

Change-Id: I8785129ba85236220650b2ba7ec0bc605847b1b7"
7b7c15ba4e2f0646000ecca2acecb98081268772,2015-08-27 20:04:35+03:00,"Add Geneve type driver support to ML2

More information about Geneve protocol can be found here:
  https://tools.ietf.org/pdf/draft-gross-geneve-02.pdf

Following configuration variables were added:
[ml2_type_geneve]
  vni_ranges - Comma-separated list of <vni_min>:<vni_max> tuples
               enumerating ranges of Geneve VNI IDs that are
               available for tenant network allocation
  max_header_size - Geneve encapsulation header size is dynamic, this
                    value is used to calculate the maximum MTU for the driver
                    this is the sum of the sizes of the outer
                    ETH + IP + UDP + GENEVE header sizes

DocImpact

Change-Id: I8c29a1c1a7c79e02c26ac9e2ad2645d30dfbeefc
Closes-Bug: #1461069"
a158d62f30d056ac2ab6bb30efd7fafc2b7a3153,2015-08-27 17:44:50-04:00,"Fix Prefix delegation router deletion key error

Change-Id: I1b7008bc6a9dd7d23a651023fd540eec3e46f072
Closes-Bug: #1489576"
5920835a58ae9310a25843bfdb552519c06f4f6f,2015-08-27 19:00:56-04:00,"Document prefix delegation testing issues

Change-Id: I06071c7497dcd4654c2b03a9b66120b919feb8dc
Related-Bug: #1489650"
ce3fb9065efacdc9e8503f5ba630c4ba1b85855f,2015-08-28 07:57:48+02:00,"Stops patching an object method which could be gone at cleanup

Stop patching the qos plugin 'notification_driver_manager' method
and instead substitute for a mock since it's destroyed and reloaded
on every test run.

Closes-Bug: #1489716
Change-Id: I0e84b19bba92a7cbef837de7994a605a78936250"
c1599337ab8b3ae77ee431f8282673cb0720717d,2015-08-28 07:57:48+02:00,"Base on SqlTestCase to init db tables correctly

Change-Id: I6c6503d4b8b0677cb31fa54185b1aacda68f7b53
Closes-bug: #1488868"
c28b8a5ca6ddf1def9b74d4ceb98b9c7b192d696,2015-08-28 15:29:52+08:00,"Add policy and policy rule belongs check

before updating and deletion of a qos rule under a policy,
we check if the qos is binding to the policy to avoid users
operating on policy rules binding to other policy.

Change-Id: I04723fa9dd37409cb211c35e701f352419b2d6fa
Closes-bug: #1485993"
7c39642f3640d7b9a3a6a789b5e2f4d3f0cc6837,2015-08-28 14:37:09+04:00,"Add flows to tunnel bridge with proper cookie.

Without that fix flows applied to br-tun through
DeferredOVSBridge are created without cookie.
That results in l2pop flows being deleted in the process of
cleanup of stale flows.

Solution is to add cookie to all add/mod-flows of OVSBrigde
class in the method do_action_flows.
Also, agent_uuid_stamp moved to a proper place - into the
base OVSBridge class as storing attributes in Mixing was
just a wrong code design.

Change-Id: Ic09a0dbc04fc5da38d30e1392cf2ea27d576040c
Closes-Bug: #1489372"
8bc1411f0f7240a913a0627980771f3c75977f7d,2015-08-28 03:40:04-07:00,"Fixed the typo in the doc string of the class SubnetPoolReader

Closes-Bug: #1489788

Change-Id: I9fb4563354efaf4e34f9169098dba4e42c489b73"
5b27d290a0a95f6247fc5a0fe6da1e7d905e6b2d,2015-08-28 16:35:40+00:00,"Remove ml2 resource extension success logging

This is the cause of a tremendous amount of logs, for no
perceivable gain.  A normal dvr run in the gate shows this debug
message around 120K times, which is way too much.

Closes-Bug: #1489952

Change-Id: I26fca8515d866a7cc1638d07fa33bc04479ae221"
013fdcd2a6d45dbe4de5d6e7077e5e9b60985ef9,2015-08-28 16:41:07-04:00,"Improve logging upon failure in iptables functional tests

This will help us nail down a more accurate and efficient logstash
query.

Change-Id: Iee4238e358f7b056e373c7be8d6aa3202117a680
Related-Bug: #1478847"
f35d1c5c50dccbef1a2e079f967b82f0df0e22e9,2015-08-30 04:21:56+00:00,"Fixes wrong neutron Hyper-V Agent name in constants

Change Id03fb147e11541be309c1cd22ce27e70fadc28b5 moved the
AGENT_TYPE_HYPERV constant from common.constants to
plugins.ml2.drivers.hyperv.constants but change the value of the
constant from 'HyperV agent' to 'hyperv'. This patch changes
the name back to 'HyperV agent'

Change-Id: If74b4b2a84811e266c8b12e70bf6bfe74ed4ea21
Partial-Bug: #1487598"
599977e20bd480305434168400055fa417aad8b1,2015-08-31 12:08:09+02:00,"Fix locale problem in execute()

Change from new format string to old style formatting.

Change-Id: Ib39de7169416c2cc053d4aa909075c68cd2d7f0b
Closes-bug: #1449897"
6324f7f23d5debecf7201a371050e20527550a8c,2015-08-31 12:38:39+00:00,"Fix usage of netaddr '.broadcast'

netaddr 0.7.16 changed the behavior of IPNetworks with /31 and /32
prefixes to make their 'broadcast' attribute return None. This patch
replaces the use of the attribute with a -1 index lookup to get the
last address instead.

Closes-Bug: #1490380
Change-Id: I97d71c4051882ddd9e496c78cfbce840ad7a2b67"
ed392dc5354131b377ebf6aea518fb8e2ca7f893,2015-08-31 17:46:42+03:00,"Fixed filters for functional tests

Removed filter for unused tee utility.
CommandFilter for curl replaced with more stricted RegExpFilter
and now allow run curl only with specified parameters.

Change-Id: I5d151a63f85cb969f79d4d92f5422e8e88855be5
Closes-Bug: #1487139"
8200439fa0f797e814cfa1f51d5cf7a86d42f4a0,2015-08-31 21:24:06+00:00,"Split SR-IOV configuration file into driver and agent pieces

This is the same as we do for linuxbridge or openvswitch. We should not
expose server-only configuration options to the agent, and vice versa.

DocImpact
Closes-Bug: #1489060
Change-Id: Ie1eda925e051f85d53ad9624d6617d095cf8c7be"
e2fa9012fac98fb52cfaa0d342d455a95fdcf6e8,2015-08-31 23:27:19+02:00,"Correct neutron-ns-metadata-proxy command when watch_log is False

Neutron[1] uses the option --metadata_proxy_watch_log=false to disable
log watch[2] in neutron-ns-metadata-proxy instances but should use the
option --nometadata_proxy_watch_log. It implies that
neutron-ns-metadata-proxy instances fail to start.

This changes updates neutron[1] to use the correct option.

The change also corrects associated functional tests[2], indeed
metadata_proxy_watch_log option has no effect if a log_file/dir is
defined for the agent running the neutron-ns-metadata-proxy.

[1] neutron.agent.common.config
[2] could be done by setting metadata_proxy_watch_log = false
[3] neutron.tests.functional.agent.test_l3_agent

Closes-Bug: #1490594
Change-Id: Iaec4a78847d802234c99514313440fd7c14bc554"
1ec34b7d0d38324053996394be90d6fdecfed3ef,2015-08-31 22:05:14+00:00,"Linuxbridge-agent: fix bridge deletion

Make sure that linuxbridge agent doesn't delete
physical interfaces if they are specified in the
physical_interface_mappings.

Change-Id: I95e3c46b03ba2ae0872f5def47f26d4e8ea13094
Closes-Bug: #1334634"
61121c5f2af27e31092db7ac6947f796198410a8,2015-09-01 03:27:13+00:00,"Decentralize the managemement of service providers

After the service split, some of the configuration, parsing and
validation was kept in the neutron core; ultimately this needs to
get closer to the services where it belongs.

This patch starts from ProviderConfiguration and ServiceTypeManager
classes, and aims at removing the hard-coded elements, like the list
of known advanced services, so that in the long run we can make
Neutron easier to plug with external services.

Partial-bug: #1473110

Depends-on: I44edcceba37ac58efcc0a53c9d1f835d9530344a
Depends-on: I8924234aadf786801ffc100d7daa27acc145a195
Change-Id: Ia4cad678e6c722ca05821dbdbf05d61523246a86"
28e54ef089e8b3eca8e86992340530948aec12b7,2015-09-01 04:16:01+00:00,"Fix import path in neutron-sanity-check for ml2_sriov opts

neutron-sanity-check fails while importing ml2_sriov
configuration. This patch fixes the import path and
also includes a unit test to avoid such issues.

Closes-Bug: #1489374
Change-Id: I4265ee78be9e7f83e35c94187d4577b32005bef9"
f3f5940201a9e010c188f83aead7d93e7e8c9b6d,2015-09-01 23:46:15+01:00,"DHCP agent: allow using gateway IPs instead of uniquely allocated

In each place where the DHCP agent runs, and for each subnet for which
DHCP is handing out IP addresses, the DHCP port needs - at the Linux
level - to have an IP address within that subnet.  Generally this
needs to be a unique Neutron-allocated IP address, because the
subnet's underlying L2 domain is bridged across multiple compute hosts
and network nodes, and for HA there may be multiple DHCP agents
running on that same bridged L2 domain.

However, if the DHCP ports - on multiple compute/network nodes but for
the same network - are _not_ bridged to each other, they do not need
each to have a unique IP address.  Instead they can all share the same
address from the relevant subnet.  This works, without creating any
ambiguity, because those ports are not all present on the same L2
domain, and because no data within the network is ever sent to that
address.  (DHCP requests are broadcast, and it is the network's job to
ensure that such a broadcast will reach at least one of the available
DHCP servers.  DHCP responses will be sent _from_ the DHCP port
address.)

Specifically, for some networking backends it makes sense to allow all
DHCP ports to use the subnet's gateway IP address, and thereby to
completely avoid any unique IP address allocation.

This change therefore enhances the DHCP agent code to be able to use
gateway IPs as an alternative to uniquely allocated ones, with the
choice between those being made by a new interface driver property,
'use_gateway_ips'.  The back-compatible default is to use unique IPs.
An interface driver that wants the DHCP agent to use gateway IPs can
achieve that by overriding as follows:

    @property
    def use_gateway_ips(self):
        return True

Partial-Bug: #1486649
Change-Id: I17e1dc9231a5ec35bd6f84c4c7aca6350d76e8ec"
8ba57a2bf1ce3693db47de4ff8dd5a7a9b5347d7,2015-09-01 21:32:41-04:00,"Deprecate --service option for neutron-db-manage

Now that https://review.openstack.org/198542 has merged we can
deprecate the --service option. From now on instead of
  --service fwaas
we should instead use
  --subproject neutron-fwaas

This puts the *aas subprojects on equal footing with the other
projects in the Neutron Stadium for neutron-db-manage.

In the Liberty release the --service option will be marked as
deprecated. It will be removed in Mitaka.

Related-Bug: #1470625

Change-Id: Iecc678efafd798b62bb83e6e85333c64760f16b5"
5aab6a577950525d8f656d373f2e46a229fa600b,2015-09-01 20:41:54-07:00,"Deprecate external_network_bridge option in L3 agent

This option provides another way to attach to a specific bridge
that is not quite equivalent with how bridge_mappings work in the
L2 agent. This creates inconsistencies between how the L3 agent
behaves when configured with a bridge_mapping and provider properties
of the Neutron network vs. when it just ignores all L2 stuff and
plugs itself directly into the bridge.

See the bug report for more info.

Change-Id: I37de3cd6eaaf34856fa72753f471f4f0a9381836
Closes-Bug: #1491668"
0a258afc7ee3c03974dffa2c0dd0b7b367034cc7,2015-09-01 22:10:32-07:00,"Process user iptables rules before INVALID

Process user-defined iptables rules before the INVALID DROP
rule. This is to allow scenarios where the VMs need to
legitimately receive packets that conntrack doesn't have an
entry for (e.g. SYN-ACK where the SYN wasn't sent by the VM).
A user can accomplish this by adding an allow rule that matches
the headers of these INVALID packets so they get permitted before
they hit the INVALID DROP rule.

Closes-Bug: #1460741
Change-Id: Ie6ce5f3fa688f1bf25b77db5955211922d9fe85b"
afd1983680aea739ef0e4b0ff2c07ab09c4a86fb,2015-09-02 15:28:18+00:00,"Catch errors on 'port not found' while deleting subnet

In some circumstances (like the one triggered by the test_dhcp_ipv6 testcase)
calls to deleting a port and calls to deleting subnets can happen in straight
sequence.

If this happens the execution of the operations can interleave leading
to the subnet deletion to fail because the port has already gone. This patch
ensures a missing port is handled correctly.

The method delete_subnet is ginormous and hence impossible to test at a unit
level without proper refactoring. That can happen with a follow-up patch.

Closes-bug: #1490832

Change-Id: I80c3733c93b2b66c2a1c4bc3bc24272afdd88b1f"
9022fb1ae8f90df59c4da64450eb96de8c011715,2015-09-02 16:13:59+00:00,"Remove implicit registration of *-aas service providers

Implicit registration can be dropped when explicit registration
for load balancer and vpn is implemented. Firewall does not
use service providers and the ServiceTypeManager, so the
precautionary step can be dropped altogether.

Support for configuring providers via the service_providers section
in neutron.conf, is no longer available, hence clear the stale
entry points.

DocImpact

Closes-bug: #1473110

Change-Id: I5e1d254b9a3a24121d9e9d3cb82f877d44079296"
d02bcb9c3917028948b08c319d1443d487c36846,2015-09-02 16:46:34+00:00,"Enable to update external network subnet's gateway-ip

This patch enables users to update gateway_ip of a subnet even if
the subnet is in use for an external network of a router.

Change-Id: I78d2b024c99b1af0001bd454465d2fc02692cbf2
Closes-Bug: #1317363"
cc20673d673113974c78a2b17a9ff4da47ad6665,2015-09-02 16:25:03-04:00,"Add info to debug test_keepalived_respawns gate failure

Current theory is that there's a bug in external_process.active,
it returns True when it shouldn't, then kill -15 on the process
pid fails because the process isn't up. Added ps -p output to
see if the process is up or not.

Change-Id: Ic062be829d5f05a1294f6b2fa54820422871ffcb
Related-Bug: #1490043"
8c3cb79aa54b0ffcdc840c7e95ab809835d05001,2015-09-02 22:43:33+00:00,"Better message on allowed address pairs error

Neutron was throwing a 500 error when a non-iterable was passed
into allowed address pairs. This patch just catches that and
converts it into a regular badrequest message.

Closes-Bug: #1477829
Change-Id: I3c6f55df4912c7a9480fa097988f910b254572fd
Signed-off-by: Kevin Benton <blak111@gmail.com>"
a55e10cfd6369533f0cc22edd6611c9549b8f1b4,2015-09-03 05:57:03+00:00,"Avoid DB errors when deleting network's ports and subnets

DB errors may occur when accessing query results
after the transaction was closed (like ObjectDeletedError).
Hence it's better to avoid DB object access especially
when it's not needed.
This patch changes _delete_ports() and _delete_subnets() to accept
only ids. Indeed, there is no need to pass db objects to these methods.

Closes-Bug: #1484135
Related-Bug: #1454408
Change-Id: I7507cb1c85defb2e6d5144e5832aea713d6251ae"
bd734811753a99d61e30998c734e465a8d507b8f,2015-09-03 14:28:18+08:00,"Implement external physical bridge mapping in linuxbridge

In some deployment scenario, it is not allowed to remove system
ethernet configuration from physical interface to newly-created
physical bridge by neutron due to some IT regulations.
End-users require to take advantage of the pre-existed(user-defined)
physical bridge to connect tap devices for neutron.

Closes-Bug: #1105488
Implements: blueprint phy-net-bridge-mapping
DocImpact

Change-Id: Ia0eaa6233d8da93da32e86404b15184b77937d0a"
9f6bd17703b7286be9e7d439d15f4dec2774e13a,2015-09-03 06:40:50+00:00,"Add support for PluginWorker and Process creation notification

There are several cases where plugin initialization should be
handled after neutron-server forks API/RPC workers. For example,
starting a client connection to an SDN controller before forking
copies the fd of the socket to the child process, but then you have
multiple processes trying to read/write the same socket connection.

It is also useful for a plugin to be able to do something in only
one process, regardless of how many workers are forked. One example
would be handling syncing from an external system to the neutron
database.

This patch does 3 things:
1) Treats rpc_workers=0 as = 1. This simplifies the code for
   handling notification that forking has completed. In the
   existing code, calling the notification in the Worker object's
   start() method would happen twice in the case where both api
   and rpc workers were 0, despite there being only one process.
   An earlier patch already changed the default api_workers to be
   the number of processors.
2) Adds notification of forking via the callbacks mechanism.
   Plugins can subscribe to resources.PROCESS, event.AFTER_CREATE
   and do any post-fork initialization that needs to be done for
   every spawned process.
3) Adds core/service plugin calls to get_workers() which defaults
   to returning (). Plugins that need additional processes to spawn
   should just return an iterable of NeutronWorkers that will be
   spawned in their own process.

DocImpact

Closes-Bug: #1463129
Change-Id: Ib99954678c2b4f32f486b537979d446aafbea07b"
051ff13771026b015c893a19a89654bf2ca4d018,2015-09-03 02:59:54-07:00,"Don't setup ARP protection on LB for network ports

Skip adding ARP spoofing protection on Linux bridge ports
with a device_owner field starting with 'network:'. This is
already the case for the other iptables-based spoofing
protection and is necessary for floating IPs to function
correctly on router gateway ports.

Change-Id: If53733fb3060e5ab44bac5388f42bdc384bcdb93
Closes-Bug: #1483315"
da1ac497d2d10d008925311e3f14e9750f7b86b2,2015-09-03 03:09:28-07:00,"Don't setup ARP protection on OVS for network ports

Skip adding ARP spoofing protection on OVS ports with a
device_owner field starting with 'network:'. This is
already the case for the other iptables-based spoofing
protection and is necessary for floating IPs to function
correctly on router gateway ports.

Closes-Bug: #1487338
Change-Id: I32cef17ff47fd62e6db16b9083104f07239be25f"
9c466f4d0effa4686ca6744d7b9d015857830cb7,2015-09-03 19:35:41+02:00,"sriov: update port state even if ip link fails

Some SRIOV drivers/devices don't support link state setting,
meaning that 'ip link' fails like this when trying to set state:

 # ip l set dev p2p1 vf 6 state disable
 RTNETLINK answers: Operation not supported

The sriov-nic-agent tries to do that in
SriovNicSwitchAgent.treat_device() and fails because of non-zero
exit status from 'ip link' and, therefore, doesn't reach the code
that updates the actual port status, so port could hang in a BUILD
state even if binding was successful.

This patch fixes problem of nova not being able to successfully bind
or cleanup such a port. It does not fix a case when user manually
updates admin_state_up for a port via API, it's subject to a separate
fix.

Also, replace LOG.exception with LOG.warning for set_device_state()
as the exception would be logged by PciDeviceIPWrapper.set_vf_state()
anyway.

Closes-bug: #1468332
Change-Id: Ifa7c128d369ced60b5986aa0ed92527868f7efab"
f347939fd6c7b5a9e93af2007a0c01d00f29dc2b,2015-09-03 10:42:50-07:00,"Make sure service providers can be loaded correctly

This patch fixes a regression where, if neutron was loaded using
--config-dir, the service_providers option was no longer available.

We bring the logic back (removed by 61121c5f2af), alongside the ability
to load the option auto-magically. This is especially required for DevStack
deployments as of today, because neutron-server is only loaded by passing
--config-file (...)neutron.conf and --config-file (...)ml2_conf.ini

Change-Id: I9bfaed9e19a5506e27795a0b7ad47f4c31fefa40
Closes-bug: #1490990"
2d65cccba29220e46b490871210014b94f086984,2015-09-03 18:15:01-07:00,"Don't log deadlock or retry exceptions in L3 DB

We don't want to log exceptions in the l3 DB that will be retried
by the DB retry decorator because it will look like a failure in
the log when it actually ends up being retried.

Change-Id: I024fc2db9022809194178c227d994bc6ed33c78b
Closes-Bug: #1494886"
997aa86fa12e3209b65741ef95906d491895a493,2015-09-04 01:15:47+00:00,"Fix a wrong condition for the _purge_metering_info function

Fix a situation for the _purge_metering_info function
when the items will never be deleted from the metering_info.
Delete the metering_info dict and use the metering_infos instead.
Fix the problem with changing a dictionary during iteration.
Add the unit tests for the _purge_metering_info and
_add_metering_info functions.

Co-Authored-By: Yaroslav Isakov <yisakov@mirantis.com>

Change-Id: I9031a5f27ae6438ffd5c5a48b0cf5cdc6867eff3
Closes-Bug: #1490581"
cd524065e2ac4f48d8b9810fa9735f0fd925c4d8,2015-09-04 01:16:32+00:00,"Changed filter field to router_id

The get_sync_interfaces query will always return all router ports
from database even it is supposed to query specific ones that
belong to a certain router. In large L3 scale environment with
number of route ports in place, this would lag the response time
for adding router interface and router L3 agent binding.

Closes-Bug: #1489671
Change-Id: Ib78ca766f91783ad2ecca5b728c31602b4ed15d8"
ef409d9da2ecbf12f9916a9a933231146538cf04,2015-09-04 08:30:22+00:00,"Enable most unit tests for py34 job

* Skip TestWSGIServerWithSSL[1] for Python 3 since it seems wsgi + ssl +
  eventlet setup does not behave correctly now,
* Skip test_json_with_utf8[2] until we solve unicode/utf8 encode/decode,
* Fix some more tests to pass for py3,
* Replace print by print() in docs/docstrings.

[1] neutron.tests.unit.test_wsgi (bug 1482633)
[2] neutron.tests.unit.test_wsgi.JSONDictSerializerTest (bug 1491824)

Related-Bug: #1482633
Related-Bug: #1491824
Blueprint: neutron-python3
Co-Authored-By: Cyril Roelandt <cyril@redhat.com>
Co-Authored-By: Cedric Brandily <zzelle@gmail.com>
Co-Authored-By: sonu.kumar <sonu.kumar@nectechnologies.in>
Change-Id: I26e513d4dcf473f4cd79728382fc94af3d901b5d"
da81ae88929c389f0ba8660c4c8dfb79eec7c0fd,2015-09-04 14:50:45+03:00,"OVS agent: flush firewall rules for all deleted ports at once

In some cases, under high load OVS agent has to delete a big amount of
ports during rpc_loop. remove_devices_filter() does iptables-save/restore
for IPv4 and IPv6 which is 4 system calls. It is very expensive and
inefficient to call it for each port individually.

Closes-Bug: #1491922
Change-Id: I4cfb2dfcef5088436c7aaae22c8f66e1ea052311"
e959e474d65211991c12f9495b227da5e4d99ed7,2015-09-04 05:20:23-07:00,"Don't log exceptions in GW update on router create

The LOG.exception statement is not necessary because the exception
is re-raised so if it's a real error it will be logged like any
other failure.

Related-Bug: #1494886
Change-Id: I29aacd8c1187ddf8653009865ed9a62be948c5a7"
1b25e30800c869dacca58afa6b8bf92f4cf9d377,2015-09-04 16:32:36+00:00,"_bind_devices query only existing ports

If a port is deleted right before _bind_devices is called,
get_ports_attributes will throw an exception since the row
corresponding to the port doesn't exist in the OVS DB.
Avoid that setting if_exists to True. The port will be
processed as deleted by the agent in the following iteration.

Change-Id: Ia6590d76f8683e6cba562cde3c39b051549f6c04
Closes-bug: #1489014"
ed3c317ed9182538747f74713154ad94e9d866db,2015-09-04 22:28:42+02:00,"Fixed functional test that validates graceful ovs agent restart

The async_ping function returns a callable that returns True when all ping
futures are done. Since those futures are running for 10 secs, there was no
chance that the result of the callable was True.

The test was bailing out without calling bridge reset even a single time,
effectively leaving the feature untested in gate.

Another thing to note is that for some reason the patch fixed oslo rootwrap
errors in the test when executed locally. Since I still don't understand how
it's possible that it fixes the issue for me, I mark the bug as related only,
and will track logstash after it's merged to see whether it applies unknown
magic to gate jobs too.

Change-Id: Iaa977abddf1a0c6af7e964f1a5cd545ffb79585a
Related-Bug: #1490051"
2228f6d16accc012eadff59d44b7fd475256c36a,2015-09-04 22:21:26+00:00,"Remove _extract_roles method from neutron.policy

This method is not used anymore as it was called only from
the get_admin_roles method. This method has been removed
by commit 734e77365b0f241a3cea0f3c9dfb1d5fcf6eac8c; therefore
the _extract_roles method is now zombie code and should be
removed before it starts feeding on Neutron's brain.

Related-Bug: #1445690

Change-Id: I0306bcea813031897e319af9693e18d03848e378"
ad9aaa63e5ea427d24c07e6a36a2976d83f1a26f,2015-09-04 18:27:42-07:00,"Fix RBAC filter query for negative case

The query to find networks that aren't shared to the querier was
broken. It was querying for the inverse of RBAC entries that shared
to the querier, so it would return the network for each other tenant
it was shared to. This meant that if a network had multiple RBAC
entries, a shared=False filter wouldn't work in the API.

This patch corrects the behavior by adjusting the query that looks
for objects not shared to the caller to make sure the object ID doesn't
appear in the shared subquery.

This patch also adds a test that reliably reproduces the original issue.
The sporadically failing filter test that revealed this issue depended
on a race to have a network be shared to another tenant and to the wildcard
at the same time.

Change-Id: I9dcd869c1640b223221ba12e97284bbfcabbeb2b
Closes-Bug: #1495040"
065275e51ff3852462586d01f5d3dd750bf2d663,2015-09-05 04:19:40+00:00,"Workaround test stream corruption issue.

Change-Id: I4c88f1891f53c6559bca71bf657aa30df2101280
Closes-Bug: #1492505"
d12017ad511a202a12422245cce6204a5731250c,2015-09-05 00:53:36-04:00,"Remove Cisco Meta and N1KV monolithic plugins

This patch removes the Cisco meta plugin and the Cisco
Nexus1000V monolithic plugin as they were deprecated in the
previous cycle.

Closes-bug: #1473217

Change-Id: Id170b9512b2f52a971264336d83b083d487359ee"
b61cd4eaedc3a65657d5dbf8b09ec3c39f250637,2015-09-05 04:59:08+00:00,"Final decomposition of Cisco plugin

This patch follows the previous patch(listed as dependent) and moves
the remaining cisco db models from neutron to networking-cisco.
The patch deletes l3_model and cisco_router_plugin and their associated
config and helper files from neutron

Change-Id: I5b71e1dfb683e633e1cd11386dfb7c2ed7cc7d62
Partial-Bug: #1489609"
6d51ef5d2e275d0d260a592d3ab8ed8a76a63421,2015-09-05 05:06:06+00:00,"OVS agent: handle deleted ports on each rpc_loop iteration

Currently rpc loop processes ports only in case polling is required
(message from ovsdb monitor) or there are port_updated notifications from
server or security group notifications.
In case of just port_deleted notifications port processing is not
triggered during rpc loop.
This may lead to agent accumulating a big amount of deleted ports
and processing all of them at once during next iteration when polling is
required or any notification from server, which might be quite tough for
the agent. Tough means agent will be irresponsive while processing deleted
ports.
The patch makes port deletion processing more gradual.

Closes-Bug: #1491922
Change-Id: I0e1f6dfbf5b56fb18a978d6214e1768560d8ac98"
42f80682d3eff58af60199f817ac402f457491a0,2015-09-06 01:09:16+01:00,"Handle process disappearing before we ask for its PPID

Change-Id: I573aba8e11dca16f8a6565f7e9704be18e938566
Closes-Bug: #1478190"
b89879c286cdc5718ee540c2c581a3f500c18b3e,2015-09-06 10:49:32-07:00,"Adds support to provide the csum option for the OVS tunnels

The new option for the ovs agent will enable to set/unset the
csum option for the vxlan/gre tunnels. The default is maintained as False.

Change-Id: I18dcd8946b585e70f8890a5c222ea37059c4a0c5
Implements: bp ovs-tunnel-csum-option
Closes-bug: #1492111"
13901bdf6941d17069073f489798faaa86151fae,2015-09-07 09:27:40+03:00,"Qos SR-IOV: Refactor extension delete to get mac and pci slot

When calling delete we need the pci slot details to reset the VF rate. The problem
is that when the VM is deleted libvirt return the VF to the hypervisor and eswitch
manager will mark the pci_slot as unassigned so can't know from the mac which pci slot (VF)
to reset. Also newer libvirt version reset the mac when deleteing VM, so than it is
not possible at all.
The solution is to keep pci slot details locally in the agent since upon removal event
you cannot get pci_slot from the neutron server as it is for create/update since port
is already removed from neutron.

This patch pairs the mac and pci_slot for a device (VF) so when calling the extension
port delete api we can have the pci_slot and reset the VF rate.

It is also add a mapping between mac to port_id so we can pass the port_id
when calling the extention port delete api.

Partially-Implements: blueprint ml2-sriov-qos-with-bwlimiting
Closes-Bug: #1492909
Change-Id: Icc3a9599c6d7a4de9c56b452dfab7909c8d0a576"
7da1724d446b6804c6be7a602532fbae58d9f008,2015-09-07 02:32:51-07:00,"Improve DB operations for quota reservation

This patch deals with the lock wait timeout and the deadlock errors
observed under high concurrency (api_workers >= 4) with the pymysql
driver. It includes the following changes:

- Stop setting dirty status for resource usage when creating
  reservation, as usage of reserved resources is not tracked anymore;
- Add a variable, increasing delay when retrying make_reservation
  upon a DBDeadlock error in order to reduce the chances of further
  collisions;
- Enable transaction retry upon DBDeadlock errors for set_quota_usage;
- Do not resync quota usage while making reservation. This puts a lot
  of stress on the database and is also wasteful since resource usage
  is very likely to change again once the transaction is committed;
- Use autonested_transaction to simplify logic around when the
  nested flag should be used.

Change-Id: I7a335f9ebea3c0d6fee6e6b757554e045a66075c
Closes-Bug: #1486134
Related-Blueprint: better-quotas"
9e178e42e46317a6f1ac7688340f0f84e4c16c80,2015-09-07 16:11:10+03:00,"Add ability to use custom config in DHCP-agent

This patch doesn't changes behaviour of dhcp-agent
but adds the opportunity to use user-defined config,
that will make dhcp-agent more flexible
and allows to run functional tests correctly
(without changing global oslo.config CONF)

Closes-Bug: #1492283
Change-Id: Ice807e8fc872b56bb3960b7a3de4110c7675d9d6"
4b2e6842f320405cd963f560bc06849b4b7bb1eb,2015-09-07 07:55:58-07:00,"Retry metadata request on connection refused error

This testcase may fail intermittently on 'Connection refused' error.
This could be due to the fact that the metadata proxy setup is not exactly
complete at the time the request is issued; in fact there is no
synchronization between the router being up and the metadata request being
issued, and clearly this may be the reason of accidental but seldom failures.

In order to rule out this possibility and stabilize the test, let's retry
on connection refused only. If we continue to fail, then the next step would
be to dump the content of iptables to figure out why the error occurs.

Closes-bug: #1461172

Change-Id: I65a5bf4fbbcad6ba93a46d36cabe7844ff528d8d"
1b67012794932a06ce90976f9759fc588da269b5,2015-09-08 11:23:14+02:00,"tests: disable process monitor before managers

Otherwise the monitor may respawn managers later, leaving them running.

Issue spotted in:
http://logs.openstack.org/02/216902/4/check/gate-neutron-dsvm-functional/a97df90

Change-Id: I0e68b06c87b5770756fdf7b9201e1986cc67e07b
Related-Bug: #1490051"
d6d0853be34ce783b133a9c39aeb608033f3073b,2015-09-08 13:24:52+00:00,"ovs agent resync may miss port remove event

In OVS Agent rpc_loop() resync mechanism clears the registered ports and
rescans them again, and it might result in missing some ""port removed""
event and treat_devices_removed will not be called.

This fix rescans the newly updated ports when resync mechanism called,
without clearing the current registered ports.

The registered ports will be cleared only if there are too many
consecutive resyncs to avoid resycing forever because of the same
faulty port.

Closes-Bug: #1329223

Co-Authored-By: Andrey Epifanov <aepifanov@mirantis.com>
Co-Authored-By: Gandharva S <gandharva.s@hp.com>
Co-Authored-By: Romil Gupta <romilg@hp.com>
Co-Authored-By: Rossella Sblendido <rsblendido@gmail.com>

Change-Id: Ib0db9dcf889d9fd90b623857782c9a6b091e18f5"
c0ee8cbcbf98698411e3618b95b1d8c7676c76ad,2015-09-08 10:48:11-04:00,"Add oslo rootwrap daemon logging during functional tests

Change-Id: Ie688a1df6e256c0195b8f3937228f65c0463e9c3
Closes-Bug: #1493396"
bbca973986fdc99eae9d1b2545e8246c0b2be2e2,2015-09-08 15:00:13+00:00,"Stop device_owner from being set to 'network:*'

This patch adjusts the FieldCheck class in the policy engine to
allow a regex rule. It then leverages that to prevent users from
setting the device_owner field to anything that starts with
'network:' on networks which they do not own.

This policy adjustment is necessary because any ports with a
device_owner that starts with 'network:' will not have any security
group rules applied because it is assumed they are trusted network
devices (e.g. router ports, DHCP ports, etc). These security rules
include the anti-spoofing protection for DHCP, IPv6 ICMP messages,
and IP headers.

Without this policy adjustment, tenants can abuse this trust when
connected to a shared network with other tenants by setting their
VM port's device_owner field to 'network:<anything>' and hijack other
tenants' traffic via DHCP spoofing or MAC/IP spoofing.

Closes-Bug: #1489111
Change-Id: Ia64cf16142e0e4be44b5b0ed72c8e00792d770f9"
b62b92da9b9dbba953573bc212279c719e08f3ef,2015-09-08 15:24:28+00:00,"Remove ebtables_driver/manager dead code

Previous changes[1] have been merged as enablers[2] to fix the bug
1274034 but an alternative solution has been choosen and now we can
consider the introduced code as dead code.

This changes removes [2], associated tests and rootwrap filters.

[1] I9ef57a86b1a1c1fa4ba1a034c920f23cb40072c0
    I3c66e92cbe8883dcad843ad243388def3a96dbe5
[2] neutron.agent.linux.ebtables_driver
    neutron.agent.linux.ebtables_manager

Closes-Bug: #1493422
Related-Bug: #1274034
Change-Id: I61e38fc0d8cf8e79252aabc19a70240be57e4a32"
d5aa1659f56601d8f4d5e17273d5ade7a0e202dd,2015-09-08 11:44:41-07:00,"Delete FIP agent gateway port with external gw port

FIP agent gateway ports are associated with external
networks and specific host.

Today FIP agent gateway ports are deleted for
every floatingip associate and disassociate. This
introduces race conditions in the port delete and also
un-necessary access to the db.

This patch will delete the FIP agent gateway port when
the last gateway port of the external network is deleted.

The child patch linked to this parent patch will clean
up the FIP agent gateway port delete when associate,
disassociate and delete of floatingip happens.

This should also cover the case when an agent for some
reason was unable to request agent gw port delete.
(agent died).

Related-Bug: #1408855
Related-Bug: #1468007
Related-Bug: #1450982

Change-Id: I6637a771e6a6ce74e848cb74b779043e16a54a84"
639f1893dde0d393a97b29ca5309dba716831a7f,2015-09-08 11:52:11-07:00,"Add RPC command and delete if last FIP on Agent

Today FloatingIP Agent gateway port is deleted and
re-created for DVR based routers based on floatingip
association and disassociation with VMs on compute
nodes by the plugin.

This introduces lot more strain on the plugin to
create and delete these ports when VMs come up and
get deleted that are associated with FloatingIps.

This patch will introduce an RPC call for the agent
to initiate a agent gateway port delete.

Also the agent will look for the last floatingip that
it manages, and if condition satisfies, the agent will
request the server to remove the FloatingIP Agent
Gateway port.

Change-Id: I47694b2ee60c363e2fe59ad5f7d168252da08a45
Related-Bug: #1468007
Related-Bug: #1408855
Related-Bug: #1450982"
cd45f16442b7c56c4876bef527c9c83ea0907c40,2015-09-08 18:54:51+00:00,"Cleanup the fip agent gateway port delete routines

Based on the parent patch, right now the Floatingip
agent gateway ports will only be deleted when the
last gateway port associated with the external
network is deleted.

The Floatingip agent gateway port will not be deleted
for every floatingip dis-association and deletion.

The Floatingip agent gateway port was created on all
nodes as a substitute for the gateway port. So it
makes sense to delete those ports only when the last
gateway port on the external network is deleted.

The agent should be able to delete the floatingip agent
gateway port on a given external network when it is not
required.

This would substantially reduce the burden on the server
to validate, read and delete the port form the DB.

Change-Id: Ie561b19a2e58a2a563d79b75421e9e24c70f36f9
Closes-Bug: #1468007
Closes-Bug: #1408855
Closes-Bug: #1450982"
37430d4bd096a04a0b3e23165ac244ac1f47a774,2015-09-09 09:24:40+08:00,"Delete gateway conntrack state when remove external gateway

This fixed the problem that a gateway ip conntrack state not cleared
when user clears a router external gateway.

Change-Id: I77f22d9504430259b01366e6296a99ba1cd6a046
Closes-Bug: #1488730"
4d831a462e2510ab080be7abae49ca3cff056e61,2015-09-09 14:53:44+03:00,"Fix test_external_tables_not_changed

test_external_tables_not_changed was not
executed properly as new engine was created in env.py.

Related-bug: #1466704

Change-Id: If02415d7abd17024946f7aee8fb6abc374a7aefe"
bbaa4abdd5500d30576d63b5a5eb1503363e2f67,2015-09-09 16:13:11+03:00,"Add test to check that correct functions is used in expand/contract

This test will check that expand branch does not contain drop SQLAlchemy
operations and contract branch does not contain create/add SQLAlchemy
operations.

Partially-Implements: blueprint online-schema-migrations

Change-Id: Ifda31c0599651931c1a98f673f3b10e64538f18b
Related-bug: #1490767"
91c476dcc5cd2192d0c43ca51a1b258b9c331fc4,2015-09-09 22:28:26+08:00,"Check ICMP codes in range [0,255]

ICMP allows codes between 0 and 255, this change
adds a check for codes range min value.

DocImpact
APIImpact

Closes-Bug: #1486300

Change-Id: Ic7a49458448fad16447b914bb15742515661a851"
ce5761f15388888038f9c39da886cd0343b734fc,2015-09-09 14:35:26+00:00,"Remove hack for discovery novaclients extension

novaclient provides a common way to discover all extensions, so we can
remove import based on novaclient versioned client object.

Closes-Bug: #1493886
Change-Id: I7ae2eeb2d7e5c56e9284f3b059ff6e3545f42d5f"
24fa37e05544316b58357b753360b147878e5d94,2015-09-09 20:14:43+00:00,"Fix dvr update for subnet attach multi subnets

Fix method dvr_update_router_addvm to notify every
router attached to subnet where the vm will boot
on.

In dvr case, when a subnet only attaches to one router,
the subnet will only have one distributed router interface,
which device_owner is ""network:router_interface_distributed"".
So in this case, get_ports in this method will only get
one port, and it should be unnecessary to break in for loop.

But when a subnet attaches multiple routers, get_ports in
this method will return all distributed router interfaces
and the routers hold those interfaces should be notified
when an instance booted on the subnet. So it should also
be unnecessary to break in for loop.

Change-Id: I3a5808e5b6e8b78abd1a5b924395844507da0764
Closes-Bug: #1427122
Co-Authored-By: Ryan Moats <rmoats@us.ibm.com>"
4a8c2b875e4abb8e99d62f1530f209147faada2f,2015-09-09 14:45:16-07:00,"Reduce the chance of random check/gate test failures

As previously implemented, the TestTrackedResource class is designed
to inject random failures into the gate. It generates random numbers
within the range of 0..10000, and will fail if it generates duplicate
random numbers during its run.

This patch creates UUIDs instead of random numbers, and makes the
chance of an collision vanishingly small.

Change-Id: I0cf535d1c5a3995a50b506aafce10e983872dcb7
Closes-bug: #1494021"
cd0ba162ae1bbbb628a954940dd65130c0c0f672,2015-09-10 12:00:16+09:00,"OVSAgentTestFramework: Remove _bind_ports

As it isn't used anymore.

Related-bug: #1475498
Change-Id: I33cf1b41d77b39b8f28f1809d3c7d5a8457e2718"
29ac69ebe365b597ad5d1510381d3f02643edb3e,2015-09-10 10:52:35+03:00,"Handle ObjectDeletedError when deleting network ports/subnets

It appeared there is still a race on port deletion when deleting
networks. So commit a55e10cfd6369533f0cc22edd6611c9549b8f1b4
introduced a regression. It's a bit of ironic that commit message
was ""Avoid DB errors when deleting network's ports and subnets"".
Shame on me!

Closes-Bug: #1494157
Change-Id: I37727eca5d68e6440f0f93e0f6bbe63b2f18b443"
c89a4fdd88b0f8832b32af55f64e0d3a35c84388,2015-09-11 14:01:23+00:00,"Configure gw_iface for RAs only in Master HA Router

For an HA Router which does not have any IPv6 subnets in the external network
and when ipv6_gateway is not set, Neutron configures the gateway interface of
the router to receive Router Advts for default route. In an HA router, only
the Master instance has the IP addresses while the Backup instance does not
have any addresses (including LLA). In Kernel version 3.10, when the last
IPv6 address is removed from the interface, IPv6 proc entries corresponding
to the iface are also deleted. This is however reverted in the later versions
of kernel code.

This patch addresses this issue by configuring the proc entry only for the
Master HA Router instance instead of doing it un-conditionally.

Closes-Bug: #1494336
Change-Id: Ibf8e0ff64cda00314f8fa649ef5019c95c2d6004"
6ee4343c4ce90423ea6477216519bcb0ef21b816,2015-09-11 16:34:22+02:00,"Install sriov-agent.ini on 'setup.py install'

The previous change [1] that split the configuration file into two pieces
missed the update of setup.cfg, so the file was not installed.

[1]: Ie1eda925e051f85d53ad9624d6617d095cf8c7be

Change-Id: Idcdc71b5614463fc0d81a8bc2d2833159be9e6c9
Related-Bug: #1489060"
a19e64c9d95781982d28113c667dbc90d0ea11eb,2015-09-11 14:49:30-04:00,"ovs: don't use ARP responder for IPv6 addresses

ARP does not support IPv6 addresses, so when we try to apply the flow, it
fails, with all other flows deferred for the same transaction. It results in
random flow breakages, depending on the order of the bad flow in the
transaction.

Change-Id: I0ecf167653e5a7d0916e091e05050406a026a1e2
Co-Authored-By: Thomas Carroll <Thomas.Carroll@pnnl.gov>
Closes-Bug: #1477253"
14ef151fe0ca193c341098fcd3910d5e523c140c,2015-09-11 14:44:02-07:00,"Restore reservations in API controller

This patch restores the reservation logic in the API controller,
as the DB issues arising from the pymysql switch has been solved.

Change-Id: I98b40925fdceba13d6a2b5a4d0c5793aeb5cf077
Related-Bug: #1486134
Related-Blueprint: better-quotas"
5405d9742b94f203389f555c56727a66925e9454,2015-09-12 01:37:20-07:00,"Tweak test_keepalived_respawns test logic

This test initial design is problematic: it spawns keepalived,
it asserts the process is up, then it attempts to kill it.

However, this is when problems may arise:

a) it does so by using the disable method on the process - we
   should be more rude than that if we want to simulate a crash!

b) keepalived may be forking while it is starting and it is
   possible that for a moment the ppid changes and the process
   owner invoking the kill has no rights to kill the spawned
   process. This is the most plausible explaination I could find
   as to why kill returns 1 with no standard error

c) it does not verify that the process has indeed disappeared
   (what if the pm.disable didn't work?) - this means that the
   test can pass, and yet the monitor may not work.

Bottom line: this test relied on the correctness of the very code
that was meant to validate...and that's not cool. To this aim, we
wait for the process to be active, kill the process with a kill -9
and verify that the process after the kill is indeed different.

Closes-bug: #1490043

Change-Id: Idaf419a1464d9d0d75b9106a7acd5cd960a7c623"
57b6a651a39099ea76178bdcea51b06bde587e25,2015-09-12 22:12:50+03:00,"Fix missing value types for log message

This patch add missing value types for some log message of exception.

Change-Id: Ie9f512bc804f0cd70df991b1910c975a2f9d6fcf
Closes-Bug: #1494574"
dafa61bd46b7eacbc708d17a3fa492de971d6dd2,2015-09-12 13:31:32-07:00,"Fix BadRequest error on add_router_interface for DVR

This operation for DVR is made of multiple steps, some of
which are not within the same DB transaction. For this
reason, if a failure occurs, the rollback will be partial.

This inconsistent state leads the retry logic to fail with
BadRequest, because the router is believed to be already
connected to the subnet.

To fix this condition, it is necessary to delete the port
should the DB deadlock occur.

Closes-bug: #1494114

Change-Id: Ia2a73d6f9d1e4746e761ad072d954e64267a3ad1"
e5f635ee4fd1fe8a0bd2e5c58db068b51fc94c0b,2015-09-12 23:01:47-07:00,"Switch scheduler drivers to load based schedulers

Cloud deployed at scale most likely will use these scheduler
drivers because they allow a fairer resource allocation compared
to chance schedulers (which randomly place resources on the hosts).

Because of their importance, it's only wise to test them in
the gate on a continuous basis, so that we do not get surprised
by accidental regressions.

Rather than pushing this down through devstack-gate/project-config
patches, this chance alters the default of the scheduler
drivers, so that users can also pick these up out of the box.

This means that after an upgrade they would observe a change in
the scheduling behavior, if they relied on the default config.

DocImpact
UpgradeImpact

Closes-bug: #1494667

Change-Id: I5927914cb88eff66bc7a045340ff68cb8da95ad6"
a57b37fc56ffe3c1dade796c4663e95b1bbeea80,2015-09-13 22:38:29-04:00,"Enable servicing lbaasV2 vip by DVR

Currently, the vip of lbaasV2 will not have l3 network with DVR.
This prevent the usercase of lbaasV2 + DVR. This patch aims to
enable servicing lbaasv2 vip by DVR.

Change-Id: I1b51550437994fbe78d4db904641d4d9fb75d82e
Closes-Bug: #1493809"
a8d0586fdebfd28e407e2d30f72c92e3711d0a1e,2015-09-14 15:43:34+03:00,"Do not specify host for l2population topics

When creating topics oslo.messaging automatically creates
topic with hostname suffix (e.g. topic.hostname), there's
no need to do this explicitly.

Change-Id: Ia396452e8deb2c8f10bbead936245eeece8066a6
Closes-Bug: #1495508"
5eaff5fa0720b860ec4c0c75abee942313f93e94,2015-09-14 17:39:00+03:00,"Fix query in get_l3_agent_with_min_routers

For PostgreSQL if you're using GROUP BY everything in the SELECT
list must be an aggregate count(...) or used in the GROUP BY.

Closes-bug: #1495523

Change-Id: Ieb75d0666ec2f6d2e61686bf2bacea2b9ad6c521"
573c14659a953164ba556c694062e9242dcca807,2015-09-14 17:09:19-04:00,"Fix TypeError caused by delete_agent_gateway_port()

A recent change used a keyword argument when it didn't need to,
correct it to fix the multinode DVR job.

End of typical traceback:

File ""/opt/stack/new/neutron/neutron/api/rpc/handlers/l3_rpc.py"",
in delete_agent_gateway_port(admin_ctx, network_id, host_id=host)

TypeError: delete_floatingip_agent_gateway_port() got multiple
values for keyword argument 'host_id'

Introduced in commit 639f1893dde0d393a97b29ca5309dba716831a7

Related-bug: #1495147

Change-Id: Id2522bc843bc7b089b7783d3f765900a50a0033f"
a13f5afcc821e24e40227965491b964fa85c003c,2015-09-15 08:04:15+08:00,"Remove unused ovs_lib method reset_bridge

Per [1] we are using a better way to keep tunnel connectivity,
so reset_bridge isn't used anymore. Bug in [2] was caused by
using method reset_bridge which will delete and recreate bridge.
For [1] makes method reset_bridge deprecated, it makes sense to
remove this method, and make [2] no longer produce.

[1] https://review.openstack.org/#/c/182920
[2] Related-bug: #1332450

Change-Id: I155f66a37b8d4081126467fe576e8315c2d5560c"
f4a76a7a26c0902d61f4fe61091e7fe556923592,2015-09-15 08:53:57+00:00,"func: Don't use private method of AsyncProcess

In functional test we simulate crash of AsyncProcess by calling
_kill_process(). This method is a private method and such usage
introduced a race where process was respawned prior to calling wait() of
killed process, leading to infinite wait on newly spawned process.

This patch adds manual send of kill and then active waiting for process
to be respawned, similarly like done with recent keepalived patch [1].

[1] https://review.openstack.org/#/c/222460/7/neutron/tests/functional/agent/linux/test_keepalived.py

Closes-Bug: #1477860
Change-Id: I1c91393304d65a0695311416ecc5b64fd549b192"
25e4e13565690fc4bc9e08e34598e18f04b921b7,2015-09-15 08:57:32+00:00,"Remove out-of-tree vendor AGENT_TYPE_* constant

AGENT_TYPE_* constants[1] defines all agent types BUT the only vendor
one(AGENT_TYPE_NEC) is only used in out-of-tree networking-nec repo.
This changes removes out-of-tree AGENT_TYPE_NEC constant (dependant
change defines it in networking-nec repo).

[1] in neutron.extensions.portbindings

Change-Id: Ia80c33ee7970cfe167c2c9ca6d512f23561455a2
Closes-Bug: #1487598
Depends-On: I955fa48ee2120900e422bab57db250303c3d7bb4"
17765114292217d109c15b220be57fea6c9eed4a,2015-09-15 12:24:10+00:00,"Add IPv6 Address Resolution protection

Similar to IPv4 arp protection support, this patch adds the necessary OVS
rules to prevent ports attached to agent from sending any icmpv6 neighbor
advertisement messages that contain an IPv6 address not belonging to the port.

For details please refer to ""Figure 3. Attack against IPv6 Address Resolution""
http://www.cisco.com/web/about/security/intelligence/ipv6_first_hop.html

DocImpact
SecurityImpact

Closes-Bug: #1491690
Change-Id: I1f8311f1b9ae1be02afde3e9078e49c6da373a88"
cc698b2ba578e5bc1475f6229bfebd1316c41ffb,2015-09-15 16:29:25+02:00,"QoS agent extension and driver refactoring

Moved some code common to all drivers into base
qos driver abstract class, so related bugfixes go all in one
place and we simplify the logic for every qos drivers.

Port/Policy mapping moved out to a separate class.

Support delete per rule_type or delete all rules.

Related-bug: #1486039

Co-Authored-By: Miguel Angel Ajo <mangelajo@redhat.com>
Partially-Implements: blueprint ml2-qos
Change-Id: Ia9d8638b9268b5aa8512cbb9d001413751f82649"
1ad6ac448067306fcf7ea562840e63fd257f0556,2015-09-15 22:57:22+05:18,"Prevent full sync in dhcp_agent when possible

If an exception occurs in sync_state method, we try for a full sync
even in the case where we have fewer networks to resync for.

This turns out to be pretty costly in scaled environments.

This patch addresses the above behavior by resyncing only for the
eariler set of failed networks.

Closes-Bug: #1495592

Change-Id: I069e992b3b7814370d409236b6a3c81a25829cc1"
d1d4de19d85f961d388c91e70f31b3bafec418c5,2015-09-15 16:25:45-07:00,"Always return iterables in L3 get_candidates

The caller of this function expects iterables.

Closes-Bug: #1494996
Change-Id: I3d103e63f4e127a77268502415c0ddb0d804b54a"
07d3d1edd7380d993d43eeabc5795f9ff88bb3a6,2015-09-16 15:01:03+00:00,"Add constraint target to tox.ini

This adds a pip install command to tox.ini that is only used when the
tox env is passed with the 'constraints' factor appended onto it.
As such this will not effect developer workflows or current unit tests.

The initial use of this will be in a non-voting job, to verify that the
constrained checks with tox are stable.  DevStack is already running
constrained jobs, as such problems are no expected.

To run a tox with pip using constraints on a developer system a
developer should run the desired tox environment with -constraints.
For example: $(tox -epy27-constraints)
Pip will pull the current version of the upper-constraints.txt file down
from the git.openstack.org, however this method can be overriden to use
a local file setting the environment variable ""UPPER_CONSTRAINTS_FILE""
to the local path or a different URL, it is passed directly to pip.

This is currently not enabled in the default tox run, however it is
possible to enable it as a default by adding it to 'envlist' in tox.ini

Closes-Bug: #1496424
Change-Id: I13579599dfdf846d06d8c39f33265e8b46db6e68
Depends-On: I17ac389f78af241917b6da7f049085f2b13d30f2
Implements Blueprint: Requirements-Management
(cherry picked from commit c029954c8ae041e5f15b14ceef0e2aa060928e05)"
fe236bdaadb949661a0bfb9b62ddbe432b4cf5f1,2015-09-16 15:11:04+02:00,"No network devices on network attached qos policies

Network devices, like internal router legs, or dhcp ports
should not be affected by bandwidth limiting rules.

This patch disables application of network attached policies
to network/neutron owned ports.

Closes-bug: #1486039
DocImpact

Change-Id: I75d80227f1e6c4b3f5fa7762b8dc3b0c0f1abd46"
77de4a3b54110c2d5b8b38efdfbeb5c35e2cb16d,2015-09-16 15:50:21-07:00,"ipam: Prevent none from being passed to delete

Previously, it was possible for None to be passed to context.session.delete()
if a port was not found (usually a result of a concurrent delete). This
resulted in an UnmappedInstanceError. This is avoided now by calling
query.delete() directly which does not raise any exceptions.

Change-Id: I3b9f513308d90874ac8e8a7f6345697978d4920f
Closes-bug: #1496554"
6878db9f1cac62fc07e84722e1fac347e379578a,2015-09-17 13:54:53+01:00,"Re-adds VIF_TYPE_VHOST_USER to portbindings extension

- This change re-adds the definition of the VIF_TYPE_VHOST_USER
  constant to the neuton portbinding extension.
- This change enables reuse of a single common VIF_TYPE_VHOST_USER
  constant between all agents and mechanism drivers that wish
  to support the qemu vhost-user interface type.

Change-Id: If92afb03f91a9092657e5b50c058f258952bafd8
Partial-Bug: #1477611"
1daf945f832716b98b8c2d630cd2e730178a46fa,2015-09-17 10:13:17-07:00,"Remove early yields in _iter_hosts in dhcp agent

There were early yields in the DHCP agent to handling skipping
lease setup for certain IPv6 addresses. However, the setup for
name resolution in _output_addn_hosts_file depends on the same
function so certain IPv6 addresses weren't getting name resolution.

This patch adjusts the function to return a flag indicating that
DHCP isn't required for the port so the callers setting up reservations
can skip based on that and the name resolution setup can continue
as normal.

Change-Id: I81b4669eadaa9119e08c6a5e1d2a7b5959babdcc
Closes-Bug: #1498665"
ecbc2e3ed36964ed8944b3a128cde6850e250dd5,2015-09-17 17:39:19-04:00,"Introduce kill_signal parameter to AsynProcess.stop()

All stop() calls of instances of AsyncProcess class were sending
hardcoded SIGKILL signal to its process. This patch leaves the default
behavior to SIGKILL but offers any number to be sent to kill command.

Note: Internal private methods also got a new parameter which is not
      appended. Given that those methods are private and thus not used
      outside of the class, we can afford it.

Change-Id: Ib7b0273c134d59c6a50173d4c2eb35761fcd3d62
Related-Bug: #1487548"
75bb597918d8744d998a9b1ed9681b42f413cfd2,2015-09-18 19:33:48+09:00,"test_networks: Stop assuming net-mtu extension

Closes-Bug: #1497182
Change-Id: I937872330a46c4758a3c884e3fc59619330359e8"
b08c3d57a94e0adb012c885031010ecf61688b31,2015-09-18 13:01:45+00:00,"Add --verbose to subset of cmds in neutron-db-manage

This commit updates neutron/db/migration/cli.py such that --verbose can
be passed to the following commands:

- current
- history
- branches

We also update tests in neutron/tests/unit/db/test_migration.py and add
a new test for 'neutron-db-manage branches' as that appears to be
untested.

Lastly, we add a brief description of the newly added capability to
doc/source/devref/alembic_migrations.rst.

Change-Id: I9fc136055b422f12a22c1365f52f17df53219820
Closes-Bug: #1488021"
22f5fef5251cff9dbce35ca9a0ec8ea3b42f359c,2015-09-18 10:38:39-07:00,"Don't write DHCP opts for SLAAC entries

Change I81b4669eadaa9119e08c6a5e1d2a7b5959babdcc
caused DHCP options to be written for SLAAC entries
when they previously were not. This restores the previous
behavior.

Closes-Bug: #1499054
Change-Id: I81400305f166d62aa4612aab54602abb8178b64c"
e0664a4c2cd8ec5e24f67eac2b2c4e04464888d3,2015-09-18 11:21:35-07:00,"Fixes SNAT port not found for internal port

For every router interface added to a router
with a default gateway there will be an internal
SNAT port generated and will be required by the
L3 Agent to process the SNAT rules.

This bug was introduced by the change ID below
Icc099c1a97e3e68eeaf4690bc83167ba30d8099a.

When the gateway is removed these ports have to
be removed from the namespace. These ports are
cached in the router_info and should be provided
to the get_snat_port_for_internal_port function
when called from external_gateway_removed or when
called from _dvr_internal_network_removed.

This patch fixes this problem.

Closes-Bug: #1496578

Change-Id: Id5af4774ba246e24f343f5623af5ea9143bd5f6b"
2ab909173532fdd6538eb4669444296f56234a80,2015-09-19 00:16:18+00:00,"SubnetPoolsTest: Skip IPv6 tests appropriately

Rename a class variable so that it will be checked by the base class.

Certain tests were not being run correctly due to subclasses
incorrectly overriding a base class variable. This change names
the variable correctly in the subclasses to fix the problem.

Closes-Bug: #1497188
Change-Id: I97756b91cbec297ade7efcc8986a038a184b3a84"
7bde637eac621b90adebc26434e9924fd7ca64e5,2015-09-19 05:12:03+00:00,"Fix adding tap failure if bridge mapping is not provided

When bridge mapping option is not provided, tap interface cannot be
added properly. The root cause is that linux bridge agent is expecting
bridge mapping option is provided if physical network is presented.

However it is not always the case as Kilo was working fine
without existing bridge mapping

Change-Id: Ie43905887a9bc60858e3edae7fc339a7e0485716
Closes-bug: #1495161"
e82733f5d9adefaf4ee2a9ff4ea615c5e0cb91a9,2015-09-21 09:13:22+00:00,"Execute ipset command using check_exit_code

When l2 agent execute ipset command, we should pass
parameter 'check_exit_code' to self.execute acording to
action.
The intention is to safely fail if we try to destroy a
non existing set, or delete a non existing member.
Otherwise the agent gets stuck in a loop if such situation
happens. Such kind of event would be logged as errors.

Change-Id: If67330523d114d6da13d0280851e7138a51d08f7
Closes-bug: #1497074"
61d26b8b745ae431e21c22d1d82688708098171b,2015-09-21 12:50:00+02:00,"Fix hostname roaming for ml2 tunnel endpoints.

Change I75c6581fcc9f47a68bde29cbefcaa1a2a082344e introduced
a bug where host name changes broke tunneling endpoint updates.
Tunneling endpoint updates roaming a hostname from IP to IP
are a common method for active/passive HA with pacemaker and
should happen automatically without the need for API/CLI calls [1].

delete_endpoint_by_host_or_ip is introduced to allow cleanup of
endpoints that potentially belonged to the newly registered agent,
while preventing the race condition found when deleting ip1 & ip2
in the next situation at step 4:

1) we have hostA: ip1
2) hostA goes offline
3) hostB goes online, with ip1, and registers
4) hostA goes online, with ip2, and registers

[1] https://bugs.launchpad.net/python-neutronclient/+bug/1381664

Change-Id: I04d08d5b82ce9911f3af555b5776fc9823e0e5b6
Closes-Bug: #1464178"
0cf620bdf945527077f9875a1849e71ec0d1c6b2,2015-09-21 05:49:24-07:00,"delete_port: ensure quota usage is marked as dirty

To this aim the ORM session mapper must be used.
This patch simply uses context.session.delete rather than
query.delete, and handles UnmappedInstanceError to safely
complete the operation when the record is deleted by
another transaction.

Change-Id: I55c701fc1e2fda4461501aae532bbe11cce45b75
Closes-Bug: #1497459"
30bcbf3df8d38f7940233ba60554d93dea4a0692,2015-09-21 17:08:00+04:00,"Change router unbinding logic to be consistent with data model

Model allows router to be bound to different agents
Code should not make assumptions that the correspondence is 1-to-1

Closes-Bug: #1497980
Change-Id: Ieda9fc6e2d5a85194f2d022ea092cefb55183750"
bdcf8e60794c8aae9fc4aeaff200adf986381306,2015-09-21 17:55:38+02:00,"ovsdb monitor: get rid of custom _read_stdout/_read_stderr methods

Those methods do the same thing as AsyncProcess counterparts, just
with logging the received output. It's better to move the logging into
AsyncProcess and control it with __init__ arguments.

This allows us to get rid of some duplicate tests for ovsdb monitor.

Change-Id: Ic20ded27ba09afdd73e4d96c47469c2d7b4d4db5
Related-Bug: #1495937"
bea29001442d2dc59f8d9756f5d459eb160dbfb2,2015-09-21 17:56:43+02:00,"tests: don't validate respawn as part of ovsdb monitor functional test

It's already validated by AsyncProcess functional test suite. Instead,
just validate that the monitor generates the initial output, as
expected.

The test is still useful to validate that rootwrap filter works, so
not removing it completely.

Change-Id: I320edaaa2b210e4b34678c60deb31c4875eea298
Closes-Bug: #1495937"
522b278963701bd8cc6f05bf7a4212bd4aad0794,2015-09-21 10:55:56-07:00,"Get rid of ConfigParser code in ProviderConfiguration

We may be unable to get rid of this code, but at least we can
make it slimmer and more oslo_config friendly.

This patch also fixes an issue where plain ConfigParser cannot
handle config options with the same name under same section.

Related-bug: #1492069

Change-Id: I596613eb7b2fc3e894a3c1cc7b7cb24d7137cbc5"
d24633a4688b951f2b4d29b3248019588b3e198a,2015-09-21 17:56:51+00:00,"Relax service module check on service providers

service_provider is a 'special' configuration. It is a MultiStr
option that used to be in neutron.conf, but moved into its own *-aas
config files after the service split. We allow for the definition to
be available 'anywhere': either in neutron.conf or in the *-aas
service's config file.

The list of 'service_provider' can include drivers from within the *-aas
tree, or from elsewhere, and can apply to different service types. Due to
the polymorphic nature of this variable it is very tricky to identify only
the drivers that pertain a specific service module: the service module
may as well implement more than one service type and may have support
from drivers out of tree.

For this reason it is best to relax this check and rely on query filters
when the ServiceManager.get_service_providers() is invoked. Furthermore,
without this fix there was a situation where the value returned by
'service_providers' may be differ depending on how the configuration is
passed on the CLI, and this inconsistency may only cause headaches.

Closes-bug: #1492069

Change-Id: I4db4ce0b287c984d86181227edf769531ecb7bb8"
58c0e498b45b20be936cdfbf9f8c748dba2c2c47,2015-09-22 13:01:58+01:00,"Adds configurable agent type

This change introduces a new agent_type config option which
allows the ovs agent to be reused by out of tree
mechanism drivers.

DocImpact
Change-Id: I48f4be4b1d51bcff62e86e5814c12bd9bfa3c902
Closes-Bug: #1469871"
0cdb46b2030ed5b61098ca43662cb5b9ff855613,2015-09-22 14:38:59+02:00,"ml2: don't consider drivers with no bind_port for qos supported rule types

If the driver is not going to bind a port, we should not use it as
justification to limit the subset of rule types available for the user.

The most common scenario for that would be l2pop, that does not handle port
binding, but merely modifies the implementation details of node
interconnection.

Change-Id: Iba0f3530deff3bb2871ebf893c43ef628a80c7c0
Closes-Bug: #1488996"
3c5cb9d050d09424c3f8eb3cd1ecd6876f50a6fe,2015-09-22 19:11:29+00:00,"Only get host data for floating ips on DVR routers

First, we are only interested in setting the host attribute when
the router is a DVR router.  Second, we don't need to query all of
the ports on the host, we just need to query the ports that are
referenced by the set of floating ips that we already have.

Closes-bug: #1496974
Change-Id: If611de14b2ab77d2eb9ce8c5b307ea6dd4403fe1"
2d68a0ed42d3eb3d6187fb5ae78b7b38001dcfdb,2015-09-22 18:14:34-05:00,"Eliminate autoaddress check for DNS integration

The autoaddress check for DNS integartion is not required anymore. It is
removed from the DB plugin. This check was being performed to reflect
incorrect functionality in the DHCP agent as indicated in bug
https://bugs.launchpad.net/neutron/+bug/1498665

Change-Id: I4b00618c328567f998765ed9a023c4c50d950b2b
Closes-Bug: #1497450"
074f82d3ec18fd591e9d1805676dfe13bd508510,2015-09-24 03:18:51-07:00,"Fixes 'ovs-agent cannot start on Windows because root_helper opt is not found'

Change Ie1224f8a1c17268cd7d1c474ed82fdfb8852eaa8 removed
config.register_root_helper() from ovs_neutron_agent:main, thus the agent
cannot start on Windows since root_helper config option is never
registered.

The fix consists in adding config.register_root_helper in the Windows side
utils.

Closes-Bug: #1497930

Change-Id: I6adc3b869c9564cac3ab99174b8fe47584213e59"
851b1b4bbbaa965f190bfacab03fd6ece80ad0ec,2015-09-24 05:46:52-07:00,"Fix quota usage tracker for security group rules

This simple patch ensures usage for security group rules is
marked as dirty when a security group rule is deleted.
To this aim, the security group rule is deleted using ORM
in order to ensure the sqlalchemy even if fired.

Closes-Bug: #1499339

Change-Id: I1e81fe03fed14ec438cea5d7675f66caeb91afd8"
584bb1aad8647872cb8722beeb84e9ec08abc208,2015-09-24 07:22:15-07:00,"Fixes 'ovs-agent fails to start on Windows beacause of SIGHUP'

Change Ic0cf8a9ca7f3a16b556a6825e2979471ae136c33 has added the handling
of SIGHUP in neutron_ovs_agent. This does not work on Windows as there is
no SIGHUP signal on windows.

The fix consists in checking if signal has SIGHUP attr before setting the handler
for SIGHUP.

Change-Id: I08258580252d68db222cbb9db7812ff1dfb37a56
Closes-Bug: #1499345"
0782a0b38172d37267b9400246b2d5b54c3cf67c,2015-09-24 16:11:20+00:00,"Fix quota usage tracker for security group rules

This simple patch ensures usage for security group rules is
marked as dirty when a security group rule is deleted.
To this aim, the security group rule is deleted using ORM
in order to ensure the sqlalchemy even if fired.

Closes-Bug: #1499339

Change-Id: I1e81fe03fed14ec438cea5d7675f66caeb91afd8
(cherry picked from commit 851b1b4bbbaa965f190bfacab03fd6ece80ad0ec)"
739dc16fe75253d392bd4112bc638c1648e0ccf9,2015-09-24 20:47:44+02:00,"Move ConfigDict and ConfigFileFixture to neutron.tests.common

This change moves ConfigDict[1] and ConfigFileFixture[1] in order to use
them in fullstack and functional tests (in a follow-up change).

[1] neutron.tests.fullstack.resources.config

Related-bug: #1497027
Change-Id: I16157b0b739c9e620f23c984187b492bf5af2e60"
69662eb3cad925a3933f2ba3e5ef03dbde52ffc9,2015-09-24 20:11:23+00:00,"Don't write DHCP opts for SLAAC entries

Change I81b4669eadaa9119e08c6a5e1d2a7b5959babdcc
caused DHCP options to be written for SLAAC entries
when they previously were not. This restores the previous
behavior.

Closes-Bug: #1499054
Change-Id: I81400305f166d62aa4612aab54602abb8178b64c
(cherry picked from commit 22f5fef5251cff9dbce35ca9a0ec8ea3b42f359c)"
f5097732b4664b9482500f3a9d2f068ae04a8bfe,2015-09-25 20:47:52+05:18,"Fixing traces of ""Replace prt variable by port""

The fix for https://review.openstack.org/#/c/218350/ has few
more occurrences. This patch addresses those and also changes
""local_port"" from ""port"" in order not to confuse the parameter
with method argument.

Change-Id: I60bfeb9e33f0f69153afec083a2c05ee862fcee2"
9c3e3a0fcee012ee0187b19931d63927379a621f,2015-09-27 09:41:17-04:00,"Handle empty bridge case in OVSBridge.get_ports_attributes

Before this patch, get_ports_attributes would call
get_port_name_list. In the case of an empty bridge,
get_port_name_list would return an empty list and feed that
in to ovsdb.db_list, thereby returning all ports instead of
no ports.

Change-Id: I5a91028c59d71943b7cef86a94fa6ab1cc3d667c
Closes-Bug: #1499821"
c6db7dcfbdb942c77659ce66c9e6511fea8ced40,2015-09-28 13:46:35+02:00,"Python 3: use ""open"" instead of ""file""

The ""file"" function does not exist in Python 3.

Change-Id: I18561fc8e472a53c2c5f599f2312347da4cec273
Partial-Bug: #1500400"
e31e2f38fc2c8ec32c46f9a5280e00b4d1dc846a,2015-09-29 10:51:12+08:00,"Check supported subnet CIDR

For IP CIDR, D class is for multicast, but neutron does not
check this, if user create a subnet like '224.0.0.1/16', DHCP
agent will fail to spawn Dnsmasq service.
This patch adds a check, if subnet CIDR is D class or loopback,
neutron-server will raise a error.

APIImpact
DocImpact

Closes-bug: #1497522
Change-Id: I36aa8b8e6decaff1cc27aaa61f4aaa8f247826c6"
5dba2ac71c16cfd11937cf4becbaabd5b807678d,2015-09-29 05:16:49-05:00,"Check idl.run() return value before blocking

The IDL change_seqno can change as a result of running idl.run(), and
it returns True if there has been a change. The existing code would
block without checking the return value, and therefor could block
until another change occurred, or the timeout was reached.

Closes-Bug: #1501090
Change-Id: I9b7aac2755e6e6b69165023e01583337f9d30f15"
50397d43d2bc98389753782418da3c6a37cac4b3,2015-09-29 12:04:24+00:00,"api test: Skip address-scope tests when the extension is not enabled

Closes-Bug: #1497186
Change-Id: I6802e0f3e9c1b5e42dd77ac647f7a6bb96a07dfc"
52236764a3a7c23ec24a86ccb84bc6737e2a4791,2015-09-29 10:48:29-04:00,"Tag the alembic migration revisions for Liberty

Previously when we had one repo with one alembic branch we would
create a milestone revision on that single branch. Now we have
multiple repos and expand/contract branches for each repo.

So from now on we tag the final revision on every branch when we make
a milestone release. Update the cli to support the command:
  neutron-db-manage upgrade <milestone>
where <milestone> becomes an alias for all the revisions for a
milestone.

Partial-Bug: #1499033

Change-Id: I38623986dd574bec01fe147f9c6a747f3f512bb7"
10b4e0964a7fbdfb8ac191477153f95689c1d1bd,2015-09-29 23:25:49-04:00,"Add devref for alembic milestone tagging

Related-Bug: #1499033

Change-Id: Iff58622c56be2c64cfb5659d20c4eae2f45a318c"
d952cfa8b0a947eedfa5d4291bac965cc4ec8626,2015-09-30 15:29:06+09:00,"Simplify extension processing

Now ExtensionDescriptor defines the contract for extensions,
don't bother to check existence of attributes which exists in
ExtensionDescriptor.

Also, reject extensions not derived from ExtensionDescriptor.

Closes-Bug: #1501186
Change-Id: I48e179b8739b61f336f5180a22fc66283b9b6991"
3d0db13370eee09aaee5923c54d0e3188509c4e5,2015-09-30 10:04:49+02:00,"Make OVS interface name hashing algorithm common and extend it

The OVS devcie name hashing algorithm shortens interface names that are too
long. To ensure uniqueness it takes use of a hashing algorithm.

Move this function to a common place where it can be shared between ml2
drivers and agents.

Extend the function to support interface name postfix in addition to the
prefix.

Change LOG level to info to help deployers figuring out the unhashed name
of an hashed inteface.

Adapt OVS and linuxbridge agent to use this common function instead of their
own implementation.

Change-Id: If7ee8240c8f60da3400365138832a5d9badf98b4
Closes-Bug: #1495960"
7267d75fdd3f90af759d71e9490cd41d41ba6d98,2015-09-30 13:16:32+04:00,"Use separate queue for agent state reports.

This optimization is needed for big clusters with hundreds
of agents where the spike of activity may trigger a burst
of RPC requests that would prevent neutron-server from processing
agent heart beats in time, triggering resource rescheduling.

This will be further optimized by running dedicated RPC workers
for state reports processing.

Related-Bug: #1496410
Change-Id: Id86a1f962aaa4f64011d57ae55d240f890cca4f7"
2ed841f58d931bc9a2d29172d26c03d7cb6862e6,2015-09-30 13:52:51+00:00,"Check idl.run() return value before blocking

The IDL change_seqno can change as a result of running idl.run(), and
it returns True if there has been a change. The existing code would
block without checking the return value, and therefor could block
until another change occurred, or the timeout was reached.

Closes-Bug: #1501090
Change-Id: I9b7aac2755e6e6b69165023e01583337f9d30f15
(cherry picked from commit 5dba2ac71c16cfd11937cf4becbaabd5b807678d)"
c561c7c20acef7227e2eab2be30a2626e16d2354,2015-09-30 11:15:22-05:00,"Just call set-manager if connecting fails

Instead of calling set-manager every init, only call it when
getting the schema fails inside of Connection.start() which is
only called once.

Closes-Bug: #1499784
Change-Id: Ib28cd912e1f2eba318a6b0a82269919a1c95312d"
824b4dc8acf2e1e61fd258f3730021c53d0dc8d1,2015-10-01 00:16:18+08:00,"Fix the bug of ""Error spelling of 'accomodate'""

The word ""accomodate "" should be spelled as ""accommodate"".
So it is changed.

Change-Id: Ie0aae93973c0efec34c3d4baf0d3d2783c6eeef8
Closes-Bug: #1501216"
82216c8764b47b4e2de93533b47af2d5aaf2730f,2015-09-30 18:59:36+02:00,"Deprecate branchless migration chains from neutron-db-manage

Support for the scheme puts additional burden on neutron-db-manage
maintainers.  The split branches were introduced in all 'official'
subprojects in Liberty, so it's fine to deprecate it in Mitaka, and drop
in Noodle.

Since there is no user actionable item to do for users, using
debtcollector that will only issue DeprecationWarning if they are
enabled. The assumption is that developers run their tests with that
enabled (as the BaseTestCase ensures) and handle warnings.

Related-Bug: #1501380
Change-Id: Ie4ddd29d8c51be74a112864aae3d16fb5e52c0fa"
ee1477ac1a8ef90413a0cb2acf90cd1b2889882b,2015-09-30 21:14:26-04:00,"Correct cisco_ml2_apic_contracts.router_id length

Some database engines require exact match of sizes of foreign keys
and referenced fields. Foreign key router_id of table
cisco_ml2_apic_contracts is varchar(64) but it references field
id varchar(36) of table routers. This gives error while running
migration scripts in such databases.

This change only applies to new OpenStack installations

Change-Id: I94a21ffbb82446499b1a55bd8b666d7395e4908a
Related-Bug: #1463806
Closes-Bug: #1465678"
8ce04529e2d40d356f073c29f7f138aeac4dfd8c,2015-09-30 20:50:13-07:00,"Fix db error when running python34 Unit tests

Follow fixes [1] to address this potential issue.

Closes-bug: #1489059

[1] https://review.openstack.org/#/q/status:merged++topic:bug/1489059,n,z

Change-Id: Ica389978869ae47c262cd797e85a7d7874254df7"
8ee51f253cac950787273ca117611b4660ed4523,2015-10-01 09:21:54+00:00,"Add periodic agents health check.

In addition to periodic checks of L3 and DHCP agents
add periodic checks of overall health of registered agents.
Log total count of agents at debug level so it can be
seen in logs of neutron-server.
In case some agents found dead - log detailed info about them:
Type of agent, last heartbeat, host.

Change-Id: I5db81dad4e9e8325ad3fa3a3e6d5d2d0deb297dd
Closes-Bug: #1453320"
d92ac89c675f9e5213890e293eac857c6e9af316,2015-10-01 15:32:26+02:00,"Python 3: fix invalid operation on dict_items objects

One cannot use ""+"" on ""dict_items"" objects in Python 3.

Partial-Bug: #1500400
Change-Id: Ide04b3eaa70b6f453cbc11442109f8c88b084305"
27f60c314bc9de5d81571de1437f93ca232f1382,2015-10-01 21:54:34+02:00,"Add neutron-linuxbridge-cleanup util

Removal of empty bridges have been disabled [1] to fix a race condition
between Nova and Neutron where a bridge would be removed if
the only instance using it is rebooted. This means empty bridges
will pile up over time.

This script can be used to periodically remove empty bridges by running it
on compute nodes.

Note: Usage of this script can still trigger the original race condition.
It should be used when you don't expect anyone do be doing operations
on their instances.

[1] Commit 8dd8a7d93564168b98fa2350eedf56acede42b0f

DocImpact: Add neutron-linuxbridge-cleanup util
Related-bug: #1328546
Closes-bug: #1497027
Co-Authored-By: Cedric Brandily <zzelle@gmail.com>
Change-Id: Ieb2796381579ad295abf361ce483d979a53d2bd6"
80e3d9be4923ecad17377b1d15c8392b8a43dac6,2015-10-01 16:56:10-04:00,"metadata: don't crash proxy on non-unicode user data

We attempt to log every successful metadata response with LOG.debug. But
as per oslo.log docs [1], we should make sure that what we pass into the
library is unicode.

Http.request returns a tuple of Response object and a string, which is
bytes in Python 2.x [2].

That's why we need to convert the response content to unicode before
passing it into oslo.log.

To achieve it, we utilize encodeutils.safe_decode with 'replace' errors
handling strategy, so that we don't get exceptions on input that does
not conform unicode.

For the unit test case, we pass a string that is not expected to convert
to unicode with errors='strict' strategy or similar, and check that we
still don't crash.

While at it, we remove a check for the number of log calls being
triggered, because it's something that we should avoid validating in
test cases, and it cannot trigger a real bug. The mock that was used to
count the number would also hide the bug that we try to reproduce.

Note that the bug does not require debug to be set because the crash
occurs before oslo.log machinery decides it should not log the message.

[1]: http://docs.openstack.org/developer/oslo.log/usage.html#no-more-implicit-conversion-to-unicode-str
[2]: http://bitworking.org/projects/httplib2/doc/html/libhttplib2.html#httplib2.Http.request

Closes-Bug: #1501772
Change-Id: I6a32c40ff117fae43913386134c8981539697ce8"
809ac2161577ef354b75713c0d5210e03fa16d6a,2015-10-01 16:07:59-07:00,"Pecan: Fix quota enforcement

Ensure that core resources, and not only extension resources,
are registered with the quota engine. Otherwise no enforcement
will happen for them.

Further, do not pass anymore the 'resource name' to the resource's
count method as it is not necessary anymore since Liberty.

Change-Id: I895b4e69e50dbf1aac39e07eba07c3e3ff30808a
Closes-bug: #1501948"
5be613490deebf494f2ecbbcd8cb5dd0d6f5e1b3,2015-10-02 11:32:41+04:00,"Consume service plugins queues in RPC workers.

This patch adds all RPC workers to consumers of service
plugins queues such as metering and l3-plugin.
This is important for DVR-enabled deployments with hundreds
of agents.

Change-Id: I6fea7f409c91b25d2c35b038d6100fdfa85d1905
Closes-Bug: #1498844"
350523bce23d52709e632f56c947f70ce3377178,2015-10-02 09:19:39+00:00,"Remove debtcollector.removals tagged ensure_dir

This change removes ensure_dir[1] wrapper which has been tagged in
Liberty for removal.

[1] neutron.agent.linux.utils

Closes-Bug: #1502061
Change-Id: I2bd62a0fd476cf6bf24761f942d555c1c29b4bf8"
3d54459c2971f01581354c8a6b9c58abea7743d8,2015-10-02 16:13:20+02:00,"/common/utils.py py34 incompatibility

Fixes bug found during unit test of get_random_string() method.
For Python3 it is required to encode string as bytes object
before hashing.

Related-blueprint: neutron-python3
Closes-bug: #1502148
Change-Id: I93061a831b45fc8b3ede0211af665ce02f36f38a"
a9dc48f5a4616a505824c3e8520c3dce7436f1b1,2015-10-02 08:46:16-07:00,"Do not log an error when deleting a linuxbridge does not exist

When you're racing to teardown and relying on RPC, it should not be
considered an error that a bridge does not exist when you're trying to
delete it anyway. This is better served as debug level information.

For context, this shows up over 1000 times in successful
gate-tempest-dsvm-neutron-linuxbridge job runs in a week so it's
probably safe to say it's not contributing to test failures.

Closes-Bug: #1501779

Change-Id: I8e9b27e010d033291497f4e660a97bbae92e75b1"
13b6d76da361178ea0b84baf4831a4c7f53e29c7,2015-10-02 15:54:26+00:00,"metadata: don't crash proxy on non-unicode user data

We attempt to log every successful metadata response with LOG.debug. But
as per oslo.log docs [1], we should make sure that what we pass into the
library is unicode.

Http.request returns a tuple of Response object and a string, which is
bytes in Python 2.x [2].

That's why we need to convert the response content to unicode before
passing it into oslo.log.

To achieve it, we utilize encodeutils.safe_decode with 'replace' errors
handling strategy, so that we don't get exceptions on input that does
not conform unicode.

For the unit test case, we pass a string that is not expected to convert
to unicode with errors='strict' strategy or similar, and check that we
still don't crash.

While at it, we remove a check for the number of log calls being
triggered, because it's something that we should avoid validating in
test cases, and it cannot trigger a real bug. The mock that was used to
count the number would also hide the bug that we try to reproduce.

Note that the bug does not require debug to be set because the crash
occurs before oslo.log machinery decides it should not log the message.

[1]: http://docs.openstack.org/developer/oslo.log/usage.html#no-more-implicit-conversion-to-unicode-str
[2]: http://bitworking.org/projects/httplib2/doc/html/libhttplib2.html#httplib2.Http.request

Closes-Bug: #1501772
Change-Id: I6a32c40ff117fae43913386134c8981539697ce8
(cherry picked from commit 80e3d9be4923ecad17377b1d15c8392b8a43dac6)"
d1d5f2a3bc11fbaa61dcbcce7de2be03b88dd606,2015-10-02 15:58:05+00:00,"Pecan: Fix quota enforcement

Ensure that core resources, and not only extension resources,
are registered with the quota engine. Otherwise no enforcement
will happen for them.

Further, do not pass anymore the 'resource name' to the resource's
count method as it is not necessary anymore since Liberty.

Change-Id: I895b4e69e50dbf1aac39e07eba07c3e3ff30808a
Closes-bug: #1501948
(cherry picked from commit 809ac2161577ef354b75713c0d5210e03fa16d6a)"
155746c171c24d11e77d9624e9af31b45dad87f3,2015-10-02 16:00:24+00:00,"Fixes 'ovs-agent fails to start on Windows beacause of SIGHUP'

Change Ic0cf8a9ca7f3a16b556a6825e2979471ae136c33 has added the handling
of SIGHUP in neutron_ovs_agent. This does not work on Windows as there is
no SIGHUP signal on windows.

The fix consists in checking if signal has SIGHUP attr before setting the handler
for SIGHUP.

Change-Id: I08258580252d68db222cbb9db7812ff1dfb37a56
Closes-Bug: #1499345
(cherry picked from commit 584bb1aad8647872cb8722beeb84e9ec08abc208)"
cf1689438079de264dd4a61cccaf2ad8b0bd05b9,2015-10-02 16:02:52+00:00,"Fixes 'ovs-agent cannot start on Windows because root_helper opt is not found'

Change Ie1224f8a1c17268cd7d1c474ed82fdfb8852eaa8 removed
config.register_root_helper() from ovs_neutron_agent:main, thus the agent
cannot start on Windows since root_helper config option is never
registered.

The fix consists in adding config.register_root_helper in the Windows side
utils.

Closes-Bug: #1497930

Change-Id: I6adc3b869c9564cac3ab99174b8fe47584213e59
(cherry picked from commit 074f82d3ec18fd591e9d1805676dfe13bd508510)"
c66fa826ab2f25a21f8c2fa9a386aff1e54c7427,2015-10-02 16:04:08+00:00,"Just call set-manager if connecting fails

Instead of calling set-manager every init, only call it when
getting the schema fails inside of Connection.start() which is
only called once.

Closes-Bug: #1499784
Change-Id: Ib28cd912e1f2eba318a6b0a82269919a1c95312d
(cherry picked from commit c561c7c20acef7227e2eab2be30a2626e16d2354)"
677687a3aad20e61f47b3ecbc9b0f4686e817653,2015-10-02 09:26:08-07:00,"/common/utils.py py34 incompatibility

Fixes bug found during unit test of get_random_string() method.
For Python3 it is required to encode string as bytes object
before hashing.

Related-blueprint: neutron-python3
Closes-bug: #1502148
Change-Id: I93061a831b45fc8b3ede0211af665ce02f36f38a
(cherry picked from commit 3d54459c2971f01581354c8a6b9c58abea7743d8)"
f3bb778dcb213d81aa62e504afb10b3bac614bb4,2015-10-02 16:27:39+00:00,"Tag the alembic migration revisions for Liberty

Previously when we had one repo with one alembic branch we would
create a milestone revision on that single branch. Now we have
multiple repos and expand/contract branches for each repo.

So from now on we tag the final revision on every branch when we make
a milestone release. Update the cli to support the command:
  neutron-db-manage upgrade <milestone>
where <milestone> becomes an alias for all the revisions for a
milestone.

Closes-Bug: #1499033

Change-Id: I38623986dd574bec01fe147f9c6a747f3f512bb7
(cherry picked from commit 52236764a3a7c23ec24a86ccb84bc6737e2a4791)
Conflicts:
        neutron/db/migration/cli.py
	neutron/tests/unit/db/test_migration.py"
a3cb179ffa5012a2b84ad1f23a048dc8afd44291,2015-10-02 19:26:37+00:00,"Decomposition phase2 for MidoNet plugin

Remove the rest of MidoNet plugin from Neutron tree.

Closes-Bug: #1490852

Change-Id: I260ec3e19c74928390c8e5e4e32629357c184361"
473c338ff8c5526157d297b7e90d5e4f5e94cbb9,2015-10-03 22:33:26+00:00,"The option force_metadata=True breaks the dhcp agent

Patch I5f6ee9788717c3d4f1f2e2a4b9734fdd8dd92b40 has an issue with
force_metadata = True.

Using the option force_metadata=True while
enable_isolated_metadata=False (which is the default), will break the
dhcp agent because the variable subnet_to_interface_ip is being
referenced before assignment.

Co-Authored-By: Jakub Libosvar <jlibosva@redhat.com>
Change-Id: I4e1d918e3a24dd483ee134021f587ae4520bf431
Closes-Bug: #1499406"
08971b0fb61170e86319c6801d6b1021d5944e3c,2015-10-04 19:51:15+00:00,"Do not log an error when deleting a linuxbridge does not exist

When you're racing to teardown and relying on RPC, it should not be
considered an error that a bridge does not exist when you're trying to
delete it anyway. This is better served as debug level information.

For context, this shows up over 1000 times in successful
gate-tempest-dsvm-neutron-linuxbridge job runs in a week so it's
probably safe to say it's not contributing to test failures.

Closes-Bug: #1501779

Change-Id: I8e9b27e010d033291497f4e660a97bbae92e75b1
(cherry picked from commit a9dc48f5a4616a505824c3e8520c3dce7436f1b1)"
a7fa6f9a37c976d971b1be5896ebb6241c815475,2015-10-05 10:54:23+00:00,"The option force_metadata=True breaks the dhcp agent

Patch I5f6ee9788717c3d4f1f2e2a4b9734fdd8dd92b40 has an issue with
force_metadata = True.

Using the option force_metadata=True while
enable_isolated_metadata=False (which is the default), will break the
dhcp agent because the variable subnet_to_interface_ip is being
referenced before assignment.

Co-Authored-By: Jakub Libosvar <jlibosva@redhat.com>
Change-Id: I4e1d918e3a24dd483ee134021f587ae4520bf431
Closes-Bug: #1499406
(cherry picked from commit 473c338ff8c5526157d297b7e90d5e4f5e94cbb9)"
37277cf4168260d5fa97f20e0b64a2efe2d989ad,2015-10-05 16:49:15+00:00,"Deprecate max_fixed_ips_per_port

This option does not have a clear use case since we prevent
users from setting their own IP addresses on shared networks.

DocImpact
Change-Id: I211e87790c955ba5c3904ac27b177acb2847539d
Closes-Bug: #1502356"
49746ca4749c45d2772289061f161145eb5ad2b8,2015-10-05 20:47:18+02:00,"Use assertIn and assertNotIn

Neutron tests should use:

  self.assertIn(value, list)
  self.assertNotIn(value, list)

instead of:

  self.assertTrue(value in list)
  self.assertFalse(value in list)

because assertIn and assertNotIn raise more meaningful errors:

  self.assertIn(3, [1, 2]
  >>> MismatchError: 3 not in [1, 2]

  self.assertTrue(3 in [1, 2])
  >>> AssertionError: False is not true

Closes-Bug: #1218713

Change-Id: Ic8492a88935bf005feb9dae726a4bee604a8bd09"
fd7f84b20b30b15445725c39bc5f8b1218de25d4,2015-10-06 01:06:11+02:00,"Use assertIsNone(observed) instead of assertEqual(None, observed)

Neutron should use the specific assertion:

  self.assertIsNone(observed)

instead of the generic assertion:

  self.assertEqual(None, observed)

as it raises more specific errors.

Closes-Bug: #1503055
Change-Id: Ib7e5875bd0a95320d89a7504f951998fb210acc1"
5cab062465af06be3827de4e7f9014ab1040bdbf,2015-10-06 07:15:02+00:00,"Correct MAC representation to match iptables output

We were previously using the netaddr's mac_unix format
(which leaves off leading 0's) to generate iptables rules
based on MAC addresses. While iptables accepts this format,
it's not returned this way in the output so the iptables
rule matching code would never find the match for these
rules, causing the loss of counters on these rules on every
reload.

This patch corrects this with a custom dialect that matches
the iptables format.

Closes-Bug: #1502901
Change-Id: Ia45ebde8c4684e12030469323e18367a54d1518b"
fb40dbbce9ac17ee43d8921aa62c28f1ea723fba,2015-10-06 08:48:55+00:00,"Execute ipset command using check_exit_code

When l2 agent execute ipset command, we should pass
parameter 'check_exit_code' to self.execute acording to
action.
The intention is to safely fail if we try to destroy a
non existing set, or delete a non existing member.
Otherwise the agent gets stuck in a loop if such situation
happens. Such kind of event would be logged as errors.

Change-Id: If67330523d114d6da13d0280851e7138a51d08f7
Closes-bug: #1497074"
caebc8fb8e8d9782746c3cc3ddc86f786342c819,2015-10-06 02:59:20-07:00,"DHCP: protect against case when device name is None

There are edge cases when the agent attempts to unplug an interface and
the device does not exist.

Change-Id: I6917ec94f685f3dd3bff6aa1d43dc56aab76274a
Closes-bug: #1498370"
f63366e615e2d4e799fe8072b450bce96f179c9e,2015-10-06 18:27:25+03:00,"L3 Agent support for routers with HA and DVR

The main difference for DVR HA routers is where
the VRRP/keepalived logic is run and which ports
fall in the HA domain for DVR.  Instead of running
in the qrouter namespace, keepalived will run inside
the snat-namespace.  Therefore only snat ports will
fall under the control of the HA domain.

Partial-Bug: #1365473

Change-Id: If2962580397d39f72fd1fbbc1188a6958f00ff0c
Co-Authored-By: Michael Smith <michael.smith6@hp.com>
Co-Authored-By: Hardik Italia <hardik.italia@hp.com>
Co-Authored-By: Adolfo Duarte <adolfo.duarte@hp.com>
Co-Authored-By: John Schwarz <jschwarz@redhat.com>"
0396b3de79173348042cd36869fc6d259ea182ea,2015-10-06 18:28:40+02:00,"Removed a pile of debtcollector removals from neutron.context

The next dev cycle is up, so let's get rid of that old stuff.

Related-Bug: #1449462
Related-Bug: #1446021
Change-Id: I0561a6c4ea420ba06029a88db442bf7165f755df"
4d0b66c843460202bdbafb48bbe569a1740241a4,2015-10-06 19:06:29+00:00,"Add another patch scoping bullet point to effective_neutron

This patch adds an alternative wording of the patch sizing/scoping
recommendation that was left out of [1]

[1] https://review.openstack.org/#/c/230217

Change-Id: I64b4f4aca90c19d7dbc81a8126a7254d64876699"
2a4b5f938d038bd73a70f1fc86cc71e819e288b0,2015-10-06 12:24:59-07:00,"Fix iptables comments for bare jump rules

This fixes the order of arguments in iptables rules that
are bare jumps (e.g. '-j other-chain').

The previous code was only catching jump rules that appeared
after a chain definition.

Closes-Bug: #1502932
Change-Id: I490792eb08c67a32f9b286d933a776fb76840b6b"
9f620772f0097156858255687ed97128ef666825,2015-10-06 14:31:54-07:00,"Fix rule generation for single and all host rules

iptables outputs single-host rules with a prefix on the
end (/32 or /128) and completely omits /0 rules since they
allow everything.

This patch fixes our rule generation to match that pattern
so iptables counters don't get destroyed on these rules on
every reload.

Closes-Bug: #1502917
Change-Id: Ifbdfbafd6cf37c6ef7385cd5f1d2df65cc19797a"
a0f1d9d6de1560be91d3001c8ac9f880a7a5a7e0,2015-10-06 21:25:57-07:00,"Mock oslo policy HTTPCheck instead of urllib

We were mocking internal behavior of oslo policy by
patching urllib. This will break with the upcoming oslo
release that switches to requests.

This patch changes the mock to the HTTPCheck level and we
can leave implementation details testing up to oslo_policy.

Change-Id: I07957f01307e25f1547197c720eea6e3e7f0ef5a
Closes-Bug: #1503890"
477fcca1c0789dcd7b51e410c255777e56e02788,2015-10-07 11:43:19+02:00,"Add the functional-py34 and dsvm-functional-py34 targets to tox.ini

This will allow us to run the functional tests on the gates using Python 3.

Change-Id: I218c73398c6ed6cff776b65a66cb9336219cba77
Partial-Bug: #1500400"
86ad967e40c2c6752ec0fb46cfd3098ede0c7178,2015-10-07 10:17:51+00:00,"Add testresources used by oslo.db fixture

If we use oslo.db fixtures, we'll need the package or
the next version of oslo.db release will break us.

Closes-Bug: #1503501
Change-Id: I7dfbf240333095d91a414ba15a439bdc4804eb25"
0b07910f33ed26fbdd13530eafbdefd74104424d,2015-10-07 11:20:10+00:00,"DHCP: protect against case when device name is None

There are edge cases when the agent attempts to unplug an interface and
the device does not exist.

Change-Id: I6917ec94f685f3dd3bff6aa1d43dc56aab76274a
Closes-bug: #1498370
(cherry picked from commit caebc8fb8e8d9782746c3cc3ddc86f786342c819)"
e5cd4a9f540ef48b5476df011c45333d9c0d72ba,2015-10-07 18:27:07+02:00,"Removed neutronclient option from metadata agent

The new RPC interface has proved itself for two cycles, I don't
recollect any serious issues with it, so let's just clean up the
obsolete neutronclient based fallback mechanism.

The metadata agent configuration documentation should be updated
to not require API configuration values for the agent to talk to
neutron-server.

DocImpact
Change-Id: I254c575c66214f50fb93a94c46c4c9caebfc2937
Closes-Bug: #1502947"
0b6cc6e667cbbd9c668bf60aee1220836d06c866,2015-10-08 09:29:50+08:00,"Validate local_ip for linuxbridge-agent

When tunneling is enabled, check the availability
of the IP address in local_ip belonging to the host
interface.

Change-Id: Ic1b893d61d5efef397773cdba3b7418ef70a0417
Closes-Bug: #1483497"
9ad3c6ac9bae578cd589b25ef39741639ab97ba0,2015-10-08 14:03:11+02:00,"Removed release_port_fixed_ip dead code

It's not used since I822cc4a92cb05cdef88679bb628fad4e5063cddd.

Closes-Bug: #1212520
Change-Id: I1bb0755fa1379f3dad4241e7ae8d50c4c842d89e"
8f58bbf38f5984e70d6e0be7427deb99d7782d1d,2015-10-08 14:13:56+02:00,"Fixed multiple py34 gate issues

1. Scope mock of 'open' to module

By mocking 'open' at the module level, we can avoid affecting
'open' calls from other modules.

2. Stop using LOG.exception in contexts with no sys.exc_info set

Python 3.4 logger fills in record.exc_info with sys.exc_info() result
[1], and then it uses it to determine the current exception [2] to
append to the log message. Since there is no exception, exc_info[1] is
None, and we get AttributeError inside traceback module.

It's actually a bug in Python interpreter that it attempt to access the
attribute when there is no exception. It turns out that it's fixed in
latest master of cPython [3] (the intent of the patch does not seem
relevant, but it removes the offending code while reshuffling the code).
Note that now cPython correctly checks the exception value before
accessing its attributes [4].

The patch in cPython that resulted in the failure is [5] and is present
since initial Python 3k releases.

The patch in fixtures that broke us is [6].

[1]: https://hg.python.org/cpython/file/tip/Lib/logging/__init__.py#l1412
[2]: https://hg.python.org/cpython/file/tip/Lib/logging/__init__.py#l575
[3]: https://hg.python.org/cpython/rev/73afda5a4e4c
[4]: https://hg.python.org/cpython/rev/73afda5a4e4c#l6.484
[5]: https://hg.python.org/cpython/rev/2ee09afee126
[6]: https://github.com/testing-cabal/fixtures/commit/67dd2956943261e845a866dab155208c51da937e

Closes-Bug: #1503847
Closes-Bug: #1504053
Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Change-Id: I456b7846b8a53e4d3f8c91583685e0e1eaa84719"
ba2cb93b2975ec8151c95944ce4961fd7d28e326,2015-10-08 15:56:04+02:00,"Remove usage of WritableLogger from oslo_log

With Eventlet 0.17.2, we can directly pass the logger instance. This
allows us to deprecate/remove the WritableLogger class from oslo.log.

Closes-Bug: #1440773
Change-Id: I3985b30b499a1e676d39c2a6cd3a31ac13c0ab47"
2758739847e30e18675ad945a1a3ad04c4603e3f,2015-10-08 16:45:18+02:00,"Cleaned up remaining incorrect usage for LOG.exception

- callers should not explicitly pass exceptions into LOG.exception
  because it's already implicitly included in the message by stdlib
  logging module.
- callers should not call to LOG.exception when there is no exception to
  log about (known to fail in Python 3.x < 3.5).

Change-Id: I58e7e01ed152028ad43bb3ada87d719caa2ab08d
Related-Bug: #1504053"
216d2d0b7594ad05916bcee6ed8f80f1e0b385d0,2015-10-08 17:58:53+00:00,"Consume sslutils and wsgi modules from oslo.service

sslutils and basic WSGI functionality have been moved to
oslo.service and now Neutron can reuse them.

Marked ssl options that were renamed in oslo.service as
deprecated.

Added a note about possible implications for out-of-tree plugins
to neutron_api.rst

Bumped oslo.service version to 0.9.0.

Related-Bug: #1482633

Depends-On: I0424a6c261fae447dbc25b3abf00258c860a88f5
Change-Id: Ibfdf07e665fcfcd093a0e31274e1a6116706aec2"
ea8de8a9dd808b1379060e0ce578b8129f45c3ae,2015-10-08 17:59:10+00:00,"Remove excessive fallback iptables ACCEPT rules

The previous code was generating a fallback ACCEPT rule for every
port when there should only be one at the very end. The reason that
this wasn't causing a bug is because we have a duplicate rule remover
that was silently throwing away the extras and it happened to get them
in the right order.

Closes-Bug: #1502906
Change-Id: I83cf574f93b512be1ccefdc8da63e1783d279233"
da9fcd8ab9e48226b18d42180ae0089c2abbcab5,2015-10-08 14:51:48-07:00,"Only lock in set_members on mutating operations

ipset was locking on every set_members call with an external
filesystem lock. This was expensive when lots of ports that
were a part of the same security group were on the same agent.

This patch adjusts it to check if it needs to make a change before
acquiring the semaphore.

Closes-Bug: #1502930
Change-Id: I2553ab74b7d0fbada5d573246194f83d58bd7d56"
eb6a41743cc2de3adc5d6278dd556f203ccea74c,2015-10-09 11:49:26+08:00,"Add track_quota_usage conf into neutron.conf

track_quota_usage is missing in neutron configuration files. This
patch adds it into neutron.conf so that deployers know it.

Closes-bug: #1504370
DocImpact

Change-Id: Ibaff5ac60cd69958eb981d2058d946cc88f799f1"
2e0ead8e043a47db214f4f52c9bfe71b6079b5fd,2015-10-09 07:52:19+03:00,"QoS SR-IOV: allow to reset vf rate when VF is assigend to VM

delete_bandwidth_limit method is called in 2 scenarios:
1. when deleting a port
2. when removing a policy from a port

self.eswitch_mgr.clear_max_rate is valdating if VF is not assigned to VM
which is good for case 1, but prevent reseting the max rate for case 2.
for case 2 the delete_bandwidth_limit should  call _set_vf_max_rate with max_kbps=0
to reset VF max rate for assigned VM.

Closes-Bug: #1504165

Change-Id: Ief708531708b8faa918603298d49d39ef5ba2df5"
2c62cd6ec0751a355c4db3f430e1c5d9e7a45bf7,2015-10-09 23:13:58+09:00,"Use assertTrue(observed) instead of assertEqual(True, observed)

We should use assertTrue not assertEqual.

Closes-Bug: #1503071

Change-Id: Ib75dd9f8965fd04fe581f09a5e5df3df43542d89"
3330c5554518be056b8f2506567bf5f4c1f12db7,2015-10-09 19:20:53+00:00,"Add OpenFixture and get rid of 'open' mocks

This patch adds a new fixture that allows a specific
file to be mocked for 'open' calls while leaving the
normal 'open' behavior for everything else. This is to
prevent cases like the related bug where a library we
depend on can unexpectedly call 'open' on its own
(in that case it was debtcollector->warnings->linecache).

It also replaces all open mocks in the unit tests with
this new fixture.

Related-Bug: #1503847
Change-Id: Ie9e1a01acd5cb231718efd028d30df6c8dbcd3f0"
090fe713592c2b6398d999bfa03b80cbb2054609,2015-10-09 20:19:33-07:00,"Fix functional test_server tests

Now oslo.service 0.10.0 no longer sends SIGHUP to parent and
children services.

This was a chance introduced by 286a6ea, and since it invalidated
the very logic under test, this must be revised.

Change-Id: I18a11283925369bc918002477774f196010a1bc3
Closes-bug: #1505438"
44950383ac5e5d53456efa9cfeda5efff547cd5c,2015-10-10 00:15:54-04:00,"Remove the embrane plugin

The embrane plugin is EOL.
Users have been transitioned to other solutions.

Closes-Bug: #1504670

Depends-On: Ic13a101f04086af84251c98d775d75334504007d

Change-Id: Ibc336db310d051cae65291724ea5becadc3d3d45"
292bdff78b91320ea40739e1ceb01c3cb1a31cc8,2015-10-12 01:34:55+00:00,"Fix iptables modules references in rule generation

The way we were generating rules with module references
for TCP, UDP, and ICMP was not matching the output of
iptables-save so all of the counters for those rules
were being destroyed on each iptables reload.

This patch corrects the generation so it's in line with
iptables-save output. It uses the matching module name only
when a specific port number or port range is specified.
It also uses the full 'ipv6-icmp' protocol name that shows
up in the output rather than 'icmpv6'.

Closes-Bug: #1502924
Change-Id: I1bf9a85cd299a7618d29c72991612898c5437442"
6364ce646e06d1168b8b96f27c8a7df2e2f0f23b,2015-10-12 17:21:08+08:00,"Fix the bug of ""Spelling error of a word""

The word ""occured"" should be spelled as ""occurred"".
So it is changed.

Change-Id: Ice5212dc8565edb0c5b5c55f979b27440eeeb9aa
Closes-Bug: #1505043"
865dc46bc5687813c746ad490be6f534f46f518d,2015-10-12 12:19:40+00:00,"DVR: notify specific agent when creating floating ip

Currently when floating ip is created, a lot of useless action
is happening: floating ip router is scheduled, all l3 agents where
router is scheduled are notified about router update, all agents
request full router info from server. All this becomes a big
performance problem at scale with lots of compute nodes.

In fact on (associated) Floating IP creation we really need
to notify specific l3 agent on compute node where associated
VM port is located and do not need to schedule router and
bother other agents where rourter is scheduled. This should
significally decrease unneeded load on neutron server at scale.

Partial-Bug: #1486828
Change-Id: I0cbe8c51c3714e6cbdc48ca37135b783f8014905"
94ba8b7a2cd8f03763d4ab25223cba690ecf8585,2015-10-12 08:16:33-05:00,"Replaced deprecated isotime() function

The agents_db.py was using a deprecated function 'isotime()'.

I removed the deprecated function and replaced it with:
datetime.datetime.isoformat()

https://docs.python.org/2/library/datetime.html

Change-Id: I32b6096fb1a42caef529db0a71fa52f7de5706f5
Closes-Bug: #1504557"
8a9de547ed4a15b9ac0eb0d085025d7c97fbf594,2015-10-12 20:22:00+02:00,"Remove disable_service from DBs configuration

Remove disable_service from configure_for_func_testing.
A recent Devstack patch (Linked in bug report) checks
that a disabled service is not enabled later. This breaks
the code this patch touches. I believe the DBs were disabled
and enabled with the assumption that Devstack expects only
a single DB to be configured at a time, but that doesn't
seem to be the case. Simply removing the disable calls seems
to work fine.

Also exclude oslo.messaging==2.6.0 as per global-requirements.txt.

Closes-Bug: #1505259
Closes-Bug: #1505295

Depends-On: I47ab12f719fba41c2f0c03047b05eb28f4423682
Change-Id: I0fbcc1218e1aa9adbf89f6121c1c2e224ed93cab"
c1f2df2f6b87b435039d4cb52ccb14c0d9c53adc,2015-10-12 17:04:41-04:00,"Fix error returned when an HA router is updated to DVR

Before this patch, the code compares the 'ha' flag that
comes in from the user, and the current state of the 'distributed'
flag in the DB. This is wrong because if a router is currently
HA in the DB, and the update request contains only
{'distributed': True}, then the 'ha' flag from the request
is None and the error condition is never raised!

The reason the unit tests
(Specifically test_migrate_ha_router_to_distributed)
did not catch this issue is because
of another bug: The _update_router helper method in the L3 HA
unit tests had an 'ha' default value of True, when it should
have had a default value of None. Setting it to None fails
the unit test (Because it raises the wrong exception),
and the contents of the patch makes the unit test pass.

Change-Id: Ie979b6a8400490b578ded17dc6529529e9637b34
Closes-Bug: #1505375"
2f6279e3e9a8561e74026ab3f3e639903014081b,2015-10-13 09:32:01+09:00,"test_db_base_plugin_v2: Skip a few tests on some platforms

netaddr (and its underlying libc inet_pton) produces different
representations of IPv4-compat addresses for different platforms.

Linux:
    >>> netaddr.IPAddress(""::2"")
    IPAddress('::2')
    >>>

OSX:
    >>> netaddr.IPAddress(""::2"")
    IPAddress('::0.0.0.2')
    >>>

As our API assumes Linux's way, skip affected test cases on
the other platforms.

Related-Bug: #1484837
Change-Id: I89e1822bb92dfcf8772bba1a3edf908c89550119"
cbc268e8395d72c8aa6ea05d90bd22f99df1b8db,2015-10-13 10:19:49+03:00,"L3 agent: use run_immediately parameter to sync after start

Explicit call to periodic resync after start may lead to
double syncing. See bug for details.

Closes-Bug: #1505282
Change-Id: Ib5e481d579039b2c3e87d4f12cad1241d02fe060"
81c5e511f704861a08f2e3938edca97474d4c44c,2015-10-13 14:48:12+03:00,"Fix inconsistency in DHCPv6 hosts and options generation

The DHCP agent is inconsistent in how it handles subnets whose
ipv6_address_mode is not slaac.  While the DHCP agent writes out both
DHCPv6 host entries and DHCPv6 options for ports scoped by the subnet
for dnsmasq to use, subnet specific options are not written.

This patch addresses this inconsistency by generating subnet specific
options when the subnet's ipv6_address_mode is not slaac.

Closes-Bug: #1501451

Change-Id: I372c93fa5667e955c7b81181daa2e66f47d85fdf"
7592b17b8793c0e296c77bd17929f3db37f1483e,2015-10-13 15:05:37+03:00,"Always send status update for processed floating ips

Currently l3 agent skips status update for floating ips in case
status didn't change: this might be wrong if status has changed
on server side while agent was processing. See bug for details.

L3 agent skips floating ip processing in case ip address exists
on external device. So we can still skip status update for such
floating ips.

Closes-Bug: #1505557
Change-Id: I908fe5a0555f68ab85e7d199c36a903b915e103f"
7bb40921660cf29beb68e338e205499efd6ffa36,2015-10-13 14:46:02+02:00,"Make test_server work with older versions of oslo.service

Change I18a11283925369bc918002477774f196010a1bc3 fixed the test for
oslo.service >= 0.10.0, but it also broke it for older versions of
oslo.service. Since the library has minimal version of >= 0.7.0 in
requirements.txt, test should pass for those versions too.

Now, instead of validating that either reset() or restart() of workers
are triggered on SIGHUP, just validate that .start() is triggered the
expected number of times (either way, no matter how oslo.service decide
to clean up the children, they exit and then are respawned).

Change-Id: I41f9d3af780b3178b075bc1e7084f417a2bd1378
Closes-Bug: #1505645"
5c3f5d035015af72da8b0320964f13d3092ac44c,2015-10-13 17:52:18+03:00,"Avoid DuplicateOptError in functional tests

Some test require to register options with oslo.Config,
but now some of them use global cfg.CONF for it.
This can cause the DuplicateOptError if two tests tried to
register the same option with different values of config.
We should use the oslo_config fixture [1]
in functional tests to avoid it.

[1] http://git.openstack.org/cgit/openstack/oslo.config/tree/oslo_config/fixture.py

Closes-bug: #1505715
Change-Id: I5c2340c0af054dfa78788cbc61dfb1fd9feea535"
6dcfe3a9362ae5fcf18e5cfb59663e43446cd59c,2015-10-13 17:26:23+02:00,"Mock oslo policy HTTPCheck instead of urllib

We were mocking internal behavior of oslo policy by
patching urllib. This will break with the upcoming oslo
release that switches to requests.

This patch changes the mock to the HTTPCheck level and we
can leave implementation details testing up to oslo_policy.

Change-Id: I07957f01307e25f1547197c720eea6e3e7f0ef5a
Closes-Bug: #1503890
(cherry picked from commit a0f1d9d6de1560be91d3001c8ac9f880a7a5a7e0)

Add testresources used by oslo.db fixture

If we use oslo.db fixtures, we'll need the package or
the next version of oslo.db release will break us.

Closes-Bug: #1503501
Change-Id: I7dfbf240333095d91a414ba15a439bdc4804eb25
(cherry picked from commit 86ad967e40c2c6752ec0fb46cfd3098ede0c7178)

Fix functional test_server tests

Now oslo.service 0.10.0 no longer sends SIGHUP to parent and
children services.

This was a chance introduced by 286a6ea, and since it invalidated
the very logic under test, this must be revised.

(cherry picked from commit 090fe713592c2b6398d999bfa03b80cbb2054609)

Change-Id: I18a11283925369bc918002477774f196010a1bc3
Closes-bug: #1505438
(cherry picked from commit 090fe713592c2b6398d999bfa03b80cbb2054609)

Make test_server work with older versions of oslo.service

Change I18a11283925369bc918002477774f196010a1bc3 fixed the test for
oslo.service >= 0.10.0, but it also broke it for older versions of
oslo.service. Since the library has minimal version of >= 0.7.0 in
requirements.txt, test should pass for those versions too.

Now, instead of validating that either reset() or restart() of workers
are triggered on SIGHUP, just validate that .start() is triggered the
expected number of times (either way, no matter how oslo.service decide
to clean up the children, they exit and then are respawned).

Change-Id: I41f9d3af780b3178b075bc1e7084f417a2bd1378
Closes-Bug: #1505645
(cherry picked from commit 7bb40921660cf29beb68e338e205499efd6ffa36)

Fixed multiple py34 gate issues

1. Scope mock of 'open' to module

By mocking 'open' at the module level, we can avoid affecting
'open' calls from other modules.

2. Stop using LOG.exception in contexts with no sys.exc_info set

Python 3.4 logger fills in record.exc_info with sys.exc_info() result
[1], and then it uses it to determine the current exception [2] to
append to the log message. Since there is no exception, exc_info[1] is
None, and we get AttributeError inside traceback module.

It's actually a bug in Python interpreter that it attempt to access the
attribute when there is no exception. It turns out that it's fixed in
latest master of cPython [3] (the intent of the patch does not seem
relevant, but it removes the offending code while reshuffling the code).
Note that now cPython correctly checks the exception value before
accessing its attributes [4].

The patch in cPython that resulted in the failure is [5] and is present
since initial Python 3k releases.

The patch in fixtures that broke us is [6].

[1]: https://hg.python.org/cpython/file/tip/Lib/logging/__init__.py#l1412
[2]: https://hg.python.org/cpython/file/tip/Lib/logging/__init__.py#l575
[3]: https://hg.python.org/cpython/rev/73afda5a4e4c
[4]: https://hg.python.org/cpython/rev/73afda5a4e4c#l6.484
[5]: https://hg.python.org/cpython/rev/2ee09afee126
[6]: https://github.com/testing-cabal/fixtures/commit/67dd2956943261e845a866dab155208c51da937e

Closes-Bug: #1503847
Closes-Bug: #1504053
Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Change-Id: I456b7846b8a53e4d3f8c91583685e0e1eaa84719
(cherry picked from commit 8f58bbf38f5984e70d6e0be7427deb99d7782d1d)"
e0eeadc97ee094d6dfa5f4139c1c4aa871b514d5,2015-10-13 12:21:06-04:00,"Kill conntrackd state on HA routers FIP disassociation

Legacy routers kill conntrackd states on FIP disassociation,
so that traffic to FIPs that have been disassociated is properly
dropped. This is not the case with HA routers, and this patch
changes that.

Change-Id: Ic962c518ce33a4936d0f1655d60d308c5e776a9b
Closes-Bug: #1505700"
81823e86328e62850a89aef9f0b609bfc0a6dacd,2015-10-13 20:29:59+00:00,"Improve performance of ensure_namespace

The ensure_namespace method calls IpNetnsCommand.exists to
determine if the specified namespace exists or not.  This is
accomplished by listing all namespaces with ""ip netns list""
and then looping through the output to determine if the specified
namespace was included in the output.

Research of various Linux operating systems has indicated that
namespaces are represented as files in /var/run/netns and root
authority is ""typically"" not required in order to look at the
files in this subdirectory.

The existing configuration option ""use_helper_for_ns_read""
will be used to determine if the root-helper should be used to
to retrieve the list of namespaces.  If this configuraton option
is set to False, the native python os.listdir(/var/run/netns)
will be used.

Related-Bug: #1311804
Closes-Bug: #1497396
Change-Id: I9da627d07d6cbb6e5ef1a921a5f22963317a04e2"
1dd235a36eea6ed06d036b03d5a4ff845b0e26c4,2015-10-13 16:30:06-07:00,"Fix link in devref guide

warnerrors = True no longer works with Sphinx < 1.3, and this
makes warnings fail silently [2].

A patch [1] is out to fix that, and until pbr releases we will
have to be careful not to bitrot.

This patch fixes the outstanding link error and tweaks the wording
of the affected pill of wisdom.

[1] I680b448471e687919d202e8f2abe57f8ba3b22ee
[2] bug #1496882

Change-Id: Id9cce7ae78c51dceeb56c6b5b8b04340c5378748"
f7273b3052289f3882f69267f6112f6c20dbe894,2015-10-14 00:26:05-07:00,"Include external bridge deprecation warning in string

This is to ensure that the deprecation warning shows up
in the docs.[1]

1. https://review.openstack.org/#/c/232353/1/doc/common/tables/neutron-l3_agent.xml

Closes-Bug: #1494066
Change-Id: Id2ddec42df3ab376244bbf37b1cdd8b524382f7c"
f6df2e704ba0c39e8a5ee59cb5fa1bd337deae82,2015-10-14 00:46:22-07:00,"Move retries out of ML2 plugin

There are several DB retry decorators in the ML2 plugin.
We want to keep them in the API layer as much possible so
this patch removes all but 1 and adds the retryrequest catch
to the API-level decorator.

The remaining one is the update_port_status which is an internal
RPC called method so it's not clear if there is a benefit to
moving it to the ml2 rpc file.

Change-Id: Ifffd424b693f57b5dd3de4dc625b50acc23abe0f
Closes-Bug: #1505908"
62cdfee42f3d28b97908636bd5d0828ffdcaf135,2015-10-14 11:59:41+02:00,"Python 3: make post_test_hook work with more tox targets

This makes it possible to run the script with different ""flavors"" of
""dsvm-functional"" and ""dsvm-fullstack"". In particular, this is needed to
have a dsvm-functional-py34 gate running (see
https://review.openstack.org/#/c/233177/).

Change-Id: I38cadeecff6a8c0c55c103095c045a3e0c39bee1
Partial-Bug: #1500400"
55a7a376860afa292d35f886d39c8c16c65c24d2,2015-10-14 23:26:24-04:00,"The first word of the error message should be capitalized

The patch is straightforward, just spelling mistake.

Change-Id: I127a155800a11d09cd0b3d332cfeed7e6920a222
Closes-bug: #1506289"
e09b5fa954bc40327320256dada61f5a81493346,2015-10-15 17:10:59+09:00,"test_create_network_segment_allocation_fails: Assert the status

Related-Bug: #1505908
Change-Id: I17ee725a458f86ee59f7988b385e76b83ab9fd3e"
cfc87662cc87e51e96251383a9776343f99a5b3a,2015-10-15 08:44:53+00:00,"Python 3: skip test_json_with_utf8 on Py3

The last skipped unit test should indeed be skipped: it does not make
sense to run it with Python 3.

$ python 2
>>> import json; json.dumps({'a': u'\xe9'.encode('utf-8')})
'{""a"": ""\\u00e9""}'

$ python3
>>> import json; json.dumps({'a': u'\xe9'.encode('utf-8')})
Traceback (most recent call last):
  ...
  File ""/usr/lib64/python3.4/json/encoder.py"", line 173, in default
    raise TypeError(repr(o) + "" is not JSON serializable"")
TypeError: b'\xc3\xa9' is not JSON serializable

In Python 2, the JSON encoder function to encode a string begins with
a magic test to convert UTF-8 encoded string to Unicode:

    if isinstance(s, str) and HAS_UTF8.search(s) is not None:
        s = s.decode('utf-8')

https://hg.python.org/cpython/file/4188cd5dc0c5/Lib/json/encoder.py#l42

This trick is gone in Python 3:

https://hg.python.org/cpython/file/288953a787ce/Lib/json/encoder.py#l49

Change-Id: Iddaaea4ebedf04c87f1ff9f9098163a15ffa78f7
Blueprint: neutron-python3
Closes-Bug: #1491824"
3837427189a54e6c052d773d629bac53d95702dc,2015-10-15 14:16:17+03:00,"Enable specific extra_dhcp_opt to be left blank

In some cases there is a need for a blank value of the ""router"" extra
dhcp option. This fix addresses this issue by introducing a simple
mechanism in the code that allows specific extra dhcp options to be left
blank by applying a different opt_value validation of the data received
from the REST call and different validation on the value that will be
written to the DB.

This fix also takes into consideration bug #1257467 which claims that
in case of a blank ""server-ip-address"" option a segmentation fault
occurs in dnsmasq. I did not check this claim with a newer dnsmasq
version since it seemed logical that the list of potentially blank
options should be limited to options that are known to work well when
blank and have functional justification for being blank (e.g. ""router"")

APIImpact
""router"" and ""classless-static-route"" extra dhcp options can be blank
(e.g. opt-name=""router"", opt-value="""")

DocImpact
During port creation/update, Specific extra-dhcp-options can be left
blank (""router"" and/or ""classless-static-route""). This causes dnsmasq
to have an empty option in the ""opts"" file related to the network to
which the port is related.
For example:
tag:tag0,option:classless-static-route,
tag:tag0,option:router,

Closes-Bug: #1437695
Related-Bug: #1257467

Change-Id: I0ac76e132c4bd86da39863674d4cf8a22dad7034"
140ccc36d172bead2605968b3d61b36cca8a0040,2015-10-15 12:44:04+00:00,"Merge tag '7.0.0'

This is a null-merge of the 7.0.0 release tag back into the master
branch so that the 7.0.0 tag will appear in the git commit history of
the master branch. It contains no actual changes to the master branch,
regardless of how our code review system's UI represents it. Please
ask in #openstack-infra if you have any questions, and otherwise try
to merge this as quickly as possible to avoid later conflicts on the
master branch.

Change-Id: I920a33126a5871447602e6f9872985d8c9a4707a"
d9fb3a66b4aead65fac2df08a5f34538e7af4d7b,2015-10-15 08:15:20-07:00,"Cache the ARP entries in L3 Agent for DVR

There seems to be a timing issue between the
ARP entries that arrive from the server to
the agent and the internal qr-device getting
created by the agent.
So those unsuccessful arp entries are dropped.

This patch makes sure that the early ARP entries
are cached in the agent and then utilized when
the internal device is up.

Closes-Bug: #1501086
Change-Id: I9ec5412f14808de73e8dd86e3d51593946d312a0"
e8a92e0b9dd1ecc7887eced522578258e69e9ff3,2015-10-15 18:38:19-04:00,"Do not accept abbreviated CIDRs

This is a special netaddr behavior that we wish to prevent.

http://lists.openstack.org/pipermail/openstack-dev/2015-August/072610.html

APIImpact

Change-Id: I94a059cee396e183bffd4a064709bb83504bf983
Closes-Bug: #1490885"
72e87f6d87d0da65214a9d21fe603883f1d3c232,2015-10-16 13:26:25+00:00,"Do not try to delete a veth from a nonexistent namespace

Currently, VethFixture cleanup tries to delete veth from their
namespaces even if they don't exist anymore (without crashing the
cleanup). It implies an extra trace if an error is raised which can be
confusing.

This change avoids to try deleting a veth from a nonexistent namespace
in the fixture VethFixture.

Closes-Bug: #1506862
Change-Id: I5d0192998d2f3f8d1a6f783769ae9bfcb4bae7f2"
52e91f48f2327b47f126893f9cb12f153380a9a6,2015-10-16 23:34:47+08:00,"DVR: Notify specific agent when update floatingip

The L3 agent was determined when update floatingip.
So notify the specific agent rather than notify all agents.
This will save some RPC resources. This is only for DVR routers.
Legacy and HA routers notify only the relevant agents.

Partial-Bug: #1486828
Change-Id: I12f61afdfaa944bc4b659cec61a8b5ff8c66ae76
Co-Authored-By: Oleg Bondarev <obondarev@mirantis.com>"
9d6584120003f50782461677d1b783bd07131444,2015-10-16 15:12:20-04:00,"The exception type is wrong and makes the except block not work

According to the context, it should be KeyError here to catch.
AttributeError will not happen here. More details could be found
in the bug report.

Change-Id: Id6351172703ac492e86475f75bf1be03f4e4e8a3
Closes-bug: #1506934"
a8d20e05079903a3fb2e952b7ec2c4cf27b208e9,2015-10-16 13:10:56-07:00,"Fix AttributeError on port_bound for missing ports

If the port is concurrently deleted, db_get_val returns None, and
that causes the Exception to be raised. However, the exception is just
log noise if the port has been deleted concurrently and it does not
lead to failures.

This can happen if port_update and port_delete operations occur
in short sequence and interleave. To prevent this trace from
occurring, this patch checks that the port is being eliminated and
emits an error trace only if the port is indeed to be expected
amongst the list of ports to be updated.

We do not raise an exception to avoid disrupting the agent sync
process, and leave to the admin the investigation of the issue
(should that be cronic rather than transient).

Under normal circumstances, if the port is expected it should
be there, and if it isn't this should be treated as a bug to be
investigated further.

Closes-bug: #1455320

Change-Id: Ic609af0ef6a09b536c882c58c23167c0a469b155"
a6d9580f2b95bf2c7c607d4e2671ffbbceae28d5,2015-10-17 18:30:16+00:00,"Fix DVR downgrade exception / error code

Updating a distributed router back to a legacy router
should return error 400 (BadRequest), not error 500.

Closes-Bug: #1505346
Change-Id: Ia57e80107bd11ff7b38b89d30279603017913724"
a2f7e0343a147a30a637af4e1cb9a866f557e87d,2015-10-19 13:54:11+00:00,"Revert ""DVR: Notify specific agent when update floatingip""

This reverts commit 52e91f48f2327b47f126893f9cb12f153380a9a6.

The patch broke notifications about FIP updates and triggered 100%
gate failures for Ironic gate.

I believe that I0cbe8c51c3714e6cbdc48ca37135b783f8014905 is also
breaking notifications, but for FIP create, which probably was not
utilized in any gate before and hence not caught in time.

The change the reverted patch introduced made update_floatingip to
fetch router based on FIP router_id field on every call, which was
not the case before the patch. For some reason unknown at the
moment, we get NotFound from database on this fetch.

The patch does not answer the question why we get NotFound from
database on fetching a FIP router_id, but that's another issue that
should be investigated while Ironic gate is happy.

Change-Id: I4affac49d7c63f47c5654b94b28f4cb7471e87b0
Closes-Bug: #1507558
Related-Bug: #1507602"
b7b6f3fe823994fdacde6e87a6a1f62692508fbe,2015-10-19 16:14:43-04:00,"ovs_neutron_agent: display loaded extensions

Currently neutron agent-show command does not provide the visibility for the
loaded extensions. This commit fixes that.

DocImpact

Change-Id: Iab101682df4676ad3ca2531356a1de8f2a2d4f14
Closes-Bug: #1497969"
c5db6050e5c1988ba845d4b7e50d12057359f19f,2015-10-19 22:10:53+01:00,"Add stevedore aliases for interface_driver configuration

Changed the interface_driver configure for agents from class
imports to stevedor aliases. The loading method needed to be
updated to load as a DriverManager. Backward compatability
for configuration as class import.

DocImpact

Change-Id: Ic349691989484286cd7c60eaf3ad1454c5852d1f
Closes-Bug: #1504536"
c874f6dadaa983ed4f338808907c8829a7f86031,2015-10-19 22:10:33+00:00,"Split the FIP Namespace delete in L3 agent for DVR

Right now we are seeing a race condition in the l3 agent
for DVR routers when a floatingip is deleted and created.

The agent tries to delete the floatingip namespace and
while it tries to delete there is another call to add a
namespace. There is a timing window in between these two
calls where sometimes the call to create a namespace succeeds
but, when tried to execute any commands in the namespace
it fails, since the namespace was deleted concurrently.

Since the fip namespace is associated with an external net
and each node has only one fip namespace for an external net,
we would like to only delete the fip namespace when the
external net is deleted.

The first step is to split the delete functionality into two.
The call to fip_ns.cleanup will only remove the dependency that
the fipnamespace has with the router namespace such as fpr and
rfp veth pairs.

The call to fip_ns.delete will actually delete the
the fip namespace and the fg device.

Partial-Bug: #1501873
Change-Id: Ic94625d5a968f554af70c274b2b2c20ab64e2487"
7335dbdabe6cd2d558f209b2349491efc376352e,2015-10-20 01:52:13+00:00,"Validate ethertype for icmp protocols

This patch will add the validation function to make sure security_group
rule is not created when ethertype is IPv4 and protocol is icmpv6.

Closes-Bug: #1505832
Depends-On: Ia1a5342a1d568cb1a015e1b7acecf38b8d1f46e1

Co-Authored By: Matt Dorn <madorn@gmail.com>

Change-Id: I4a15935c564aaa48555ed08f6da51113787ecb73"
8a51ddf3be6445a49c53b7a9ef80123cf0e7c033,2015-10-20 12:13:26+03:00,"DVR: Notify specific agent when update floatingip

The L3 agent was determined when update floatingip.
So notify the specific agent rather than notify all agents.
This will save some RPC resources. This is only for DVR routers.
Legacy and HA routers notify only the relevant agents.

This reproposes commit 52e91f48f2327b47f126893f9cb12f153380a9a6
which was reverted by commit a2f7e0343a147a30a637af4e1cb9a866f557e87d
because of Ironic gate failures.
Now the patch preserves original behavior for legacy routers and
should not break Ironic tests.

Partial-Bug: #1486828
Related-Bug: #1507602
Change-Id: I4ef7a69ad033b979ea0e29620a4febfe5e0c30dd"
07aa19b2236976229971b13e9ece80b862d298b2,2015-10-20 04:47:22-07:00,"Remove SUPPORTED_AGENT_TYPES for l2pop

In a world where agents can be out of tree,
this check seems no longer necessary.

As part of networking-vsphere project which runs ovsvapp agent
on each ESXi host inside service VM, which talk to neutron-server
having l2pop enabled in a multi-hypervisor mode like KVM, ESXi.
The tunnels are not getting established between KVM compute node
and ESXi host. The l2pop mech_driver needs to embrace ovsvapp agent
to form the tunnels.

Hence, this patch-set addresses the issue by removing the
SUPPORTED_AGENT_TYPES for l2pop.

Closes-Bug: #1507684
Change-Id: I93ca5736e4aad41b851d2b7b082b4bb69d1632fb"
24acc41b9314729a0fbbc88b1f8cb19a331a3dc7,2015-10-20 09:47:41-04:00,"Set ip_nonlocal_bind in namespace if it exists

Somewhere in the 3.19 kernel timeframe ip_nonlocal_bind was
changed to be a per-namespace attribute. To be backwards
compatible we need to try that first, then fall-back to
setting the one in the root namespace if it fails.

Closes-Bug: #1507078
Change-Id: I018e800bc8d4e85d067aaae865c9b04bf030c980"
51f6b2e1c9c2f5f5106b9ae8316e57750f09d7c9,2015-10-20 17:36:39+02:00,"Properly handle segmentation_id in OVS agent

The segmentation_id of a OVS VLAN can be None, but a recent change
assumed that it was always an integer. It highlighted the fact that we
try to store None in the OVS database, which got stored as a string.
This fixes the storage, and handles loading the value while keeping
compatibility.

Change-Id: I6e7df1406c90ddde254467bb87ff1507a4caaadd
Closes-Bug: #1494281"
a7dc528c1860f6a325a36bb7c633c60b635fc9a6,2015-10-20 12:40:38-04:00,"Set security group provider rule for icmpv6 RA in DVR

Security group provider rules for RA is set for the VM ports
when a router interface is added or updated after the VM
instance is created.

In the case of DVR Routers the security group provider rule
to allow the RA packets to flow through the VM port input
chain was missing and so the VM was not able to get a
SLAAC/DHCP address when associated with a DVR Router.

This fix will add the security group rule to the VM port input
chain to allow the RA packets to flow into the VM and hence
the VM will obtain an IP address assigned by the Router.

Closes-Bug: #1501969

Change-Id: Ib0b3499d9c880fe1462734b2d4092debf4819509"
54a590d3419dbb41fc0a9bf81ec014440ba37054,2015-10-21 07:26:24+00:00,"Include alembic versions directory to the package

If package is built without access to git metadata, all the migration
scripts are not included in the build. We need to explicitly specify to
package the scripts.

Change-Id: I9a2acad13271863ee94de63c2404e8697ea70601
Closes-Bug: #1505628"
b8f17bac76171993d6d276c51264fea8becb6136,2015-10-21 10:06:50+00:00,"Don't remove ip addresses if not master

When setting --admin-state-up=False on an HA router with a gateway set,
standby nodes don't have any ip addresses set on the devices (although
the devices themselves are present). In such cases, Neutron should not
try to un-set those ip addresses before deleting the device itself.

Closes-bug: #1505203
Change-Id: I5df04b2ed1dc08286f6c467111c61c7f97643d66"
a7b976e6529b744dd01f26f9fa7769518fe7b20b,2015-10-21 13:49:16+03:00,"Deepcopy port dict in dhcp rpc handler

Added deepcopy of port dict in dhcp rpc handler to prevent operating on
changed dict in case of raising retry request.

Change-Id: Ie1816fe819ba77061e71bd61de2fd9ebe4574cef
Related-Bug: #1494351"
bd0e8af34ceb247273eb666681051228e458b954,2015-10-21 12:53:14+02:00,"Remove deprecated namespace deletion options

dhcp/router_delete_namespaces[1] options have been defined as a
workaround to an iproute2 limitation[1] corrected 2 years ago.

That's why the change removes these options after their deprecation
in Liberty.

[1] in neutron.agent.dhcp/l3.config

DocImpact
Closes-Bug: #1508189
Related-Bug: #1418079
Change-Id: I2a879213c3b095a007a4531f430a33cea9fdf1bd"
83c9578fcc5d06b634d48e0e186bebd60a60322e,2015-10-21 13:41:19+02:00,"Remove deprecated sriov agent_required option

The SR-IOV option agent_required has been deprecated in Liberty.

This change removes it and from now agents are mandatory for SR-IOV
mechanism in order to support extended features: QoS, port security.

DocImpact
Closes-Bug: #1508182
Related-Bug: #1488807
Change-Id: I4e6497da6b287531a211084a5208028c84112a83"
204eb2af1752cbdd4d1bfc42aa4d61debdeb7551,2015-10-21 09:53:06-04:00,"Fix l2pop regression

Patch https://review.openstack.org/#/c/236970/ introduced an issue
where get_agent_by_host can return a random host (Including L3,
DHCP or metadata agents), not only L2 agents. The caller then
tries to get tunneling_ip, which might not exist on the returned
agent, causing l2pop code to bail out with a WARNING:
'Unable to retrieve the agent ip...'.

The issue was found by manual introspection of the code, and
verified by modifying the l2pop fullstack test to register L3
agents. Both a unit test was added, as well as modifying the
fullstack connectivity test to register L3 agents if l2pop
is enabled.

The code will now check for agents with a tunneling_ip key
in their configurations dict, which is required for l2pop
to work correctly, essentially a form of duck typing.

Change-Id: Ib3072966140b7f6ca954d7847ad9835aa1191998
Closes-Bug: #1508205"
678b431ba4be8ccf6e505b3dd8fb8e9465b82f83,2015-10-21 17:55:25+04:00,"Spawn dedicated rpc workers for state reports queue

By default spawn one additional rpc worker to process
state report queue.
State report queue will also be processed by regular
rpc workers, but in case these workers are busy with
processing heavy requests, state reports queue will
automatically be consumed by dedicated rpc workers.

This change applies to ML2 plugin only.
Other plugins should implement start_rpc_state_reports_listener
to enable additional rpc workers.

Change-Id: I5f8df6a478f7c82382049274b34b07109eeafbdb
Closes-Bug: #1505217"
033bc5a45ab5aa0661e1b46049b990adc29c9df5,2015-10-21 10:23:50-04:00,"Fix error code when L3 HA + DVR router is created or updated

Change-Id: I1b9a07aaf6957f062cd8632c7ca8b9d87c4afe20
Closes-Bug: #1505382"
eef7990e8a51bce7543d0bf602324051394ebccc,2015-10-22 09:30:12+00:00,"DVR: notify specific agent when deleting floating ip

In DVR case we only need to notify the l3 agent on compute node
where associated fixed port is located.

Closes-Bug: #1486828
Change-Id: I644238ca295c4eb6df75a99a8ef6143a801b27cb"
c69407e676c483820f5c505d8d6d7923b0461819,2015-10-22 18:35:21+09:00,"Fix _restore_local_vlan_map race

Local vlan mappings provisioned by _restore_local_vlan_map
might not be cleaned up properly if the corresponding ports are
removed before we enter the main loop.

This commit fixes the problem by making _restore_local_vlan_map
just record local vlan IDs and leave the rest of provisioning logic
to the main loop.

Closes-Bug: #1507776
Change-Id: I84ff6684ae3fda7d839c14b1a7382871f45ce610"
31bdb9bffd9d9d979f53f954d165526438cf0c57,2015-10-22 18:14:14+03:00,"Adds base in-tree functional testing of the dhcp agent (OVS)

Adds some utility methods and a couple of base test cases that
can be added to. These first tests exercise the ovs driver (dnsmasq)
and so the code is organised accordingly - OVS specific test cases
are defined in a DHCPAgentOVSTestFramework

Partial-Bug: #1469065
Co-Authored-By: Cedric Brandily <zzelle@gmail.com>
Co-Authored-By: Sergey Belous <sbelous@mirantis.com>

Change-Id: Ic9d5a2f2b8014e4d81f5e5f6fa58b119a86de075"
8022adb7342b09886f53c91c12d0b37986fbf35c,2015-10-22 17:22:28+02:00,"Mark for removal deadcode in neutron.common.utils

Methods:
 * read_cached_file(filename, cache_info, reload_func=None)
 * find_config_file(options, config_file)
 * get_keystone_url(conf)
are not used withing neutron projects.

Change-Id: Iba3325103f5c24c1822781382f4c8864eb2921c5
Closes-bug: #1508430"
f3dece785e591ea68ed5bbecbbfa4ac3a29fbc8f,2015-10-22 19:27:10+03:00,"get_device_by_ip: don't fail if device was deleted

The function gets a list of all the devices that exists on the machine,
and then iterates on them one at a time in order to find the correct
device which holds the ip specified. However, if one of the devices was
in the mean time deleted, the code will raise an Exception. In the ovs
agent's case, this will cause it to not run at all (requiring a
restart).

Also, changes to a few tests of LinuxBridge were made because
linuxbridge doesn't check that cfg.CONF.VXLAN.local_ip is not empty
before using it (a bug, surely). Since it's out of scope of this patch
to fix this, workarounds were implemented to make sure the tests ignore
the option instead.

Closes-Bug: #1506503
Change-Id: Iad285d7c763b0e8e8f877c6892aadb0043e9a186"
0a300a2277a583fe28b00db2571982928c752554,2015-10-22 14:45:42-05:00,"Better tolerate deleted OVS ports in OVS agent

This change will not force a resync in the case where a virtual machine is
deleted, and therefore its OVS port deleted, in between the time an RPC
call was made to get the devices and where we make the call to correlate
those devices to vif ports.

Change-Id: Ie55eb69ad7ee177f0cf8ee8fc7fc585fbd0d4a22
Closes-Bug: #1499488"
cb465d40f59bfbc109204dc16259c0e4ce1c903a,2015-10-22 12:54:55-07:00,"Delete fipnamespace when external net removed on DVR

The fipnamespace is associated with an external network
on a given node. In the case of DVR there is just one
single FIP namespace for a given node.

We have seen some race conditions in the agent for creation
and deletion of the fip namespace. See the bug report for
details on the failure.

So in order to address this race condition and make the
code more stable, we will be cleaning up the fip namespace
only when an external network is removed.

The server will be sending a rpc notification message to
the agent to cleanup the fip namespace when the external
net is removed.

This patch address the above mentioned issue by not constantly
deleting and creating the fip namespace.

Closes-Bug: #1501873
Change-Id: I86869f66d4afffad7db09942578b1a456a9bd418"
416c76bc6e01ef433506e4aa4ebd7c76b57acc51,2015-10-22 18:23:48-04:00,"Support migrating of legacy routers to HA and back

This patch adds support for migration of legacy routers to HA and
vice-versa. This patch also:

1. Reverts I4171ab481e3943e0110bd9a300d965bbebe44871, which was used to
   disable such migrations until support was inserted to the codebase.
2. Adds an exception to indicate that such migrations are only available
   on routers that have their admin_state_up set to False.

Closes-Bug: #1365426
DocImpact (Handled in patch 233695)
Change-Id: Ie92f8033f47e1bf9ba6310373b3bfc9833317580"
30b121dfa4d8542665b2209d21ece805d8957aa5,2015-10-23 12:08:31+03:00,"Ensure l3 agent receives notification about added router

Currently router_added (and other) notifications are sent
to agents with an RPC cast() method which does not ensure that
the message is actually delivered to the recipient.
If the message is lost (due to instability of messaging system
in some failover scenarios for example) neither server nor agent
will be aware of that and router will be ""lost"" till next agent
resync. Resync will only happen in case of errors on agent side
or restart.
The fix makes server use call() to notify agents about added routers
thus ensuring no routers will be lost.

This also unifies reschedule_router() method to avoid code duplication
between legacy and dvr agent schedulers.

Closes-Bug: #1482630
Related-Bug #1404743
Change-Id: Id08764ba837d8f47a28649d081a5876797fe369e"
d3b191984cfe2b24f16bd57c1b4bb8c555ee10e0,2015-10-23 12:34:08+03:00,"DVR: only notify needed agents on new VM port creation

When a new VM which should be serviced by a DVR router appears
on compute host, this router is scheduled to that host and
notification is sent. Before the patch it was a broad notification
while really we only need to notify agent on target host.
This should decrease the load on neutron server at scale.

Closes-Bug: #1486795
Change-Id: Id48b6f6a71530c4f6092d2a07b2db1a5cd300c05"
0f471be1de5aadc935c3b48625193dc23360e467,2015-10-26 10:03:39+09:00,"Optimize interface_exists_on_bridge

Currently interface_exists_on_bridge[1] lists all files in a folder and
searchs for the file associated to the interface.

This change proposes to look for the file existence directly.

[1] neutron.plugins.ml2.drivers.linuxbridge.agent.linuxbridge_neutron_agent

Closes-Bug: #1509890
Change-Id: I23cd1edc92912b35bdc23ba0af2318b86f2cfd48"
75c881a748941bc6637f3eb10dd5828f32ec6830,2015-10-26 10:08:29+09:00,"Optimize get_bridge_for_tap_device

Currently get_bridge_for_tap_device[1] iterates over all neutron bridges
and their interfaces.

This change proposes to deduce interface bridge from:

 /sys/class/net/%(interface)s/brif/bridge

which is a symlink to bridge interface path to improve performance.

[1] neutron.plugins.ml2.drivers.linuxbridge.agent.linuxbridge_neutron_agent

Closes-Bug: #1508789
Change-Id: Ia40cd81f47ff082a90d17f58514942ec50553241"
3aae4bd345a57a5692e1d5c9824988e666cb737c,2015-10-26 15:41:06+01:00,"Replace utils.exec for IpNeighComm LinuxBridge drv

Replace all execution of ""ip neigh"" command using
utils.exec for ip_lib.IpNeighCommand.(add,delete)
in LinuxBridge driver

Changed multiple which for one and fixed indentations
Closes-Bug: #1311019

Change-Id: I1389941b7df11c089429f1de61eac6d7ea5d0e54"
e61e15de992b8d34e8ab826244d66b9fc48d518e,2015-10-27 09:09:23+00:00,"Log the exception in linuxbridge_neutron_agent as exception

The log here should be logged as exception. 1) It is more readable.
2) It keeps consistent with the action of its sibling module,
ovs_neutron_agent.

Change-Id: Idf11a617369cbee0dc23c8e56ae9475bb41dcc02
Closes-bug: #1508270"
b9cebd18cfc1c4fa0a221d4d2518f7f94d6fc938,2015-10-28 03:17:13+00:00,"DHCP agent: log when reloading allocations for a new VM port

This will help us to see more clearly if failing DHCP for a new VM -
as seen in failures such as the following traceback from [1] - is
caused by DHCP configuration being too slow, as suggested by the
referenced bug.

Traceback (most recent call last):
  File ""/home/aqua/tempest/tempest/test.py"", line 125, in wrapper
    return f(self, *func_args, **func_kwargs)
  File ""/home/aqua/tempest/tempest/scenario/test_server_basic_ops_38.py"", line 105, in test_server_basicops
    self.verify_ssh()
  File ""/home/aqua/tempest/tempest/scenario/test_server_basic_ops_38.py"", line 95, in verify_ssh
    private_key=self.keypair['private_key'])
  File ""/home/aqua/tempest/tempest/scenario/manager.py"", line 310, in get_remote_client
    linux_client.validate_authentication()
  File ""/home/aqua/tempest/tempest/common/utils/linux/remote_client.py"", line 55, in validate_authentication
    self.ssh_client.test_connection_auth()
  File ""/home/aqua/tempest/tempest/common/ssh.py"", line 150, in test_connection_auth
    connection = self._get_ssh_connection()
  File ""/home/aqua/tempest/tempest/common/ssh.py"", line 87, in _get_ssh_connection
    password=self.password)
tempest.exceptions.SSHTimeout: Connection to the 172.17.205.21 via SSH timed out.
User: cirros, Password: None

[1] http://logs.openstack.org/39/194939/19/check/gate-grenade-dsvm-neutron/82a7e58/

Change-Id: I5d77762bf8d4caa2e6f8b3527a30bf80bac62085
Related-Bug: #1453350"
ce3a31faff35e6f177bd747cf8427a9f00d05af0,2015-10-28 05:57:43-04:00,"Don't update metadata_proxy if metadata is not enabled

When enable_metadata_proxy is false, the agent instance will
not have metadata_driver. And agent should avoid using it.

Change-Id: Ia18dc5dea23de49b97c8f225532531eb9232fb51
Closes-Bug: #1510399"
70b3d383ac2a0d7d339c551065b9b378a4b9b914,2015-10-28 11:01:28-05:00,"Log end of router updates for PD and delete branches

These execution branches call continue directly without
logging the end of the router update.  This leads to
confusion about when the last router update finishes if
it is a delete or a PD update.

Change-Id: Id82e7374aa9336e0adea3042238f30f716208373
Signed-off-by: Ryan Moats <rmoats@us.ibm.com>
Closes-bug: #1511004"
d5faf0eb76b5724b8ba21d09c679b12314cffee4,2015-10-29 22:52:41+09:00,"Decompose ML2 mechanism driver for OVSvApp

This change removes OVSvApp ML2 mechanism driver after its definition in
networking-vsphere.

DocImpact
Closes-Bug: #1511198
Depends-On: Ib7b2852f3d4dc35a837a425366c5bf0135725a74
Change-Id: I5e310f0596f3ea206800ac9d4daca1c292a234f1"
d029fc805e4907feeac088b792e98e89a7c72d2c,2015-10-29 17:07:22-04:00,"Add text for deprecated parameter

Add information for ""max_fixed_ips_per_port"" option that the
option is deprecated and will be removed in the N release.

Co-Authored-By: Takanori Miyagishi <miyagishi.t@jp.fujitsu.com>

Change-Id: I9aa876c371e7b6cff2068dc641c5e4b5ebda8001
Closes-Bug: #1503088"
82a2d72cbea616482a49c3fff7eff3fe1e5f8a05,2015-10-30 06:37:45+00:00,"Decompose ML2 mechanism driver for Mellanox

This change removes Mellanox ML2 mechanism driver after its definition in
networking-mlnx.

DocImpact
Closes-Bug: #1511234
Change-Id: Ie48ac22d8e7477c22ad1d48aa0c44153a01eb242"
26f008296bc11e927a58fe7bfe9b3ac6d1bb5365,2015-11-01 00:13:10+01:00,"Remove deprecated nova_* options

Neutron nova_* options have been deprecated in Kilo in favour of options
in [nova] section.

This change removes these options in order to simplify code, clarify
configuration and avoid a warning in unittests.

DocImpact
UpgradeImpact
Closes-Bug: #1509092
Related-Bug: #1403686
Change-Id: I950f72ad7d7d41cfa006f8c7105934301cd56faa"
87aa03567bc6fe6aca5f963c27566943b07195f3,2015-11-02 12:29:45+00:00,"Replace internal oslo_policy mock with public fixture

This replaces a mock on an internal oslo_policy http class
with a public fixture they provide.

Related-Bug: #1503890
Change-Id: Ifa445b699f71379c7922960375a5e1d25f873f91"
f144a283ea4f79714b8df288e9eb652e1af7f48d,2015-11-02 16:13:42+03:00,"Per-branch HEAD files for conflict management

We have pep8 check for validation revisions, but it allows
outdated changes go into merge queue. To prevent this added
CONTRACT_HEAD, EXPAND_HEAD files.

Closes-bug: #1505701

Change-Id: Ie4b727e55a0b1ecb12e915a0037094a928d8f975"
600a0db48a766437a91b427da8eeb3f066963db2,2015-11-02 17:16:50+03:00,"Fix incorrect passing port dict in pluggable IPAM

_ipam_allocate_ips expects to receive port dict as a third argument, but
'changes' were passed instead.

This issue affects only third-party vendors who implement own IPAM
driver with custom AddressRequestFactory and uses port dict in it.

Updated arguments passed to _ipam_allocate_ips to include port dict as a
third argument.

Change-Id: I25eb86f46e5412cfacad9a751a94f7720f1a7bd0
Closes-Bug: #1511707"
c4e0574da1c7f30f9a153e01e7793926454cf2c7,2015-11-02 14:44:21+00:00,"Update neutron-debug to use stevedore aliases

Updating neutron-debug as it is importing interface driver classes
directly and not using the load_driver_interface method.
Also adds unit tests for the neutron-debug tool.

Change-Id: Icf095b2182225e63e85d849d83c2cb36b8a39217
Closes-Bug: #1504536"
c6476838cc7d94982f3d6aea88926679cf40d839,2015-11-03 07:31:54-08:00,"Make string representation of DictModel generic

The previous version was specific to a port dict and would
fail if str() was called on other models. This iterates over
and logs all values of the dict instead so it works under any
dictionary.

Change-Id: I630b39338e4e67080e100a9f32c9b6e341a93472
Closes-Bug: #1512753"
d5f3d59daf38035ced725be55931cb89ec1ccbcf,2015-11-03 23:20:57+01:00,"Optimize delete_csnat_router_interface_ports db query

Currently delete_csnat_router_interface_ports provides an iterator as
filter to core_plugin.get_ports which is used in a SQL IN argument.
SQLAlchemy is able to avoid some db queries when the IN argument is
empty BUT not when the argument is an empty iterator and raises the
warning:

 SAWarning: The IN-predicate on ""ports.id"" was invoked with an empty
 sequence. This results in a contradiction, which nonetheless can be
 expensive to evaluate. Consider alternative strategies for improved
 performance.

This change replaces the iterator by a list in order to optimize db
queries when the filter is empty.

Closes-Bug: #1503852
Change-Id: I4f53433d688dfa020927118a18020b1a6aa55517"
4e4706e0f5652fde452aca3c69a3a08e62513e2f,2015-11-04 07:03:12+01:00,"Ensure to decode bytes or fail

The commit 048316e98114145ad19285cdeedd0040b59a66f8 introduces the
pattern:

  if isinstance(line, bytes):
    try:
      line = line.decode(encoding='utf-8')
    except UnicodeError:
      pass
  # concat line with a string

which is not working in PY3K if an UnicodeError is raised because line
is (silently) not decoded and concatened to a string.

This change ensures to return a text object or to raise an error.

Closes-Bug: #1503415
Blueprint: neutron-python3
Change-Id: I16b8013f33aa3efad65be8040d3210120e047bbd"
9c72bac0ea37971b2d5430246295c5e8b859b4ed,2015-11-04 10:05:31+00:00,"Change function call order in ovs_neutron_agent.

Change function call order in ovs_neutron_agent during the
creation or modification of a port, in order to fulfill the
VLAN OVS tag information in the ""port"" register before calling
the SG agent. This information is needed in some SG agent
implementations.

Closes-Bug: #1512636
Change-Id: I9813aca6443ac402b10b4cebf8be42416628b050"
ae3f03396d1b6fe09d60b5606b75a02a42c5ae3f,2015-11-04 15:46:31+01:00,"Switch to using neutron.common.utils:replace_file()

neutron.agent.linux.utils:replace_file() and
neutron.common.utils:replace_file() have same functionality.

This is the final patch in a series of 4 patches.
It marks neutron.agent.linux.utils:replace_file() for removal.

Closes-bug: #1504477
Depends-On: Id0eb6829ce75df5ffccc354adfe2f0ccb19ed9fd
Depends-On: I4352b7f1d6a55e47bbff4f3a1fcf136ed645dcbe
Change-Id: I26b0a4d6105420a2c242b81a4cd58e0adef4cbec"
64e25d0299aecc1d6f6d23d59f0993a9986a1544,2015-11-05 10:29:02+00:00,"Remove default=None for configuration bindings

The default value for a configuration variable is None. There is
no need to specifically set these as None.

The line where this is done is:
https://github.com/openstack/oslo.config/blob/master/oslo_config/cfg.py#L684

TrivialFix

Change-Id: Iedf29b13d69ea9f2eb4d5aa746d7c1da8d83bafc"
077e869fda6b8ba271dd8f791923a67375d1a359,2015-11-06 13:27:37+01:00,"Deprecate new= argument from create_connection

It's not used since the time we switched to oslo.messaging (Juno), it's
time to deprecate and eventually remove it.

Closes-Bug: #1506492
Change-Id: I57b0229c2b6028796cd10bbbfc9b166cf8a6dab0"
cb712c5a9ee2717f5d34b00a420529b842db90c7,2015-11-06 14:16:32+00:00,"Make '*' the default ml2 flat_networks configuration

Update the ml2 flat_networks configuration to set '*' as the
default because that has been effectively the default behavior due
to a bug with the empty list.

Also, fix the empty list configuration for disabling flat networks.

DocImpact
UpgradeImpact

Change-Id: I13eb22afd7c0d011154b58a1bd218fd4fa82a8d9
Closes-bug: #1437745
Co-Authored-By: Martin Hickey <martin.hickey@ie.ibm.com>"
b572376f3f5f4d7d36d46126ea14d48925ae09ef,2015-11-08 03:08:14+09:00,"Make command log in neutron utils.execute() a single line

command execution log from neutron.agent.linux.utils.execute()
consists of multiple lines, and the first line has less information
and it is hard to analyze logs.

Closes-Bug: #1460379
Change-Id: Idca38f26321394596245c9c59b8a9a78c7190423"
225663888e71d44e9732951f515da925b8799b74,2015-11-07 14:14:08-05:00,"Fix notification driver package

In oslo.messaging change:
Ifb96c2ae9868426cac2700bf4917c27c02c90b15

the private package for the messaging driver was changed
to a public package. So we should fix our reference here
in our setup.cfg

Closes-Bug: #1513630

Change-Id: I6b066f4f1b6c6485cb67ca5f8a2a17359521c264"
468de2d767b6cc984fa4fc3b150721368f889a77,2015-11-08 19:42:56-05:00,"More instructions for neutron-db-manage revision --autogenerate

More detailed instructions for --autogenerate, including how to rely
less on devstack. Also some tweaks to scripts and requirements to
simplify the process.

Closes-Bug: #1197570

Change-Id: I97043b30a8df7408a73af38c6a015fc0dcf82571"
313b6a4d5ce98251ad56e44e2eaaf5490dc27a51,2015-11-09 10:27:54+08:00,"Fix misuse of log marker functions in neutron

some log marker functions misuse in neutron,
ref http://docs.openstack.org/developer/oslo.i18n/guidelines.html
and http://docs.openstack.org/developer/oslo.i18n/usage.html

Change-Id: Ia7a539f9414c4aa9666fa62522083ef48950e093
Closes-Bug: #1514193"
c9abc856eaa6dc4358867e13d6bf57f60319374f,2015-11-09 19:37:03+01:00,"Reduce duplicated code in test_linuxbridge_neutron_agent

This change defines and uses get_linuxbridge_manager method which
mocks some methods in order to instantiate and returns a
LinuxBridgeManager instance, this method allows to remove some
duplicated code from test_linuxbridge_neutron_agent.

Partial-Bug: #1514548
Change-Id: Ib54a01406938b4937af2af5fca7a71b5758d4482"
459980f04a62e2ef15a2b8c91ac6c8d6ee484167,2015-11-09 22:41:44+01:00,"Move LinuxBridge related features to bridge_lib

This change moves from linuxbridge agent[1] to bridge_lib[2] bridge only
related features and adds functional tests.

[1] neutron.plugins.ml2.drivers.linuxbridge.agent.linuxbridge_neutron_agent
[2] neutron.agent.linux.bridge_lib

Partial-Bug: #1514548
Change-Id: Ieccb8f77fc833467a166557e227023f5c2a50d1b"
d3da15d62d4270dfb5a20e8d4051c7e17c8c2c9b,2015-11-09 22:41:56+01:00,"Use get_interface_bridge instead of get_bridge_for_tap_device

bridge_lib defines get_interface_bridge which returns the bridge on
which an interface is connected (or None) where LB L2-agent[1] returns
it only if the bridge is a bridge managed by LB L2-agent.

According to get_bridge_for_tap_device 1st usage:

  if bridge_lib.is_bridged_interface(interface):
     bridge = self.get_bridge_for_tap_device(interface)
     bridge.delif(interface)

The code crashs if interface is owned by a non-LB-agent bridge because
the condition is verified but bridge is None.

[1] neutron.plugins.ml2.drivers.linuxbridge.agent.linuxbridge_neutron_agent

Partial-Bug: #1514548
Change-Id: If6dba1197b3f08ecc0ac01fcf085c8268f81169f"
63978327e766ee4d62f024394e7d39e0a0351bfe,2015-11-09 15:31:45-08:00,"Update internal snat port prefix for multiple IPv6 subnets

In neutron when multiple IPv6 subnets on the same
network are added to a router interface, the router
interface port is updated with multiple fixed_ips rather
than creating a new port. In the case of IPv4 subnets
a new port is created for every added interface.

For dvr routers there are internal snat ports that are
created for every router interface that is added to a
router. So when multiple IPv6 subnets on the same network
was added to a dvr router, the internal snat ports were not
appended with the IPv6 prefix properly.

An error log message was thrown for the SNAT port not
matching the given internal port for the IPv6 address.

This patch will address this issue when IPv6 subnets are
added or removed from the dvr router that are on the
same network.

Partial-Bug: #1493524

Change-Id: I777d95d9a148fc6b6bad4538f3a1156ae5052bf6"
6fcc62b71bd4a7aadca38a294708f70670a6916b,2015-11-10 16:09:52+09:00,"Remove MidonetInterfaceDriver

Now it lives in networking-midonet repository.

Closes-Bug: #1510826
Depends-On: I0a4d19ddeddfde2319dcbe24665a24d371625b10
Related-blueprint: core-vendor-decomposition
Change-Id: Ifd18ee1703541d04f1a4717a8b0b8e6dc61a2f4e"
4341a4faeed937d014e95a94b77844d5a835acbe,2015-11-10 06:24:37-05:00,"Don't snat traffic between fixed IPs behind same router

This fixes a bug where an iptables rule to not snat traffic between
fixed IPs is only being added if enable_snat=true. We should add
this rule no matter what the value is for enable_snat.

Without this patch, current code will break such use case:
2 fixed IPs behind same router both have floatingip associated. And
the router has enable_snat=false. When fixed IP A want to ping
fixed IP B, fixed IP A will get the reply from fixed IP B's floating
IP.

More details could be found at bug description.

Change-Id: I322e8d454ef1d529ceda541fb5fe577cd70b412f
Closes-bug: #1505781"
d6380cca427532d1af13c753ec0e9976276f9403,2015-11-10 05:26:42-08:00,"Adding security-groups unittests

This patch adds two new security-groups unittests:
 - test_create_port_with_multiple_security_groups
 - test_create_port_with_no_security_groups

Closes-Bug: #1514397

Change-Id: Icebd6737f0e7997b0cbf01526b0c7b66376fbf44"
a29fe4a30a644152443bc0718557af6a74a6bcea,2015-11-10 08:34:42-05:00,"Final decomposition of opendaylight driver

It's all in networking-odl now.

Closes-Bug: #1514823

Depends-On: Ibc6fa46b9bae73c045bec71894ebe3cad570edcc

Change-Id: I76ae1a5078e4a47ee901150d4832f06c1d1ab093"
99573f62d1fc79a4308784ab2c799d836b7a3d74,2015-11-10 20:05:21+00:00,"Add call to pluggable IPAM from ml2 delete_subnet

ml2 plugin overrides delete_subnet and do not call super(),
so pluggable IPAM action defined in db_base_plugin_v2 are not called.
As a result subnets can not be deleted from IPAM driver if ml2 plugin
is used.

Added ipam.delete_subnet call into ml2 delete_subnet.
Patch includes UT to verify IPAM driver is called on subnet
allocation and deallocation.
Test class is inherited from TestMl2SubnetsV2, so all SubnetV2 tests are
additionally executed for ml2 plugin with reference IPAM driver.

Closes-Bug: #1510653

Change-Id: I2b7ddfe70a1275a141af38e18151e1fc000e2682"
7977041fa8558ff3651f26b5f1bdbb6806dbb4b8,2015-11-11 08:00:22+09:00,"configure_for_func_testing.sh: Fix arguments for get_packages

Closes-Bug: #1515035
Change-Id: Ie14e0acd67921cb4dc16a4e25a19d23b78345076"
e7270d9505fe09ec6d687e7796a814bf883b5416,2015-11-11 05:16:53+00:00,"Revert ""OVS agent reacts to events instead of polling""

This might be associated to manifestation of bug #1514935

This reverts commit 1992d52d63dc32c63faa5a3f482d5b8ebe925a77.

Closes-Bug: #1514935
Change-Id: If01cc87b6735e1bc039f99c4c6121e7c5ce547d0"
cc2d30eba4f7b2d0676dd308c9c9fe6328e44447,2015-11-11 10:14:23+00:00,"Replace get_all_neutron_bridges by get_deletable_bridges

Currently LinuxBridge L2-agent[1] defines get_all_neutron_bridges which
lists all bridges managed by the agent including user-defined ones BUT
this method is only used by neutron-linuxbridge-cleanup[2] in order to
remove empty non-user-defined bridges returned get_all_neutron_bridges.

This change replaces this method by get_deletable_bridges which returns
bridges managed by LB agent which are ""deletable"" (ie: non user-defined).
This allows to simplify code and move the computation of ""deletable""
bridges to LB agent code.

[1] neutron.plugins.ml2.drivers.linuxbridge.agent.linuxbridge_neutron_agent
[2] neutron.cmd.linuxbridge_cleanup

Partial-Bug: #1514548
Change-Id: I2f8a9a6982ce0ce77187ae4b7a58b3ef752aab34"
d24df91ebfe1a944ea087dce45c0257d11d7df51,2015-11-11 15:15:03+01:00,"Don't use duplicate filter names for functional testing

They are not supported by Python 3.x configparser module (you get
DuplicateOptionError if duplicate names are present).

This makes tests relying on rootwrap daemon to get stuck, because the daemon
fails to spawn, while we wait for results from the process.

Change-Id: I1628bb87b235a6b4bac53afda37402e986520f39
Related-Bug: #1515118"
da3de52c507544c84463a037acac3b2b24a37fe0,2015-11-11 07:22:31-07:00,"Fix dvr_local_router.floating_ip_added_dist failure after agent restart

If DVR is enabled and an l3-agent is restarted, associating a floatingip
to an existing vm on the compute node where the l3-agent was restarted
will fail.  This commit fixes the floating_ip_added_dist method in
dvr_local_router.py so that self.rtr_fip_subnet will be created if
it is 'None' prior to the attempt to call the get_name() method on
it.

Change-Id: I860ee3522275f62f393e66853e53ef387598983d
CLoses-Bug: #1515341"
ce814a1c29482e6e2601f0101ff3473a1afee35a,2015-11-11 15:25:45+01:00,"sriov: add extensions option to configuration file

The agent supports l2 agent extension manager, so the option should be
there.

Closes-Bug: #1515274
Change-Id: I4376c7422dba058c11bfaf10046bd97b17592ce3"
0c8121ee68085d67a7b865b5b25c4b3880defc89,2015-11-11 08:11:01-08:00,"More graceful ovs-agent restart

When the neutron server is down/busy the agent is not able to get any
port info. After the agent restarts, it will not install any new flow.
Cleaning the existing flows will break all networking until the agent
succeeds to sync with the neturon server.

This patch ensures the agent cleans the stale flows only after it
succeeds to sync with the neturon server.

Change-Id: I763fc06a73b6d2f010da65e74241182636dda44d
Closes-bug: #1515075"
3b2bd407b25addc7c11c46e6a20a313bbbdf2332,2015-11-11 10:22:12-08:00,"DVR: remove redundant check

Patch https://review.openstack.org/#/c/225319 added a redundant
check.
This cleans that up.

Change-Id: I3b66872d0d3bd1bce33b1476376df275a8398bb5"
a3154b03ac60df586bd8fd67f03c20327f2dde41,2015-11-11 20:18:14+01:00,"Revert ""Remove TEMPEST_CONFIG_DIR in the api tox env""

This reverts commit a32e31a624cf5190ed267effed8f7db2c9919949.

We should be able to merge the revert back once tox project fixes the
bug* on their side.

* https://bitbucket.org/hpk42/tox/issues/285/tox-220-breaks-some-toxini-config-files

Change-Id: Ic1f5391c687b2683cbaab210c543022aa1f26e83
Related-Bug: #1515335"
a32e31a624cf5190ed267effed8f7db2c9919949,2015-11-11 19:18:45+00:00,"Remove TEMPEST_CONFIG_DIR in the api tox env

Setting TEMPEST_CONFIG_DIR in tox.ini is breaking the gate,
probably because of a tox bug [1].
Removing the line to unblock the gate. This implies that
for local execution of the tests TEMPEST_CONFIG_DIR
should be set manually.

[1] https://bitbucket.org/hpk42/tox/issues/285/tox-220-breaks-some-toxini-config-files

Change-Id: If3742b6eabe295a5aaeb4901c55909a70c451698
Closes-bug: #1515335"
f3dccff5d87160e45be9e32f66dc3f800847c8bc,2015-11-11 12:32:12-08:00,"Clarify that RFE bug reports should not have an importance set

Filling the Importance field [1] with anything other than Wishlist for RFE bug reports
is wrong. People confuse priority with Severity (which is what the importance field is
about), and that can cause us some grief.

Therefore let's state clearly that from now on, RFE bug reports will be marked 'Wishlist'
only.

[1] https://wiki.openstack.org/wiki/Bugs#Importance

Change-Id: I4f12301e5d6b9b754efd456f0fb9da4e64555373"
ae1fb6e87225900bedbc68d014369a1adaa4fcab,2015-11-12 22:50:57+09:00,"Use assertFalse(observed) instead of assertEqual(False, observed)

The patch also improves the way in which the assertTrue (and
similarly assertFalse) are done,

We should use assertFalse not assertEqual.

Co-Authored-By: Gary Kotton <gkotton@vmware.com>

Closes-Bug: #1503074

Change-Id: I5f527ddf2ca522cdf101de2482d59f059eca010f"
497932466cd33c0bfb2d95693c6bc6ef4690898d,2015-11-12 22:22:28+01:00,"Require tox >= 2.0

We use passenv in the file, and as per [1], it's introduced in tox 2.0.

[1] https://testrun.org/tox/latest/config.html#confval-passenv=SPACE-SEPARATED-GLOBNAMES

Change-Id: I97f1f903dec10b4a91fc27d62990ab974c5831bf"
a3f7d795b64ef913814afb9d9e17f3449a85fd3e,2015-11-13 07:46:01+00:00,"Check missed IPSet utility using neutron-sanity-check

In some case, host may lack ipset utility (e.g., due to a
dependency issue)

This patch allows checking IPSet utility support from CLI:
    neutron-sanity-check --ipset_installed

Or using configuration options, for example:
    neutron-sanity-check --config-file /etc/neutron/neutron.conf
    --config-file /etc/neutron/plugins/ml2/ml2_conf.ini


Closes-Bug: #1510680
Change-Id: I2b9d6b13087a970bb0919a8217e428ce60d6e0c3"
3fef15a40b2714c1a372216ce60cc1384dc48c02,2015-11-13 09:59:33+00:00,"Add transaction for setting agent_id in L3HARouterAgentPortBinding

To avoid having extra L3HARouterAgentPortBinding with l3_agent as
None, operation of setting l3_agent should be atomic.
For this purpose, transaction was added in methods
create_ha_port_and_bind and _bind_ha_router_to_agents.

Closes-Bug: #1499647

Change-Id: Iaad82fe522cfd70061daecf411c924fdc11b7e41"
bb16a2ef6c768d6fd685ab36f9dc94002f76e768,2015-11-13 17:53:47+03:00,"Use SIGUSR1 to notify l3 agent of changing prefix file

It is common for all OpenStack services to use SIGHUP signal to
reload configuration and restart. This functionality, including
defining signal handler, is defined by oslo.service.

Meanwhile, this is currently not so for l3 agent. PrefixDelegation
class that is instantiated in L3NATAgent overrides handler for SIGHUP,
thus removing handler that was set in oslo.service.

The proposed solution is to use another signal, such as SIGUSR1,
instead of SIGHUP to notify l3 agent that a prefix file was
somehow changed.

Added a functional test for restarting L3 agent using SIGHUP.

Change-Id: I48eb4697a5fad97bcf08cfe1f80921a46d94029d
Closes-Bug: #1511401"
6ac43c119bff9da93f438d10033b209819a32230,2015-11-13 19:55:01+04:00,"Cleanup dhcp namespace upon dhcp setup.

In some cases when more than 1 DHCP agents were assigned
to a network and then they became dead, their DHCP ports
become reserved. Later, when those agents revive or start
again, they acquire reserved ports, but it's not guaranteed
that they get exactly same ports. In such case DHCP agent
may create interface in the namespaces despite that another
interface already exist. In such case there will be two
hosts with dhcp namespaces each containing duplicate ports,
e.g. one port will be present on two hosts. This breaks
DHCP.

Closes-Bug: #1509959
Change-Id: I34eb1ad5c44dd3528c9910462e26536186e7a4fb"
912ce0c9450417624e161037ee87a7b042b99050,2015-11-13 19:48:33+03:00,"Use admin context when requesting floating ip's router info

Currently it is possible for admin to create router and add any
tenant subnet to it, thus connecting the subnet to the external
network. In this case tenant user can assign floating ips to its
VMs though it does not own the router.
For proper notification we need to get router info using admin
context.

Closes-Bug: #1507602
Change-Id: I17330ddca577d15e42c13ef0af96d56e6f20abd7"
0b8f9d0948cdb429c4b67ba138640ae515ffa1b2,2015-11-14 06:23:55+00:00,"Skip bindings with agent_id=None

To avoid having extra L3HARouterAgentPortBinding with l3_agent as None,
operation of setting l3_agent should be atomic.
For this purpose, transaction was added in methods
create_ha_port_and_bind and _bind_ha_router_to_agents in change
Iaad82fe522cfd70061daecf411c924fdc11b7e41

In case if router was just created and l3 agent was not scheduled yet,
so l3_agent_id is None, l3-agent-list-hosting-router <router> will fail.
This change makes it work by skipping binding with agent_id=None.

Partial-bug: #1499647

Change-Id: I1aaf4b651f738febc26b0e1105aeabe066bca2a0"
4676c55f9d29e5d976951b857ca21e0b994e213c,2015-11-15 08:49:13-05:00,"Remove the useless l3plugin check in l3_rpc.py

Without ""L3_ROUTER_NAT"" in neutron's service_plugins, l3_rpc will
fail when getting l3plugin. So, remove the useless ""if"" block
here.

Change-Id: I56f417e5723ed40c70a186394de0bfcff696e469
Closes-Bug: #1514144"
dad0969a2eed6ee428521784d4d51e3b971c25b4,2015-11-16 08:44:04+01:00,"Switch to using neutron.common.utils:replace_file()

neutron.agent.linux.utils:replace_file() and
neutron.common.utils:replace_file() have same functionality.

This is the 1st patch in the series of 4 patches.
It modifies neutron.common.utils:replace_file(),
so it can be used by all components as a replacement
for neutron.agent.linux.utils:replace_file().
New keyword parameter 'file_mode=0o644' is added
to neutron.common.utils:replace_file().

Partial-bug: #1504477
Change-Id: Id1a7f1236786e8606c91bb9925cd9ac8e95892b3"
f76ef76f2516dad794818ce56fb15d16437f7314,2015-11-16 17:16:51+04:00,"Avoid race condition for reserved DHCP ports

This patch introduces mechanism similar to compare-and-swap
for updating reserved DHCP port.

This addresses a case when two DHCP agents that start nearly at
the same time are assigned to one network and there is a reserved
DHCP port in the network. Then each of agents will try to use it
because agents don't check if reserved port is still available.
Reserved DHCP port can be acquired by different agent between calls to
get_active_networks and update_port, so this patch adds a check for
this case.

Change-Id: I0277ab537ff9d3a664c03ea291b9ec2b0e784dbb
Closes-Bug: #1425402"
2cef12aeb25f6f024c0507c26b166d41d85bdd64,2015-11-17 07:47:40+08:00,"Add the missing arg of RetryRequest exception in _lock_subnetpool

RetryRequest exception defined in oslo.db need be called with a arg
which describes the inner exception. _lock_subnetpool method missed this
arg, and this patch adds it.

Change-Id: I44869c97ecd7d59d40d8793c71515067a237150b
Closes-Bug: #1506818"
14c09fdfc4fbda874508c170ac6a7d6ead0bfd2e,2015-11-17 00:17:32-05:00,"Don't add default route to HA router if there is no gateway ip

When adding an external network with no gateway ip to a HA router,
l3 agent will report exception. The exception comes from the code
of adding default route to HA router. However, if there is no
gateway ip in the external network, there is no need to add such
route.

Change-Id: I41d6a292c903758f408d3d93a64dca7adeeb5769
Closes-Bug: #1515209"
2c7c4f32de3013f0f54b07d2e28f0d90745b9df8,2015-11-17 05:14:56-08:00,"Firewall: fix typo

Changes devices_with_udpated_sg_members to
devices_with_updated_sg_members

TrivialFix

Change-Id: I3da9bf1fc108db9a4cbb2701b0363d92d426d7e7
Closes-bug: #1517018"
7a306e2918775ebb94d9e1408aaa2b7c3ed26fc6,2015-11-18 02:28:45+01:00,"Ensure metadata agent doesn't use SSL for UNIX socket

The communication between the ns metadata proxy and the metadata agent
is pure HTTP, and should not switch to HTTPS when neutron is using SSL.

We're therefore telling wsgi.Server to forcefully disable SSL in that
case.

Change-Id: I2cb9fa231193bcd5c721c4d5cf0eb9c16e842349
Closes-Bug: #1514424"
3b6bd917e4b968a47a5aacb7f590143fc83816d9,2015-11-18 14:42:35+04:00,"Resync L3, DHCP and OVS/LB agents upon revival

In big and busy clusters there could be a condition when
rabbitmq clustering mechanism synchronizes queues and during
this period agents connected to that instance of rabbitmq
can't communicate with the server and server considers them
dead moving resources away. After agent become active again,
it needs to cleanup state entries and synchronize its state
with neutron-server.
The solution is to make agents aware of their state from
neutron-server point of view. This is done by changing state
reports from cast to call that would return agent's status.
When agent was dead and becomes alive, it would receive special
AGENT_REVIVED status indicating that it should refresh its
local data which it would not do otherwise.

Closes-Bug: #1505166
Change-Id: Id28248f4f75821fbacf46e2c44e40f27f59172a9"
23b907bc6e87be153c13b1bf3e069467cdda0d27,2015-11-18 19:17:29+01:00,"Remove deprecated use_namespaces option

The use_namespaces option has been defined as a workaround to kernels
not properly supporting namespaces. This limitation is behind us, it's
time to remove use_namespaces after its deprecation in Kilo in order to
simplify code and remove a poorly tested case (use_namespaces=False).

This change prepares for removal pullup_route method[1] which was only
used when use_namespaces=False.

[1] neutron.agent.linux.ip_lib

DocImpact
UpgradeImpact
Closes-Bug: #1508188
Related-Bug: #1435382
Depends-On: I303038eec560a6d99421140c2822aed8b518470b
Depends-On: I4feb2a15c7e1e4bfdbed2531b18b8e7d798ab3cc
Change-Id: I2fbf65df1250d9f9f1656b3964ee3b6de1ef1118"
34d4d46c40b5204ffaf8c8a3e2464a19f9d8b2cd,2015-11-18 14:04:06-06:00,"Add vhost-user support via ovs capabilities/datapath_type

Adds the ovs 'config' property which returns the contents of the
single row of the Open_vSwitch table. This gives access to certain
OVS capabilities such as datapath_types and iface_types.

Using this information in concert with the datapath_type config
option, vif details are calculated by the OVS mech driver. If
datapath_type == 'netdev' and OVS on the agent host is capable of
supporting dpdkvhostuser, then it is used.

Authored-By: Terry Wilson <twilson@redhat.com>
Co-Authored-By: Sean Mooney <sean.k.mooney@intel.com>

Closes-Bug: #1506127
Change-Id: I5047f1d1276e2f52ff02a0cba136e222779d059c"
311c9d9d929b4a53d2f54824e599c12f653b77f6,2015-11-19 01:18:51-05:00,"Datapath on L2pop only for agents with tunneling-ip

This patch is a regression issue for patch[1].

Only those agents which expose tunneling-ip will be considered in
determining data-path tunnels in deployments with l2pop ON.

[1] https://review.openstack.org/#/c/236970/

Change-Id: I7c3b911d5e7448b4e8dee15bb50df33a6e9d5cfe
Closes-Bug: #1407959"
fc514b8e71d6ba7a1541ff925c63becf8834f6f5,2015-11-19 15:56:10+03:00,"Update HA router state if agent is not active

If L3 agent is marked dead it is still show as 'active' in the HA
router states on that agent. Current change adds check for such
case and updates HA router state from 'active' to 'standby' if
agent is dead.

Closes-bug: #1461148

Change-Id: Ie02e787a5b30cbe01694081cdec924304ab2ef41"
8d8444aa0ce0e6db1ebbc922311ec1eef546f2fe,2015-11-19 05:03:25-08:00,"IPAM: fix 'enable-dhcp' with internal driver

Commit 0c1f96ad5a6606c1205bd50ea944c3a383892cde broke the ipam
internal driver. The base plugin should only call the ipam interface
and not invoke the IPallocation data model.

The code that validated that the subnet had one free IP address was
removed. This would not guarantee that a port would indeed be free,
that is, a parallel operation could have created a port on the subnet
during this check.

Closes-bug: #1514810

Change-Id: I4d7ecb985762a8eef39cb2f22f210b4899f1a22e"
661f1b5e8019f3c2521208925b833f2d9113cce7,2015-11-19 15:55:58+00:00,"Fix the end point test for client

Due to recent change in neutronclient the endpoint value got changes
in following patch.

https://review.openstack.org/#/c/236325/

This patch will test both public or publicURL endpoints.

Change-Id: I0dffb06c5151203e9fe2ab041a7beb028a39aac0
Closes-bug: #1517579"
ddaee9f060c8fd1585d3e06e04eb301518ff90e0,2015-11-19 19:14:13+02:00,"Keep reading stdout/stderr until after kill

Currently, when calling AsyncProcess.stop(), the code stops the stdout
and stderr readers and kills the process. There exists an end case (as
described in the bug report) in which after the readers have been
stopped the sub-process will generate a substantial amount of outputs to
either fd. Since the 'subprocess' module is launched with
subprocess.PIPE as stdout/stderr, and since Linux's pipes can be filled
to the point where writing new data to them will block, this may cause a
deadlock if the sub-process has a signal handler for the signal (for
example, the process is handling SIGTERM to produce a graceful exit of
the program).

Therefore, this patch proposes to only kill the readers until AFTER
wait() returned and the process truly died. Also, relying on _kill_event
had to cease since invoking its send() method caused a logical loop back
to _kill, causing eventlet errors.

A different possible solution is closing the stdout/stderr pipes. Alas,
this may raise an exception in the sub-process (""what? No stdout?!
Crash!"") and defeats the 'graceful' part of the process.

Closes-Bug: #1506021
Change-Id: I506c41c634a8d656d81a8ad7963412b834bdfa5b"
09c032fa4e5177dea63e6139429309a11e62c65f,2015-11-19 20:45:28-08:00,"Fix use of fields argument in get_rbac_policies

The 'fields' argument wasn't being passed into the _get_collection
call so the results were always coming back with all of the fields.
This adds an API test to prevent a regression.

Change-Id: Iddef9dcc7639a557a9d19dc7265f10f98e002172
Closes-Bug: #1517815"
c7528a9986d0dfe65e2231dd3e6ecf3159d9d6cc,2015-11-20 14:29:47+09:00,"Replace neutron-specific LengthStrOpt with StrOpt

max_length option was added to StrOpt in oslo.config 2.7.0.
Neutron-specific LengthStrOpt is no longer required.

Change-Id: Icfecb5c8c68c942fca847e27a0c1862f18bdcdca
Closes-Bug: #1518178"
d755f7248d324bb4c44b3efc9d200f8eb075066d,2015-11-20 12:52:35+03:00,"Use compare-and-swap for IpamAvailabilityRange

Existing locking mechanism 'select for update' causes
deadlocks with galera multi-writers.
Replaced locking rows with compare-and-swap approach.

Compare-and-swap verifies that row is not changed by
another thread before updating/deleting it.
Filter-and-update and filter-and-delete are used.
They return count of affected rows.
If count of affected row is less than expected,
then another thread already changed our row
and RetryRequest is raised.

Change-Id: I514cae0fa43033433ec2982bcf3726e02e6692bf
Closes-Bug: #1494351"
e30d8cead155c119ee2ffde074312591f7938fb0,2015-11-20 16:49:51+01:00,"Make sure we return unicode strings for process output

Process output is supposed to be represented with lines, so we should
put Python strings in the queue (not bytes). Just in case, we do it only
for Python 3 environment.

To fix that, we reuse code from utils.execute() linux/windows
implementations.

This fixes the TestAsyncProcess.test_async_process_respawns functional
test for Python 3 environment.

Related-Bug: #1515118
Change-Id: I9efec2290003add44909aab33a0026372a580016"
ee83e0be069056c3c486075fed5f621208ece8e0,2015-11-20 16:24:29+00:00,"Reorganize and improve l3_agent functional tests

This will reorganize the l3_agent functional tests

Change-Id: I10008fd7216c8de47162657e280b7245c38f5154
Closes-Bug: #1501150"
075f152223abb3bfe6f380f9873e687bf348b9a8,2015-11-20 16:50:31-05:00,"Make fullstack test_connectivity tests more forgiving

Change assert_ping to block_until_ping.

Closes-Bug: #1518466

Change-Id: I233cb40e701ef462e9d570d9677da1cbcc2c91c8"
862de0d21f31fe1f9ad21ef5f13e183ec764c835,2015-11-21 16:13:44-08:00,"Remove BigSwitch plugin and driver

The BigSwitch Vendor plugin and driver are in
openstack/networking-bigswitch repo and will be moved to
Openstack bigtent. This patch removes the duplicated code and
corresponding entry points. It also moves the bigswitch specific
db tables to openstack/networking-bigswitch.
Closes-Bug: #1508781

Change-Id: I180d93f3e7da347c9b042fcc3f79f19e9a471f52"
f066e46bb77362ccca838b541eb42c7ae8ddc125,2015-11-23 06:09:28+00:00,"Use diffs for iptables restore instead of all rules

This patch changes our iptables logic to generate a delta of
iptables commands (inserts + deletes) to get from the current
iptables state to the new state. This will significantly reduce
the amount of data that we have to shell out to iptables-restore
on every call (and reduce the amount of data iptables-restore has
to parse).

We no longer have to worry about preserving counters since
we are adding and deleting specific rules, so the rule modification
code got a nice cleanup to get rid of the old rule matching.

This also gives us a new method of functionally testing that we are
generating rules in the correct manner. After applying new rules
once, a subsequent call should always have no work to do. The new
functional tests added leverage that property heavily and should
protect us from regressions in how rules are formed.


Performance metrics relative to HEAD~1:
+====================================+============+=======+
|               Scenario             | This patch | HEAD~1|
|------------------------------------|------------|-------|
| 200 VMs*22 rules existing - startup|            |       |
|                       _modify_rules|   0.67s    | 1.05s |
|                 _apply_synchronized|   1.87s    | 2.89s |
|------------------------------------|------------|-------|
| 200 VMs*22 rules existing - add VM |            |       |
|                       _modify_rules|   0.68s    | 1.05s |
|                 _apply_synchronized|   2.07s    | 2.92s |
|------------------------------------+------------+-------+
|200 VMs*422 rules existing - startup|            |       |
|                       _modify_rules|   5.43s    | 8.17s |
|                 _apply_synchronized|  12.77s    |28.00s |
|------------------------------------|------------|-------|
|200 VMs*422 rules existing - add VM |            |       |
|                       _modify_rules|   6.41s    | 8.33s |
|                 _apply_synchronized|  33.09s    |33.80s |
+------------------------------------+------------+-------+

The _apply_synchronized times seem to converge when dealing
with ~85k rules. In the profile I can see that both approaches
seem to wait on iptables-restore for approximately the same
amount of time so it could be hitting the performance limits
of iptables-restore.

DocImpact
Partial-Bug: #1502297
Change-Id: Ia6470c85b6b71979006ffe5da9095fdcce3122c1"
935348ce929ccdedc76e2e5742f312af9bbb12b6,2015-11-23 14:27:31+08:00,"Check gateway ip when update subnet

If a IP address is None, the method netaddr.IPAddress will raise a
error as 'failed to detect a valid IP address from None'.
When it updates subnet, if gateway_ip is None, it should not call the
method validate_gw_out_of_pools.

Change-Id: Ibb007fe7e6402c174129074288b8af891182cd68
Closes-bug: #1511925"
c3d2526727241ac1f6d812dc5fc1fd7e3636b3fc,2015-11-23 09:26:37+01:00,"ovs: Make interface name hashing algorithm common and extend it

The OVS device name hashing algorithm shortens interface names that are too
long. To ensure uniqueness it makes use of a hashing algorithm.

Move this function to a common place where it can be shared between ml2
drivers and agents.

Extend the function to support defining the max device length to be used.

Change LOG level to info to help deployers figuring out the unhashed name
of an hashed inteface.

Adapt OVS agent to use this common function instead of its
own implementation.

Change-Id: I5c04f39928d070aa7e372934fcb2675609d2761c
Partial-Bug: #1495960"
b06f816381ee1c5564aaf59d1406f9cc9873f5a1,2015-11-23 12:01:45+00:00,"neutron-db-manage: mark several options as deprecated

I believe we don't rely on --core_plugin or --quota_driver for the tool
because database contents are independent of chosen plugins and drivers
since ~Juno.

Also marked --service with deprecated_for_removal=True.

Related-Bug: #1501380
Change-Id: I2b4d98242a0d38843d931a71414ef2560a7ddb8f"
a88fdfc8e113f076603f336befc90500145353ed,2015-11-23 16:29:46+03:00,"Refactor OVS-agent init-method

Removed create_agent_config_map method which creates specific
configurations dictionary according to cfg.CONF and call the OVS-agent
with that structure. Passing oslo_config directly to init-method
of OVS-agent is more straightforward and makes it more testable.
Also refactored unit and functional tests of OVS-agent in accordance
with the changes in init-method.

Closes-bug: #1464394
Change-Id: I88742e4d454709e35481f2c505c9d64995497cac"
3858846770fcb51c2302abd4e5fdba1e12e663a7,2015-11-23 05:53:18-08:00,"Log error instead of exception trace

In impl_vsctl we rather use LOG.error instead of
LOG.exception. In these case the exception trace did not provide
any valuable information.

Change-Id: Ia02f000d460b3aee72a31e9963e5d0e0d4c68315
Closes-bug: #1518429"
578957f735806a468b0ac2f7584fb3b5b4e8bf80,2015-11-23 15:08:30+01:00,"Remove duplicate deprecation messages for quota_items option

The option is already marked for deprecation using oslo.config
mechanism, so there is no need to output more warnings here.

Change-Id: I5db439a0b87c49a52f3f5c063d0fd90819f3e932
Closes-Bug: #1504312"
3c8570f3fcd54c1061467616f1d04e95db27a292,2015-11-23 07:41:26-08:00,"Make Neutron resources reference standard attr table

This adds a new 'standardattributes' table and adds a foreign-key
references from ports, subnets, networks, subnetpools, routers,
securitygroups, and floatingips to this table.

This will make it easy to add new things to the schema like
timestamp fields or anything else that applies to multiple types
of Neutron resources. The new fields would just be added to the
'neutronresources' table instead of being duplicated across each
resource's table. Or, if the the relationship is 1-to-many (e.g. tags),
the new association table would be related to the 'standardattribute'
table.

Related-Bug: #1496802
Change-Id: Iaa3ba81a7e9cae09cea153720b29879d8cc9a080"
d5ea235865d6fe9c3d85c1cb8cb2250e7d7b7d4a,2015-11-23 21:47:21+01:00,"Deprecate l3-agent router_id option

L3-agent router_id option has been defined in order to associate a
l3-agent to a specific router when use_namespaces=False. The option
use_namespaces has been removed in Mitaka, so router_id option is no
longer needed and can be deprecated in order to prepare its removal in N
cycle.

Closes-Bug: #1518776
Change-Id: Id79499ccbf3ea69ca4cd7e4b2f812f6dbc0406e0"
35beca53277d187af0ade05466e81699c6575b07,2015-11-24 10:23:57+00:00,"Add UnionModel support to filter query generator

The _apply_filters_to_query method did not handle UnionModels
so objects leveraging it (i.e. RBAC policies) did not have
queries applied to them.

This patch corrects it by iterating through the component models
of the UnionModel and applying the filters to each component model.
It also adds an API test on RBAC that exercises the filtering.

Change-Id: I449acf359dd61189bbdacd200d7c41a4a88d3de8
Closes-Bug: #1517818"
dcd0498c17ae860c55a92f9f31b3e3fa0460b78e,2015-11-24 09:01:48-05:00,"Wait for the watch process in test case

Because the _watch_process and the failing_process are asynchronous,
there might be a chance that failing_process exit and _watch_process
is not executed.

If the _watch_process is blocked, the method that will be asserted
will not be called. This will fail the UT, but it is intermittent.

Change-Id: Ic951c1b91c5a10462f548544a5e8d482c52ad665
Closes-Bug: #1519160"
143b3dc2864bec1f92eeed44a351e420ae68fd58,2015-11-24 15:19:07+01:00,"tox: pass TEMPEST_CONFIG_DIR envvar into api target environment

Currently, API job skips all tests because TEMPEST_CONFIG_DIR is not set
properly. The environment variable was hardcoded to
/opt/stack/tempest/etc before, and since that's the location for tempest
configuration files that was used in gate, it worked fine there.

But after we were forced to remove the hardcoded value from the file due
to regression in tox 2.2.0+ (If3742b6eabe295a5aaeb4901c55909a70c451698),
it was neither hardcoded, nor passed from the external gate environment.

Note that since tox 2.0.0, the tool does not pass all envvars into tox
targets, but require explicit specification of the list of variables
that should be allowed into the target environment, using passenv
directive.

So that's what the patch does: it allows TEMPEST_CONFIG_DIR to get into
api tox target, which should be enough to make the API job avoid
skipping all tests.

Users are still required to set TEMPEST_CONFIG_DIR variable locally if
they want to execute the suite locally.

Closes-Bug: #1518632
Change-Id: Ia7dcc6785390a6012c7ba16a14573aa44f2b6fb5"
a3e102934cee01c14d5327ae7520555bc12affdd,2015-11-24 15:38:28+00:00,"Support for IPv6 RDNSS Option in Router Advts

RFC6106 standardizes IPv6 Router Advertisements to support
Recursive DNS server information. RDNSS info allows an IPv6
host to configure the DNS information via RA messages without
needing DHCPv6 for the DNS configuration.

This patch configures RADVD daemon to include RDNSS entries in
the Router Advertisements when the IPv6 subnet has dns_nameservers.

Closes-Bug: #1495465
Change-Id: Ia516d40b1c7a83cd7046b2b7f42d1204f44288a9"
9f5849679512467f50470d7c9466bb21f491be4a,2015-11-25 13:18:31+05:18,"Freescale ML2 driver code complete decomposition.

This removes all the artifacts specific to Freescale ML2 driver code
from the Neutron tree. The code is maintained at github repository.

Change-Id: I194a4da49058724766b7fde7343f85d19a75fe8c
Closes-Bug: #1519078"
54c390cb3260b1d91c87aa32ddf7e4b8c2a17462,2015-11-25 18:32:17+00:00,"force releasenotes warnings to be treated as errors

Change-Id: I48ecfbd8992a81fe13838e6c353195188f7cb3cd
Related-Bug: #1519912"
853f7d7a74a2281b0cd34c337362e73635e501a2,2015-11-25 16:18:05-05:00,"Delete HA network when last HA router is deleted

Currently when the last HA router of a tenant is deleted the HA network
belonging to this tenant is not removed. While running tempest aganist an
OpenStack setup where tenant VLANs (with small VLAN range) is used we hit
the limits are tempest tests start to fail as we cannot create new networks.
This patch addresses this issue by deleting the HA network when the last HA
router is deleted for the tenant.

Closes-Bug: #1367157

Co-Authored-By: Ann Kamyshnikova<akamyshnikova@mirantis.com>

Change-Id: I1d50b973aed4148857ac3d2bbee0d38e2e199783"
ba6b4302413ccd8b0553cdb5868a824c7595da1d,2015-11-25 23:08:58+01:00,"Remove useless lb-agent remove_empty_bridges

This change removes LB-agent[1] remove_empty_bridges is no more unused
since change[2].

[1] neutron.plugins.ml2.drivers.linuxbridge.agent.linuxbridge_neutron_agent
[2] I4ccc96566a5770384eacbbdc492bf09a514f5b31

Partial-Bug: #1514548
Change-Id: Iaf7213aaeddcac4843d9b410d910cf7dc7b8e603"
ea4165c2af2ad5c7b5423e25c507598ebd30f7b5,2015-11-25 18:33:18-08:00,"Don't drop ARP table jump during OVS rewiring

The previous OVS ARP spoofing code was dropping the rule to jump to
the ARP protection table each time it was called. This call was
unnecessary since the majority of port updates are not turning
off port security.

This patch adjusts the logic to only drop the jump rule if port-sec
is disabled or if it is a network port. The existing functional tests
ensure that connectivity works as expected.

Closes-Bug: #1520013
Change-Id: I7b396d758c2d4c7e1004257d432b210bf3ee5c66"
02f33380a827bd900eb3f34fb7d84d266227a725,2015-11-26 17:20:26+00:00,"Move a note to bridge_lib

This change moves a note from linuxbridge agent[1] to bridge_lib which
was forgotten in a previous change[2].

[1] neutron.plugins.ml2.drivers.linuxbridge.agent.linuxbridge_neutron_agent
[2] Ieccb8f77fc833467a166557e227023f5c2a50d1b

Partial-Bug: #1514548
Change-Id: I1562b75ce07eec280824cdfe6b8aba80c9d9170c"
eadd68f1774e4b9c0b11d361d52f761e4588a244,2015-11-26 17:22:30+00:00,"Correct unwatch_log to support python <= 2.7.5

Currently unwatch_log[1] uses WatchedFileHandler.delay attribute to
build a FileHandler instance from a WatchedFileHandler instance but
this attribute doesn't exist before 2.7.6.

This change removes WatchedFileHandler.delay usage and uses default
FileHandler delay (it also ensures we open immediately the log file).

[1] neutron.agent.linux.daemon

Closes-Bug: #1520271
Change-Id: I70a156c4aeeda8a3adcc1036d670732c21ffa335"
71190773e14260fab96e78e65a290356cdc08581,2015-11-27 15:22:59+00:00,"Automatically generate neutron core configuration files

This adds a new tox environment, genconfig, which generates sample
neutron core configuration file using oslo-config-generator.

Updates to some configuration option help messages to reflect useful
details that were missing in the code but were present in config files.

It also adds details to devref on how to update config files.

Partially-Implements: blueprint autogen-neutron-conf-file

DocImpact

Change-Id: I1c6dc4e7d479f1b7c755597caded24a0f018c712
Closes-bug: #1199963
Co-Authored-By: Louis Taylor <louis@kragniz.eu>"
112c8dd11d6f746b2b478f83061b63842838b495,2015-11-30 13:06:53+00:00,"Remove Neutron core static example configuration files

Oslo config generator was introduced in patch [1] to
automatically generate the sample Neutron core configuration
files.

This patch removes the static example configuration files from
the repository as they are now redundant.

[1] https://review.openstack.org/#/c/204206/

DocImpact

Change-Id: Ic7ae2e038b5bd7b215c65c9c565bfe31ef551520
Partially-Implements: blueprint autogen-neutron-conf-file
Closes-bug: #1199963
Depends-On: Ic37a16b6cf8eb92030649f1fc8b198738a8cc104"
f42ea67995537c7fe3e36447489872b0dcb82dd9,2015-11-30 15:38:50+01:00,"lb: avoid doing nova VIF work plumbing tap to qbr

neutron should rely on nova doing the job instead of trying to 'fix' it.
'Fixing' it introduces race conditions between lb agent and nova VIF
driver. Particularly, lb agent can scan for new tap devices in the
middle of nova plumbing qbr-tap setup, and attempt to do it on its own.
So if agent is more lucky to plug the tap device into the bridge, nova
may fail to do the same, getting the following error:

libvirtError: Unable to add bridge brqxxx-xx port tapxxx-xx: Device or
resource busy

This also requires a change in how the port admin_state_up is implemented
by setting the tap device's link state instead of moving it in or out
of the bridge.

Co-Authored-By: Sean M. Collins <sean@coreitpro.com>
Co-Authored-By: Darragh O'Reilly <darragh.oreilly@hp.com>
Co-Authored-By: Andreas Scheuring <andreas.scheuring@de.ibm.com>
Change-Id: I02971103407b4ec11a65218e9ef7e2708915d938
Closes-Bug: #1312016"
062ad0a0a62ab49bd0c27e73fbe93d739f82f410,2015-11-30 17:49:37+00:00,"Change check_ports_exist_on_l3agent to pass the subnet_ids

The get_subnet_ids_on_router is called for every
available l3agent in check_ports_exist_on_l3agent.
This introduces un-necessary call to the same
function multiple times which is expensive since it
calls get_ports internally.

In large scale the time taken to schedule a VM
on a given N-Node increases.

By passing the subnet_ids to check_ports_exist_on_l3agent
we would be only calling once get_subnet_ids_on_router in
the get_l3_agent_candidates.

This patch addresses the above problem by calling
get_subnet_ids_on_router just once.

Change-Id: I9d130f98e07bfe571eee32b827ff9af4010ff0fb
Related-Bug: #1513678"
76cc53c611a639d915761d1fa3c879cda2ba3502,2015-11-30 13:46:05-05:00,"In port_dead, handle case when port already deleted

db_get_val can return None if the port got deleted concurrently.
In this case there is no need to mark it dead and add drop flow for it.

Change-Id: I5ef9665770df3a9bbaf79049b219fadd73e20309
Partial-Bug: #1493414"
0947458018725b241603139f4ec6f92e84b2f29b,2015-11-30 16:37:12-08:00,"l3_db: it updates port attribute without L2 plugin

L3_NAT_dbonly_mixin._add_interface_by_port update Port.owner
db entry directly without notifying l2 plugin.
Thus L2 plugin/ML2 mechanism driver will be confused when
interface is attached to router by port because port owner is different.
Use L2 plugin update_port method to update port:owner.

Change-Id: If0178887282456842b6078a851a9233cb58a391a
Closes-Bug: #1475093"
e407a335713df40984286bafe1d7da4b530091dc,2015-12-01 13:28:52+09:00,"Disallow updating SG rule direction in RESOURCE_ATTRIBUTE_MAP

It doesn't make much sense to allow updating only the direction.
I suppose it was a bug in the first place.

Partial-Bug: #1521099
Change-Id: Idfd48c801be3cd34286595f5ca3c9d629a296200"
13ce7c85552ee6af9856bf701b55d2293ba5610d,2015-12-01 12:48:28+03:00,"DVR:don't reschedule the l3 agent running on compute node

For a DVR router, when it updates router gateway_ip, it should not
reschedule the l3 agents running on compute nodes whose mode is dvr,
it just need to reschedule the l3 agents running on network nodes
whose mode is dvr_snat.

Change-Id: Ib8ea6797c88cefb473eff9a8a7b2517a6aa90ca4
Closes-bug: #1496204
Co-Authored-By: Oleg Bondarev <obondarev@mirantis.com>"
2c95d4fca0fde4a1bb4e9048b768e000bbed399d,2015-12-01 21:00:37-05:00,"Clean up FIP namespace in DVR functional tests

* Added FIP namespace cleanup to DVR router creation.
* The tests weren't actually verifying that the FIP namespace
  was being deleted.

Change-Id: I67287d397614ab368e940233c61738e0d77fbb2b
Closes-Bug: #1521820"
dd726ed494db91e9c3e957a6a37e9fd498b5bbc0,2015-12-01 19:29:10-07:00,"Move i18n to _i18n, as per oslo_i18n guidelines

- This does NOT break other projects that rely on neutron.i18n,
  as this change includes a debtcollector shim to maintain those
  older entry points, until they can migrate.
- Also updates _i18n.py to the latest pattern defined by oslo_i18n
- Guidance and template are from the reference:
  http://docs.openstack.org/developer/oslo.i18n/usage.html

Partially-Closes-Bug: #1519493
Change-Id: I1aa3a5fd837d9156da4643a367013c869ed8bf9d"
bd36baf3ecfa10c7b8e1e012980feacc605d57e4,2015-12-02 22:33:04+09:00,"I18n related guideline for subprojects

Related-Bug: #1519493
Related-Bug: #1520094
Change-Id: I183c1f2226ee7aef96b958d888ca3b7a3f9e9a2e"
0ce4510b35b73c0ecb1e4a1681038058f58c3038,2015-12-02 06:52:25-08:00,"HACKING: fix edge case with log hints

A log message with _() was not raised as an error, for example:
LOG.info(_('who let the dogs out!')).

This should be:
LOG.info(_LI('who who who who!'))

Change-Id: I040f01b19ff5de00467b80be7399b998534d9a57
Closes-bug: #1522054"
87ce73141dddb840ffc523f253fdf87aef11d1c7,2015-12-02 11:51:50-08:00,"Notify about port create/update unconditionally

The notification about port create/update should be done no matter
if host (or any other field) was changed or not - it should be up to
handler to decide how to handle it.

This also fixes the bug when there was actually no notification to l3
dvr agent on compute node on new port creation:
_get_host_port_if_changed() always returned None - this is a regression
from commit 2ee08c3464c53abaf9bc5493132ad7958611e3b8

Closes-Bug: #1521524
Change-Id: I5bb416d2aaab632526f06a5620c0a4ea96340d21"
7dc718d1d750ce416af62a98c450c70f41ec60d6,2015-12-02 15:55:03-08:00,"Make port binding message on dead agents clear

The previous message was misleading because it made it
sound like port binding was being attempted even though
the agent is dead. However, the actual logic is that
binding will be completely skipped if the agent is dead.

This patch updates the message to make that clear and also
provides the port ID as part of the warning so operators
without debugging enabled can see which ports failed.

Change-Id: Ic5031ad8fb06062e9d12b87430d89fc37eb6cde0
Closes-Bug: #1522192"
1b22c0e1eaa14bfa5fb81c63ff6f85b642728beb,2015-12-03 06:11:59-08:00,"Hyper-V: remove driver from the neutron tree

The hyperv drivers and code should be part of the networking-hyperv
project (https://github.com/openstack/networking-hyperv).

A few changes are necessary in order to prevent Hyper-V deployments from
breaking, especially when upgrading to Mitaka.

Hyper-V deployments are configured to use the in-branch HyperVSecurityGroupsDriver.
Removing it will cause the Hyper-V Neutron Agent to fail. If the agent is
configured to use the old driver, the networking_hyperv's driver must be used
instead and the users must be warned to update their configuration files to
use the networking_hyperv's security groups driver.

Removes the neutron-hyperv-agent entry point from setup.cfg.
Removes the hyperv mechanism_driver from setup.cfg
Moves the in-tree HyperVSecurityGroupsDriver to the networking_hyperv equivalent.
Logs a warning if the in-tree HyperVSecurityGroupsDriver is used.
Removes pywin32 and wmi requirements, as they've been included in networking_hyperv
and they are Hyper-V specific requirements.
Adds release note regarding the deprecated security groups driver.

Co-Authored-By: Claudiu Belu <cbelu@cloudbasesolutions.com>

Depends-On: I3a25f18b4f3a0621cb92b44eb61e434fa87e0aab

Change-Id: I32451cba6933e88306a4308a07f3f0d1b81f626c
Closes-bug: #1520054"
1f329c5d012fa5d17dea5c48121c2820d70c9bb7,2015-12-03 09:40:27-06:00,"Add instrumentation devref, Part I

Presents what instrumentation is available from VIFs in Nova,
Metering Lables and Rules, Linux Bridge, and OVS. Proposes
mappings for structures defined in RFC 2863 and RFC 4293 and
the method that will be followed for a data collection proof
of concept.

How to aggregate and consume these counters will be covered
in future patch sets that extend this devref.

Change-Id: I6c1ad0c4cf60d0069c5e057d77f75c12b04a020c
Partial-bug: #1475736"
9ec466cd42de94c2fad091edfd7583a5f47eb87a,2015-12-03 19:33:29+03:00,"Do not autoreschedule routers if l3 agent is back online

If there are a lot of routers scheduled to l3 agent,
rescheduling all of them one by one might take quite a long
period of time - during that time some agents might get back
online. In this case we should skip rescheduling.

Closes-Bug: #1522436
Change-Id: If6df1f2878ea3379e8d2dba431de3e358e40189d"
3f7fa1d6468aea1f043d29291cb5427369b284d3,2015-12-03 14:03:44-08:00,"Fix default RBAC policy quota

The previous config value for the default RBAC policy
was not in neutron.conf and value that was registered
as a config option 'rbac_entry' didn't match the resource
name 'rbac_policy' so the default did not take effect.

This patch corrects it by registering the 'rbac_policy'
option instead of 'rbac_entry' and documents it in neutron.conf.
It also adds an API test that exercises the quota limit and
ensures that it's not set to -1.

Change-Id: I8c8d4bcfda808e376af94048fe5a98c68a2a975f
Closes-Bug: #1522224"
6ec16458fe430368e2479cf312bbe8a5a448e502,2015-12-04 08:35:28+01:00,"Cleanup veth-pairs in default netns for functional tests

Today, veth-pairs created by the VethFixture of the net_helpers class
are not cleanup on teardown. This is solved by this patch.

Change-Id: I0a969e31e6694d74a9af6ada4e4e707c6332ffeb
Closes-Bug: #1522710"
b989e9d181cfb2c587f8ae162b827f2ee13ed6b6,2015-12-04 17:51:16+09:00,"test_migrations: Avoid returning a filter object for python3

Otherwise it confuses oslo.db.

Closes-Bug: #1522731
Change-Id: I1a246eea9adef10ec6c025e9b620f87ee9318dd7"
60e63862fe9fb9ffdd5818e38fb1f311d6a056d5,2015-12-04 11:19:57+02:00,"Remove Neutron core static example configuration files - addition

Change id Ic7ae2e038b5bd7b215c65c9c565bfe31ef551520 is incomplete,
the files had to be removed from setup.cfg also.
It beaks the HyperV-CI beacause the config files do not exist
anymore.

Closes-Bug: #1522734

Change-Id: Ia6d3f0d789fad30d451a138b4ed0ff162ba0b00e"
a050433d0d0e06dba952c022928d1b70cdf6534e,2015-12-04 14:52:19-05:00,"Final decomposition of Brocade vendor code

This removes what's left of the brocade code and artifacts from the
neutron tree. All the vendor code is now in the
openstack/networking-brocade repo.

Closes-Bug: #1518637

Change-Id: Ia366ec28d0ae9fd7f9fe41c9a82d5d44971d27d8"
24fad53ae548da84bdcc7ae41d2569bcc712206e,2015-12-04 15:08:37-05:00,"Final decomposition of the nuage plugin

This removes what's left of the nuage code and artifacts from the
neutron tree. All the vendor code is now in the
nuagenetworks/nuage-openstack-neutron repo on github.

Closes-Bug: #1518643

Change-Id: Ifbb9484f36a3e42c6039c42c7f8d0bcbd482bbf8"
eb5c66c36a480a7734af1bce619d74f7c6cf1360,2015-12-04 18:43:28-08:00,"Delete stale neutron-server manual

The configuration options come from oslo and the server
executable is usually wrapped in a service script, supplied
by packagers and/or deployment tools. Any extra documentation
available in tree is of relative value, and the fact that
this file has been virtually ignored ever since it was
added is a testament of that.

Let's stop its agony and wish it to rest in peace.

Closes-bug: #1520041

Change-Id: If5bba557526903b8064ee28628a21c3459ca85bc"
fe987b5dd5e2b53b71c2bf7afdc46359b4c4d574,2015-12-05 07:55:37-08:00,"Set timetable for removal of oslo.messaging.notify.drivers

Icehouse is dead and gone, at least upstream. These special driver
registrations are not tested in the gate-tempest-dsvm-neutron-full job
which means they are also not tested in requirements constraints jobs.

oslo.messaging 2.6.0 broke these already by removing the internal modules,
which was fixed in o.m 3.0.0 with (deprecated) alias modules.

The minimum required version of o.m in mitaka is currently greater than
2.6.1, so we're OK to remove these once stable/mitaka is our oldest
supported branch. So add a TODO to remove these once liberty-eol happens.

Proper configuration for notification drivers happens through the
config file using the oslo_messaging options:

http://docs.openstack.org/developer/oslo.messaging/opts.html

Adds a release note for the deprecation and timetable.

Change-Id: I2c04117b0f531fe3604e74401d0ffd8d8d3dd308
Related-Bug: #1513630"
fd2aad9e0f78048afc4d719db8139cf28d8850e8,2015-12-06 01:57:41+08:00,"Fix some inconsistency in docstrings

According to http://docs.openstack.org/developer/hacking/#docstrings

Change-Id: I833e0ef58fb12f8e4c57331706f270fd83341911"
2d8632e412c6187187d44ee169048bf9d4c8c106,2015-12-06 19:39:04+09:00,"Use _ from neutron._i18n

Partial-Bug: #1520094
Change-Id: I874a4aa1d71d1f7034a1ff0b7450b419ef5c6864"
51d4d858ac4a0a2a8832fab9107fbb5e1d8d7771,2015-12-06 19:39:20+09:00,"Deprecate _ builtin translation function

This function is discouraged for usage as per oslo.i18n guidelines [1],
so we should deprecate and remove it.

[1] http://docs.openstack.org/developer/oslo.i18n/usage.html

Change-Id: I848ee1dbd16a23c4db42df4690bf139bd769f3e8
Partial-Bug: #1520094"
5b6992db49cf6e69b05411ed7d170198434f39e9,2015-12-07 07:49:53+00:00,"move usage_audit to cmd/eventlet package

    setup_rpc func need the eventlet monkey_patch,
    otherwise the main process will be blocked.

Change-Id: I9f4a0b7c957b7dc7740e3cf6e75f18778ad562d0
Closes-Bug: #1522681"
4957b5b43521a61873a041fe3e8989ed399903d9,2015-12-07 14:07:24+05:18,"Avoid full_sync in l3_agent for router updates

While processing a router update in _process_router_update method,
if an exception occurs, we try to do a full_sync.

We only need to re-sync the router whose update failed.

Addressed a TODO in the same method, which falls in similar lines.

Change-Id: I7c43a508adf46d8524f1cc48b83f1e1c276a2de0
Closes-Bug: #1494682"
cfc9578148985f117c230be263d9faab4c1bb57e,2015-12-07 20:17:49-05:00,"Don't emit confusing error in netns-cleanup

If we're trying to delete a dhcp/qrouter device with use_veth
= False (Which is the default for some time), we'll first
try to 'ip link del %s', which will fail and emit a confusing
error, then try 'ovs-vsctl del-port'. There's no need to
log an error in such a case.

The patch attempts to future proof by setting the
set_log_fail_as_error(False) to be as tight as possible, so we
do log errors in case the device is somehow used in the future.

Change-Id: I1954bde3ee9a2e43d7615717134b61c5fa7cfbb1
Closes-Bug: #1463800"
9670dbd93ce7246282ca4343c3f701e8c20a232b,2015-12-07 22:16:47-05:00,"Pull project out of request in addition to tenant

Keystone V3 renamed tenant to project. In order to deal with keystone
V3, start pulling X-Project-Id from the headers.

Since keystonemiddleware authtoken sets both X-Project-* and
X-Tenant-*, we don't need to look up X-Tenant-*.

Don't do anything with renaming the internal variables - that will come
later.

Change-Id: I5e27cf6a54fb603b81d41b8b4f085d59354627fb
Depends-On: I1f754a9a949ef92f4e427a91bbd1b1e73e86c8c4
Closes-Bug: #1503428"
34822ba31a62ee6f0f5b532a2c435f3c9b684605,2015-12-08 19:34:00+02:00,"Skip keepalived_respawns test

keepalived fails to respawn after crash for > 1.2.11 version.

When keepalived starts, it spawns vrrp thread to monitor vrrp forked
process. It also creates a vrrp pid file. When the process is killed, and
it's restarted, the the new keepalived process runs with -P, so
when we validate whether we are already running,  we check vrrp pid file.
Since we never clean up the file before starting the process, and the process
dies without a chance to clean up the file as part of its signal
handler, respawn never works.

keepalived_respawns test should be skipped until bug is resolved.
See also: https://bugzilla.redhat.com/show_bug.cgi?id=1286729

Change-Id: Ic111573e0cd5ad5bfe70b0f38ec0203c10d52e34
Related-Bug: #1511311"
6b43ef8ef721b27be99dc479a90e96ec08234469,2015-12-08 14:16:49-08:00,"Fix timestamp in RBAC extension

The previous timestamp had an invalid TZ offset.
This patch just sets it to UTC like the others.

Change-Id: I58689d2ae88979a1119475267998c09e18915083
Closes-Bug: #1524081"
eb84048bbc27d6743016da9beeda071ccb92cd9c,2015-12-08 18:26:07-05:00,"Make keepalived add_vip idempotent

L3 agent operations are designed to be idempotent to be resiliant
in the face of missed notifications, out of order notifications
processing and agent restarts. One exception is keepalived's
add_vip that was made to explicitly barf when the agent tries
to add a vip that was already inserted to keepalive'd internal
cache. This was done in patch 142630 by my request to root
out bugs. Well, we found such a bug and in retrospect may not
have been the smartest idea.

Change-Id: Iead975787e2847828286d7b644dcbe33cf57ace9
Related-Bug: #1523999"
58ea633fa44d8994596055a23cfde260e6d9d9c9,2015-12-09 00:48:19+01:00,"Refactor OVS-agent tunnel config validate

This change transforms validate_local_ip into a sub-method of
validate_tunnel_config and raises directly SystemExit instead of
indirectly.

Related-bug: #1464394
Change-Id: I35addd41e1a8b061bd0e5e6656a1728fb7fe04ce"
526d28c5dba75e517bf833b895b69b840f03c6a4,2015-12-09 05:44:04+00:00,"select router with subnet's gateway_ip for floatingip

1) when a subnet is connected to multiple routers and
all these routers are connected to same external network,
then select the router with subnet's gateway_ip, if available,
for managing floatingip.

2) Otherwise go with default existing behavior i.e
select first router in internal subnet, that also present on external network.

For scenario 1), if the router with gateway ip not selected,
then for connections initiated by external agent towards floatingip
won't get response with floatingip as source address,
instead gw ip of router(i.e router with subnet's gateway_ip) as source.
Details about the bug at [1]

[1] https://bugs.launchpad.net/neutron/+bug/1470765/comments/4

Closes-bug: #1470765
Change-Id: If054945eab058c7138aabbb22cda15890ccb502c"
bb7bfa03d3cc1044e2323b8a904e4456aa889f92,2015-12-09 11:27:51+05:18,"fix call which is only specific to enhanced_rpc

security_group_updated method is not implemented in the default
FirewallDriver class. But SecurityGroupAgentRpc class assumes the method
is implemented by the underlying Firewall driver.

This patch adds a check to ensure that only the drivers which leverages
enhanced RPC will make the call.

Related-Bug: #1493104
Change-Id: I0ee44a5ce69368c7731adfe9953adc0b2c5ff2d2"
cdd049e4c4d7e6ba1ca377e50fc6e8c29c85ab3d,2015-12-09 15:17:23-08:00,"ML2: Add tests to validate quota usage tracking

Ensure that event handlers are invoked upon completion of
ML2 operations which add or remove tracked resources.
Also validate that the event handlers are called for the
appropriate resources and that quota usage's dirty bit
is set and unset as expected.

These are not unit tests, but added in the unit test tree
as they leverage code both from the DB unit test and the ML2
unit test framework. This module has indeed been added to
the 'exclusion list' in check_unit_test_structure.sh, and
should be moved to the functional test tree together with
the other modules.

Closes-Bug: #1499358

Change-Id: I78c432c35f3f3339607cd533019ae6d0fa2a5cd6"
f218929bc5126466b2a79b56d32e9cf042aa176d,2015-12-10 01:26:51-06:00,"Force service provider relationships to load

A race condition was exposed in the LBaaS V2 db layer that was caused by a
hack to get around this issue.  The real issue is that since the
ProviderResourceAssociation is inserted independently, any models that were
created before this insert will not have their relationship with the
ProviderResourceAssocation loaded.  Using the session.expire_all method will
force the session to retrieve all new data and load this relationship for any
resource that uses this relationship.

Change-Id: I940b541f4ef9c489126cd2d215b1d857f0624de0
Closes-Bug: #1504465"
7dad96deb4ae66509d968465bcd1c852c6743bc1,2015-12-10 08:40:36+00:00,"Add option for nova endpoint type

When the neutron notification to nova was updated to use novaclient the
nova_url parameter was disabled.  This prevents administrators from
using anything but the publicURL as the proper endpoint to notify nova.
This patch adds an option to pass on to novaclient for the
endpoint_type so that the administrator can set the notification url to
public, internal or admin.

Change-Id: I405f761944449cab6b8c8895f98419f79cd74cad
Closes-Bug: #1478471
DocImpact: Need to add a new option to the neutron configuration
reference."
8ddeb4be9e32e5cefab8324d0cbf9cecead1f808,2015-12-10 11:16:12+02:00,"Ignore possible suffix in iproute commands.

Closes-Bug: #1522199
Change-Id: I14815abd9345edb079e3331cbe2465ad22a0d4c3"
ee78b063c7652d52be81fcc8eb41dbf24d459ecc,2015-12-10 22:36:35+09:00,"Decompose OFAgent mechanism driver from neutron tree completely

All 3rd-party code is required to be removed from the neutron tree.
This change removes definition for ofagent mechanism driver from
neutron repository.

Change-Id: Ia21387eeaed71f38822356e22e4adbd237c1e64c
Closes-Bug: #1524164
Depends-On: I04c741daf12e7628e2c1e2d1b81b2b2ce1310542"
999ee86deaab2d72069f9d16c3a7d893c1426fc4,2015-12-11 16:22:57+09:00,"Return availability_zone_hints as list when net-create

In neutron with availability zone extensions, we receive
the return value with availability_zone_hints as string
although we expect list.

Change-Id: Ifb1d741324725f3f2692962a02bf3d870611fafb
Closes-bug: #1524602"
9b0bc3e5b37959eb5d586a19ab189b0a3f769823,2015-12-11 21:34:32+01:00,"Deprecated tox -downloadcache option removed

Caching is enabled by default from pip version 6.0

More info:
https://testrun.org/tox/latest/config.html#confval-downloadcache=path
https://pip.pypa.io/en/stable/reference/pip_install/#caching

Change-Id: I1778135d68a4bf96da3a0c0e4660172d1f13d16b"
2c60278992d5a217241054444ed0ca6e1d2f3e5c,2015-12-14 10:14:40-03:18,"Adding a VNIC type for physical functions

This change adds a new VNIC type to distinguish between virtual and
physical functions in SR-IOV.

The new VNIC type 'direct-physical' deviates from the behavior of
'direct' VNICs for virtual functions. While neutron tracks the resource
as a port, it does not currently perform any management functions.
Future changes may extend the segment mapping functionality that is
currently based on agent configuration to include direct types.
However, the direct-physical VNICs will not have functional parity with
the other SR-IOV VNIC types in that quality of service and port security
functionality is not available.

APIImpact
DocImpact: Add description for new 'direct-physical' VNIC type.

Closes-Bug: #1500993

Change-Id: If1ab969c2002c649a3d51635ca2765c262e2d37f"
189a6f1bc3295b719304f44e5b731ef671fe7f50,2015-12-14 17:33:36+00:00,"DVR: handle dvr serviceable port's host change

When a VM port's host is changed we need to check if a router
should be unscheduled from old host and send corresponding
notifications.
commit d5a8074ec3c67ed68e64a96827da990f1c34e10f added such
a check when port is unbound. This patch adds similar check
in case of host change (instance live migration)

Closes-Bug: #1508869

Change-Id: I57fa8253b2c88f7b7380a79b841fc424e9e52f19"
f5b950dffecc049df11981dcfb5574121be3eb69,2015-12-14 19:09:20+00:00,"Separate rbac calculation from _make_network_dict

When a subnet dict was being created, it was calling
_make_network_dict to get the 'shared' flag for the
subnet. The issue with this is that the _make_network_dict
function would iterate over the subnets on the passed in
network object, which would trigger a database lookup
of all of the subnets.

This patch just separates the 'shared' flag calculation out
into a separate function that both calls can leverage.

Change-Id: I2cb766ce1fd8ddcc75209f9e92221a3b77015ea2
Closes-Bug: #1525295
Partial-Bug: #1513782"
806e67538fbea49530aa0eedb75694cd8bad439d,2015-12-14 19:45:37+00:00,"Batch db segment retrieval

A net-list operation was calling extend_network_dict_provider for
each network individually which would result in a database call for
each network.

This adds a new call in the manager to extend multiple networks at
once and then it adds a bulk version of get_network_segments that
it calls.

Now 1 net list of any number of networks will only result in 1
segment DB call.

Change-Id: I2543b3bdbb178ee4bb8d1288e9a27af1c5c8c8b4
Closes-Bug: #1525423
Partial-Bug: #1513782"
cac2436f298491dbca2c932c80bdf3a64ac39ee6,2015-12-14 17:05:46-05:00,"Correct return values for bridge sysctl calls

This fixes an issue where the lb agent did not plug the
dhcp tap device into the bridge when having vlan networking
set up.  Caused by setting of disable_ipv6 value.

Closes-Bug: #1520618
Change-Id: I0d21fad3a676d1fdd30501ea6a295f1e9b207a3a
Co-Authored-By: Brian Haley <brian.haley@hpe.com>"
57964df5c6e4d590516ae7eb1783f694fa24f501,2015-12-14 14:45:30-08:00,"Use a joined relationship for AZ info on networks

The previous code was doing a DB lookup for each network's
availability zone which was significantly impacting the
performance of network listings.

This patch adjusts the network model to be automatically joined
to the DHCP agents table that the AZ code uses to populate the
AZs for the network.

Change-Id: I908ceb1a68e0eed7c304e3ff82279ad6fa406167
Closes-Bug: #1525740"
411e6ff1570f9508424eb985201943e881084d7a,2015-12-15 09:54:38-08:00,"Tune _get_candidates for faster scheduling in dvr

Right now we have seen some performance issues when
dvr routers are scheduled on multiple compute nodes
with thousands of VMs on the routed subnets.

The _get_candidates call get_l3_agent_candidates with
a complete list of agents irrespective of the routers
already hosted on the agents or not.

So this fix will reduce the amount of iterations that
get_l3_agent_candidates need to process for all the
agents and would increase the control plane performance.

Closes-Bug: #1513678
Change-Id: I8f781d4cbc996ce13441303c9296e4f6ec822b94"
0b2fa9540655b27e5dc079dade29f232cadc0531,2015-12-15 23:29:47-08:00,"Use a joined relationship for AZ info on routers

This patch adds a joined relationship from the routers
to the agent table to prevent excessive DB lookups of the
agent availability zones during router listings.

This fix is the same as the one for networks here:
I908ceb1a68e0eed7c304e3ff82279ad6fa406167

A follow-up patch will add an AZ table so this doesn't
have to join directly to the agents table.

Change-Id: I808f8ff0c581478b2ea1144e297d83af599a32f2
Closes-Bug: #1526644"
f0d0d354a7d8faa5f8a5946b49aefbe56e4d8a1a,2015-12-16 16:58:47+04:00,"Remove unused parameter from _update_router_db method

While gw_info is being passed to _update_router_db method
of various classes it is never actually used, so this is just
a cleanup.

Change-Id: I311f6976c21fa07a7532c3d0bbe56b5e35a18f6e
Closes-Bug: #1526785"
7d42ee769cdd4f4dc7b2ca1d85557bc471ce4b7e,2015-12-16 17:56:31+03:00,"Add check that list of agents is not empty in _get_enabled_agents

No reason to try get enabled_agents and send notification
if there are no any agents associated with network.

Closes-bug: #1522471
Change-Id: I111967415ce600253fc679837d03c9cd75f19656"
b8d281a303ca12440aebb55895ebb192d25cecf8,2015-12-16 18:52:12-05:00,"Fix comparison of Variant and other type in test_model_sync

Tests TestModelsMigrations failed on comparation Variant type and
BigInteger after alembic 0.8.4 release.
Current change corrected compare_type for such case.

Closes-bug: #1526675

Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Change-Id: I7ae7aaf053a81f487d9ec14859700806fa4f9017"
8b7e5997dae54a03ad2850c43b7070bc00c90273,2015-12-16 22:06:04-05:00,"Separate the command for replace_port to delete and add

When a port has been added to router namespace, trying to replace the
port by adding del-port and add-port in one command, will not bring
the new port to kernel. Even if the port is updated in ovs db and can
be found on br-int, system can't see the new port. This will break
the following actions, which will manipulate the new port by ip
commands. A mail list has been filed to discuss this issue at [1].

The problem here will break the scenario that namespace is deleted
unexpectedly, and l3-agent tries to rebuild the namespace at restart.

Separating replace_port to two commands: del-port and add-port,
matches the original logic and has been verified that it can resolve
the problem here.

[1] http://openvswitch.org/pipermail/discuss/2015-December/019667.html

Change-Id: If36bcf5a0cccb667f3087aea1e9ea9f20eb3a563
Closes-Bug: #1519926"
dd5f5716c9a32634caa2a44d362cd77461ba873d,2015-12-17 03:26:56-05:00,"Remove duplicated code in attribute.py

The _validate_XXX_list functions in [1] are mostly duplicated, this
patch will use one function to validate list of items and remove
others.

[1] neutron/api/v2/attributes.py

Change-Id: I86905018914becb64451941f0ecb06be30f2c740
Closes-Bug: #1527113"
d515a8db880388092b61f4649f8dd0b29a2c5de3,2015-12-17 07:45:34-05:00,"reject leading '0's in IPv4 addr to avoid ambiguity

If a IPv4 address has a leading '0', it will be interpreted as an
octal number, e.g. 10.0.0.011 will be interpreted as 10.0.0.9.
Users who are not familiar with or not expecting octal interpretation
will not get the address they intended. Since there is no standard
around this, we reject leading '0's to avoid ambiguity.

APIImpact
Change-Id: I3163ba13468c47d385585221d2167fbe31d24010
Closes-Bug: #1524220"
2d1b53bcfa6c4d6fa5bca2ba4da9aaca66245a5b,2015-12-17 09:58:49-05:00,"Kill the vrrp orphan process when (re)spawn keepalived

When keepalived crashed unexpectedly, the vrrp process that
it associates with will be orphan process. This will make
the VIP unable to migrate to the router in the same host.
Also, neutron code is not able to respawn the keepalived
process, because keepalived thinks itself is still running,
according to [1-3]. As a result, neutron will report respawning
keepalived all the time. Restart l3-agent will not help.

This patch will check and delete the orphan vrrp process
if there is any, in the processmonitor of l3 agent.

More details can be found in the bug description and comments.

[1] https://goo.gl/W3GL9I
[2] https://goo.gl/F0Ixfb
[3] https://goo.gl/dUqhTo

Change-Id: Ia1759ed1365b845d404686a8cd25f882cce35caf
Closes-Bug: #1511311"
4344bce278005a3ebd72c612ec3b859344e0f181,2015-12-17 10:05:50-05:00,"Clean up code for bug1511311

Due to the code change for the fix, the callback is no longer needed.

Change-Id: Id603add6bdf98d848fb4afe4dd117552992f9ed1
Related-Bug: #1511311"
179e9dbe03ad4fadcdab619d67cfbc80b36ee653,2015-12-17 21:39:40+05:18,"Refactor the subnetpools API tests

test_create_dual_stack_subnets_from_subnetpools
was not cleaning the created subnetpool.
In order to address this issue, this patch
  - adds the cleanup of subnetpools in base.resource_cleanup
  - and removes the calls to the function addCleanup in the
    subnetpools tests.

This patch also removes the CRUD subnetpools functions
from network_client.py as it is not required.

Change-Id: I7ad902dbb303ab9e5d01caceb59cc16f7902aaf9
Closes-bug: #1475176"
5c09ca79327cba03bdfc79cd33b19cf53d62bc24,2015-12-18 06:39:26+09:00,"Add to deprecate OFAgent in release note

The OFAgent is decomposed completely.
And the OFAgent driver and its agent are depecated in the Mitaka and
will be removed in the next release.

Partial-Bug: #1521477
Change-Id: I8ce5e69d84bad486c95d5e3bd3f44effd29b2a62"
f54cba053556a43d51ccd895cdf8232c51210299,2015-12-18 16:39:27+08:00,"Catch known exceptions during deleting last HA router

In some scenarios, for instance rally test create_and_delete_routers,
it will get some exceptions, such as the network in use exception,
during the router deleting api call, but actually the router has
been deleted. There has race between HA router create and delete,
if set more api and rpc worker race raises exception more frequently.
Because the inconsistent error message was not useful for user,
this patch will catch those know exceptions ObjectDeletedError,
NetworkInUse when user delete last HA router.

At the same time, when user create the first HA router, but because
of the failure of HA network creation, the router will be deleted,
then the deleting HA network will raise AttributeError, this patch
also move HA network deleting procedure under ha_network exist check
block.

Change-Id: I8cda00c1e7caffc4dfb20a817a11c60736855bb5
Closes-Bug: #1523780
Related-Bug: #1367157"
822ad5f06bcef8f95f36032d4fd4709975cecc31,2015-12-19 14:51:47-05:00,"Force L3 agent to resync router it could not configure

If the L3 agent fails to configure a router, commit:
4957b5b43521a61873a041fe3e8989ed399903d9 changed it so
that instead of performing an expensive full sync, only that
router is reconfigured. However, it tries to reconfigure the
cached router. This is a change of behavior from the fullsync
days. The retry is more likely to succeed if the
router is retrieved from the server, instead of using
the locally cached version, in case the user or operator
fixed bad input, or if the router was retrieved in a bad
state due to a server-side race condition.

Note that this is only relevant to full syncs, as those retrieve
routers from the server and queue updates with the router object.
Incremental updates queue up updates without router objects,
so if one of those fails it would always be resynced on a
second attempt.

Related-Bug: #1494682
Change-Id: Id0565e11b3023a639589f2734488029f194e2f9d"
be14e905419f0927539e939c1f979430a6e44d42,2015-12-21 13:01:10+05:18,"Corrected wrong ethertype exception message

This patch resolves the issue where wrong message was being
shown when ethertype input parameter was not amongst one of
the types supported. New message made akin to other input
parameters like 'protocol'.

Change-Id: I5636f3582c9d9877dad4d091a374284b656923f4
Closes-Bug: #1508106"
3f1c75ade76518905a76f636312b481d754651e8,2015-12-21 17:17:31+09:00,"Add a link of availability zone document into releasenote

Change-Id: I01f1a8f8b13a240aad22267f2042ffc2f00dfea3
Closes-bug: #151998
Depends-On: I9ea73040b4d15f78d529d5652215699841bd3732"
e9ee5bd308bedd09eed1bf436852ec9898395ffc,2015-12-21 10:31:25+01:00,"Add abstractmethod to FirewallDriver abstract class

FirewallDriver is abstract base class but do not have abstractmethods.
Updated methods to correspond with use-case of class.

Closes-bug: #1119119
Change-Id: I4b27b27d66c0b89cd9b65541cc1703103a2b00d2"
9783050e3ea6b9c0201a6d4733d1987839d1df7d,2015-12-21 15:51:48+00:00,"Don't raise if polling manager is running when stopped

AsyncProcess.stop() will raise if the process we are trying
to stop is not running. Some functional tests sporadically
fail because in the clean up the polling manager is stopped
without checking if it's still running. Add an except
in InterfacePollingMinimizer.stop() to avoid raising an
exception when the monitor is not running.

Change-Id: Iec8f5039ae5b830836564a1a402ad3e4ba38935d
Closes-bug: #1525856"
4885ef4885de072b0321858a2ae334b708da4bea,2015-12-21 11:54:38-08:00,"Add tests that constrain db query count

This patch adds unit tests to ML2 and L3 that ensure that the
number of DB calls during list operations for ports, networks,
subnets, routers, and floating IPs remains constant regardless
of the number of ports.

These will prevent changes from slipping in that result in
a separate DB query for each object in a list operation
(for changes to the extensions used by ML2 and the DVR plugin).

Related-Bug: #1525295
Related-Bug: #1513782
Related-Bug: #1525423
Related-Bug: #1525740
Related-Bug: #1526644

Change-Id: I1958fc7c318bbf73238a3ad5be133fa7800c8290"
b223452e68fa8629cb67826bb8ae3ac612e0b859,2015-12-21 13:30:39-08:00,"DVR:Fix _notify_l3_agent_new_port for proper arp update

Now with notifications coming from ml2 plugin on port create
and port update, it is worth fixing the existing _notify_
l3_agent_new_port for proper arp update and router scheduling.

Previously we have been sending arp update and calling router
scheduling for every update notification for service ports,
but now we can take necessary action only when required, since
the fix to update the arp and router scheduling was recently
done by sending the port info for every new port created.

When _notify_l3_agent_port_update is triggered, we check if the
original port host binding exists and if there is a change in
host binding with respect to the new port, then we go ahead and
reschedule the router on the new host and flush the arp entry.

Related-Bug: #1524020

Change-Id: Ifda623d5413b72bf80f38fba5c12a05a88bb7de5"
5086a0ba7a5b5f08492141f346be93b11112ebad,2015-12-21 17:50:36-05:00,"Delete test_restart_l3_agent_on_sighup

After looking at the test and its scope, it seems like 100% of the
code it tests is owned by oslo.service. That library has its own tests,
is there value in keeping the test in Neutron?

Change-Id: I0d8a22cc8127e183c1f55790f4b04dea2d30d356
Closes-Bug: #1518921"
b147f60f9aec971fdee568c530183ced7255d619,2015-12-22 19:22:30+09:00,"Restore _validate_subnet/uuid_list not to break subproject gates

https://review.openstack.org/#/c/258867/ removed
_validate_subnet_list and _validate_uuid_list.
_validate_subnet_list is being used in VPNaaS and VPNaaS gate
is now broken. We need to remove validators more carefully
because subprojects may use them.
This commit restores them once.

Change-Id: I9c40b9d67a8364f698cc9bf604e4e1f4caea413e
Closes-Bug: #1528435"
c2483b73c2ca6586d7b169511be50f85230fd0f7,2015-12-23 23:16:15+08:00,"Remove check on dhcp enabled subnets while scheduling dvr

In check_ports_exist_on_l3agent we have an optimization fix
that checks for the subnets associated with the router and if
the subnets have dhcp enabled we go ahead and create the
router if it is a dvr_snat agent.

This was introduced in liberty since we saw some race condition
in the gate with single node failures.
It may not be completely right, since the dhcp agents can
run on non dvr_snat nodes as well.

Based on recommendation from the reviews, and a recent upstream
patch that sends notification on port create, we would want to
remove this and monitor the situation.

This would reduce the load on check_ports_exist_on_l3agent for
non dvr_snat nodes.

Depends-On: I40b8684f6ec9ddd31753f7bbbdb364d1c0ec838a
Related-Bug: #1513678

Change-Id: I0f50dc1101b2013caf03a64a4f48e2d03ea87b26"
aee20b968a12a683b953b576b7e0090345fd3418,2015-12-23 16:06:26+00:00,"Ignore non rules related qos_policy changes

QoSAgentExtension should invoke QoSAgentDriver
to reflush qos policy rules only if there is any rules related change.
QoS policy changes, such as description change, should not cause
reconfiguration of the qos policy rules.

Closes-Bug: #1509232
Change-Id: I036b0449c7b5521adeb32602a0c0e6cf2d27510a"
a94777a005f5619e70dab609211b8550cb75981d,2015-12-23 16:52:02+00:00,"Add test cases to testing firewall drivers

Part of this patch is also preparation for having common test plan for
firewall driver testing.

Following test cases were implemented:
 - dhcp works by default
 - dhcp server is prevented on vm by default
 - ip spoofing from vm
 - allowed address pairs allows traffic to given ip
 - arp can go through
 - ingress/egress traffic with src/dest port ranges

Related-bug: #1461000
Change-Id: Ib00c99f236855e6556f43f4ffc55014c73b077bb"
a459950da3900ad09475975f69570bfac7714ca3,2015-12-23 16:52:02+00:00,"Add firewall blink + remote SG functional tests

This tests that firewall still does its purpose even when rules are
being updated. That means there is no short period of time where
security groups are inactive during update.

Part of this patch introduces Pinger class. This object provides
capability of sending ICMP packets asynchronously and after
it's stopped it provides statistics like how many packets were
sent and how many were received. Note the difference between
assert_ping() functions, which are synchronous.

Another testing of remote security groups is also added.

Related-bug: #1461000
Change-Id: I6251ee264396f8dbc9b284758b96e5cdc6ac500b"
02439b6730444d29f139dcc12536f0d2d02a51f7,2015-12-23 10:16:15-07:00,"Add address scope to floating IPs in RPC response to L3 agent

The L3 agent needs to know the address scope of the fixed ip of each
floating ip because floating ips are a way to cross scope boundaries.
Without the scope information, there could be ambiguity and no way to
know which scope to send it to.

[1] https://review.openstack.org/#/c/189741/

Change-Id: Id9f8c12954a6efbf4d9b99c011652eefbe5f5145
Partially-Implements: blueprint address-scopes"
fbcf8e6b141906632af2d387767b58ece269538d,2015-12-24 02:17:56+00:00,"Fix Security-rule's port should not set to 0 when Protocol is TCP/UDP

security rule port can be set value 0 when protocol is TCP/UDP

This patch add port check in def_validate_port_range(self, rule),when
protocol is TCP or UDP,port value 0 should not accepted

APIImpact
Change-Id: I57836d730db602de2a6704fd11a13c74ac38a716
Closes-Bug: #1527016"
2631a495d839254a8d0e22e87e149b063758236d,2015-12-24 12:51:26+08:00,"Change log level from error to warning

The service respawning action of ProcessMonitor is normal handling. So
the log level in external_process.py should not be error.

Closes-Bug: #1528850
Change-Id: Ie335f521b09310a577eb4fb03946dfba484eef61"
18e2117e3df3c119f843aed669d0c6bae9243053,2015-12-24 01:00:32-08:00,"Call _allocate_vr_id outside of transaction

_allocate_vr_id is called from _set_vr_id, which was starting a
transaction before calling it. This caused an error when the retry
logic was triggered inside of _allocate_vr_id since it would
encounter a DB exception and put the transaction into a bad state
that couldn't be used on the retry.

This patch just stops _set_vr_id from starting a transaction because
it didn't serve a purpose. It also stops _allocate_vr_id from allowing
subtransactions when it starts a transaction, since it's retry logic
isn't compatible with them.

Co-Authored-By: Ann Kamyshnikova <akamyshnikova@mirantis.com>
Closes-Bug: #1528201
Change-Id: If7bcae39098f40f5ee9db78d3190bf9fdaf6438b"
a8c715ab0fae82563252e815a12ddeb37ee5cc23,2015-12-24 09:55:06-08:00,"Don't call add_ha_port inside a transaction

Calling add_ha_port inside a transaction will break the delete_port
error recovery logic. This patch prevents the scheduler from doing
that. It also adds a note to add_ha_port and a runtime check to
prevent the function from working with an active transaction.

Change-Id: I39e2bb70527a8ff4a47668f44abb81d0fede3786
Closes-Bug: #1529037"
226c999de3e342bf7ce667e21f4ab685b7fd5622,2015-12-25 17:20:05+03:00,"DVR: optimize check_ports_exist_on_l3_agent()

Currently the function gets all ports on the subnet and iterates
through them to find dvr serviceable ports on a particular host.
This patch makes it a single DB query to see if any port exists
matching criterias.

Partial-Bug: #1513678
Change-Id: Ie17885497aacb8fda4a2c4a05f19d08991038557
Co-Authored-By: Oleg Bondarev <obondarev@mirantis.com>"
477b390b328e4e66a2242d346a08b81a29408908,2015-12-25 23:40:22+09:00,"Allow to control to use constraint env for functional jobs

VPNaaS functional tests now use dsvm-functional instead of
*-constraints. Always assuming *-constraints breaks the functional
jobs which is not run in a constrainted environment yet.

Paritial-Bug: #1529027
Change-Id: I3a4f1d61d13f1e444f7624d68d121d04d81eb724"
4fe1864351758990431e2e34c7eabe559376e0ca,2015-12-30 08:35:44-08:00,"Fixing the deprecated library function.

os.popen() is deprecated since version 2.6. Resolved with use of
subprocess module.

Change-Id: I2ff32c4dc37c543696125ac755dc4adb69ddacdf
Partial-Bug: #1529836"
0de1d8d4ca8f7bb51c3e39259d0e0f48039ba5d0,2015-12-30 12:06:16-06:00,"dhcp: Default to using local DNS resolution

It's pointless to not include default DNS resolution for Neutron.
This adds a new config option (dnsmasq_local_resolv) which defaults
to 'True' and will allow for DNS name resolution to work out of
the box. The caveat is that if the 'dnsmasq_dns_servers' is set it
will override the 'dnsmasq_local_resolv' setting, thus allowing
operators to explicitly set their own DNS servers.

DocImpact: Default to using local DNS resolution with the DHCP agent.

Change-Id: I17a884f467d307432a06f67a9dd93ed2fa6081a3
Closes-Bug: #1466117
Signed-off-by: Kyle Mestery <mestery@mestery.com>"
8f036fd34011bbf138815b21e2ef4c9760a5e0e6,2015-12-31 17:01:00+07:00,"Mitigate restriction for fixed ips per dhcp port

When number of fixed ips per dhcp port exceeds max_fixed_ips_per_port,
a dhcp resync will be triggered.

The bug report stated how simply this issue can be triggered.
Moreover, ""max_fixed_ips_per_port"" value should be used for non-DHCP
port only and DHCP port is not affected by this parameter.

Change-Id: Iaa9ed6949383ba6a7ce0b3ffd9dcced663126317
Co-authored-by: NGUYEN TUONG THANH <thanhnt@vn.fujitsu.com>
Closes-Bug: #1179713"
42e51bf06fd512f1d5a3c4e2e9cb07205f2a5bc8,2015-12-31 09:08:18-05:00,"Misspelling in message

Misspelling in following message:
""# interconnect physical and integration bridges using veth/patchs"".
Should be:
""# interconnect physical and integration bridges using veth/patches"".
Totally 1 occurrence in Neutron base code.

Change-Id: If752b8c65cf4993447b93dfc9a06de15389f2675"
6689724f0e5ec2a9f3f7f64d4954e54ef9fdd554,2016-01-04 15:05:05+05:18,"Keep py3.X compatibility for urllib

Change-Id: I463d00865b8f384d22798be4dd86b62f821af67c
Partial-Bug:#1280105"
34d4a6a78b288f87bd2f122a18916f940cc2b5fc,2016-01-04 19:19:56+08:00,"Check missed ip6tables utility

In some scenario, like in OpenStack Kolla, system may lack
iptables-ipv6 package. This may cause command ip6tables-save
or ip6tables-restore invalid and ovs-agent error.

This patch allows checking ip6tables support from CLI:
    neutron-sanity-check --ip6tables_installed

Or using configuration options, for example:
    neutron-sanity-check --config-file /etc/neutron/neutron.conf
    --config-file /etc/neutron/plugins/ml2/ml2_conf.ini

Change-Id: Ia6cf1ed6b5033442f03eac61d2d0d783c146d797
Closes-Bug: #1530042"
ceb9c40d66d0bfad79165ced2ae8e02e44b55686,2016-01-04 16:50:09+00:00,"Kilo initial migration

Juno will be deprecated with Mitaka release, so juno_initial migration
should be replaced with kilo_initilal migration in Mitaka.

Optimized execution time of ""upgrade head"" command.
Test on my local machine on MySQL shows about 28% reduce (from 188
seconds to 137 seconds).

Related-Bug: #1501380

Change-Id: I26571f1c43764a01d1ae9869ce43ff18ea677892"
0d5d0149550345272d7cd04aa92e489777561e58,2016-01-04 20:05:10+00:00,"Support rootwrap sysctl and conntrack commands for non-l3 nodes

Iptables-firewall use commands sysctl and conntrack.
These are missed out in the plugins resulting in (No filter matched) errors in
non-l3 nodes. L3 nodes do not have this problem as l3.filters rootwraps these
commands.

Closes-bug: #1528641

Change-Id: I1167544a41f2ea91781ae2bb7aa208e25fec1524"
629d86d480c06569ba6bd5d9cd55a543dbf6221b,2016-01-05 16:11:09+08:00,"radvd prefix configuration for DHCPV6_Stateful RA

When an IPv6 subnet's ipv6_ra_mode is set to DHCPV6_STATEFUL,
the hosts on that subnet rely on router advertisement for the
prefix length. This is important for subnets where the lengths
of the prefixes are not 64.

Closes-Bug: #1531093
Change-Id: Ied8d390a05ee1a2e544e39e887abf11c8a56abc3"
218b5d06f5016ddbd88e668b686ce60e7c630794,2016-01-05 10:41:44+00:00,"Fix API tests

Patch https://review.openstack.org/#/c/256164/
broke the Neutron API job by unsetting Tempest configuration
values that were unused by Tempest, but used by Neutron's fork
of Tempest. This patch copies credentials from the 'auth' section
to the 'identity' section.

The longer term plan is detailed here:
https://etherpad.openstack.org/p/neutron-tempest-defork
TL;DR: Removed overlap of tests between the Tempest and Neutron
repos, then use Tempest's plugin architecture for the tests that
will remain in the Neutron repo.

Change-Id: Ieb396cfd17f9cb66776ead11e7f760c1c26a0b08"
5d53dfb8d64186b5b1d2f356fbff8f222e15d1b2,2016-01-05 14:18:41+00:00,"Avoid duplicating tenant check when creating resources

The check of the tenant done in the method _get_tenant_id_for_create()
is already did by the Neutron Controller in prepare_request_body(),
with a call to attributes.populate_tenant_id().
Moreover, when the Controller processes a ""create"" requests, it
will add the 'tenant_id' to the resource dict.
Thus, _get_tenant_id_for_create() can be deleted.
Calls to this method are replaced by the res['tenant_id'].

Changes have to be done in UT to explicitly add the tenant_id while
creating resources, since the UT framework is bypassing the controller code
that automatically adds the tenant_id to the resource.

Co-Authored-By: Hong Hui Xiao <xiaohhui@cn.ibm.com>
Closes-Bug: #1513825
Change-Id: Icea06dc81344e1120bdf986a97a6b1094bbb765e
Depends-On: I31022e9230fc5404c6a94edabbb08d2b079c3a09
Depends-On: Iea3f014ef17a1e1b755cd2efe99afd1a36ebbc6a
Depends-On: I604602d023e0cbf7f6591149f914d73217d7a574"
398d10e323216d46f0152a90f15e17e0c18aa0a2,2016-01-05 17:25:52-03:18,"Add systemd notification after reporting initial state

This patch adds a notification for systemd after the agent has reported
its initial state to the Neutron server. This enables configuring
orderly startup of services that are dependent on the server having a
healthy openvswitch agent running.

Related-Bug: #1525901

Change-Id: I8d08f1b2ae196b1e48f9d91e06966687c0a8bd43"
240facf9e67aa5b205679f397107abfe059a869a,2016-01-05 14:53:19-08:00,"Allow tox to pass more arguments to ostestr command

Co-Authored-By: Kevin Benton <blak111@gmail.com>
Change-Id: Ie9969e0a5254ab5dd33b287f6d3120362b73edd7
Closes-bug: #1490389"
66a91c6c386e2e6cd9653dc02fa382c13f68e14a,2016-01-06 10:45:09+02:00,"SR-IOV agent: display loaded extensions

The SR-IOV agent support l2 agent extension due to
this patch https://review.openstack.org/#/c/210483/

This patch allow to show the loaded l2 agent extensions
when executing neutron agent-show <SR-IOV agent id>

Closes-Bug: #1527307
DocImpact update the agent configuration to show
          l2 agent extensions
Change-Id: I5dcb79ef539e4f18693e4a8eff03fff40873d3fa"
6659a935589bf0e4ab57616c256b94f77d2ef107,2016-01-06 14:08:07+00:00,"Fix meter label rule creation

In the case of outbound traffic, set remote_ip to dst.
In the case of inbound traffic, set remote_ip to src.

Change-Id: I7f27b93efa67baf3efccaa94f6a1337d6886e230
Closes-Bug: #1528137
DocImpact: Clarify remote_ip_prefix description of metering label rule in API site"
380e384f180c1b70082891f9818dc3973dd5335a,2016-01-06 16:14:26+00:00,"Revert ""Revert ""Revert ""Remove TEMPEST_CONFIG_DIR in the api tox env""""""

This reverts commit be63289c273fa02159a6958e0b456d5fda217431.

Yes, it's a third order revert. Ain't it cool?

Now that tox 2.3.1 is used in gate, and it is expected to fix the issue
that we originally hacked around here, let's revert to the previous
code.

For the least, it makes API target executable locally without the need
to set TEMPEST_CONFIG_DIR in the external environment.

Also bump minimal tox version to 2.3 to avoid users hitting the old
issue with their tox 2.2.* package.

Change-Id: Ic64cb466d117ad39436cb1d079c8f5657260da2c
Related-Bug: #1515335"
8e5424865386dfce5c01864a63474711caad760b,2016-01-06 13:27:54-08:00,"Allow get_unused_ip method to skip v6 and fix iter

Skip IPv6 subnets when looking for an unused IP in the
floating IP tests since floating IPs cannot be requested
with v6 addresses.

This also fixes the iterator for the non-allocation pool
case.

Closes-Bug: #1531706
Change-Id: Id0b2c28970ab61e45755818e3e0798daa4453ce7"
bf2f1f1f8713b65c0414f1dc2fb955307875735e,2016-01-06 16:12:29-07:00,"Remove references to model_base through models_v2

I saw a patch set [1] that was running in to circular imports and
removing these.  I thought it'd be better to remove them all in one
shot.

[1] https://review.openstack.org/#/c/261222/1/neutron/db/agents_db.py

Change-Id: If1a9ba3091ac99f01f73b98a7459358c3efd4dd5"
dc0c7b5588409fe64d7680e94f50279ab9ec4043,2016-01-07 00:20:16-05:00,"Delete metadata_proxy for network if it is not needed

Currently, once the metadata_process is created for the network,
it will never be eliminated unless the network is deleted. Even if
user disable the metadata for network and restart dhcp agent, the
metdata proxy for network will still be there. This will waste the
resource of neutron host. This patch will let the dhcp-agent
delete useless metadata_proxy at startup.

Additional functional tests are added to for related scenario.

Change-Id: Id867b211fe7c01a11ba73a5ebc275c595933becf
Closes-Bug: #1507950"
d7604169988726d121cdc9727accfeb6e29f4aed,2016-01-07 09:38:39+01:00,"SR-IOV: Fix macvtap assigned vf check when kernel < 3.13

when creating macvtap passthrough to SR-IOV VF in Kernel >= 3.13 an
upper_macvtap symbolic link is created. For Kernel < 3.13 the only
way to know it is by parsing the ip link show output and look for
macvtap[0-9]+@<vf ifname>.

This patch used the ip link show command to detects
macvtap assigned vf so that detection of macvtap assigned vf
will work on all kernels

Closes-Bug: #1523083
Change-Id: Icbc8d6af5c00d1453095e04dd779210dc7244c7f"
7a2824afc46342a8cef1937384b1475e68862b27,2016-01-07 15:08:54+01:00,"Adopt oslotest BaseTestCase as a base class for DietTestCase

This will make us more in line with other projects in terms of testing
API. It also allows to remove some duplicate code from base test classes
for Neutron, leaving just Neutron specific fixture setup there.

Note: we don't add a new dependency because the library is already used
in some of database functional tests through oslo.db base test classes.

Change-Id: Ifec6cce386d8b024605496026c8469200f3c002b
Closes-Bug: #1531484"
75dcd5f2ecbdc7491b520e3c317929e1e644b025,2016-01-07 09:21:32-08:00,"Add unit test cases for linuxbridge agent when prevent_arp_spoofing is True

Currently there is no test coverage for when prevent_arp_spoofing is set to true.
This fix address that issue.

Change-Id: Ie8bfa873120378dcdcb9d43e307daa5d55c038f2
Closes-Bug: #1520255"
5bd76c52844ffcfb2bd0ce1753b5159ef510b323,2016-01-08 00:25:27+00:00,"Fix uuid passing in disable_isolated_metadata_proxy

In DhcpAgent, when enable_isolated_metadata_proxy() spawns
a metadata proxy agent for a network, it will pass router_id
instead of network_id if metadata network is enabled and
a router port is connected to this network.

Later, MetadataDriver will register this uuid (i.e. router_id)
with monitor for the new metadata proxy process.

But when disable_isolated_metadata_proxy() destroys a metadata
proxy agent for a network, it always passes network_id as the uuid.
Thus MetadataDriver can not find the matching process. So the
corresponding metadata proxy agent can not be destroyed.

Closes-bug: #1526084
Change-Id: Icab94f4e09e95fa6729c458522a3fe50e850a4be"
447f4b14614988f38a26d5d1b8e439ad0a44d8ad,2016-01-07 17:30:58-08:00,"Move notifications before DB retry decorator

This patch moves the start notifications emitted in the API
layer ('network.create.start', etc) to before the DB retry
decorator. This prevents benign retry events from resending
notifications onto the message bus.

Change-Id: I8159692a107ede397a4abeff71310a99fffa4862
Closes-Bug: #1532051"
c4aa41a25a7828adddcd0f314082b63e78a23676,2016-01-09 03:38:19+09:00,"Make neutron-debug command follow cliff command convention

In the guideline of cliff command, developers implementing
commands should override take_action() rather than run().
The similar effort is being done in neutronclient side and
this fix is required to complete the effort.

Logger definition in each command class is no longer needed.
This commit also drops them.

Closes-Bug: #1532258
Change-Id: I613b7e18b3c058568fc3669ad1524e60a93eb9f8"
89f96e627fc1e402ca456d60127ccde5bd534415,2016-01-10 14:09:38+00:00,"Ensure agent binding modules are loaded

This patch ensures that models_v2 and the router db module
import the agent binding modules so their models are defined
in the sqlalchemy metadata. Otherwise, using an agentless
core/L3 plugin may result in a failure to initialize if nothing
imported the agent module.

Change-Id: I77240462b618d6e95c7c5862441d6d179e371f4f
Closes-Bug: #1529022"
0a00205c2a209f20a9d900ddb30f25628a32ebd9,2016-01-11 09:42:29+03:00,"Fix get_subnet_for_dvr() to return correct gateway mac

Fix filters to get the right gateway port for a subnet.
Wrong filters led to random port's mac being returned which may cause
side effects. See bug for details.

Closes-Bug: #1530179
Change-Id: I8368255f00ab3e9586c8ff28dfe6739541000810"
9390dde943915da9fe0e21b8d4822a3f31a347cf,2016-01-10 23:18:15-08:00,"make floating IP specification test robust to races

The get_unused_ip function returns an address that isn't in use on
the network at the time it's called. However, by the time the caller
uses it, it may have been allocated to another concurrent test if
the network is shared or external.

The test_create_floatingip_with_specified_ip_address test creates
a floating IP with an unused IP on the external network, which has
lots of activity on it from other tests so it would occasionally
have its address taken by another test.

This patch just catches the in use error and tries again with a
new IP.

Change-Id: I5a2f78a6da1e400dea07949f35964abb767edbb2
Closes-Bug: #1532033"
56eb877d250794a38bcf4f6b94aee1add4723ae0,2016-01-11 18:36:38+03:00,"Remove duplicate for check_ports_exist_on_l3agent

This removes check_ports_on_host_and_subnet which mostly duplicates what
check_ports_exist_on_l3agent is doing.
Also rename check_ports_exist_on_l3agent to check_dvr_serviceable_ports_on_host
for more clarity.

Closes-Bug: #1524291
Change-Id: Ie02c68279c2bbafffc7be4d9a81fe25a0e983d58"
0e97feb0f30bc0ef6f4fe041cb41b7aa81042263,2016-01-12 12:56:45+03:00,"L3 agent: paginate sync routers task

In case there are thousands of routers attached to thousands of
networks, sync_routers request might take a long time and lead to timeout
on agent side, so agent initiate another resync. This may lead to an endless
loop causing server overload and agent not being able to sync state.

This patch makes l3 agent first check how many routers are assigned to
it and then start to fetch routers by chunks.
Initial chunk size is set to 256 but may be decreased dynamically in case
timeouts happen while waiting response from server.

This approach allows to reduce the load on server side and to speed up
resync on agent side by starting processing right after receiving
the first chunk.

Closes-Bug: #1516260
Change-Id: Id675910c2a0b862bfb9e6f4fdaf3cd9fe337e52f"
2540c84c7624892cd64514a5864731433f3889bb,2016-01-12 08:23:57-05:00,"Fix regression with unbound ports and l2pop

When l2pop is enabled and an unbound port is deleted l2pop mech
driver raises an exception as a result of patch:
https://review.openstack.org/#/c/263471/

As a result of the same patch, when an unbound port's IP
address is changed l2pop sends a fanout RPC message needlessly.

Change-Id: Ia81c03dcdf7aef9528c9c2b9527399251fa6aad7
Closes-Bug: #1533013"
18ec2e424e48fd9999235deeffffbffcff91d56f,2016-01-12 21:03:54-05:00,"Register RA and PD config options in l3-agent

In order for the l3-agent to see the RA and PD config options,
it needs to register them when it starts.  Noticed this when I
went to override something for a test and it wouldn't work.
It now passes the config down to radvd on start so the correct
values are picked-up.

Change-Id: Iec0e0d16eed4f12af77fcd4f0b93b641b1146293
Related-Bug: #1532338"
aaaa07277b4493e40675a8d29dd8b40681ef8610,2016-01-12 23:46:33-08:00,"eliminate retries inside of _ensure_default_security_group

Since we have to worry about REPEATABLE READ and have logic to
deal with that by throwing a RetryRequest, let's just simplify
the code and eliminate the other retry mechanism completey.

Related-bug: #1475938
Change-Id: I0aab460f60e690a369f09d59a75bb4ca5a7c33f6"
96ba199d733944e5b8aa3664a04d9204fd66c878,2016-01-13 12:43:23+03:00,"Use admin context when removing DVR router on vm port deletion

In case non-admin tenant removes last VM on a shared network (owned
by admin) connected to a DVR router (also owned by admin) we need
to remove the router from the host where there are no more dvr
serviceable ports. Commit edbade486102a219810137d1c6b916e87475d477
fixed logic that determines routers that should be removed from host.
However in order to actually remove the router we also need admin
context.

This was not caught by unit tests and one reason for that is so called
'mock everything' approach which is evil and generally useless.
This patch replaces unit tests with functional tests that we able
to catch the bug.

Closes-Bug: #1424096
Change-Id: Ia6cdf2294562c2a2727350c78eeab155097e0c33"
b4db9c2644a04002232aee049315d89b2ac54bbe,2016-01-13 18:12:04+05:18,"Fix params order in assertEqual

Fix params order to correspond to real signature:
assertEqual(expected, actual)

Change-Id: I7888ca97afad663185a508002c6d9c62357e0cde
Closes-Bug: #1277104"
9605617ec729d83e67f00dabb84784abd7515a88,2016-01-13 13:15:49+00:00,"Add 'ovs' to requirements.txt

It is needed by neutron/agent/ovsdb/impl_idl.py.

Closes-Bug: #1523845
Change-Id: If44b649949c686b589859fc1d4d2bb510afb64fd"
24b482ac15b5fa99edd2c3438318a41f9af06bcf,2016-01-13 14:56:18+00:00,"Scope get_tenant_quotas by tenant_id

Using model_query in the operation for retrieving tenant limits
will spare the need for explicit authorization check in the
quota controller. This is particularly relevant for the pecan
framework where every Neutron API call undergoes authZ checks
in the same pecan hook.

This patch will automatically adapt by eventuals changes
introducing ""un-scoped"" contexts.

Closes-bug: #1505406

Change-Id: I6952f5c85cd7fb0263789f768d23de3fe80b8183"
293c3e01efce74d110ff34703a9e68ce2cd782e6,2016-01-13 16:05:07+00:00,"Pecan: Fixes and tests for the policy enforcement hook

As PolicyNotAuthorizedException is raised in a hook, the
ExceptionTranslationHook is not invoked for it; therefore a 500
response is returned whereas a 403 was expected. This patch
explicitly handles the exception in the hook in order to ensure
the appropriate response code is returned.

Moreover, the structure of the 'before' hook prevented checks
on DELETE requests from being performed. As a result the check
was not performed at all (checks on the 'after' hook only pertain
GET requests). This patch changes the logic of the 'before' hook
by ensuring the item to authorize acces to is loaded both on PUT
and DELETE requests.

This patch also adds functional tests specific for the policy
enforcement hook.

Change-Id: I8c76cb05568df47648cff71a107cfe701b286bb7
Closes-Bug: #1520180
Closes-Bug: #1505831"
5fe6f8015ac3e532c4cf95201209f49e6b69955f,2016-01-13 09:10:25-08:00,"Pecan: fix quota management

This patch fixes quota management APIs in the Pecan framework.
To this aim:

1) an ad-hoc pair of collection/item controllers are introduced
   for the quota resource; as the new controllers have been added
   in a separate module, the neutron.pecan_wsgi.controllers.utils
   module has been added as well for helpers, routines and classes
   used by all pecan controllers;
2) the quota API extension is made pecan-aware, meaning that it
   simply returns a Pecan controller instance rather than deferring
   the task to the startup process that builds controllers using the
   home-grown WSGI framework ext manager;
3) the quota resource is now ""almost"" a standard neutron resource;
   unfortunately since it does not yet have its own service plugin a
   special provision is made in the attribute population hook in
   order to ensure the object is loaded for allowing correct
   policy enforcement.
4) Functional tests for the quota controller have been added.

Closes-Bug: #1505843

Change-Id: I44a1fd73f678e493d5b1163e5f183d9efdc678ac"
45238be4d69043a5f29ab17e052e52b94455baec,2016-01-13 18:51:18+00:00,"Pass environment variables of proxy to tox

When a development environment is under a proxy, tox is failed
even if environment variables of the proxy are set. This is a
new feature above tox 2.0, you can check it from [1].

This patch fix this problem.

[1]. https://tox.readthedocs.org/en/latest/example/basic.html#passing-down-environment-variables

Change-Id: I9dae04de7053773cb5ba13a809145b86cb149614"
158f9eabe20824b2c91eaac795dad8b8a773611d,2016-01-13 18:57:35+00:00,"Static routes not added to qrouter namespace for DVR

Today static routes are added to the SNAT namespace
for DVR routers. But they are not added to the qrouter
namespace.

Also while configuring the static routes to SNAT
namespace, the router is not checked for the existence
of the gateway.

When routes are added to a router without a gateway the
routes are only configured in the router namespace, but
when a gateway is set later, those routes have to be
populated in the snat_namespace as well.

This patch addresses the above mentioned issues.

Closes-Bug: #1499785
Closes-Bug: #1499787

Change-Id: I37e0d0d723fcc727faa09028045b776957c75a82"
30e048d222c23c8fa07f70fa2d6a820fa0c88e0c,2016-01-13 15:29:10-05:00,"Fix floatingip status for an HA router

When we associate a floatingip in an HA router setup, it is properly
associated. However, when we check the status of the Floating ip, it
is shown as empty.  The L3 agent ha_router implementation never sets
the status of the floating IP when it's added.  This behavior blocks
tempest scenario tests that use FIPs when run against a deployment
with L3 agent HA routers.  This fix sets the FIP status to active
when the FIP is added by an HaRouter instance.

Co-Authored-By: Assaf Muller <amuller@redhat.com>
Closes-Bug: #1449049
Change-Id: I7a3de36b64132e483a927ce9fed30777e84df96a"
c615c6f3a7a05dac8684366dde78080f347964dd,2016-01-14 00:18:50+01:00,"ML2: verify if required extension drivers are loaded

This change ensures extension drivers required by service plugins are loaded
when using ML2 plugin: we check that ML2 loads QoS extension driver when QoS
service plugin is enabled.

Change-Id: Ibf19e77b88ce34c58519ae157c852c9e2b30e31f
Closes-bug: #1496787"
d3701f001d7e6f9d4af8521354c1a84accd6e830,2016-01-14 00:07:19-05:00,"Remove 'validate' key in 'type:dict_or_nodata' type

In resource_map dict, if the 'validate' section of type:dict_or_nodata
contains 'validate' key, the validation will not be performed correctly,
because in _validate_dict_item(), it checks key name that starts with
'type:', and perform the validation.

This patch removed 'validate' key in 'external_fixed_ips' section in
neutron/extensions/l3_ext_gw_mode.py

Change-Id: I1ee49f8313bddef6f41b133f49830a8fbbe4769e
Closes-Bug: #1533518"
feced76488ea99355c605e0bc719723931621693,2016-01-14 06:46:45+00:00,"tests: stop validating neutronclient in neutron-debug tests

In neutronclient 4.0.0, any command executed triggers DeprecationWarning
on stderr (to be fixed by I77f168af92ae51ce16bed4988bbcaf7c18557727 and
a new client release including it).

The test cases assumed that if command is successful, it never writes to
stderr though. Making the test failing when using the latest client.

Instead of fixing the test class not to assume there is no output on
stderr, remove it because we are not meant to validate neutronclient in
neutron gate at all and should rely on the library as shipped. Client
should already have reasonable coverage for its CLI.

Change-Id: I6440445b80637a5a9f4de052cf5ea1fbd8dcf7d1
Closes-Bug: #1533638"
be9c9e3458ce61a299faebd974322f376c34c15e,2016-01-14 15:36:34+00:00,"Do not prohibit VXLAN over IPv6

9fc45cee in introduced a regression prohibiting using VXLAN over
IPv6. Relax restriction on local_ip, but validate that both
local_ip and vxlan_group of the same address family. Move existing
validation of vxlan_group into validate_vxlan_group_with_local_ip()
method and refactor existing tests for that validation.

Change-Id: I3d67732d2e1f3e079fee336b403744596fb7db77
Depends-On: I6440445b80637a5a9f4de052cf5ea1fbd8dcf7d1
Closes-Bug: #1531660"
d2a1d6fcb7e746a5340db0990a8f5d0fc786738d,2016-01-15 00:06:03+08:00,"Unify using assertIsInstance

Use assertIsInstance(A, B) to replace assertTrue(isinstance(A, B)).

Prefer specific assertions such as assert(Not)IsInstance over generic ones
(assertTrue/False, assertEqual) because they raise more meaningful errors.

Change-Id: I56278b1a74108e2765a8a740658f33954f5404c7
Closes-bug: #1268480"
a2cfd9fcd67f392d9ad70868fa358afc7aa1b4c3,2016-01-14 16:10:23+00:00,"Unify exceptions for assign router to dvr agent

validate_agent_router_combination use two different exceptions
for assigning a router to an agent in 'dvr' mode:
  RouterL3AgentMismatch: assign dvr router to legacy agent.
  DVRL3CannotAssignToDvrAgent: assign dvr router to (another) dvr agent.

This should be unified to one single exception, for routers on agent in
'dvr' mode should be only scheduled, not allowed to be manually assigned.

Change-Id: I3673c4c6852105f86b3aac390d0aabc75944de9d
Closes-Bug: #1529439"
3d7ef0400e45b47fa369cfc498adbf76ad52f336,2016-01-14 09:32:48-08:00,"Added Keystone and RequestID headers to CORS middleware

CORS middleware's latent configuration feature, new in 3.0.0,
allows adding headers that apply to all valid origins.
This patch adds headers commonly used in openstack to neutron's paste
pipeline, so that operators do not have to be aware of additional
configuration magic to ensure that browsers can talk to the API.

For more information:
http://docs.openstack.org/developer/oslo.middleware/cors.html#configuration-for-pastedeploy

Change-Id: Ic08fcb7833563bbeca3e0ba2d03438d4be594418"
567cf7b140d404828c9fa9b4af44258834aa1002,2016-01-14 14:51:09-05:00,"Fix Linux bridge test_report_state_revived failure on OSX

Mock-out the Linux-specific bridge check in the class so
it succeeds on all OSes.

Change-Id: Id48845b3e73caa7ea6fad692feb21dc1f2b12ecc
Closes-Bug: #1534281"
5535a71e753d7c6ef679437ee93faffc6bc31f62,2016-01-14 18:24:22-05:00,"DVR: when updating port's fixed_ips, update arp

Currently, when updating a port's fixed_ips, the l3 agents fail to
update the arp tables of this change, which can lead to east-west
connectivity issues when a router is connected to more than one tenant
network.

Closes-Bug: #1512199
Change-Id: Ic7a4bbfca8b477c41b233235d2e2a2864f7af411"
f67fc3cb08ce4f0e6fc685801a243fe68503578e,2016-01-14 20:40:49-08:00,"Retry port create/update on duplicate db records

Even though we have a duplicate IP check before creating an IP
allocation, there is a window between when that check is completed
and when the record is committed to the database. During this window,
another thread or server may use the same IP address, which will result
in the database commit failing with a DBDuplicateEntry exception.

This patch adds a decorator to convert the exception into a
RetryRequest, which will be caught at the API layer to start the
operation over, at which point the normal duplicate check will find
the IP and return the correct error to the user.

This was done instead of trying to convert the DBDuplicate to the
correct exception since it's on commit and there are possibly many
different sources of the duplicate record beyond the IP allocation
(depending on what mechanism drivers did during pre-commit, etc).
By retrying the request, we ensure that the prechecks run again that
will raise the appropriate exception.

Change-Id: I37a964497bf60a61bc49bdeec94a008f167c384f
Closes-Bug: #1534447"
36effd66006aaf078cf652de146f35f19f56bdca,2016-01-15 08:40:41+00:00,"dhcp: handle advertise_mtu=True when plugin does not set mtu values

DHCP agent may be used by plugins that don't set mtu value for networks.
Handle the case by not passing the DHCP option when network does not
have the value set.

Most plugins do set the value though, since it's enforced in base db
plugin class.

Closes-Bug: #1534197
Change-Id: I282b3d6b81f91eb8cea901d955cbcca6ecb2a95d"
294324d6970980e8f95f441727204c66478b4684,2016-01-15 16:47:57+08:00,"fix get_ha_sync_data_for_host for non-dvr agent

get_ha_sync_data_for_host will call _get_dvr_sync_data
even given agent is not in DVR agent_mode.
_get_dvr_sync_data has additional processing for dvr
like:
    dvr_router_ids = set(router['id'] for router in routers
                         if is_distributed_router(router))
    floating_ip_port_ids = [fip['port_id'] for fip in floating_ips
                                if fip['router_id'] in dvr_router_ids]
which should only work for DVR scenario.

That will increase neutron-server processing time for
non-DVR scenario. Adding logic to judge whether given
agent is in DVR agent_mode, call get_sync_data directly.

Closes-Bug: #1510796
Change-Id: I5572e19b7cd8b2ea63fde4463705ab1c56fe5e68"
f8f366024052a191eb0fc74af1643be15c541aef,2016-01-15 13:40:06+01:00,"Make security_groups_provider_updated work with Kilo agents

Initially, we bumped the required version for the agent endpoint from
1.1 (the initial version that implemented security groups) to 1.3
without considering that the code should work with old agents that do
not yet know about the new devices_to_update argument.

Actually, there was no need to bump the version: old agent side code
already captures all unknown arguments that could be passed from the
server, ignoring them:

https://github.com/openstack/neutron/blob/608b54137fb67512c07099089ea7e074176e12df/neutron/agent/securitygroups_rpc.py#L155

(^ the link shows the latest Kilo code as of writing)

Note: some people may argue that the approach that is taken in Neutron
to support backwards compatibility for server notifications is wrong,
and we instead should adopt some stricter mechanism like nova version
pinning. While that is a noble thing to do, it's out of scope for the
patch that is designed to be easily backportable to stable/liberty.

Note: some people may also argue that the patch should go straight into
stable/liberty because we don't claim support for rolling upgrade
scenarios that span multiple releases. That's indeed true, though my
take on it is that if we have a way to handle more unofficial scenarios
without more coding effort, it's worth doing it.

Change-Id: I741e6e5c460658ac17095551040e67e8d1990812
Closes-Bug: #1531772"
29dffc084164c29b4726dc08bb986f7961e9fa9f,2016-01-15 15:22:03+00:00,"Revert ""Change function call order in ovs_neutron_agent.""

This reverts commit 9c72bac0ea37971b2d5430246295c5e8b859b4ed.

Change-Id: I9b6b588b68f63f6688749d011dc8b20ef80edadc
Closes-Bug: #1534322"
300f73d489ce0131035bac59a1f12787e20bf3ab,2016-01-15 09:37:37-06:00,"Refactor router delete processing

The discussion in [2] indicated that [1] would lead to orphaned
items during error cases.  This refactoring replaces the
optimistic approach followed by [1] with a separate delete code
path that does not execute the operations that take place within
the namespace that will be removed.  Operations that take place
outside of those namespaces are still performed to ensure that
no orphaned items result.

A comment has been added to the functional test to explain what
case is being tested.

[1] https://review.openstack.org/#/c/240971
[2] conversation starting at http://goo.gl/bZgvqW

Change-Id: I663f1264fb3963789b79a4a7c3e46d232b2f0620
Signed-off-by: Ryan Moats <rmoats@us.ibm.com>"
303cbc6b5b745aadf026627c4cf2e90e3862b586,2016-01-15 16:47:39-05:00,"Fix L3 HA with IPv6

We currently use garp_master_repeat and garp_master_refresh
to solve bug 1453855. We need to spawn keepalived only after
all of the qr/qg ports have been wired so that the
initial GARP will be properly sent. Otherwise you get a routing
black hole. In lieu of a proper sync method, we used those two keepalived
options to send GARPs repeatedly:

a) We did not know it never stops spamming the network
b) It causes VMs to lose their IPv6 default gateway due to a keepalived
   bug, which has since been fixed, but it would need to be backported
   to every keepalived version on every distro. Here's the patch:
   https://github.com/acassen/keepalived/pull/200

The solution this patch proposes is to drop the repeat and refresh
keepalived options. This will fix the IPv6 bug but re-introduce bug
1453855. So, this patch uses the delay option instead. It turns
out keepalived sends a GARP when it transitions to MASTER, and then
it waits a number of seconds determined by the delay option, and
sends a GARP again. We'll use an aggressive 'delay' setting to make
sure that when the node boots and the L3/L2 agents start, we'll
give the L2 agent enough time to wire the ports as a stopgap solution.
Note that this only affects initial synchronization time, not failover
times. Failover times will continue to be fast because the ports
are wired ahead of time, the initial GARP after the state transition
to MASTER will be sent properly.

Change-Id: I7a086472b8742828dae08ffd915c45e94fb4b94e
Closes-Bug: #1520517
Related-Bug: #1453855"
924f19e8f16aebf103a3b70f2bd236afc846933b,2016-01-18 13:36:39+03:00,"Make object creation methods in l3_hamode_db atomic

Methods _create_ha_network, add_ha_port don't have wrapping
transaction in them, so they are prone to race conditions.
This commit adds a transaction to them. To avoid problem with
rolling back outmost transaction during exception handling,
internal methods have been wrapped in nested transaction.

Nested transaction is required in places like this:

def create():
      create_something()
      try:
            _do_other_thing()
      except Exception:
             with excutils.save_and_reraise_exception():
                     delete_something()

def _do_other_thing():
     with context.session.begin(subtransactions=True):
         ....

When exception is raised in _do_other_thing it
is caught in except block, but the object cannot be deleted in
except section because internal transaction has been rolled back.

A new method safe_creation and has been added
that provides a common way of handling such situations.

Closes-bug: #1501686

Change-Id: I952f6f7f8684743aa7f829bd92b1dc41b2c6aecf"
521e1c9face737a8d432be16ad63829aaf21384e,2016-01-18 13:55:58+03:00,"Do not remove router from dvr_snat agents on dvr port deletion

When dvr serviceable port is deleted/migrated, dvr callback checks
if there are any more dvr serviceable ports on the host and if
there are no - removes the router from the agent on that host.
To prevent snat namespace removal we need to check SNAT bindings
and not remove router from l3 agent hosting SNAT.

Closes-Bug: #1524908
Change-Id: I8c76bccdf495702e4c550df2eadec93c63e32120"
7e7d5dc8613d14aba50d74343deb841bc1faf5e7,2016-01-18 13:34:16+01:00,"Make Neutron attempt to advertise MTUs by default

It seems like a useful option, and it could be a more sane default,
rather than pushing the responsibility to enable this onto deployers and
provisioning tools[1]. In fact, it may be worth doing some more work to
take away some of the hassle of configuring all these things correctly,
and see if it can be automatically determined.

[1]: https://specs.openstack.org/openstack/fuel-specs/specs/7.0/jumbo-frames-between-instances.html

Related-Bug: #1527675
Change-Id: I5cbbc4660f8c4e15e59f8f5ce0419501bdd27348"
e4f2fb9df652354157c076bdf9b3eff464dcd3ba,2016-01-18 15:10:44+00:00,"Add tests for RPC methods/classes

The public methods and classes within the neutron.common.rpc module are
untested. This adds tests for all public-facing functions within the
module.

Closes-Bug: #1535327
Change-Id: I80227dd73e58f8b5dbde9cea01ceac22cc8b2e34"
dcf6ffe18540b2f9b331dedec0e0a7a7f237b130,2016-01-18 16:04:56+00:00,"Fixes typos Openstack -> OpenStack

Occurances of Openstack (incorrect capitalization) are replaced with
OpenStack

Change-Id: I7f33060a2dd430cdd49aebf9420e3cd54d21c72c
Closes-Bug: #1535246"
89ca42fef4496d9e7e12f9e8243b5d6956d90468,2016-01-19 19:01:47+08:00,"Add more log when dhcp agent sync_state.

DHCP agent output no log when synchronizing network state, it's hard to observe
agent work state through log.

Add log to indication status and progress of sync state process:
 * Agent has fetched all active networks
 * Agent configure a network start and finish

Closes-Bug: #1535285

Change-Id: I517073e4a9a7a870cbbfd8cb0e14a7571176f562"
3b2b277979f8d0335fcfcef29893290ef20cb9f7,2016-01-19 14:06:44+00:00,"bump the min tox version to 2.3.1

When tox 2.3.0 uses the tox.ini provided by neutron,
the following bug is hitten :
https://bitbucket.org/hpk42/tox/issues/181
We need to set the min version of tox to 2.3.1.

Change-Id: If2c3f4f534ff23a1f649cebea15e945563173544
Closes-bug: #1535725"
08d720e1caed67364b0e4859f03a861b233075e6,2016-01-19 16:23:43-05:00,"fix _validate_shared_update for dvr router ports

When trying to update external network from shared to not,
_validate_shared_update will be called to validate ports
on external network to confirm that, except router ports,
there is no port from other tenants. If some other tenants
ports still exist on external network, shared attribute
updating will fail.

However, current _validate_shared_update will only ignore router
ports with device_owner such as DEVICE_OWNER_ROUTER_GW and
DEVICE_OWNER_FLOATINGIP when query ports, but indeed ports with
device_owner such as DEVICE_OWNER_AGENT_GW and DEVICE_OWNER_ROUTER_SNAT
should be skipped, otherwise an empty tenant_id like '' will cause
_validate_shared_update fails to work as expected.

Change-Id: Ibf5daf14192ce51d4e9ce10dc0c806ea230adec3
Closes-Bug: #1522482"
858389db7ccd057cedc50312f383cca6eb6486e1,2016-01-20 02:07:12+00:00,"Use tools_path/venv environment variables in install_venv

In the run_tests.sh, it export tools_path/venv/venv_path.
In the install_venv.sh, to get venv value in environ values. In
the with_venv.sh, to get correct envirion values.

Change-Id: Ia041937eaa8cf2194a929c846a7a96312a641ac5
Partial-Bug: #1535514"
77f84fa9353dbf1d4c248c97ba59e857facefdb2,2016-01-19 22:17:20-05:00,"Remove floatingip address only when the address has been configured

For HA router, adding a floatingip will add a vip to keepalived, then
keepalived will add the ip address to port. So there is a time window
that the qg device in qrouter namespace will not have the address of
floatingip.

If user delete the floatingip at the time window, ip command will fail,
because it tries to remove an ip address that doesn't exist on the qg device.

The fix here is to check if the ip address is on the qg device, before
removing the ip address. A functional test is added to address the issue.

Change-Id: I72996d9a77f5f17b4d7a19d5be20b3f97f90dcba
Closes-bug: #1533904"
1962440d7bcfa15fefd0e73756b5a2fb745142f4,2016-01-20 00:40:39-05:00,"Fix check in _validate_ip_address() to fail on OSX

Don't check the IP address version if the data passed doesn't
have either a ':' or three '.', as we have already found an
invalid IP address.  This was failing on OSX because the
netaddr.IPAddress() call does not throw an exception, but
returns data assuming the address was IPv4.

Change-Id: Idd87e06e9cd0aa588014ef6cdc871b531a2908cb
Closes-Bug: #1534846"
7084fa8a17510a7a1a5221736fb3bd330b0ad86c,2016-01-21 00:43:02+08:00,"Add network_update RPC into SR-IOV agent

SR-IOV agent doesn't listen for network_update notification, but it's
desired in QOS when network updated with a new QOS policy. This patch
adds it into this agent.

Change-Id: I06a7ca411da31bccabddec9c0adca6b8e6eab7cc
Closes-Bug: #1504166"
e2a37be73da7bbc0ab562eabef69bfe69dc7cfa1,2016-01-20 15:55:04-05:00,"OVS agent should fail if it can't get DVR mac address

Currently agent will fall back to non-dvr mode in case it can't.
However neutron server does not check dvr mode of ovs agents when
scheduling routers. So in a DVR enabled cluster all ovs agents
should run in DVR mode. Otherwise it will lead to undefined
behavior which is hard to debug.

Closes-Bug: #1536110
Change-Id: I6c31aabf1852c688e9c27fc1859d3fdd830caa68"
17c14977ce0e2291e911739f8c85838f1c1f3473,2016-01-21 11:31:19+00:00,"Ensure that tunnels are fully reset on ovs restart

When the l2population mechanism driver is enabled, if ovs is restarted
tunnel ports are not re-configured in full due to stale ofport handles
in the OVS agent.

Reset all handles when OVS is restarted to ensure that tunnels are
fully recreated in this situation.

Change-Id: If0e034a034a7f000a1c58aa8a43d2c857dee6582
Closes-bug: #1460164"
4a431f75a01fbdd0b802c86e27a93a6daaf70399,2016-01-21 11:48:45+00:00,"sriov-mech: Introduce a new VIF type for PF vnic type

We need to tell Nova to use a specific VIF type for full PF passthrough
(this is the recently added VNIC_DIRECT_PHYSICAL vnic type).

Make sure that when binding ports with this vnic type, we set the
appropriate vif type for Nova to be able to provision those ports
correctly.

Nova change that adds a vif driver for this vif type:

https://review.openstack.org/#/c/262583/

DocImpact: Exposes a new vif type for PF passtrhough vnic type

Change-Id: I895dab98e5e5a9369771539e51ba5c500bfe0045
Related-blueprint: sriov-pf-passthrough-neutron-port"
592b548bb6720760efae4b10bec59e78a753f4d7,2016-01-22 19:13:33+05:18,"Add popular IP protocols for security group

Add these additional protocols listed below to
security groups brings convenience to operators
on configuring these protocols. In addition, make
the security group rules more readable.

The added protocols are: ah, dccp, egp, esp, gre,
ipv6-encap, ipv6-frag, ipv6-nonxt, ipv6-opts,
ipv6-route, ospf, pgm, rsvp, sctp, udplite, vrrp.

A related patch is submitted to neutron-lib project:
https://review.openstack.org/259037

DocImpact: You can specify protocol names rather than
protocol number in API and CLI commands. I'll update
the documentation when it is merged.

APIImpact

Change-Id: Iaef9b650449b4d9d362a59305c45e0aa3831507c
Closes-Bug: #1475717"
eb084af29da6b8b9bb5608f294acaaa44f923895,2016-01-22 13:55:40+00:00,"neutron-db-manage: add has_offline_migrations command

This command should be used by operators and deployment tools to
determine whether full neutron-server shutdown is needed for database
upgrade.

The change also makes neutron-db-manage tool to return the cumulative
result of commands being issued (in most cases it will still be 0 only,
since our command handlers implicitly return None).

DocImpact: Update doc to add new command 'has_offline_migrations' to
'neutron-db-manage' tool. The command determines whether full
neutron-server shutdown is needed for database upgrade.

Closes-Bug: #1519118
Change-Id: I7c5a4882ad4f80459ebe69c9a9c43cc60ce50200
Co-Authored-By: Martin Hickey <martin.hickey@ie.ibm.com>"
88e899f7a0ebfd57f9acbc3e3e762ddb24d70e5a,2016-01-22 06:38:42-08:00,"Fix module's import order

Made corrections in import order for built-in, third party and
project specific modules as per OpenStack import standards [1].

[1] http://docs.openstack.org/developer/hacking/#import-order-template

Change-Id: I899deefd6ee4732d6c0afd17a5afbe42b0fa37ba"
d9e4d20da86f29f7ebdb3c6b07086924888edd39,2016-01-22 15:14:35+00:00,"Make advertisement intervals for radvd configurable

Currently a global setting that is applied for all managed radvd
processes. Per-process setting could be done in the future.

For large clouds, it may be useful to increase the intervals, to reduce
multicast storms.

Co-Authored-By: Brian Haley <brian.haley@hpe.com>

DocImpact Router advertisement intervals for radvd are now configurable
Related-Bug: #1532338

Change-Id: I6cc313599f0ee12f7d51d073a22321221fca263f"
530c1d30875c0ca2936303ed6e396d83018aaed6,2016-01-22 12:49:57-08:00,"DVR: Fix Duplicate IPtables rule detected warning message in l3agent

Duplicate IPtables rule detected warning message is seen in the
l3 agent logs for sometime.

This will be seen when multiple floatingips are created on
the same node for different routers or when a floatingip
is disassociated and re-associated to a fixed-ip on the same node.

The fip namespace is retained in the compute node even though
the floatingip is disassociated, but when we try to re-associate
or create a new floatingip the code in l3agent is trying to check,
if this is the 'first' floatingip and if so tries to re-create the
floatingip namespace and the rules within it.

This happens because we are unsubscribing the fip namespace count
for every associated routers that we are deleting.

This duplicate call to create the fip namespace should be restricted
if there is already a fip namespace in the compute node and the fip
namespace should be unsubscribed only when the external network is
removed before the actual fip namespace is deleted.

The change proposed in this fix, will only unsubscribe the fip
namespace before it is deleted.

Closes-Bug: #1535928

Change-Id: I24016382091cad485f65e7753972f4b71702ff9f"
d21d9798fe321c54941af5873b0202abc47f56d8,2016-01-22 17:44:35-08:00,"Don't decide web_framework before config parse

This ensures that the config files passed on the CLI
are parsed before the choice is made based on config options
to launch pecan/homegrown wsgi handler.

Closes-Bug: #1537292
Change-Id: I577befea74d84d611cd198c92c54ae3651e2d921"
d56b5a6718a678b7e7fe9c4c42cb8036b7228937,2016-01-24 18:35:51-08:00,"Add missing index entry for external dns integration

Change 93ac8b3a missed the entry. Let's add it.

Change-Id: Iaaad3821363a259bb05740883b346cf43b2951af
Closes-bug: #1537320"
d9693d787812347133e9ff765428389a2c332cdf,2016-01-25 13:36:08+00:00,"Add dns_db to models/head.py

commit 93ac8b3a3318c0b762d399fa78b8ce981d44b3d9 adds dns_db
but it forgot to add it to models/heads.
As a result, db migration model sync check is failing.

Closes-Bug: #1537578
Closes-Bug: #1537510

Note that it was not detected in our neutron functional tests.
It is being investigated in bug 1537510.

Change-Id: Ica15afb1fd2335e5fe686ec36b05513a46427bcd"
3233918e305104fda05afce5f6c8313de0299d8c,2016-01-25 11:46:23-05:00,"l3_db: Check dns-integration extension

Do not call methods from DNSDbMixin unless the extension is supported.

Closes-Bug: #1537746
Change-Id: I72f4ae947cb3f58938c75691a4d7da8d6203466f"
5289d9494984b7c95407ad2f9b761b2e647953b2,2016-01-25 17:02:18-05:00,"Remove stale ofport drop-rule upon port-delete

When a port is deleted, that port is set to a dead-vlan, and
an ofport drop-flow is added in port_dead().

The ofport drop-flow gets removed only in some cases
in _bind_devices() - depending on the timing of the
concurrent port-deletion. In other cases, the drop-flow
never gets removed, and such garbage drop-flow rules
accumulate forever until the ovs-agent restarts.

The fix is to use the function update_stale_ofport_rules which
solves this problem of tracking stale ofport flows
in deleted ports, but currently only applies only to
prevent_arp_spoofing.

Change-Id: I0d1dbe3918cc7d7b3d0cdc49d7b6ff85f9b02a17
Closes-Bug: #1493414"
92a81c34ece6b28b599acc822a9b54f9a26324a3,2016-01-25 17:12:47-05:00,"Increase default IPv6 router advertisement interval

The current values of min:3 and max:10 mean radvd is sending
an RA about every 7 seconds, which can be excessive when we
have thousands of routers.  Let's relax it by 10x since most
VMs will send a Router Solicition at boot, obviating the need
for a small interval.

Related-Bug: #1532338
Change-Id: Ie0a411f67d10ec1469841d70fb643409f77be56f"
d3ee7a53386587845bca3d584a76021f25aa4d91,2016-01-26 17:40:03+00:00,"Add separate transport for notifications

In oslo.messaging 2.9.0, the RPC and notification buses were decoupled
into separate transport. This changes over the Neutron notifier to use
the notification transport provided from oslo.messaging instead of the
original transport (which is now used for RPC). By default, the
notification transport will pull in the original transport if nothing is
configured in oslo_messaging_notification, so this can be an in-place
replacement without impacting upgrades or configurations.

This functionality was added to oslo.messaging to address bug #1504622

Change-Id: I89c8a84c81079677088cc7d656a0bcb5e323de4d"
0a96b7a57e3c27d24e13a1b31405ce5eb237415f,2016-01-26 12:21:49-06:00,"Update alembic migration documentation

Alembic migration documentation for developers is updated to explain the need
to update neutron/db/migration/models/head.py when adding models to the
database

Change-Id: I2894058269cbabfd0cbfa83c7f076701e2087a11
Partial-Bug: #1537510"
0e5c3fa44d72fef56346d1cdd2426aa6fe3a3475,2016-01-26 20:17:38+00:00,"Elevate context for router lookups during floating IP association.

During a floating IP association, the tenant making the request
may not always be the owner of the router.  To make the association,
Neutron needs to query the router details internally but needs to
use an elevated context to do so.  Otherwise, the user sees a
cryptic error stating that the router doesn't exist.

Change-Id: If2bd6baa785ff879c61ce12e70b62e0ba25635f5
Closes-Bug: #1537754"
b2d656aff46ac5a2aa9700fc9ff682ef82ecf8e9,2016-01-27 11:40:11+00:00,"Add generated port id to port dict

Port id generated in create_port was not populated back to port_dict.
As a result port id information was not available on
AddressRequestFactory level (used by 3rd party ipam providers).

This fix populates port_id into copied port dict (to prevent affecting
incoming port dict).
Added UT to make sure that port id is added to port dict which is passed
to AddressFactory.

Change-Id: I62e4d9e887488b9ceeafb90b044f95a22c1765b0
Closes-Bug: #1527089"
77de9653fd60a802b11f157972f7b3e81497e8a7,2016-01-27 05:23:38-08:00,"Raise RetryRequest on policy parent not found

During a port list operation, a port and its parent network
may be concurrently deleted from the database after they have
been retrieved from the DB but before policy is enforced.
Then when the policy engine tries to do a get_network to check
network ownership for a port on a network that no longer exists,
it will encounter a NetworkNotFound exception from the core plugin.

This exception was being propagated all of the way up to the whole
API operation as a 404, which made no sense in the context of a
port list.

This patch adjusts the logic to catch any NotFound exceptions during
this processing and convert them into a RetryRequest to trigger the
API to restart the operation. At this point the objects will be gone
from the database so the problematic items will not be passed to the
policy engine for enforcement.

Closes-Bug: #1528031
Change-Id: I89d12fe0767e1c7ecb68138b5f6f17aa68a68769"
334dae0190f239a2cba4cebb9f8881e3817cee61,2016-01-28 08:40:45+00:00,"item allocator should return same value for same key

When ItemAllocator.allocate called with same key again,
it is returning different value.
To fix this, we check if a value for key already exists in
self.allocations, and return that value if already exists.

Closes-bug: #1533216
Change-Id: I1f6191b07d33a1f542de18a942cefaf7ecb6c143"
6e29cdd6b654874e4003e31891228d3abc107700,2016-01-28 11:00:43+01:00,"lb: ml2-agt: Separate AgentLoop from LinuxBridge specific impl

The goal is to extract the common agent code from the linuxbridge agent
to share this code with other agents (e.g. sriov and new macvtap [1]).
This is a first step into the direction of a so called modular l2
agent.

Therefore all linuxbridge implementation specifics are moved into the
LinuxBridgeManager class. The manager class will be passed as argument
into the common agent loop instead of instantiating it in its
constructor. In addition the network_maps and the updated_devices map
has been moved into the rpc class.

A clear manager interface has been defined for the communication
between the common agent loop and the impl specific manager class.

In a follow up patchset, the common agent loop will be moved into a
new file. This has not yet happened to simplify tracking the code
changes during review.

[1] https://bugs.launchpad.net/neutron/+bug/1480979

Change-Id: Ia71f5a403b7029f8cc591f83df91ab2d3916f3f8
Partial-Bug: #1468803
Partial-Bug: #1480979"
1a1ccb8c94ec86e74308632c039d037ee4f90711,2016-01-28 15:12:40-05:00,"Uniquely identify tunnel interfaces for fullstack tests

OVS agent tunnel interfaces are named via:
'%s-%s' % (tunnel_type, destination_ip)

This means that the tunnel interface name is not unique if
two OVS agents on the same machine try to form a tunnel with a
third agent. This happens during full stack tests that start
multiple copies of the OVS agent on the test machine.

Thus, for full stack tests, to make sure that the tunnel
interface names created by ovs agents are globally unique, they
will have the following format :
'%s-%s-%s' % (tunnel_type, hash of source IP, hash of dest IP)

Since this patch centralizes the formation of the tunnel interface
name in a dedicated method that is monkey patched by the full stack
framework, a unit test has been added for this method.

Co-Authored-By: Mathieu Rohon <mathieu.rohon@gmail.com>
Closes-Bug: #1467633
Change-Id: I991af6a5f982746cc297f0248454f803dfbb2daf"
5ccfbb5b2528fd1f9bd57a31b2784a5ed4107dac,2016-01-28 15:42:58-08:00,"Fix required extensions mix-up

These features have their required extensions mixed up. There is
no reason why subnet pools (a core extension) depends on a non
core extension like router. On the other end, DNS does indeed
depends on it.

Related-bug: #1538623

Change-Id: If7e3566159919f1178373e3425310d457983f8ac"
c82f0021d50a19861da12e112fb8756d49d1b804,2016-01-29 12:28:15+03:00,"Add relationship between port and floating ip

We need to have the relationship between port and floating ip, because updating
quota will happen when the event ""after_delete"" occurs. And current cascade
removal of the floating ip does not cause the event ""after_delete"" for floating
ip. The cascade on the ORM-level ""delete"" must be added.

Closes-bug: #1533687
Change-Id: Id414cf20069563085737fee5ddce94b1bf2f912d"
756864270aa87fadb4b2090f180577664cabc415,2016-01-29 19:47:45+03:00,"Add UniqueConstraint in L3HARouterAgentPortBinding

It is expected that pair router_id and l3_agent_id will be unique
in table ha_router_agent_port_bindings. As it appeared that
duplicates can be added this change adds UniqueConstraint for
this columns.

Having duplicates is odd and leads to problems during sync_routers.

DBReferenceError will be caught create_ha_port_and_bind and
_bind_ha_router_to_agents(l3_agent_scheduler.py) as
L3HARouterAgentPortBinding are created with l3_agent_id=None
in _create_ha_port_binding (l3_hamode_db.py)

Change-Id: I7ac2283752deaa3d9601b83859a46b9e89940269
Partial-bug: #1499647"
b14c06b5eda188a665ca37f884e9591cd8d47535,2016-01-29 16:20:07-08:00,"Fail if required extensions are missing

If the required extensions are missing, we currently log an error
that is going to be practically ignored. That said, the unfulfilled
requirement will most definitely going to lead to other failures,
so we might as well fail fast.

This patch also cleans up some <barf>dns-integration nonsense</barf>
within the ML2 framework: the extension must not be declared statically
as it's being loaded by the extension manager, and this fixes the lousy
unit tests we have to live with. As for the db base plugin, some cleanup
is still overdue, but it will have to be taken care of in a follow-up
patch.

Closes-bug: #1538623

Change-Id: Id50eeb52c5d209170042b48821a29af3421c2f5c"
8dcf39aae7a099e01bd322891526c134e87e6b1b,2016-02-01 03:04:43-08:00,"Unmarshall portinfo on update_fdb_entries calls

The unmarshalling function was not aware of the data
structure used by update_fdb_entries, so it would not
setup PortInfo named tuples in the 'before' and 'after'
fields. This would break the fdb_chg_ip_tun function
which expected to be able to use named attributes.

This patch adjusts the unmarshalling function to be aware
of this datastrucure.

This has likely been broken since the change that added
named tuples here: I7f8c93b0e12ee0179bb23dfbb3a3d814615b1c2e
It probably went undetected for so long because the exception
will only be observed when the updated entry does not have
an agent IP that matches the local agent's (i.e. not single-node).
Even in a multi-node environment, this would only trigger an
error when the fixed_ips of a port changed so it wouldn't show
up in a normal port wiring life-cycle.

Closes-Bug: #1538387
Change-Id: I0aacb3af9ebd160ebfb801f77b186075303c3df5"
3b41808b8624f5442d65ba638d1a2c1bdc22be00,2016-02-01 15:07:14-08:00,"Only prevent l3 port deletion if router exists

This patch modifies the prevent_l3_port_deletion method to
actually look up the router_id in the device_owner field to
confirm that the router exists before claiming the port is
in use. This will allow users to delete ports that may have
been orphaned due to race conditions in the cleanup of router
interfaces.

Partial-Bug: #1540271
Change-Id: Ieffe632f3f3098baf202d3795ab5182982e234bd"
c74265efb9339bee6011851d8a160067854a2818,2016-02-02 11:19:04+03:00,"DVR: avoid race on dvr serviceable port deletion

Please see race details in the bug report.
The fix is to check for dvr routers that needs to be removed
after actual port deletion.
As a bonus we can get rid of dvr logic in ml2 plugin delete_port().

It's hard to come up with a test here as race can only be
reproduced with multiple API workers.

Closes-Bug: #1538163
Change-Id: I7ab1b0c18e5daa6f35a37370b9be79e689e2ba50"
8ae32a6681ad9187e1394b9c633a6eb43df40342,2016-02-02 16:38:44+08:00,"Fix bug when enable configuration named dnsmasq_base_log_dir

DHCP agent will report an error when enable configuration
named 'dnsmasq_base_log_dir'.

For example, if this configuration is set to '/tmp'.
The code checks dir '/tmp' if exists. This is wrong.
The right way is to check '/tmp + [network_id]' existence.

Change-Id: I0e060ca7c84f38bb0ccd55ac16da5446a3d015c5
Closes-Bug: #1538386"
af62088fb54c675917c07c2f94973075f24c440a,2016-02-02 19:04:13+08:00,"Fix remove_router_from_l3_agent for 'dvr' mode agent

It's possible to run command remove_router_from_l3_agent to remove
a DVR router from an agent in 'dvr' mode. But the implicit *binding*
between DVR router and agent in 'dvr' mode should come and go as
dvr serviced port on host come and go, not manually managed.

Closes-Bug: #1540779
Change-Id: Ied6c88c85ced7b956fad3473ede4688020a357a4"
c5fa665de3173f3ad82cc3e7624b5968bc52c08d,2016-02-02 19:15:35+08:00,"ML2: update port's status to DOWN if its binding info has changed

This fixes the problem that when two or more ports in a network
are migrated to a host that did not previously have any ports in
the same network, the new host is sometimes not told about the
IP/MAC addresses of all the other ports in the network. In other
words, initial L2population does not work, for the new host.

This is because the l2pop mechanism driver only sends catch-up
information to the host when it thinks it is dealing with the first
active port on that host; and currently, when multiple ports are
migrated to a new host, there is always more than one active port so
the condition above is never triggered.

The fix is for the ML2 plugin to set a port's status to DOWN when
its binding info changes.

This patch also fixes the bug when nova thinks it should not wait
for any events from neutron because all ports are already active.

Closes-bug: #1483601
Closes-bug: #1443421
Closes-Bug: #1522824
Related-Bug: #1450604

Change-Id: I342ad910360b21085316c25df2154854fd1001b2"
13fe6af8a2174e188cda9ffc5748df7c8b03d464,2016-02-02 22:13:18-08:00,"Address i18n related deprecation warnings

Unit tests logs show trace [1]. Right now it is just
noise, but this is a time bomb waiting to blow up
into someone's face.

[1] http://logs.openstack.org/55/252755/24/check/gate-neutron-python27-constraints/d78face/console.html#_2016-02-03_03_29_52_992

Change-Id: I24d3de2ee6b1209f0e86f8fb953aab18bae8cc98"
6b4be76e1403c3a0e39b8bf487c57288bddb3cae,2016-02-03 11:42:29+05:18,"Fix params order in assertEqual

Fix params order to correspond to real signature:
assertEqual(expected, actual)

Change-Id: I722b998f6eae47076f3d10213073296a0a9a2081
Closes-Bug: #1277104"
951dd5e015cbd102aed80a6808f623b4626e727d,2016-02-03 06:43:56+00:00,"Fix port relationship for DVRPortBinding

uselist=False is used for one to one relationship, but for
DVRPortBinding, a router_interface_distributed port can have
multiple bindings. That causes SAWarning:
Multiple rows returned with uselist=False for lazily-loaded attribute
'Port.dvr_port_binding'.

""uselist=False"" is misused in DVRPortBinding port relationship,
this patch will fix this.

Change-Id: I2b00d96aaa445e0977bc3d4957d35a28d44dd953
Closes-Bug: #1540259"
c000ae3c1e1c9f0e096fd1bc5bd44305a752ade2,2016-02-03 07:50:18+00:00,"Correct insufficient name for external process in manager log

Let's just make the log more precise.

But remember the inconsitent use of the ProcessManager:
The following external processes's ProcessManager
did not set the 'service' param:
1. HA router IP monitor
2. DHCP dnsmasq
3. keepalived(vrrp)
4. metadata-proxy

The following set:
1. dibbler
2. radvd

Change-Id: I93b742ff1e52f15e5541ef3e7c8e844c70e8dd6c
Closes-Bug: #1514728"
13a4268062b17fbb6451e53632297c8e06c45a51,2016-02-03 00:56:53-08:00,"DHCP: fix regression with DNS nameservers

The commit 3686d035ded94eadab6a3268e4b0f0cca11a22f8 caused a
regression for setups that support a number of DNS servers that
are injected via the DHCP options 5 and 6.

If the dnsmaq has a configured dns-server then it will ignore
the ones that are injected by the admin. That is what the commit
above did. This causes a number of problems. The main one is that
it requires the DHCP agent to have connectivity to the DNS server.

The original code was added in commit
2afff147c45f97a0809db40ad072332fb37ccd8d

Change-Id: Iae3e994533102a2b076cc2dc205cdd5caaee1206
Closes-bug: #1540960"
488ef69cfd30af73c340ddd9b32ad554579e8a6d,2016-02-04 08:26:07+00:00,"Trigger dhcp port_update for new auto_address subnets

When an ipv6 auto_address subnet is added to an existing network with IPv4
subnet, the dhcp port in the network is simply updated with an IPv6 address.
However, neutron does not send any port_update notification for the dhcp
port. This causes inconsistencies (while configuring anti-spoofing rules)
for external controllers (like OpenDaylight) as the dhcp port info
in controller does not match with the dhcp port info in Neutron db.
This patch addressess this issue by having the plugin send a port_update
call when the dhcp port is updated with IPv6 auto address.

Closes-Bug: #1536998
Change-Id: I08d257d6d66f95c609a4429e45fde026b42f3fa1"
00f731316204e63086fe58a911c88cb0ebe2ef7f,2016-02-04 11:06:22+00:00,"Compile OVS for functional tests

The patch takes OVS with conntrack support, compiles it and loads its
kernel modules. The patch steals parts from networking-ovn
project [1]. To run compilation of OVS, an environment variable
COMPILE_OVS must be set to True. Optional environment variables
OVS_REPO and OVS_BRANCH can be defined as a source of bits.

Once Neutron starts using neutron-lib, next steps will be taking
content of devstack/lib/ovs and putting it into neutron-lib project
in order to let other projects like networking-ovn to re-use the
code.

[1] https://github.com/openstack/networking-ovn/blob/master/devstack/plugin.sh#L175

Change-Id: Id2f51853a6339da72dbde7a82f94f99a4c306565"
51adde5eb93993fbd24c14daab16ade74565978f,2016-02-04 18:55:35+03:00,"Fix regression in routers auto scheduling logic

Routers auto scheduling works when an l3 agent starts and performs
a full sync with neutron server. Neutron server looks for all
unscheduled routers and schedules them to that agent if applicable.
This was broken by commit 0e97feb0f30bc0ef6f4fe041cb41b7aa81042263
which changed full sync logic a bit: now l3 agent requests all ids
of routers scheduled to it first. get_router_ids() didn't call
routers auto scheduling which caused the regression.
This patch adds routers auto scheduling to get_router_ids().

Closes-Bug: #1541348
Change-Id: If6d4e7b3a4839c93296985e169631e5583d9fa12"
8211113eb6387e6deb6fdc7a38821eada20c414c,2016-02-04 11:01:13-05:00,"Reno note regarding OVS DVR agent failure on startup

Commit e2a37be73da7bbc0ab562eabef69bfe69dc7cfa1 changed the behavior
of the OVS DVR agent so it will fail if can't get DVR config on start-up.
This patch adds a reno note describing this new behavior.

Related-Bug: #1536110
Change-Id: Idcdcdad9eba78ef5fbdae420e114a7ed793f3e43"
ef5c5f08bcdb25f2514b0da55994131655752ea5,2016-02-04 16:51:12+00:00,"Correct dev documentation for has_offline_migrations command

Update the upgrade defref doc to more correctly explain the output
from the has_offline_migrations command

Change-Id: Ie68c31354f664165a0c124fb151e8fb449eec8ec
Related-Bug: #1519118"
96c67e22f9cba2ea0e7fb3ba2a63e4905e48c1a4,2016-02-04 14:07:03-08:00,"Only ensure admin state on ports that exist

The linux bridge agent was calling ensure_port_admin state
unconditionally on ports in treat_devices_added_or_updated.
This would cause it to throw an error on interfaces that
didn't exist so it would restart the entire processing loop.

If another port was being updated in the same loop before this
one, that port would experience a port status life-cycle of
DOWN->BUILD->ACTIVE->BUILD->ACTIVE
                   ^ <--- Exception in unrelated port causes cycle
                          to start over again.

This causes the bug below because the first active transition will
cause Nova to boot the VM. At this point tempest tests expect the
ports that belong to the VM to be in the ACTIVE state so it filters
Neutron port list calls with ""status=ACTIVE"". Therefore tempest would
not get any ports back and assume there was some kind of error with
the port and bail.

This patch just makes sure the admin state call is skipped if the port
doesn't exist and it includes a basic unit test to prevent a regression.

Closes-Bug: #1523638
Change-Id: I5330c6111cbb20bf45aec9ade7e30d34e8dd16ca"
2a27361cf50259281924dbdaba3f06367ef327e7,2016-02-04 21:48:43-07:00,"Protect 'show' and 'index' with Retry decorator

Commit 77de9653fd60a802b11f157972f7b3e81497e8a7 added a RetryRequest
exception to the policy engine for when items disappeared during policy
enforcement lookups. However, the API was not catching them for the
show and list operations.

This patch adds the decorators to the two methods to catch any
retry exception that may be emitted from the policy engine or
wherever else.

Closes-Bug: #1528031
Change-Id: If4aea5245cdbb2ea545e9a96d73386e3c21a3696"
4398f14a9ab177c162d3267b1d2b0c7c50bb82a5,2016-02-05 10:07:03+01:00,"Postpone heavy policy check for ports to later

When a port is validated, we check for the user to be the owner of
corresponding network, among other things. Sadly, this check requires a
plugin call to fetch the network, which goes straight into the database.
Now, if there are multiple ports to validate with current policy, and
the user is not admin, we fetch the network for each port, f.e. making
list operation on ports to scale badly.

To avoid that, we should postpone OwnerCheck (tenant_id) based
validations that rely on foreign keys, tenant_id:%(network:...)s, to as
late as possible. It will make policy checks avoid hitting database in
some cases, like when a port is owned by current user.

Also, added some unit tests to avoid later regressions:

DbOperationBoundMixin now passes user context into API calls. It allows
us to trigger policy engine checks when executing listing operations.

Change-Id: I99e0c4280b06d8ebab0aa8adc497662c995133ad
Closes-Bug: #1513782"
517aa03da35fb4cfb3b16a5abbcc8115727b4a77,2016-02-05 04:36:31-08:00,"Pecan: Fix association of plugins with resources

The process was leveraing the supported_extension_aliases
attribute, which might not provide a complete list of extension
aliases.

With this patch now Pecan leverages helper methods available
in the extension manager, which have been slightly refactored in
order to allow for retrieving aliases for a single plugin.

Closes-Bug: #1542277

Change-Id: Id944b27dcd84a92bf15242f5797408bf83b0d317"
7d153a671b5fcc77437bc1e9b41015da1acc57f8,2016-02-05 17:46:41+01:00,"Moving Common Agent into separate module

Moving the CommonAgent and all it's unittests into a speparate module.

Closes-Bug: #1468803

Change-Id: Ifccc6ee1a77eef3928ad326cd5857092aeef4a17"
fc8ebae0351f5b6596951cdfc5cb4259501d84f2,2016-02-05 09:59:48-08:00,"Prevent binding IPv6 addresses to Neutron interfaces

Explicitly disable IPv6 on Neutron created interfaces in the default
namespace before setting link up. Since the default behavior of IPv6 is
to bind to all interfaces as opposed to IPv4 where an address must be
explicitly configured we disable IPv6 on each interface before enabling
the interface. This avoids leaving a time window between when the
interface is enabled and when it is attached to bridge device during
which the host could be access from a tenant network.

Move disable_ipv6() from BridgeDevice to base IPDevice class so it is
usable by all interfaces. Then we explicitly disable IPv6 on veth
interfaces in the default namespaces and VXLAN and VLAN interfaces
created by the LinuxBridge agent.

In addition vlan interface is moved from LinuxBridgeManager to IPWrapper
so it can return an IPDevice object.

Closes-Bug: #1534652
Change-Id: Id879075f2d5ee42f8ff153e813e7519a4424447b"
907efb1fb7bb291f55845e0ed8a8f1da2125b799,2016-02-05 14:14:11-08:00,"Pecan: add tenant_id to quota resource

This operation will ensure the tenant_id attribute is not stripped
off when generating the response.

Change-Id: Ie2ed290140db7f0346c331b6fd0ece4f731b22e9
Closes-Bug: #1542507"
b6d091279fffe441f6d28e687313ad031a24a3ec,2016-02-06 09:50:38+00:00,"ML2: Call _dict_extend in create_(net|port) ops

The extensions fields were not being added to the response being
sent back to the user for ports and networks that weren't from
ML2 extensions (e.g. availability zones). This created an
inconsistent response between creates and updates/gets. It also
resulted in incomplete data in the AMQP create notification emitted
in the API layer.

This patch adjusts ML2 to call the _apply_dict_extend_functions
method after creating ports and networks. To make this work, another
DB lookup to get the latest model state was necessary. However, this
is part of an already expensive operation (create) so the performance
impact should be minimal.

This issue stems from the fact that db_base_plugin_v2 does not
process extensions when its create_port, create_network methods
are called. This original skipping behavior was added back in
patch If0f0277191884aab4dcb1ee36826df7f7d66a8fa as a performance
improvement to deal with dictionary extension functions that
performed DB lookups. However, at this point the dictionary
extension functions should have been optimized to skip any DB
lookups to avoid the massive performance penalties they incur
during list operations.

An alternative to this patch was to adjust the db_base_plugin_v2
to stop skipping extensions. However, because this is usually
called by inheriting plugins before they process extensions
for the new port/network, the extensions do not yet have the
required information to extend the dict and will fail. So each
core plugin will need to apply similar logic to support extensions
that rely on the extend_dict functions.

Closes-Bug: #1541774
Change-Id: Iea2c0e7f9ee5eeae28b99797874ca8a8e5790ec2"
7b5ba5b35a2c793a21a1f2d336cc339e37eeee2f,2016-02-06 22:10:53-05:00,"Log warning message if get_subnet_for_dvr fails

When subnet or gateway port has been deleted concurrently, rpc call
to get_subnet_for_dvr will return an empty dict without any value.
ovs_dvr_neutron_agent should be more gracefull and at least log
warning message in that situation.

Change the existing error log to warning, because it is not a server
error, but a fact that should be noticed.

Change-Id: Icb3a57553a8b0eb635c0d85e2c60e7ce519893f6
Closes-bug: #1454921"
59d815c704d9adfefe85543b5c89ebb163d5bc44,2016-02-07 22:21:03-07:00,"Make add_tap_interface resillient to removal

This patch makes add_tap_interface safe to race conditions
where the interface is removed in the middle of processing
by catching exceptions and checking to see if the interface
still exists. If it no longer exists it assumes the exception
was caused by the missing interface and returns False as it
would if the interface did not exist to begin with.

Change-Id: Ie0d89fc2584490b6985aee66da70bae027a130ed
Closes-bug: #1542972"
30dab936e602cba7e35806e8a558b53eb8936f48,2016-02-08 01:59:38-08:00,"Only restrict gateway_ip change for router ports

The subnet update code was restricting gateway_ip changes if the
existing gateway IP belonged to a Neutron port. This was implemented
because changing the gateway will break all floating IP addresses if
the gateway is a Neutron router. However, this restriction makes it
possible to get a subnet stuck to an IP address that belongs to another
port (e.g. a compute port) so the user has to either delete the port
or change it's IP, both of which are disruptive.

This patch just changes the restriction so it only prevents gateway
IP changes if the current gateway IP belongs to a router. This
preserves the intent of the original change while allowing the subnet
to be updated off of IP addresses that belong to normal ports.

Change-Id: I4691505ef2fad6019e0d2fd80ff1b9e157662a29
Closes-bug: #1532004"
3f0c618cfd2957be9d76d2763903f0023b1ac737,2016-02-08 16:49:58-07:00,"HA for DVR - Neutron Server side code changes

This patch adds HA support for DVR centralized default SNAT
functionality to Neutron Server. For the agent side changes
another patch has been merged.

Salient changes here are:

 - Schedule/de-schedule SNAT on multiple agents
 - Enables
    'router-create <router name> --ha True --distributed True'

Closes-bug: #1365473

Co-Authored-By: Adolfo Duarte <adolfo.duarte@hpe.com>
Co-Authored-By: Hardik Italia <hardik.italia@hpe.com>
Co-Authored-By: John Schwarz <jschwarz@redhat.com>
Co-Authored-By: Oleg Bondarev <obondarev@mirantis.com>
Change-Id: I6a19481d0e19b8a55f32199a27057bf777548b33"
31aed09c1b4540b3f9ab26473a1b39ea1d144698,2016-02-08 23:44:12-08:00,"L3: enable plugin to decide if subnet is mandatory

Commit 07077bebb69da29994257d061d3a8d7ea9598c3d removed
enforcing that a subnet should be defined on a network. In
the case of IPv6 this is cool, but for V4 it is problematic.

The patch adds in a callback that enables the plugin to
determine validation policy.

The callback will be invoked prior to creating the gateway
port.

Closes-bug: #1543012

Change-Id: Idb7eeb5e0071aa5a2f302fba083504c4582edc1a"
cb188817700f5caeac57577455cbb7d77b23e823,2016-02-09 10:57:38+00:00,"RPC Callback rolling upgrades logic

Introduces a version manager in the callbacks rpc, which tracks
the agents' known resource versions across the distributed system,
making rpc callback push notifications smart about which resource
versions need to be serialized and sent over the wire during a
cloud upgrade process.

Subsequent patches will implement the callback to fetch agent
resource versions from database, the status updates with
agent resource versions included, and the fast path agent to
neutron-servers fanout call with version details as defined
in change I02b694137eb2d58e5f2f3e7631f0e4b90f7c17ad

Related-Bug: #1535247

Change-Id: I3fb49ae6fe237a926225b508bc8f0286426bf532"
034d5a2f374ec34fba31c2c322d2291a2fb00942,2016-02-09 13:09:29+00:00,"Fix getting agent id in linuxbridge agent

If bridge_mappings is configured in linuxbridge agent, it will now
determine agent_id which is based on MAC address of first device
from bridge_mappings in correct way.

Change-Id: I940379b2fd3b5f8c96cdf3b7a3c0da78532491f6
Closes-bug: #1542923"
6fad8d3e36fb0eb26105bdfe699a33e48c721408,2016-02-09 16:58:27+03:00,"Bring back dvr routers autoscheduling

Commit 1105d732b2cb6ec66d042c85968d47fe6d733f5f disabled
auto scheduling for dvr routers because of the complexity
of DVR scheduling itself which led to a number of logical
and DB issues. Now after blueprint improve-dvr-l3-agent-binding
is merged DVR scheduling is almost no different from legacy
scheduling (no extra DVR logic required for auto scheduling)
so we can bring auto scheduling for DVR routers back.
This is better for consistency and improves UX.

Closes-Bug: #1543513
Change-Id: Ibf0263a711f0dbaf42fb59799ada79b6e896eca1"
7c24fa111e0ea0b656858c7f54e55a1eac5fc2d3,2016-02-10 00:45:24+00:00,"Pecan: wrap PUT response with resource name

For no peculiar reason other than that's the way the API is
supposed to work.

Change-Id: Ifd6f8b492dfc86c069a4f33931235c7f3d8e7c2e
Closes-Bug: #1537929"
47713f58701af9e27792230dd64daa3e20a4260b,2016-02-10 09:59:33+00:00,"Support MTU advertisement using IPv6 RAs

RFC4861 allows us to specify the Link MTU using IPv6 RAs.
When advertise_mtu is set in the config, this patch supports
advertising the LinkMTU using Router Advertisements.

Partially Implements: blueprint mtu-selection-and-advertisement
Closes-Bug: #1495444
Change-Id: I50d40cd3b8eabf1899461a80e729d5bd1e727f28"
7a4633a9ca213ee03cbcd45027189e0b3e7df2f5,2016-02-10 10:45:22-05:00,"ML2: Configure path_mtu to default to 1500 bytes

I8287677c7ad0f13fa9f5cb194f9372d04b78cb61 changed the behavior of
DevStack, so that path_mtu is being set to 1500 by default. Let's take
the next step and set path_mtu to 1500 by default, instead of relying on
deployment tools like DevStack to set it.

When using the ML2 plugin and setting path_mtu to default to 1500,
the second order effect is that all Neutron
Network objects will have the mtu attribute populated. For tenant
network types like VXLAN, the MTU will be set as path_mtu less the
protocol overhead. So for example, a Neutron Network backed by VXLAN
will have the mtu attribute set to 1450.

Related-Bug: #1542108
Co-Authored-By: Matt Kassawara <mkassawara@gmail.com>
Change-Id: I4096a3e7704032fa4aa5c3aa8bcaec4e38d0d06d"
eb8141051abe64de7ad9398fb2adaf9a0a79d62d,2016-02-11 04:51:17+00:00,"ML2: delete_port on deadlock during binding

The previous logic was only catching mechanism driver exceptions so
it would leave behind a partially built port if a deadlock was
encountered during port binding.

The bug this closes was caused by a DBDeadlock being encountered when
a lock was attempted on the port binding record
(get_locked_port_and_binding). This would not be caught so the API
would retry the whole operation with the original created port
left behind. This resulted in two ports assigned to the same instance.

Closes-Bug: #1543880
Change-Id: I694a9d58002d72636225f99a5fb2b1ccc1cfb6e5"
f846519e5af6efa5007896c7ac75d13b415c3f53,2016-02-11 10:08:09+01:00,"Add extension requirement in port-security api test

if port-security extension is not enabled in neutron, 2 tests run and fail.
Even if port-security is not part of the tempest.conf api_extensions list.

Change-Id: I7c15bff96ea976841400e8df93d0c1cb74049bce
Closes-bug: #1542892"
bfcad8eec717fbed99a3ece23fb5b62634d414ae,2016-02-12 09:27:24+01:00,"macvtap: Common functions and constants

Functions and constants that are shared between the macvtap ml2 driver
and the macvtap agent.

The review is submitted in three parts:
 - Part 1 (this part)
    Common functions that are used by the ml2 driver and the agent
 - Part 2
     The Mechanism Driver to support port binding for macvtap attachments
 - Part 3
    The Macvtap L2 Agent.

Partial-Bug: #1480979

Change-Id: I63a095e6f592b94372ff018f2e73373ad9414d99"
887316ae43848ba26facb01d39d60c57111ec75d,2016-02-12 01:34:49-08:00,"Fix typo 'indepedent' in alembic_migration.rst

Change to 'independent'.

Closes-Bug: #1546237
Change-Id: I31acc5ae6d88ea56c9aded94b46573126f557fce"
3785dc31a465e0ac9d5de23339daddfbc346ef7c,2016-02-12 17:49:10-08:00,"Address masking issue during auto-allocation failure

If an interface could not successfully be plugged to a router
during the provisioning of external connectivity, a failure
is triggered, and a subsequent cleanup performed.

This patch ensures that the cleanup accounts only for the
subnets that were uplinked successfully, thus fixing the
incomplete cleanup, and the masking user error that resulted
otherwise.

Closes-bug: #1545210

Change-Id: I061a1407abf6ed1a39056b1f72fd039919e2fc79"
c24e9da2f82676d9b9d8c28018bf49c8a294121b,2016-02-14 22:36:27+08:00,"Add precommit_XXX event for security group and rules

Current BEFORE_CREATE/DELETE/UPDATE event is outside of the DB
transaction. Unlike the precommit primitive in ML2 mech drivers, they
don't work in the same DB transaction of resource, so if we want to
operate the DB in mech driver related to security group, there would be
more unsync issues if we use BEFORE_XXX event directly. Moving the
BEFORE_XXX event inside may also break some current codes, as maybe RPC
call included.

This patch adds new PRECOMMIT_CREATE/DELETE/UPDATE event type for
callback function, and use it in the securitygroup/rules DB transaction.
PRECOMMIT_XXX is in the DB transaction and only purpose is to do DB
operations in its callback. A CallbackFailure will be triggered when
exception comes from the callback of the new event.

Change-Id: Icd2849bd84dab6733a572e8c85f242afcefc6c78
Closes-Bug: #1522172"
957c21113fc5848925c13a3128a23243ee99fa30,2016-02-15 08:18:01+00:00,"Get rid of UnionModel for RBAC

The union model approach was completely broken because it
didn't keep track of which model each result actually was.

This patch just strips it out and replaces get_rbac_policies
with queries to each model. This will mean pagination is broken
once multiple rbac types are in place, but everything else should
work fine.

Co-Authored-By: Haim Daniel <hdaniel@redhat.com>

Closes-Bug: #1542815
Change-Id: I1e91aa22d093d50e5a9d318f24d09bb65e072246"
5273c6cc86c403f6f787c5d5d357a28462c9b868,2016-02-15 09:21:38+00:00,"Pecan: Always associate plugins with resource

with this patch, the logic for associating a resource with a plugin
is now executed for every resoruce. This will avoid requiring the
method get_pecan_controllers in extensions descriptors to deal with
this. This item of work is required for a speedy ""Pecanization"" of
existing extensions, in particular the 'router' extension.

The routine for finding a plugin for a resource has been modified to
allow special treatment of the 'quotas' extension. This extension
indeed is declared as supported by plugins (usually the core one),
but the plugin does not implement relevant methods as quota management
is performed by a distinct driver.

Further, NeutronPecanController's plugin attribute has been
converted into a property which loads the value from NeutronManager
if not yet defined. Indeed in some cases the plugin might be
instantiated after the controller instance is created.

Closes-Bug: #1528510

Change-Id: Ibbfec8fd53855641bd21dec8ef824d5741dfebea"
63fe3a418c685ca90077f1dd4c35fd9ccf586fca,2016-02-15 14:30:04+02:00,"Add the rebinding chance in _bind_port_if_needed

Make function _bind_port_if_needed to bind at least one time when the port's
binding status passed in is already in binding_failed.

This is the second attempt to introduce the patch (the first one was
reverted due to regression that broke Ironic), now with proper
notification sent even when binding attempt failed.

The patch also fixes several cases when we attempted to notify with a
binding context that was not committed into database.

The patch changes _attempt_binding to call _commit_port_binding only
with the binding final state:
1. Successful binding: will just call _commit_port_binding.
2. Unsuccessful binding: will call _commit_port_binding at the final
attempt to bind the port.
This is in order to refrain from reverts, with will really complicate
things even  more.

Co-Authored-By: Yalei Wang <yalei.wang@intel.com>
Co-Authored-By: Nir Magnezi <nmagnezi@redhat.com>
Co-Authored-By: John Schwarz <jschwarz@redhat.com>
Change-Id: I437290affd8eb87177d0626bf7935a165859cbdd
Closes-Bug: #1399249"
3188b458fd29bbd7711277bc337c0dacbaab4b9e,2016-02-15 16:07:35+03:00,"L3 agent: log traceback on floating ip setup failure

Currently l3 agent suppresses exception traceback and just
raises new FloatingIpSetupException so it's impossible to see
actual issue from logs.
The patch adds LOG.exception() to the exception handler before
reraising.

Closes-Bug: #1545695
Change-Id: Ia4557473c7e362f98a564475527b97ee6d0178f9"
0267c6a5acdcb68ea7e83ecb980362c4235ed1d7,2016-02-15 22:25:29+01:00,"Make DHCP agent scheduler physical_network aware

Currently neutron DCHP scheduler assumes that that every server running
a dhcp-agent can reach every network. Typically the scheduler can
wrongly schedule a vlan network on a dhcp-agent that has no reachability
to the network it's supposed to serve (ex: network's physical_network
not supported).

Typically such usecase can append if:

* physical_networks are dedicated to a specific service and we don't
  want to mix dnsmasqs related to different services (for
  isolation/configuration purpose),
* physical_networks are dedicated to a specific rack (see example
  diagram http://i.imgur.com/NTBxRxk.png), the rack interconnection can
  be handled outside of neutron or inside when routed-networks will be
  supported.

This change makes the DHCP scheduler network reachability aware by
querying plugin's filter_hosts_with_network_access method.

This change provides an implementation for ML2 plugin delegating host
filtering to its mechanism drivers: it aggregates the filtering done by
each mechanism or disables filtering if any mechanism doesn't overload
default mechanism implementation[1] (for backward compatibility with
out-of-tree mechanisms). Every in-tree mechanism overloads the default
implementation: OVS/LB/SRIOV mechanisms use their agent mapping to filter
hosts, l2pop/test/logger ones return empty set (they provide to ""L2
capability"").

This change provides a default implementation[2] for other plugins
filtering nothing (for backward compatibility), they can overload it to
provide their own implementation.

Such host filtering has some limitations if a dhcp-agent is on a host
handled by multiple l2 mechanisms with one mechanism claiming network
reachability but not the one handling dhcp-agent ports. Indeed the
host is able to reach the network but not dhcp-agent ports! Such
limitation will be handled in a follow-up change using host+vif_type
filtering.

[1] neutron.plugin.ml2.driver_api.MechanismDriver.\
      filter_hosts_with_network_access
[2] neutron.db.agents_db.AgentDbMixin.filter_hosts_with_network_access

Closes-Bug: #1478100
Co-Authored-By: Cedric Brandily <zzelle@gmail.com>
Change-Id: I0501d47404c8adbec4bccb84ac5980e045da68b3"
80cfec66259e05e6914abf0ee443b7c280de21a9,2016-02-15 22:29:14-08:00,"DHCP: release DHCP port if not enough memory

When the DHCP agent fails to create a namespace for the DHCP
service we will release the DHCP port instead of failing silently.

This will at least give the user an indication that there is no DHCP
service. No DHCP port will exist.

Change-Id: I59af745d3991e6deb424ecd9b916b03f146c246a
Closes-bug: #1544548"
3d244c3cba68fb1f0147b723049e2ab80496fd98,2016-02-16 15:49:11+09:00,"Remove NEC plugin tables

The initial NEC plugin was marked as deprecated in Liberty
and has been replaced by a new implementation in Mitaka.
This commit drops NEC plugin tables.

Closes-Bug: #1545620
Change-Id: Ifa8dad589ff6c47ba76452e8996a910f8732739b"
217a2adee0032456375ccf368ea50cecd2c1d626,2016-02-16 01:26:54-08:00,"QOS: get rid of warnings for unit tests

The QOS tests would have tons of warnings that real UUID's need to
be used. This patch fixes that.

We will not see any more:

    .../oslo_versionedobjects/fields.py:325: FutureWarning:
    fake_rule_id is an invalid UUID. Using UUIDFields with
    invalid UUIDs is no longer supported, and will be removed
    in a future release. Please update your code to input valid
    UUIDs or accept ValueErrors for invalid UUIDs.
    See http://docs.openstack.org/developer/oslo.versionedobjects/api/fields.html#oslo_versionedobjects.fields.UUIDField
    for further details ""for further details"" % value, FutureWarning)

TrivialFix

Change-Id: Iee36c7d1cd11b6a38ab67883f91dcb3bdb4d4344"
b83fedbd78a441cf34d53dba35a3ccff7d8f4ac5,2016-02-16 13:47:12+00:00,"Add VLAN tag info to port before applying SG initial setup.

Before the initial SG firewall setup, the VLAN tag is added to
the port information; this assignment is removed from _bind_devices
function. This value is needed by some SG agent
implementations.

This implementation mantains the actual function call order:
  - Apply security groups.
  - Bind devices.

Change-Id: I6f70083a1d42a5be4545956406a96d6579145c00
Closes-Bug: #1512636"
ef29f7eb9a2a37133eacdb7f019b48ec3f9a42c3,2016-02-16 16:47:21+00:00,"Open vSwitch conntrack based firewall driver

This firewall requires OVS 2.5+ version supporting conntrack and kernel
conntrack datapath support (kernel>=4.3). For more information, see
https://github.com/openvswitch/ovs/blob/master/FAQ.md

As part of this new entry points for current reference firewalls were
added.

Configuration:
in openvswitch_agent.ini:
    - in securitygroup section set firewall_driver to openvswitch

DocImpact
Closes-bug: #1461000

Co-Authored-By: Miguel Angel Ajo Pelayo <mangelajo@redhat.com>
Co-Authored-By: Amir Sadoughi <amir.sadoughi@rackspace.com>

Change-Id: I13e5cda8b5f3a13a60b14d80e54f198f32d7a529"
eb9bda12d25a565e117a518d93abd75bfa50730a,2016-02-17 15:57:37+01:00,"macvtap: ML2 mech driver for macvtap network attachments

This driver uses the vif_type 'macvtap'. It enriches the vif_details
with the corresponding attributes required by nova [1] to support
macvtap attachments for libvirt qemu/kvm guests.

The review is submitted in three parts:
 - Part 1
    Common functions that are used by the ml2 driver and the agent
 - Part 2 (this part)
     The Mechanism Driver to support port binding for macvtap attachments
 - Part 3
    The Macvtap L2 Agent.

[1] https://review.openstack.org/#/c/182283

Change-Id: I206f58a21c36e55de957d8a23993aa9bc26d1595
Partial-Bug: #1480979"
77a9c1c0d49faf9f799d78437f5f1c4863629af2,2016-02-17 21:25:46+01:00,"Fix GROUP BY usage for PostgreSQL in migrations

Currently get_duplicate_l3_ha_port_bindings[1] is not postgres-compliant
because it's GROUP BY usage is not postgres-compliant: everything in the
SELECT list must be aggregated or in GROUP BY.

This change updates get_duplicate_l3_ha_port_bindings to respect
previous PostgreSQL rule.

[1] neutron.db.migration.alembic_migrations.versions.mitaka.expand\
     .1df244e556f5_add_unique_ha_router_agent_port_bindings

Change-Id: Ie99dd31d695ab89814a86e50d45ababe53bd56fd
Closes-Bug: #1546731"
fd0ed209d214c2a4f825eda9dd0b97234f75875a,2016-02-18 11:32:49+08:00,"Stop using non-existent method of Mock

There is no method called_once_with() in Mock object.
Use assert_called_once_with() instead.

Change-Id: I263c407ba2a82f53aace5f71cb27ad8974335e24
Closes-Bug: #1544522"
484e6557347d55dfdcb58567be28ea31e9c13ff0,2016-02-18 09:26:10+00:00,"Fix typo error for wrong msg format when CallbackFailure

Closes-bug: #1546832
Change-Id: I3ef54d79ff620afba928e35b14a68da563049923"
384fe5f9a6b72cfa3effaeee5215064b35a8744b,2016-02-18 12:33:40-06:00,"Add missing character

This missing character was causing a warning during the creation of
documentation.  This warning message was considered an error ending the
process to create documentation.

Change-Id: I745389150c23ffabe25eab0ead78dfc850885e9d
Closes-Bug: #1547164"
18bc556bd44c5f73e37dbc9687c7792065440722,2016-02-19 02:25:03+00:00,"Allow other extensions to extend Securitygroup resources

The Neutron Securitygroup extension defines two resources:
security-group
security-group-rule

So that other extensions could extend one or both of this resources, the
security-group extension descriptor must override the base class method,
""neutron.extensions.ExtensionDescriptor.update_attributes_map"".

Change-Id: I8c462a4ee6f60ef716bf9e4d7f83a35c7e1dead0
Closes-Bug: #1529109"
b6126bc0f17f348ff6303b9bd6041cb018479ef9,2016-02-19 10:45:09+05:18,"Fix for adding gateway with IP outside subnet

Currently 'force_gateway_on_subnet' configuration is set to True
by default and enforces the subnet on to the gateway. With this
fix 'force_gateway_on_subnet' can be changed to False, and
gateway outside the subnet can be added.
Before adding the default route, a route to the gateway IP is
added. This applies to both external and internal networks.

This configuration option is deprecated, and should be removed
in a future release. It should always allow gateway outside the
subnet. This is done as a separate patch
https://review.openstack.org/#/c/277303/

Change-Id: I3a942cf98d263681802729cf09527f06c80fab2b
Closes-Bug: #1335023
Closes-Bug: #1398768"
a47f4d1726f49fb4cc3400c595f2ca88964ddee8,2016-02-19 00:54:32-08:00,"Pecan: replace dashes with underscores on controller lookup

This is needed for extensions like security-groups as resource
names do not use dashes but underscores.

Change-Id: I952abd261a3cf8ac964463dd50377905f08830c8
Closes-Bug: #1537929"
2254acef062241b43d7138c981551183fc4a8930,2016-02-19 13:12:25+00:00,"Add fullstack resources for linuxbridge agent

This patch adds resources, fixtures and base test_connectivity tests
for host with linuxbridge agent.

Model of host with linuxbridge agent is made in separate namespace
named ""host-XXX"". It has got connectivity with rabbit via ovs port.
Same port is used also to provide connectivity with different ""hosts""

Co-Authored-By: Mathieu Rohon <mathieu.rohon@gmail.com>

Change-Id: I6230d8d09f77bd20674bf6c3be69fbc1627d66f8
Closes-bug: #1518675"
76c446bb5d1173798f13f5859ec52d23cb8dbedd,2016-02-20 02:19:22+00:00,"Document the ability to load service plugins at startup

Change-Id: I1368f3505b68ea20e2585e23d10d90fcd2bac1f6
Closes-bug: #1544383"
8052c3985325e9067d83496936092ee9334df75b,2016-02-19 22:10:43-08:00,"Allow address pairs to be cleared with None

When the neutron client attempts to clear the allowed
address pairs using the '--action=clear' CLI param, it
sends a value of None to the Neutron server for allowed
address pairs. However, the allowed address pairs extension
was only allowing an empty list to clear the pairs.

This patch just converts None to an empty list on allowed
address pairs to be compatible with the client.

APIImpact
Closes-Bug: #1537734
Change-Id: Iba618b3e07bd3bdc202a9577954d7b97c2a5bf09"
984f985e89da1478da587322b966b3746971742c,2016-02-21 04:01:39-08:00,"Don't assume simplejson in pecan exception catch

Pecan tries to import simplejson but may fall back to importing the
standard json lib.[1] In this case our catch will not catch the correct
exception type.

So this just catches ValueError, which is what the standard json lib will
raise and which is also the parent of simplejson.JSONDecodeError.[2]

1. https://github.com/pecan/pecan/blob/abe3c41adefc0218005f6fbc0f6ed1ebd46d9629/pecan/core.py#L1-L4
2. https://github.com/simplejson/simplejson/blob/92c80f3b29c4d8694deb72779fa65f8de0ff8965/simplejson/scanner.py#L18

Change-Id: Ia034d734288b8a9d3baa14118650b1796d7cdb12"
3d5d378769f0715e3254ac00b6f091a6f9f6960b,2016-02-21 14:41:17+01:00,"Allow non-admins to define ""external"" extra-routes

Currently non-admin users can create extra-routes when the nexthop is on
router-interfaces subnets but not on external-network subnet. Indeed
user permissions are used to get router ports in order to validate
nexthops BUT non-admin users don't ""see"" router port on its external
network.

This change uses an elevated context instead of user context to enable
non-admins to create ""external"" extra-routes.

APIImpact
Closes-Bug: #1538767
Change-Id: I08b1d8586a4cd241a3589e8cb7151b77ab679124"
3e6d602f542fc97e64cd5503bf1ea4e71d648abf,2016-02-22 11:07:14+05:18,"Deprecate 'force_gateway_on_subnet' configuration option

Currently 'force_gateway_on_subnet' configuration is set to True
by default and enforces the subnet on to the gateway. With the
fix in https://review.openstack.org/#/c/233287/, gateway outside
the subnet can be added, and the configuration option now has
lost its significance.

With this patch, the configuration option is deprecated.
It should be removed in Newton release, and the system should
always allow gateway outside the subnet.
This patch is dependent on the fix for adding gateway outside
the subnet, mentioned above.

DocImpact: 'force_gateway_on_subnet' description should be
updated in the docs and marked as deprecated to be removed in
the Newton release.

Change-Id: I28b3d7add303ee479fc071c1de142b0f7811e4e5
Closes-Bug: #1335023
Closes-Bug: #1398768"
ac8efa9255a11586c033afac5a2969ff6b33c23f,2016-02-22 10:48:40-05:00,"Revert the unused code for address scope

Remove the code that is not used by address scope

Change-Id: I5f0c929b8c6daec6b6865602fc6165b37c2265ab
Closes-Bug: #1548217"
544753b2112c927c418de5c13b330d4769138cd9,2016-02-22 18:02:11-05:00,"Revert ""tests: Collect info on failure of conn_tester""

More info in bug report. I suggest we first revert, then
re-introduce the collect_debug_info patch with a different
approach. I suspect the fix is not trivial if indeed ordering
is an issue and the namespaces are cleaned up before
collect_debug_info is fired.

Related-Bug: #1548547
Change-Id: Ice93abbc6e143cdbb90e7d41d1be86dc9eb05006"
f069f69bd63de3c3d5d424d673a7103df952d7e2,2016-02-23 00:18:59+01:00,"Fix generate_records_for_existing in migrations

generate_records_for_existing[2] assumes wrongly that:

 session.execute(...).insert_primary_key

returns a value BUT it returns a list of last inserted primary keys.
This trouble affects at least mysql and postgresql backends but not
pymysql (which silently unwraps the list), it explains why grenade tests
didn't catch this trouble.

This change corrects generate_records_for_existing by extracting last
inserted primary key from insert_primary_key list.

[1] neutron.db.migration.alembic_migrations.versions.mitaka.contract\
     .8a6d8bdae39_migrate_neutron_resources_table

Closes-Bug: #1546762
Change-Id: I607e485ab02f1d98874095b32ce53dfdd9cd1d51"
635581912f2da69ac178a8779c2374619801dd19,2016-02-22 22:46:18-05:00,"Correlate address scope with network

With address scope being enabled, networks now are in one ipv4
address scope and one ipv6 address scope.

This patch adds derived attributes to the network as part of the
address scopes extension that will show related address scopes
when viewing a network through the API.

APIImpact

Change-Id: Ib1657636033ad2c0009d50ebe7c5ae4f72f6b175
Closes-Bug: #1547380"
c28ad6b8e38884c6e1cc7504e478608349fc0376,2016-02-23 06:28:15-06:00,"Fix sanity check --no* BoolOpts

If --config-{file,dir} are used to genearate a list of tests to
run, using set_override() will also override any options passed
via the CLI.

For example, on Centos 7 which uses dnsmasq 2.66, running:

  neutron-sanity-check --nodnsmasq_version --config-file \
    /etc/neutron/l3_agent.ini

will still run and fail the dnsmasq version test. Using
set_default() allows using --config-{file,dir} and --no* in
conjunction.

Closes-Bug: #1549394
Change-Id: I5b9e520add7324660148c4451bbef54c0dfe428e"
f3a0d3d31531cfe9e2973114076b14381d366eb5,2016-02-23 17:47:45-05:00,"Ensure DVR unit tests use '/tmp' directory

Running 'tox -e py27' creates files in the local directory.
This fix ensures the /tmp directory is used instead.

Change-Id: If545b8795570eb424483f554fef8ad6170fa7ed9
Closes-Bug: #1541119"
26e268db7923c4deb4c0de32066874b44d441042,2016-02-23 20:53:43-07:00,"Add use_default_subnetpool to subnet create requests

This follows up [1] by adding an extension to allow requesting the
default subnet pool explicitly through the API thus restoring the
convenience that was lost by removing the automatic default subnetpool
fallback behavior.

ApiImpact

[1] https://review.openstack.org/#/c/279378/

Change-Id: Ifff57c0485e4727f352b2cc2bd1bdaabd0f1606b
Related-Bug: #1545199
Closes-Bug: #1547705"
f392a04051ac45dc023a594d605420ef30a19a2e,2016-02-24 09:39:52+00:00,"Pecan: filter items need type conversion

In order for filtering to work properly on GET requests, filter
values should be converted to the appropriate type specified in
neutron.api.v2.attributes.RESOURCE_ATTRIBUTE_MAP.

Without this change queries on boolean attributes, for instance,
won't work as the value to filter on will be passed to the plugin
as a string.

Closes Bug: #1537924

Change-Id: I0a697a01f272f94378928ecc099232e3b2d11f1f"
a0f7153f9512ce313f0c8762889fe3ef6b455a32,2016-02-24 17:14:39+00:00,"Update default gateway in the fip namespace after subnet-update

The gateway does not get updated after a subnet-update --gateway
because the router is already subscribed to the fip namespace.
On a restart, the fip namespace has no subscribers, which causes
the gateway to be created. You shouldn't have to restart the L3
agent in order to update the gateway.

In order for the default gateway in the fip namespace to be updated
after a subnet-update, the underlying code which sets the default
gateway needs to be called even if the router is already subscribed to
the fip namespace.

The bit of code which is responsible for updating the default route has
been refactored into its own method, update_gateway_port, which is then
called after a 'subnet-update --gateway ...'. If the gateway has
actually changed, the default route in the fip namespace will be
updated.

Change-Id: I0552c4a50ae09a6606e88395f7545179d02733dd
Closes-Bug: #1512858"
7a80caff5975afea757534e767b2d0182b7c9098,2016-02-24 13:55:01-08:00,"Override addOnException to catch exceptions

addOnException in testtools will leak exceptions in addOnException
handlers.[1] Rather than trying to be diligent about making
bulletproof exception handlers, this patch just overrides
addOnexception to catch exceptions and add them as details to the
test failure info.

1. http://testtools.readthedocs.org/en/latest/for-test-authors.html#addonexception

Related-Bug: #1548547
Change-Id: Iee0a4203b8e81cbc0a07d8ea119f04b53f5f3126"
35e234db9064d334f4ce99f6a40ace042c970f35,2016-02-24 15:18:56-08:00,"Make __table_args__ declarative in RBACColumns

The UniqueConstraint being constructed at class load time for
RBACColumns meant that all tables inheriting from it ended up
sharing the same UniqueConstraint object. This led to a bunch
of warnings about columns being replaced from one table to
another. This didn't appear to affect any functionality but it
may have broken queries across both tables.

This patch just converts it into a declared attr so a separate
constraint object gets created for each table that inherits the
class.

Closes-Bug: #1550618
Change-Id: I02b8e911125c06691bf02b6e7ac02cf25c4c4142"
847a35a6491504aa0f920c7027032977c86ee622,2016-02-25 20:44:39+00:00,"Fix test_get_device_id() failure on OSX

A recent change to fix a mock issue in bug 1544522 broke this test
on OSX because it's using the FQDN as cfg.HOST.host.

Change-Id: Ib6098abb16511c91865382834e25d2b96d3eab94
Closes-bug: #1549364"
8da632a22d140dfdacc52b658471a7432f7d35a1,2016-02-26 14:19:43+08:00,"Change the exception type from ValueError to IpamValueInvalid

The current ValueError in _validate_with_subnet will return an unfriendly
""Internal Server Error"" to user who wrong configured the subnet and pool. This
patch introduces a new exception IpamValueInvalid and it will be mapped to an
meaningful webob exception.

Closes-Bug: #1531401

Change-Id: Ib50a4b3cd1881a0c364d354728fc43040c3ed520"
472d84d25cee0694500e583845718a4f377cc75c,2016-02-26 16:02:12+08:00,"Catch PortNotFound after HA router race condition

When neutron server deleted all the resources of a
HA router, L3 agent can not aware that, so race
happened in some procedure like this:
1. Neutron server delete all resources of a HA router.
2. RPC fanout to L3 agent 1 in which the HA router was
   master state.
3. In l3 agent 2 'backup' router set itself to masert
   and notify neutron server a HA router state change
   notify.
4. PorNotFound rasied in updating router HA port status.

How the step 2 and 3 happens?
Consider that l3 agent 2 has much more HA routers than l3 agent 1,
or any reason that causes l3 agent 2 gets/processes the deleting
RPC later than l3 agent 1. Then l3 agent 1 remove HA router's
keepalived process will soonly be detected by backup router in
l3 agent 2 via VRRP protocol. Now the router deleting RPC is in
the queue of RouterUpdate or any step of a HA router deleting
procedure, and the router_info will still have 'the' router info.
So l3 agent 2 will do the state change procedure, AKA notify
the neutron server to update router state.

This patch is mainly to deal with the race by catching the
PorNotFound exception in neutron-server side.

Change-Id: I34d7347595bfceb8a70685672a6287e1a44ede6b
Closes-Bug: #1533454
Related-Bug: #1523780"
d1accc36689fdda5bb5e16d276d5f284bc80a6bc,2016-02-26 18:15:25+08:00,"Catch DBReferenceError in HA router race conditions

If auto_scheduler the router, during the race, the neutron server may
treat the HA router as 'no scheduled', then it will create a new HA
port binding with the router(id) which is deleted concurrently, and
then foreign key constraint error(Integrity Error) raised.

Change-Id: I81fdd2c971ee4ae5133126b6887ba6ad855ef138
Closes-Bug: #1533460
Related-Bug: #1523780"
b2d0985d05013bf63eb965f3e5c934c558ea9f0d,2016-02-26 09:58:23-05:00,"ML2: Increase segment_mtu from 0 to 1500 bytes

Neutron should return sane MTU values in the API. A Neutron Network
that has an MTU of zero wouldn't actually be a useful network, because
nothing could ever be transmitted. Zero is a junk value, so let's
replace it with standard ethernet MTU, which is a more believable value
to return to users.

Change-Id: I6a10c4dfc1f2198667f3d02528e2ca8020cb5bb8
Closes-Bug: #1549471"
2e7eb09271912e9db1948b15ab3f8e184d4c324a,2016-02-26 15:48:01+00:00,"macvtap: Macvtap L2 Agent

This agent is required by the macvtap ml2 driver to support
macvtap attachments for libvirt qemu/kvm instances. It introduces
a new configuration option MACVTAP.physical_interface_mappings.

The review is submitted in three parts:
 - Part 1
    Common functions that are used by the ml2 driver and the agent
 - Part 2
     The Mechanism Driver to support port binding for macvtap attachments
 - Part 3 (this part)
    The Macvtap L2 Agent.

DocImpact
New ML2 mech driver + l2 agent
New config option ""macvtap.physical_interface_mappings""

Change-Id: I219d80b4c704ac2f41edd3501f4b2198925778d6
Closes-Bug: #1480979"
aeaf77a5295080a3010a2e9c32e24f47c8cc73cc,2016-02-26 17:03:59+00:00,"Qos policy RBAC DB setup and migration

This patch implements a new database model required for the
qos-policy RBAC support. In addition it migrates the current qos-policy
'shared' attribute to leverage the new 'qospolicyrbacs' table.

'shared' is no longer a property of the QosPolicy DB model. Its status
is based on the tenant ID of the API caller. From an API perspective the
logic remains the same - tenants will see qos-policies as 'shared=True'
in case the qos-policy is shared with them). However, internal callers
(e.g. plugins, drivers, services) must not check for the 'shared'
attribute on qos-policy db objects any more.

DocImpact
APIImpact

Blueprint: rbac-qos
Related-bug: #1512587

Change-Id: I1c59073daa181005a3e878bc2fe033a0709fbf31"
ea8d60f561d06ec64de26caf39cdb3c397492789,2016-02-26 17:40:10+00:00,"Added agent specific API support to L2 extensions

- Introduces an API to allow l2-agents to access resources within
  the Open vSwitch Agent, specifically the integration and tunnel bridges.
- adds consume_api method to the AgentCoreResourceExtension class.
- modifies the AgentExtensionManager class to accept the AgentExtensionAPI
  class as an optional argument.
- adds the OVSAgentExtensionAPI class.
- modifies ovs_lib and ofswitch to include a list of uuid stamps
  to exempt from flow deletion.
- adds the OVSBridgeCookieMixin class that manages the distribution of
  cookies and maintains the list of reserved cookies.
- modifies OVSNeutronAgent to initialize OVSAgentExtensionAPI and pass
  into the AgentExtensionManager.

Partial-Bug: #1517903
Co-Authored-By: Nate Johnston <nate_johnston@cable.comcast.com>
Co-Authored-By: Thomas Morin <thomas.morin@orange.com>
Implements: blueprint l2-api-extensions

Change-Id: I7cb61f30689dff2d7895d444060dedc1532a63ec"
1b5fbd9d0e25308d27eb3f9aa75878b5df6aa59f,2016-02-27 03:02:18+00:00,"Collect details on ARP spoof functional failures

There seems to be some race condition or corner case in the
ARP spoofing functional tests that cause them to randomly
fail in the gate but it's difficult to reproduce them
locally. This patch adds a bunch of details on failures so
we can maybe get some hints about the unexpected state of
the bridge or interfaces that is causing the failure.

Partial-Bug: #1550623
Change-Id: I15b7ab3ce2a95d2b432239d535e3700f28ad21de"
046be0b8f30291cd029e6e97a4c6c5a1717a8bd1,2016-02-28 13:03:07-05:00,"Filter HA routers without HA interface and state

This patch adjusts the sync method to exclude any HA
routers from the response that are missing necessary
HA fields (the HA interface and the HA state).

This prevents the agent from every receiving a partially
formed router.

Co-Authored-By: Ann Kamyshnikova <akamyshnikova@mirantis.com>

Related-Bug: #1499647
Closes-Bug: #1533441
Change-Id: Iadb5a69d4cbc2515fb112867c525676cadea002b"
2f741ca5f9545c388270ddab774e9e030b006d8a,2016-02-29 05:31:48+00:00,"Add API extension for reporting IP availability usage statistics

Implements an API extension for reporting availibility of IP
addresses on Neutron networks/subnets based on the blueprint
proposed at https://review.openstack.org/#/c/180803/

This provides an easy way for operators to count the number of
used and total IP addresses on any or all networks and/or
subnets.

Co-Authored-By: David Bingham <dbingham@godaddy.com>
Co-Authored-By: Craig Jellick <craig.jellick@gmail.com>

APIImpact
DocImpact: As a new API, will need all new docs. See devref for details.

Implements: blueprint network-ip-usage-api
Closes-Bug: 1457986
Change-Id: I81406054d46b2c0e0ffcd56e898e329f943ba46f"
1ed0acd269574880d1009e96d0257ae5a61581b9,2016-02-29 19:02:25+00:00,"Removed static reference to LinuxBridge in logging

Removed hard-coded ""LinuxBridge"" from logging message in the common
agent since it could also be used by other agents and changed it to
log the agent type instead.  This should allow logs to reflect
which agent type is actually using the common agent.

Removed unused/leftover constants from the common agent.

Change-Id: I2e790bf052f18f7314bfd1677fde65b96b2a5edd
Closes-Bug: #1551219"
4df8d9a7016ab20fce235833d792b89309ec98a7,2016-02-29 19:19:25+00:00,"Make agent interface plugging utilize network MTU

This changes the 'plug' and 'plug_new' interfaces of the
LinuxInterfaceDriver to accept an MTU argument. It then
updates the dhcp agent and l3 agent to pass the MTU that
is set on the network that the port belongs to. This allows
it to take into account the overhead calculations that are
done for encapsulation types.

It's necessary for the L3 agent to have the MTU because it
must recognize when fragmentation is needed so it can fragment
or generate an ICMP error.

It's necessary for the DHCP agent to have the MTU so it doesn't
interfere when it plugs into a bridge with a larger than 1500
MTU (the bridge would reduce its MTU to match the agent).

If an operator sets 'network_device_mtu', the value of that
will be used instead to preserve previous behavior.

Closes-Bug: #1549470
Closes-Bug: #1542108
Closes-Bug: #1542475
DocImpact: Neutron agents now support arbitrary MTU
           configurations on each network (including
           jumbo frames). This is accomplished by checking
           the MTU value defined for each network on which
           it is wiring VIFs.
Co-Authored-By: Matt Kassawara <mkassawara@gmail.com>
Change-Id: Ic091fa78dfd133179c71cbc847bf955a06cb248a"
9712e364fc4ea81c5958d63524a528e8aff44770,2016-02-29 15:35:45-08:00,"Catch DBDuplicateEntry errors in RBAC code

This catches duplicate entry errors in the RBAC code
and converts them into an an appropriate exception so
clients get an HTTP conflict instead of an internal
server error.

Change-Id: I957ade2356ae9cb5bbb7e2322b4dcb37706665cf
Closes-Bug: #1551473"
12ef585f91d01e1a8bf450e66d1cdbb79bf86f99,2016-03-01 00:18:35+00:00,"Deprecate network_device_mtu

All interface plugging MTUs should be calculated based on the
MTU of the network object that the port is being created on.

Partial-Bug: #1542108
Partial-Bug: #1542475

Change-Id: Idf6221fee2c7da86123b330ad3c235ecc6868242"
49b4dd3478d782aee4260033825aa6b47eaf644a,2016-02-29 19:05:26-08:00,"Use network RBAC feature for external access

This allows access to external networks to be controlled via the
RBAC framework added during Liberty with a new 'access_as_external'
action.

A migration adds all current external networks to the RBAC policies
table with a wildcard indicating that all tenants can access the network
as RBAC.

Unlike the conversion of shared networks to RBAC, the external table
is left in the DB to avoid invasive changes throughout the codebase
to calculate the flag relative to the caller. So the current 'external'
flag is used throughout the code base as it previously was for wiring
up floating IPs, router gateway ports, etc. Then the RBAC entries are
only referenced when determining what networks to show the tenants.

API Behavior:
 * Marking a network as 'external' will automatically create a wildcard
   entry that allows that network to be accessed by all tenants.
 * An external network may have all of its RBAC entries deleted and then
   only an admin will be able to attach to it.
 * An RBAC 'access_as_external' entry cannot be deleted if it is required
   for a tenant that currently has a router attached to that network.
 * Creating an 'access_as_external' RBAC entry will automatically convert
   the network into an external network. (This is to enable a workflow
   where a private external network is never visible to everyone.)
 * The default policy.json will prevent a non-admin from creating wildcard
   'access_as_external' RBAC entries to align with the current default policy
   we have on setting the 'external' field on the network to prevent poluting
   everyone else's network lists.
 * The default policy.json will allow a tenant to create an
   'access_as_external' RBAC entry to allow specific tenants
   (including itself) the ability to use its network as an external network.

Closes-Bug: #1547985
DocImpact: External networks can now have access restricted to small subsets
           of tenants
APIImpact: 'access_as_external' will be allowed as an action in the RBAC
           API for networks
Change-Id: I4d8ee78a9763c58884e4fd3d7b40133da659cd61"
2c9530c91705f60a41ccdac2889507e4cb9edb01,2016-02-29 22:43:23-08:00,"Set veth_mtu default to 9000

Unfortunately we may have to continue to support veth connections
in the OVS agent for QoS use-cases. Related discussion:
https://bugs.launchpad.net/bugs/1550501

For the particular veth connections that reference the 'veth_mtu'
setting, they are constructed long before we know the MTUs of the
networks that will be going over them. So this patch changes their
default to be 9000 to try to ensure they won't be silently dropping
frames in jumbo MTU deployments.

Change-Id: I6859ebdde1f7e3a8163b49d705620e522ada606a
Related-bug: #1542475"
97a272a892fcf488949eeec4959156618caccae8,2016-03-01 11:20:48+01:00,"RPC Callback rolling upgrades reporting, and integration

This is the second patch to allow upgrades on RPC versioned
objects callbacks.

This enables resource version notifications from agents to all
neutron servers via fanout for updating the version sets in
memory, and via agent status updates for DB storage, so any
neutron server can retrieve such information at boot.

Closes-Bug: #1535247

Change-Id: I67c1323267aaf7e49f4a359ff50b94e52dba4380"
45410d76bea6a37b750b1b197f1b04edaf32c5aa,2016-03-01 10:45:02+00:00,"Add support for QoS for LinuxBridge agent

There is a new QoS extension driver for the linuxbridge agent
being added. This driver provides support for QoS configuring
on the linuxbridge agent.
This patch introduces two new config options for Linuxbridge agent:
kernel_hz - HZ value of host kernel,
tbf_latency - value of latency in tbf qdisc to calculate size of queue.

Co-Authored-By: vikram.choudhary <vikram.choudhary@huawei.com>

Change-Id: I457ca2569b5d4a916ba09e71040505cd0ad3257b
Closes-Bug: #1500012
Closes-Bug: #1550514
DocImpact Update agent configuration to show settings related to
          QoS and bandwidth limiting"
4b227c3771eba1cbaa27c6c33829108981cd9b69,2016-03-01 17:05:11+00:00,"Objects DB api: added composite key to handle multiple primary key

Moving CRUD DB operation for objects from db/api.py to objects/db/api.py
Renaming object get_by_id(id) to get_object(**kwargs)

Many models in Neutron DB have complex primary keys, concatenated from
a few properties. This patch adds ability to define multiple primary keys
in NeutronDbObject, which are automatically evaluated into DB query
when performing operations.

Partial-Bug: #1541928
Change-Id: I0f63a62418db76415ddd40c30c778ff7541b93dc"
0ae3c172ae4a7f80df5473ed53b8424ea408c583,2016-03-02 05:39:04+09:00,"Make API framework more flexible for various extensions

This patch adds a function to Neutron extension mechanism
so that we can add API methods to ""/resources"" path rather than
""/resources/action"" path.

This patch also allow extentions to control correspondences
between action and status in API request.

Change-Id: I862086f7528583e65d7bee794f011ddff6ae8901
Partial-Implements: blueprint add-tags-to-core-resources
Related-Bug: #1489291"
ec1457dd7503626c917031ce4a16a366fe70c7bb,2016-03-02 05:43:14+09:00,"Add tag mechanism for network resources

Introduce a generic mechanism to allow the user to set tags
on Neutron resources. This patch adds the function for ""network""
resource with tags.

APIImpact
DocImpact: allow users to set tags on network resources

Partial-Implements: blueprint add-tags-to-core-resources
Related-Bug: #1489291
Change-Id: I4d9e80d2c46d07fc22de8015eac4bd3dacf4c03a"
7fb8d542efab555e2e3b466fe9a04fb77d836c02,2016-03-01 20:47:12+00:00,"Add filter for resource tag

Introduce a generic mechanism to allow the user to get
Neutron resources with tag filter.

APIImpact

Change-Id: I1e5b25fea268e188cc9620c72b3c71004b197512
Partial-Implements: blueprint add-tags-to-core-resources
Related-Bug: #1489291"
ad7b72963d462f9a512eca3b5a054d8ea33f2324,2016-03-01 13:32:29-08:00,"unbreak unit test caused by c5fa665de3173f3ad82cc3e7624b5968bc52c08d

The change set of c5fa665de3173f3ad82cc3e7624b5968bc52c08d
introduced a new test TestMl2PortsV2.test_update_port_host_id_changed
which isn't always correct depending on driver.
ML2 driver may change port status to ACTIVE on port binding.
With such driver, the test fails. Grep showed 5 decomposed driver
don't have the assumption.
So this patch makes the test to run only _process_bind_port() without
calling full update_port() so that precommit/postcommit don't get
involved.

Change-Id: Ib034e2121914e5f253eb673261f26b4c8487f431
Closes-Bug: #1545218"
a6c231cdd731dae900c372799a890407bbc24a2c,2016-03-01 13:42:50-08:00,"Make run_ofctl check for socket error

When the OVS bridge is still being initialized we get
a ""failed to connect to socket"" error when running ovs-ofctl.
This shows up quite frequently in our functional tests and
may be the source of their high failure rate.

Ultimately we need to change the behavior of run_ofctl to not
ignore errors by default, but this will require a lot of effort
because there are many places that likely expect this behavior.

As a workaround, this patch checks for the specific socket failure
and attempts the command again up to 10 times, sleeping for 1
second between each attempt to wait for the bridge to be ready.

Closes-Bug: #1550623
Closes-Bug: #1551593
Change-Id: I663a54608ed96133014104fe033ecea0a867ac4c"
c40012ffaec9a0711285cc6896c35893b2a9f6a3,2016-03-02 08:29:36+08:00,"make/update_subnetpool_dict call _dict_extend

Now the extension fields were not being added to the response for
subnetpool, and when update subnetpool, the response of updated was not
contain any extensions which based on 'standard_attr'.

This patch add 'call _extend_dict' functions to make subnetpool support
for extending dict.

Change-Id: I7bc449aa079d84869b2a707b36bbbfb22d540cc5
Closes-Bug: #1548161"
1091eea1fd502dfc094fa02501a449842bd10196,2016-03-01 19:16:36-08:00,"Allow auto-allocate's dry-run API call to work for regular users

Add tenant_id to allow for policy check to succeed.

Change-Id: I4f470e683406564aaed91faebb010bce27655b39
Closes-bug: #1552059"
c6db32e8a713f248e04a8989c085607df4b04fb0,2016-03-02 11:56:35+00:00,"Improve logging for port binding

When binding a port fails, it's really hard right now to
understand the reasons of the failure, unless the log level
is set to debug. In addition to that many log statement
are duplicated.
The goal of this patch is to solve these problems.

Closes-bug: #1543510
Change-Id: I262973126e8ca5af2b20a3a5bc35dea4251c0a78"
2bcedf27a12c37c152eec1b11c991e28fb31c91e,2016-03-03 16:11:18+01:00,"Autogenerate macvtap agent config file

Enable autogeneration of /etc/neutron/ config file for macvtap agent.

Change-Id: I3637d16e3ab53248ba9b84eeb8b7d979af0ecaae
Closes-Bug: #1552742"
35ba0a19d9d7eb08c045b433ca94a2b47e2833fa,2016-03-03 21:46:25+00:00,"Fix pecan collection->plugin map for extensions

The way pecan was mapping collections to plugins always assumed
that the same plugin that supported an extension that extended
a given collection was responsible for the collection itself.
This isn't the case for extensions that just add data to a
collection via the dictionary extension mechanisms. For example,
the timestamps are implemented in an extension that is run by
a standalone service plugin that just performs DB updates via
DB hooks and gives the responses to users via the dictionary
extension hooks.

This patch fixes it by checking to ensure the plugin actually
supports the get method for the collection itself before assuming
that the collection belongs to the plugin.

Closes-Bug: #1552926
Change-Id: I22fa396e1ccd6af936fd4d58bbb0638ff5ab4467"
1c67cda0f8ce5b6ff028d53cedbb792931fd96f6,2016-03-04 00:44:40-05:00,"Fix branch order when upgrading to alembic milestone

When using neutron-db-manage to upgrade to a milestone tag,
the script was not ensuring that the expand branch was
upgraded before the contract branch. This broke projects
where contract migrations depend on expand migrations.

Fixes-Bug: #1550434

Change-Id: I0e6fc31dfa062c689936b2fe982147335ad9dce3"
305980a41e1475074d2d1fa286dae2994a1b8b06,2016-03-04 17:15:50+01:00,"Mock out database access for QoS policy object interface tests

When we merged RBAC support for QoS policies, we missed mocking out
database access triggered by RBAC metaclass hooks in this test. It made
the test failing if executed on its own, since in that case no database
was created in memory for those access attempts to succeed.

Now, mock out all fetches consistently for all object interface test
cases.

Change-Id: I6f7b68ec993849077f859f2e86609022cbc0bcc1
Closes-Bug: #1553254"
4a7c60830104047a9750618e840b4b824866b0f2,2016-03-05 00:22:25+00:00,"Continue the fwaas decoupling and cleanup

Remove some stale code. FWaaS has its own tempest plugin now.

Closes-Bug: #1506760

Change-Id: Ifd49d6b2b68fe31f27ae3eb26e272167683075c6"
3f556074c0219bab373535964888677da09dd27c,2016-03-04 17:53:23-07:00,"Skip racey BGP tests

Change-Id: I58e6056a9fe6460352855461e74700f4934e6e3f
Related-bug: #1553374"
5dacbba701037200f9b0ae40c34981ecd941b41c,2016-03-05 02:29:35+00:00,"Add a description field to all standard resources

In order to give users and operators more flexibility in
annotating the purpose of various Neutron resources, this patch
adds a description field limited to 255 chars to all of the
Neutron resources that reference the standard attribute table.
The resource that reference the table are the following:
security_group_rules, security_groups, ports, subnets,
networks, routers, floatingips, subnetpools

This patch adds a description table related to standard attributes
and migrates over the existing security group description to the new
table as well.

Co-Authored-By: James Dempsey <jamesd@catalyst.net.nz>

APIImpact
DocImpact: Adds a description field to all resources outline in
           commit message.
Closes-Bug: #1483480
Change-Id: I6e1ef53d7aae7d04a5485810cc1db0a8eb125953"
c7e972ce4a5d61cfcdff5b2fc4ba62a94905003a,2016-03-05 08:37:16+00:00,"Use floating IP to connect different address scopes

Currently, floating ip could be used to connect internal subnet and external
subnet in different address scopes. But the internal subnets that are in the
same address scope of external network are isolated. This is diagramed as
follow:
+---------------------+       +------------------------+
|   address scope 1   |       |    address scope 2     |
|                     |       |                        |
|  +----------------+ |       |   +---+----------+-+   |
|  |internal network| |       |   |external network|   |
|  +------------^---+ |       |   +-------^--------+   |
|               |     |       |           |            |
|       +-------+--+  |       |   +-------+----+       |
|       |fixed ip A+-------------^+floatingip B|       |
|       +----------+  |       |   +------------+       |
+---------------------+       |                        |
                              | +--------+  +--------+ |
                              | |internal|  |internal| |
                              | +-----+--+  +----+---+ |
                              +------------------------+

This patch will make the fixed ip A be able to connect internal networks in
address scope2. And internal networks in address scope2 are able to connect
fixed ip A by visiting floating ip B.

Change-Id: If3b0b49a994e8c604809e524dca6f4afe5b626f3
Closes-Bug: #1543885"
391c2327c3b9de0e2b9875bab8d6f6909fa0983a,2016-03-05 17:49:48-08:00,"Fix API test for external subnet visibility

The test_external_network_visibility test incorrectly
assumes that subnets will never be visible on external
networks. However, this is not true in the case that a
network is both external and shared.

This updates the test to ignore shared networks.

Change-Id: I0219e17d2ec70939039344826d35cb533b3ce065
Closes-Bug: #1553595"
284f507adaa2af7691e49327cdfc2baba9268455,2016-03-06 02:24:14-08:00,"Delay description association proxy construction

Association proxies cannot be constructed in the mixin because they
will be shared between all models that inherit from it. This means
they all share one and it will effectively be broken for all but the
first to load it.

This changes it to a declared attr like the others to make sure it's
not constructed until each model inherits from it.

Change-Id: I3e1aa21cd02c0f116cc6dee5e0577988ec37f767
Closes-Bug: #1553689"
113e59b12ec4f92e8a41b8ec72d4211296def660,2016-03-06 14:16:34-08:00,"Fix tempest lib import in API tests

Change Ic2d4cea4f11222fc7b45eb378cfc32974c1be9b6
removed the service_client module and replaced it
with rest_client. This updates our code to reflect
that.

Change-Id: I5f6b0de632703eac6b6f05ae48c44d511f1fda5e
Closes-Bug: #1554362"
9ba57b8c23bf08c08f89c8f49a5514e14454701a,2016-03-07 12:50:19-05:00,"Tag the alembic migration revisions for Mitaka

Previously when we had one repo with one alembic branch we would
create a milestone revision on that single branch. Now we have
multiple repos and expand/contract branches for each repo.  So
now we tag the final revision on every branch when we make a
milestone release.

The database can be upgraded with the command:
  neutron-db-manage upgrade <milestone>
where <milestone> is an alias for all the revisions for a
milestone.

Partial-Bug: #1552935

Change-Id: I44456a8389b761bc9e0f35845b90671daddf3b59"
665942866940fc474a3b122828ccb2081e975215,2016-03-08 06:35:49+00:00,"Pecan routing for agent schedulers

For pecan to support existing agent scheduler controllers, a couple of shim
pecan controllers need to be added.  These shim controllers will be used if
there are extensions that have legacy controllers that have not been
registered.  The shim controller is just a passthrough to those legacy
controllers.  This may have the added benefit of support existing out of
tree extensions that have defined their legacy extension controllers the
same way.

Changes to how the router(s) controllers determines whether something
is a member action has been changed a bit to support this.

Closes-Bug: #1552978
Co-Authored-By: Kevin Benton <kevin@benton.pub>
Change-Id: Icec56676d83b604c3db3377838076d6429d61e48"
cea149212e6387932eaac8448c951d2ceb7ae23d,2016-03-08 09:21:34+00:00,"Add fip nat rules even if router disables shared snat

For legacy router, there are some iptables rules added for external gateway
port. Some of these rules are for shared snat, some are for floating ip.

When user disables shared snat of router gateway, some of the iptables rules
that floating ip needs will not be added to router. This will cause the
reported bug, ping floating ip but reply with fixed ip.

The fix will add the iptables rules that floating ip needs, no matter if
router enables shared snat. A functional test is also added for the issue.

Change-Id: I3cf4dff90f47a720a2e6a92c9ede2bc067ebd6e7
Closes-Bug: #1551530"
fc954c9426a58e6bdcb744b1e5d131eff99d65e8,2016-03-08 04:21:31-08:00,"Add Nova notifier hook calls to pecan

This patch adds a the Nova notifier calls to the pecan
notification hook and adds some simple functional tests
for them as well.

This patch also alters the operations of the policy enforcement
hook, which now stores in the request context the original
value of the object rather than the value of the object as it
would have appeared to the plugin - that is to say a merge
between the original objects and the parameters passed on to
the request body. Such 'frankenobject' is indeed of no use for
the notifiers.

Partial-Bug: #1552979
Change-Id: I4a37197eb38afe15d2b368f4e355226824478792"
ae45cd5732b8b75a5b2d35df555f46e11145eb85,2016-03-08 11:11:08-08:00,"Add global_physnet_mtu and deprecate segment_mtu

Introduce the neutron-wide 'global_physnet_mtu' option that
references the underlying physical network MTU. This also
introduces a method in plugin.common.utils that all plugins
should use to retrieve it. This value should be used to
calculate the proper MTU for virtual network components.

This patch also deprecate the 'segment_mtu' option specific
to the ML2 plug-in and makes ML2 reference this new option.

Closes-Bug: #1542475
Closes-Bug: #1542108
Change-Id: I6ffc8973c9b8f46cc19922ff04fdd2d23646b878"
cb7e70497f68c295080add6c739743e6ea81e824,2016-03-08 12:46:20-08:00,"Downgrade ""device not found"" log message

This message is a normal occurence when an agent requests
details about a port that was just deleted. It's not a
warning condition that the operator can take any action on
so this patch downgrades it to debug.

Change-Id: I4c19993f03bf4d417bff2d3d45bb40b1b732650d
Closes-Bug: #1554696"
0db4ba3f855d84a3d7522aa17dc89c4792d2ef4a,2016-03-08 20:47:09+00:00,"Downgrade network not found log in DHCP RPC

This is a normal occurence as networks are created and
deleted. It's not something that an operator should be
warned about.

Change-Id: I3bb498a29d93a88b059a669d510d21b4c65ea014
Closes-Bug: #1554695"
06569179aefcc569e7a3cc1fb828f0340d38d058,2016-03-08 14:32:01-08:00,"Catch DB reference errors in binding DVR ports

A port can be deleted right after get_port is called but before
the binding is created. So we need to catch both PortNotFound
from the get_port and DBReferenceError from the binding creation.

Co-Authored-By: Adolfo Duarte <adolfo.duarte@hpe.com>

Closes-Bug: #1501515
Change-Id: Ieddcb10bb019fe6dd7079255124e48305f406614"
a33bc9957b80ab27b9f8a4610012026f766e5b0e,2016-03-08 20:01:06-08:00,"Add logging statements to help debug L3 sync

Add some debug logging statements to help determine why a
requested router was not being returned to an L3 agent.

Change-Id: I31eec599f11bb7e931984d436ef95e10bc9ffec2
Related-Bug: #1554876"
3ba14bb099baa6982894dee2a4a4a7bd3a5f0b96,2016-03-09 19:01:35-05:00,"Copy tempest.common.tempest_fixtures in to Neutron

tempest_fixtures is used exclusively in Tempest and Neutron,
therefor I don't think it makes sense to move it in to tempest.lib.
I'd rather copy it in to the Neutron repo.

Change-Id: Ibb52e2cae3f1af1569a04123c43ebc4d125e326d
Related-bug: #1555356"
2dc9d67f6e0fbec8272dc1dfdb594d05378536d5,2016-03-09 16:25:28-08:00,"Construct exceptions before passing to retryrequest

The IP allocation failure constructions weren't being constructed
before being passed to RetryRequest so they would fail to be reraised
after the retries were exhausted.

This patch just constructs them and adjusts a few of the unit tests
to execute the full retry life-cycle.

Closes-Bug: #1555387
Change-Id: I1c1ea488886ee3f4790eaa53911ea5845f327334"
ee3dc409bc3633f8477bce8998add9dadaf6543d,2016-03-09 19:59:47-05:00,"Remove unused Tempest AdminManager

Change-Id: If1c5983bdad63121cb7a8ab1d97b16f389ebfe09
Related-bug: #1555356"
7afbd3a6b896d6d1285343f31517e9a656cfa606,2016-03-10 03:04:11-08:00,"Check tap bridge timestamps to detect local changes

During a quick instance rebuild on Nova, it may remove a tap
interface and then plug it in within the agent polling window.
In this scenario the agent will not realize a device has changed
and will therefore not ask the server for info an subsequently
update its status. This will prevent the notification from being
sent back to Nova that the vif plugging has finished so the
VM will never resume state.

This adds a new timestamp collection method to the common agent
manager interface for devices that is used by the common agent
loop to determine if a device has locally changed.

The linux bridge implementation of it checks the timestamps on the
tap interface's 'bridge' directory, which will change whenever
the tap is added to bridge.

Closes-Bug: #1531862
Change-Id: If172470e907848556b6a8aff13520f94245919bb"
83ef6b56772d94e870b9c3eca928d5aefeffe07e,2016-03-10 11:02:45-08:00,"Using LOG.warning replace LOG.warn

Python 3 deprecated the logger.warn method, see:
https://docs.python.org/3/library/logging.html#logging.warning
so we prefer to use warning to avoid DeprecationWarning.

Closes-Bugs: #1529913

Change-Id: Icc01ce5fbd10880440cf75a2e0833394783464a0
Co-Authored-By: Gary Kotton <gkotton@vmware.com>"
ddd5df95266cf872a852577d16d9c5d188b4e13a,2016-03-10 15:34:08-05:00,"Delete 118~ API tests from Neutron

Deleted tests that duplicate tests from Tempest, according to the
new criteria specified in TESTING.rst.

Follow up steps are detailed here:
https://etherpad.openstack.org/p/neutron-tempest-defork

For reviewers, here's how to get a complete list of network
tests from Tempest. From a Tempest directory, execute:
testr list-tests tempest.api.network | cut -d""["" -f1 | cut -d""."" -f4-
I verified that every test removed here actually exists in that list.

Here's a list of patches that modified tests after the fork:
https://etherpad.openstack.org/p/neutron-tempest-defork-patches-since-initial-sync

And the list of tests we care about:
https://etherpad.openstack.org/p/neutron-tempest-defork, Ctrl-F for:
'Tests that should be synced from Neutron'

Related-bug: #1552960

Change-Id: I685291058f221a7ef0b5b7485280cdabceaa4af3"
54594b4fa0fe4f6fcc45f53b8ce19160d219f2df,2016-03-10 14:58:31-08:00,"ML2: Downgrade 'no bound segment' warning

This is a normal occurence if a port is created and updated
before it is actually bound to a host. It's not a warning
condition because it doesn't mean anything is wrong.

Change-Id: Ie1eb885f61e42dd7b24016adf3c02d4c504f6543
Closes-Bug: #1555850"
fc661571765054ff09e41aa6c7fc32f80fd0a98d,2016-03-10 15:03:30-08:00,"Add reno for deprecation of max_fixed_ips_per_port

This patch adds the release note to increase operator visibility.

The release notes system was not present when this option was
deprecated at the start of the Mitaka cycle so no release note
was created.

Change-Id: Ice97f8790c0b5f8dbed9e89cf1cd74536cccdd8c
Related-Bug: #1502356"
22aed6d8061cc609da2351df23b6f5ef40ca8358,2016-03-11 00:39:32+00:00,"Fix the context passed to get_subnets in _validate_routes

In the patch for bug #1538767 (https://review.openstack.org/#/c/273278),
get_ports() is passed with context.elevated(), while later get_subnet()
for those ports is still passed with the original context. This could
cause ""Subnet could not be found"" exception for ports only accessible
in context.elevated() but not in the original context.

This commit replaces context with context.elevated() in get_subnet().

Related-Bug: #1538767
Change-Id: I21e73625e0a625a431bfb22f847c3b6f9671daea"
72e9fc900183abb39e0687b4fa4a4a277f21152e,2016-03-10 17:04:44-08:00,"DHCP: Downgrade 'network has been deleted' logs

These will happen all of the time as networks are quickly
created/updated and then deleted. It's not any kind of
actionable warning condition so this patch downgrades them
to debug.

Change-Id: Idcfb185b9a0540c13101dceb3681132f38f1716c
Closes-Bug: #1555842"
dc68662a0be831b66fc50d6bca7a8f1d70351200,2016-03-11 17:38:03+00:00,"Fix PUT tag failure

This patch fix failure putting tag on network.
Timestamp causes the issue because it try to update 'updated_at'
of tag which doesn't have the attribute.

Change-Id: Iad088bbaf4b05a25153964ed30762b70fc8b3318
Closes-Bug: #1555686"
cc863e07156e3cfe020c5acfcd9875daff477de6,2016-03-11 20:17:06+00:00,"Remove test_external_network_visibility

This test was left behind according to plan laid out in patch [1].
Make its removal conditional to the Tempest sync-up patch.

[1] https://review.openstack.org/#/c/280427/

Related-bug: 1553595
Related-bug: 1552960

Change-Id: Ia85e7d03c32b5e2db901aed2c13bafe83896be0b
Depends-on: I0219e17d2ec70939039344826d35cb533b3ce065"
e433c2870a2a5a0ec18ae0ffe4d4866915da231a,2016-03-11 15:47:11-08:00,"Add metrics notifier to Pecan

This adds the standard 'object.(create|update|delete).(start|end)'
notifications to the Pecan notification hook and adds unit tests
to exercise them.

This patch also corrects the on_error handler for untranslated
exceptions which was incorrectly raising the exception rather than
returning it. This was resulting in the other hooks not getting
the correct status code on an untranslated exception.

Closes-Bug: #1552979
Change-Id: I400f8d3988db204caed25e7c848a415b45d47172"
d1c501cd1d31ed3f859975b40c01cb7aaa06d26d,2016-03-11 23:59:10+00:00,"L3HA: Do not wrap create/delete in transaction

This is unsafe when calling ML2 because ML2 assumes that its
functions will not be called inside of a transaction. This is
not only an issue for drivers that try to do DB lookups using
a different session in the post commit operation, but it's a
big issue for the delete methods.

The delete subnet and network methods in ML2 have 'while True'
loops that catch concurrency errors and retry the operation after
looking up info. If these are called inside a transaction, the
lookups will contain stale information and it can lead to the
while True loop never terminating!

Closes-Bug: #1551958
Change-Id: I33dc084ed15e5491fdda19da712a746ca87fbc8c"
21825d6cbe1709139f58181e376c44f4ac37ff1b,2016-03-11 16:45:28-08:00,"Pecan: Allow unauthenticated version listing

The current API allows listings of the neturon server
version without authentication. Because pecan was treating
this like a normal controller, it was requiring keystone
authentication.

This adjusts the version listing to behave as a wrapper so
it can be placed outside of the keystone authentication
wrapper to allow anonymous queries.

Closes-Bug: #1556038
Change-Id: I9f5aa3bea0e11c5e179fc286f9fa350b3930364f"
afe1a834000d33900b8646d308fa26fa807a2ca0,2016-03-12 14:20:01+00:00,"Block delete_(network|subnet) transactioned calls

These functions assume that they won't be called inside of a
transaction for two reasons. The first is an infinite loop that
will only terminate if it can actually retrieve the latest
information from the database. The second is that ML2's post-commit
operations are expected to occur after data was actually committed
so mechanism drivers that do DB lookups using a different session
may break.

This adds an explicit guard that prevents these two functions from
being called within an active DB session. The rest of the ML2
functions should eventually be converted to this style as well
(see the partial bug).

Related-Bug: #1551958
Partial-Bug: #1540844
Change-Id: I5c00b186585369ef6c8e2b9cb5a43b8bba0e5a7c"
aa00310eef0d2507c4da76eb5dd5130df043b0a5,2016-03-12 15:17:23+00:00,"Update network object in DHCP agent with router interface changes

In Dnsmasq, the function get_isolated_subnets() returns a list of
subnets in a network if the subnet is not connected to a router.

The implementation of this function checks all the router interface
ports in a cached network object passed from DHCP agent. But the
cached network object is not updated when a subnet is attached to
or detached from a router.

This patch fixes that by adding callback functions in DHCP RPC client
to notify DHCP agent when changes happen on router interfaces.

Closes-Bug: #1554825
Change-Id: Ifaab163f49e0d1c5cb3eba6efa96214104647e4e"
b66e771996f9d6d448dcfc8a9f7e3dc3f9f29021,2016-03-13 09:11:48+08:00,"Fix dict.keys() incompatibility in py34 in dhcp test

os.listdir() returns a list. But in py34, dict.keys()
will no longer return a list, but a iterable. So we
should not assume dict.keys() returns a list in tests.

This problem has not been tested out because we used
assertEqual() to test the result. sorted() will return
a list even if an iterable is passed in. We'd better
not use functions like sorted() to change the type
of the object to be tested.

So in this patch, we use assertItemsEqual() instead to
test if two lists equal to each other, which is not
order sensitive.

Change-Id: I365bcbb35a05c2587953383709254bd2064a69f7
Partial-Bug: #1556379"
3ab6f8fb4539136fc193c722be98926701da6b32,2016-03-13 13:36:45-07:00,"Extend dicts with original model in create/update

This adjusts the logic in ML2 create port and create
network to use the original DB object created rather
than attempting to retrieve it from the DB again.
This eliminates the race window where the object could
be deleted out from underneath the create operations
resulting in a 404.

To achieve this it adds a create_port_db and
create_network_db method to db_base_plugin_v2 that
returns the original model instead of returning a
dictionary.

This also adds a skip to a unit test that was using DB
events to trigger a rollback and retry. This test was
causing failures with a FlushError conflict between an
SQL alchemy new instance and a persistent instance in
the session. This bug is fixed in the follow-up patch.

Closes-Bug: #1556139
Related-Bug: #1556178
Change-Id: I3c4b4cb4f63236fca24abaf58881879c2d5657fa"
05c6f86249900ebdfeb004cdec1cbd4d6fc605a1,2016-03-14 03:23:53+00:00,"SG PRECOMMIT_CREATE should be triggered only once

Fix the bug that when sg creating, PRECOMMIT_CREATE triggered serveral
times which defined by sg_supported_ethertypes.

Change-Id: Ic63e9f7f067f0808c3288bb02c513eeaa8820b19
Close-Bug: #1555981"
7d9169967fca3d81076cf60eb772f4506735a218,2016-03-14 01:23:20-07:00,"Add IPAllocation object to session info to stop GC

This adds the IPAllocation object created in the _store_ip_allocation
method to the session info dictionary to prevent it from being
immediately garbage collected. This is necessary because otherwise a
new persistent object will be created when the fixed_ips relationship
is referenced during the rest of the port create/update opertions.
This persistent object will then interfere with a retry operation
that uses the same session if it tries to create a conflicting record.

By preventing the object from being garbage collected, the reference
to fixed IPs will re-use the newly created sqlalchemy object instead
which will properly be cleaned up on a rollback.

This also removes the 'passive_delete' option from the fixed_ips
relationship on ports because IPAllocation objects would now be
left in the session after port deletes. At first glance, this might
look like a performance penalty because fixed_ips would be looked
up before port deletes; however, we already do that in the IPAM
code as well as the ML2 code so this relationship is already being
loaded on the delete_port operation.

Closes-Bug: #1556178
Change-Id: Ieee1343bb90cf111c55e00b9cabc27943b46c350"
a374e52c4c9b2465b736d34aeac0ca5c92755944,2016-03-14 01:59:37-07:00,"Add API test ensure tenant can't delete other ports

Change I55328cb43207654b9bb4cfb732923982d020ab0a fixed
the policy enforcement to ensure that tenants could
delete ports on networks they didn't own. However, it
required a change to the policy engine so this test
adds a patch to ensure that it didn't break the normal
case that prevents tenants from deleting other tenant's
ports on networks they don't own.

Change-Id: I3118ec79c213c4eea4c5ca494e530c33189f6c59
Related-Bug: #1498790"
412012de59191d1340e3a03ab87af0ae704e4675,2016-03-14 12:07:23+00:00,"Create a hook in base object to modify the fields before DB operations

Added modify_fields_to_db(), modify_fields_from_db() methods and
fields_need_translation dict to define the map what name in object
implementation should be changed to database naming.
It will prepare dicts before writing to DB and also modify the DB output
to match the OVO layout.

Partial-Bug: #1541928
Change-Id: I923b58870584c5e5756b307760f9d502c53c18b1"
bb567e9b32bf58cb5f74149f1f5cb9cb656e565e,2016-03-14 17:04:20+01:00,"Reset RNG seed with current time and pid for each test started

This will hopefully fix fullstack failures where different process
fixtures running in parallel test processes and relying on the same
random.choice() generator seeded by the same initial value could pick up
the same value as a service free port, and spawn their respective
resources using the same port.

Which made one of those unlucky services to fail.

Change-Id: I13cfa9392fd138c5e1b1b7d397b9ea91b2a47ed2
Closes-Bug: #1551288"
9e7b274666da908709d6d1e005e25cb8ae9a7bcb,2016-03-14 17:08:35+00:00,"Update Neutron with temporary registry pattern from VersionedObjectRegistry

Update Neutron code which uses the temporary registry pattern to use
pattern which is now provided by oslo.versionedobjects in patch [1]

[1] https://review.openstack.org/#/c/263800/

Change-Id: I6d86b205fe29045fc6b68cf6cbc38f7aa6354b3f"
1257af45ea7fa9b0aece4a0b505778cab0e71daf,2016-03-14 11:56:51-07:00,"devref doc config option separation

Document separation of configuration options between services and agents.

Configurations used in devstack and deployment documentation should also be
updated since they are referenced as examples.

Partial-Bug: #1557119
Change-Id: Ia4b2a542cded6cc56c1b3eaa9e9b9e0abff31707"
c3db0707eff70f381913643891ba4e148977407d,2016-03-15 10:08:14+11:00,"Return oslo_config Opts to config generator

We shouldn't be returning keystoneauth Opts to the oslo_config
generator. Whilst it mostly works these objects are not interchangable
and it can result in problems. You can see this by entries such as:

  # Warning: Failed to format sample for tenant_name
  # isinstance() arg 2 must be a class, type, or tuple of classes
    and types

in the currently generated config files.

Keystoneauth provides a function that returns oslo_config options so
fetch, process and return those instead.

Change-Id: Ie3fad2381467b19189cbb332c41cea8b6cf6e264
Closes-Bug: #1548433"
f0bdb798fa14b7bd5649d98789e71803127dd9f7,2016-03-14 16:47:36-07:00,"DVR:Pro-active router creation with live migration

Today DVR routers are created after a dvr service port is
seen on a given node. But in the case of instance live
migration, the creation of l3 routed networks on the
destination node is delayed since we react to the event.

This patch tries to proactively create routers on the
destination node based on the portbinding profile info
updated by the nova when the instance is on a pre-migration
state.

Nova calls setup_network_on_host during the pre-migration
phase and we update the portbinding profile dict with
an attribute 'migrating_to' as shown below

port:{'binding:profile':{'migrating_to': 'host'}}

where 'host' points to the 'destination' of the port.

L3 plugin will verify the migration profile for the port on
any port update and then take action to create routers in the
respective agents if routers have not been created.

If the live migration fails or if reverted, then the port
binding profile attribute 'migrating_to' will be cleared from
the port profile. In this case, the router and the fip namespace
may be created on the destination node, but since the VM did
not land on the destination node, it would not cause any issues,
since the traffic will still be flowing out from the origination
node, except for the existence of the router and fip namespace.

For some reason if the creation of the router namespace and fip
namespace fails, then the live migration may still proceed as
it is now and the agent will create the router namespace and fip
namespace reactively.

The case were we report status back to Nova and Nova reacting
to the setup_networks_on_host status will be handled in the
upcoming release.

This patch should not affect any upgrades with respect to the
agent or server.

Change-Id: Ibb62f012333cfdfd468bafdc0b4501aa46b4b54d
Related-Bug: #1456073"
c04587110fef24c189d439bacbbbc7105085cbe1,2016-03-15 00:02:35+00:00,"DVR: Agent side change for live migration with floatingip

During live migration when an instance is in a pre-migration
state, and if the fixed_ip of the port has an associated
floatingip, the floatingip namespace should be created in
the destination node, before the VM instance lands on the
node.

The server side code will handle the pre-live migration case
and initiate the router creation on the destination node and
also will provide the 'dest_host' as an additional attribute to
the floatingips dictionary that is being passed to the agent.

So this patch reads the 'dest_host' and the 'host' variable
and if any of the two matches with the host, it will allow
the floatingip to be processed.

This will be an agent side change for addressing the vm
migration with Floatingip enabled.

Closes-Bug: #1456073
Change-Id: Idfbea7f3c66d6a1df5d3050912d620591c69b614"
67abf5f9f0e957150dd3b3b673094845810f9ea1,2016-03-15 10:11:18+08:00,"RBAC: Fix port query and deletion for network owner

Network owner should be able to get all ports and delete ports on
network as policy allowed. But current code fails to support this.

Current model query for Port is still based on tenant_id, it forgets
to check for network owner when context tenant_id is not port owner.

For port_delete action, policy will generate checking rules for port
attributes, such as:
    rule:delete_port:binding:vif_details
    rule:delete_port:binding:vif_type
This doesn't make sense, only single policy rule ""rule:delete_port""
is enough to check.

This patch fixes this issue.

Co-Authored-By: Kevin Benton <kevinbenton@buttewifi.com>
Change-Id: I55328cb43207654b9bb4cfb732923982d020ab0a
Closes-Bug: #1498790"
bbdcc6d4af27e316a423c9229fc13ba1d58fcc83,2016-03-15 03:14:05+00:00,"Fixes ""OVS Agent doesn't start on Windows""

The OVS Agent doesn't start on Windows because of Windows
specific import.

The fix is trivial and consists in implementing InterfacePollingMinimizer
as a empty class for Windows and importing polling from common.

Closes-Bug: #1556992

Change-Id: Ie43c841bf05b4b011a74a3f8198576cbc41bcbbb"
5ca8d0152afdd8dd178432c112d1e4ad9bde42ff,2016-03-15 13:56:22+08:00,"Fixes force to set ondelete=CASCADE in create_foreign_keys()

The create_foreign_keys method there forces any foreign keys that
created to have ondelete='CASCADE', no matter whether the
foreign_keys parameter passed to the method had that option set.
if the wrapper method remove_fks_from_table() is used to preserve
the state of foreign keys during a database migration, any foreign
keys on the table ""perserved"" this way will have cascading delete
added to them.

Change-Id: I04bdc863d67e2228f34a05f588c2e9f562918114
Closes-Bug: #1550027"
8785edc0e7c51844966487dce73fb80902b8e634,2016-03-15 08:32:26+01:00,"Add custom SQLAlchemy type for IP addresses

Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Co-Authored-By: Martin Hickey <martin.hickey@ie.ibm.com>
Change-Id: I4709548b385cf19156bc0589058a31cb301a6b5f
Partial-Bug: #1541928"
8f866145f3d1c1234c4feaca2e72fe4e8f7ecf99,2016-03-15 14:10:09+00:00,"Use context manager in bind NetworkDhcpAgent

In bind() method of dhcp_agent_scheduler for transaction was not
used context manager. This is not correct as if another exception
appear, not DBDuplicateEntry, that is caught, current transaction
will hang.

Current change is a simple refactoring, the code works as it does
prevously. Existing unit tests
* test_schedule_bind_network_multi_agent_fail_one,
* test_auto_schedule_network(Network already scheduled)
cover possible issues.

Closes-bug: #1557546

Change-Id: Ieb77738e065b997e0ab65afdc1f3bdbfb8f13fef"
ccbef43f5bd1f7c393d7ccc90e2ba79f42f3e1e6,2016-03-15 15:18:54+00:00,"Improve release notes for dvr fixes

Change-Id: Ida1165add974207a4ea25696d26e1daae7914288
Related-bug: #1456073"
6185a09d130edb7a21e21a354b3fa12fcbebe8a6,2016-03-15 09:27:57-07:00,"DVR: Handle unbound allowed_address_pair port with FIP

If an allowed_address_pair port associated with a FloatingIP
is configured to a service_port, the allowed_address_pair port
should inherit the service_ports host binding and device
owner if device_owner is not configured.

Hence the DVR will be able to deploy the FloatingIP for
the provided allowed_address_pair.

In this case if the associated port's admin state changes,
the allowed_address_pairs device_owner and host binding will
be reverted back to None.

When associated service port is deleted the allowed_address_
pairs device_owner and host binding will be reverted as well.

Change-Id: I32b8d3e85a8e12fc146c419766596fcfb61f32f6
Closes-Bug: #1445255"
487ad1dea4c57e546fac3596c2ed1cb7ce7d314f,2016-03-15 17:31:55+01:00,"Add custom SQLAlchemy type for MACAddress

Related-Bug: #277558
Change-Id: I5aed64b083fb848cb16bd34b1ca167a264531e03"
79bc54a2d83e05d863dc836d651710859394e25c,2016-03-15 22:55:32+01:00,"Fix add_is_default_to_subnetpool migration

add_is_default_to_subnetpool migration[1] is not working with a
non-empty subnetpool table because it adds a new non-nullable column
(is_default) to subnetpool table without a default value.

This change adds a server_default value to is_default column in
subnetpool table and updates associated db migration.

[1] neutron/db/migration/alembic_migrations/versions/mitaka/expand/\
     13cfb89f881a_add_is_default_to_subnetpool.py

Closes-Bug: #1557757
Change-Id: Ib0b2ac061d21a7d908f14b399b0bba06d94b7241"
d4aa8c5ea97cf0c8e52bc0a2cf635fc322ea8f19,2016-03-15 18:04:13-07:00,"Fix auto_allocated_topology migration with PostgreSQL

auto_allocated_topology migration[1] adds the column nullable boolean
column is_default to externalnetworks table. PostgreSQL sets is_default
to NULL as no server_default value is provided.

It implies inconsistencies with PostgreSQL as neutron-server returns
for non-default external-networks:
* is_default == None for external-networks migrated from Liberty,
* is_default == False for external-networks created with Mitaka.

This change alters is_default column in externalnetworks table into a
non-nullable column with a server_default value (False).

[1] neutron/db/migration/alembic_migrations/versions/mitaka/expand/i\
19f26505c74f_auto_allocated_topology.py

Closes-Bug: #1557785
Change-Id: I004a76237fe8d927a1d45dab4fdfefaf1af6de96"
d7aeb8dd4b1d122e17eef8687192cd122b79fd6e,2016-03-16 01:27:46-07:00,"De-dup conntrack deletions before running them

During a lot of port deletions, the OVS agent will
build up a lot of remote security group member updates
for a single device. Once the call to delete all
of the removed remote IP conntrack state gets issued,
there will be many duplicated entries for the same
device in the devices_with_updated_sg_members dicionary
of lists.

This results in many duplicated calls to remove conntrack
entries that are just a waste of time. The longer it takes
to remove conntrack entries, the more of these duplicates
build up for other pending changes, to the point where there
can be hundreds of duplicate calls for a single device.

This just adjusts the conntrack manager clearing logic to
make sure it de-duplicates all of its delete commands before
it issues them.

In a local test on a single host I have 11 threads create
11 ports each, plug them into OVS, and then delete them.
Here are the number of conntrack delete calls issued:

Before this patch - ~232000
With this patch - ~5200

While the remaining number still seems high, the agent is now
fast enough to keep up with all of the deletes.

Closes-Bug: #1513765
Change-Id: Icba88ab47ee17bf5d6ccdfc0f78bec911987ca90"
691f8f5ea54c04bfdfb76e25bda14665b05ed859,2016-03-16 01:35:26-07:00,"Add uselist=True to subnet rbac_entries relationship

Because the join conditions for Subnet rbac entries
are manually specified, SQLAlchemy is not
automatically detecting that this relationship is a list.
This adds the uselist=True kwarg to the relationship to
ensure that it's always handled as a list.

Change-Id: Ia4ae57ddd932260691584ae74c0305a79b2e60a9
Closes-Bug: #1557959"
9cf09ef680ed837ae26bc818e26cee8b586d72ed,2016-03-16 12:09:06+01:00,"Prevent all primary keys in Neutron OVOs from being updated

Primary keys in Neutron Oslo Versioned Objects should be prevented
from being updated. In the future we may reconsider the limitation.

Current thinking is that you would delete/add instead of update.

Change-Id: Ice0a43fdd8889f9ce34a7d83d2355d905555b788
Partial-Bug: #1541928"
8bccf9c2a5821be606cded7294efa00078bd3e4b,2016-03-16 12:40:23+01:00,"Handle synthetic fields in NeutronDbObject

Many objects in neutron have synthetic fields. Synthetic fields
are filled using the data from fields of a different table.
This patch makes it possible to handle synthetic fields directly
in NeutronDbObject so that objects can share this implementation.

Change-Id: Ia4695b1b10c0370c77b66f31588a56de332f462e
Partial-bug: #1541928"
ff4067af5ba52cc205f38d12cdf68bd454445ced,2016-03-16 12:47:45-07:00,"Outerjoin to networks for port ownership filter

Change I55328cb43207654b9bb4cfb732923982d020ab0a
added a port filter to compare tenant ID to the
network owner as well. This caused the networks
table to be added to the FROM statement since
ports wasn't joined to networks for any other
reason. This resulted in an explosion of records
returned (networks * ports). SQLAlchemy would
de-dup this for us when iterating over results;
however, it would completely break the 'count()'
operation required by get_ports_count (which
the quota engine uses).

Change-Id: I5b780121ba408fba691fff9304d4a22e5892b85f
Closes-Bug: #1558827"
e9088d09328793495aba260a05d6161f92aae4cd,2016-03-17 01:45:59+00:00,"Remove test_external_network_visibility

This test was left behind according to plan laid out in patch [1].
Make its removal conditional to the Tempest sync-up patch.

[1] https://review.openstack.org/#/c/280427/

Related-bug: 1553595
Related-bug: 1552960

(cherry-picked from commit cc863e07156e3cfe020c5acfcd9875daff477de6)
Change-Id: Ia85e7d03c32b5e2db901aed2c13bafe83896be0b
Depends-on: I0219e17d2ec70939039344826d35cb533b3ce065"
af542a303bbdf261c2bf223c1d0a9472dd67538e,2016-03-17 06:47:27+00:00,"Update devstack plugin for dependent packages

Recent changes to the gate base images [1] removed a package
neutron requires (netcat-openbsd). This patch installs the
required package.

[1] https://review.openstack.org/#/c/292573

Closes-bug: #1558397

(cherry picked from commit 44ef44c0ff97d5b166d48d2ef93feafa9a0f7ea6)

Change-Id: I4041478ca09bd124827782774b8520908ef07be0"
f76056a94000857ac1613d08dee7858373964fa6,2016-03-18 09:36:31+00:00,"Outerjoin to networks for port ownership filter

Change I55328cb43207654b9bb4cfb732923982d020ab0a
added a port filter to compare tenant ID to the
network owner as well. This caused the networks
table to be added to the FROM statement since
ports wasn't joined to networks for any other
reason. This resulted in an explosion of records
returned (networks * ports). SQLAlchemy would
de-dup this for us when iterating over results;
however, it would completely break the 'count()'
operation required by get_ports_count (which
the quota engine uses).

Change-Id: I5b780121ba408fba691fff9304d4a22e5892b85f
Closes-Bug: #1558827
(cherry picked from commit ff4067af5ba52cc205f38d12cdf68bd454445ced)"
165aa828b1cb63cb8be86ec081cea64aa8ada48c,2016-03-16 13:32:42-07:00,"Accept icmpv6 as protocol of SG rule for backward compatibility

The patch https://review.openstack.org/#/c/252155/ renamed
'icmpv6' protocol to 'ipv6-icmp'.
This leads to backward compatiblity of the security group API.
This commit allows to specify 'icmpv6' as well.

TODO(amotoki): The constant for 'icmpv6' will be moved to
neutron-lib soon after Mitaka is shipped.

Change-Id: I0d7e1cd9fc075902449c5eb5ef27069083ab95d4
Closes-Bug: #1558774
(cherry picked from commit 85d638af455ae881ca45d2d390606ef1df5904b1)"
b6ec40cbf754de9d189f843cbddfca67d4103ee3,2016-03-16 21:48:31-04:00,"Move db query to fetch down bindings under try/except

In case of intermittent DB failures router and network auto-rescheduling
tasks may fail due to error on fetching down bindings from db.
Need to put this queries under try/except to prevent unexpected exit.

Closes-Bug: #1546110
Change-Id: Id48e899a5b3d906c6d1da4d03923bdda2681cd92"
44ef44c0ff97d5b166d48d2ef93feafa9a0f7ea6,2016-03-16 23:45:02-07:00,"Update devstack plugin for dependent packages

Recent changes to the gate base images [1] removed a package
neutron requires (netcat-openbsd). This patch installs the
required package.

[1] https://review.openstack.org/#/c/292573

Closes-bug: #1558397

Change-Id: I4041478ca09bd124827782774b8520908ef07be0"
62e88623d977d28c113a1e29458621f82d48f6e5,2016-03-17 05:21:37-07:00,"Watch for 'new' events in ovsdb monitor for ofport

This adjusts the event handling logic in the ovs interface
monitor to watch for 'new' events as well because this is
when ofports are assigned to the interface. Previously we
were only watching for 'insert' events, which would never
include the ofport so this led to every port being skipped
initially by the OVS agent and then picked up on the next
polling interval.

Closes-Bug: #1560464
Change-Id: I46ac508a839c6db779323d5afb083f3425f96e87"
d503c830fbd5da040a32fa15fdb843b068ccb365,2016-03-17 22:10:53+00:00,"objects: fixed base to_dict implementation

The implementation was using wrong approach to detect field type, and it
never triggered the actual code. Adopting the base class implementation
for QoS policy object revealed the problem.

Now, we fix the base class to_dict implementation for synthetic fields,
and are able to adopt it for the policy object.

Note that the bug in the base class was never exposed in production
because no objects are currently relying on it.

Change-Id: I3b8727fd3837b51cc1a778dc73d8a1e06f2de5a9
Partial-Bug: #1541928"
a9a1943fde253f7da1c10e47baba9e34b4b1401c,2016-03-18 10:07:24+01:00,"DSCP QoS rule implementation

This patch adds the front end and back end implementation of QoS DSCP.

Associated patches that are dependent on this one:

* python-neutronclient: https://review.openstack.org/#/c/254280
* openstack-manuals: https://review.openstack.org/#/c/273638
* API Guide: https://review.openstack.org/#/c/275253
* Heat:
  * Spec: https://review.openstack.org/#/c/272173
  * QoSDscpMarkingRule resource: https://review.openstack.org/#/c/277567
* Fullstack tests: https://review.openstack.org/#/c/288392/

APIImpact - The API now supports marking traffic egressing from a VM's
            dscp field with a valid dscp value.

Co-Authored-By: Nate Johnston <nate_johnston@cable.comcast.com>
Co-Authored-By: Victor Howard <victor.r.howard@gmail.com>
Co-Authored-By: Margaret Frances <margaret_frances@cable.comcast.com>
Co-Authored-By: James Reeves <james.reeves5546@gmail.com>
Co-Authored-By: John Schwarz <jschwarz@redhat.com>
Needed-By: I25ad60c1b9a66e568276a772b8c496987d9f8299
Needed-By: I881b8f5bc9024c20275bc56062de72a1c70c8321
Needed-By: I48ead4b459183db795337ab729830a1b3c0022da
Needed-By: Ib92b172dce48276b90ec75ee5880ddd69040d7c8
Needed-By: I4eb21495e84feea46880caf3360759263e1e8f95
Needed-By: I0ab6a1a0d1430c5791fea1d5b54106c6cc93b937
Partial-Bug: #1468353

Change-Id: Ic3baefe176df05f049a2e06529c58fd65fe6b419"
85d638af455ae881ca45d2d390606ef1df5904b1,2016-03-18 06:28:45-07:00,"Accept icmpv6 as protocol of SG rule for backward compatibility

The patch https://review.openstack.org/#/c/252155/ renamed
'icmpv6' protocol to 'ipv6-icmp'.
This leads to backward compatiblity of the security group API.
This commit allows to specify 'icmpv6' as well.

TODO(amotoki): The constant for 'icmpv6' will be moved to
neutron-lib soon after Mitaka is shipped.

Change-Id: I0d7e1cd9fc075902449c5eb5ef27069083ab95d4
Closes-Bug: #1558774"
f86e46e50b1542efcdb87e53d79a9b80d84be078,2016-03-18 20:26:51+01:00,"objects: minor cleanup in base class

Some comments from Ia4695b1b10c0370c77b66f31588a56de332f462e were not
addressed in the original patch, but are still worth an effort.

Change-Id: Ibef7adac940b36cc4a4acdf4a80683237e6ec9ae
Partial-bug: #1541928"
d6fb0c46bdf238b2b21761e979198388a0446149,2016-03-18 16:50:43-04:00,"Skip fullstack L3 HA test

It's failing because of a known issue, being handled in:
https://review.openstack.org/#/c/285480/. That patch will
unskip the test as part of the fix.

Apart from this test, there's also a known failure in LB
tests, being handled here:
and https://review.openstack.org/#/c/294798/

I'm not aware of any other failure modes for fullstack.
With these two patches merged, we can observe the fullstack
job failure rate and hopefully make it voting.

Change-Id: I6ea3292605d25848911a2d51c996d10ecd48bf9e"
371e8aa0769086d069cc9005f1c454fb348afd46,2016-03-19 12:22:59-07:00,"Ovs agent can't start on Windows because of validate_local_ip

Change I4b4527c28d0738890e33b343c9e17941e780bc24 introduced a
validate_local_ip sanity check for the local_ip to see that it
belongs to the host.

This method uses linux specific implementation that fails on windows.

This patch fixes this bug by adding a implementation for
validate_local_ip that works on windows as well, using netifaces.

Change-Id: Ia8299512687d9d7135fe013fbb38f2b28d54125d
Closes-Bug: #1497940"
ecde8a9ddbbb226683d3718ee6cd13004c33c3a7,2016-03-20 17:58:16+00:00,"objects: introduce object for extra dhcp options

This patch introduces a new versioned object for extra dhcp options. It
will be adopted in Neutron in Newton.

Change-Id: I45b54b80d994f7e7f06128f73256b94675db97b2
Partial-Bug: #1541928"
9db81351ed8ddeeb279f640eccbdf539945bde7f,2016-03-21 03:39:41-04:00,"Fix wrong use of list of dict in _check_driver_to_bind

From [1], the segments_to_bind should be a list of dict, so the
""level.segment_id in segments_to_bind"" will never work.

This patch extracts a set of segment ids and uses the set in the
if condition.

[1] https://goo.gl/yKYSTA

Change-Id: I58f1d128e6cd79546d84f7d5bfcb026affc4fc5e
Closes-bug: #1524356"
2b823de315aaca85bbafb020631f34b3fb233998,2016-03-21 13:22:08+00:00,"Ovs agent can't start on Windows because of validate_local_ip

Change I4b4527c28d0738890e33b343c9e17941e780bc24 introduced a
validate_local_ip sanity check for the local_ip to see that it
belongs to the host.

This method uses linux specific implementation that fails on windows.

This patch fixes this bug by adding a implementation for
validate_local_ip that works on windows as well, using netifaces.

Change-Id: Ia8299512687d9d7135fe013fbb38f2b28d54125d
Closes-Bug: #1497940
(cherry picked from commit 371e8aa0769086d069cc9005f1c454fb348afd46)"
ea408db27bce57ffb9c8ed34d6e692ba41520299,2016-03-21 14:48:33+00:00,"Enforce alembic branch when creating scripts manually

Autogeneration code already enforces the branch for new scripts, but
explicit mode [where you pass --expand or --contract to get empty script
stubs] was not doing it. This resulted in new scripts being created in
the same directory where the current branch head is located. This is a
problem when we want to switch to a new release directory to store
future scripts.

To fix the problem, we now enforce the branch as per --contract/--expand
CLI arguments passed. We also ensure that the new directory is present
before attempting to generate a new stub script.

Related-bug: #1501380
Change-Id: I01cb6fed6dd246bedf945c323372e53991973fdc"
8d07ba0e1b46dfcb588925c6320d7c0c5225a315,2016-03-21 22:18:48+01:00,"neutron-db-manage: revision: fail for --autogenerate and branch

If branch specification (--expand/--contract) is passed to CLI while
also passing --autogenerate, fail explicitly instead of going into
autogeneration code and generating both scripts, as we currently do.

Change-Id: Ibf829fdd0b66a8d312c314487cfd8122a7721ef6
Related-bug: #1501380"
866e3455fcd1688a3d87ad95dc7f4ba1a8b82915,2016-03-22 09:49:52+02:00,"QOS: Provide get methods for policy & network/port binding

These methods were missing in the qos api.
These have been added to provide the ability to read the policy
and network/port binding, and will be accessed through the new
methods in the QosPolicy class.

Closes-bug: #1556812
Change-Id: I34e4851c0fec2cd037206868846644b99dfd7def"
ceebc9f465ea038c2eaac26cfa0a18d3f5cdf7c6,2016-03-22 10:06:14+00:00,"use separate device owner for HA router interface

Currently HA router interface port uses DEVICE_OWNER_ROUTER_INTF as
device owner(like normal router interface). So to check if a port is
a HA router interface port, we have to perform a DB operation.

Neutron server at many places may need check if a port is HA router
interface port and perform different set of operations, then it has
to access DB for this. Instead of that, if this information is
available as port's device owner, we can avoid DB access every time.

Closes-bug: #1554519
Change-Id: I322c392529c04aca2448fd957a35f4908b323449"
ccbeda71ac859f2ae9a8c9697367dd660a4b812d,2016-03-22 16:50:11-07:00,"Fix latest doc error

Until fix [1] lands, people should learn to install
a git hook or do tox -edocs before posting a review

[1] https://review.openstack.org/#/c/229951/

Change-Id: I37e50c2d018b6ac67f2792c29eab0081afa16d75"
7215168b119c11a973fbdff56c007f6eb157d257,2016-03-23 12:02:26+05:18,"Removing 'force_gateway_on_subnet' option

With this fix 'force_gateway_on_subnet' configuration
option is removed, and gateway outside the subnet is
always allowed. Gateway cannot be forced onto to the
subnet range.

DocImpact: All references of 'force_gateway_on_subnet'
configuration option and its description should be
removed from the docs.

Change-Id: I1a676f35828e46fcedf339235ef7be388341f91e
Closes-Bug: #1548193"
1f33d6b43d0f06bbd75a775bc8fa2791f8595faf,2016-03-23 12:47:23+01:00,"Adds Enum fields for different types

This patch adds enumfields of type FlowDirection, EtherType and
IpProtocol which is required for object fields in security group rules.

Partial-Bug: #1541928

Change-Id: Ia9bc4f3994789ff04091e43c6e024854fbc527a7"
99df8d54bf7d2f88705bd19bd0efaeddc1e4dd42,2016-03-23 08:46:17-05:00,"Port Security added to OVO

This patch portes Port Security to Oslo Versioned Objects.

Co-Authored-By: Victor Morales <victor.morales@intel.com>
Change-Id: I5f72b730aaa0439c50845454c0a5f6438b53605f
Partial-bug: #1541928"
1d51172babab64176716e723ae84f20e751a2ac3,2016-03-23 14:28:40+00:00,"Watch for 'new' events in ovsdb monitor for ofport

This adjusts the event handling logic in the ovs interface
monitor to watch for 'new' events as well because this is
when ofports are assigned to the interface. Previously we
were only watching for 'insert' events, which would never
include the ofport so this led to every port being skipped
initially by the OVS agent and then picked up on the next
polling interval.

Closes-Bug: #1560464
Change-Id: I46ac508a839c6db779323d5afb083f3425f96e87
(cherry picked from commit 62e88623d977d28c113a1e29458621f82d48f6e5)"
eb8ddb95bbb56bbdc658e15feebbf7f91d5ddf13,2016-03-23 15:21:02+00:00,"Move db query to fetch down bindings under try/except

In case of intermittent DB failures router and network auto-rescheduling
tasks may fail due to error on fetching down bindings from db.
Need to put this queries under try/except to prevent unexpected exit.

Closes-Bug: #1546110
Change-Id: Id48e899a5b3d906c6d1da4d03923bdda2681cd92
(cherry picked from commit b6ec40cbf754de9d189f843cbddfca67d4103ee3)"
25fdc2a9f9bdeacd91ab2f9317c5dff1d8ec5977,2016-03-23 16:16:09+00:00,"Remove deprecated method from agent utils file

Commit I26b0a4d6105420a2c242b81a4cd58e0adef4cbec marked method
replace_file as redundant. Functionality was moved to
neutron.common.utils:replace_file

Related-Bug: #1504477
Change-Id: I77f907bee20bf921d4127502c1ce8156425e158a"
1cea77b0aafbada6cad89a6fe0f5450004aef4e1,2016-03-23 12:48:06-04:00,"DVR: Fix issue of SNAT rule for DVR with floating ip

With current code, there are 2 issues.

1) The prevent snat rule that is added for floating ip will be
cleaned, when restarting the l3 agent. Without this rule, the fixed
ip will be SNATed to floating ip, even if the network request is to
an internal IP.

2) The prevent snat rule will not be cleaned, even if the external
device(rfp device) is deleted. So, when the floating ips are removed
from DVR router, there are still dump rules in iptables. Restarting
the l3 agent can clean these dump rules.

The fix in this patch will handle DVR floating ip nat rules at the
same step to handle nat rules for other routers(legacy router, dvr
edge router)

After the change in [1], the fip nat rules for external port have
been extracted together into a method. Add all rules in that method
in the same step can fix the issue of ping floating ip, but reply
with fixed ip.

[1] https://review.openstack.org/#/c/286392/

Change-Id: I018232c03f5df2237a11b48ac877793d1cb5c1bf
Closes-Bug: #1549311
Related-Bug: #1462154"
a8b60671150ac383c6ed24c26e773a97a476f7d2,2016-03-23 19:00:48+02:00,"Fix reference to uninitialized iptables manager

DvrEdgeRouter.process_address_scope() currently assumes that
snat_iptables_manager was initialized, however this is only done when an
external gateway is added. In case a new DVR+HA router was created
without an external gateway, the l3 agent will raise an exception and
will not create the router correctly. This patch adds a simple check to
make sure that it is defined before it's actually used.

Closes-Bug: #1560945
Change-Id: I677e0837956a6d008a3935d961f078987a07d0c4"
db4a981ed6f7c1e7aaf539a289c1daab767a3413,2016-03-23 10:29:39-07:00,"AGENTS: remove deprecated methods

The following method has been removed from the agent code:
  - pullup_route (commit 23b907bc6e87be153c13b1bf3e069467cdda0d27)

TrivialFix

Closes-bug: #1561118

Change-Id: Ia10af5b9d270ed73e28ade152821d82a0d285c94"
910744781c46e6c200298922cc9c251725ce19fc,2016-03-23 17:40:17+00:00,"Fix reference to uninitialized iptables manager

DvrEdgeRouter.process_address_scope() currently assumes that
snat_iptables_manager was initialized, however this is only done when an
external gateway is added. In case a new DVR+HA router was created
without an external gateway, the l3 agent will raise an exception and
will not create the router correctly. This patch adds a simple check to
make sure that it is defined before it's actually used.

Closes-Bug: #1560945

(cherry picked from commit a8b60671150ac383c6ed24c26e773a97a476f7d2)

Change-Id: I677e0837956a6d008a3935d961f078987a07d0c4"
a94e1b410b0ae5193aabe7fdde6f4948334464f8,2016-03-23 14:53:02-04:00,"Fix test failure against latest oslo.* from master

Looks like there's a lot of places in Neutron tests we are
using res.json['NeutronError']['message'] to look at the
exact message and we missed a spot

Closes-Bug: #1561151
Change-Id: I8e62ae9f16a2b239520f79ac53401e596f781b64"
9a70c57507d844092c8730e676643f8321677903,2016-03-23 16:24:05-04:00,"Common utils: remove deprecated methods

The following have been removed from use in neutron/common/utils.py.
The commit where these were added is
8022adb7342b09886f53c91c12d0b37986fbf35c :

	* read_cached_file
	* find_config_file
	* get_keystone_url

TrivialFix

Closes-bug: #1561184
Change-Id: If9cbb41eec9ab20b4dc11bb10794d90c731e6239"
441a1071d2e28979537bfd1c7ef9d0b76ac4c181,2016-03-24 05:54:56+00:00,"Clean imports in code

In some part in the code we import objects.
In the Openstack style guidelines they recommend
to import only modules.

Change-Id: If5170c8383b0a85a18793d6ed85c91f2150ba81a
Partial-Bug: #1543101"
4b86f17db3d122f31c2891249c89bc20d1f6c168,2016-03-24 10:49:26+00:00,"Skip fullstack L3 HA test

It's failing because of a known issue, being handled in:
https://review.openstack.org/#/c/285480/. That patch will
unskip the test as part of the fix.

Apart from this test, there's also a known failure in LB
tests, being handled here:
and https://review.openstack.org/#/c/294798/

I'm not aware of any other failure modes for fullstack.
With these two patches merged, we can observe the fullstack
job failure rate and hopefully make it voting.

Change-Id: I6ea3292605d25848911a2d51c996d10ecd48bf9e
(cherry picked from commit d6fb0c46bdf238b2b21761e979198388a0446149)"
16b2ffdfd85eece8fb57a98d10bf35ad617d235a,2016-03-24 15:30:16+00:00,"Ignore exception when deleting linux bridge if doesn't exist

Linux bridge is not handling RuntimeError exception when it is trying
to delete network's bridge, which is deleted in parallel by nova.
Fullstack test has similar scenario, it creates network's bridge for
agent and deletes the bridge after the test, like nova.

Linux bridge agent has to ignore RuntimeError exception if the bridge
doesn't exist.

Closes-bug: #1561040
Change-Id: I428384fd42181ff6bc33f29369a7ff5ec163b532"
9466e7765a51074a75eceb514d5d22cae01daec4,2016-03-24 12:50:59-04:00,"Fix fullstack LB agent not connecting to rabbit

Using the broadcast address of a network is not going to work
very well.

It's still possible for different LB agents (From the same test)
to pick the same address, and that will be handled in a follow up
via some sort of atomic resource allocation mechanism.

Change-Id: I666cf7dbe5dd6a0eaf4130ee1e52cf29edb2ddca
Related-Bug: #1561248"
193aa35325b897b960de88b510181b377e4c345c,2016-03-24 17:55:29+00:00,"firewall: don't warn about a driver that does not accept bridge

Drivers that do not need the bridge parameter are safe to ignore it.
Actually, the base abstract interface for those drivers does not allow
to pass the new parameter.

Ideally, the base class __init__ signature would change to accept the
argument, but we can't do it without breaking API.

So instead, just handle both types of drivers - those that accept the
additional argument, and those that don't. And don't assume the latter
are somehow wrong.

Change-Id: Iceee46f63669b28e3a34d207216d864f1bfa5cf8
Closes-Bug: #1561243"
6e5b877bda0d95c6fdd644986403773225533726,2016-03-24 14:52:50-04:00,"Add fullstack connectivity test with ovsdb native interface

Related-Bug: #1528894
Change-Id: Idb0d6a1fc15d519af40f02364bda57e794e6f3b8"
b0519cf0ada3b3d9b76f84948f9ad3c142fc50be,2016-03-24 22:27:31+01:00,"port security: gracefully handle resources with no bindings

Resources could be created before the extension was enabled in the
setup. In that case, no bindings are created for them. In that case, we
should gracefully return default (True) value when extracting the value
using the mixin; and we should also create binding model on update
request, if there is no existing binding model for the resource.

While at it, introduced a constant to store the default value for port
security (True) and changed several tests to use the constant instead of
extracting it from extension resource map.

Change-Id: I8607cdecdc16c5f94635c94e2f02700c732806eb
Closes-Bug: #1509312"
6029f9961f1c3332abd222e2dcadedb553c30d3c,2016-03-25 05:23:16+00:00,"Add db migrations test framework with data

This patch adds migration testing framework for pymysql and postgresql.
In this basic libraries for testing migrations using data (revision
ids) are added.

Change-Id: I6e330f9e5a0fdbd5fd46a9b090b109b99d194bb0
Co-Authored-By: Manjeet Singh Bhatia <manjeet.s.bhatia@intel.com>
Co-Authored-By: Ilya Pekelny <ipekelny@mirantis.com>
Partial-Bug: #1539735"
9d3bab6b8d6b2122732faeb66f831927bee0ac7e,2016-03-25 15:30:06+09:00,"api tests: Check correct extensions

auto_allocate -> auto-allocated-topology
rbac_policies -> rbac-policies

Closes-Bug: #1561858
Change-Id: Ied13e52bf78afe571f7243e93005bf5c68fe44db"
7d806fb9906f3de75cc489b77d9488791b7aeb9a,2016-03-25 17:28:31+00:00,"Remove deprecated methods from migration CLI file

Commit Ie4ddd29d8c51be74a112864aae3d16fb5e52c0fa marked methods:
 * _validate_head_file
 * update_head_file
as deprecated.

Related-Bug: #1501380
Change-Id: I0c08b32120974a7f82d2ae967cf13374c2e797ce"
4731dbbef1f615b9ce6d18315e8ca9810e8a772d,2016-03-25 13:06:06-07:00,"DVR: rebind port if ofport changes

When binding is called in DVR, check to see if the port was
previously wired under a different ofport. If it was, first
unbind the old port and then bind the new one.

Change-Id: I372158c4a6986295e396d849a2c9c5372b271e08
Closes-Bug: #1562467"
bec65f6cdd159ec252c4aa0a63aabc9aea8fcfba,2016-03-26 04:13:04+00:00,"api tests: Check correct extensions

auto_allocate -> auto-allocated-topology
rbac_policies -> rbac-policies

Closes-Bug: #1561858

(cherry picked from commit 9d3bab6b8d6b2122732faeb66f831927bee0ac7e)
Change-Id: Ied13e52bf78afe571f7243e93005bf5c68fe44db"
61a5bcb52e23fa39839c30cb4f13f8a26e115516,2016-03-27 17:52:21+00:00,"test_network_ip_availability: Skip IPv6 tests when configured so

Use a class attribute known by the base class so that IPv6 tests
are skipped appropriately when CONF.network_feature_enabled.ipv6
is False.

Closes-Bug: #1561857
Change-Id: I93f76b7f7cd94ff484d2e4507500af97578ac71a"
7512d8aa26a945a695e889e0a97c6414cec6ac10,2016-03-28 11:26:57+03:00,"Make L3 HA interface creation concurrency safe

This patch creates a function to handle the creation of the
L3HA interfaces for a router in a manner that handles the
HA network not existing or an existing one being  deleted
by another worker before the interfaces could be created.

Closes-Bug: #1548285
Change-Id: Ibac0c366362aa76615e448fbe11d6d6b031732fe"
03999961ac620249950d8bca628719e9c14c4382,2016-03-28 10:16:39-04:00,"Add fullstack cross-process port/ip address fixtures

We've had a series of bugs with resources that need
to be unique on the system across test runner
processes. Ports are used by neutron-server and the
OVS agent when run in native openflow mode. The function
that generates ports looks up random unused ports and
starts the service. However, it is raceful: By the time the
port is found to be unused and the service is started,
another test runner can pick the same random port.
With close to 65536 ports to choose from, the chance
for collision is low, but given enough test runs, it's
happened a non-trivial amount of times, and given that
a voting job needs a very low false-negative rate, we
need a more robust solution. The same applies to IP
addresses that are used by the OVS agent in tunneling
mode, and for the LB agent in all modes. With IP addresses,
we don't check if the IP address is used, we simply
pick a random address from a large pool, and again
we've seen a non-trivial amount of test failures.

The bugs referenced below had simple, short term solutions
applied but the bugs remain remain. This patch is a correct,
long term solution that doesn't rely on chance.

This patch adds a resource allocator that uses the disk
to persist allocations. Access to the disk is guarded
via a file lock. IP address, networks and ports fixtures
use an allocator internally.

Closes-Bug: #1551288
Closes-Bug: #1561248
Closes-Bug: #1560277
Change-Id: I46c0ca138b806759128462f8d44a5fab96a106d3"
d5e4013556c7144d347ece267c4bd3c8dc87b24f,2016-03-28 12:33:27-07:00,"Retry updating agents table in case of deadlock

Updating agents table is contantious operation which
can fail often if mysql backend is in multimaster mode.
This could lead to agents flapping and various issues
such as sporadic reschedluing, port binding failures, etc.

Change-Id: Ief392f9a09d86c185dc086055d2cbc1891ff1d7f
Closes-Bug: #1560724"
be298f8bc35e6d006c7a9361e42755c9d6790e1e,2016-03-28 20:46:24-07:00,"Linux Bridge: Add mac spoofing filtering to ebtables

The current mac-spoofing code in iptables has two issues.
First, it occurs after the address discovery allow rules
(e.g. DHCP), so MAC addresses can be spoofed on discovery
protocols. Second, since it is based on iptables, it
doesn't apply to protocols like STP.

This means a VM could generate one of these types of packets
with a spoofed MAC address to trick switches into learning
that the spoofed MAC now belongs to the VM's port. The impact
of this depends on the configuration of the environment
(e.g. use of L2pop: see the bug report for details).

This patch adds MAC spoofing filtering to the ARP protection
code for Linux bridge based on ebtables. Only traffic sourced
from the MAC address on the port or in the allowed address
pair MACs will be allowed.

This filtering will not be enabled if the port has port
security disabled or if the device_owner starts with 'network:'.

Change-Id: I39dc0e23fc118ede19ef2d986b29fc5a8e48ff78
Partial-Bug: #1558658"
913a64cc1175b3bd7efc7abe34895c32bf39a696,2016-03-29 04:37:17+00:00,"SG protocol validation to allow numbers or names

SG rule protocol provided is validated against the DB rules'
protocols for both number and name. The filter provided to DB
is modified so that it is queried for records with both the
protocol name and number, instead of exactly the type provided
with the input. The returned DB rule record's protocol field is
validated against the supplied SG protocol field for both name
or number.
This way, user is still allowed to enter protocol name or number
to create a rule, and API compatibility is maintained.

Change-Id: If4ad684e961433b8d9d3ec8fe2810585d3f6a093
Closes-Bug: #1215181"
da00d1a186c55c91887c9546e893f6d075a2c2ad,2016-03-29 09:15:23+02:00,"l3: Send notify on router_create when ext gw is specified

A router that got created with an external gateway specified now
triggers a notfiy_router_updated event. This triggers scheduling
of the router and creation of the network namespace on the target
node.

Change-Id: I7f6ff5edf6a9c5ffa6d8978c1f3de0e106b6a8bb
Closes-Bug: #1535707"
ef6ea62d5d1fc767a23e3caf2716e76f90d63f03,2016-03-29 15:13:32+00:00,"l3: Send notify on router_create when ext gw is specified

A router that got created with an external gateway specified now
triggers a notfiy_router_updated event. This triggers scheduling
of the router and creation of the network namespace on the target
node.

Change-Id: I7f6ff5edf6a9c5ffa6d8978c1f3de0e106b6a8bb
Closes-Bug: #1535707
(cherry picked from commit da00d1a186c55c91887c9546e893f6d075a2c2ad)"
c6efa6292cac9267428366dc3cee00f6fc73e208,2016-03-29 23:36:55+02:00,"Support Routes==2.3

SubMapper.connect allows in Routes<=2.2 to define routes with/without a
name:

 map.connect(route_name, route_path)
 map.connect(route_path)

Routes==2.3 SubMapper.connect now requires a route name (but not
Mapper.connect). This change adds a route name when needed to support
Routes<=2.2 and Routes==2.3.

Closes-Bug: #1563028
Change-Id: I655bfe7f047945896d63dd94c584acfe60d81b38"
e2676ae8d188286b76f802d605f363e21011841a,2016-03-30 00:29:39+00:00,"DVR: rebind port if ofport changes

When binding is called in DVR, check to see if the port was
previously wired under a different ofport. If it was, first
unbind the old port and then bind the new one.

Change-Id: I372158c4a6986295e396d849a2c9c5372b271e08
Closes-Bug: #1562467
(cherry picked from commit 4731dbbef1f615b9ce6d18315e8ca9810e8a772d)"
1e9b3908af6a14785e151ef8e993873f6f0ee485,2016-03-29 22:08:40-06:00,"Delete Devref Enable Service for Network IP Availability

No longer need to enable extension in service_plugins.
The feature is automatically enabled after patch [1].

[1]: https://review.openstack.org/#/c/283357/

Change-Id: Ia9a36c40e33a25335a83b96adff2d675164b5d21"
8dce6a5c873c2c18e5a9c6165bf3974aead02588,2016-03-30 04:09:25+00:00,"Don't delete br-int to br-tun patch on startup

When starting up, we don't want to delete the patch port between br-int
and br-tun unless we're also dropping the flows..  In liberty both of
these bridges were switched to not dump flows on startup and to put the
bridges in secure mode so that default flood flows are not installed
when the bridge is created.

Without this patch the patch port is torn down and not reinstalled until
br-tun is setup again.

Partial-Bug: #1514056
Change-Id: Ia518a99a2de5d1bda467fde57892c43970f88bcd"
93d29d131c0234075ac547906f77900ce47cceec,2016-03-30 10:31:20+00:00,"Don't delete br-int to br-tun patch on startup

When starting up, we don't want to delete the patch port between br-int
and br-tun unless we're also dropping the flows..  In liberty both of
these bridges were switched to not dump flows on startup and to put the
bridges in secure mode so that default flood flows are not installed
when the bridge is created.

Without this patch the patch port is torn down and not reinstalled until
br-tun is setup again.

Partial-Bug: #1514056
Change-Id: Ia518a99a2de5d1bda467fde57892c43970f88bcd
(cherry picked from commit 8dce6a5c873c2c18e5a9c6165bf3974aead02588)"
7174bc4c2a0a31e9036ec130cb65f91d1e5009a4,2016-03-30 12:19:11+00:00,"Ignore exception when deleting linux bridge if doesn't exist

Linux bridge is not handling RuntimeError exception when it is trying
to delete network's bridge, which is deleted in parallel by nova.
Fullstack test has similar scenario, it creates network's bridge for
agent and deletes the bridge after the test, like nova.

Linux bridge agent has to ignore RuntimeError exception if the bridge
doesn't exist.

Closes-bug: #1561040
Change-Id: I428384fd42181ff6bc33f29369a7ff5ec163b532
(cherry picked from commit 16b2ffdfd85eece8fb57a98d10bf35ad617d235a)"
6113e3d0a23c06c488b1bf851a4880cca907f483,2016-03-30 13:19:59+00:00,"Fix error format message

This change fixes the variable name used for the message error of
NeutronSyntheticFieldMultipleForeignKeys error.

Change-Id: Ia3b967d8cd0cce0aab7cb45ceab71a20dbaf8b51
Closes-Bug: #1563149"
46ddaf4288a1cac44d8afc0525b4ecb3ae2186a3,2016-03-30 18:33:56+03:00,"Allow to use several nics for physnet with SR-IOV

Accordind specs and docs, SRIOV_NIC.physical_device_mappings is not
limited to be a 1-1 mapping between physnets and NICs. However,
implementation requires this. This bugfix unlocks 1-M mappings, so one
physnet could be managed by many NICs.

* introduced unique_keys in neutron.utils.parse_mappings
* SRIOV_NIC.physical_device_mappings is parsed as dict with lists as
  values with parse_mappings(..., unique_keys=False)

DocImpact
Change-Id: I07b8682fdfe8389a35893cc662b87c94a00bd4a5
Closes-Bug: #1558626"
d8f0ee5ecd67ee6ec956c7fdadce3c2a8e8301bf,2016-03-30 08:57:43-07:00,"Wrap all update/delete l3_rpc handlers with retries

This is needed for mysql galera multimaster backends.

Closes-Bug: #1564144
Change-Id: Ia5a14d5ee91c6672d61904f669e9e845a7f262c9"
90b9cd334b1b33df933bf1b61b38c6e087c431af,2016-03-30 17:15:56+00:00,"port security: gracefully handle resources with no bindings

Resources could be created before the extension was enabled in the
setup. In that case, no bindings are created for them. In that case, we
should gracefully return default (True) value when extracting the value
using the mixin; and we should also create binding model on update
request, if there is no existing binding model for the resource.

While at it, introduced a constant to store the default value for port
security (True) and changed several tests to use the constant instead of
extracting it from extension resource map.

Change-Id: I8607cdecdc16c5f94635c94e2f02700c732806eb
Closes-Bug: #1509312
(cherry picked from commit b0519cf0ada3b3d9b76f84948f9ad3c142fc50be)"
3213eb124e40b130e174ac3a91067e2b196788dd,2016-03-30 22:23:10+00:00,"Support Routes==2.3

SubMapper.connect allows in Routes<=2.2 to define routes with/without a
name:

 map.connect(route_name, route_path)
 map.connect(route_path)

Routes==2.3 SubMapper.connect now requires a route name (but not
Mapper.connect). This change adds a route name when needed to support
Routes<=2.2 and Routes==2.3.

Closes-Bug: #1563028
Change-Id: I655bfe7f047945896d63dd94c584acfe60d81b38
(cherry picked from commit c6efa6292cac9267428366dc3cee00f6fc73e208)"
aac460b0a7fec68fbb173ac8899274809e254a7a,2016-03-31 12:04:50+00:00,"Allow to use several nics for physnet with SR-IOV

Accordind specs and docs, SRIOV_NIC.physical_device_mappings is not
limited to be a 1-1 mapping between physnets and NICs. However,
implementation requires this. This bugfix unlocks 1-M mappings, so one
physnet could be managed by many NICs.

* introduced unique_keys in neutron.utils.parse_mappings
* SRIOV_NIC.physical_device_mappings is parsed as dict with lists as
  values with parse_mappings(..., unique_keys=False)

DocImpact
Change-Id: I07b8682fdfe8389a35893cc662b87c94a00bd4a5
Closes-Bug: #1558626
(cherry picked from commit 46ddaf4288a1cac44d8afc0525b4ecb3ae2186a3)"
87d337074066692d33197c4caa74333935bca537,2016-03-31 05:17:43-07:00,"Avoids logging error on ML2 OVS agent start

On agent start, we check the interface type to cleanup ports of
wrong type if any. We should not log error on not finding db entry
for interface type, because the interface and hence the db entry
may not exist yet.

Change-Id: Ie619a7fd141fbaa92d39b73f77e5c8c1efc8ec48
Closes-Bug: #1545058"
cacde308eef6f1d7005e555b4521332da95d3cf4,2016-03-31 12:30:23+00:00,"Cleanup stale OVS flows for physical bridges

Perform deletion of the stale flows in physical bridges consistently with
br-int and br-tun, respecting drop_flows_on_start configuration option.
Added tests for auxiliary bridge and functional tests for the physical
bridge using VLAN/flat external network. Fixes part of the bug 1514056;
together with [1] and [2], the bug should be considered fixed.

The commit also fixes inconsistency between netmask of allocated IP
addresses assigned in _create_test_port_dict and ip_len in _plug_ports
of base.py.

[1] https://review.openstack.org/#/c/297211/
[2] https://review.openstack.org/#/c/297818/

Co-Authored-By: Jian Wen <wenjianhn@gmail.com>
Partial-Bug: 1514056
Change-Id: I9801b76829021c9a0e6358982e1136637634a521"
38894cc7603f90ed8a5938e37fcc773c926fbfe4,2016-03-31 13:47:39+00:00,"Retry updating agents table in case of deadlock

Updating agents table is contantious operation which
can fail often if mysql backend is in multimaster mode.
This could lead to agents flapping and various issues
such as sporadic reschedluing, port binding failures, etc.

Change-Id: Ief392f9a09d86c185dc086055d2cbc1891ff1d7f
Closes-Bug: #1560724
(cherry picked from commit d5e4013556c7144d347ece267c4bd3c8dc87b24f)"
8ad9c902c20397f5ee643990ef1847e7f2ab799b,2016-03-31 18:07:35-05:00,"Ensure bridge names are shorter than max device name len

Use test.base's get_rand_name function to ensure that bridge name
lengths don't exceed the maximum device name length. For uses that
require multiple bridges/ports with the same random characters
appended, add get_related_rand_names and get_related_rand_device_names
functions.

Change-Id: Ib03653f3ca2d2c3d2ea7be1dff4ab0e4e77df51e
Closes-Bug: #1561152"
142b68f0757ab036d56bc9b4563b7a4481527deb,2016-04-01 01:53:10-07:00,"De-dup user-defined SG rules before iptables call

A port may be a member of multiple security groups. These
security groups may have dupilcate rules between them
(e.g. they both allow all EGRESS traffic). If the iptables
manager is called with duplicated rules, it emits a warning
of a possible bug in the rule generation code because it
doesn't expect there to be duplicated rules.

This patch fixes this by de-duplicating user-defined security group
rules before dispatching the calls to the iptables_manager.

Change-Id: I98dbe60df1bcf68b9922deee63dd0328c4c10dd0
Closes-Bug: #1565705"
a549f30fad93508bf9dfdcfb20cd522f7add27b0,2016-04-01 11:31:03+00:00,"Don't disconnect br-int from phys br if connected

When starting up, we don't want to delete the patch port between br-int
and the physical bridges. In liberty the br-int bridge was changed to
not tear down flows on startup, and  change
I9801b76829021c9a0e6358982e1136637634a521 will change the physical
bridges to not tear down flows also.

Without this patch the patch port is torn down and not reinstalled until
after the initial flows are set back up.

Partial-Bug: #1514056
Change-Id: I05bf5105a6f3acf6a313ce6799648a095cf8ec96"
408173360fd5aef16acd0354be4c35b2a7270c7a,2016-04-01 15:20:33+02:00,"objects: SubnetPool, SubnetPoolPrefix

This patch adds SubnetPool and SubnetPoolPrefix objects. Note: objects
are not integrated into database plugin code. This is left for a
follow-up patch.

Other changes:
- made modify_fields_to_db object instance method since some objects
  may need to access all fields set on the object;
- provided a new RangeConstrainedInteger type that validates that value
  is in the range;
- modified several base test cases to work with objects that modify
  other tables that are different from the object db model.

Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Related-Bug: #1541928
Change-Id: I7cbc694ab00c05d0a020fffe4f73141c6ceff7e9"
6a93ee8ac1a901c255e3475a24f1afc11d8bf80f,2016-04-01 11:02:51-07:00,"Iptables firewall prevent IP spoofed DHCP requests

The DHCP rules in the fixed iptables firewall rules were too permissive.
They permitted any UDP traffic with a source port of 68 and destination
port of 67. Care must be taken since these rules return before the IP
spoofing prevention rules. This patch splits the fixed DHCP rules into
two, one for the discovery and request messages which take place before
the instance has bound an IP address and a second to permit DHCP
renewals.

Change-Id: Ibc2b0fa80baf2ea8b01fa568cd1fe7a7e092e7a5
Partial-Bug: #1558658"
05ac0125fe861fbfb09d48eec97a29539b51b4e2,2016-04-01 19:26:22+00:00,"test_network_ip_availability: Skip IPv6 tests when configured so

Use a class attribute known by the base class so that IPv6 tests
are skipped appropriately when CONF.network_feature_enabled.ipv6
is False.

Closes-Bug: #1561857
Change-Id: I93f76b7f7cd94ff484d2e4507500af97578ac71a
(cherry picked from commit 61a5bcb52e23fa39839c30cb4f13f8a26e115516)"
213d48df014eebdc96a70a9369ffc9701f419f9f,2016-04-04 11:46:20+00:00,"Improve handle port_update and port_delete events in ovs qos agent

This patch improves getting vif port name from port info in Openvswitch QoS
extension driver. It will prevent to have tracebacks with info that NoneType
object has no attribute. Such situation could happen if extension driver handled
event on port which was already deleted

Change-Id: Ib76630183f1091436f1cd282a91cbce5fb151716
Closes-Bug: #1536540"
fd93e19f2a415b3803700fc491749daba01a4390,2016-04-04 12:15:33-04:00,"Change get_root_helper_child_pid to stop when it finds cmd

get_root_helper_child_pid recursively finds the child of pid,
until it can no longer find a child. However, the intention is
not to find the deepest child, but to strip away root helpers.
For example 'sudo neutron-rootwrap x' is supposed to find the
pid of x. However, in cases 'x' spawned quick lived children of
its own (For example: ip / brctl / ovs invocations),
get_root_helper_child_pid returned those pids if called in
the wrong time.

Change-Id: I582aa5c931c8bfe57f49df6899445698270bb33e
Closes-Bug: #1558819"
6b6c0421bb6658b475bddb68f766b395945e1b46,2016-04-04 12:39:23-04:00,"QoS DSCP use mod_flow instead of mod_flows

In the implementation of DSCP QoS rule, the QosOVSAgentDriver uses the
wrong method to modify br-int flows. It uses br_int.mod_flows() whilst
it should use br_int.mod_flow().

This patch fixes this and also adds verification of the updates of DSCP,
as we have for bandwidth here to trigger that code path and avoid
regressions.

Change-Id: I685ac373701ff8407fd7fbf649e17a2f7dfc0008
Closes-Bug: #1564820"
7ececa3a20e19985b7ebcca2c629126a3900c090,2016-04-05 09:03:19+02:00,"lb: interface name hashing for too long vlan interface names

The linuxbridge agent creates vlan subinterfaces for each vlan
neutron network. The name for this vlan subinterface is
""<phys-interface>.<vlan-id>"". Todays code crashes if the
physical interface name is too long. Therefore this hashing is
being introduced.

Change-Id: Ieb3c0a7282b28eed556236ead4993ab83a29a12f
Closes-Bug: #1495960"
a5822ca0d01fb6d53f16047b0cdddff99a31dc2e,2016-04-05 11:32:15+02:00,"Fix invalid mock name in test_ovs_neutron_agent

The test_ovs_neutron_agent mocks on reset_tunnel_br while the patch [1]
renamed this method to setup_tunnel_br.

[1] https://review.openstack.org/#/c/182920/

Closes-Bug: 1563233
Change-Id: I273f05f441f72863077e639775a9483c20a9cc5f"
93cdf8eb559cf78895200b3ec6775afe60b6c638,2016-04-05 17:17:32+03:00,"Make L3 HA interface creation concurrency safe

This patch creates a function to handle the creation of the
L3HA interfaces for a router in a manner that handles the
HA network not existing or an existing one being  deleted
by another worker before the interfaces could be created.

Closes-Bug: #1548285
Change-Id: Ibac0c366362aa76615e448fbe11d6d6b031732fe
(cherry-picked from commit 7512d8aa26a945a695e889e0a97c6414cec6ac10)"
b8d520ffe2afbffe26b554bff55165531e36e758,2016-04-05 10:40:21-04:00,"L3 agent: match format used by iptables

This fixes the iptables rules generated by the L3 agent
(SNAT, DNAT, set-mark and metadata), and the DHCP agent
(checksum-fill) to match the format that will be returned
by iptables-save to prevent excessive extra replacement
work done by the iptables manager.

It also fixes the iptables test that was not passing the
expected arguments (-p PROTO -m PROTO) for block rules.

A simple test was added to the L3 agent to ensure that the
rules have converged during the normal lifecycle tests.

Closes-Bug: #1566007
Change-Id: I5e8e27cdbf0d0448011881614671efe53bb1b6a1"
5a41caa47a080fdbc1801e2771163734b9790c57,2016-04-05 17:09:33+02:00,"Don't drop 'protocol' from client supplied security_group_rule dict

If protocol was present in the dict, but was None, then it was never
re-instantiated after being popped out of the dict. This later resulted
in KeyError when trying to access the key on the dict.

Change-Id: I4985e7b54117bee3241d7365cb438197a09b9b86
Closes-Bug: #1566327"
997d7b03fb7f5528f0a3ce70867b9dcd9321509e,2016-04-05 11:33:25-07:00,"OVS: Add mac spoofing filtering to flows

The mac-spoofing filtering done by iptables was
not adequate. See the bug report and change
I39dc0e23fc118ede19ef2d986b29fc5a8e48ff78 for
more information.

This patch adds flows to the OVS agent to block
any traffic from the VM that isn't in the allowed
address pairs macs or the mac address field of
the port.

Closes-Bug: #1558658
Change-Id: I02984b21872e0f183db7404c10d8180dbd89075f"
db817a9e39dbed10383cb2c70c0f95d4b1795aec,2016-04-05 23:39:04-07:00,"Add semaphore to ML2 create_port db operation

This adds a semaphore scoped to the network ID of a port
creation in ML2 to ensure that all workers on a single server
only try to allocate an IP for that network one at a time.

This will alleviate the deadlock error retry mechanism being
exceeded due to the related bug. It reduces the number of contenders
for a single IP allocation from number of workers to number of servers.

It will unblock the switch to pluggable ipam while the IP allocation
strategy is being revamped to be less racey.

Partial-Bug: #1543094
Change-Id: Ieafdd640777d4654fcd0ebb65ace25c30151c412"
33d3b8ce76d942950e2f999a6040787483adf729,2016-04-06 09:22:10+00:00,"L3 agent: match format used by iptables

This fixes the iptables rules generated by the L3 agent
(SNAT, DNAT, set-mark and metadata), and the DHCP agent
(checksum-fill) to match the format that will be returned
by iptables-save to prevent excessive extra replacement
work done by the iptables manager.

It also fixes the iptables test that was not passing the
expected arguments (-p PROTO -m PROTO) for block rules.

A simple test was added to the L3 agent to ensure that the
rules have converged during the normal lifecycle tests.

Closes-Bug: #1566007
Change-Id: I5e8e27cdbf0d0448011881614671efe53bb1b6a1
(cherry picked from commit b8d520ffe2afbffe26b554bff55165531e36e758)"
93d719a554d9b179636afccd25e1018b6e5d1cc3,2016-04-06 14:29:54+02:00,"SG protocol validation to allow numbers or names

SG rule protocol provided is validated against the DB rules'
protocols for both number and name. The filter provided to DB
is modified so that it is queried for records with both the
protocol name and number, instead of exactly the type provided
with the input. The returned DB rule record's protocol field is
validated against the supplied SG protocol field for both name
or number.
This way, user is still allowed to enter protocol name or number
to create a rule, and API compatibility is maintained.

Closes-Bug: #1215181
(cherry picked from commit 913a64cc1175b3bd7efc7abe34895c32bf39a696)

Also squashed the following regression fix:

===

Don't drop 'protocol' from client supplied security_group_rule dict

If protocol was present in the dict, but was None, then it was never
re-instantiated after being popped out of the dict. This later resulted
in KeyError when trying to access the key on the dict.

Change-Id: I4985e7b54117bee3241d7365cb438197a09b9b86
Closes-Bug: #1566327
(cherry picked from commit 5a41caa47a080fdbc1801e2771163734b9790c57)

===

Change-Id: If4ad684e961433b8d9d3ec8fe2810585d3f6a093"
34a328fe12950c339b8259451262470c627f2f00,2016-04-06 15:14:54+02:00,"standard attributes: expose created_at/updated_at on models

Instead of enforcing all model users to know that those fields belong to
a separate model, consistently use association_proxy for all standard
attributes similar to what we already do with description.

This change should reduce some complexity in db handling code, for
example for versioned objects.

Change-Id: I2df5c3514e1f868baa835adff2d95c1156ec7384
Related-Bug: #1541928"
6bdbff27a8327e8fc5a9897046af3aeecbbb28d2,2016-04-06 07:36:10-07:00,"Ignore timestamp fields in model update

This adjusts the timestamp mixin to ignore the timestamp
fields if they are passed into the DB models 'update' method
since these should only be generated by the timestamp plugin.

While specifying these fields is blocked at the API level, internal
service plugins may accidentally specify them by calling an update
method with a modified result of a get method.

Closes-Bug: #1567507
Change-Id: I2a10a8f15cdd5a144b172ee44fc3efd9b95d5b7e"
a56bbac059f7fe434a8b92370f1363a17e700e74,2016-04-06 10:11:52-07:00,"Make auto allocate plugin safe for unit/func tests

The registry.subscribe calls cannot happen at import time because
a module is imported only once for a test runner, but the callback
manager is wiped out for each test.

This changes the subscribe calls to happen on object construction
instead of at import time.

Change-Id: I1f0cc65000ea613dda58dea3a1a85621c26cda9a
Closes-Bug: #1567855"
7b1b8c2de57457c2ec1ed784165a3e10e24151cf,2016-04-06 13:32:28-04:00,"DVR: Increase the link-local address pair range

The current dvr_fip_ns.py file has FIP_LL_SUBNET configured
with a subnet prefixlen of /23 which only allows 255 pairs of
link-local addresses to be generated. If the number of routers
per-node increases beyond the 255 limit it raises an assertion.

This patch increases the link-local address cidr to be a /18
to allow for 8K routers. The new range was chosen to not
overlap with the original, allowing for in-place upgrades
without affecting existing routers.

Closes-Bug: #1562110
Change-Id: I6e11622ea9cc74b1d2428757f16aa0de504ac31a"
9c3c19f07ce52e139d431aec54341c38a183f0b7,2016-04-07 06:37:38+00:00,"Add ALLOCATING state to routers

This patch adds a new ALLOCATING status to routers
to indicate that the routers are still being built on the
Neutron server. Any routers in this state are excluded in
router retrievals by the L3 agent since they are not yet
ready to be wired up.

This is necessary when a router is made up of several
distinct Neutron resources that cannot all be put
into a single transaction. This patch applies this new
state to HA routers while their internal HA ports and
networks are being created/deleted so the L3 HA agent
will never retrieve a partially formed HA router. It's
important to note that the ALLOCATING status carries over
until after the scheduling is done, which ensures that
routers that weren't fully scheduled will not be sent to
the agents.

An HA router is placed in this state only when it is being
created or converted to/from the HA state since this is
disruptive to the dataplane.

This patch also reverts the changes introduced in
Iadb5a69d4cbc2515fb112867c525676cadea002b since they will
be handled by the ALLOCATING logic instead.

Co-Authored-By: Ann Kamyshnikova <akamyshnikova@mirantis.com>
Co-Authored-By: John Schwarz <jschwarz@redhat.com>

APIImpact
Closes-Bug: #1550886
Related-bug: #1499647
Change-Id: I22ff5a5a74527366da8f82982232d4e70e455570"
03ccdd6a6d8e4cea9145e39dd7a1614656024aed,2016-04-07 07:43:44+00:00,"Merge tag '8.0.0'

This is a null-merge of the 8.0.0 release tag back into the master
branch so that the 8.0.0 tag will appear in the git commit history of
the master branch. It contains no actual changes to the master branch,
regardless of how our code review system's UI represents it. Please
ask in #openstack-infra if you have any questions, and otherwise try
to merge this as quickly as possible to avoid later conflicts on the
master branch.

Change-Id: I8661c7614e3e737bca13218ccec32f2101b68a7f"
b8cd05273f39d010c840c6a0aa89989e03233f95,2016-04-07 10:27:24+02:00,"Add custom OVO field type for MAC address

Partial-Bug: #1541928
Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Change-Id: If791b25aa673dde32b41c799fad9dc36efc87d04"
c2eb7289cbc15acc9a4432103672a385e0a0d0e7,2016-04-07 14:05:50+02:00,"objects: avoid validation in stringify for custom field types

stringify() is used only in base __repr__ method for objects, where the
value passed into the method is getattr(self, field_name). Since
validation was already executed when the attribute was set on the object
(in 'coerce'), there is no need to repeat the validation in stringify.

Removed test_stringify_invalid test case since it does not reflect how
the method is actually used in real life.

Change-Id: I0846b2005c00afc1e15bb976ba626293d79a27e7
Partial-Bug: #1541928"
6ed8f45fdf529bacae32b074844aa1320b005b51,2016-04-07 15:38:10+03:00,"Always call ipam driver on subnet update

Previously ipam driver was not called on subnet update
if allocation_pools are not in request.
Changing it to call ipam driver each time subnet update is requested.
If subnet_update is called without allocation_pools, then old allocation
pools are passed to ipam driver.

Contains a bit of refactoring to make that happen:

- validate_allocation_pools is already called during update
subnet workflow in update_subnet method, so just removing it;

- reworked update_db_subnet workflow;

previous workflow was:
call driver allocation -> make local allocation -> rollback driver
allocation in except block if local allocation failed.

new workflow:
make local allocation -> call driver allocation.
By changing order of execution we eliminating need of rollback in this
method, since failure in local allocation is rolled back by database
transaction rollback.

- make a copy of incoming subnet dict;
_update_subnet_allocation_pools from ipam_backend_mixin removes
'allocation_pools' from subnet_dict, so create an unchanged copy to
pass it to ipam driver

Change-Id: Ie4bd85d2ff2ab39bf803c5ef6c6ead151dbb74d7
Closes-Bug: #1534625"
1e334e8fe1db43585154d525c0c1599ac3e2a329,2016-04-07 08:47:54-04:00,"Fix keepalived functional tests

Running the tests locally I'm seeing:
http://paste.openstack.org/show/493222/

The issue in all three tests is that the keepalived manager
process spawns asynchronously (sudo -> root_helper -> keepalived).

For the 'spawns' test, it was asserting that process.alive was
True when it should have used wait_until_true.

For the respawns* tests, the test grabs process.pid before the process
has necessarily spawned. Moving process.pid to after the wait_until_true(
process.active) loop guarantees that pid will return keepalived's
process. Otherwise the 'pid' variable will be None, then when we
use utils.execute we try to kill the 'None' pid, and that doesn't seem
to work.

Change-Id: Ie77d406eaaf7f77edd4f598947999be4adf3d249
Closes-Bug: #1567023"
905fd05f966e0c7d3851f59665e58746c50bad1e,2016-04-07 14:45:35+00:00,"DVR: Increase the link-local address pair range

The current dvr_fip_ns.py file has FIP_LL_SUBNET configured
with a subnet prefixlen of /23 which only allows 255 pairs of
link-local addresses to be generated. If the number of routers
per-node increases beyond the 255 limit it raises an assertion.

This patch increases the link-local address cidr to be a /18
to allow for 8K routers. The new range was chosen to not
overlap with the original, allowing for in-place upgrades
without affecting existing routers.

Closes-Bug: #1562110
Change-Id: I6e11622ea9cc74b1d2428757f16aa0de504ac31a
(cherry picked from commit 7b1b8c2de57457c2ec1ed784165a3e10e24151cf)"
cdb4f924037a45ac77fb43bd24ba15d78dcf0fde,2016-04-07 10:52:38-04:00,"Move all link-local cidr constants to a central location

So the in-use ranges are obvious, put them all in constants.py
to reduce the possibility of overlap.

Follow-on from https://review.openstack.org/#/c/297839/

Change-Id: I7fd047bf4bfc020bd8ebd09b67bdf692dda1130d"
1cb43734808eded87210d2957d56b70c514d55c3,2016-04-07 18:18:12+03:00,"ADDRESS_SCOPE_MARK_IDS should not be global for L3 agent

Otherwise agent becomes unable to handle more than 1024 routers
(including deleted routers) and starts failing.

It should be enough to distinguish address scopes inside router namespace,
so this patch moves ADDRESS_SCOPE_MARK_IDS set to the RouterInfo class.

Closes-Bug: #1566291
Change-Id: I1e43bb3e68db4db93cc1dfc1383af0311bfb0f2d"
7ed3cb2ca12ca7a0449c96643dcc0e3f7939bb35,2016-04-07 16:44:33+01:00,"Integrate the Extra Dhcp Opt VersionedObject in Neutron

This patch is dependent on commit I45b54b80d994f7e7f06128f73256b94675db97b2
which introduces the Extra Dhcp Opt OVO.
This patch integrates the VersionedObject with the existing code.

Change-Id: I0e01831b2b869fbd1ef90bd72a5b63173f554e66
Partial-Bug: #1541928"
5cdd7ae574312a7499a8768c1752d9bc27ff7d20,2016-04-07 19:37:28+03:00,"Values for [ml2]/physical_network_mtus should not be unique

Obviously there could be physical networks with same MTU.
The patch sets unique_values to False when parsing physical_network_mtus
Unit test added.

Closes-Bug: #1567502
Change-Id: I46e5b5d3f7033a974fca40342af6dff7c71a9a4a"
2af86b8f6f749bf7b42a2c04b48c9a2dc28a46c9,2016-04-07 19:34:24+02:00,"Switched from fixtures to mock to mock out starting RPC consumers

fixtures 2.0.0 broke us wildly, so instead of trying to make it work
with new fixtures, I better just switch the mock to... mock.

Change-Id: I58d7a750e263e4af54589ace07ac00bec34b553a
Closes-Bug: #1567295"
a5b1a6ec07a9bf1cdb20fdfd9f23fae86f15ea85,2016-04-07 16:54:47-04:00,"Fix Windows IPDevice.device_has_ip racefulness

get_device_by_ip gets all devices on the system,
then iterates on them and checks if the given IP
is configured on each device. Ths method does
not account for devices that are deleted after
the devices are listed.

Change-Id: Ibada2b4ed60f02539e00021cdc7b3ddb97f1840c
Closes-Bug: #1567608"
005d49d2f092039660a44896217a5c245dcc4685,2016-04-07 21:36:39+00:00,"Ensure metadata agent doesn't use SSL for UNIX socket

The communication between the ns metadata proxy and the metadata agent
is pure HTTP, and should not switch to HTTPS when neutron is using SSL.

We're therefore telling wsgi.Server to forcefully disable SSL in that
case.

Change-Id: I2cb9fa231193bcd5c721c4d5cf0eb9c16e842349
Closes-Bug: #1514424
(cherry picked from commit 7a306e2918775ebb94d9e1408aaa2b7c3ed26fc6)"
aafa702d2f389c0a4f3679df65be07940095ec29,2016-04-07 21:37:01+00:00,"Add IPAllocation object to session info to stop GC

This adds the IPAllocation object created in the _store_ip_allocation
method to the session info dictionary to prevent it from being
immediately garbage collected. This is necessary because otherwise a
new persistent object will be created when the fixed_ips relationship
is referenced during the rest of the port create/update opertions.
This persistent object will then interfere with a retry operation
that uses the same session if it tries to create a conflicting record.

By preventing the object from being garbage collected, the reference
to fixed IPs will re-use the newly created sqlalchemy object instead
which will properly be cleaned up on a rollback.

This also removes the 'passive_delete' option from the fixed_ips
relationship on ports because IPAllocation objects would now be
left in the session after port deletes. At first glance, this might
look like a performance penalty because fixed_ips would be looked
up before port deletes; however, we already do that in the IPAM
code as well as the ML2 code so this relationship is already being
loaded on the delete_port operation.

Closes-Bug: #1556178
Change-Id: Ieee1343bb90cf111c55e00b9cabc27943b46c350
(cherry picked from commit 7d9169967fca3d81076cf60eb772f4506735a218)"
9679285f547b301a511e02ebc763b5406fb03ffc,2016-04-07 21:39:47+00:00,"Return oslo_config Opts to config generator

We shouldn't be returning keystoneauth Opts to the oslo_config
generator. Whilst it mostly works these objects are not interchangable
and it can result in problems. You can see this by entries such as:

  # Warning: Failed to format sample for tenant_name
  # isinstance() arg 2 must be a class, type, or tuple of classes
    and types

in the currently generated config files.

Keystoneauth provides a function that returns oslo_config options so
fetch, process and return those instead.

Change-Id: Ie3fad2381467b19189cbb332c41cea8b6cf6e264
Closes-Bug: #1548433 
(cherry picked from commit c3db0707eff70f381913643891ba4e148977407d)"
e6345a49a01dd20c2ad411655cae8059fbba3143,2016-04-08 15:16:24+09:00,"Add quota tests in unit tests.

The quotas tests in the case of create resources over limit value
are not covered enough in unit tests/functional tests.

This patch include test case of unit tests.

Change-Id: I760fabeab1d480b139eea3b83508fe65c124c9dc
Closes-bug: #1567743"
70068992e37c80e9aa8e70f017aa35132d7e5aee,2016-04-08 06:31:10+00:00,"Use new DB context when checking if agent is online during rescheduling

Commit 9ec466cd42de94c2fad091edfd7583a5f47eb87a was not enough
since it checked l3 agents in the same transaction that was used
to fetch down bindings - so agents always were down even if actually
they went back online.
This commit adds context creation on each iteration to make sure
we use new transaction and fetch up-to-date info for the agent.

Closes-Bug: #1522436
Change-Id: I12a4e4f4e0c2042f0c0bf7eead42baca7b87a22b"
ee32ea5e2bf2b01104c5bde6b6a5018dd0e15f57,2016-04-08 10:48:30+02:00,"Switched from fixtures to mock to mock out starting RPC consumers

fixtures 2.0.0 broke us wildly, so instead of trying to make it work
with new fixtures, I better just switch the mock to... mock.

Change-Id: I58d7a750e263e4af54589ace07ac00bec34b553a
Closes-Bug: #1567295
(cherry picked from commit 2af86b8f6f749bf7b42a2c04b48c9a2dc28a46c9)"
5853af9cba6733725d6c9ac0db644f426713f0cf,2016-04-08 11:21:06-07:00,"Iptables firewall prevent IP spoofed DHCP requests

The DHCP rules in the fixed iptables firewall rules were too permissive.
They permitted any UDP traffic with a source port of 68 and destination
port of 67. Care must be taken since these rules return before the IP
spoofing prevention rules. This patch splits the fixed DHCP rules into
two, one for the discovery and request messages which take place before
the instance has bound an IP address and a second to permit DHCP
renewals.

Change-Id: Ibc2b0fa80baf2ea8b01fa568cd1fe7a7e092e7a5
Partial-Bug: #1558658
(cherry picked from commit 6a93ee8ac1a901c255e3475a24f1afc11d8bf80f)"
92527c2de2afaf4862fddc101143e4d02858924d,2016-04-09 08:17:45-07:00,"Clear DVR MAC on last agent deletion from host

Once all agents are deleted from a host, the DVR MAC generated
for that host should be deleted as well to prevent a buildup of
pointless flows generated in the OVS agent for hosts that don't
exist.

Closes-Bug: #1568206
Change-Id: I51e736aa0431980a595ecf810f148ca62d990d20"
850b4c025fa5652bfa474c78e7775d74fdb93df6,2016-04-09 12:35:37-07:00,"Deprecate 'ovs_use_veth' and 'veth_mtu' options

These were added to support an old kernel bug with
patch ports in OVS. This should no longer be an issue
with distros new enough ship Ocata.

Closes-Bug: #1550501
Change-Id: I8cd3d74f4d7dbe57fbff180d344f21534d590ce1"
6797638b9ec0b201efe44be1ea63b6cfe2064596,2016-04-09 13:26:20-07:00,"Only load timestamp service plugin in timestamp tests

Do not allow the timestamp plugin tests to load all of the default
service plugins to prevent possible resources from being leaked
from those plugins.

Change-Id: Ic31cc86efe8b7415e2a4769d5c2f542d1e7097f5
Closes-Bug: #1569130"
0c2caa977f120d045b20edaf0b6dd6176ce5def4,2016-04-10 14:56:45+03:00,"Fullstack connectivity: test interface scenario added.

This patch adds (of_interface=native, ovsdb_interface=native)
test scenario. Other scenarios have been renamed for the
configuration to be self-explanatory.

Change-Id: I302db874ffa61004d706d946ba8fdb35b927e830
Related-bug: #1528894"
45bec12cfc27578597cd197334979d0aee73a2cf,2016-04-10 17:29:42-07:00,"Add 169.254.169.254 when enable force_metadata

When enable force_metadata in dhcp.ini, and create a network
and a subnet, none 169.254.169.254/24 ip info set in related
namespace(qdhcp-XXX) with `ip a` command. In this case, vms could
not get metadata any more.

Change-Id: Ib5b95f3afc6e66f66cdb7e1e98e5450a6e80a1b2
Closes-Bug: #1549793"
fa5eb530bb71c1b1fe1020802a63b05907695011,2016-04-11 05:47:28+00:00,"Add uselist=True to subnet rbac_entries relationship

Because the join conditions for Subnet rbac entries
are manually specified, SQLAlchemy is not
automatically detecting that this relationship is a list.
This adds the uselist=True kwarg to the relationship to
ensure that it's always handled as a list.

Change-Id: Ia4ae57ddd932260691584ae74c0305a79b2e60a9
Closes-Bug: #1557959
(cherry picked from commit 691f8f5ea54c04bfdfb76e25bda14665b05ed859)"
a2d1c46fe7952abc392d91ef3d00d203e0f38a4c,2016-04-11 05:50:49+00:00,"firewall: don't warn about a driver that does not accept bridge

Drivers that do not need the bridge parameter are safe to ignore it.
Actually, the base abstract interface for those drivers does not allow
to pass the new parameter.

Ideally, the base class __init__ signature would change to accept the
argument, but we can't do it without breaking API.

So instead, just handle both types of drivers - those that accept the
additional argument, and those that don't. And don't assume the latter
are somehow wrong.

Change-Id: Iceee46f63669b28e3a34d207216d864f1bfa5cf8
Closes-Bug: #1561243
(cherry picked from commit 193aa35325b897b960de88b510181b377e4c345c)"
8d6f3bde1b6219e388e30388d1e2788f50e56850,2016-04-11 04:45:01-05:00,"Postgresql: add do_drop arg in alter_enum function

When postgresql is used as the backend and alter_enum is called.
The old type of enum will be dropped. But there is a case which
the old type is used by more than one column, in different table
eg. Then the drop operation will be failed. Add do_drop,do_rename,
do_create to let developer to decide whether these operations should
be skipped or not.

Change-Id: I708288e2cc507017d9f6512b567e3bfc77dfd761
Closes-Bug: #1568436"
dabd969090d35ec218d348f170edbef58163a79d,2016-04-11 10:55:56+00:00,"ovsfw: Load vlan tag from other_config

OVS agent stores vlan tag only to other_config before
setup_port_filter() is called [1], leaving 'tag' column empty. This
patch loads tag from correct place and modifies functional tests
accordingly.

Closes-Bug: 1566934
[1] https://github.com/openstack/neutron/blob/1efed3a5321a259d27ec4a6e80352d35fc423c11/neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py#L821

Change-Id: Iaae46ce7362fedfc53af958600d6d712eb382e9f"
2e2d75cbc2be356e962793db42905cecf28730d8,2016-04-11 15:30:38+00:00,"ovsfw: Load vlan tag from other_config

OVS agent stores vlan tag only to other_config before
setup_port_filter() is called [1], leaving 'tag' column empty. This
patch loads tag from correct place and modifies functional tests
accordingly.

Closes-Bug: 1566934
[1] https://github.com/openstack/neutron/blob/1efed3a5321a259d27ec4a6e80352d35fc423c11/neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py#L821

Change-Id: Iaae46ce7362fedfc53af958600d6d712eb382e9f
(cherry picked from commit dabd969090d35ec218d348f170edbef58163a79d)"
2d09f50c980747c786d4f23b9a7df0303978d39a,2016-04-12 14:10:34+09:00,"Remove Openflow Agent(OFAgent) mechanism driver

The OFAgent driver and its agent are removed in the Newton cycle.
This adds to remove them in the release note.

Change-Id: I5dbcd38b0ccc156a6c1cbac4d7fa7f9d297ec466
Partial-Bug: #1521477"
ece192b056c36568238abaf763b0ea9f99877c4c,2016-04-12 05:11:11+00:00,"Use new DB context when checking if agent is online during rescheduling

Commit 9ec466cd42de94c2fad091edfd7583a5f47eb87a was not enough
since it checked l3 agents in the same transaction that was used
to fetch down bindings - so agents always were down even if actually
they went back online.
This commit adds context creation on each iteration to make sure
we use new transaction and fetch up-to-date info for the agent.

Closes-Bug: #1522436
Change-Id: I12a4e4f4e0c2042f0c0bf7eead42baca7b87a22b
(cherry picked from commit 70068992e37c80e9aa8e70f017aa35132d7e5aee)"
fff909e899eb06ca2ba1b9219df8525db0980fdd,2016-04-12 05:15:21+00:00,"Values for [ml2]/physical_network_mtus should not be unique

Obviously there could be physical networks with same MTU.
The patch sets unique_values to False when parsing physical_network_mtus
Unit test added.

Closes-Bug: #1567502
Change-Id: I46e5b5d3f7033a974fca40342af6dff7c71a9a4a
(cherry picked from commit 5cdd7ae574312a7499a8768c1752d9bc27ff7d20)"
e532ee3fccd0820f9ab0efc417ee787fb8c870e9,2016-04-12 05:18:35+00:00,"Notify resource_versions from agents only when needed

resource_versions were included into agent state reports recently to
support rolling upgrades (commit 97a272a892fcf488949eeec4959156618caccae8)
The downside is that it brought additional processing when handling state
reports on server side: update of local resources versions cache and
more seriously rpc casts to all other servers to do the same.
All this led to a visible performance degradation at scale with hundreds
of agents constantly sending reports. Under load (rally test) agents
may start ""blinking"" which makes cluster very unstable.

In fact there is no need to send and update resource_versions in each state
report. I see two cases when it should be done:
 1) agent was restarted (after it was upgraded);
 2) agent revived - which means that server was not receiving or being able
    to process state reports for some time (agent_down_time). During that
    time agent might be upgraded and restarted.

So this patch makes agents include resource_versions info only on startup.
After agent revival server itself will update version_manager with
resource_versions taken from agent DB record - this is to avoid
version_manager being outdated.

Closes-Bug: #1567497
Change-Id: I47a9869801f4e8f8af2a656749166b6fb49bcd3b"
9c58ae6a70125497a39612f71c53c60a8b35968e,2016-04-12 09:49:02+00:00,"Wrap all update/delete l3_rpc handlers with retries

This is needed for mysql galera multimaster backends.

Closes-Bug: #1564144
Change-Id: Ia5a14d5ee91c6672d61904f669e9e845a7f262c9
(cherry picked from commit d8f0ee5ecd67ee6ec956c7fdadce3c2a8e8301bf)"
07fa3725c5a7fc68a41ed8af53ca2d3aad4c35b9,2016-04-12 09:50:03+00:00,"ADDRESS_SCOPE_MARK_IDS should not be global for L3 agent

Otherwise agent becomes unable to handle more than 1024 routers
(including deleted routers) and starts failing.

It should be enough to distinguish address scopes inside router namespace,
so this patch moves ADDRESS_SCOPE_MARK_IDS set to the RouterInfo class.

Closes-Bug: #1566291
Change-Id: I1e43bb3e68db4db93cc1dfc1383af0311bfb0f2d
(cherry picked from commit 1cb43734808eded87210d2957d56b70c514d55c3)"
05a4a34b7e46c2e13a9bd874674804a94f342d0c,2016-04-12 10:16:59+00:00,"Notify resource_versions from agents only when needed

resource_versions were included into agent state reports recently to
support rolling upgrades (commit 97a272a892fcf488949eeec4959156618caccae8)
The downside is that it brought additional processing when handling state
reports on server side: update of local resources versions cache and
more seriously rpc casts to all other servers to do the same.
All this led to a visible performance degradation at scale with hundreds
of agents constantly sending reports. Under load (rally test) agents
may start ""blinking"" which makes cluster very unstable.

In fact there is no need to send and update resource_versions in each state
report. I see two cases when it should be done:
 1) agent was restarted (after it was upgraded);
 2) agent revived - which means that server was not receiving or being able
    to process state reports for some time (agent_down_time). During that
    time agent might be upgraded and restarted.

So this patch makes agents include resource_versions info only on startup.
After agent revival server itself will update version_manager with
resource_versions taken from agent DB record - this is to avoid
version_manager being outdated.

Closes-Bug: #1567497
Change-Id: I47a9869801f4e8f8af2a656749166b6fb49bcd3b
(cherry picked from commit e532ee3fccd0820f9ab0efc417ee787fb8c870e9)"
61e76a34f322828572882ef66598b3da58ef36bc,2016-04-13 00:49:18+00:00,"Revert ""Add 169.254.169.254 when enable force_metadata""

This reverts commit 45bec12cfc27578597cd197334979d0aee73a2cf.

Closes-bug: #1569507

Change-Id: Ie605f3b848a35b5db545c69038249155477d71e0"
07401352a964b92ef4bc09a09800554e4a84cc87,2016-04-13 07:53:56+02:00,"Cleanup stale OVS flows for physical bridges

Perform deletion of the stale flows in physical bridges consistently with
br-int and br-tun, respecting drop_flows_on_start configuration option.
Added tests for auxiliary bridge and functional tests for the physical
bridge using VLAN/flat external network. Fixes part of the bug 1514056;
together with [1] and [2], the bug should be considered fixed.

The commit also fixes inconsistency between netmask of allocated IP
addresses assigned in _create_test_port_dict and ip_len in _plug_ports
of base.py.

[1] https://review.openstack.org/#/c/297211/
[2] https://review.openstack.org/#/c/297818/

Co-Authored-By: Jian Wen <wenjianhn@gmail.com>
Partial-Bug: 1514056
Change-Id: I9801b76829021c9a0e6358982e1136637634a521
(cherry picked from commit cacde308eef6f1d7005e555b4521332da95d3cf4)"
1a61e532218d52ef41d679d17eccabea6e59ab38,2016-04-13 09:40:20+02:00,"Fix doc build if git is absent

When building packages if git is absent, then we should not set
html_last_updated_fmt. It can still be set via the -D switch
when building with sphinx-build.

Change-Id: I6e6c59b101760224008fd902c8c258d6120a615d
Closes-Bug: #1552251"
2de33a902d63c27876cda090011beaa987802fe2,2016-04-14 06:35:49+08:00,"Delete conntrack entry on the other direction

When one vm unbind a security-group, only one direction
conntrack entry was deleted, which is not enough and may
cause another direction was still could connect.
This patch delete the left one.

Change-Id: I44d6bd0c2465294b557fd01566b72e016d34bba3
Close-Bug: #1570171"
36305c0c4f4ebf498020f5956e103832da75f8a9,2016-04-14 06:28:33+00:00,"Add ALLOCATING state to routers

This patch adds a new ALLOCATING status to routers
to indicate that the routers are still being built on the
Neutron server. Any routers in this state are excluded in
router retrievals by the L3 agent since they are not yet
ready to be wired up.

This is necessary when a router is made up of several
distinct Neutron resources that cannot all be put
into a single transaction. This patch applies this new
state to HA routers while their internal HA ports and
networks are being created/deleted so the L3 HA agent
will never retrieve a partially formed HA router. It's
important to note that the ALLOCATING status carries over
until after the scheduling is done, which ensures that
routers that weren't fully scheduled will not be sent to
the agents.

An HA router is placed in this state only when it is being
created or converted to/from the HA state since this is
disruptive to the dataplane.

This patch also reverts the changes introduced in
Iadb5a69d4cbc2515fb112867c525676cadea002b since they will
be handled by the ALLOCATING logic instead.

Co-Authored-By: Ann Kamyshnikova <akamyshnikova@mirantis.com>
Co-Authored-By: John Schwarz <jschwarz@redhat.com>

APIImpact
Closes-Bug: #1550886
Related-bug: #1499647
Change-Id: I22ff5a5a74527366da8f82982232d4e70e455570
(cherry picked from commit 9c3c19f07ce52e139d431aec54341c38a183f0b7)"
93795a4bda47605d5616476b2a456772308aa3c3,2016-04-14 09:19:00+00:00,"Fix deprecation warning for external_network_bridge

We only want this to warn when a deployer has set anything other
than a blank string. The olso cfg would warn whenever it was set
so it was incorrectly warning on the value we want operators to
set it to.

This changes the cfg option to not use deprecated for removal and
the L3 agent config validation to emit a warning if its not set
to the value we are suggesting.

Change-Id: If533cf7c4c379be78f5a15073accaff7f65973ab
Closes-Bug: #1563070
(cherry picked from 8382ac3717cf646145379456af94ce75000349a9)"
dfacba0f2d7586df51962c2b927e5272358ea3c1,2016-04-14 02:29:38-07:00,"Add 169.254.169.254 when enable force_metadata

When enable force_metadata in dhcp.ini, and create a network
and a subnet, none 169.254.169.254/24 ip info set in related
namespace(qdhcp-XXX) with `ip a` command. In this case, vms could
not get metadata any more.

Change-Id: Ibd73824658c9759d32fa53ffcf41f2b719c1028b
Closes-Bug: #1549793"
8a86ba1d014a5e758c0569aaf16cfe92492cc7f1,2016-04-14 16:53:00+02:00,"Support interface drivers that don't support mtu parameter for plug_new

The method signature before Mitaka did not have the mtu= parameter. We
should continue supporting the old signature, since it can be used in
out of tree interface drivers. The class is part of public neutron API,
so we should make an effort to not break out of tree code.

Change-Id: I8e0c07c76fd0b4c55b66c20ebe29cdb7c07d6f27
Closes-Bug: #1570392"
bf66cc6f74133cfe6c1ab75287d39814ac44b068,2016-04-14 15:28:24-04:00,"Don't disconnect br-int from phys br if connected

When starting up, we don't want to delete the patch port between br-int
and the physical bridges. In liberty the br-int bridge was changed to
not tear down flows on startup, and  change
I9801b76829021c9a0e6358982e1136637634a521 will change the physical
bridges to not tear down flows also.

Without this patch the patch port is torn down and not reinstalled until
after the initial flows are set back up.

Partial-Bug: #1514056
Change-Id: I05bf5105a6f3acf6a313ce6799648a095cf8ec96
(cherry picked from commit a549f30fad93508bf9dfdcfb20cd522f7add27b0)"
4e3a9c2b9c0ada6c2a471d24a20927aa8e8f5740,2016-04-15 13:03:55-07:00,"Be explicit about the APIs tested in the gate

Add an rc hook that declaratively define what extensions
are going to be tested in the gate.

This has two benefits: a) it provides an easy switch to
disable intermittent/experimental APIs; b) it provides a
safeguard against accidental configuration errors that
may trigger the execution of dormant tests.

The 'service_type' extension has been skipped in preparation
of [1].

[1] https://review.openstack.org/#/c/195329/

Change-Id: I03e2394011aa747899b50e6eb64faca68866b388"
e174e619580173d43b398aa71587938a4313ca5b,2016-04-15 16:47:24-06:00,"Avoid calling _get_subnet(s) multiple times in ipam driver

While allocating or updating ips for port, _get_subnet and
_get_subnets were called multiple times resulting in multiple DB
calls.  This patch changes it to only call _get_subnets once
initially.

Closes-bug: #1554414
Change-Id: I7124974bac629fdb8946df6a7f84bd6b40f5af49"
8693d21ef34f4b3a4273862894838d47e924b63f,2016-04-15 22:55:15+00:00,"Optimize get_ports query by filtering on subnet

Current code gets all ports from DB and then for each port it checks
if it has a PD subnet. With this, we get ports which are not needed
and again we need to check for subnet in these ports.

We can optimize this by querying the DB by filtering on subnet.

Closes-bug: #1566676
Change-Id: I2451f9a2c6a64ce27a607b193900caa05742273d"
7e79137acc060db00c50fb8f0190768df0eb1296,2016-04-15 21:06:31-04:00,"Move class properties to instances for dhcp tests

Using class properties for tests always carries the risk of
conflicting use between test cases when tests are run in parallel.

Related-Bug: #1569507

Change-Id: I5868dd8e3c2293be26fd7c99338f7c979f727533"
b970ed5bdac60c0fa227f2fddaa9b842ba4f51a7,2016-04-16 07:00:51+00:00,"Clear DVR MAC on last agent deletion from host

Once all agents are deleted from a host, the DVR MAC generated
for that host should be deleted as well to prevent a buildup of
pointless flows generated in the OVS agent for hosts that don't
exist.

Closes-Bug: #1568206
Change-Id: I51e736aa0431980a595ecf810f148ca62d990d20
(cherry picked from commit 92527c2de2afaf4862fddc101143e4d02858924d)"
a2ceec28647d835aaa5228578537230ff571cee3,2016-04-17 08:55:11-07:00,"Don't update DHCP ports in a transaction

Updating ports is incompatible with the transaction
semantics that happen inside of ML2. See partial-bug for
more details.

This transaction served no purpose wrapped around the port
update because there should only be one port per agent per
network and if that port fails to update, the code to delete
the binding won't be hit anyway.

Change-Id: Ica2c5a19e10ae1773e49537b5ff4ae0eacaeb388
Partial-Bug: #1540844"
20fbd1d0cda8cef62c9f1fc913ce7bd4688a381f,2016-04-18 10:16:45+09:00,"Modify an option for delete-port as recovery

When create_port failed on add_router_interface, it fails to delete
the port. On error recovery path, l3_port_check=False should be passed
to delete_port().

Partial-bug: #1525163
Co-Authored-By: Yushiro FURUKAWA <y.furukawa_2@jp.fujitsu.com>
Change-Id: I5f83c99aaa2ebc061630a8382fe98e4460e7f620"
2131340d74e8c18a4547c37ddceb019a17be06bd,2016-04-18 06:18:36+00:00,"release note to deprecate prevent_arp_spoofing option

This option was originally intended to deprecate in Mitaka
and remove in Newton, but we missed to announce it in Mitaka
release note. It looks better to deprecate it in Newton release
and remove it in Ocata release.

Change-Id: Iad466abbb0716da77801315d1a8766ba2f7c06b9
Closes-Bug: #1546010"
cefb1079f0c959d0d84f720b021df4654eb7cac3,2016-04-18 01:05:08-07:00,"DHCP: remove update_lease_expiration

This code has not been around since commit d9832282cf656b162c51afdefb830dacab72defe

Change-Id: I5c0a75443ee9330505c2762d53c739c20ddaaea3
Closes-bug: #1571503"
dab6070cafb95308cb8580856ecfdf213e8f77b8,2016-04-18 01:57:39-07:00,"Revert ""Deprecate 'ovs_use_veth' and 'veth_mtu' options""

The reason for reverting this is that when we tested this OVS
port is show as DOWN and it can actually send traffic.

An explanation is below:

The DHCP port has ""tap"" in the name, but doesn't appear to be
a tap device. It appears to be an OVS internal device. That device
was then put into a different network namespace, which isn't
visible to the root namespace in which ovs-vswitchd is running.
Using internal devices in this manor is kind of a hack since
ovs-vswitchd can't actually see the device, but it can still
send and receive traffic on it.

This reverts commit 850b4c025fa5652bfa474c78e7775d74fdb93df6.

Closes-bug: #1571553
Change-Id: I82d53d62bfd42cb17e3ce7f739369be3bbf44c02"
9355885d7dab41e48a8ecaaf59b1bd3835f17f27,2016-04-18 04:05:13-07:00,"Fetch router port subnets in bulk

When a router port is being attached to a network it
must first check that the new subnet(s) do not overlap
with any of the other subnets the router is already
attached to.

The previous code was calling the core plugin to look
up each attached subnet individually. This led to slow
responses if a router was attached to hundreds of other
subnets.

This patch just adjusts the logic to request all of the
subnets from the core plugin in one call so the number
of DB calls stays constant regardless of attached subnet
count.

Change-Id: I36a2b23b089269bb51ce3dc271c944b48fca8781
Closes-Bug: #1558101"
f73dae0a65a6b63cffae5c5e3c2f98d4f0e35ccf,2016-04-18 15:03:49+03:00,"Add check that external gw port exist when metering-agent adds a rule

If router has no gateway port when metering-agent wants to add
a metering-label-rule method _process_metering_label_rules() fails
with error ""cannot concatenate 'str' and 'NoneType' objects""
because there is no check that router has an external gateway port.
This patch adds this check and adds some unit test.

Closes-bug: #1527274
Change-Id: Ic9f626db41bfb6343187742e209402dd7d5232d1"
6dcdb15dce4952cdf3782d57431d0c5f7ba6e53b,2016-04-18 14:07:07+00:00,"LinuxBridge agent's QoS driver bw limit for egress traffic

QoS service plugin provides for now bandwidth limit rules for egress traffic
only (from VM point of view). QoS extension driver for Linuxbridge agent now
configures limits in proper way on tap interface so limited is traffic which is
outgoing from VM.
Linuxbridge agent's QoS extension configures egress bandwidth limit and burst
value in exactly same way how openvswitch is doing it with tc.
Old methods in TcCommand class will stay untouched because they can be used
later to implement also ingress bandwidth limits in QoS.

Change-Id: Id2b0463f49df52744e5bc3979a4cfd0ff06f9248
Closes-bug: #1563720"
d87b37876abdb89b89b40aeefba0fcae86efde41,2016-04-18 14:05:42-04:00,"Move class properties to instances for dhcp/test_agent.py

Using class properties for tests always carries the risk of
conflicting use between test cases when tests are run in parallel.

Change-Id: I41034001a8674ad208c57f2f60266769390f924b
Related-Bug: #1569507"
fe1b52634aaf850bba99cdb0c41b5f30851a3e75,2016-04-19 16:04:00+08:00,"Correct the interval between two reports

Currently the interval between two reports is wrong. For example, with
below setting in file metering_agent.ini
measure_interval = 30
report_interval = 600

The Ceilometer will get the reports from meter-agent per 630 seconds. The
reason is the test condition is wrong in the code, we should use >=
instead of >

add a unit test
neutron.tests.unit.services.metering.agents.test_metering_agent.
TestMeteringOperations.test_notification_report_interval
to test the report interval

Change-Id: Id5820f845d20bbe5fb5a9b8b9695499aa36c5d9e
Closes-Bug: #1569875"
9a32f4ef763e382b6eb69ca06b9d95bad4b6e879,2016-04-20 17:10:42+09:00,"Add a missing address-scope extension check

Closes-Bug: #1572439
Change-Id: I538af531278d4f0fc6feb494d13387d8a2810cf3"
d2eb6f70ac111d672a0f5ae85565921f82e28108,2016-04-21 19:37:27-07:00,"Add test that ensures subnet is usable after update

Adds a simple test to make sure a port can be created
on a subnet after disabling DHCP.

Related-Bug: #1573443
Change-Id: I94f1a59e52b109984904fd9e56e3c1a3f1c270fe"
667ea2ac7c1ef8ce6f52072639a13a833533f3ea,2016-04-22 08:43:28+00:00,"Allow OVSDB Connection to register certain tables

Current OVSDB Connection will register all tables with schema_helper.
It doesn't matter for most cases, but for implementation for bp
routed-networks in networking-ovn, we don't need all tables in OVN_
Southbound DB are registered. We only need a certain table named
Chassis can be registered.

This patch add a parameter for OVSDB Connection to allow it to
register certain tables, instead of all tables.

Change-Id: I79df60a08a7a6c555b07a9b566d7c09b97e2463c
Closes-Bug: #1568718"
fe34afc13aee0d9c71bd1dca1327ef1eaddf73a6,2016-04-22 21:27:13+00:00,"Decorate AvailabilityZonePluginBase properly

Without this, users could improperly overlook either
get_availability_zones or validate_availability_zones.

Change-Id: I6530dca041a92da2f1d0bf01d359e5edea3df5c0
Closes-Bug: #1573388"
b9bec4be6ba06087ebfa20007dcbc2cb646a5345,2016-04-23 22:15:54-04:00,"DVR: Use IPDevice class consistently

create_rtr_2_fip_link() only creates IPDevice class instances
after it determines the VETH pair does not exist.  Change to
always create them as instead of using int_dev[0].  This is
also setup for a follow-on patch.

Partial-Bug: #1566383
Change-Id: I58e242f05ffb9a33bda5aeb93344861769845d2e"
b047e3c28a0f3b714302dec17dcb0c138b758d90,2016-04-24 18:20:22-07:00,"Pass through setattr to deprecated things

Without setattr defined, setting an attr will end up
setting a new attribute on the deprecated instance
rather than changing my_globals. This means that other
functions in my_globals that have a reference to the original
will have a different view than external users that get
the new attribute.

Closes-Bug: #1575316
Change-Id: I7d1f00b5649399cb6db5213fa5efc7a924cf30a8"
339a1ccbb931ff906143ee6339376836f6f4563e,2016-04-25 22:57:31+00:00,"Revert ""Improve performance of ensure_namespace""

This reverts commit 81823e86328e62850a89aef9f0b609bfc0a6dacd.

Unneeded optimization: this commit only improves execution
time on the order of milliseconds, which is less than 1% of
the total router update execution time at the network node.

This also

Closes-bug: #1574881

Change-Id: Icbcdf4725ba7d2e743bb6761c9799ae436bd953b"
3fb07b662930889b52e9ed0bc5a5616212aca46c,2016-04-25 16:28:54-07:00,"Add device_id index to Port

Some 'Port' queries use 'device_id' column for lookup.
Such queries could be observed in database query log (at least) during
instance launch. In the absence of 'device_id' index that leads to full
table scan. That causes unnecessary database load and impacts query
response time.

Change-Id: If42b7d3265e216d393d3ab8c172b97637af908cc
Closes-Bug: #1574750"
f97e62806d10ef64ad483dab658b15a522c0ed9f,2016-04-26 08:01:44+00:00,"Replaced this with ""get-me-a-network""

Closes-Bug:#1568332

Change-Id: I50cc1951d7f7c57750c77a6f6b2f0435912e1251"
a323769143001d67fd1b3b4ba294e59accd09e0e,2016-04-26 15:26:42-07:00,"Revert ""Improve performance of ensure_namespace""

This reverts commit 81823e86328e62850a89aef9f0b609bfc0a6dacd.

Unneeded optimization: this commit only improves execution
time on the order of milliseconds, which is less than 1% of
the total router update execution time at the network node.

This also

Closes-bug: #1574881

Change-Id: Icbcdf4725ba7d2e743bb6761c9799ae436bd953b"
adfdd654424f7cbccc22489b53f9341108be13bd,2016-04-27 11:14:42+05:18,"Avoid L3 agent termination without server

This patch fixes the termination of L3 agent if the neutron
server is not available. It was trying to query service plugins
enabled on the server, which is used to determine if FWaaS is
enabled or not. When L3 agent is unable to contact neutron
server to retrieve plugins list, it will be retried infinitely
with an increasing timeout between each try.

The timeout logic is implemented as a separate patch
https://review.openstack.org/#/c/280595/

There's been an earlier fix which alleviates this problem to
some extent with bug #1368795. This patch modifies the logic
to keep retrying forever, instead of terminating the agent.
It also adds a more clear message to the user in logs.

Change-Id: If0b136817c7bca8fcd2b660ba88ae69c3f341764
Closes-Bug: #1569921"
31861843d90e013d31fb76fc576b49a35e218aa4,2016-04-27 16:48:29-05:00,"Remove old fwaas remnants from neutron

This was planned to be removed a long time ago but no one ever got to
it.  This shouldn't come as a surprise.

Closes-Bug: #1500960

Change-Id: I3a50d4c069dc54a7c86e7d79586d893a3ae31f2c
Co-authored-by: Ryan Moats <rmoats@us.ibm.com>"
03c03dbd21f6eceffb8cfa76bf2ff6f93f1db58f,2016-04-28 13:19:12+08:00,"add PROTO_NUM_IPV6_ICMP for _validate_port_range

PROTO_NUM_IPV6_ICMP is missed in _validate_port_range,
this patch adds it.

Closes-Bug: #1574472
Change-Id: I52e2dcf65f35da880c64056b159ac2414702bf1e"
ee9f86c3f8bde27abb82bd474ad1d746c94e3f96,2016-04-28 14:53:37+08:00,"Mock mechanism manager instead of the test driver

test_create_router_port_and_fail_create_postcommit mocks
the test driver's create_port_postcommit mechod. But the
mechanism drivers are not always ['logger', 'test'] in all
circumstances. For networking-odl, the mechanism driver is
opendaylight. So the mocking does not take effect in
networking-odl and fails this test case. Other stadium
ML2 drivers may have the same issue.

Change-Id: Iaeaa1ea177f6fdcc81f47d505855c5f699971a6b
Closes-Bug: #1576046"
1f5008564de03bcd5d03743bdbce004bb27aaad1,2016-04-29 11:52:28+03:00,"Do not rewrite original exception for IPAM

If deadlock exception is raised during allocation of multiple ips,
this exception gets rewritten by rollback mechnism. Rollback tries
to deallocate already allocated ips, but can't do it because database
is not operatable unless entire transaction is restarted. So another
exception is generated and it prevents retry wrappers from restarting
transaction correctly.

To fix this behavior rollback actions are covered with try-except block.
This way any exception during rollback operations do not replace
original exception.

Partial-Bug: #1571666
Change-Id: Ifdba7c49dc4a774be5221338b003d371750374d0"
2e19107fe2b7740d750aa39d28e2377a63c9dcfe,2016-04-29 13:18:14-07:00,"Pecan: Fix Shim status codes

Fix the status codes returned by the shim controller
to match the expectations of the API tests.

Closes-bug: #1567801
Change-Id: Ibfede6b6bc4ba24cf2b9e4ff5540c2249695252f"
16ca061abc6f4512b282ad2af7a38dbee02f2f7e,2016-04-29 22:47:24-05:00,"Avoid eventlet monkey patching for the tempest plugin

do the monkey patch for each modules instead.

Closes-Bug: #1571486
Change-Id: Ia698dcf99f3950aeabffc44d85e4b33f56714afd"
7c7da2e3ca7ae4ca723fa26bda1a26d3fe95af95,2016-04-29 21:30:06-07:00,"Preserve backward compatibility with OVS hybrid plugging

In Liberty and before, the Neutron server never had to be
configured with a firewall driver for the OVS hybrid IPtables filtering
bridge to work. However, in Mitaka, some logic snuck in[1] that made it
so if the driver was not defined, the hybrid plugging would be disabled.
This essentially broke anyone upgrading from Liberty to Mitaka who
was using OVS and did not have the firewall driver configured on the
server.

This patch adjusts the default if the driver is not defined on the
server to automatically set hyrbid plugging to true to preserve the
Liberty behavior.

1. I13e5cda8b5f3a13a60b14d80e54f198f32d7a529

Closes-Bug: #1577584
Change-Id: Ic1e316f2eb4e273e5b9fb045f1822d30af7bda68"
89297919a73c1e7f86c61d08f3f3d15278f5763a,2016-04-29 23:27:12-07:00,"Fix update target tenant RBAC external path

This fixes the logic to allow updates to wildcard RBAC external
policies. It was broken for two reasons: first, it was using the
wrong kwarg, second, it wasn't considering the target tenant when
determining if the policy was required.

This patch fixes both issues and adds an API test exercising the
update path.

Closes-Bug: #1577100
Change-Id: Id7441ab5c3f3667aa1cc48100286a2a9d480e201"
56962922cc439409bcecd808a1e9bbec2c3756f7,2016-05-01 23:57:29+00:00,"Don't load DNS integration in l3_router_plugin

In this patchset we stop the l3_router_plugin from loading the DNS integration
extension. The DNS integration extension should only be configured by the
operator by adding 'dns' to the 'extension_driver' list in ml2_conf.ini

Change-Id: I1321d9821973fe918005a8c2f3dd751af9affe38
Closes-Bug: #1574694"
77456735cbc9066dda8186937cb6ee2073833123,2016-05-02 17:35:49+02:00,"fullstack: Use noop firewall

Currently fullstack tests don't use hybrid plugging but they use hybrid
firewall by default. Using iptables is not segregated and OVS agents
running in parallel may interfere between each other.

This patch removes using iptables in ovs agents per created port.

Change-Id: Ic15c942360a4a6ecf0eb5d8ecbbc54e59b10431d
Closes-Bug: #1575033"
f5a2ee300d109ac9d403ee1f39d6e056ac925133,2016-05-03 00:53:40-07:00,"Add API to retrieve default quotas

Currently there is no support to retrieve default quotas set
for all projects. This patch adds a new API function to get
default quotas.
GET /v2.0/quotas/<tenant-id>/default

DocImpact: Document new API to used to retrieve default quotas
APIImpact: New Read-only API to retrieve default quotas

Change-Id: If40a44348e305da444acd6196d2e0c04202b8f7a
Closes-Bug: #1204956"
1cafff087194711399ad2a85a9f394f7204d7bdd,2016-05-03 21:54:23+03:00,"Remove threading before process forking

Forking a process when multiple threads are running is an unsafe
operation and could cause a lot of problems because only current
thread will continue working in child thread. Any locked by other
thread resource will remain locked forever.

We faced with this problem during oslo.messaging development and
added workaround to hide this problem:
https://review.openstack.org/#/c/274255/

I tried to fix this problem in oslo.service:
https://review.openstack.org/#/c/270832/

but oslo folks said that this fix is ugly and it is wrong way to add
workarounds to common libraries because projects use them incorrectly.
I think that is fair.

So this patch fixes incorrect usage of oslo libraries. In this patch
I extended functionality of NeutronWorker and add there
`worker_process_count` parameter which determines how many processes
should be spawned for this worker. If `worker_process_count` = 0 - don't
create process and spawn thread in scope of current process for worker

Then I moved all background tasks to workers and return them by
`get_workers` method. start_plugin_workers collects plugin's workers
using `get_workers` method and starts in ProcessLauncher first workers
with `worker_process_count` > 0 and only after this starts threaded
workers by simple Launcher

Closes-bug: #1569404

Change-Id: I0544f1d47ae53d572adda872847a56fa0b202d2e"
3d127dd767659e371b72acf04728fb3a2e1025a6,2016-05-03 15:29:21-07:00,"DVR: Fix TypeError in arp update with allowed_address_pairs

There is a TyperError seen when trying to update an arp entry
for the DVR service port that has associated allowed address
pairs.

The _get_allowed_address_pair_fixed_ips were not returing the
fixed_ips dictionary but just returning the fixed_ip string.

This caused the TypeError to occur. In addition to the fixed_ip
it should also return the subnet_id for arp_update and it was
returning it.

This patch fixes the issues mentioned above.

Closes-Bug: #1566046
Change-Id: I35d3145682e23e087c17129bb9556946e0aa801c"
773394a1887bec6ab4c2ff0308f0e830e9a9089f,2016-05-03 21:07:21-04:00,"OVS: Add support for IPv6 addresses as tunnel endpoints

Remove IPv4 restriction for local_ip configuration statement.

Check for IP version mismatch of local_ip and remote_ip before creating
tunnel.

Create hash of remote IPv6 address for OVS interface/port name with least
posibility for collissions.

Fix existing tests that fail because of the added check for IP version
and subsequently valid IP addresses in _setup_tunnel_port.

DocImpact

Change-Id: I9ec137ef8c688b678a0c61f07e9a01382acbeb13
Closes-Bug: #1525895"
aa630f2ac88bfb4a9828b432bddfed1f04e077d3,2016-05-04 11:19:15+03:00,"New engine facade from oslo_db: Step 1

Start using new engine facade.
Existing property session for Context is needed for backward
compatibility.
Temporary created class ContextBaseWithSession unless
reader and writer will be used in proper places.
Usage of lazy init for engine facade will be removed in next patch
set.

Partial-Bug: #1520719

Change-Id: I4f0693789f1c928ef47c5fdd982c147d1a9a89e1"
863b17000910001ec5bab0ebb6f7f205e7b8935d,2016-05-04 06:39:37-04:00,"Fix functional tests logging

Turns out the patch with Git commit hash prefix 13993764
disabled functional tests logging completely. This patch
fixes that by moving the neutron-db-manage logging setup
from import to the main function. Fixing that, it looks like
patch with Git commit hash prefix 4980f031fe7 turned off
DEBUG level logging for functional tests. I changed the
tests default logging from INFO to DEBUG to fix that.

Closes-Bug: #1567613
Change-Id: If02c18af20a236514409f37fa993224903877a8b"
474b1e7e2f9618a74db3d1359bf2b8f8beffc221,2016-05-04 06:41:17-04:00,"Add logging for some functional tests

Functional tests log to a file only if they inherit from
the Sudo tests base class. This patch changes the base
class for some test cases to make them log.

Related-Bug: #1567668
Change-Id: I494ad5410e48489f1fb3689cec44c5a29bbc42f3"
8adc737cd17bbc4244e235b4c9343c6e8a08a2ab,2016-05-04 11:11:46-04:00,"Delete post_test_hook.generate_test_logs

Log files as .txt files, don't zip them, and put them where
they need to be instead of copy them there in the post gate
hook. The benefit to doing this is that we'll get logs
for tests even if the job timed out.

Change-Id: I4bfd27534c827aed3cbd7b43d7d1289480ea4806
Related-Bug: #1567668"
9dc70ed77e055677a4bd3257a0e9e24239ed4cce,2016-05-04 11:09:26-07:00,"DVR: Clear SNAT namespace when agent restarts after router move

When we manually move a router from one dvr_snat node to
another dvr_snat node the snat_namespace should be removed in
the originating node by the agent and will be re-created in the
destination node by the destination agent.

But when the agent dies, the router_update message reaches the
agent after the agent restarts. At this time the agent should
remove the snat_namespace since it is no more hosted by the
current agent.

Even though we do have logic in agent to take care of cleaning
up the snat namespaces if the gw_port_host does not match with the
existing agent host, in this particular use case the self.snat_namespace
is always set to 'None' in the dvr_edge_router init call when agent
restarts.

This patch fixes the above issue by initializing the snat namespace
object during the router_init. Since we do have a valid snat
namespace object and if the gw_port_host mismatches, the agent
should clean up the namespace.

Change-Id: I30524dc77b743429ef70941479c9b6cccb21c23c
Closes-Bug: #1557909"
c2f780648d878477bec731d255e71c112ca941b5,2016-05-05 09:21:16+00:00,"Fix prefix delegation deleting addresses for ports

If a network has IPv4 and IPv6(prefix delegated) subnets,
prefix delegation is deleting port's IPv4 address and
not properly updating IPv6 address.

Prefix Delegation(PD) is calling port_update with empty fixed_ip,
for the port with IPv4 and IPv6(PD) subnets. After fixing this,
when _update_ips_for_port is called with new_ips having IPv6 PD subnet,
it is unable to add IPv6 address with new subnet prefix,
as _test_fixed_ips_for_port not returning IPv6 PD subnet.

To fix this, we explicitly add PD subnet to ""to_add"" list,
so that IPv6 address with new prefix added to PD subnet's port.

Closes-bug: #1509626
Partial-Bug: #1505316
Change-Id: I1162ca7d004461c335b0f6e0a9b5d6dff0a10429"
3e668b6a3720c1509ffef4ad5b91b4242dfd47b3,2016-05-05 09:50:54+00:00,"Add exponential back-off RPC client

This adds an exponential backoff mechanism for timeout values
on any RPC calls in Neutron that don't explicitly request a timeout
value. This will prevent the clients from DDoSing the server by
giving up on requests and retrying them before they are fulfilled.

Each RPC call method in each namespace gets its own timeout value since
some calls are expected to be much more expensive than others and we
don't want to modify the timeouts of cheap calls.

The backoff currently has no reduction mechanism under the assumption
that timeouts not legitimately caused by heavy system load
(i.e. messages completely dropped by AMQP) are rare enough that the
cost of shrinking the timeout back down and potentially causing
another server timeout isn't worth it. The timeout does have a ceiling
of 10 times the configured default timeout value.

Whenever a timeout exception occurs, the client will also sleep for a
random value between 0 and the configured default timeout value to
introduce a splay across all of the agents that may be trying to
communicate with the server.

This patch is intended to be uninvasive for candidacy to be
back-ported. A larger refactor of delivering data to the agents
is being discussed in I3af200ad84483e6e1fe619d516ff20bc87041f7c.

Closes-Bug: #1554332
Change-Id: I923e415c1b8e9a431be89221c78c14f39c42c80f"
ea5fce2c91ae166fe2112ae4418940299d80ab13,2016-05-05 12:54:06+03:00,"Fix SR-IOV binding when two NICs mapped to one physnet

Because ESwitchManager._create_emb_switch stores one EmbSwitch per
physnet, there is only last EmbSwitch works if two NICs was configured
for one physnet:
physical_device_mappings=physnet2:ens3f0,physnet2:ens3f1

This patch makes ESwitchManager.emb_switches_map store a list of
EmbSwitch for physnet.

Also fixed usage of singleton ESwitchManager class in tests by
adding cleanup.

Change-Id: I4fd9849890a770ea2b00063b546cc73a0f2d754c
Closes-Bug: #1576757"
17cfffbbfa57ccec54c7e06518b5e7e8a00e0c51,2016-05-05 09:50:13-04:00,"DVR: Use existing IPDevice to add address on FIP VETH

create_rtr_2_fip_link() has IPDevice instances for each
end of the VETH pair it created, just use them to add the
link-local IP to each one.  Because this is a point-to-point
link, we don't add the broadcast address when we assign the IP,
so add a flag to IpAddrCommand() class to accomodate us.
This is also setup for a follow-on patch.

Partial-Bug: #1566383
Change-Id: I66d70afaf3c52861e0887d3f535d5327ea46b128"
972cdef50cd32837b8328466e4d821bb36535130,2016-05-05 13:31:15-06:00,"Classes lack metaclass decoration

Add decorations where required.

There are roughly a dozen classes in Neutron that define abstract
methods or properties but are not decorated with
@six.add_metaclass(abc.ABCMeta). Without this decoration, children
can be created without defining the required methods or properties.

Decorating RBACColumns in db/rbac_db_models.py causes failures and will
be reported separately.

Decorating unit tests is of dubious benifit and should be addressed
separately (if at all).

There are also several more places where metaclassing isn't correct, to
be taken care of in follow-on patches.

For example, BaseScheduler is using the fact the None doesn't have a
filter_agents() method, which gives developers confusing error messages
when they incorrectly implement the interface, and they won't see any
error until schedule() is called. As an aside, the docstring for this
base class is also incorrect.

Change-Id: I2b2cce37d9b0d40559a715a7d510a969b8ba9963
Closes-Bug: #1577648"
4d6fe0c38ba5ab822f272af2a892093a315d356a,2016-05-06 01:30:24+00:00,"Use correct session in  update_allocation_pools

This fixes the IP driver update_allocation_pools to use
the session on the subnet rather than generating a new one.
Generating a new one was causing the allocation pool
creation to be uncommitted since nothing was ever starting
a transaction on the session before it added allocation pool
objects to the session. This resulted in them never being
committed to the database so the subnet would become unusable
after an update.

This also adds a very simple unit test to ensure the
subnet still works after an update.

Closes-Bug: #1573443
Change-Id: I1c80a01f475760b9cd405fc89ee2df3a4a1c26c4"
24f95f4877a72176be2bbe57120306ef5a847297,2016-05-06 08:15:00+00:00,"Move address scope specific code out of iptables_manager

iptables_manager will be used by many features including security
groups, FWaaS, metering. The address scope specific code should be
moved out of iptables_manager, so that other feature will not get
the iptables rules that they will not use. For example, dhcp namespace
will not have the address scope iptables rules.

The change to the test code to adapt the change at [1], has also been
reverted in this patch. Instead, a couple of new test cases are added.

[1] https://review.openstack.org/#/c/270001/

Change-Id: Ifc8e7a381f8ab005a9e0216532cc7d0e7378c025
Closes-Bug: #1549513"
556f1c27894cf8c423907274ae89a438a3f67331,2016-05-06 01:52:43-07:00,"Check for existence of snat port before deleting it

Delete logic was the last place where such check was missed.

Change-Id: I9fb2916af1b5087b4e6268c040b00404c431e288
Closes-Bug: #1579259"
a47d22942a46cf12589cee6353dc2b6deb58f178,2016-05-06 21:11:55+00:00,"DVR: Ensure fpr and rfp devices are configured correctly

Restarting the l3-agent when creating the fip namespace may
leave rfp and fpr devices with no IP addresses, since we will
not try and configure them if the devices already exist.

Fix this by always trying to configure the IP addresses,
even if the devices already exist.

Closes-Bug: #1566383
Change-Id: Idad3bb4808ec66b9a764bb621dfb04a10eb7ed6"
b53a63c9e5914460a956cb3f1692ada61ff6ad2e,2016-05-06 18:06:25-07:00,"Remove tools/pecan_server.sh

This isn't used anymore and may not even work.
The server runs as part of the previous neutron-server binary
now with an option to control whether pecan or the legacy
code is used.

Change-Id: Ic5236ec305ca21a5e06b3149c7270eb2d62d2606
Closes-Bug: #1579924"
19348ecd6eefdab5e7ba6cabbeff1d3e124bb00f,2016-05-09 08:20:57+00:00,"Pecan: skip all notifications on failures

If there was a bad status code, none of the notification
logic should attempt to process. A bad status code means
that the assumptions the notification code makes about
original resources being present may not be true.

This also fixes the exception translator so the correct
status code is set by the hook on exceptions that have
a fault map entry.

Closes-Bug: #1557516
Change-Id: Ibff419e7caa6de422f04eb1e43fd2aed304bdd97"
6072ad3cbe7f322c101cb74b13b27db36ceaa92c,2016-05-10 00:28:02+09:00,"Delete a magic number of security_group_rule quotas test

The quotas tests of security group rule have a magic number.
This is the number to avoid the resources created by default.

Fixed to assign the appropriate number by the resources lists.

Change-Id: I9e1639d640ef297fd3e0f5a7721c1aa7cd6eada9
Closes-bug: #1567743"
687fd6b7318ee34f8e06cf5c05feac1a3e4e494a,2016-05-09 18:13:04+00:00,"SR-IOV driver and SimpleAgentMechanismDriverBase

Since commit 83c9578fcc5d06b634d48e0e186bebd60a60322e was merged, the
SR-IOV mechanism driver requires an agent in the compute nodes. This
change makes the SR-IOV mechanism driver to inherit from
SimpleAgentMechanismDriverBase, like all the other agent based ML2
drivers

Change-Id: Icffc097a42dd71546b97bb7b43edd1e205c9dd15
Closes-Bug: #1578274"
3bf73801df169de40d365e6240e045266392ca63,2016-05-09 19:41:19+00:00,"Merge tag '8.1.0'

This is a null-merge of the 8.1.0 release tag back into the master
branch so that the 8.1.0 tag will appear in the git commit history of
the master branch. It contains no actual changes to the master branch,
regardless of how our code review system's UI represents it. Please
ask in #openstack-infra if you have any questions, and otherwise try
to merge this as quickly as possible to avoid later conflicts on the
master branch.

Change-Id: I95f1589ddf719a92551461ac0ace893fc4832aa2"
2f17a30ba04082889f3a703aca1884b031767942,2016-05-10 12:50:43-07:00,"OVS Mech: Set hybrid plug based on agent config

This adjusts the logic in the OVS mechanism driver to determine
what the ovs_hybrid_plug value should be set to in the VIF details.
Previously it was based purely on the firewall driver configured on
the server side. This prevented a mixed environment where some agents
might be running a native OVS firewall driver while others are still
based on the IPTables hybrid driver.

This patch has the OVS agents report back whether they want hybrid
plugging in their configuration dictionary sent during report_state.
The OVS agent sets this based on an explicit attribute on the firewall
driver requesting OVS hybrid plugging.

To maintain backward compat, if an agent doesn't report this, the old
logic of basing it off of the server-side config is applied.

DocImpact: The server no longer needs to be configured with a firewall
           driver for OVS. It will read config from agent state reports.
Closes-Bug: #1560957
Change-Id: Ie554c2d37ce036e7b51818048153b466eee02913"
fdecc6268213eae005b9e1fd94bc9633fb83081f,2016-05-11 04:51:15+09:00,"Insert validation with request params for HTTP DELETE

When delete request is thrown with ""request body"", it returns 500.
This commit fixes the return code from 500 to 400(BadRequest).

Change-Id: Iadf1bc724f9bd1728d3f9d3c0da4f0675da97d30
Closes-Bug: #1519342"
1f017d349d2418aebf8d35f04099c817271e6cc5,2016-05-11 04:38:05+00:00,"Add retry support to pecan

This modifies the expose and when decorators in
pecan to also include the olso db API retry logic
so all controllers that leverage these automatically
get the retry logic to handle temporary DB errors.

To accomplish this, the ATTR_NOT_SPECIFIED sentinel
was modified to be friendly to copy.deepcopy since
unlike in the old API, the new logic will be sending
copies to the core plugin after the attributes have
been populated.

This also includes a workaround for a bad assumption
in the pecan decorator utils that assumes all decorators
have a __code__ attribute.

Change-Id: If4e502d25856190495b160a589232de258364c4f
Closes-Bug: #1557509
Co-Authored-By: Brandon Logan <brandon.logan@rackspace.com>"
97372a1431d9f80bda7bdfd1cd494aeeecf3df53,2016-05-11 09:15:38-05:00,"Refactoring config options for quota

Refactoring Neutron configuration options for quota to be in
neutron/conf. This will allow centralization of all configuration
options and provide an easy way to import.
It is similar to the Nova implementation found here:
http://specs.openstack.org/openstack/nova-specs/specs/mitaka/implemented/centralize-config-options.html

Partial-Bug: #1563069

Change-Id: I7723ba9b24dd5cf74b321bd0fc54df0666594bbc"
b672c26cb42ad3d9a17ed049b506b5622601e891,2016-05-11 11:03:09-07:00,"Add provisioning blocks to status ACTIVE transition

Sometimes an object requires multiple disjoint actors to complete
a set of tasks before the status of the object should be transitioned
to ACTIVE. The main example of this is when a port is being created.
The L2 agent has to do its business to wire up the VIF, but at the same
time the DHCP agent has to setup the DHCP reservation. This led to
Nova booting the VM when the L2 agent was done even though the DHCP
agent may have been nowhere near ready.

This patch introduces a provisioning blocks mechansim that allows the
entities to be tracked that need to be involved to make a transition
to ACTIVE happen. See the devref in the dependent patch for a high-level
view of how this works.

The ML2 code is updated to use this new mechanism to prevent updating
the port status to ACTIVE without both the DHCP agent and L2 agent
reporting that the port is ready.

The DHCP RPC API required a version bump to allow the port ready
notification.

This also adds a devref doc for the provisioning_blocks
module with a high-level overview of how it works in addition
to a detailed description of how it is used specifically with
ML2, the L2 agents, and the DHCP agents.

Closes-Bug: #1453350
Change-Id: Id85ff6de1a14a550ab50baf4f79d3130af3680c8"
cc616333f3285c3785e08ba2942dcff3c584b6f3,2016-05-11 22:27:01+00:00,"Segment extension: remove deprecated warnings

Remove the deprecated warnings from unit tests. That is:
    neutron/extensions/segment.py:51: DeprecationWarning: ATTR_NOT_SPECIFIED
    in version 'mitaka' and will be removed in version 'newton': moved to
    neutron_lib.constants

TrivialFix

Change-Id: Ie78f9b2be2b6c4d624964bfe268cb132403cef3a
Closes-bug: #1579967"
d526e720f73cbd79e54bbed18fe3009cad1cee10,2016-05-12 12:04:45+05:18,"Fix for 'ofport' query retries during neutron agent start

When agent starts up, it checks whether patch ports exists
before adding them. But the routine used to query the
patch port's existence is get_port_ofport() which retries
the opertation because of the @_ofport_retry decoration.
This creates an unwanted delay in the startup of the
agent, when the port do not exist.
The port's existence can be checked with port_exists()
call on the bridge with no retries.

Change-Id: I9fac0066d6c03491536a6e2718d6340acd275d9d
Closes-Bug: #1579769"
0856095c82b3ef73a0376c741d1a3a61b1a077a6,2016-05-12 16:51:47+08:00,"Remove the file i18n.py and other related cleanups

As per the oslo_i18n documentation, neutron/i18n.py should be an internal
only module, named _i18n.py. This was done in Mitaka release and i18n module
was deprecated since. We could remove the i18n.py now in Newton.

Closes-bug: #1519493

Change-Id: I02e33559cef42d90812d9dbc3dac1d8122897e19"
f766fc71bedc58a0cff0c6dc6e5576f0ab5e2507,2016-05-12 10:06:54+00:00,"Add setting default max_burst value if not given by user

If user will not provide burst value for bandwidth limit rule there is
need to set such value on appropriate to ensure that bandwith limit
will work fine.
To ensure at least proper limitation of TCP traffic we decided to set
burst as 80% of bw_limit value.
LinuxBridge agent already sets is like that. This patch add same
behaviour for QoS extension driver in openvswitch L2 agent.

DocImpact: Add setting default max_burst value in LB and OvS drivers

Change-Id: Ib12a7cbf88cdffd10c8f6f8442582bf7377ca27d
Closes-Bug: #1572670"
e45add7b07e5c72c43047d18e10af1c4ae307b0f,2016-05-13 00:28:18-07:00,"Restart dsnmasq on any network subnet change

When a new subnet is added to a network, the network cache
is updated with the list of subnets regardless of which ones
have DHCP enabled. This changes the index order of the subnet
list which means that the tags used for each subnet change.

This means we must restart the process because the opts file
will be using different tags than the process args. This patch
implements that change. It also sorts the subnets on the RPC
side so the agent indexes don't change if subnets aren't
added/deleted.

The previous logic was only restarting the process when DHCP
enabled subnets changed, which meant that adding a DHCP disabled
subnet would break the association between the opts file tags and
the process arg tags, which led to the reported bug.

Closes-Bug: #1581918
Change-Id: If1452c0e8fe95eb94cd78c7a05b57aead75662b5"
9e663477f5d486f1625372c9798142758fbfec90,2016-05-13 12:22:12+02:00,"Avoid testing oslo.service library internals

oslo.service===1.10.0 added a few kwargs with proper defaults. In
our tests we seem to be testing library internals, causing the tests
to fail with the new library version.

As a workaround to unblock the gate, add modified test code
to pass with both the old 1.9.0 and 1.10.0 of the oslo.service
library.

Change-Id: Ife69c319409a4214658bc94498108b8b3c5db8cb
Closes-Bug: #1581325"
a33b9d04350104bb5fdf33a6471629021fea403a,2016-05-13 16:40:00-04:00,"Remove a SGs API test following sync to Tempest

The dependent patch syncs the test from Neutron to Tempest
so it can be removed from the Neutron tree. Tests for core
resources belong to Tempest as described in the bug report.

Change-Id: I1e4d07fb659851755d5ffe7dd6fbae2d9f8a63fc
Related-Bug: #1552960
Depends-On: Ic77561757b5bd9ac61b1e059afdba19a98257126"
a1c194cf060b2d563beb36261c7702950446756f,2016-05-13 20:23:43-07:00,"Make exception translation common and add to pecan

This moves the exception translation logic from the
legacy api.v2.resource module to a common module and
re-uses it from pecan to bring consistency to the
way language and exception translation is handled
between the two.

This also adjusts the policy enforcement hook to correctly
handle the unsupported method case since 'after' hooks
are executed after 'on_error' hooks that return an exception.

Closes-Bug: #1583844
Change-Id: If3c2d8c94ca6c1615f3b909accf0f718e320d1c2"
18280216cb7405856ba52f7eee0b1b214dcebd7b,2016-05-14 05:39:31-07:00,"Enforce UUID of port/subnet ID for router interfaces

The add_router_interface/remove_router_interface actions
are not subject to the typical attribute map validation
so the input values for port_id and subnet_id were not
being checked for UUID likeness. This lead to an ugly
traceback if a boolean value was present which could
fill logs with garbage if a tenant kept doing it.

This patch calls the API validator for UUIDs in the
_validate_interface_info function where we validate requests
to add_router_inferface and remove_router_interface.

Change-Id: I0a0d3279a21c815fb78528860fc2a35c1d5a4e2d
Closes-Bug: #1584510"
79fd5b4b17bface92d51d37bf8e1aad88aaafce8,2016-05-14 21:44:18-05:00,"Refactoring config options for service

Refactoring neutron configuration options for service to be in
neutron/conf. This would allow centralization of all configuration
options and provide an easy way to import.

Co-Authored-By: Dariusz Smigiel <smigiel.dariusz@gmail.com>

Partial-Bug: #1563069

Change-Id: Iff140c11765199536a8fd8066ad3063ed92355ae"
5109d16bc52abb20636c94c0208fb498d1c626eb,2016-05-15 00:19:38-07:00,"Make deepcopy of update body in API layer

This adjusts the update handler in the API layer to pass a deepcopy
of the original update body to ensure that the original is used on
any generated retry requests.

Without this update handlers that modified the body as they processed
it (e.g. the external gateway update for routers) would be missing
data on a retry request.

This adds a test case for the bug that was caused by this.

Closes-Bug: #1584920
Change-Id: I88fb9d45eb82ef48e0d865decdcc7fad1c5fb361"
310074b2d457a6de2fdf141d4ede6b6044efc002,2016-05-16 16:35:12+03:00,"Check if pool update is needed in reference driver

Commit 6ed8f45fdf529bacae32b074844aa1320b005b51 had some negative impact
on concurrent ip allocations. To make ipam driver aware of subnet
updates (mostly for thirdparty drivers) ipam driver is always called with
allocation pools even if pools are not changed.

Current way of handling that event is deleting old pools and creating
new pools. But on scale it may cause issues, because of this:
- deleting allocation pools removes availability ranges by foreign key;
- any ip allocation modifies availability range;
These events concurently modify availability range records causing
deadlocks.

This fix prevents deleting and recreating pools and availability ranges
in cases where allocation pools are not changed. So it eliminates
negative impact on concurency added by always calling ipam driver on
subnet update.
This fix aims to provide backportable solution to be used with
6ed8f45fdf529bacae32b074844aa1320b005b51.

Complete solution that eliminates concurrent modifications in
availability range table is expected to be devivered with
ticket #1543094, but it will not be backportable because of the scope of
the change.

Change-Id: I29e03a79c34b150a822697f7b556ed168a57c064
Related-Bug: #1534625
Closes-Bug: #1572474"
4ec6932c93764fd7731928f1faa24b6c88fa9493,2016-05-16 21:54:15+00:00,"Respond negatively to tenant detachment of enforced QoS policies

Currently when the tenant attempts to detach an enforced QoS policy
for a port or network set by admin, the attempt fails but the API
feedback indicates that it was successful.  This change will
fix the API response so the failure is accurately signalled
to the tenant.

Co-Authored-By: litong01 <litong01@us.ibm.com>
Co-Authored-By: gong yong sheng <gong.yongsheng@99cloud.net>
Co-Authored-By: Nate Johnston <Nate_Johnston@cable.comcast.com>
Co-Authored-By: Margaret Frances <margaret_frances@cable.comcast.com>

Change-Id: I977feecc6cce378abc1e6092afbaf9f2681b2ec6
Closes-bug: #1486607"
18d16cfb4327fd76cd11986c6552c48a0e85833f,2016-05-17 13:09:42+09:00,"Add negative API tests that try to remove the resources in use.

The tests that remove resources in use are not covered enough
in api tests. This patch include test case of network, subnet
and router delete in use.

Change-Id: Id9d04f071e5a4b3553e97a5eee4431fb601a9c7f
Closes-bug: #1582086"
f0d99d54999f1cac75fc1b1280fa332798c9d175,2016-05-17 07:04:36-07:00,"Segment: remove deprecation warning for converters

Remove warning:
    neutron.api.v2.attributes.convert_to_int()' has moved to
    'neutron_lib.api.converters.convert_to_int()' in version
    'mitaka' and will be removed in version 'ocata': moved to
    neutron_lib

Change-Id: I0f6622b685a6b9ab030a13113badbefb729be013
Closes-bug: #1582541"
cbc15d2e1db22fbefaac0a97363589aebf834b24,2016-05-17 09:50:25-07:00,"Ensure unit tests don't assume an IP address allocation strategy

These unit tests initially asserted sequential allocation of IP
addresses, even though they have no need to specifically assert
that a specific IP was allocated. This made it difficult to
change out the IP allocation algorithm in the future and made
these tests fragile and poorly isolated.

This change breaks the dependency these unit tests have on a
specific IP allocation strategy and isolates them from any
changes that may be made to the order in which IP addresses
are allocated on a subnet.

Change-Id: Idc879b7f1e6496aa96b4f7ae6c3eaca6079bdcac
Partial-Bug: #1543094"
cece1855730d056fbb29108a708067cff31fc3cf,2016-05-18 10:06:29+09:00,"Update for removing ofagent

Update document and configuration help.
A release-note for removing ofagent is added in the following.

I5dbcd38b0ccc156a6c1cbac4d7fa7f9d297ec466

Change-Id: I586c0d5a7f9d3b742e8c65ff7e2986fd5d837f94
Partial-Bug: #1521477"
d2630f2dd43148e08aba1ef4f17ad3465350d994,2016-05-18 08:41:02+00:00,"Pecan: remove deprecation warning

Addresses the warning below:

DeprecationWarning: BaseException.message has been deprecated as of Python 2.6

Change-Id: I1aaebb28c3c9ca2ede9e900428fb5c7eef6d29e6
Closes-bug: #1582522"
c198710dc551bc0f79851a7801038b033088a8c2,2016-05-18 08:53:45+00:00,"DVR: Moving router from dvr_snat node removes the qrouters

Removing the router from dvr_snat node removes the qrouters
that are servicing the VM and dhcp ports.

If there are still dvr serviceable ports in the dvr_snat node,
and if router remove command is executed to remove the router
association from the dvr_snat agent then only the snat
functionality should be moved to the the different agent
and the router namespaces should be untouched.

This patch checks if there are any dvr serviceable ports for
the dvr router and if exists, it will not send a router_remove
message to the agent, but instead will send an router_update
message to the agent.

Change-Id: I5a3ba329346ab0d5ea7b0296ec64cc8e5fb4056d
Closes-Bug: #1564575"
ad2d7d3a8fa9d498475a963f3a2d0a344ae63ee2,2016-05-18 12:30:18+00:00,"Remove nested transaction from ipam driver

Using nested transaction in reference ipam driver causes rewriting
original exception due failure to restore to safepoint in case of
DeadLock.

DBDeadlock exception gets replaced with DBAPIError. It prevents db_retry
wrapper from working correctly.

This patch removed nested transaction block from reference ipam driver.

Change-Id: Ib710e87b0132aae3cd3afd12c5448961f1a3b25c
Partial-Bug: #1571666"
a474eb0cb6ea4bba4cd4ee3144261f1ca3aeb9a6,2016-05-18 09:28:19-06:00,"Fix broken URL in Mitaka Neutron release note

The section ""Other Notes"" has a bullet referring to ""Please read the OpenStack
Networking Guide."" The URL referenced in that bullet was in correct. An
updated URL of
http://docs.openstack.org/mitaka/networking-guide/adv-config-availability-zone.html
was added to the file
https://github.com/openstack/neutron/blob/master/releasenotes/notes/add-availability-zone-4440cf00be7c54ba.yaml

Change-Id: I3e6f6a6a15705820bc0ed489861465f54e07ae52
Closes-Bug: #1582966"
1f4c82ce9ea0676c4e813cc34bdb8687f63452e3,2016-05-19 20:25:46+00:00,"Deprecate neutron-debug

We will not follow the typical deprecation cycle and thus we will
not remove this in the release after the deprecation is advertised.

Nonetheless we want to signal the need for a more comprehensive set
of tools and APIs that will eventually make people want to move away
from the limitations of neutron-debug.

Closes-bug: #1583700

Change-Id: Ibe471f186b9b5c9c15c5857a35cbaca6b8d284d6"
936fe6c9afbab62ed147f0fdc9c19edde24a9ba3,2016-05-19 22:02:08+00:00,"fullstack: test for east west traffic

Fullstack test to test east west traffic through
legacy router.

Partial-Bug: #1583028
Change-Id: I3bfdd6cfafd5d4d1aa6a310efc9c8a8cb817ac46"
084173338e5e21ff37f042f69718237b94843665,2016-05-20 01:26:48+00:00,"DVR: Fix check multiprefix when delete ipv4 router interface

Current code will prevent from deleting router centralized snat port,
when there is a ipv6 subnet attatched to DVR.

This is correct when deleting a v6 router centralized snat port, because
multiple v6 subnets share one router port.

But it is not correct when deleteing a v4 router centralized snat port,
because v4 subnet doesn't share router port with v6 subnet. Deleteing a
v4 router centralized snat port should be allowed no matter if there is
v6 subnet attached to DVR.

Change-Id: I2d06c8c79f9ff9a9300a94bcbbae13569e4d963e
Closes-bug: #1581348"
851d39df908ecdebdd449236488303ff75bd9e85,2016-05-20 02:49:47+00:00,"Rename _find_router_port_by_network_and_device_owner

This is actually finding the v6 port, rename it base on the discussion
at https://review.openstack.org/#/c/315926

Change-Id: Ibc91067be3d38934cb55c82e3d792b2990180fc7
Related-bug: #1581348"
c195d1f756b502952a4751e0a760286e55c6a825,2016-05-20 06:09:55+00:00,"fix wrong default value of qos.notification_drivers

It is a list option, not str type.

Change-Id: I79c4c8815019e38504106398ce2d1e370364b7b7
Closes-bug: #1582087"
8ecb28dd09aedc0df6b91af4712aa8469a90e850,2016-05-20 15:18:22+02:00,"Integrate the port allowed address pairs VersionedObject in Neutron

This patch is dependent on commit I8d03528f8f45f5f50fa467b39245a513a37c5d89.
It integrates the VersionedObject with the existing code.

Integration revealed that using IPAddress is not correct for allowed
address pairs, because the address can also represent a subnet.

Another issue revealed by the integration is that we must retain the
original string format passed by users through API for MAC addresses.

Neither we can use IPNetworkField from oslo.versionedobjects for
ip_address field because it will then always append prefix length to
base network address, even if prefix length is maximum for the type of
IP network (meaning, the address actually represents a single host),
which is contradictory to how API currently behaves (returning mask-less
addresses for /32 - for ipv4 - and /128 - for ipv6 - prefix lengths).

To solve those issues, 'authentic' flavors for netaddr.EUI and
netaddr.IPNetwork types are introduced. Those 'authentic' flavors
attempt to retain the original string representation, as passed by the
caller.

Since base IPNetworkField recreates network object on coerce(), and
hence looses information about the original string representation, we
introduce our custom flavor of the field type that reuses the network
object passed by the caller.

The change for the type of ip_address field triggers hash change.
Anyway, we are safe to change it without considering backwards
compatibility, because the object is not used anywhere yet.

Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Change-Id: I3c937267ce789ed510373616713b3fa9517c18ac
Partial-Bug: #1541928"
b73f849f89c4620dcd8b7cfcdebb5e816317a7dc,2016-05-20 13:25:59+00:00,"fullstack: test for snat and floatingip

Fullstack test to test snat and floatingip through legacy router.
This test creates external network and boots a vm with external
network's gateway and connected to central-external-br.
Tenant vm is booted on internal network.
Tenant Router is connected to internal and external networks.

To test SNAT, it pings external vm from tenant vm.
To test floatingip, a new floatingip is assigned to tenant vm
and tests pinging to tenant vm's floatingip from external vm.

Partial-Bug: #1583028
Change-Id: I1f30c240419ec93a26368ed1623bb2ede595e3d1"
9a43f58f4df85adc2029c33ba000ca17b746a6eb,2016-05-20 11:35:59-05:00,"Add OSprofiler support

* Add osprofiler wsgi middleware. This middleware is used for 2 things:
  1) It checks that person who wants to trace is trusted and knows
     secret HMAC key.
  2) It starts tracing in case of proper trace headers
     and adds first wsgi trace point, with info about HTTP request

* Add initialization of osprofiler at start of service
  Currently that includes oslo.messaging notifer instance creation
  to send Ceilometer backend notifications.

Neutron client change: Ic11796889075b2a0e589b70398fc4d4ed6f3ef7c

Co-authored-by: Ryan Moats <rmoats@us.ibm.com>
Depends-On: I5102eb46a7a377eca31375a0d64951ba1fdd035d
Closes-Bug: #1335640
DocImpact Add devref and operator documentation on how to use this
APIImpact
Change-Id: I7fa2ad57dc5763ce72cba6945ebcadef2188e8bd"
dc7e2b10e88a2b04c18a8907456063eee89f0f71,2016-05-21 03:11:21+03:00,"unit: fix ValueError on TransactionQueue init with py34

With native ovsdb_interface several py34 tests fail
with ValueError during ovs_lib.OVSBridge creation
because of unbuffered text I/O in TransactionQueue
initialization.
This patch fixes the issue by switching to binary mode
in os.fdopen

Change-Id: I4158cc24f6b28a290a4a4d4bec6c2383c6bf12aa
Closes-Bug: #1580270"
c1e6d876585f350f575e4733f0eef808889b1ea0,2016-05-22 08:44:26+09:00,"Add quota tests in api tests.

The quotas tests in the case of create resources over limit value
are not covered enough in unit tests/functional tests.

This patch include test case of api functional tests.

Change-Id: Ibde1cdff068ae8ac130d05143d53b6b783ad0fa3
Closes-bug: #1567743"
403e5a07f51dee1efd335011cdd6b4454d1e7fde,2016-05-23 10:19:47+00:00,"Fixed help messages for path_mtu and global_physnet_mtus options

For path_mtu, make it clear it applies to tunnel typed tenant networks.
Removed information about specific mechanisms used to advertise MTU
values to instances because a) it duplicates the global_physnet_mtu
option description; b) it is not complete now that we also advertise MTU
via RAs. Finally, removed description for calculation details because
they duplicate global_physnet_mtu description.

While at it, fixed help text for global_physnet_mtus option not to refer
to segment_mtu which was renamed into global_physnet_mtu lately.

Change-Id: Ib0010206f08ec9a76b0e26e84cdb03c80755908d
Related-Bug: #1566706"
bc47fe97d3bf6322facca58f0f1b8081c386ffe9,2016-05-23 14:48:46+03:00,"Call ext_manager.delete_port on port removal

This patch updates OVSNeutronAgent to call ext_manager.delete_port
when the port is removed (similar to how CommonAgentLoop does).

Otherwise the QoS PortPolicyMap is not properly updated on port
removal and QoS extension will not apply policies if that port is
later reused by a VM on the same node (unless the agent is restarted).

Change-Id: I306c496985a550176d0ddc6eb33a4a4d351acb55
Closes-Bug: #1515533"
067a5c2a47026fccd09ce10e45eb16f5f9310234,2016-05-23 22:47:12-06:00,"Fix unit test for new list of icmpv6 allowed_types

But, we now have accept and reject rules for 134. Was this change to the
list correct?  IPv6 types need to take a look at this.

Closes-bug: #1585022
Change-Id: Icc408a2ca3121f32e605ce612dcc07905a069cd5"
0cf4ddc6ee35250fdfbce5f19bc62b8905f10fea,2016-05-24 09:17:25+00:00,"tests: validate sorting and pagination for networks

These are the very first API tests in the tree to cover those features.
The test is implemented in a generic way that will hopefully ease its
adoption for other resources.

Sadly, those tests cannot pass on every neutron cloud, at least until we
enable those API features by default and remove options to disable the
features.

There is no way to determine, via neutron API, whether cloud supports
those features. To work around that, we introduce two new tempest
options that determine whether tests that rely on sorting or pagination
should be executed. Those options are set in post-extra phase because
configure_tempest resets any configuration made during post-config.

Also bump resource quotas x10 times since default quotas are now not
enough, at least for network resource that is now under sorting and
pagination testing.

Related-Bug: #1566514
Change-Id: I5e68f471a641a34100aba31cb2c4a815c7220014"
cd445fefdefc94e64aedb0d1fd40052b442e16c3,2016-05-24 09:18:47+00:00,"OSProfiler imports break decomposed plugins

Ensure that the profile configuration is imported.

Change-Id: I9e40a59391c2bdf526d7e3262de924722acd3560
Closes-bug: #1585075"
abdb8585a0634a39dbc135aaa5e7ea296f426bea,2016-05-24 10:47:55+00:00,"Remove the inaccurate help message for min_l3_agents_per_router

Trival fix

Change-Id: If9b1785995336235a3bdf82ab451f50ab4e0793d
Closes-bug: #1585078"
e7c963f55758bd5b55ea89a3d87356b3700237f9,2016-05-24 14:48:17+03:00,"Migration for qospolicyrbacs has hardcoded InnoDB

Table creation scripts in Neutron use mysql_engine from config file
or from model which is default ""InnoDB"". Creation of qospolicyrbacs
should follow the same procedure.

Change-Id: I122f320e9eb4d30c7bdadec0604ddd007a5ab244
Closes-Bug: #1585169"
a388f78c8cb4b1c860bfc11029b5210955f1932d,2016-05-24 08:59:25-04:00,"DVR: Pings to floatingip returns with fixed-ip on same network

Pinging a floatingip of VM1 from a second VM(VM2) which has SNAT
enabled connected to a DVR router on the same network returns
with fixed-ip address rather than the floatingip address.

The NAT forwarding rules for floatingip in the router namespace
does not check for the in coming port and tries to add the rule
for all in coming ports.

This causes the packets that are originating from the router
namespace to be modified and forwarded directly to the VM2 fixed
ip instead of forwarding the traffic to the SNAT namespace.

The fix in here will make sure that for all routers, the floatingip
forwarding rules will be applied only to the 'rfp-' internal ports
and not to all ports.

Change-Id: I9453beffd94bf685afd74b0820506fb6b7c996c4
Closes-Bug: #1462154
Co-Authored-By: Hong Hui Xiao <xiaohhui@cn.ibm.com>"
12200922a923befe47e7edcbdd1683c3486a8b92,2016-05-24 06:36:54-07:00,"Remove remaining BGP code from neutron

There still are BGP codes in neutron repo, this patch remove it.
It was missed in commit I20b6ddd37d10eae70e8294d578e53137c0f866fe

Change-Id: I6bf71b14a03ccc005dcd4d67078e7e9f4a7ed197
Closes-Bug: #1584333"
387283d8de81fa4c7e28bc41d6c7707a388aeeef,2016-05-24 13:52:24+00:00,"Prevent adding duplicated sg rules with diff description

Now the security group rules can be added with same content but different
description. This should be prevented to stop creating duplicated sg rules.

Change-Id: Ibafe39f9652ecd24ad9536e6abc7c4f4384b3a22
Closes-bug: #1583601"
85863c9633a229089ac35a2cb1d397af9d07e5ac,2016-05-24 13:54:23+00:00,"Remove using PROTO_NAME_IPV6_ICMP_LEGACY from neutron.common.constants

Since neutron_lib 0.2.0 contains PROTO_NAME_IPV6_ICMP_LEGACY, remove
it from neutron.common.constants

Change-Id: Idd150ce1cbe660fc9529e5d46678f37142490a28
Closes-bug: #1585047"
80426cf6201374588f0118365992905eddce268e,2016-05-24 12:13:21-05:00,"Pecan: tell the plugin about field selection

Neutron plugin are able to do field selection on responses (for
instance only returning id & name for a resource). However,
Pecan does not leverage this capability and always tells the
plugin to fetch all fields, doing field selection while
processing the response.

This patch ensures that pecan send the field list down to the
plugin.

As a part of this patch TestRequestProcessing has been update
to inherit from TestRootController rather than
TestResourceController. Inheriting from the latter was causing
tests to be executed twice for no reason, beyong using
TestResourceController's 'port' attribute, which was however
unnecessary as this change proves.

Closes-Bug: #1570259

Change-Id: Iac930cd3bb14dfdda78e6a94d2c8bef2b5c4b9a5"
99e9d5c0efc46729a6f14f66a8845305b7667876,2016-05-25 11:37:59+02:00,"tests: cover port with existing sorting/pagination api tests

This is based on existing network api tests for the features that were
implemented in an extensible way.

Existing list_kwargs is decoupled from the base test class because they
are network test specific. Also removed generic handling for
create_method because each resource has its own signature for creation
methods, so it's easier to implement it per resource than trying to come
up with a generic solution.

Related-Bug: #1566514
Change-Id: I648851b48d0481c97054e1280b60a119b42dfd38"
b3ca00f7a603d3f1763c7a031baf476b85f790bc,2016-05-25 22:56:21-04:00,"Refactor QoS plugin to avoid code duplication

This change refactors the rule-specific methods in qos_plugin.py
in order to facilitate implementation of additional QoS rule types.

Further, with the recent merge of
https://review.openstack.org/#/c/292488/, which prevents primary
keys in Neutron's oslo.versioned objects from being updated, the
QoS plugin needed additional refactoring. This change implements a
generic method in Neutron's base objects to handle object updates
without updating the primary key.  This method is then used in the
QoS plugin.

Co-Authored-By: Slawek Kaplonski <slawek@kaplonski.pl>

Change-Id: I863f063a0cfbb464cedd00bddc15dd853cbb6389
Partial-Bug: #1468353"
543e960eb7cb5379d306035539c9e3d526655e47,2016-05-26 10:46:29+02:00,"tests: guarantee unique networks in get_list_of_random_networks

The function generates a list of random networks, but so far did not
guarantee their uniqueness. In rare cases, it breaks
test_subnetpool_prefixes unit test in gate that relies on those networks
to be unique.

Now, the function will regenerate the result several times if duplicates
are detected.

Change-Id: Ia300e36ad7a25dd156ac8b5f27dcdeeaa5339ab8
Closes-Bug: #1585941"
35aefdb54d58c786b26b10e1d0c550f7149e23fb,2016-05-26 18:20:31+09:00,"Fix validation of floating-ip association

A recently merged patch [1] allowed floating-ip via non-gateway port.
This commit fixes the regression.

This commit also provides an override point to allow plugins to choose
the ""broken"" behaviour.

[1] If054945eab058c7138aabbb22cda15890ccb502c

Closes-Bug: #1556884
Related-Bug: #1566191
Change-Id: I5b824a209355bbb44d954e00ad47269ac0b903b5"
18234b713a5cd4127bac7198c8a31b6728d1a74a,2016-05-26 13:06:49+03:00,"Do not inherit test case classes from regular Neutron classes

It's a bad practice itself and it may lead to errors during tests
initialization. Please see bug for details.

Closes-Bug: #1585149
Change-Id: I6d2bca0cf0120edabfcc185c575ca399baa4d42c"
1d4e078b1b8c6787dd77661dbfd9c87a9184b843,2016-05-26 13:26:01+03:00,"OVS: compare names when checking devices both added and deleted

When processing events from ovsdb monitor, agent checks devices
for which there are both 'added' and 'deleted' events and then looks
for the device in the system to know what event could be omitted.
In some cases event dicts for same port would not be equal:
for example ofports may differ. Thus we should compare device names
rather than dicts.
Please see bug for more details.

Closes-Bug: #1585623
Change-Id: I93e8796ce4a94327c1e96b19f8183c97546e193d"
7f31ccb7bbe0f78a34d704c59d0562ea10029893,2016-05-26 13:04:57+02:00,"Adopt to config_dir option being a list and not a string

Since oslo.config 3.8.0 (that included
Ibd0566f11df62da031afb128c9687c5e8c7b27ae), config_dir option is a list,
not a string. While our custom provider configuration parser for
multistring options assumes the latter.

It makes all installations that 1) pass at least one --config-dir option
in CLI and 2) enable any service plugin that relies on provider
definitions, to fail to start neutron-server. For example, this affects
any RDO Mitaka installation with *aas service plugins enabled.

Since Newton requires >=3.9.0, we are fine to switch to the list type
without any code to support backwards compatibility with older option
type. For Mitaka backport, we will need to handle both cases.

Change-Id: I10e399a852d9fba0fd1aea79a10e2e7c906e4b3c
Closes-Bug: #1585102"
22da3db98b8699f48d93892007e6a93340a3913c,2016-05-26 15:01:08+00:00,"oslo: remove usage of oslo.log verbose option

The option was deprecated a long time ago, and will be removed in one of
the next library releases, which will render neutron broken if we keep
using the option.

More details:
http://lists.openstack.org/pipermail/openstack-dev/2016-May/095166.html

Closes-Bug: #1586066
Change-Id: I884b4cc3ed04e4b5489e265c146666e04eb1bc27"
0b8eb3603e7a99621bcb8a7f290c611c999a921d,2016-05-26 19:12:20-05:00,"[qos] section is missing from neutron.conf

Update opts.py so neutron.conf is generated correctly.

Change-Id: I54db6d59adf3ee038353f73726935f0e5b45dac3
Closes-Bug: #1586207"
bffc5f062c15757b58a597e0f1e380aa4d9166c6,2016-05-27 16:08:17+00:00,"functional: fix OVSFW failure with native OVSDB api

A bunch of functional tests fail because of non implemented
x != [] operation in idlutils.condition_match() and
wrong condition passed to db_find() in OVSFW test.
This patch addresses the issue by implementing lists
comparison in native.idlutils and fixing the call to
db_find() in OVSFW test.

A functional test for OVSDB API's db_find() has been
added to ensure that querying a list column gives the same
result both with vsctl and native ovsdb_interface; unit
test for idlutils.condition_match() with corner cases has
been added as well.

Change-Id: Ia93fb925b8814210975904a453249f15f3646855
Closes-bug: #1578233"
45d363241de941b655cd34fa055f86075c78a0a5,2016-05-27 17:17:04+00:00,"fullstack: test for IPv6 east-west traffic

This patch validates east west IPv6 traffic through legacy router.

Partial-Bug: #1583028
Change-Id: Id18065340d49dfd389d88cc625f5a80be8da9a50"
1328000f9b9415c4fc6c0a91e68b7756d93bca5c,2016-05-29 06:47:09-07:00,"RPC unit tests: remove UUID future warnings

Mkae sure that objects make use of a UUID and not a fake one.

Change-Id: I6c4c51e8b5d8d5a347e9ccbef40ba04286850a41
Closes-bug: #1586776"
993446bc2397c16fa6ead61535680bb2503bf32f,2016-05-29 09:39:49-07:00,"ML2: use neutron-lib for PORT_STATUS_ACTIVE

TrivialFix

Change-Id: I0a7dcb73ab1bb51aeda87520c117b6adecd3be30
Closes-bug: #1586780"
1080620e5af6d3aae8034f516ded86dda257282b,2016-05-30 03:13:21+00:00,"Dont use query if network_ids is empty

A warning could be found in SQLAlchemy, if handling empty WHERE IN
clauses. This is found at neutron.db.segments_db.get_networks_segments

To avoid it, just return empty dict in such case.

Change-Id: I3cf727dede1d5909aeefbf852332818164ad3777
Closes-bug: #1586816"
15d1612a993f80b9b6be1a0ac6738eecc6bb8c52,2016-05-31 05:10:28+00:00,"DB: remove deprecated warnings

Remove object API's that are marked for deprecation in N.
These were marked as deprecated in commit
4b227c3771eba1cbaa27c6c33829108981cd9b69

Closes-bug: #1561188

Change-Id: I720d6952bb3297099c165f2ff95362b428deaea2"
5532fb71925a2473545b0f290367234b09fc7d7f,2016-05-31 04:49:53-04:00,"Fix wrong description in the class DhcpAgentNotifyAPI docstring

Change-Id: I69d7794f4326729e070328936927f619df475b76
Closes-bug: #1587307"
5decc850f126d74b89ec79593afcc68b9e8988e6,2016-05-31 12:23:13+02:00,"objects: support advanced criteria for get_objects

Those are needed to accommodate to API request needs without handling
sorting or pagination in Python.

Instead of adding four new arguments to get_objects interface, they are
consolidated using a single Pager object that is passed through the
_pager argument. The name uses underscore to avoid breaking objects that
want to pass 'pager' filter into SQLAlchemy. Hopefully, no objects will
ever have '_pager' attribute in their models.

Related-Bug: #1541928
Change-Id: I7dafc4dbd80f0ac35dbc2c2f30e56e441f5b1fc0"
d9d3c1c6b9e720c85649c10509971fb59f99dab9,2016-05-31 17:03:59+03:00,"Generalise the logic of resource auto rescheduling

The logic of reschedule_routers_from_down_agents() can be useful for
additional types of resource rescheduling such as loadbalancers, as described at
Id8d3218bf1e52722cc10ddcd34e3e734eef90658

Related-Bug: #1565511

Change-Id: I7871d68246d82f343e99730c09f81bcc7800bcce"
96d1d914ca0976fb6e8c7962d4d97f8553c4847e,2016-05-31 16:37:04+02:00,"Macvtap: Allow noop alias as FW driver

The macvtap agent only works with the NoopFWDriver. If another
driver is configured it terminates. Today only the explicit
configuration ""neutron.agent.firewall.NoopFirewallDriver"" is
accepted. This patch enables the macvtap agent to also accept
the alias ""noop""

Change-Id: I0d6f0b780a3881419243f12487e8b3d10e709f6c
Closes-Bug: #1587498"
a8da782051fc085fcb417c6d277a5e27586e2380,2016-05-31 17:01:53+02:00,"Guard against config_dirs not defined on ConfigOpts

Turned out that if the code extracts config_dirs value from ConfigOpts
objects before config files are parsed, then oslo.config will raise
NoSuchOptError exception.

This is not a usual mode of operation for the code, since main()
function of the process using it is expected to parse CLI and config
files before using it, it may nevertheless happen in some test code.

This patch guards against those exceptions, falling back to
/etc/neutron, as we already do when --config-dir is not specified.

Change-Id: I00cf824baa8580b7aa7ec4518a4741e49c998364
Closes-Bug: #1587359"
88a1a8cfe9d9d5bc8b0e7ff0040f28c3d3caaaa5,2016-05-31 13:51:27-07:00,"DVRHA interfaces should be created in all cases.

Interfaces owned by dvrha routers need to follow
the device owner naming convention of dvr routers.
Otherwise interfaces will not be created appropriately.

Closes-Bug: #1571113

Change-Id: I3a1fbd2d028b7caf0b2b8824c9c1d4e5eb9560f5"
9319b1a8366e00ec2ea9a763b5c3558649758f51,2016-06-01 20:17:34+09:00,"Fix get_free_namespace_port to actually avoid used ports

ss output is a string.  It needs to be converted to int before a set
operation.  The function seems to have been broken from the beginning
(commit e3fa0112).

Change-Id: I0d10360ae8807b3688d36912b42fa2a140c45e04
Closes-Bug: #1551288"
899b6cb0652ee54c08d130ccd7edc3091b7d930b,2016-06-01 16:14:35+00:00,"Pass ha_router_port flag for _snat_router_interfaces ports

Currently, router_centralized_snat port can be bound to a host were
l3-agent is in standby state (L3 HA + DVR case). As a result VM without
floating ip is unable to reach external network. This change passes
ha_router_port flag to _ensure_host_set_on_port when called for
_snat_router_interfaces ports.

Note: this issue is intermittent, without changes in l3_rpc.py
unit test does not fail every time.

Co-Authored-By: Oleg Bondarev <obondarev@mirantis.com>

Closes-bug: #1582739
Change-Id: I74bad578361ed7eac8cc6c740b06b66ab1530cd5"
6290af9cf97d4ee323ba988733e026a27695e9fa,2016-06-01 13:57:53-05:00,"Fix getting dhcp agents for multiple networks

The method to get dhcp agents for networks takes as a an argument
the ability to send a list of network_ids.  However, this method
is really only being used to send in a list of one network_id, but
there don't seem to be any usages where it is being used for many
network_ids.  Since its not being used, this hasn't been caught yet.

Change-Id: I6f07ed50b29448d279a4fd5f9d392af3a8490340
Closes-Bug: #1587973"
d5b4436289ff45795f3414e0c6f244146cbeca5f,2016-06-02 06:18:49+00:00,"Segments: remove log message indicating segments are not supported

Some plugins may not support segment. Each time a agent does a report
there is a log message, which is really pointless, that indicates
that segments are not supported.

This removes that log message.

Change-Id: I67e9031c89ca157679a21f1b09a873ff1842fc45
Closes-bug: #1587021"
8e5623d624a9855fe842baca3cf9b11948113592,2016-06-02 08:45:40+02:00,"Devstack support for macvtap agent

Macvtap agent can now be configured via this devstack.
Note that it is only supported in multinode environments
as compute node. The controller node still needs to run
linuxbridge or ovs.

Documentation will be added in devstack via [1]

[1] https://review.openstack.org/292778

Example:

OVS Controller
--------------
Make sure that the controller
- loads the macvtap ml2 driver
- uses vlan or flat networking

Macvtap Compute Node local.conf
-------------------------------
[[local|localrc]]
SERVICE_HOST=1.2.3.4
MYSQL_HOST=$SERVICE_HOST
RABBIT_HOST=$SERVICE_HOST
disable_all_services
enable_plugin neutron git://git.openstack.org/openstack/neutron
enable_service n-cpu
enable_service q-agt
Q_AGENT=macvtap
PHYSICAL_NETWORK=default
[[post-config|/$Q_PLUGIN_CONF_FILE]]
[macvtap]
physical_interface_mappings = $PHYSICAL_NETWORK:eth1

Closes-Bug: #1557407
Change-Id: I0dd4c0d34d5f1c35b397e5e392ce107fb984b0ba"
6f30217b42e178492f37f8619866e7c743868aa8,2016-06-02 12:28:33+02:00,"DB base plugin: correct typo id to subnet_id.

Code is referring to not declared variable 'id'. It was working before
because the 'id' was defined in place where
_subnet_check_ip_allocations_internal_router_ports() was invoked.

Closes-bug: #1588281
Change-Id: I2d9331171bf59e5e375e0c4fd0eeec25f4ebff30"
2ddbbce7ba8723ba2790c5f52a67564d30914d13,2016-06-02 15:17:08+00:00,"remove unused rpc method get_active_networks

This method was originally left for backwards compatibility during
an upgrade of neutron. It stopped being used in havana so I think it
should be safe to remove now.

Closes-bug: #1583835
Change-Id: I503d10ee59ba2fa046b5030e8281fd41a49ee74e"
56efc8ac76415070041d125a6e30523caf9b3cbd,2016-06-02 15:22:36+00:00,"Switch to oslo.cache

Oslo incubator is about to stop for cache module. We could use
oslo.cache instead. The legacy memory backend is replaced by
oslo_cache.dict.

Closes-Bug: #1517883

Change-Id: I108242ca9f27c9ec47959ce7615bc7d84cae014b"
483c5982c020ff21ceecf1d575c2d8fad2937d6e,2016-06-02 21:26:08+00:00,"Revert ""Revert ""Remove threading before process forking""""

This reverts commit b1cdba1696f5d4ec71d37a773501bd4f9e0cddb9

Original patch was reverted because it broke neutron plugin's
backward compatibility and needed more work.

This patch fixes that problems:
1) original behaviour of add_agent_status_check,
   start_periodic_l3_agent_status_check and
   start_periodic_dhcp_agent_status_check methods is deprecated but kept
   for using in third part plugins for backward compatibility
2) new add_agent_status_check_worker, add_periodic_l3_agent_status_check
   and add_periodic_dhcp_agent_status_check method are implemented
   instead and are used for implementing plugins in neutron codebase

Closes-Bug: #1569404

Change-Id: I3a32a95489831f0d862930384309eefdc881d8f6"
49b96b4ec27c0eca87d6143afbca674aeda84a5a,2016-06-03 11:39:58-04:00,"Devref: Add inline codeblock to upgrade command

Change-Id: I7498e80c2d28b97adc9d9801bcda7d8a49027ca2
Closes-Bug: #1588880"
09ff5e5ebd2d608c7ac44ccab16d8e108d7181bc,2016-06-03 19:08:07+03:00,"Force ""out-of-band"" controller connection mode

By default openvswitch uses ""in-band"" controller connection mode ([1])
which adds hidden OpenFlow rules (only visible by issuing ovs-appctl
bridge/dump-flows <br>) and leads to a network loop on br-tun when
using native OpenFlow interface. As of now the OF controller is hosted
locally with OVS which fits the ""out-of-band"" mode. If the remote OF
controller is ever to be supported by openvswitch agent in the future,
""In-Band Control"" [1] should be taken into consideration for physical
bridge only, but br-int and br-tun must be configured with the
""out-of-band"" controller connection mode.

[1] https://github.com/openvswitch/ovs/blob/master/DESIGN.md

Change-Id: I792a89d37b5d5319cc027835f6a1bfcbe7297ffb
Closes-Bug: #1588393"
75ae15365762e477fb6084bdbf29e41ad2c3b414,2016-06-06 18:42:13+09:00,"Provide router-id for ROUTER_INTERFACE/BEFORE_DELETE event

Closes-Bug: #1589434
Change-Id: I31f65b40c83f03c4e4b71a799aaea0359b992279"
5160d4e2ae285c62ab52c9dfc61121f8ca4ecd57,2016-06-06 06:11:08-04:00,"Make sure AZAwareWeightScheduler base on weight of agent

Problem details can be found in bug description. AZ here stands
available zone.

heapq.heapify() will sort tuple according to the first element. If
the first element is equal, then the second element is used. When
creating a new network, each AZ doesn't hold the network. So, the
AZ handling list is actually a name ordered list. As a consequence,
when creating a new network, a certain AZ will always be used,
for example, 'nova1' in ['nova1', 'nova2', 'nova3'].

This patch will sort the resource_hostable_agents firstly, so that
the AZ that holds dhcp-agent with least load comes first. Then use
min() to get the first AZ.

Change-Id: Id57b4656337ab8f1bd2dc3e8bd679a23778a2dea
Closes-Bug: #1522677"
3a2e41bf703d6721fcfe4d72f9ad5c0565fef42d,2016-06-06 23:05:51+00:00,"Update ml2 delete_subnet to deallocate via ipam

Previosly during delete_subnet in ml2 plugin ip allocation were removed
directly from database. This way ipam driver was unaware of this
deallocation.

Updated workflow to skip removing ip allocations directly from database.
Now ips are deallocated during update_port workflow (L1008).

This resolves issue with dhcp ports left in allocated state on ipam
provides side. Now they are correctly deallocated via update_port.

But this patch has next limitation: currently SLAAC allocations can
not be delete via update_port workflow, so ipam driver is still unaware
of such deallocations.
This part of issue is expected to be fixed as separate patch.

Subnet_in_use check was reworked. Previously it assumed that
auto-allocated ip are already deleted by the time of this check, but
with new workflow auto allocated ips are deleted later (on update_port).
So now this check verifies if there are any user allocated ips instead
of checking all allocations.

Partial-Bug: #1564335
Change-Id: I08d66da8cb57ed88e11ec2b18c8345edfce37d37"
aad501247a4cd0619560fb6a48f8a59ad6f0edcc,2016-06-06 19:06:54-07:00,"Fix server_default comparison for BigInteger

It is needed to add manual check for server_default parameter for
BigInteger as it is already done for Integer.

Proposed to oslo.db I91b5b3516a6ea0674bc31f3d5a91505fcd927b8b

Needed to unblock work on I476d3e03c8ee763cc4be6d679fe9f501eb3a19b5

Change-Id: I5d67244139a47d32c3231cb3812181e576293ce7
Related-bug: #1569262"
b1cfadc8b14c4b05d425f1985d9369babf8f41f5,2016-06-07 16:07:30+09:00,"l3_db: Make gw port in-use check overridable

For the benefit of plugins which allows floating-ip via
non-gateway port.  I.e. networking-midonet, which is currently
overriding the entire _delete_current_gw_port method.

Related-Bug: #1566191
Change-Id: Ied3bd9eac8bf2c3e6af9d4281aa8aa5a78e49870"
a095581a69a12eaa9ccf8c3c7fb0f58f9ef3f4ac,2016-06-07 18:00:40+08:00,"Fix missing availability_zone in dhcp and l3 conf

Now availability_zone attribute can be defined in dhcp-agent
and l3-agent. But the config had not generated in dhcp_agent.ini
and l3_agent.ini

This patch add availability_zone in base_agent_opts. That will
apply in dhcp and l3 agent conf.

Closes-Bug: #1589745
Change-Id: I9fdc39b1f9abd48a4b55e0a917e41bf68be56595"
e4b82f7e645654ad43b378bd5f243e97a16112e6,2016-06-07 15:26:23+00:00,"Revert ""DVR: Clear SNAT namespace when agent restarts after router move""

This reverts commit 9dc70ed77e055677a4bd3257a0e9e24239ed4cce.

Change-Id: I85a8051d56c535a4de4c70b3624eb7ccefa9e656
Closes-Bug: #1590041"
d2508163cfcede20df641239be081fe63c79150b,2016-06-07 12:11:51-04:00,"OVS: don't throw KeyError when duplicate VLAN tags exist

In _restore_local_vlan_map() we can have two ports with the
same VLAN tag, but trying to remove the second will throw
a KeyError, causing the agent to not start.  Use discard()
instead so we only remove an entry if it's there.

Closes-bug: #1526974
Change-Id: I479c693f490c704c5b6c1462e9ab236684e9c259"
c40403eee0e4775f7ed089c91d4e2e075818a179,2016-06-07 15:33:07-05:00,"Make service plugins' get_plugin_type classmethods

Any service plugin that implements the get_plugin_type method should
make it a classmethod.  It should not need to be instantiated to
retrieve the simple constant it returns in every case.

Change-Id: Ia3a1237a5e07169ebc9378b1cd4188085e20d71c
Closes-Bug: #1590117"
e68121b2658b77df94879c3cafee68663eda2c8e,2016-06-08 02:56:15+02:00,"Match filter criteria when constructing URI for href based iteration

Without that, we compare apples to oranges (expected results excluding
shared networks and actual results including them).

Change-Id: Ia9b8b1e60acad54110a549da3b327820f2a1ec45
Closes-Bug: #1590116"
66c357400b3ece9b2583b83611548c7c8ab94031,2016-06-08 02:55:59+00:00,"Deprecate the functions map after segment moving out of ml2

This is a clean up for patch [1], the functions map should be removed
to make code easy to read. Start a deprecation cycle for these functions
in case external projects will use them.

[1] https://review.openstack.org/#/c/242393

Change-Id: I77c83bd7ee0c8ef92d8aaaa8e968479b848532fe
Partially-Implements: blueprint routed-networks"
fcd33b31282848c5853cebc37e1e8e0a06e878f2,2016-06-08 10:31:00+00:00,"Return fixed_ips from port update

fixed_ips has a join relationship with port. During a DB transaction,
it will be acquired once. If the IPAllocation is updated after
acquiring fixed_ips, the port DB model object will still have the
stale value of fixed_ips, which is empty in the case of reported bug.

Expire the fixed_ips of the port can make the next query of port have
the latest fixed_ips, and thus, has the latest fixed_ips in the result
of update port.

Change-Id: I8ca52caf661daa2975cf53212d008eb953d83cc0
Closes-Bug: #1585738"
73546f8503f0d26c90aae9f7c2aa108d710870c8,2016-06-08 12:50:53+00:00,"QoS DSCP fullstack tests

This patch introduces fullstack testing for the QoS/DSCP
Open vSwitch implementation. It depends on the python-neutronclient
patches, therefore it could not be merged in the main patch.

Co-Authored-By: Miguel Angel Ajo <majopela@redhat.com>
Change-Id: I0ab6a1a0d1430c5791fea1d5b54106c6cc93b937
Closes-Bug: #1468353
Depends-On: I25ad60c1b9a66e568276a772b8c496987d9f8299"
19c5ec76464568252f8ca0eae28849b2797111c3,2016-06-08 13:10:13+00:00,"Drop neutron/i18n.py in favor of neutron/_i18n.py

The hacking rule already ensures everyone uses neutron._i18n.
Now we can drop neutron.i18n.

Closes-Bug: #1520094
Change-Id: I1a415c23fd1db103742e8f3a92a3dd26c7252233"
6e7f8c17043ee5ace116d1fcd9c8fe18f6e57547,2016-06-08 19:21:56+00:00,"Remove some options from neutron-db-manage

Remove these CLI options:
 --core_plugin : deprecated, not used
 --service : deprecated in favor of --subproject
 --sql_connection : deprecated in favor of --database-connection

Related-Bug: #1501380

Change-Id: Iff1babbb29d43dd0d4fed653de4714ca0ff75a99"
40e10a31502598c10361e0fde8236e50d5fbfa0a,2016-06-08 23:51:15+02:00,"Add sanity check for idempotent id's in tempest tests

Idempotent id's for tempest tests must be unique, as it's used to trace
tests even in the event of refactors [1].

This patch adds a new check using check-uuid tool from tempest to
validate id uniqueness. This adds a new test-only dependency to pull in
tempest from PyPI to make pep8 tox target work.

Also, the duplicate idempotent id's in our tests have been fixed.

[1]
http://docs.openstack.org/developer/tempest/HACKING.html#test-identification-with-idempotent-id

Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Change-Id: Ie92e4576d9ce6c26f19bdd668426c71a62409e7a"
1d43dd217a31c38caf8ad3a695c0c262d63bb724,2016-06-09 07:33:03+00:00,"Refactor the rpc callback version discovery mechanism

The previous version depended on the AgentDbMixin to be loaded by
any plugin, and also introduced an __init__ on the mixin which
was problematic: mixins are expected to be classes which add methods
to another class, but to implement no constructor. One of the plugins
had one of the elements of MRO not calling to super().__init__ and
hence not triggering this __init__ method.

This change requires the plugins using the rpc callback mechanism
to provide the AgentDbMixin which is used to refresh cache of known
resource consumers (agents) and versions on demand, this way
we make it more clear that the rpc_callback api is currently designed
to be used with agents only, despite of its extensibility to other
areas.

Change-Id: Ie96b52dbe3a1f32cd4c11de8d8a5eff663fbf7f6
Related-Bug: #1584204"
3c27beb8c0fe9b511bae78412b0623835a81f63f,2016-06-09 11:25:34+00:00,"Fix update of shared QoS policy

When user updates QoS policy which is globaly shared, it will be still
marked as globally shared even if this flag was not set explicitly
in update request.
For example, updating description of QoS policy will not change shared
flag to default value which is ""False"".

Co-Authored-By: Haim Daniel <hdaniel@redhat.com>

Change-Id: I2c59e71eae0bf2e73475bba321afc4aaa514b317
Closes-Bug: #1585373"
f21eed3998a793f5c40eb248469dc4245de3415a,2016-06-09 05:25:47-07:00,"Check for mysql SAVEPOINT error in retry decorator

Due to lost savepoints in mysql on deadlock errors, we can get
a non-existent savepoint error that is just masking a deadlock
error. This patch adjusts the retry decorator to check for these
savepoint errors as well. See the bug for more details about
the failure.

Closes-Bug: #1590298
Change-Id: I29905817ad7c69986f182ff3f0d58496608cd665"
a1f06fd707ffe663e09f2675316257c8dc528d47,2016-06-09 12:51:55+00:00,"After a migration clean up the floating ip on the source host

When a VM is migrated that has a floating IP associated, the L3
agent on the source host should be notified when the migration
is over. If the router on the source host is not going to be
removed (there are other ports using it) then we should nofity
that the floating IP needs to be cleaned up.

Change-Id: Iad6fbad06cdd33380ef536e6360fd90375ed380d
Closes-bug: #1585165"
dcb2a931b5b84fb7aa41f08b37a5148bf6e987bc,2016-06-09 18:54:12+00:00,"Compute IPAvailabilityRanges in memory during IP allocation

This patch computes IP availability in memory without locking on
IPAvailabilityRanges. IP availability is generated in memory, and
to avoid contention an IP address is selected by randomly
selecting from within the first 10 available IP addresses on a
subnet. Raises IPAddressGenerationFailure if unable to allocate an
IP address from within the window.

Change-Id: I52e4485e832cbe6798de6b4afb6a7cfd88db11e2
Depends-On: I84195b0eb63b7ca6a4e00becbe09e579ff8b718e
Closes-Bug: #1543094"
8a6d22ccb53f14a26876a06152b7a3b47ae1a8e1,2016-06-09 21:34:04+00:00,"Pecan: handle single fields query parameter

This also correctly handles the case where no fields are requested which seems
to have started to break.

Closes-Bug: #1590588
Change-Id: Ida1e3ff575c7fe6c3199c5f4393679bbf89c0fe1"
db9e4048c4d134629d59f11ff004cbb8513e2b18,2016-06-10 06:28:31+00:00,"Remove MAC duplicate detection for generated macs

The previous MAC duplicate detection code relied on catching a
DBDuplicateError the correct time which resulted in two problems.
First, the duplicate could have been caused by something else being
flushed to the database at the same time.
Second, the DBDuplicate may not occur at flush time if the conflict
happens due to two concurrent port creations and it will instead
happen at commit time.

This patch just dumps the DBDuplicate catch to allow the API layer
to retry the operation since MAC collisions on a network should be
extremely rare.

Closes-Bug: #1590602
Change-Id: Idf816c07198be3ce745252ac9aa9c4aad8f11910"
2dcacaae88970365350200ca58982a18e21c703d,2016-06-10 08:42:10+02:00,"Fix of ping usage in net_helpers.async_ping()

net_helpers.async_ping() should pass when each of the ICMP echo requests
is matched by a corresponding ICMP echo reply, and it should fail if a
response is not received for some request. The async_ping implementation
relies on the ping exit code: when ping returns nonzero exit code,
RuntimeException would be consequentially thrown and async_ping assertion
would thus fail.

Current implementation of net_helpers.async_ping() is broken due to its
usage of -c parameter of ping command and assumption that if _some_ of
the ICMP replies does not arrive, ping would return nonzero exit code.
However, Linux ping works in the way that if _at least one_ reply is
received from any number of ICMP ping requests, result code is 0
(success) and thus no RuntimeException is thrown. This commit fixes
assert_ping to be a reliable assertion guaranteeing that no ping request
stays without reply. For simple bash reproducer and more thorough
discussion of possible solutions, see the bug description.

Closes-Bug: #1588731
Change-Id: I9257b94a8ebbfaf1c4266c1f8ce3097657bacee5"
80f9e4f580624c262efff2d2957cda5895c5804d,2016-06-10 12:08:38-05:00,"Update networking-ovn project functionality

The networking-ovn project no longer provides a monolithic
plugin. It has switched to an ML2 mechanism driver with a
Layer 3 service plugin.

Change-Id: I7c7a61180090867bc72c9c09190f6475810e63a9
Related-Bug: #1578198"
3a5315ef8dbc6265ad2c47eebc1e2c42722a7cb4,2016-06-10 13:45:02-04:00,"DVR: Fix allowed_address_pair port binding with delayed fip

Today when allowed_address_pairs are configured on a dvr
service port and if a floatingip is associated with the
allowed_address_pair port, we inherit the dvr service port's
host and the device_owner to which the port is associated.

But when the floatingip is created on the allowed_address_pair
port after the port is associated with a dvr service port, then
we apply the right port host binding and the arp_update.

This patch address the issue, by checking for the host binding
when there is a new floatingip configured. If host binding is
missing and if the port happens to be an allowed_address_pair
port, then it checks for the associated service port and if there
is a single valid and active service port, then it inherits the
host binding and device owner from the dvr service port and also
applies the right arp entry. If there is are more than one
active ports, then it returns.

Closes-Bug: #1569918
Change-Id: I80a299d3f99113f77d2e728c3d9e000d01dacebd"
2fbb6587df357583fe03b8616d7b95f79382af20,2016-06-11 08:26:10-07:00,"Allow self-unsubscribing callbacks

This adjusts the notify loop logic to handle the case where
a callback causes a subscription or unsubscription that changes
the subscriber dictionary to change during iteration.

It was just using .items() which solved the problem for py27 but
was not creating an actual copy in py34. This just calls list()
on .items() to make sure we get a list in both cases.

Change-Id: Iee9d675faf30ec714b4f5c77128d8843d545ecfd
Closes-Bug: #1592983"
be32eff928ae50e2608bc3e7737478d7a0a7c8c0,2016-06-11 14:42:48-07:00,"Use StringField for tenant_id fields

OVO is going to start enforcing that UUIDFields are UUIDs:
http://docs.openstack.org/developer/oslo.versionedobjects/api/fields.html#oslo_versionedobjects.fields.UUIDField

This is a breaking API change for Neutron since Neutron can be deployed
without Keystone and has historically supported non-UUID tenant IDs. So
we need to use StringField for our tenant_id fields.

The version numbers of the OVO objects are not being bumped because both
UUIDField and StringField are just strings with no validation differences
and they both just serialize to a string. There is no distinguishable
difference between the two until UUIDField starts validating in the future.

Change-Id: I93488701c824a51b5588093b9aba499068ba36e8"
260ce9c161228e35215126e047443ec32b7bf1ef,2016-06-12 16:45:52+08:00,"Fixes variable name confusion

Change-Id: I20931251a700436b017775df2583be18ba7c6dbf
Closes-Bug: #1591636"
389f7b0b08455b77db24d41280e8cc00a0d2260b,2016-06-13 13:40:00+00:00,"qos: fix shared filter for policies

The filter was working in Liberty, but was broken in Mitaka when
the field became synthetic as part of RBAC enablement for the resource.

_get_collection already knows how to handle the filter on database
level, so we just need to register the filter to pass it deeper into
db_api.

Change-Id: I40657bd15d9bf1e2bc6b0224254c916c35391cd1
Closes-Bug: #1591222"
da9fdf3b20171fd1e06397ad928e2ee5349b9909,2016-06-13 14:02:35+00:00,"Use neutron-lib constants

One of the unit tests did not make use of the neutron-lib contants.

TrivialFix
Closes-bug: #1591878

Change-Id: Id25b3b2091b57361692a65f53fea9167752e7572"
e3b0803152766699a8d72dbb31fc273397d4495d,2016-06-14 11:42:03+02:00,"Added sorting/pagination tests for subnets

Change-Id: Ic04cd125dd715ae0694fbf24d8193abe3151ffd1
Related-Bug: #1566514"
e923457403f08182096dbcf1235e291b8df5a71a,2016-06-14 11:51:37+02:00,"Added sorting/pagination tests for routers

Change-Id: Ib3709d15fd87b93285dadf78cce73ee37e8898e2
Depends-On: I8b553ab22846122dde22372f9901e46a5276ee8e
Related-Bug: #1566514"
0cc77d24a34096f65ff7b1860bb085cf21ffa0e4,2016-06-14 11:52:26+02:00,"l3: support native sorting/pagination for routers

Tests are already present to validate that no regression happens here,
committed as part of Ib3709d15fd87b93285dadf78cce73ee37e8898e2

Change-Id: I4cdb1c4b8ee233d9d5bc78b0d3bd2ce28e725535
Related-Bug: #1566514"
28bc1d79361ddbe53b67058a6c995e2d9ac19e3a,2016-06-14 12:53:37-04:00,"Check for alembic Add/DropColumn exceptions in migrations

Columns are added/dropped by alembic clauses in migrations, and
checking for them differs from how sqlalchemy clauses are checked.

Closes-Bug: #1589328

Change-Id: Ia0f39697afddec7cd04f870746a4bdd8b9410a32"
6809a1aa24652689c32874673d596feb73030505,2016-06-15 16:18:47+02:00,"qos: added api sorting/pagination tests for policies

API tests were modified to support admin listing mode. This is needed
for QoS resources because the default policy file does not allow to
create policies, and we should avoid using shared policies due to races.

Related-Bug: #1566514
Depends-On: I8b553ab22846122dde22372f9901e46a5276ee8e
Change-Id: Ie3a66d2a7c05143df3da1c56c8e8a5308d4bae91"
0144c67d98f87605bfa3232a2b0df711804704be,2016-06-15 14:19:09+00:00,"qos: support native sorting/pagination for policies and rules

Tests are already present to validate that no regression happens here,
committed as part of Ie3a66d2a7c05143df3da1c56c8e8a5308d4bae91

Change-Id: I85895ea3f2475433942fcdc1c13b211cff3dd477
Related-Bug: #1566514"
9cd95366a035b29001ce75515d291cf72d07d0c3,2016-06-15 15:06:40-07:00,"Fix designate dns driver for SSL based endpoints

Allow setting options in designate section to specify if want
to skip SSL cert check. This makes it possible to work with HTTPS
based endpoints, the default behavior of keystoneclient is to always
set verify=True however in current code, one cannot either provide
a valid CA cert or skip the verification.

DocImpact: Introduce two additional options for `[designate]` section
in neutron.conf
CONF.designate.insecure to allow insecure connections over SSL.
CONF.designate.ca_cert for a valid cert when connecting over SSL

Change-Id: Ic371cc11d783618c38ee40a18206b0c2a197bb3e
Closes-Bug: #1588067"
5b0ea0320236d05bc3af0cb338e03f3c3cde040a,2016-06-16 06:20:28+00:00,"Mark port as ready after enabling dhcp at agent

When subnet is created and network is scheduled to dhcp agent, the
dhcp agent will request neutron server to create dhcp port.

Neutron server will create and mark port as BUILD and wait for the
ready signal from dhcp agent.

dhcp agent will create 'real' dhcp port after getting response from
neutron server. But after that, dhcp agent will not tell neutron server
that the dhcp port is ready. So, the reported bug can be observed.

If ports are created before dhcp is enabled for network, dhcp agent will
not mark ports as 'ready' as there is no network cache. This patch also
marks all ports in network as ready, in case that happens.

Change-Id: I363d8727f7ef6e6e08be4b0022c6464d51692b85
Closes-bug: #1588906"
ce0981fa203467cba629b48c8e93397415358f52,2016-06-16 12:05:22+02:00,"Don't return marker item when paginating backwards

In emulated pagination mode, we should not return the marker when
paginating backwards (page_reverse), same as we do when we paginate
forward, or when we paginate backwards with a plugin that supports
native pagination.

Closes-Bug: #1591981
Change-Id: I8b553ab22846122dde22372f9901e46a5276ee8e"
d034532d376b6ca2309d20f59ccc060a762ff12c,2016-06-16 23:07:40+02:00,"cache_utils: fixed cache misses for the new (oslo.cache) configuration

When the new (oslo.cache) way of configuring the cache is used, cache is
never hit, because self._cache.get() consistently raises exceptions:

TypeError: 'sha1() argument 1 must be string or buffer, not tuple'

It occurs because the key passed into the oslo.cache region does not
conform to oslo.cache requirements. The library enforces the key to be
compatible with sha1_mangle_key() function:

http://git.openstack.org/cgit/openstack/oslo.cache/tree/oslo_cache/core.py?id=8b8a718507b30a4a2fd36e6c14d1071bd6cca878#n140

With this patch, we transform the key to a string, to conform to the
requirements.

The bug sneaked into the tree unnoticed because of two reasons:

- there were no unit tests to validate the new way of cache
  configuration.
- the 'legacy' code path was configuring the cache in a slightly
  different way, omitting some oslo.cache code.

For the former, new unit tests were introduced that cover the cache on
par with the legacy mode.

For the latter, the legacy code path was modified to rely on the same
configuration path as for the new way.

Closes-Bug: #1593342
Change-Id: I2724aa21f66f0fb69147407bfcf3184585d7d5cd"
8893ebe6c5aa2baf5665e96e939d53bcef08c9d7,2016-06-17 09:08:40+00:00,"ovs: set device MTU after it's moved into a namespace

Open vSwitch forbids to raise MTU for devices that are in the same
namespace with the bridge, but allows that same operation once the
device in question is moved into another namespace. This is a side
effect of missing validation in vswitchd implementation for plugged
interfaces located in other namespaces.

This behaviour makes the order in which we move device into a namespace
and set MTU significant. The previous order left MTU lowered for router
and dhcp ports in case there was a port served by that same bridge with
lower MTU.

This effectively lowers MTU for router interfaces from what is supported
by underlying physical interfaces. With that, frames from an external
network of infrastructure MTU size will not be served by affected
routers.

This Neutron issue affects all systems where router or dhcp ports are
served on the same node as compute ports. This includes any AIO setup,
as well as L3/DHCP agents colocated with nova-compute. While for
traditional (legacy) L3 agents, such setup is not that widely used, the
bug probably affects real world DVR setups that maintain router
namespaces on compute nodes.

The fix reverses the order of interface plugging procedure steps, first
moving ports into namespaces, then setting their MTUs. This seems to
solve the issue.

The fix is short term, because we effectively utilize a bug in Open
vSwitch. A better long term fix could be rearranging bridge setup so
that there is no need to plug devices that belong to different networks
into the same bridges. That would require an extensive thought and would
open questions on how to migrate existing workloads using the current
bridge setup to the new world without significant data path disruption.

Added functional test that triggered the issue before the fix.

Change-Id: Ibd9866d2d8fe12bb253c6fb9978f583293b32734
Closes-Bug: #1590397"
b22c7ae42813ca7c9c791b5acd4da24566784e9c,2016-06-18 02:07:44+03:00,"OVS: UnboundLocalError on switch timeout fixed

In case there is some cached datapath id in OVSAgentBridge
and openflow switch does not respond in time for some
reason, a call to OVSAgentBridge._dpid() method will result
in UnboundLocalError.
This patch addresses the issue by calculating dpid_str
value from cached dpid instead of referencing unassigned
variable.
Some minor refactor also took place.

Closes-Bug: #1588042

Change-Id: If50183bf95cbe50c3a2393be8c2ab913c9715a10"
3703b31eea06d5055a7fc63cec7a24b2aaa1c563,2016-06-20 07:49:14+00:00,"tests: clean up designate client session mock on test exit

This test was modifying the driver session method without making an
effort to restore the original value after the test case completion.
This resulted in two consequent tests that relied on the method that
were triggered in the same test thread, to trigger a failure for one of
them.

Changed the setup logic for the test class to use mock.patch(..).start()
instead.

Closes-Bug: #1593647
Change-Id: I08be90691b5417025c40c5a18308d820dc7a43d2"
778adb46aa1e8fa9ae90bfc6f71b51f61054812a,2016-06-20 18:24:37+00:00,"Remove unnecessary flush for duplicate address detection

With the change to duplicate mac address detection on which this patch
depends, this flush should no longer be necessary.

Change-Id: I094ceb2b1b68b79d81777fa75b2300ebee763949
Depends-On: Idf816c07198be3ce745252ac9aa9c4aad8f11910
Related-Bug: #1590602"
1554cee9e216221de6db7117fbee9113cae2a088,2016-06-20 12:31:30-06:00,"Obsolete mac_generation_retries and deprecate the option

As discussed in this patch [1] this option didn't come from any actual
user-encountered problem and is now effectively obsolete for its
original purpose anyway.  In the interest of cleaning up options that
aren't of any real use, this patch obsoletes this one immediately and
marks it deprecated for removal in Ocata.

TrivalFix

[1] https://review.openstack.org/#/c/327413

Change-Id: I58003d5b07e28c7254ff836dec937f699bc83112"
a0feab2d8ae20d3dca0a5762d3be1e095f9c1769,2016-06-20 18:17:22-04:00,"Change addCleanup create_tenant to delete_tenant, fix gate

Tempest patch with Change-Id of:
I3fe7b6b7f81a0b20888b2c70a717065e4b43674f

Changed the v2 Keystone tenant API create_tenant to keyword
arguments. This broke our API tests that used create_tenant
with a tenant_id... It looks like the addCleanup that was supposed
to delete the newly created tenant actually created a second
tenant. The existing create_tenant calls were unaffected
by the Tempest change as it is backwards compatible.

Change-Id: Ie82c16ebf8dde988d68a01fc8dfa073085af4728
Closes-Bug: #1594593"
1d8eabaff1cff9efbc122b68a54b94745e001cd6,2016-06-21 14:47:31+03:00,"Do not rewrite original exception for IPAM part 2

If subnet allocation fails on _save_subnet stage, then rollback mechnism
is executed. Currently if exception is raised on rollback stage it
replaces original exception. But original exception is needed by
retry wrappers to work properly also it is more informative for user.

Using _safe_rollback method to prevent replacing original exception with
one from rollback stage.

Closes-Bug: #1571666
Change-Id: I388272820451bb117281948fef0000bb46a951d4"
b0aa3a9664ce9adc57006287457d5d0a5fd2db14,2016-06-21 14:52:47-04:00,"Revert ""move import to top and rename to make more readable""

This reverts commit 4ae2c246dd1cc16ebffb6f9d6a64f6ba7db2c05a.

Closes-Bug: #1321352
Change-Id: I7094dfc90b08bd9da6ac31130f0ebafc547fa45a"
65bd0cd9ff655a2068915b2baa341a78675ba337,2016-06-21 17:04:11-04:00,"Complete removing support for unsplit alembic branches

We used to support subprojects with a single alembic branch.
Now the plan is to switch to a single alembic env for Neutron
and all installed subprojects. In a single alembic env, all
subprojects must use split (contract and expand) alembic branches.

The first step of removing single branch support was done in [1]
where we removed support for single HEAD files.

The --split_branches option was used by developers only. By removing
it we do not break any subproject, but force them to use split
branches for any new migration scripts.

[1] https://review.openstack.org/295905

Partial-Bug: #1497830

Change-Id: I62a191e1d22a1af4061c25fdc4a8df965d585419"
1af862791ef83d2d67d71a4db6d37b919accb3d5,2016-06-21 16:52:06-07:00,"Retry DBDuplicate errors in retry decorator

The MAC duplicate detection logic now expects that the core
plugin catches DBDuplicate entries and converts them into
retry attempts. This assumption was valid for ML2 because it
catches them, but it's not true for anything else, including
unit tests that just use db_base_plugin_v2 directly.

Instead of expecting each plugin to catch and convert
DBDuplicate errors into RetryRequests, this patch just has
the retry logic check for DBDuplicate errors. A DBDuplicate
being raised to the API layer for anything other than a race
that needs to be retried is a bug anyway since it will be
turned into an HTTP 500.

The MAC generation for the unit test that failed in the bug
report defines the 4th octect of the MAC in the test config
so there are only 65k MAC addresses available per network.
The unit test would then proceed to create 13 ports on the
network, which would give us a ~1/5000 chance of a dup mac
in the unit test using db_base_plugin_v2, which was not
catching the DBDuplicate exception.

Closes-Bug: #1594796
Change-Id: I828f529db8c389ba0ab1eaa5f93ca2f5563048a8"
77bfd82c3cf766724b12629cf23902a1758fe94a,2016-06-22 05:19:06+00:00,"Rename ml2_dvr_port_bindings to make it generic

Distributed port binding need to be implemented for HA router ports
to fix bug 1522980. HA ports can use existing DVR implementation for
multiple port binding. So we have to make current DVR port binding
implementation generic, so that all distributed ports(like DVR, HA)
can use it.

As part of making it generic, we rename 'ml2_dvr_port_bindings' table
to 'ml2_distributed_port_bindings', so that all distributed ports
(DVR, HA ..) can use this table.

Partial-Bug: #1595043
Partial-Bug: #1522980
Change-Id: I24650b7dee6305f801b457c4f21c8b16fb0eb6e0"
38a080aca37197ff9c5464a3bc9981e684decee6,2016-06-22 09:21:42-07:00,"Remove IP availability range recalculation logic

This patch removes unreachable code that rebuilds IP address
availability data and persists in the database. This is
ultimately derived data that is now computed in memory and never
persisted. The code being removed is dead code and does not
include the contract migration for removal of the
IPAvailabilityRange models.

Change-Id: I96cb67396b8e0ebbe7f98353fad1607405944e44
Partial-Bug: #1543094"
73bd1827a851aef2227b4daba8f0bafb57413362,2016-06-22 11:07:15-07:00,"Check for RetryRequest in MultipleException types

The is_retriable decorator that examines MultipleException
exceptions to determine if they should be retried was not
checking for RetryRequest exceptions. So if a RetryRequest
was raised in a callback, it would not have been retried.

This adds RetryRequest to the list of exceptions to look for.

Closes-Bug: #1595345
Change-Id: Iec679a622bbdc0c15bddd1df0adf758f1f1e8798"
143b19c8d5e6805c4ce0abe78748c0add42a2072,2016-06-22 23:03:09+00:00,"Separate exception class for retriables in callbacks

There are various places where we emit a callback to allow
subscribers to do validation or additional bookkeeping during
the various life-cycle events of objects. However, a subscriber
can encounter a DB Deadlock, StaleDataError or other retriable
error that just needs the transaction to be restarted. In the
rest of the Neutron code these exceptions bubble up to the API
layer where the whole request is restarted. However, the exception
catching for the callbacks in various places was preventing these
errors from being retried because they were lost in conversion.

This patch has the callback manager convert retriable exceptions
into RetryRequest exceptions that will not be caught by handlers
of CallbackError so by default it will bubble up to the API layer
and be retried. 'notify' callers can avoid this behavior by
additionally catching RetryRequest.

Closes-Bug: #1590316
Change-Id: I6732c60f89de4318b5f56327c5bc966bd250baae"
448bc8e5220d3633f9c9ee804de0a38c2d829d78,2016-06-23 10:12:55+00:00,"Remove the deprecated config 'router_id'

It was deprecated at [1].
Remove the deprecated config 'router_id' and its related tests.

[1] https://review.openstack.org/#/c/248498

DocImpact: All references of 'router_id' configuration option
and its description should be removed from the docs.

UpgradeImpact: Remove 'router_id' configuration option from the
l3_agent.ini.

Change-Id: Ic9420191e8c1a333e4dcc0b70411591b8573ec7c
Closes-Bug: #1594711"
cb8af9bd50659daca4c1dea4070a011190ef3461,2016-06-23 16:54:50+05:18,"Fixes port device_id/device_owner change in failed operation

If a router is a attached to a neutron port and that operation
fails at a late stage in the processing then the 'device_id' and
'device_owner' attributes of the port are still changed. The
failed operation should not change them.

The reason is, as of commit 0947458018725b241603139f4ec6f92e84b2f29b,
the update of those attributes happens outside of the DB transaction.
For failed operation, the values are not reset back to their original
values.

Change-Id: I797df266dafc41843408dc95a6ce9f986db5c21c
Closes-Bug: #1523859"
877778ee4c7f0e83b54f54b2d7bafec98f89626c,2016-06-24 00:41:20-07:00,"Move DHCP notification logic out of API controller

Bug 1591766 unveiled an issue where calling the plugin API does not trigger
DHCP notifications. This is required by the auto-allocated-topology service
plugin that calls core_plugin.update_network(), and expect notifications
to be sent out on state changes. To accomplish this, the logic has been
encapsulated in the DHCP module, and leveraged via callback mechanisms.

For this reason, new events have been introduced, AFTER_REQUEST, and
BEFORE_RESPONSE. The latter in particular is the one needed to hook up
dhcp notifications in order to preserve backward compatibility.

More precisely, core plugins that use DHCP as is or implement their own,
(with or without an agent) should already instantiate their own notifier,
and if they do not, this should be rectified.

A search on codesearch.openstack.org reveals that out-of-tree plugins
already specify their own notifiers, and the default initialization is
clearly redundant now.

Related-bug: #1591766

Change-Id: I7440becb6d30af7159ecaeba09d7a28eceb71bea"
d91a4e1930bd8f05f7b2055a2278f5bd788cd6b4,2016-06-24 00:42:42-07:00,"Create auto allocated networks in disabled state

Under particular circumstances, multiple requests to the
auto-allocated-topology extension may lead to the transient
creation of duplicated resources. This is dealt with by the
service plugin code, which cleans them up once the condition
is detected. However the client may accidentally be impacted
and potentially left in error (recoverable on retry).

In order to address this error condition, the logic to
provision the network for any given tenant is tweaked
slightly so that the network is created in disabled state
and re-enabled when it is safe to do so. A Neutron client
should check the network status to see if the network is
ready for use before getting its hands on it.

Closes-bug: #1591766

Change-Id: Ia6ff5ad975673875216eb470080dfc0dcf6b9ab2"
ff73054e8637f29737cc65dc84ef0f9aea9d5abd,2016-06-24 14:45:39+00:00,"Remove the deprecated config ""quota_items""

It was deprecated at [1], and quota of resource will be registered
at initialization of APIRouter. So, no need to use the config now.

[1] https://review.openstack.org/#/c/181593

DocImpact: All references of 'quota_items' configuration option
and its description should be removed from the docs.

UpgradeImpact: Remove 'quota_items' configuration option from
neutron.conf file.

Change-Id: I0698772a49f51d7c65f1f4cf1ea7660cd07113a0
Closes-Bug: #1593772"
64726983f2161b32e516f3f12007e5f5a3d57e50,2016-06-25 02:09:33+00:00,"Not auto schedule router when sync routers from agent

In this patch, auto schedule router will be removed from sync_routers,
so that the reported bug can be fixed. And potential race can be avoid
accoridng to [1]

The result of patch will make the l3 agent can't get the router info
when the router is not bound to the l3 agent. And router in agent will
be removed during the agent processing. This makes sense, since, in
neutron server, the router is not tied to the agent. For DVR, if there
are service port in the agent host, the router info will still be
returned to l3 agent.

[1] https://review.openstack.org/#/c/317949/

Change-Id: Id0a8cf7537fefd626df06064f915d2de7c1680c6
Co-Authored-By: John Schwarz <jschwarz@redhat.com>
Closes-Bug: #1593653"
09a6a46e77875ce6879dd8bb4b0365eecc45f3b9,2016-06-24 21:42:17-05:00,"Pecan: Implement pagination

Implements pagination and sorting in the QueryParametersHook. Doing
this in a hook keeps the main controller code clean and also doesn't
require implementing pagination and sorting in every controller.

Change-Id: I5f439cf2457984d6b62ce5fed9d5d471aafbde81
Closes-Bug: #1591338"
db817fd5434fb87afe1f8e8e05b282d68ff9dc31,2016-06-27 16:30:01-04:00,"Skip INVALID and UNASSIGNED ofport in vlan restore

get_vif_ports returns ports with INVALID and UNASSIGNED
ofports and get_vif_port_set does not. The main scan_ports
loop uses the latter so any INVALID ofports (i.e. ofport == -1)
will be treated as removed and have their local VLANs reclaimed.
So an INVALID ofport could have the same local VLAN as a new
port that was added after it had been reclaimed.

This was causing an error in the _restore_local_vlan_map function
since it was using get_vif_ports which would cause it to process
INVALID ports as well so it could get two network UUIDs using the
same VLAN.

This fixes it by skipping INVALID and UNASSIGNED ofports in the
vlan restoration so it matches the behavior of scan_ports
(which is responsible for deciding which ports are added/removed
for VLAN allocation).

Closes-Bug: #1526974
Change-Id: I9d722fa4fabd467ded44d9cd291a3fa4d1af90f6"
b20188d2652e4907dcfc173f4d5d1a8d557227e1,2016-06-28 09:54:04+00:00,"Only update SegmentHostMapping for the given host

Now, when an agent removes a physical network from its configuration,
not only the segments with that physical network will be unbinded
from the host of upated agent. All the segments with that physical
network will be unbinded from all hosts. This is incorrect, the
segments should only be unbinded from the host of updated agent.

Change-Id: Iccca843d1682ac54ec87c3b003a33a0fc5c62205
Closes-bug: #1592463"
bcd77d1c0239c73bd791268af086f61f959f0c1a,2016-06-28 14:10:54+00:00,"Remove 'origin/' in OVS_BRANCH

When use origin/master, if we re-installed the devstack with a
RECLONE=True, an error will happen with the error message:
  [ERROR] /opt/stack/devstack/functions-common:560 origin/master is neither branch nor tag

Use the branch name without 'origin/' works the same.

Similar change: https://review.openstack.org/#/c/333826

Change-Id: I16f6bd28ad27d4e957c226ed3fceb8881af6e84f"
dfbe1fb7c510d556095a926fec6bfe6f4c153b47,2016-06-28 11:18:05-06:00,"Fix code that's trying to read from a stale DB object

Change-Id: Ib601235b56c553c29618a4dfdf0608a7b2784c6f
Closes-Bug: #1594376"
a5d19b41a57141ef51208b8a821bb7d2e0b6c159,2016-06-29 09:04:01+00:00,"Mock threading.Thread to prevent daemon creation by unit tests

tests.unit.agent.ovsdb.native.test_connection.TestOVSNativeConnection
calls Connection.start() which starts a daemon with a while True loop
full of mocks. mock._CallList of those mocks start to grow very
quick and finally eat all available memory.

Closes-Bug: #1595878
Change-Id: Ie053a2248925ce5bb960207c16c23b261d1d458c"
3ff5b704a7a52fe46f24061d266a30ee44bdeaef,2016-06-29 10:12:24+00:00,"pep8: Register checks with their code

pep8 searches for check codes in their docstrings [1]. This allows us to
either ignore or select particular checks by their codes.

e.g. flake8 --select=N333

[1] https://github.com/PyCQA/pycodestyle/blob/4438622d0b62df53a1999301d1bdc9fa119ae763/pycodestyle.py#L110

Change-Id: I4644ab087abc441beed52a170df8b5279fed76a4
Closes-bug: 1594756"
2c8f61b816bf531a17a7b45d35a5388e8a2f607a,2016-06-29 10:21:15-04:00,"Adding FDB population agent extension

The purpose of this extension is updating the FDB table upon changes of
normal port instances thus enabling communication between direct port
SR-IOV instances and normal port instances.
Additionally enabling communication to direct port
instances with floating ips.
Support for OVS agent and linux bridge.

DocImpact
Change-Id: I61a8aacb1b21b2a6e452389633d7dcccf9964fea
Closes-Bug: #1492228
Closes-Bug: #1527991"
546ba377db81e7ba984b63942f6bbb974a653e3c,2016-06-29 13:20:17-04:00,"Restore MySQL and Postgresql functional testing

The oslo.db opportunistic test fixtures were not being
used effectively and the MySQL / PG databases were not
being used.  This patch restores working patterns against
oslo.db.  Additionally, the migration level tests have also
been updated to make use of oslo.db provisioning functionality
and unused methods have been removed.

The current approach makes use of oslo.db provisioning constructs
directly, as well as some semi-private attribute access within
oslo.db enginefacade, in order to work around some issues
that have arisen in oslo.db's test_base.
A new release of oslo.db will provide
public API points to resolve pending issues, and to
allow neutron's use cases here which will
also be of general applicability to openstack projects.

Closes-bug: #1594898

Change-Id: Ie27cf174fa24c2f479af47335d9ae139fb7d159a"
2a076272688487650192d75ff261f6fdf7835516,2016-06-29 16:44:35-07:00,"Make create_object_with_dependency cleanup

This adjusts the create_object_with_dependency helper function
to attempt to cleanup any dependency it was responsible for creating
if it encounters a failure in trying to attach a child to the
dependency.

Change-Id: I363f3a299c55e5063b4239028728bb5593132010
Related-Bug: #1548285"
00f3ab1f132de6b701c7832626457ad51dd265b6,2016-06-29 22:00:03-05:00,"Lower ML2 message severity.

Logging that a network has no segments as an error
message when it doesn't impact execution pollutes
logs.  Lower the message severity to debug.

Change-Id: I7d88581b4703e7c287cec9406dd093089db8595c
Closes-Bug: #1597362
Signed-off-by: Ryan Moats <rmoats@us.ibm.com>"
f3816cb8bd68f406d7f8c5b80fbd3352b493ca70,2016-07-01 09:38:38+00:00,"ml2: postpone exception logs to when retry mechanism fails to recover

Since Ia2d911a6a90b1baba1d5cc36f7c625e156a2bc33, we use version_id_col
SQLAlchemy feature to routinely bump revision numbers for resources.  By
doing so, SQLAlchemy also enforces the expected number on any UPDATE and
DELETE, which may not be valid when the transaction is actually applied.
In that case, the library will raise StaleDataError:

http://docs.sqlalchemy.org/en/latest/orm/exceptions.html#sqlalchemy.orm.exc.StaleDataError

The exception is then logged by ml2 and bubbles up to API layer where
retry mechanism will correctly catch it and issue another attempt.

If API layer does not retry on exception, it already logs the error,
including the traceback.

In ml2, it's too early to decide if an exception is worth being logged.
Plugin instead should just silently allow all unexpected exceptions to
bubble up and be dealt by API layer.

At the same time, there are some details that are known at the plugin
level only, that are not easily deducible from the API request details.
That's why we save details about the error on the exception object that
bubbles up into API layer, where we are ready to decide if those details
are worth being logged.

Change-Id: I848df0aef5381e50dfb58e46d7a652113ac27a49
Closes-Bug: #1593719"
e25151be3d71abc9b51cfc85b92b42b3e1162354,2016-07-01 12:46:12+00:00,"create_router: Report the original exception

In case delete_router, which is an attempt to revert
the operation, failed, report the original exception
rather than the one from delete_router.  The former is
more likely useful for users.  Besides that, it's critical
to preserve the original exception for special exceptions
like RetryRequest.

Also, add some relevant unit tests.

Closes-Bug: #1490917
Change-Id: I1cef944115c1911d4b7e60fb4dff389b1911ddbb"
88359e3fe91b7e8f430b48da30b6d4f1ddf17d62,2016-07-01 12:05:38-04:00,"Support unique labels for alembic branches

We plan to have all projects that integrate with Neutron use the same
alembic environment (Neutron's) instead of having a separate alembic
env.py in each repo. This means that each project will need to label
their contract and expand branches uniquely.

With this patch we add support for branch labels of the form
  'networking-foo-contract'
  'networking-foo-expand'

We also support the old labels ('contract' and 'expand') with the
intent of backporting this patch to Mitaka so that projects can be
backwards compatible when they update their alembic branch labels. A
best effort will be made to backport this patch to Liberty also.

Support has been removed for label names starting with a ""liberty_""
prefix. Such labels temporarily existed during the Liberty cycle but
have now all been cleaned up.

Partial-Bug: #1497830

Change-Id: Ibf38b3125d5d404d57f3e8ef0c7ecfa56eaf8042"
54b2efe29dc771be4c0ef937693c36bc10b821d1,2016-07-01 15:57:03-07:00,"Use tempest.lib tenants_client

Tempest 12.1.0 has been released for new library interfaces.
These interfaces are stable[1] and we need to switch using them
instead of current using unstable interfaces.
This will be helpful to avoid breaking gate jobs.

[1]: https://github.com/openstack/tempest/blob/master/doc/source/library.rst#stability

Change-Id: I74a5d5ed43f758b88a22ded293d85d046005d41f"
92934ddb91c900f7a927bf064f4e9aa60c7cc058,2016-07-02 20:30:12-04:00,"Update the template for model sync test docs

Update the docs to match the changes from
  https://review.openstack.org/332476

Related-bug: #1594898

Change-Id: Iefebbac213db043e27b5244b63df1e04ee9cdc4f"
b2de391b215482fb90ac89378a2af4d8a3e32204,2016-07-05 10:28:11+00:00,"next() is incompatible in test_network_ip_availability.py

Replace iter.next() with next(iter)

Change-Id: I43dfda97451d2893a5fca480b79f14da479c01df
Closes-Bug: #1598527"
bc53c3b376b08e66f93048ced5e9349105d13ddf,2016-07-05 11:32:03-07:00,"ML2 remove extra checks in ovs_dvr_neutron_agent

Remove the extra checks in ovs_dvr_neutron_agent that can be done in
ovs_neutron_agent in one place.

Closes-bug: #1558888

Change-Id: I7192e1c0447ea35649672caa771e5a9c6aa2636b"
51a697817da849c8f9dae9651f17cd863e170fdc,2016-07-05 18:07:29-04:00,"Change tunnel MTU calculation to support IPv6

The IPv6 header is twice the size of the IPv4 header, 40 vs 20
bytes, but the tunnel overhead constants are static, only
accounting for an IPv4 header in all cases.  In order to be
correct it needs to treat the tunnel overhead different from
the IP overhead at L3.

This required removing the 20 byte IP overhead from the tunnel
type overhead constants and creating a new option,
ml2.overlay_ip_version, in order for the server to know which
version will be used, since it calculates the MTU for the network.
A version mis-match will now cause a tunnel sync to fail on
the server.

Moved all MTU tests to a common location to remove duplication.

DocImpact

Change-Id: Ia2546c4c71ff48b9fe2817fbad22b1fbf85f325b
Closes-bug: #1584940"
235aa35b763e5d1f745b897f9b58b92e3c26a96e,2016-07-06 02:10:46-07:00,"Catch missing binding record in provision handler

The 'provisioned' event handler in ML2 uses db.get_port which
disables eagerloading. This means that it can get back a record
which may have its binding record deleted by a concurrent process
before it references it.

So we just need to check that the port has a port_binding before
referencing any of its attributes.

Change-Id: I1a939c549a347004cbe4ca3a3d9307fbb71083ba
Closes-Bug: #1599643"
5d14d6e982cda2d1dd7a05debb29af580e447087,2016-07-06 19:18:24+09:00,"Skip TrunksSearchCriteriaTest if the extension is not available

Closes-Bug: #1599456
Change-Id: I7572e888ac8f20f1c22fbd8943bd5243255dcf43"
b7c303ee0a16a05c1fdb476dc7f4c7ca623a3f58,2016-07-06 10:47:27+00:00,"Notify nova with network-vif-plugged in case of live migration

 - during live migration on pre migration step nova plugs instance
   vif device on the destination compute node;
 - L2 agent on destination host detects new device and requests device
   info from server;
 - server does not change port status since port is bound to another
   host (source host);
 - L2 agent processes device and sends update_device_up to server;
 - again server does not update status as port is bound to another host;

Nova notifications are sent only in case port status change so in this case
no notifications are sent.

The fix is to explicitly notify nova if agent reports device up from a host
other than port's current host.

This is the fix on neutron side, the actual fix of the bug is on nova side:
change-id Ib1cb9c2f6eb2f5ce6280c685ae44a691665b4e98

Closes-Bug: #1414559
Change-Id: Ifa919a9076a3cc2696688af3feadf8d7fa9e6fc2"
6e275e38575981386508718bf31e6f88b5a0887d,2016-07-06 11:14:07+00:00,"When deleting floating IP catch PortNotFound

If we try to delete a VM and to delete the floating IP
associated with the VM at the same time, depending
on the order according to which these requests are processed
Neutron might fail in the deletion of the floating IP,
raising a PortNotFound error. This happens because Neutron
notifies Nova of the network change event and it tries to get
the port to which the FIP is associated. If the port is not there,
Neutron shouldn't raise, it shouldn't send any notification.

Change-Id: Ic72313ad1f787b3cb528e806c843f1fd01eb12f2
Closes-bug: #1586931"
98b6564b5abf84ccff3b8bf1d2bf36220269cd73,2016-07-06 16:32:43+03:00,"New engine facade from oslo_db: Step 2

Get rid of lazy init for engine facade.

Change-Id: I73b39d51f0a2e0824ba89173808bb7e00e6150ee
Partial-Bug: #1520719"
537e2f540a5c4cedc657bd1b996a367ac9c3ec65,2016-07-06 14:56:19+00:00,"DVR: Ensure that only one fg device can exist at a time in fip ns

Change-Id: I3e78c8d497f9187ba64dcce317f8c709067a11e6
Closes-Bug: #1597561"
e8ac4b402ab4966381014b58f660ba651b2a8706,2016-07-06 16:51:04+00:00,"Revert ""Support unique labels for alembic branches""

A problem was found with the --expand (and --contract) options, see the bug report. I am reverting this patch so that I can redo it and have one single patch that can be back-ported.

Closes-Bug: #1599574

This reverts commit 88359e3fe91b7e8f430b48da30b6d4f1ddf17d62.

Change-Id: Iebca469c6fec32bac0480be6627ad5e9dedaad9d"
607957ef3501a771a61cd3b82b32f5de83a6e117,2016-07-06 17:24:23+00:00,"Refactoring config options for dhcp agent

Refactoring neutron configuration options for dhcp agent to be in
neutron/conf/agent. This would allow centralization of all configuration
options and provide an easy way to import.

Change-Id: Ia17d2d7223dd598e2d36a8320942fb03b61dffaf
Partial-Bug: #1563069"
860624153fa9c5a89806ad9078571148d1144926,2016-07-07 07:24:40+00:00,"Add information about contract creation exceptions in devref

Change Ia0f39697afddec7cd04f870746a4bdd8b9410a32 introduce
contract_creation_exceptions which should be implemented in
migrations that add something in contract branch. Put some
details of its usage in devref.

Change-Id: I1a0b3d384ee8a967ce7f697886630b688843cdaa
Related-bug: #1589328"
f9d0dd39e6b3b14244e0a185c4a1f7f35f48f3e7,2016-07-07 13:46:44+00:00,"Delete default route if no gateway in external net

Currently, when the default route is added to device, there is no
way to delete it. Even if user clear the gateway ip of external
net, there is still a default route present in router namespace.

This patch will check the default route in namespace first. If its
gateway ip is not one of the gateway ips in external net. This
default route will be deleted.

Change-Id: If2ab88b392f3935306d73e3c2de0a35548567464
Closes-Bug: #1520775"
dc19411ebf2cab7075dd5abe809797fb7253757c,2016-07-07 18:28:57+03:00,"Allow auto-addressed ips deletion on port update

By default ips for auto-addressed subnets can not be removed from port
using port_update workflow. But during subnet_delete it has to be done
via update_port to make sure that ipam drivers received appropriate call
to deallocate ip addresses prior to subnet deletion.

'fixed_ips' property is tweeked to allow deletion ips from
auto-addressed subnet. 'delete_subnet' boolean is added to mark subnet
that is going to be deleted. This flag is analysed in
_get_changed_ips_for_port to skip re-adding slaac subnets for the port.

Closes-Bug: #1564335
Change-Id: Iec171efe8b64f8a6dc6cb003b97c11667c5e0048"
b06c7e857edbffe21745e0c85b021cc2d7423a7f,2016-07-08 06:35:48+00:00,"Allow tox to be run with python 3

The tox.ini has some unicode characters that cannot be
decoded, so just executing tox will immediately cause an error
because the tox.ini cannot be parsed.

Closes-Bug: #1600068
Change-Id: Ia01ae80d9321584845bb06c3f6673d13027bd2db"
04b197947715690c79d28d0a834348752e187013,2016-07-08 15:21:45-04:00,"Fix typo in message string causing server exception

Trivialfix

Change-Id: I356a53b62047a189aca6df978e50fbb44e204d16
Closes-bug: #1599698"
89cd4d07d173d54f05aee1524a6376226ac1bd80,2016-07-09 08:21:17+00:00,"Rename dvr portbinding functions

As part of making DVR portbinding implementation generic, we rename
dvr portbinding functions as distributed portbinding functions.
In next patch we make dvr logic for port binding generic,
to be useful for all distributed router ports(for example, HA).

Partial-Bug: #1595043
Partial-Bug: #1522980
Change-Id: I402df76c64299156d4ed48ac92ede1e8e9f28f23"
2bf72116701a2c7c02eab4a87f1e87616a0d6f6b,2016-07-09 18:00:18+00:00,"Check for provisioning blocks before updating port up

There is a race we need to check for where a port is created and
then updated with binding information via another API shortly
afterward that causes the bug referenced in this message.

* The port is created and a DHCP provisioning block is added.
* The DHCP agent finishes setting up the reservation and emits a
  message to clear the block.
* The _port_provisioned callback in ML2 is triggered.
* A port update comes in that binds the port and adds new blocks.
* The _port_provisioned callback now does a get_port and sees
  that the port is bound so it assumes everything is done and
  the port can be marked ACTIVE.
* The port is now ACTIVE before the L2 agent has had a chance to
  do its wiring and the VM boots.
* The L2 agent requests the details and the port flaps back to
  BUILD.
* The L2 agent finishes and clears the provisioning block a second
  time so the port goes back to ACTIVE.

This will randomly cause failures because the VM is booting before the
L2 agent is done and tempest may see the port in the BUILD state after
the agent grabs port details.

The fix is relatively simple. Just check for any new provisioning blocks
added *after* doing a get_port in the _port_provisioned callback to make
sure we don't update to ACTIVE if there are newly added blocks.

Closes-Bug: #1600396
Change-Id: I14f41a5fda0707e8bba064c5cd952553686c30cd"
31ed226a67ff6b2320f605ce436658312cf0c701,2016-07-11 11:17:46+08:00,"Refactor usage of dict.values()[0]

The dict.values()[0] will raise a TypeError in PY3, as dict.values()
doesn't return a list any more in PY3 but a view of list. This patch
is to fix this bug by refactoring the relevant code.

Change-Id: I4362a22322807eda8d795d68395445d53ab60ad4
Closes-Bug: #1583419"
b8a2cb813225ae6178f34363cab9a2446d471472,2016-07-11 13:56:32+03:00,"DVR: handle floating IP reassociation on the same host

The case when floating IP is reassociated from one VM to another
on the same host without doing disassociation, was not properly handled:
l3 dvr agent only checked that the floating address was present on the
device in router namespace and considered floating IP confiigured correctly.
This patch adds fip_mapping to router object so fixed IP change can be
detected and handled.

Closes-Bug: #1599089
Change-Id: I25c23bb9ad7b9a9b90f225f37417142e2304deb8"
ca792b0d569ca9d55617d6fddfdb53a743c05661,2016-07-11 12:18:21+00:00,"Avoid duplicate ipset processing for security groups

While applying firewall rules for ports, existing implementation
iterates through each port and applies ipset for its security groups.
With this, when ports share the security group, ipset for same security
group is called again and again while iterating through ports.

From the DB, we already get the list of security groups for which ipset
members have to be updated. In the new approach, we apply ipset on these
security groups(before firewall rules setup), instead of iterating
through all ports(during settig up firewall rules)and parsing them for
security groups and then applying ipset. With this we can avoid
duplicate ipset processing for same security groups.

Closes-bug: #1598734
Partial-Bug: #1499177
Change-Id: I3f16d1a3a847e706ff743a8e1a5e7598f9f4c6dd"
fbd3578d6494fa3f08d75686783f31454b1b42e5,2016-07-11 06:07:03-07:00,"Delete gw port on exceptions

Clean up related core plugin ports on routers when there is a failure
creating the record for the router port.

The two partial bugs will be fixed after
I476d3e03c8ee763cc4be6d679fe9f501eb3a19b5 has merged.

Closes-Bug: #1600344
Partial-Bug: #1535225
Partial-Bug: #1535226
Change-Id: I8dd832f35e20d1ee090ebab921f0deea533b6fc8"
1d7a0334f36a3eb2519e6eea1e5a8e34d22151b1,2016-07-11 21:29:35+00:00,"Add check that factory started in dispose

Change-Id: I60d31277a698bd65d12f75e633ac4bd5230e6dcd
Partial-bug: #1600530"
5cef3f726e00ab2b22e3eca2b1050a431547fb85,2016-07-11 22:54:56+00:00,"Add a hacking rule for string interpolation at logging

String interpolation should be delayed to be handled
by the logging code, rather than being done
at the point of the logging call.
So add a hacking rule for it.

See the oslo i18n guideline.

* http://docs.openstack.org/developer/oslo.i18n/guidelines.html

Change-Id: I91e8d59d508c594256d5f74514e62f8f928d1df5
Closes-Bug: #1596829"
8ad224d4e6bf40aeb895b526ddcaa5c00011fc46,2016-07-12 13:49:41+10:00,"Use from_dict to load context params

The context objects accepts and ignores unknown keyword arguments. This
was to allow it to handle the deserialization of parameters it didn't
understand from the base class' to_dict method. This will make it
difficult to pass unknown attributes to the base class so fix the
from_dict method to only accept params it knows about.

Related-Bug: #1602081
Change-Id: Ic58a2025680e8e1ba4f8a177d898be457e2c3160"
11257a31c1a5d4cf309515f8c9523990386f5ab5,2016-07-12 13:49:41+10:00,"Use context from_environ to load contexts

The from_environ method loads a context object with all the appropriate
values that are retrieved from auth_token middleware and other oslo
middlewares. This will let oslo add new things to policy enforcement in
future without having to manually change all services.

To do this we need to pass keyword arguments for the context through to
the base class.

Related-Bug: #1602081
Change-Id: I0533c8aee3893449b757f1e35fc89a451ae1720c"
b6592c7372db39884a2282f048b6a29ef9fc2783,2016-07-12 03:13:14-04:00,"Add dhcp to Fdb extension's permitted device owners

Change-Id: I8c15f340b82424de44f5477ce36b67efe76dee59
Closes-Bug: #1599473"
7a206a942f97201968a043b6bf557912253b0032,2016-07-12 07:26:18+00:00,"Add function to remove constraints from database

Function used in alembic database migration script to
remove foreign keys from table doesn't remove unique constraint
created for such fk in table.
Sometimes there is need to remove also such unique constraint during
database upgrade.
Removing unique constraint is little bit different in mysql and
postgresql databases because names of such constraints are different.
This patch introduces function to remove constraints from table
during migration.
It is also used in remove_fks_from_table() function to allow removal
unique constraints when fk is removed.

Change-Id: I7e7732560984b1c1e45230434ddc4be8cf5ab630
Closes-Bug: #1599840"
1bb95a4554a33eca1705887c2fa3fd19a6faf936,2016-07-12 11:11:11+01:00,"Add object versioning to QoS DSCP.

- Changes RULE_TYPE_DSCP_MARK to RULE_TYPE_DSCP_MARKING to conform
  with the rules name.
- Added object versioning to qos related objects.
 - qos/rule: Throws a QosRuleVersionUnavailable exception when
   the QosDscpMarkingRule version is < '1.1'.
- removed test object version incrementation TODO from test_policy.py
 - Object versioning can not be used to increment the object version.

Change-Id: I4f10ef3c1cbaa2a868de2b8e3abc4c39eb1f44c7
Partial-Bug: #1468353"
056b9ca677d5bacbc1ef01eefbef7bd947cd0cae,2016-07-12 15:47:52-05:00,"Handle non existing network in segment creation

Add to the segments plugin the handling of a non existing
network when creating a segment.

Change-Id: I65082d3a5076e89ef53b4adb8813c34a314186b2
Closes-Bug: #1593402"
890c30fc52eb1b16cb7f671206b1a0edeb7fb58f,2016-07-13 16:17:23-04:00,"Add retry decorator to dhcp_ready_on_ports

Enable DB retries for this provisioning blocks phase.

Closes-Bug: #1602833

Change-Id: Ie6444d6552b4c1e73c00d5624e3866417204c9e8"
0074b943d6efc5526c687cc9ca3857aabc2dbc63,2016-07-14 03:30:47-07:00,"Add RouterPort binding to ha interface creation

The L3 HA interface cleanup routines during router deletion were
occuring after the parent router resource was deleted. This meant
that if they failed to delete, they would be orphaned since the
parent router was already gone.

This order of router delete and then HA delete was intentional
because deleting them before calling the parent router delete
function would cause them to be deleted before the checks to see
if the router was in use. If the router was in use, the HA interface
would be removed and would leave an HA router in an inconsitent state.
(See I956d0094ae6e2412e859d79feeb4003941d2bb4b for details)

This patch just has the L3 HA code add a RouterPort binding for the
HA interfaces. This allows the parent router_delete call to delete the
HA interfaces automatically after doing the in-use check but before
deleting the actual router.

In order to avoid a migration in a back-port, this is compatible with
previously created routers as well by continuing to call
_delete_ha_interfaces after the parent router is deleted. This means
that any routers created before this patch will potentially leave
orphans that will have to be manually deleted via the port API.

Closes-Bug: #1540271
Change-Id: Ifd3e007aaf2a2ed8123275aa3a9f540838e3c003"
ed34f18916c62d77358d4c5910ff17694828576a,2016-07-14 13:05:45-04:00,"DVR: Fix ItemAllocator class to handle exceptions

The ItemAllocator class blindly reads from a file
when initialized, assuming each line is always in
""key,value"" syntax.  It's possible that the file
may become corrupted, leading to ValueErrors being
thrown which it doesn't handle.

This was found running the unit tests, more specifically
those doing DVR FIP namespace operations, since they were
always reading/writing the same files in /tmp.  Typically
the failure was random and would go away with a recheck,
but could be the cause of check job instability.  All
occurrences were fixed to use a test-created temporary
directory to avoid collision with each other.

Change-Id: I39d116aa8261b50bfcb3269416c1a307cafa134e
Closes-bug: #1602794"
6bb214871cb275b8f772e35fb042fb8fd8b63b1a,2016-07-15 15:01:45+09:00,"QoSTest: skip if qos extension is not available

Closes-Bug: #1603311
Change-Id: I2ed4a5e68ef926e006e1b16da98efe993bbd537f"
a2016a6211806763c9060f2df4c9dc4736c2146b,2016-07-15 11:49:54-05:00,"Pecan: Define plugin crud methods in base class

Refactors the current pecan code to use predefined methods to get
the plugin methods the controllers will call.  This also adds in
parent resource information to build those method names, but parent
support will not be complete until a follow up patch.

Change-Id: I4e0e6ef96364991a9393bc5fba495e37dade68a1
Closes-Bug: #1596754"
adbcdeb975b8a1c51a96a20c5fa2e511bcc07e48,2016-07-17 10:26:16+09:00,"Fix misuse of assertTrue in L3 DVR test case

Replace assertTrue with assertEqual in a private method
for unit tests.

Change-Id: I15fedf067f01c3993830b8c38b521d0dfd0c7740
Closes-Bug: #1603712"
c46edbc7d62585b0181dfe4bb72c1be0620fc937,2016-07-18 22:48:19-06:00,"Use db_api.retry_db_errors in quota engine

The quota engine was still using oslo_db wrap_db_retry
which does not automatically take into account deadlocks
that occur inside of nested savepoint transactions.

In one case it didn't matter because it passed in the correct
exception checker but in the one that protected 'set_quota_usage'
it did not use is_retriable so a deadlock inside of the savepoint
would have resulted in a much more expensive retry all of the way
up at the API layer.

This patch just adjusts them to both use the standard neutron
retry_db_errors decorator.

Change-Id: I1e45eb15f14bf35881e5b1dce77733e831e9c6b1
Related-Bug: #1596075"
5bbb802222ba3b4de9a134ce728421dc2b077b11,2016-07-19 14:05:16-07:00,"Ensure test_cleanup_stale_devices fails gracefully

Give some time for devices to be cleared before we claim defeat.

Change-Id: I34b2ec634f1c9ec27a1b82cc3f55a5e0b7d71237
Closes-bug: #1604115"
a984f9554cdcbe93c840a1d8f5c04302e9331e79,2016-07-20 13:26:50+02:00,"Calculate MTU on every network fetch instead of on create

Today, existing networks may not reflect MTU configured for
neutron-server, if they were created when neutron-server was using
different MTU setup for its infrastructure, or when it was using bad
default values for network MTUs (specifically, before Mitaka, all networks
were getting MTU = 0 by default, disabling both advertisement and data
path MTU size enforcement).

This patch stops persisting MTU in the database on network create and
instead calculate it on every network resource fetch.

DocImpact Now changes to MTU configuration options immediately affect
          existing network MTUs, not just new networks.

UpgradeImpact Existing networks with invalid MTU persisted in database
              may change their MTU values to reflect configuration.

Change-Id: Iee4f5037bf10b73ba98464143b183aacb59c22f2
Closes-Bug: #1556182"
e7e8a4e9385d35a622c27b4787f91f1a928628e3,2016-07-20 20:01:03-07:00,"Don't interrupt device loop for missing device

If a device is removed in the middle of
treat_devices_added_updated it can cause failures which
will force all of the other unaffected devices to be
reprocessed. When they are reprocessed it will cause
the ports on the server side to go back into BUILD which
can cause failures in tests expecting ACTIVE ports.

This patch adds an exception catcher that examines if the
port is still present. If it's missing, it suppresses the
exception since the device will be treated as a removed
device on the next iteration.

Closes-Bug: #1605090
Change-Id: Ia774a7c1578f5aca71f3b706e47819b3fdc1cce2"
7236d9cb9a2012ddd9bd0f7ca2683795f6998fd7,2016-07-21 04:03:25-04:00,"Validate device to mac instead of port id to mac

When updating the Fdb table, validate if rule exists with
device to mac instead of port id to mac.
In case several devices are located on the same physnet each device
needs to be updated separately, therefor the validation of existing
Fdb rules should be device to mac.

Change-Id: I889cbb02a875403122d520357c38eae2af14ebbe
Closes-Bug: #1604838"
b8f870d007e8a6ca821478b2c346a67670d3c966,2016-07-21 15:41:40+00:00,"Revisit (add|remove)_subports request body

The neutronclient [1] expects to serialize a dictionary any
time there is a body in the request. The (add|remove)_subports
methods were expecting a list of dicts instead.

This patch rectifies the issue by assuming a dict in the
body of the format {'sub_ports': [<my-subports]}. This is
indeed the most conventional way to pass request data to
Neutron server, and it was overlooked during a past review.

This was discovered during development of the client side
patch [2].

[1] https://github.com/openstack/python-neutronclient/blob/master/neutronclient/v2_0/client.py#L292
[2] https://review.openstack.org/#/c/340624/

Partially-implements: blueprint vlan-aware-vms
Change-Id: I8d36c61dd877d0ccb73c18702ed64897b71f001b"
5588f45a6dc6a4af70f24df94c1b1d0e737a24c4,2016-07-21 16:44:06+00:00,"Improve the segmentation ID validation logic

Segmentation ID is meant to be an Integer as per model,
and as such it is best to attempt a conversion in case
it happens to be sent as string as done in [1]. The
failure mode in this case is not immediately obvious
as the ID range check fails and yet the ID is indeed
in range.

This patch also dedups some logic, clean up and add a
test.

[1] https://review.openstack.org/#/c/340624/7/neutronclient/osc/v2/trunk/subport.py@36

Partially-implements: blueprint vlan-aware-vms

Change-Id: I7ca4c93fdf0ab83088194e9a343448ed511d4cdb"
88fd2521c17926918432e3a701024dc642a64eb1,2016-07-21 18:29:18+00:00,"Refactoring config options for l3 agent config

Refactoring neutron configuration options for l3 agent to be in
neutron/conf/agent/l3. This would allow centralization of all
configuration options in neutron/conf and provide an easy way to import.

Change-Id: Ie7533ea55eaa4d0f2c1919131a75f56e027c4d6e
Partial-Bug: #1563069"
3213dd884e15d1e2b2209aed3aed82cd0213a677,2016-07-22 10:01:37-07:00,"Mark DBConnectionError as retriable

DBConnectionError can be thrown if the connection
to the database gets closed (e.g. sql restart or
network connectivity failure). This should be part
of our standard list of exceptions to retry so we
are resillient to intermittent connectivity issues.

The olso db wrap db retry decorator has this option
as well[1] but we can't use it because our logic to
detect retriable errors in MultipleException types.

1. https://github.com/openstack/oslo.db/blob/a79479088029e4fa51def91cb36bc652356462b6/oslo_db/api.py#L123

Partial-Bug: #1596075
Change-Id: I26423e306173d956667b9d1e40f07f2b5bc8d805"
a9133b7255355942a386756ef98df0bee6f0c33b,2016-07-25 19:51:00+00:00,"Remove deprecated network_device_mtu option

The right way to configure Neutron to work with infrastructure MTU is by
using plugin agnostic global_physnet_mtu and ml2 specific
path_mtu/physical_network_mtus options. The deprecated option is error
prone and does not allow to use different MTUs per network.

Closes-Bug: #1603493
Related-Bug: #1549470
Related-Bug: #1542108
Related-Bug: #1542475

DocImpact Remove all references to network_device_mtu option from
          Neutron documentation. Note that Nova has a deprecated option
          with the same name that will need a separate patch to be removed.

Depends-On: I8e6cc99fe70d0c41a705431fb3160e8fccacff10
Depends-On: I337b284076a794027fbd63796119d56bd1923cf2
Change-Id: I7287db9df25a78a59b2dfa28acfde7fe69d17f40"
49d1def76263326535fa19fa9940434cbb34a05a,2016-07-25 19:58:50+00:00,"Deprecate implicit loading of service_providers from neutron_*.conf

This feature is redundant, since it duplicates oslo.config functionality. If
neutron-server needs to load the configuration option from multiple files, it
should be achieved by passing multiple --config-dir/--config-file CLI
arguments, not by relying on implicit loading for files with names matching the
neutron_*.conf pattern.

The plan is to stop implicit loading in Ocata.

More details:
http://lists.openstack.org/pipermail/openstack-dev/2016-May/096033.html

Related-Bug: #1492069
Related-Bug: #1599936
Change-Id: I743e181532d285303c8d5c2a73f4fd674626b478"
64f5fc82596ec6b78b76ca5d9cfc1d4b5a0b975d,2016-07-26 07:33:50+00:00,"Refactor DNS integration out of DB core plugin

This patch set aims to move all the code related to DNS integration
from the DB core plugin to the DNS ML2 extension module.

By doing this, this patchset removes the dns related code in
db_base_plugin_v2 and the dns exteions module talks with core plugin
only through the method extension_manager and apply_dict_extend_functions

By properly implementing the generation of the dns_assignment attribute
for ports in the DNS ML2 extension module, this patchset also fixes
https://bugs.launchpad.net/neutron/+bug/1579977

Change-Id: I63afb1a1bfeeb14eefb54681dc64959144deeb25
Closes-Bug: #1579601
Closes-Bug: #1579977"
09736ed06436330d81786bc8ced8a681b14f17a7,2016-07-26 02:46:27-06:00,"Fix for check_vlan_transparency on mech drivers not called

The check_vlan_transparency method on mech drivers is never
called by the neutron/plugins/ml2/managers.py MechanismManager
_check_vlan_transparency method since that method is invoked
before 'vlan_transparent' has been set in the context.
This fix moves the block in neutron/plugins/ml2/plugin.py
ML2Plugin._create_network_db to before the call to
'self.mechanism_manager.create_network_precommit(mech_context)'
so that vlan_transparent exists in the context when the
MechanismManager checks.

Change-Id: I8e47ccdebf0cb954109195e8a8ba39a1c82f97a8
Closes-Bug: #1602294"
414ceed4f3efb7c800f82ddec6cb54483a0f4249,2016-07-26 15:55:49+00:00,"Refactoring config options for common config opts

Refactoring neutron common config opts to be in neutron/conf/common so
that all the configuration options reside in a centralized location.
This simplifies the process of looking up the config opts and provides
an easy way to import.

Moved conf/common/config.py to conf/common.py as per review comments.

Partial-Bug: #1563069

Change-Id: Ib5fa294906549237630f87b9c848eebe0644088c"
11dc21d3a6d765f7bcc95548b55ff13c4397c2e7,2016-07-26 19:44:45-05:00,"Wait for vswitchd to add interfaces in native ovsdb

ovs-vsctl, unless --no-wait is passed, will wait until ovs-vswitchd
has reacted to a successful transaction. This patch implements
the same logic, waiting for next_cfg to be incremented and checking
that any added interfaces have actually been assigned ofports.

Closes-Bug: #1604816
Closes-Bug: #1604370
Related-Bug: #1604115
Change-Id: I638b82c13394f150c0bd23301285bd3375e66139"
2325e2aea86ddc28bc0e1573d4954518991cad19,2016-07-27 05:32:37+00:00,"Skip DHCP provisioning block for network ports

Network ports created via internal core plugin calls
(e.g. dhcp ports and router interfaces) don't generate
DHCP notifications to the DHCP agent so the agent never
clears the DHCP provisioning block. This patch just skips
adding DHCP provisioning blocks for network owned ports
since they don't depend on DHCP anyway.

Closes-Bug: #1590845
Closes-Bug: #1605955
Change-Id: I0111de79d9259ada3b1c06a087d0eaeb8f3cb158"
d8952e2a6964f9d768ad19d07dca32d82468ad59,2016-07-27 05:33:02+00:00,"Add API tests for router and DHCP port status

Add API tests that ensure DHCP ports and router interface ports
become active.

Router gateway ports were excluded because deployments using
'external_network_bridge = br-ex' will always have their external
interface in the DOWN state.

Related-Bug: #1590845
Related-Bug: #1605955
Change-Id: I843f9217a3c401e8221c9dd42cbd4ea55dcd7a81"
244ef910d5dc03a8d53d969ad0b62bb973c10f3b,2016-07-27 17:43:17-07:00,"Set prefix on floating_ip_mangle rules

Set the /32 prefix that iptables will automatically do internally
so our format matches the iptables-save format and we don't
unnecessarily re-apply rules.

Testing for this is provided by enabling the IPTables convergence
check in I6bee1d51155488e91857ee8bc45470d6a224fa37

Closes-Bug: #1607699
Change-Id: I0088636d2f8409f0f6f17b3ed2288f6edfac1e68"
bb989be99db84a2789abe2849c786a075e3f5ab7,2016-07-28 14:54:19+03:00,"Don't use exponential back-off for report_state

If an agent tries to report_state to the neutron-server and it fails
because of a timeout (raising oslo_messaging.MessagingTimeout), then
there is an exponential back-off effect, which causes the
seemingly-simple report_state RPC call to take 60 seconds, then 120,
then 240 and so on. This can happen if all the controllers are
restarted simultaneously a number of time, as the bug report describes.

Since the feature was intended for heavy RPC calls (like get_routers())
and not for light calls such as report_state, it's safe to reduce the
timeout to a constant 60 seconds interval.

Closes-Bug: #1606827
Change-Id: I15aeea9f8265b859bb1a8ee933b8b2ce1e64b695"
de2a70165c351abcc1266b79bae46fcd8ce68e59,2016-07-28 11:24:43-06:00,"Fix updating allocation_pools on subnet update

Reference IPAM driver skipped subnet_update processing
if allocation_pools in subnet request are blank.

Built-in ipam implementation allows to update allocation pools
to blank value (i.e. clean up allocation pools for subnet).
To make Reference ipam driver consistent with built-in ipam
implementation allocation_pool check was removed.

Included UT to verify that allocation pools can be updated to blank
value now.

Change-Id: I0654e46d4bc60f6cf51ffddeead238dd4f064db2
Closes-Bug: #1605277"
179b8301edad50f999417f52b77092a496fb448e,2016-07-28 23:21:08+00:00,"Filter HA router without HA port bindings after race conditions

Neutron server will not be able to sync ha router data after
race happened between get_ha_router_port_bindings and HA router
deleting API call. Once the ports of L3HARouterAgentPortBinding
were deleted the _process_sync_ha_data may get a None binding
port, and then the _process_sync_ha_data will fail to get the
HA interface port info due to the None port. This patch will
filter the bindings without port.

Change-Id: Ie38baf061d678fc5d768195b25241efbad74e42f
Closes-Bug: #1533457"
c6b30c392f4bd778e1b69fe1a1b82c9832b83e29,2016-07-29 09:22:54-05:00,"Fix L3 NAT DB signature mismatch

Agentless L3 plugins, such as used by networking-ovn, are required
to inherit from L3_NAT_db_mixin instead of L3_NAT_dbonly_mixin.
One reason is that the do_notify=False argument is passed to the
L3 plugin's disassociate_floatingips() method by the ML2 plugin
during delete_port(). However, the argument doesn't exist in the
parent class method. This patch fixes the signature mismatch.

In addition, agentless L3 plugins implicitly pick up callbacks
intended for use by L3 agents. Such callbacks will fail unless
the L3 plugin inherits from L3_NAT_db_mixin. This will be fixed
in a separate patch.

The result is that agentless L3 plugins will have added RPC
notification overhead which isn't necessary.

Change-Id: I7a7e6b8f07974ac877d36ccb0a94100bf0e07a0e
Partial-Bug: #1597898"
7f9610c591b209392bc4a169fc8321d834135255,2016-07-31 04:37:29+00:00,"Refactoring config options for cmd

Refactoring neutron configuration options for cmd to be in
neutron/conf. This would allow centralization of all configuration
options and provide an easy way to import.

Change-Id: I0bb7c88050aa5e931a53406d29b5b10c69c518bb
Partial-Bug: #1563069"
5e0878f476d7116bc4e0c29c7929718f379b36c2,2016-08-01 22:57:15+02:00,"Added API extensions to detect sorting/pagination features

Those features are available only when allow_sorting and
allow_pagination options are enabled (the current default is False).

They don't depend on plugin support, because when plugins don't
implement them natively, emulated mode is applied by API router itself.
So to make it plugin agnostic, we introduce a way to register custom
per-extension checks to override support detection for cases like that
one.

Now that we have a way to detect support for those features via API,
there is little reason to keep tempest configuration options to enable
those features. Instead, just inspect [network-feature-enabled]
api_extensions option in tempest.conf.

Now that DEFAULT_ALLOW_SORTING/DEFAULT_ALLOW_PAGINATION constants are
used in a single place only (in allow_sorting/allow_pagination
definitions), removed them and replaced with a literal.

Added first in-tree API tests for /extensions entry point.

DocImpact Update API documentation to cover new extensions.
APIImpact Document the new extensions.
Related-Bug: #1566514
Change-Id: I0aaaa037a8ad52060a68dd75c0a1accc6add238e"
9733cc25522b1cef83d090617a425efc5364d35b,2016-08-01 20:59:33+00:00,"Enable sorting and pagination by default

Now that we have a decent api test coverage for those features, as well
as a way to detect the features via REST API, we should be safe and
thrilled to enable them by default in all installations.

Depends-On: I0aaaa037a8ad52060a68dd75c0a1accc6add238e
Depends-On: I5e68f471a641a34100aba31cb2c4a815c7220014
Depends-On: I648851b48d0481c97054e1280b60a119b42dfd38
Depends-On: Ic04cd125dd715ae0694fbf24d8193abe3151ffd1
Depends-On: Ib3709d15fd87b93285dadf78cce73ee37e8898e2
Depends-On: Ie3a66d2a7c05143df3da1c56c8e8a5308d4bae91

DocImpact Update configuration documentation to cover new defaults.
UpgradeImpact To retain the original default behaviour, set
              allow_sorting and allow_pagination to False.

Closes-Bug: #1566514
Change-Id: I3820bec029b3895913b034b718116c95b4942ed0"
4cb60587a4a28f63b40fae2d56f3f1bf22394af9,2016-08-01 18:12:57-04:00,"Suppresses a warning when no agents are configured

Change-Id: Ia8dbf83ce1cdd66d1e0a3e42e8ce216377a61adf
Closes-Bug: #1492773"
5b7bed2044034968f679d11af99526102961883b,2016-08-02 15:16:08+08:00,"fixed a typo in src code

""experiemental"" is a misspelling of ""experimental"".
Closes-Bug: #1608823

Change-Id: Ie9be69c86aa5b7595d01c31f6ce249300a548813"
22a341a204e84b83094899730602975baa469af9,2016-08-02 14:20:10+05:18,"Fixes the midonet test_l3 unit test failures

Failures for midonet unit tests seems to be caused due
to nested rollback.
Referred https://review.openstack.org/#/c/230481/
for this fix.

Change-Id: Ic6b37bf3f799055c93e9eeb9b7f51758ceecbeb5
Closes-Bug: #1605894
Related-Bug: #1501686"
f7cc6a0107bd330150e2136e5a3dac99b6b2c33d,2016-08-02 11:25:12+01:00,"Remove deprecated default subnetpools

These config options were deprecated in Mitaka.
They can now be removed in Newton.

Closes-Bug: #1594810
Related-Bug: #1501328
Change-Id: I6eea7d4465cf23df1d8dae26336633052dfab871"
c7c9c398dbf74456c2a04ebc634e7eaddd5e0ec7,2016-08-02 12:29:23-05:00,"Support callbacks for L3 plugins without an agent

Agentless L3 plugins, such as used by networking-ovn, were required
to inherit from L3_NAT_db_mixin instead of L3_NAT_dbonly_mixin due
to an L3 NAT DB signature mismatch which was fixed by [1]. With [1]
fix, agentless L3 plugins would still implicitly pick up callbacks
intended for use by L3 agents. Such callbacks will fail unless the
L3 plugin inherits from L3_NAT_db_mixin. This patch supports
callbacks for L3 plugins without an agent. The callbacks
have been refactored and are now done implicitly during object
creation. As a result, the l3_db subscribe() method has been
deprecated.

[1] https://review.openstack.org/#/c/348558/

Change-Id: Id5dd012ffd274314f7d1b39a28525893e0675500
Partial-Bug: #1597898"
3f71a49e0f0603175e0d0f599ab4d73118b0e85a,2016-08-02 11:35:47-07:00,"Change external_network_bridge default to ''

This changes the default for external_network_bridge to '' to
encourage operators to deploy L3 agents in the correct manner.

This patch also adds a functional test to ensure that namespaces
with an existing external gateway interface are not torn down and
rewired on change.

Closes-Bug: #1563070
Change-Id: If533cf7c4c379be78f5a15073accaff7f65973ab"
40156cdc1dabafe3b63d1c50a3186a40eec99fe0,2016-08-02 15:08:22-05:00,"Fix module import for ovs_vsctl_timeout option

The ovs_vsctl_timeout config options was recently refactored [1].
This refactoring broke networking-ovn because
neutron/agent/ovsdb/impl_idl.py uses the wrong module to register
the option.

[1] https://review.openstack.org/#/c/346567/

Change-Id: I0699e3b6ecdcc16b3e5eedef85980fdcdef55517"
0810cbdad85fb06b1ece292e2a52b1a53c9359df,2016-08-02 23:44:05+00:00,"Refactoring cfg opts for ml2 plugin linuxbridge

Refactoring neutron ml2 linuxbridge drivers configuration options to
be in neutron/conf/plugins/ml2/drivers/linuxbridge. This would allow
centralization of all configuration options and provides an easy way
to import.

Change-Id: I4d86831978a18c96a9cf60df743246d46e7a8a05
Partial-Bug: #1563069"
6281fddbcb4c471b6b06e24d3faa2990e040f3d2,2016-08-03 08:52:53+09:00,"Add a unique key to port_id in routerports table

If multiple commands to add router interfaces to different routers
by the same port are executed concurrently, then all the commands
would show success.

However, there are three issues:
1. Only one router interface is actually added by the port
2. Multiple router ports records are stored in routerports table
3. The port table is updated multiple times and eventually the
last-arrived command would truly take effect

This patch adds a unique key to port_id in routerport table,
so that only the first-arrived command will insert router port
record and all later requests would raise exceptions.

Besides, port.device_id and port.device_owner in port table
needs to be updated again after routerport record is inserted.
Otherwise, in race condition the port table will store the router
information from last-arrived request. However, in routerport table,
only the first-arrived request's router information is inserted.

Change-Id: I15be35689ec59ac02ed34abe5862fa4580c8587c
Closes-Bug: #1535551"
bcef61703061c578826a3ea26fbf846b6670fb0e,2016-08-02 23:36:54-07:00,"Fix indexerror in delete_csnat_port

The code assumed every port returned from the csnat port query
would have a fixed_ip that it could compare the subnet it is
looking for to. This should be a valid assumption however there
is a path leading to a condition where it has no IPs. This makes
the cleanup code handle this case and dump a warning until we can
figure out what causes the interface to lose the IP.

Partial-Bug: #1609540
Change-Id: Ida024a231bb3fc09dad0e80498f57a5761ca3420"
3c26a621f34e1ec3369f2a9d2ce6066c6343c2be,2016-08-03 05:59:52-06:00,"Use neutron-lib add_validator for registration

As per [1], neutron-lib 0.3.0 provides a public add/get API for
local validator registration/access. This API is preferred over
directly accessing the validators dict module-level attribute
that's done today when adding a new validator and in fact
direct access to the validators dict is deprecated.

This patch changes all neutron's usage of the validators dict
to use the public API.

Closes-Bug: #1584237

[1] https://review.openstack.org/#/c/324090/

Change-Id: I97680b0a8d88cb753199fce7949cfb24b506a0ff"
c34c15cded0b5a7256e8362a38408439032fe65a,2016-08-03 13:20:16+00:00,"Fix for creation of network environment twice

The patch solves the problem of creation of network, router, subnet
in tempest and neutron (twice).
As we want to create the network environment in the neutron test only,
the get_client_manager should be called by BaseNetworkTest object,
when cls.network_resources dict is already populated and then
the tempest will not create a new env (if it is empty it creates a new
network setup)

Closes-Bug: #1607903
Change-Id: I73fea24af201be1bd8d6cac204234f490f5113ba"
a167a3e20a755d599284ea10ebac5a8f1925e7ea,2016-08-04 13:35:52+03:00,"Check for l3 agents count before router update

When updating a legacy router to be an HA, it's possible that there are
less than the minimum required l3 agents available. In this case an
exception will be raised to indicate this, but some of the changes will
already be in committed. The effect is that the router will be in an
invalid partial state between legacy and HA.

This patch simply checks that there are enough l3 agents before starting
to convert the router to HA. This adds a single DB query for each
router-update from legacy to HA, but saves a bunch of others in case the
transition should not take place.

Closes-Bug: #1609665
Change-Id: I566b17003f6d9b4c8205c0586f742795012da29c"
38f1ec03f94fc6936fe7ea51471e89d432a68099,2016-08-04 10:54:37+00:00,"Remove neutron lib warnings from ipv6_utils

Removes:

    neutron/common/ipv6_utils.py:70: DeprecationWarning: IPV6_SLAAC in version
    'mitaka' and will be removed in version 'newton': moved to neutron_lib.constants

Same for DHCPV6_STATELESS

TrivialFix

This also bumps the neutron-lib version following the commit above.

Depends-On: 06d11930aded9c73ab9539d1730e3eb8655730a9
Change-Id: I174a99c9e2c126ac910b017342010d988ac2abdc
Closes-bug: #1608224"
e770c868f87f7053b8e282bcdbd2ce1a00a34b7f,2016-08-04 16:02:46+00:00,"Ensure most of ML2's core methods not in transaction

This adds a check to each of the core methods that other callers
(e.g. service plugins) may use to manipulate core resources. This
check prevents them from passing in a context that is already part
of an ongoing DB session because we do not want DB rollbacks to be
allowed after the ML2 plugin calls postcommit methods on drivers.

All of the core methods are protected except for create_port and
update_port. This was left out because of a few particularily deeply
nested calls to the port methods from the L3 code that will be
addressed in change I5aa099c2264636336ab0b76c0826b506e2dc44b6.

For more details, read the devref added by this patch.

Partial-Bug: #1540844
Change-Id: I9924600c57648f7eccaa5abb6979419d9547a2ff"
acd04d668bd414cd21f2715adc6a35a0eaed59a3,2016-08-04 10:39:15-07:00,"DVR: Clean stale snat-ns by checking its existence when agent restarts

At present there is no clear way to distinguish when the snat_namespace
object is initialized and when the actual namespace is created.
There is no way to check if the namespace already existed. The
code was only checking at the snat_namespace object instead of its
existence.

This patch addresses the issue by adding in an exists method to the
namespace object to identify the existence of the namespace in the
given agent.

This would allow us to check for the existence of the namespace,
and also allow us to identify the stale snat namespace and
delete the namespace when the gateway is cleared as the agent restarts.

This also applies for conditions when the router is manually moved
from one agent to another agent while the agent is dead. When the
agent wakes up it would clean up the stale snat namespace.
Change-Id: Icb00297208813436c2a9e9a003275462293ad643
Closes-Bug: #1557909"
eeed08e3edaf8ec08c56aaef1565746c4135b144,2016-08-05 09:47:03+08:00,"Do not remove the HA/legacy router gateway secondary IPs

When the HA/legacy router processing the floating IP, it will remove
the gateway secondary IPs from the qg-device. This may cause exception
after the a router gateway IP updating when L3 agent try to remove
such router.

This patch will let the qg-device keep the HA/legacy router gateway
secondary IPs.

Change-Id: I022253a84aee0ed6fecc2f74bed88160f38fa61e
Closes-Bug: #1609647"
4acccc7e9ce6849e6fb30d42edbf858fd4235954,2016-08-05 10:44:55+08:00,"Delete conntrack entry with remote_ip on the other direction

Patch [1] is incomplete for deleting conntrack entries with
remote_ip set. This patch fixes the defect.
[1]: I44d6bd0c2465294b557fd01566b72e016d34bba3

Change-Id: I31c579dbe28e4e8e824912b695eaba9475cf0095
Closes-Bug: #1570171"
8b69189fdd87592a2a98be1a8bdfa20e76744cb1,2016-08-05 08:34:22+00:00,"Consider baremetal device_owner as compute for nova notify

Interface should be correctly removed from ironic when port-delete.
Nova should receive notify when baremetal port deleted.

Change-Id: I3d53bff8278dabafd929ecbea0b4b3b441c9e1cf
Partial-Bug: #1606229"
31a7feea6b60dac138b00652d2f16982a3b25f78,2016-08-05 13:46:04+03:00,"L3 agent: check router namespace existence before delete

Router namespace absence may lead to infinite loop in l3 agent trying
to delete the router.
This patch adds checks before going into namespace to prevent RuntimeError
and following infinite loop.

Closes-Bug: #1606844
Change-Id: Iae95ccb8eeb06d0fd5fc7d71e63408b3f843b371"
91614d33c101b72c0fab965bf58dddde2fa25c87,2016-08-05 05:48:39-07:00,"Add RouterPort bindings for all HA ports

Adding these bindings allows us to remove the special-cased HA
interface deletion in l3_hamode_db that had the potential for
leaving orphaned ports on failures. With the bindings present,
the interface deletion is handled before the router delete so
a failure to delete the interface will prevent router deletion.

Related-Bug: #1540271
Change-Id: I2de8503742661c18a2ec2c5ade7ec58ea380e749"
39aedaf745353935507d41fb3d04cd896e1b443b,2016-08-05 20:08:08+00:00,"Refactoring security group config options

Refactoring neutron security grp config opts to be in
neutron/conf/agent so that all the configuration options
reside in a centralized location. This simplifies the
process of looking up the config opts and provides an
easy way to import.

Change-Id: Ia9538f41dfd894ed55c1db1556b37aad09ad2ae1
Partial-Bug: #1563069"
38cdd93802a84c6a877d989f7f1dceb8eb67b278,2016-08-05 20:36:08+00:00,"Refactoring config options for extension opts

Refactoring neutron extension config allowedaddresspair opts to be in
neutron/conf so that all the configuration options for extensions
reside in a centralized location. This simplifies the process of
looking up the extension config opts and provides an easy way to import.

Partial-Bug: #1563069

Change-Id: I0a3bf8e903d50513dbdc0734ff4c1a9637bf8c59"
247128b6c3c03f3c096af9c27a97badbae11e666,2016-08-05 15:11:53-07:00,"Fix duplicate routerport handling

Change 6281fdd introduced a try: except to catch
a DuplicateError introduced by it's new constraint.
However, the try moved it outside of the context manager
so it broke the port cleanup logic.

This patch completely eliminates the catch for the
duplicate entry since we retry those anyway which
would let the regular check see the duplication.

This also adds a test to prevent another regression of
being moved outside of the context manager.

Related-Bug: #1535551
Related-Bug: #1600344

Change-Id: I5f473fff4f8372852d563c79dac2991089eb0b77"
9e8bcf45a53718da588e70785c77dd7215e12017,2016-08-05 16:28:43-07:00,"Make revision bump robust to concurrent removals

If there expired objects in the session that are concurrently
deleted by another sesssion, the revision code will get an
ObjectDeletedError when it goes to check if the expired object
is a related object to the object it is handling. So we need
to catch this error an continue on since there is nothing it
needs to do.

Change-Id: Ie6034f36c34099f2646840cbdd569a4398534df5
Closes-Bug: #1611627"
f13f56f4032784fa3b2e1751c7c3a897877d2fe0,2016-08-07 11:34:49+00:00,"Delete HA network if last HA router is migrated

If an HA router is deleted and it's the last one a tenant has, the HA
network is deleted as it's no longer needed. The same should occur when
migrating the last HA router of a tenant from HA to Legacy.

Closes-Bug: #1610645
Change-Id: Ib27224c028bef98b78a5cea91e62ea98a2847008"
9d18672c7f99d8cb6285ac689f5b75f1c961fedd,2016-08-08 01:15:51+00:00,"Check target_tenant when create rbac policy

Currently the default value of target_tenant in rbac_policies resource
is None, if a user creates rbac policy without a target_tenant,
neutron-server raises an internal error.
This patch adds a check for target_tenant, it must be a string which
length is TENANT_ID_MAX_LEN.
This patch also does a change for policy engine which now allows
enforce_policy to work on attrs without default.

Change-Id: I757b4b56a8cb1a8060cee3103ee2aead9be574de
Closes-bug: #1517331"
bd076a09833275c388c8feb9abf4f7f4278290d8,2016-08-08 16:57:48-06:00,"Rollback router intf port update if csnat update fails

If a CSNAT port update fails when a subnet is added,
it will leave the regular updated router port in the
changed state since it's a separate port update with
a separate transaction. So when the CSNAT update fails
we need explicitly undo the 1st update with another update.

Closes-Bug: #1609693
Change-Id: If979aebbebf6da77f3fcec0cc7ec8b27e388aba4"
7e69891412e967a8509fe6877501114e148f7518,2016-08-08 17:12:01-07:00,"ml2: allow retry on retriabable db error by precommit

Db retriable error by precommit can be recovered with upper layer by
retry instead of converting into ML2MechanismDriverError.
Raise retriable db error instead of swallowing it and let upper layer to
retry.
Due to concurrency, db error by precommit is sometimes inevitable.
precommit may issue db transactions depending on mechanism driver, Some
operations on e.g. subnet, routers, touches many other resources (e.g. ip
allocation, ports) in single db transaction as well. And background
operation by mechanism driver (e.g. background sync, monitoring
resources periodically, etc) may touch those db tables with other
order.

Change-Id: Ifc670c1eb5801934bf46fdc23a7721ce4c2cfa6c
Closes-Bug: #1609184
Closes-Bug: #1609149"
f697cddda60f6d8d61ad147634ebc53f6d6139f7,2016-08-08 18:35:18-06:00,"Set bridge_name in OVS trunk port's vif_details

This patch follows up on the Nova work that allows Neutron to pass an
OVS 'bridge_name' in a port's vif_details [1] and the os-vif work that
ensures the OVS bridge passed in as 'bridge_name' (or the config default
of 'br-int') is created [2].

If the port is a trunk's parent port, then bridge_name will be set to a
generated trunk bridge name for vlan-aware VMs. Otherwise, the
bridge_name field will remain empty.

Note: until Nova integrates os-vif [3] and uses a release that contains
the change in [2], the trunk bridge will not actually be created by
Nova/os-vif. It is expected to be integrated for the Newton release.
Until then, this Nova-equivalent patch can be used for testing
purposes [4].

[1] https://review.openstack.org/#/c/260700/
[2] https://review.openstack.org/#/c/330818/
[3] https://review.openstack.org/#/c/269672/
[4] https://review.openstack.org/#/c/332474/

Partially-implements: blueprint vlan-aware-vms
Change-Id: Iad72d163bc406df65866f6d962abcb78596828e7"
26bdffb3d73f12833f6fdbdfab6f584f84507693,2016-08-09 16:18:35+03:00,"Handle deleted ports when creating a list of fdb entries

The issue might happen when VMs are intensively created/deleted.
With the patch deleted ports will be just skipped.

Closes-Bug: #1610303
Change-Id: I32b0de9c452cf973d687c72e8381584012c9f3b4"
34ec3536b2d1cab61222d2f2993e74988728a027,2016-08-09 15:55:18+02:00,"Add devref for Relocating DB models

This patch will add devref for relocating db models and
it also explains why that change is required. It will also
add a directory named models under tree neutron/db/.

Change-Id: I160cecb76fb736307e5937122c84cdc0546207b6
Related-Bug: #1597913"
a200f4a7b670abd7f6fc59847782719057bfe6ef,2016-08-09 14:43:08+00:00,"pep8: fixed F821 violation in a unit test

The _ symbol should have been imported explicitly. Actually, there is no
use case for translatable messages in unit tests, it's just a waste of
translator time to mark it as such. The patch removes the translation
marker for good.

Change-Id: I76bef710a1030dcb4eb35778ebf44ed600016f17
Closes-Bug: #1611400"
534803d85ee9d3ad9a198fab72e94417dbe78047,2016-08-09 10:53:30-04:00,"Check the router gateway IPs prefixlen existence

When we remove the router gateway, if it has multiple IPs
for the gateway port, the router remove procedure will not
work properly and will cause a router remove infinite loop.
This is because the neutron server only gives the first (lowest)
gateway IP a 'prefixlen', and not the secondary IPs, so
the router remove will get a KeyError.

This patch adds a `prefixlen` check before removing the gateway IPs
conntrack state.

Change-Id: I425897578d8bd44f4e5f9dd44de9717ae4e50fcd
Closes-Bug: #1609248"
87488f345c47d587e432206b2f7289a727e7e528,2016-08-09 20:51:44+00:00,"Add flush command to iproute in ip_lib

IP route flush command to support flush the route
entries.

Closes-Bug: #1611513
Change-Id: I401b242cc86ba1de7a20943d8b0340e0f0005ba3"
b25f6448d530b51eea4a36b3d087515e8495f53f,2016-08-10 04:03:27+00:00,"Ensure ML2's create/update_port methods not in transaction

This adds a check to the ML2 create and update port methods which
are called by other services to manipulate ports. This check prevents
them from passing in a context that is already part of an ongoing DB
session because we do not want DB rollbacks to be allowed after the
ML2 plugin calls postcommit methods on drivers.

This also adds a temporary hack to set an attribute on the context
to skip this check to accomadate two L3 code-paths and a subnet
code-path that have port manipulations entangled in transactions.
This attribute will ultimately be removed once these paths are
refactored.

Closes-Bug: #1540844
Change-Id: I5aa099c2264636336ab0b76c0826b506e2dc44b6"
72720f9aa30169809e41e6dfbafc4e3561716ea5,2016-08-10 06:01:19+00:00,"lb-agent: handle exception when bridge slave already removed

An exception can happen when a network is deleted because the
lb-agent tries to removes the dhcp tap from the bridge at about
the same time as the dhcp-agent is deleting the tap. The unhandled
exception means the bridge does not get deleted and a log error.

Closes-Bug: #1611612
Change-Id: Ia9a6b5fc49e239769e850e9486454e81e3a4b96f"
91a983f40ad4448235272e24f678a230f32385d7,2016-08-10 06:20:51+00:00,"Avoid allocating ports from ip_local_port_range

Ports within ip_local_port_range can be used by the local side
of connections.  Avoid using them as there should be no downside
from using narrower port range thanks to ExclusiveResource
allocators.

Change-Id: I30e8e40073117e63bf9a99f13000d83a87e64f29
Closes-Bug: #1551288"
ec929d9b1caaf970f431df10b10dc5fed6a9cc9f,2016-08-10 10:05:08-04:00,"Adds a default reload callback to ProcessManager

Currently, process reload in ProcessManager is being done with 'HUP'.
Some processes, such as haproxy[1], use a different method for reloading
configuration updates.

This patch addes a default reload callback option to handle such cases, while
keeping 'HUP' as the default method, in case a default reload callback
was not provided.

[1] See -sf flags: http://www.haproxy.org/download/1.2/doc/haproxy-en.txt

Related-Bug: #1565801

Change-Id: Ia2f67e742778cd99f2211c94782635652d9032c7"
f1edd59b1f129f86cfb15154e059c29ab69d4bf2,2016-08-10 09:10:15-05:00,"Include db_models document to avoid errors

The db_models.rst file was not referenced by any other document. This
was generating warnings during the creation of documentation.

Change-Id: I432aabb3c22b12faa29ca88e13392e6c2d0e33d8
Closes-Bug: #1611546"
319bc525b408c6df1905e9597da28c2d1ce3020c,2016-08-10 10:19:26-06:00,"isolate test_db_find_column_type_list

As per the recent gate failures (see bug), it appears
OVSLibTestCase.test_db_find_column_type_list is not isolated
and thus its usage of ovsdb's db_list() and db_find() occasionally
obtain different results.

This patch adds the db_list() and db_find() operations within the
test case to run in a transaction so that we get a single snapshot
of the db results.

In addition this patch undoes the changes from patch set 1 as the
initial changes do not appear to address the issue at hand.

Change-Id: I312076edb6e11f21347831843758894e11d6f56c
Closes-Bug: #1592546"
86bf29a45f383509325c0596856e299f8fc50fe2,2016-08-11 01:21:41+00:00,"Refactoring config options for services opts

Refactoring neutron services config opts to be in neutron/conf/services
so that all the configuration options for services reside in a
centralized location. This simplifies the process of looking up the
extension config opts and provides an easy way to import.

Change-Id: Iad255b020910ee54bc6cce25f4f786376dfe3705
Partial-Bug: #1563069"
3ad23f42c7b1fce8e34fce651e03614f28740868,2016-08-10 19:12:01-07:00,"Always start transactions in quota cleanup methods

If the previous action that let to the quota reservation
cancelling was the result of a database connection getting
interrupted, attempting to query without calling session.begin()
will result in a sqlalchemy.exc.ResourceClosedError.

This alters the quota methods that mutate DB state to use a
transaction with the new oslo DB enginefacade decorators that
start a transaction for us.

Partial-Bug: #1596075
Partially-Implements: blueprint enginefacade-switch
Change-Id: I3d0539b11795cbcf97e70e1ec39013221a00d6d5"
ce4d50b877b3095629770a8dbb9a32e31a69cf06,2016-08-10 23:43:10-07:00,"Add floating IP test to ensure backwards compat

This adds an API test to ensure that we maintain the behavior
of disassociating a floating IP if it receives an update with
an empty body.

Change-Id: I9efd941b621e15691af95cd88f391aa564e4b9bd
Related-Bug: #1607746"
a92647300d0148d5d23f7c16631b192923702a1f,2016-08-11 13:49:53+02:00,"Relocate Security Group DB models

This patch will separate security group db models from mixins for OVO
implementation work.

Change-Id: Ie38d3cc2efa5f580261f207748affb5840ba23c9
Partial-Bug: #1597913"
7eff6aff42140540963370a4368f1ce3ca51ae7b,2016-08-11 13:49:47+00:00,"Fix check_asserttruefalse syntax validator

According to Neutron developer documentation[1], it's better to use
assertTrue/False methods instead of generic assertEqual. The regex
created for check_asserttruefalse was skipping unit tests located on
test_netns_cleanup.py file.  This change includes those scenarios.

[1] http://docs.openstack.org/developer/neutron/devref/effective_neutron.html#mocking-and-testing

Change-Id: Id2eacf14d4b0740f3b044520074c7ab78768b319"
b82b4c4d332cad0f926a50396d1b960a3732ca85,2016-08-11 21:48:36+00:00,"Refactoring config options of l3 agent keepalived

Refactoring configuration options for agent/l3/keepalived_state_change
to be in neutron/conf/agent/l3. This would allow centralization of all
configuration options under neutron/conf and provide an easy way to
import.

Change-Id: I18e5f683690cffd6e0ad5e35f459b86c5b3332ac
Partial-Bug: #1563069"
e99274397c974666ede9d4f1804210e6152b7238,2016-08-12 08:33:14+00:00,"Check content type by completely match instead of partial match

Currently, 'get_content_type' method in neutron/wsgi.py checks
specified format by 'in' statement.
Thus, string(e.g. 'application/j') that is partial matched to
'application/json' is returned.

However, we cannot find valid serializer from the format,
and request fails with unexpected error.

Change-Id: I75aac0308d0fd0321973c4bda3bc07ca0224e1c1
Closes-Bug: #1612485"
bcbe6d2ee28bdaee2f5146bbdcd5d5f47eaac945,2016-08-12 09:55:32+00:00,"Raise 501 instead of 500 when updating meter-lebel and rule

Currently, there is no action for updating meter-label and rule.
Thus, InternalServerError is returned to user because of
unexpected internal AttributeError.
This patch defines action for updating meter-label and rule
so that user can see NotImplementedError.

Change-Id: I7b179b2179a3e6cef0fd53df8f59fb6fb9433d40
Closes-Bug: #1607172"
ac69b228b058b4a8cf74f5c5a6b56d4f4a9a0b0d,2016-08-12 14:42:03+03:00,"Refactor setting OSprofiler for db calls

This change is depends on change in oslo.db that adds option to
set hook for osprofiler.

Depends-On: I78bef4979c2000d05658ce17d0348cd0a10c24d9

Related-bug: #1600739

Related-bug: #1520719

Change-Id: Ie971654f988c98015edc7a59cf00b27e83c0c1b7"
7c0f189309789ebcbd5c20c5a86835576ffb5db3,2016-08-12 12:27:06+00:00,"models: move AllowedAddressPair model under neutron/db/models

This patch moves the module into the canonical place. It does it in
backwards compatible way, by leaving the model available under the old
location, only emitting a deprecation warning on access from there. In
the future, the old module will be completely cleaned up.

This patch also makes head.py file that is used to import and register
all models in the tree to import everything from under neutron.db.models
without explicitly naming each module. In that way, we can avoid the
need to import each new module with models as long as it's located in
the designated place. The file is a well known abuser in terms of git
conflicts, and it's better to avoid manual work.

Change-Id: I084031e6b3c8d9113cc6ee6e3967f0e1edaee0b5
Partial-Bug: #1597913"
d8d3c193b2c2b5bf814602ac4f5446e2a333a057,2016-08-12 15:48:17+03:00,"Get rid of get_engine() in db/api.py

get_engine() can be called directly with
context_manager.get_legacy_facade().get_engine()

Related-bug: #1520719

Change-Id: Id38c06aee428200a061c59a984b59b81b24056e3"
67984850228f6f26a72504b9f464a5fbcaac59e6,2016-08-12 15:53:57+00:00,"Avoid IPAM driver reusing a session that has been rolled back

With the in-tree pluggable IPAM driver, IPAM rollback tries to use the
DB session after it has been rolled back due to an exception. This
driver doesn't need roll back, so fix this by adding a method to the
driver signalling that rollback shouldn't be attempted.

Change-Id: Ic254789e58a8a51cd1aa943cb71de12410f4c0a7
Closes-Bug: #1603162
Related-Bug: #1516156"
720a8b3ff011d5f765335e180af0a11bda1f7aa8,2016-08-12 18:20:46+00:00,"Broken extensions should not show up in the extension list

This patch ensures that invalid extensions are not exposed to
the user and thus allow clients that rely on them to fail
fast rather than unexpectedly.

Closes-bug: #1547678

Change-Id: Iaace8a9e41562cb16b8c4b475eea01956eb6aab7"
aa42906143f09a8cf40dfcd91bb211eac6689b80,2016-08-12 15:27:41-07:00,"Make auto-allocate plugin handle sneaky DB errors

DB errors or retry exceptions that bubble up to the
plugin may get masked by integrity violation errors
due to partial provisioning of resources. When that
happens, we should make sure any pending resource
is cleaned up before reattempting the operation.

Closes-bug: #1612615

Change-Id: I76e9f8e4b61fb3566d70af4236c19e4c5a523646"
d8c8cad70635cb82e7d6a4f377a424b966fd5c17,2016-08-12 19:02:27-07:00,"Remove stale configuration l3_agent_manager

This does not exist anywhere and the manager is indeed harcoded.

[1] https://github.com/openstack/neutron/blob/master/neutron/agent/l3_agent.py#L49

Change-Id: I7a368cc58896cd9fc81c8c4b8a4e120d578680ae"
aa52367f78be0941ab7a75ade29a30cd853bbbec,2016-08-13 03:40:02+00:00,"Fix test_router_add_interface_delete_port_after_failure

In test_router_add_interface_delete_port_after_failure,
when a subnet is created, a neutron DHCP port could be created
if this subnet is DHCP-enabled.

In this case, the test will fail because it only checks if a
router-interface port is deleted and expects no more port in
the system. But it misses the internal DHCP port is still there.

The patch here is to explicitly set enable_dhcp=False when
creating the subnet.

Change-Id: I4acbf2c83f9145f7b99519ec90934fa862de67f7
Closes-Bug: #1612894"
fadee7a41e88c0081e2a92c4808e845d8ac5df8f,2016-08-13 03:42:58+00:00,"Fix potential problem in test_router_add_interface_port

test_router_add_interface_port may fail when an internal metadata
network is created during add_router_interface action.

The potential problem is introduced by Commit 6281fddbcb4c
(https://review.openstack.org/#/c/285048/)
which adds an additional update_port inside add_router_interface()
to update device_id and device_owner on the newly created router port.

The problem could happen when users attach a subnet (for example
10.0.0.0/24) to a router. During the add_router_interface action,
vendor's plugin may create an internal metadata subnet (such as
169.254.169.252/30) and attach it to the same router. Since two
router ports (10.0.0.1 and 169.254.169.253) are created during this
operation, the extra update_port was called on both router ports.

Before Commit 6281fddbcb4c, test_router_add_interface_port only saw
one update_port call on 10.0.0.1. After the change, it now sees three
update_port calls, two on 10.0.0.1 and one on 169.254.169.253.
Because it doesn't expect to see the update_port call on port
169.254.169.253 (which is the last update_port call),
the update_port.assert_called_with() fails.

This patch changes the assert method, so it will check if update_port
has been called on the main router port instead of checking the latest
update_port call is on the main router port.

Change-Id: I0ec1c90ee18bd9d0b027ad462cd6a3c6a079347f
Closes-Bug: #1612896"
fb375bd7a40f6ff86ac1db2134466d0183690f7e,2016-08-15 07:58:57+07:00,"Prevent duplicate SG rules in 'concurrent requests' case

Problem: The process of transaction is too short.
In case of concurrent requests, both requests can pass all tests
and going to write to database. Sometimes the transaction of first
request closed before the transaction of the second request has been
open, because of the above problem. So both of them can access the
latest data (revision number), then passing the StaleDataError and
writing to database successfully.

This patch moved the _check_for_duplicate_rules_in_db into transaction
to prevent race condition.

Change-Id: I9ff2bf830c0c9d1114833d33603622f447ee7ca2
Closes-bug: #1532696"
5454bcef347fe094b6de74065523db625de4de5e,2016-08-15 12:42:51+07:00,"Clean imports in code

In some part in the code we import objects. Openstack style
guideline recommends to import only modules.

http://docs.openstack.org/developer/hacking/#imports

Change-Id: I54138598b2556c080b1c61753db505878a9391d0"
5925364c9ac05e266637183ff91695d06234e3cb,2016-08-15 06:31:13+00:00,"Fixed neutron-db-manage without neutron/tests installed

With 7c0f189309789ebcbd5c20c5a86835576ffb5db3 in tree, we made
neutron-db-manage require neutron/tests/tools.py installed. Some
distributions, like RDO, may split the python package into core package
and the one that contains python code needed for testing only (anything
under neutron/tests/), and hence don't guarantee that all setups have
neutron.tests package available.

This fix moves the import_module_recursively function from
neutron.tests.tools into neutron.common.utils because it has non-testing
use cases. All existing cases where we use the function switched to the
new location. The old symbol still works, though triggers a deprecation
warning, and will be removed in the next cycle.

Change-Id: Ia8d91a1704c894bc1f6cf14e6cdd971fab255b62
Closes-Bug: #1612959"
ab302fe6cde3795cc778179fdcadf71a188829b5,2016-08-15 18:58:09+08:00,"Correct floating IP updating with same port_id issue

If user try to update floating IP with port_id that it associated
with, the neutron API will return a bad request exception.

This patch adds a check for the updating API to determine whether
the association is changed.

Change-Id: I620b085238cb27dcef9989a27ba14cd2e3f5f07c
Closes-Bug: #1578523"
de31df4211ca2b05c331ad910578893fe92052f4,2016-08-16 08:29:57+03:00,"SR-IOV: deprecate supported_pci_vendor_devs

Deprecate the supported_pci_vendor_devs option in order to reduce
complexity for configuring SR-IOV. Currently, neutron validates the pci
vendor and product id. However this check is already done by the
nova-scheduler when it selects a suitable hypervisor. More precisely,
the compute node validates this through the pci_passthrough_whitelist
option in nova.conf. Therefore this check in neutron is redundant.

This patch deprecates the supported_pci_vendor_devs in Newton release
and updates the supported_pci_vendor_devs default to None.
In case of None value the SR-IOV mechanism driver won't do
any pci vendor validation. In case this option is set
the SR-IOV mechanism driver will do the validaiton as it was
before.

DocImpact
Closes-bug: #1611302

Change-Id: Id5e2cef44da871965583abbae3e1140fd4f5786c"
f03a6f944a141a03616de71bb36c4b2d2802feb3,2016-08-16 13:54:54+08:00,"Don't pass argument sqlite_db in method set_defaults

Config option sqlite_db is deprecated for removal[1],
so don't need set its default value.

[1]https://github.com/openstack/oslo.db/blob/\
0a1bae9859079fb21a03716be947c5f1da6db0a2/oslo_db/options.py#L17

Change-Id: Ie1e94e03013e8f1e47bbc1cd12f8d1b81a4cb24e"
54aa6886f95165e391e081347b9286c2306d02ca,2016-08-16 12:27:00+03:00,"Added tests for checking expand/contract branch upgrade

Currently tests check only that ""upgrade head"" perfoms without
errors. This change adds tests that will check that
upgrade --expand/contract also working without errors for both
MySQL and PostgreSQL.

Also move test_branches and test_has_offline_migrations* to
_TestModelsMigrations, so all subprojects will have this
tests running for there directories as well.

Closes-bug: #1613318

Change-Id: I3bff046ed83dd8ed21da20ab9e4331e95047e2b6"
a348c389583a0b7a9c48ed5a7cbc4ae734b766ee,2016-08-16 19:53:19+09:00,"Add API test for tag

This patch adds api test for tag.

Change-Id: I87aba26534db179f0744ddee982251e8e1834638
Partial-Implements: blueprint add-tags-to-core-resources
Related-Bug: #1489291"
17f2df320c281f6f1ca71892e9fcf9e0376ac561,2016-08-16 16:51:41+00:00,"Refactoring config options for plugin agent opts

Refactoring neutron ml2 plugin agent driver config opts to be in
neutron/conf/plugins/ml2/drivers/agent so that all the
configuration options for agent drivers reside in a centralized
location. This simplifies the process of looking up the agent driver
config opts and provides an easy way to import.

Change-Id: I673c10dfa35014fea129f7030139a89bfc20b272
Partial-Bug: #1563069"
1db573ff12172f0a278b7318fe8094527e2bc72a,2016-08-16 19:54:21+00:00,"Use only_contrib option for nova_client calls

Use the only_contrib option that was added by
I030f4c55c2795c7f7973f5f12e54b9819c4a5578 to speed up nova_client calls
and skip the search for nova_client extensions to reduce
/var/log/audit noise.

Change-Id: Ic97b342a3633ffdf05b02ddd81baad88e1605a75
Closes-Bug: #1509500"
20bdfaa1c369d29c191b0ae5ba6e63f733f768fa,2016-08-16 20:50:31+00:00,"Removing unused file neutron/agent/l3/config

l3 agent config options has been refactored to
neutron/conf/agent/l3/config.py.
Following patches have been merged
https://review.openstack.org/#/c/338596
https://review.openstack.org/#/c/339177/
This patchset removes unused file.

Change-Id: I8235e275e20863f68d53628b5f9d71138c468629
Partial-Bug: #1563069"
625de54de3936b0da8760c3da76d2d315d05f94e,2016-08-17 03:12:32-06:00,"Switch to pluggable IPAM implementation

This patch does unconditional switch from non-pluggable IPAM to
pluggable IPAM for all deployments during upgrade to Neutron.

Pluggable IPAM is enabled by pointing ipam_driver default to reference
driver. User who manually set ipam_driver in neutron.conf will continue
to use ipam_driver of their choice.

During upgrade data is migrated from non-pluggable IPAM tables to
pluggable IPAM tables using alembic_migration. Availability ranges
(IPAvailabilityRange) is no longer used to calculate next available ip
address, so migration for this table is not included.

Migration is covered with functional tests. Dataset with subnets,
allocation pools and ip allocations is loaded prior to migration.
Once migration is completed ipam related tables are checked
if data is migrated properly.

Built-in IPAM implementation becomes obsolete and is planned to be
removed in upcoming commits.

UpgradeImpact
Closes-Bug: #1516156
Change-Id: I1d633810bd16f1bec7bbca57522e9ad3f7745ea2"
347778a9f9ce955562c3535b413642baf9b12111,2016-08-17 05:50:53-06:00,"Enable ra on gateway when add gateway to HA router

Now the 'accept_ra' will only be configured when HA router change
state to 'master'. If the router gateway is added after router state
change, the gateway port in 'master' HA router will not be configured.

This patch will configure 'accept_ra' for the 'master' HA router.

Change-Id: Ice1f3e6e48597ea8c366e243c2ca1771ea9b7770
Closes-bug: #1585246"
72a722e69d4579e0df680735ab63305d522736aa,2016-08-17 14:43:44-07:00,"Relocate AddressScope DB model

Required to resolve cyclic import issue when integrating with Oslo
Versioned Object for AddressScope

Change-Id: If57e472c5827033f09a59d1f8d9359a3f241c17c
Partial-Bug: #1597913"
2e33fd8de27af73b38bf318534bcd290f395232f,2016-08-18 08:07:10+09:00,"ML2: Lower log level of ""Host filtering is disabled"" message

A warning is too verbose as the situation is normal for
sdn-controller based deployments.

Closes-Bug: #1579286
Change-Id: I972801969424b2fe62b75036bf91bfc6cd56ceb1"
625fdb423e289ee98dbfbd4c81edf64b598cb352,2016-08-18 15:43:53+01:00,"Avoid KeyError when accessing ""dns_name"" as it may not exist

Neutron LBaaS does not pass a full copy of the request_data
into this function, and causes the port create to fail
with a KeyError

Change-Id: Ib81cbbaf24a4ffaa983e1b05146aea0dc74e29bb
Fixes-Bug: #1605336"
51ea9b10c73a5990e8e28b78e192e71d46142c71,2016-08-18 11:08:14-04:00,"Fix bridge assertion error when times are equal

Sysfs mtime has only a 4ms granularity, so sometimes t2 will
be equal to t1.  Change to use assertGreaterEqual() instead.

Change-Id: Id9a97dc3d5facbf66cd5c774a52f6a1b83712f33
Closes-bug: #1614380"
af9ad0c35e40e91357a7ec41b12416b4ca34cd83,2016-08-18 19:49:21-07:00,"Fix NoSuchOptError on identity config option lookup

Change 1afca56b059 moved a few options around and that
broke the Tempest API clients module. This patch adds
the logic to handle the change.

Closes-bug: #1614799

Change-Id: I5ef0e7cc79609ba9df31d6573fe935a6e8d837f4"
c5629e9734f566aaf1692ed3ae016951a62bebe0,2016-08-19 05:03:00+00:00,"TrunkStub.trunk_deleted is called with NULL trunk object

On AFTER_DELETE event, the trunk object is set in payload.original_trunk,
but this is not used for calling TrunkStub.trunk_deleted(), instead it is
called with payload.current_trunk which is 'None'.

Closes-bug: #1614059
Change-Id: Ib09516379ef5d48bf723a9ba098d90bf6bf5a0eb"
43a8d201361e9bbe644243503f397c16e8b0c5a5,2016-08-19 03:56:58-07:00,"Fix init method for HasStandardAttributes

Puttting description in the signature of __init__ would make it
consume the first positional argument that was passed in. This
would lead to a difficult to understand traceback from sqlalchemy
when the object was initialized with a positional.

This correctly checks the kwargs for the description and any other
standard attributes rather than leaving it in a positional.

Closes-Bug: #1614897
Change-Id: I264bf5fbfc834d7f5d86a2ad03f5e68a91e2185c"
c3c9cdd6f29334476479d0c0e3760ac7b90a530c,2016-08-19 14:32:12+01:00,"Filter out external networks in NetworksSearchCriteriaTest

Otherwise those networks that may even belong to another tenant still
show up in the results that we then compare iterated networks to.

Change-Id: I24b117401a1886dce0b78900b522ac9bace533bf
Closes-Bug: #1614964"
d7e6ce8a6ef31dc47db915d9e9186583f16daf6b,2016-08-19 11:52:57-07:00,"Relocate GRE Db models

Change-Id: I00afedc08c9ed7ab03ead9ef4bee94a80f50bb75
Partial-Bug: #1597913"
2ae39162122386f218f06324b6ea7b9428f7b8c4,2016-08-19 19:13:08+00:00,"L2 Agent Extensions handle unimplemented methods

If an L2 agent extension does not implement the handle_port or delete_port
methods, we should check for that using hasattr() beforehand rather than
catching any AttributeErrors.  This is based on a conversation related to
identical code in the L3 agent extensions:
https://review.openstack.org/#/c/339246/15/neutron/agent/l3/l3_agent_extensions_manager.py@44

Change-Id: Ic0c5133a9f49c39f1f446328beb3e0ca7eb85095"
11849b7279c5e7afe686fab6f4b21ce6f7366c14,2016-08-19 21:04:15-07:00,"Make auto allocate cleanup retry

This adds a retry decorator to the auto allocate cleanup logic
so it can handle retriable errors during cleanup. It also adds
catches for notfound errors to make the function idempotent so
it works on retries.

Change-Id: I3d62af3018fb834ec85771d8bc8e7379cc80b72a
Closes-Bug: #1615710"
8398ec0d771dd8e4944034ec2e658c747671de3e,2016-08-20 09:06:10-04:00,"Add mechanism driver error details to MechanismDriverError

Now the ML2 core plugin maps driver errors to MechanismDriverError
and hides the error details from the caller.

This patch change MechanismDriverError from an instance of
NeutronException to an instance of MultipleExceptions. Add add
exceptions from mechanism driver as inner_exceptions of
MultipleExceptions. As a result, the api layer will unwrap the
MechanismDriverError and return the real error to client.

Change-Id: I3a46932848d59f7f027640bfb598650f064b0a12
Closes-bug: #1273730"
989aba6a2bba0992f0406fc6555ea9a590f71965,2016-08-22 06:43:27+00:00,"fullstack: test for IPv6 north-south traffic

This patch validates north south IPv6 traffic through legacy router.

Partial-Bug: #1583028
Change-Id: I12cccdb01960e89ddfc795b587d617da37c9fee6"
dfa702fac80312b0c5b93c78e92f9d01ea11bbd6,2016-08-22 17:59:34-07:00,"Implement the DELETE method for get-me-a-network

Review [1] showed how tricky it can be to let the client
side deal with auto-network-topology cleanups. Rather than
pushing this complexity to the client, we should implement
the DELETE method for this extension, as it's rather
trival to do on this server side.

Since the DELETE method is exposed, but it fails with 500,
it is reasonable to deal with this as a bug fix, rather than
having to go through yet another extension. The neutronclient
side support should be added, but since the first user of this
is Tempest, we can safely assume they can leverage this directly
without depending on a python-neutronclient version bump.

[1] https://review.openstack.org/#/c/327191/

Closes-bug: #1614872

Change-Id: I2fba51bdf8c781fcc0449e1e9947de976c96eec4"
371be082b85d8a8bdc00086b527116bef746bff3,2016-08-23 16:09:58+08:00,"Fix the attribute name: _flavor_plugin_ref

Change-Id: I673060a11103b98b7f8af593e90d2fc90bc22b15
Partially-Implements: blueprint multi-l3-backends
Closes-Bug: #1612186"
4bdab5cf1da333cf4e7aaf893e14b094fc5fad61,2016-08-23 13:52:06+03:00,"L3 DVR: use fanout when sending dvr arp table update

Sending arp update to each l3 dvr agent one by one on every port
creation is not scalable and causes serious performance degradation
if router is hosted on lots of l3 dvr agents on compute nodes (see
bug report). This increases port creation time and eventually leads
to timeouts in Nova and VMs going to ERROR state.

This patch changes notification to be fanout.
The downside is that with fanout the arp notification will be sent to
each l3 agent, even those not hosting the router. However such agents
will just skip the notification if not hosting the router - this should
be quite cheap.

Closes-Bug: #1614452
Change-Id: I1fb533d7804b131f709b790fc730ed7b97cb5499"
d390f1c8500b9bbd8852e1b77a93fe35fd6e5fa7,2016-08-23 18:15:12+05:18,"Added the appropriate links in developer guide

Change-Id: I68463032125bc6011979a4342045bd5ea5f3cab7
Closes-Bug: #1616065"
b223f319ab2130419042d93eac2a240b09d75347,2016-08-23 14:58:32+00:00,"Fix bug in L3 agent extension manager

In review [1] it was noticed by a reviewer that the wrong object was
being consulted in the L2 agent extension manager when checking to see
if the handle_port and delete_port methods were implemented.  Since the
L3 agent extension manager has the same code - which had already
merged - it will require the same fix.

[1] https://review.openstack.org/#/c/355220/3..4/neutron/agent/l2/l2_agent_extensions_manager.py

Change-Id: I2793474abd46dc2553b70bccad3ee25258a3707f"
960eae574b75f58d489230032f084bb4c49591b5,2016-08-23 16:55:52-07:00,"Catch SubnetAllocationError during auto-allocated-topology provisioning

When uncaught, the auto_allocated_network stays behind. This patch
ensures the error is handled properly and the network is indeed
cleared when the subnetpool runs out of space.

Closes-bug: #1616250

Change-Id: Ic6e06d3e6c16a58977e84b371c3faaba66c9603b"
ee1a0588550409a98dabed96d5b935d70281cc8a,2016-08-24 01:59:39-06:00,"Implement check_vlan_transparency to return True in SR-IOV mech driver

As the SR-IOV mechanism driver does not impact VLAN transparency
support, this patch overrides the check_vlan_transparency method
from the MechanismDriver base class and returns 'True'.  In this
way, inclusion of the SR-IOV mechanism driver in the list of
configured mechanism_drivers does not prevent the creation of
VLAN transparent networks.

Change-Id: Ie35ce63102e59891d040c01c847936f918e0d6ea
Closes-Bug: #1616480"
795f5f1c872c170fb5f7391b2c280b73417aa2bf,2016-08-24 13:38:27+00:00,"Fix the QoSPluginBase methods signature.

rule_obj has been substituted for rule_cls which is more precise,
and the abstract method signature has been fixed to be correct.

Change-Id: I1dd25a346d13da80af4a1ca81f67563a8f9de94d
Closes-bug: #1608921"
5264ab966d3db7b1cb698190872cbe6feaf48464,2016-08-24 14:27:48+00:00,"Using revision_number to ensure no overlap in *one* network

This patch uses revision_number in database. When creating
a subnet in a network, the revision_number of the network
will be increased. That will prevent overlapping CIDR
(overlapping CIDR means some subnets' cidrs are overlapping)
on *one* network.

Basically, in case of concurrent requests creating subnets
on *one* network, only one request successes, other requests
needs retrying request.

Change-Id: Id6548535075bed87a4b36e1462db546ab9163f29
Closes-Bug: #1532695"
3b38912e79746764c4e0171a9ecc7e44183f929e,2016-08-24 16:41:03+00:00,"Include [agent] extensions option into ovs/linuxbridge agent files

The option was introduced in Liberty. In Mitaka, we switched to using
oslo-config-generator but missed including this specific option.

The patch returns the option back. It should be backported to Mitaka.

Change-Id: Ie4a4ea44eedac3d6c7ac1b6e0739f6c44212b2ea
Closes-Bug: #1602358"
38b1b47fe76652fb7ee13a9028f56795b35c0dc9,2016-08-25 12:56:14+00:00,"Fix internal server error during updating QoS rule

QoS rule can be edited or created only by admin users. Because
rule object don't have tenant_id attribute there was error
in checking tenant_id of object and neutron server got internal
server error.

Now if updating object doesn't have tenant_id at all (like in
case of QoS rules), 404 error will be returned to the user.

New API tests for checking this case are added for QoS.

Change-Id: Ia82ad84a3a07df4df8eaeaed6c47d31be9493cbd
Closes-Bug: #1515564"
938937b94415bb79accb026a7bcc2d2a9d1dcf13,2016-08-25 16:17:56+03:00,"Set L3 agent standby if admin_state_up=False

If admin_state_up set to False L3 agent still shows as 'active'
in the HA router states on that agent. Current change adds check for such
case and updates HA router state from 'active' to 'standby' if
agent's admin_state_up is False.

Change-Id: Iaa800221fcfcd41e81ade5136a2a513a2cce8d5b
Closes-bug: #1481588"
7e5d12d49d1f23338df68ffd18b92c9491d8cccc,2016-08-26 08:55:43+07:00,"Clean import in code

This patch set modified some lines of code,
which import object, it should import module as
Openstack's recommendation [1].

[1] http://docs.openstack.org/developer/hacking/#imports

Change-Id: I31ecf6a295ffdd089b3333dcec762483e7c081ad"
178bff23f19f722a7123d2c220f12876afc79dda,2016-08-26 04:32:45+00:00,"Security group call back need cascading delete the related rules

Currently we only pass the group id to event callback when deleting, but
this is not sufficient for ODL which don't maintain the relationship
between sg and its rules.
Because some rules added into SG still exists and need be cascading
deleted, like what did in DB.  Both AFTER_DELETE and PRECOMMIT_DELETE
events in SG deleting have the similar problem.
This patch adds the rules into SG when send delete event for SG.

Co-Authored-By: Manjeet Singh Bhatia <manjeet.s.bhatia@intel.com>
Change-Id: If66b78243c55aefa57cc4975a6f8ea4d05dc6afa
Close-Bug: #1557976"
676770ba759c9ab41461b337847d1b47e2319fae,2016-08-26 00:50:25-06:00,"Implement check_vlan_transparency to return True in L2population mech driver

As the L2population mechanism driver does not impact VLAN transparency
support, this patch overrides the check_vlan_transparency method from
the MechanismDriver base class and returns 'True', In this way,
inclusion of the L2population mechanism driver in the list of configured
mechanism_drivers does not prevent the creation of VLAN transparent
networks.

Change-Id: I8b26e899180544e2ad49ef470b9624015fd4d5de
Closes-Bug: #1611920"
8473489bc2584ffe5fe35dbba646d6c1982e0881,2016-08-26 08:51:46+00:00,"Fix indent

Change-Id: I7eff164c882f6a43ad1b9ea663c30c7727e7ac2b
Closes-bug: #1617164"
0d96b9b43cdfb6f354241f8147b0e1604aa04ec4,2016-08-26 08:20:58-04:00,"Fix passing error physical network for get_mtu

The network's physical network should be used to get the network's mtu.

Change-Id: Ib68cf7a64332c6a4b3df7b5d0a41922421b58dba
Closes-bug: #1617284"
2618726458d2cb75a39521bf9fd71c6bfd1c0c67,2016-08-26 13:24:26+00:00,"functional: Make trunk tests more robust

New methods for connection tester are introduced in this patch. They
send certain amount of icmp packets and then compare the results, so we
succeed in positive tests only when all packets were replied. We succeed
in negative tests only when all packets were lost. Both approaches are
wrapped by actively waiting for successful result so we don't fail in
case where we test connectivity while resources are not wired yet.

This change is a followup to https://review.openstack.org/#/c/335536/ to
improve stability of its functional tests.

Closes-Bug: 1617319

Change-Id: I907ebd790f4ba3b4ecb0dce711c9f7d2c5244765"
fdf66024d38276f6eed111973127e1008ca68326,2016-08-26 18:10:28+00:00,"Deprecate allow_sorting and allow_pagination options

There is no technical reason to disable sorting and pagination, except
maybe performance concerns. But there are other ways to DoS-attack
neutron-server services, like... any other type of request. So the
concern is moot.

Keeping those options available for configuration reduces compatibility
between Neutron installations. It's better to do the right thing, and do
it right, implementing the feature for the benefit of API users.

DocImpact Update configuration documentation to reflect deprecation.

Change-Id: Iad26221a58589b10381f1a0d69a88c92fb5adeee
Related-Bug: #1566514"
753f4ea70f9c491f608daff8dbf36c6627c9bba2,2016-08-26 23:20:59+00:00,"Not check subnet with dhcp disabled when get_isolated_subnets

[1] will only return subnets with dhcp enabled for dhcp agent. If there
is subnet with dhcp disabled in network, and the subnet is attached to
router, exception can be observed as bug described.

The fix here will just check the subnets that are in network in
dhcp-agent, when call get_isolated_subnets.

[1] http://git.openstack.org/cgit/openstack/neutron/tree/neutron/api/rpc/handlers/dhcp_rpc.py#n141

Change-Id: I5e816c48d25efda9ea349210316c8f1ea5bdbcac
Closes-bug: #1582583"
ab61970644086de392f12d6d6a054ca85fb6e5d7,2016-08-26 16:36:20-07:00,"Make addbr safe to bridge add races

This makes the code that constructs a bridge safe to concurrent
additions of the same bridge.

Change-Id: I3c85731de6b6d07af54ace5f8d835f01a366f5b3
Closes-Bug: #1617447"
95ff46722d195eb894e79b08c5a6eb13082cc799,2016-08-27 08:17:42+00:00,"Wait for ovsdb_monitor to be active before use it

There is a race between ovsdb_monitor becoming active and using
ovsdb_monitor. Sometimes, code [1] will be hit at ovs-agent startup.

The fix here will block the start of ovsdb_monitor, so that the
following code to use the ovsdb_monitor will have ovsdb_monitor be
active.

[1] https://goo.gl/RJX4I5
Closes-bug: #1584647

Change-Id: I893a3b250339006f50aa003686fb95d7f2465edc"
c05751a556a9124969de991ae226380b41a56502,2016-08-27 03:28:45-07:00,"Catch InvalidInput in DHCP port actions

The exception handler checking for concurrently deleted subnets
was missing InvalidInput, which comes from IPAM when a port creation
request references a subnet that doesn't exist.

This patch just catches that exception.

Change-Id: I14f9e4bddde845e3fef2b0d8649d3954ba5c93bd
Closes-Bug: #1618187"
85ed7017ff22dd24ef7558010e62598483561354,2016-08-27 05:13:44-07:00,"Don't catch DBError in DHCP action handler

The DHCP port action handler has been catching DBErrors
since f1b9ac5a542a3125d757094fccda80c80c6dd420, which is
well before we had the retry decorator to deal with these.
With the port action handler catching these, it means there
will not be retries on deadlocks or connection errors so
transient situations can result in a permanently broken
DHCP service for a network.

This removes the catch for DBError so the decorator can retry
the operation.

Closes-Bug: #1618216
Change-Id: I42031b481958bbfdb8f52902c294022717af7adf"
0f430425218859014fe2d10b9e618b29770c6581,2016-08-27 05:44:43-07:00,"Generate new context for each DHCP RPC call

The DHCP agent was using the same context for every RPC
request so it made it difficult to tell server side where one
RPC request began and where another one ended.

This patch has it generate a new context for each RPC request
so they can be tracked independently. In the long term it would
be better if the agent kept the context for server-initiated events
so actions could be tracked end-to-end under the same request-ID.

Change-Id: I1d6dc28ba4752d3f9f1020851af2960859aae520
Closes-Bug: #1618231"
60325f4ae9ec53734d792d111cbcf24270d57417,2016-08-27 17:08:18+00:00,"Add QoS minimum bandwidth rule for instance egress traffic

This patch introduces the front end implementation for QoS
minimum bandwidth rule.

APIImpact: New type of parameter for QoS rule in neutron API
DocImpact

Change-Id: I6b619a96a2bfde164646c71409b671352bc6ce7d
Partial-Bug: #1560963"
46de63c42e7c229529c0f101c9db8c84d73f6860,2016-08-27 17:36:21+00:00,"SR-IOV: add agent QoS driver to support egress minimum bandwidth

This patch adds SR-IOV agent driver, which uses eswitch manager, to set
VF min_tx_rate parameter. This parameter defines the guaranteed minimum
bandwidth for egress traffic.

DocImpact
Partial-Bug: #1560963

Change-Id: Iefe5e698e99d186202d6ef170f84e93bfbba46dd"
3e9c943f535825c6e3a618f4924f088c35838e83,2016-08-27 22:36:09-04:00,"Use MultipleExceptions from neutorn-lib

[1] [2] are merged recently, which brings the deprecation warning. This
patch eliminates the warning.

[1] 8398ec0d771dd8e4944034ec2e658c747671de3e
[2] 9f09f27c5dca38714be3f4494752cf84299a7965

Change-Id: I94b6cbb314cf73becd1754e26b480bc8e8f3d49c
Related-bug: #1273730"
f564dcad4d8c072767ae235353a982653b156c76,2016-08-28 01:24:56-04:00,"Enable create and delete segments in ML2

[1] has been merged for Basic CRUD for segments. This patch will enable
create and delete segments in ML2.

This patch will do following things:
a) When creating a segment, reserve the segment in ML2.
b) When deleting a segment, release the segment in ML2.
c) Prevent deleting segment if it is in use.
d) Add segment_index.

[1] https://review.openstack.org/#/c/296603

Change-Id: Ie8beeccf2294f1af8baa758eba230da2de1fff28
Partially-Implements: blueprint routed-networks"
f2b33b67272962abd7d6e61ab3d2b7aca3428dc5,2016-08-28 03:59:35-04:00,"Allow SR-IOV agent to start when number of vf is 0

Remove number of vf validation from scan_vf_devices method
in the eswitch manager module, to allow the SR-IOV agent
to load when using PF passthrough.

Closes-Bug: #1614086

Change-Id: Iff5bf3a5542d5b19f45637e954a72a14402a30ae"
78554d9b35df7d8087e6e18b6e6af8335b568050,2016-08-28 17:05:39+08:00,"Add test cases for Invalid exception type

Partially-Implements: blueprint multi-l3-backends
Closes-Bug: #1612183

Change-Id: I76ab8b3a99d4459a24a8e43223e0c13654395216"
16ba1213056030661128bcb82117e5c333b03630,2016-08-29 09:31:06+00:00,"Relocate subnet_service_types db models

This patch will relocate subnet_service_types db models and
separate it from mixins for OVO implementation.

Change-Id: Iec3db14a5049920cd370297ab6282b0b070156e7
Partial-Bug: #1597913"
a2e915977a26278b272020b5c0dbd17f3e793004,2016-08-29 10:01:16+00:00,"Relocate Flat Allocation DB model

Since there would be a circular import issue once we try to
implement an object relying on the model, and adopt it in tree
for database accessing code, this patch prepares the ground for
this work by moving the model out of database accessing
modules into neutron/db/models.

Change-Id: I7876d28d35c5c4b9167520733e1a1b08dabc6951
Partial-Bug: #1597913"
9a5eb4aefda860e29eb808c8e8a2444c611c7dce,2016-08-29 11:34:51-04:00,"Handle fullstack oslo deprecations

Change-Id: I384179c6333e6aac135820943d31d67e1547fe0d
Closes-Bug: #1618103
Closes-Bug: #1618111"
8fdc430e62e8f575499940ea73225d842db3927a,2016-08-29 08:42:03-07:00,"Auto allocation: ensure that networks and subnets are cleaned up

In the event of a router create failure we need to make sure that
the allocated resources are cleaned up.

When router allocation fails it is difficult for an admin to
understand the root cause. Adding the exception here will provide
a little additional information.

Closes-bug: #1617707

Change-Id: I41940bea0327ee31494bd95867d0e60d9b5a24b8"
25f5912cf8f69f18d111bd60a6cc6ee488755ff3,2016-08-29 19:31:22+03:00,"Check for ha port to become ACTIVE

After reboot(restart of l3 and l2 agents) of the node routers
can be processed by l3 agent before openvswitch agent sets up
appropriate ha ports. This change add notification for l3 agent
that ha port becomes ACTIVE and keepalived can be enabled.

Closes-bug: #1597461

Co-Authored-By: venkata anil <anilvenkata@redhat.com>

Change-Id: Iedad1ccae45005efaaa74d5571df04197757d07a"
34e51cad42960bdb08a92d1a60a33594bdf057ba,2016-08-29 10:52:24-07:00,"DVR: Cleanup the stale snat redirect rules in router namespace

After the stale snat namespace is deleted the snat redirect rules
in router namespace should be cleaned.

Here we are basically reading the ip rule from the router namespace
and just cleaning up all the snat redirect rules leaving the default
ones untouched.

Change-Id: Ic505a46e56d9e950bd36a1596d3f1adfb5ef5577
Closes-Bug: #1599287"
a2dc3c35e3d35c6a5f2099fee819e87b4fa216e9,2016-08-30 11:27:55+00:00,"Add new configuration test in sanity check: vf_extended_management

This test will check if 'ip link' version installed in this server
supports extended VF management parameter 'min_tx_rate'. This
parameter set the minimum egress rate for an interface.

This test is executed when SR-IOV back-end and QoS extension
are enabled.

DocImpact
Partial-Bug: #1560963

Change-Id: Ie9334f4ad2f6b047bf56689edf3333a8a612364a"
ccc20ddcf21da30436f578583aee176d871ebb65,2016-08-30 17:06:50+05:18,"Use plugin obj from neutron manager in the TestMl2PortsV2 unit test

Commit Iedad1ccae45005efaaa74d5571df04197757d07a is recreating
the plugin for the test
TestMl2PortsV2.test_update_port_status_notify_port_event_after_update.
This is failing for the networking-ovn ML2 plugin.

This patch uses the manager.NeutronManager to get the plugin object.

Change-Id: Id48b621eeb9ded5d25c8cbbabbff32d821bd6181
Closes-bug: #1618343"
7913798a2cc6717fa3e586b044801e7266b3ffc3,2016-08-30 19:49:09+08:00,"Use method get_ipv6_addr_by_EUI64 from oslo.utils

Oslo.utils provides same method get_ipv6_addr_by_EUI64, let's use
it and deprecate method get_ipv6_addr_by_EUI64 in neutron.

Closes-Bug: #1597213
Change-Id: If1eda1283b4405e13ccb60dab530ce4cc1b22948"
af8ca1bca6657f7152eeb0ca55bc7f3a0aea2301,2016-08-30 14:13:19+01:00,"Retain port info from DSCP rule creation.

When a VM is deleted all info except the port number is removed.
delete_dscp_marking requires the ofport to be present.
This results in an exception being thrown when a port with
the DSCP_Marking rule attached is deleted.

This patch:
- Stores the port info when the dscp_marking rule is updated
  or created.
- Pops the stored info when the dscp_marking rule is removed
  from the port or the port is deleted.
- Expands existing unit tests for the QoS Open vswitch driver
  to cover this scenario.

Change-Id: I77f632fdc7d612267af9a4a3bf0f74288696332b
Closes-bug: #1603443"
82c134d6e06fb47ffc923880ed597bddb7a06013,2016-08-30 13:56:37-07:00,"DVR: SNAT redirect rules should be removed only on Gateway clear

SNAT redirect rules should be removed only on gateway clear and
not on gateway move or gateway reschedule to a different agent.
This would make the snat node unreachable by the dvr service
ports.

Change-Id: Icec7eabfd06825bf3b4c48f06cf5b88e0a5af06d
Closes-Bug: #1611964"
53503e7586ed3bf839759f3ebe0481e2cbf1e409,2016-08-30 17:57:43-06:00,"Remove non-pluggable IPAM implementation

Change-Id: I870106cd5e0872314e4c2f21d17b379a64427afc
Related-Bug: #1516156"
9726a00c908341654f4cdeb444adf2ce5c717b80,2016-08-30 20:42:15-07:00,"Narrow down DBError to DBReferenceError in DHCP action handler

Commit 85ed7017ff22dd24ef7558010e62598483561354 removed the DBError
handling to let the retry decorator do its magic, however the
full implications of this change were not evaluated. As a result,
DBReferenceError (which derives from DBError) is not processed
correctly and that caused a regression of the existing logic.

Rather than bloat the retry's responsibility even further, this
patch partially reverts commit 85ed7017f by narrowing down the
exception handling to DBReferenceError only.

Related-bug: #1618216

Change-Id: Icf4e5e4145dcdcdc710b8e42044467913ed01ec1"
e5155fc483048ebf365e29104a928c19403a87bc,2016-08-30 22:00:25-07:00,"Do not warn under normal network circumstances

If the network has no segment associated at a particular
point of its lifecycle, there is no need to emit a warning,
as the operator can do very little with the information
given.

Change-Id: I1263be60c3d73f7825596f5e8e7b918d8076f537
Closes-bug: #1618694"
03c412ff011a8d4e86afbada24db675028861728,2016-08-31 19:19:16+00:00,"split out l3-ha specific test from TestMl2PortsV2

split out test_update_port_status_notify_port_event_after_update
from ml2.test_plugin.TestMl2PortsV2 into TestMl2PortsV2WithL3

The change set of 25f5912cf8f69f18d111bd60a6cc6ee488755ff3
change id of Iedad1ccae45005efaaa74d5571df04197757d07a
introduced a test,
test_update_port_status_notify_port_event_after_update, that is valid
only when l3 plugin support l3-ha. Such assumption isn't always true
depending on actual ml2 driver.
Since test cases in ml2.test_plugin is used as a common base for
multiple drivers,
test_update_port_status_notify_port_event_after_update, may or may not
pass. So split out tests with very specific assumption into a new
dedicated testcase so that each driver can safely reuse tests in
tests/unit/plugin/ml2 based on their characteristics.

Closes-Bug: #1618601
Change-Id: Ie81dde976649111d029a7d107c99960aded64915"
5e4204804ea4b364d27d014d13ecb529bc370ea6,2016-08-31 14:53:55-05:00,"Mock call to sysctl for test_get_free_namespace_port

The code under test shouldn't execute local commands for multiple
reasons (eg the command doesn't exist on the test system), so mock out
the execution of sysctl in test_get_free_namespace_port (copying the
code from test_get_unused_port).

Change-Id: I58aa578274310ae2ca015069f99edb84716fb0b5
Closes-bug: #1619028"
85bbeedbe0a83b42771258f117f2db9befa0a9d8,2016-08-31 20:11:13+00:00,"qos: require min_kbps parameter for minimum bandwidth rule

It does not have much physical sense to have a rule without the limit set, just
direction. Require the parameter to avoid creating rules without the limit.

Change-Id: I13c54be22f35ac7eb5835d8424a919d0b61a8e95
Partial-Bug: #1560963"
cd80ae6e42e31d6c5dd6f7a296d0ae0d3a3e4ae0,2016-09-01 13:25:24+00:00,"Truncate microseconds before DB insertion

During the development of patch [1], it became apparent
that the DB was rounding the microseconds part of a datetime
object. This caused inconsistencies between what would be
stored in the DB and what was returned to the user via the
API because the API uses strftime.

For an example, see the INSERT statement on L1-L2 and then
the subsequent retrieval of the same record on L43 of [2].
The microseconds were rounded up even though the mysql docs
say they will be truncated.

In order to ensure consistency across SQL drivers, backends,
and our API, this patch adds a TruncatedDateTime object which
truncates off the microseconds before they go into the database.

1. I78b00516e31ce83376d37f57299b2229b6fb8fcf
2. http://paste.openstack.org/show/565116/

Closes-Bug: #1619299
Change-Id: I47d5ad5a5cdc0cb0d61f0642616cccc8f341ed62"
e5339b4a3d79693a09e19322ebc804b5e1c765ec,2016-09-01 06:48:17-07:00,"Ignore extra subnet IPs in DHCP agent

When the DHCP agent requests a port from a server, it asks
for fixed IPs from specific subnets. However, if the server
is doing auto ipv6 addressing, it may give it an extra IP
it never asked for. The previous logic was not expecting this
so it would fail to correctly setup the DHCP port.

This patch just ignores any IPs on subnets the DHCP agent
isn't servicing.

Closes-Bug: #1618674
Change-Id: I1c26c85520258b751fa98eee326bc2acd2a16860"
2d67b68cc41e16914a2007ab3883a5c9995d1cd3,2016-09-01 17:02:38-04:00,"Fix AddrFormatError in DHCPv6 lease release code

A change that merged recently for DHCPv6 lease release
did not have the correct format for the lease file in
the unit test, so we started seeing these today from
the functional tests:

AddrFormatError: failed to detect a valid IP address from '[2003::2]'

We have to strip the brackets from IPs read from the
lease file.

https://review.openstack.org/#/c/301747/ was the culprit.

Closes-bug: 1619463

Change-Id: I0964fe9d00f8f3922041b12c352449e943b8f251"
c7369483557e23782d2ec293d548bc96cd729934,2016-09-02 00:51:27-06:00,"Make L3 agent use different request-id for each request

Generate a new context object request-id for each reference
to self.context. This allows easier tracking of requests
in logs.

This is the L3 agent equivalent fix of
I1d6dc28ba4752d3f9f1020851af2960859aae520.

Related-Bug: #1618231
Closes-Bug: #1619524
Change-Id: I4a49f05ce0e7467084a1c27a64a0d4cf60a5f8cb"
b1ec8d523d4c45616dd71016f7e218b4b732c2ee,2016-09-02 11:17:47+00:00,"Add binding_index to RouterL3AgentBinding

The patch proposes adding a new binding_index to the
RouterL3AgentBinding table, with an additional Unique Constraint that
enforces a single <router_id, binding_id> per router. This goes a long
way into fixing 2 issues:

1. When scheduling a non-HA router, we only use binding_index=1. This
   means that only a single row containing that router_id can be
   committed into the database. This in fact prevents over-scheduling of
   non-HA routers. Note that for the HA router case, the binding_index
   is simply copied from the L3HARouterAgentPortBinding (since they are
   always created together they should always match).

2. This sets the ground-work for a refactor of the l3 scheduler - by
   using this binding and db-based limitation, we can schedule a router
   to agents using the RouterL3AgentBinding, while postponing the
   creation of L3HARouterAgentPortBinding objects for the agents until
   they ask for it (using sync_routers). This will be a major
   improvement over todays ""everything can create
   L3HARouterAgentPortBinding"" way of things).

Closes-Bug: #1535557
Change-Id: I3447ea5bcb7c57365c6f50efe12a1671e86588b3"
e2fdeefd37314d3e6c5910fcc7070de34561ec44,2016-09-02 15:37:23+00:00,"Deal with unknown exceptions during auto allocation

Uncaught exceptions in the core or L3 plugin layers can cause the
auto_allocate plugin to fail unexpectedly. This patch ensures that
any unexpected error is properly handled by cleaning up half
provisioned deployment.

Related-bug: #1612798
Closes-bug: #1619497

Change-Id: I3eb9efd33363045f7b2ccd97fe4a48891f48b161"
44de48a442ab21a84af37ad727c34ec88570ad3d,2016-09-02 16:32:51+00:00,"Remove workaround for bug/1543094

Bug which caused DB exceeded retry limit is solved.

Change-Id: Ie7b7d994d7443a9575fad0b322683c4f3009d139
Related-Bug: #1543094"
6865f4d9f22d5daa2f07ff9651c2280aed489c8c,2016-09-02 18:42:25+00:00,"macvtap: Mech driver detects invalid migration

As of today, Macvtap agent allows invalid live migrations
from a host with interface mapping 'physnet1:eth1' to a host
with mapping 'physnet1:eth2'. Migration places the macvtap on
the target on 'eth2' instead of 'eth1'. This fix detects
such a migration in the mech driver and lets the portbinding fail.

Nova will put the instance in error state. The instance might
still be able to access the wrong network it migrated to, as
today there is no communication to the agent after a failed binding
after a migration. But at least the user is now aware that
something went wrong.

Change-Id: I92cd6411fe88483b921c92f219afa8e846cc0137
Depends-On: Ib1cc44bf9d01baf4d1f1d26c2a368a5ca7c6ab68
Partial-Bug: #1550400"
ae09911c0170928873a1827b10a7d2fe66333779,2016-09-05 00:55:09+00:00,"Disallow specifying too long description for meter-label

Change-Id: Ifece06cb7d041b155296cee04f794601736d6952
Closes-Bug: #1609727"
c68d4c45d6c56da768368e82310172a25202ae7c,2016-09-05 01:24:52-07:00,"QOS-DB: remove deprecation warning

Commit 60325f4ae9ec53734d792d111cbcf24270d57417 used the depracted
models_v2.HasId.

Change-Id: I69dcaf740a782a370923e0022607518358456503
Closes-bug: #1620220"
0494f212aa625a03587af3d75e823008f1198012,2016-09-05 13:22:56+03:00,"ovsfw: fix troublesome port_rule_masking

In several cases port masking algorithm borrowed
from networking_ovs_dpdk didn't behave correctly.
This caused non-restricted ports to be open due to
wrong tp_src field value in resulting ovs rules.

This was fixed by alternative port masking
implementation.

Functional and unit tests to cover the bug added as well.

Co-Authored-By: Jakub Libosvar <libosvar@redhat.com>
Co-Authored-By: IWAMOTO Toshihiro <iwamoto@valinux.co.jp>

Closes-Bug: #1611991
Change-Id: Idfc0e9c52e0dd08852c91c17e12edb034606a361"
29cec0345617627b64a73b9de35c46bccdc4ffa3,2016-09-06 09:52:52+03:00,"l3 ha: don't send routers without '_ha_interface'

Change I22ff5a5a74527366da8f82982232d4e70e455570 changed
get_ha_sync_data_for_host such that if an agent requests a router's
details, then it is always returned, even when it doesn't have the key
'_ha_interface'. Further changes to this change tried to put this check
back in (Ie38baf061d678fc5d768195b25241efbad74e42f), but this patch
failed to do so for the case where no bindings were returned (possible
when the router has been concurrently deleted). This patch puts this
check back in.

Closes-Bug: #1607381
Change-Id: I047e53ea9b3e20a21051f29d0a44624e2a31c83c"
774792681de922c4f1c4788894da8c10da47f67c,2016-09-06 17:35:12+00:00,"Remove availability range code and model

These models are effectively obsolete [1] and should've been removed
in a previous patch [2] but some of it was left behind.

[1] https://review.openstack.org/#/c/292207
[2] https://review.openstack.org/#/c/303638

Change-Id: Ib381c24f37e787b4912e28d98ec77473c0448c2b
Related-Bug: #1543094
Closes-Bug: #1620746"
3756bc510526531e3442da6d825cc90f44faa355,2016-09-07 03:50:27-07:00,"Convert OVO fields to primitives for to_dict()

to_dict() is used for conversions of OVO objects into
regular dictionaries to be used as plugin return values
to the API layer, etc. It provides the equivalent of
make_<resource>_dict that we use now (without the extension
processing). The values in these dictionaries should be
ready for representation in the API.

The issue was that the OVO to_dict() implementation was
placing complex types right into the dictionary which
would mean that the API would serialize them just by
calling str() on them (as part of json encoding). This
ignored the 'to_primitive' method defined on the OVO
type that defines how a field should be converted.
Therefore, when it came to timestamps to_dict() was
placing native datetime objects into the dictionary
which would convert to microsecond resolution, violating
the expected format of the OVO DateTime type.

This patch fixes the issue by calling 'to_primitive'
on each non-synthetic field in the to_dict() method
to ensure we match the expected format of the type before
we send it out the API.

Closes-Bug: #1620254
Change-Id: Ic0be54b1d4b23119e1458d4532e2f70bff0ff9f6"
5d597367cfc89267793db0e861aa885044ac8f71,2016-09-07 05:22:40-07:00,"Except if tracked resource registered as countable

If a resource was registered in the quota engine before
being set as a tracked resource, it would have been registered
as a CountableResource instead of a TrackedResource.

This would cause a failure later when the resources were
being unregistered because the quota engine thought it
should have been a TrackedResource and tried to call
unregister_events on it.

This patch just prevents resources from being registered
as both types. It also callse unregister_all_resources as
part of the standard test case cleanup since the vast majority
of tests are using a plugin that may register resources.

Closes-Bug: #1612222
Change-Id: I8a40f38d7c0e5aeca257ba62115fa9b02ad5aa93"
72c3398dfe865f65eb6ccf642174769784c74cca,2016-09-07 15:43:01+00:00,"Include timestamps in trunk API test comparisions

Related-bug: #1620254

Change-Id: Ied857791c5ee1013e27efd642b7fa271ae683ff4"
fef301979eefad717f185170bb5f7ee2ed365aaf,2016-09-07 18:18:28-07:00,"Don't return ext net DB object in auto allocate

Returning a DB object for the external network and passing
that to the create_router operation makes the life of the
DB object transition many operations. If any of those operations
detech it from the session or expire it, it can result in
an exception down in the router operations.

This patch just returns the network ID since that's all we need.

Closes-Bug: #1616126
Change-Id: Ib9c4ba9f00ca7f7a713a89be4f75a230b086ac38"
a9c3b7ef08a34b27b63a12cfbd5798d13b083fc1,2016-09-08 02:12:40+00:00,"Add a composite unique key to floatingip table in Neutron database

This patch set avoids associating multiple floating IPs to one fixed_
ip_address on one internal port when commands are executed concurrently
by adding a composite unique key between floating_network_id, fixed_port
_id and fixed_ip_address in floatingips table in Neutron database.

This implies the following 2 use cases are allowed/supported in Neutron:
1. one port_id with different fixed_ip_address(es) can associate with
floating_ip_address(es) from the same floating_network_id [1]

2. same fixed_ip_address can associate to same floating_network_id, as
long as they are on different ports, because different internal networks
could be using the same IP ranges.

[1] https://bugs.launchpad.net/neutron/+bug/1057844

Change-Id: Ie8f3ec1b23c14f36992886510c3114cf956769d4
Closes-Bug: #1534445"
a5f78b30149b44f858ed98ab8a83608c206d3de9,2016-09-07 20:10:16-07:00,"Reduce the number of debug traces emitted by registry callbacks

The tool has become popular beyond my wildest expectations. A typical
run in the gate at debug level yields more than 20K traces in the
neutron-server alone. However, reducing the number of traces is
beneficial across the board and that's the first attempt at bringing
the size of Neutron logs closer to other services'.

Partial-bug: #1620864

Change-Id: I2576e59961ec8928ad71d778253b2d37d470d909"
b91fbdea73afc2a8f0234077d65308864d4737c0,2016-09-07 22:07:41-07:00,"Detect DBReferenceError when deleting flavor

The flavor framework currently has a TODO where the logic
to ensure the flavor isn't in use should be. Implementing
this logic will be a bit complicated this late in the cycle
since many different services can depend on the flavor.

For now we can at least catch the DBReferenceError when trying
to delete the flavor and convert it into the FlavorInUse
exception.

This leaves some notes inline about how we might go about
implemented the _ensure_flavor_not_inuse function.

Change-Id: I6bfe61645c6cee002020a507e489c3535d5026ab
Closes-Bug: #1621281"
0c410a855625b0ec1446472a23002ac96f81d320,2016-09-07 23:28:52-07:00,"DHCP: device manager: two new methods - plug and unplug

This enabled decomposed plugins to overwrite methods
from the base class.

An example for this is the simple DVS plugin. Here the plugin
does not require an agent to configure the OVS. This can be
wired directly. An example of this usage is at:

https://review.openstack.org/349248

Closes-bug: #1621043

Change-Id: Iee2bdfc544c2a029df8accaab1a167e42e7b13d4"
047c0b5293f7d63279159343185ce183afaa3574,2016-09-08 12:50:48+00:00,"Ensure UnknownProvisioningError can be printed

Implement __str__ to show the underlying error during log
traces.

Change-Id: I829d787ba0d8666b09abc0307abb47fe9699c247
Related-bug: #1612798"
17005132d1b17d608077090573c50af591afe670,2016-09-08 12:59:26+00:00,"Rollback port after failed to add it to router

After failed to add port to a router, we cannot re-use and/or delete
this port.

With concurrent requests occuring, neutron will accept one request
and the other will be rejected with an 'overlapped CIDR' message.
Patch [1] fixed the race condition, but neutron raises
'Port already has an attached device' instead of
'overlapped CIDR', because neutron didn't cleanup the port when
the request was retried.
[1] https://review.openstack.org/#/c/303966/

This patch is needed to fix the bug completely. We will catch any
exception when adding an interface by port to a router. After that,
we rollback this port to its original state.

Change-Id: Ib68aee164a3062648fc882012d57b5e381f52196
Closes-Bug: #1535549"
7b4350a4cb6da34b92deb578a0af837bcf14e023,2016-09-08 13:00:07+00:00,"Don't use nested transaction in provisioning blocks

Relying on duplicate entries for existing provisioning
block detection led to lots of log noise whenever we
would encounter a deadlock because the savepoint would
go missing. Additionally, since this would happen inside
of another transaction, we couldn't be guaranteed until
the final commit that this was unique anyway so the whole
transaction could throw a duplicate exception.

Since the outer transaction has to handle duplicate exceptions
anyway, this patch just adjusts the logic to check for the
existing of a record first with a regular query. If there
is a race the outer transaction will still fail with a duplicate
as before, but we at least won't have a bunch of missing savepoint
exception noise.

Closes-Bug: #1613759
Change-Id: I02d30427505591e24d7bdc1ba654d3757ab9a33d"
841ce4837719cc210ba060f5f2eaa7568d7c3c46,2016-09-08 16:47:55+00:00,"Use correct exception in L3 driver controller

The driver controller was using Invalid instead of InvalidInput
for validation errors. This was being converted to a 500 instead
of a BadRequest. This patch corrects it to use InvalidInput.

Change-Id: I8f4913fe8f98580a925d3f5b80ad0353e4c9636f
Partial-Bug: #1621430"
26e9105b62feca0267081dd15d22a0d984d7998a,2016-09-08 13:17:28-07:00,"Neutron versions api now has its own middleware pipeline

This patch exposes the root (version) resource to CORS-enabled
browser clients that wish to perform API version discovery. It
does this by creating a new composite pipeline for the neutronversions
app, adding the already-existing CORS middleware into the chain.

This feature is required for js-openstack-lib, and its devstack
tests. https://review.openstack.org/#/c/366905/

Change-Id: I6611839f38d553fc29c813a4b8d874fde77b8034
required-by: Ia2f59213eedf6d7acbb02789ee921c13ff391d09"
286b55f3bfdeb28d5cf436f2f3672b2e99ee2656,2016-09-08 20:18:27+00:00,"devstack: fix kernel version matching to detect ovs compilation support

The previous check was mistakenly not matching for 3.4+ kernels that
support compilation.

The ovs 2.5 version delivers stability fixes, apart from features.
That's why the fix is expected to fix recent gate failures we started to
see.

Change-Id: I21749a59a040abc8b9f6a6a6c69f3fa96515962f
Closes-Bug: #1621789"
09c87425fa028dbe669e8c215e334297ccbf1c2a,2016-09-08 14:07:08-07:00,"Prepare retry decorator to move to plugin level

Retrying mutating operations at the API layer caused a
couple of problems. First, when components would call
the core plugin using the neutron manager, they would
have to handle the retriable failures on their own or
undo any work they had done so far and allow retriable
failures to be propagated up to the API. Second, retrying
at the API makes composite operations (e.g. auto allocate,
add_router_interface, etc) painful because they have to
consider if exceptions are retriable before raising
fatal exceptions on failures of core plugin calls.

This patch begins the process of moving them down to the
core operations with a new decorator called
'retry_if_session_inactive', which ensures that the
retry logic isn't triggered if there is an ongoing transaction
since retrying inside of a transaction is normally ineffective.
Follow-up patches apply them to various parts of the code-base.

Additionally, the args and kwargs of the method are automatically
deep copied in retries to ensure that any mangling the methods
do to their arguments don't impact their retriability.

Finally, since we are leaving the API decorators in place for now,
the retry logic will not be triggered by another decorator if an
exception has already been retried. This prevents an exponential
explosion of retries on nested retry decorators.

The ultimate goal will be to get rid of the API decorators entirely
so retries are up to each individual plugin.

Partial-Bug: #1596075
Partial-Bug: #1612798
Change-Id: I7b8a4a105aabfa1b5f5dd7a638099007b0933e66"
26d8702b9d7cc5a4293b97bc435fa85983be9f01,2016-09-08 22:30:16+00:00,"l2pop fdb flows for HA router ports

This patch makes L3 HA failover not depended on neutron components
(during failover).

All HA agents(active and backup) call update_device_up/down after wiring
the ports. But l2pop driver is called for only active agent as port
binding in DB reflects active agent. Then l2pop creates unicast and
multicast flows for active agent.
On failover, flows to new active agent is created. For this to happen -
all of database, messaging server, neutron-server and destination L3
agent should be active during failover. This creates two issues -
1) When any of the above resources(i.e neutron-server, .. ) are dead,
   flows between new master and other agents won't be created and
   L3 Ha failover is not working. In same scenario, L3 Ha failover will
   work if l2pop is disabled.
2) Packet loss during failover is higher as above neutron resources
   interact multiple times, so will take time to create l2 flows.

In this change, we allow plugin to notify l2pop when update_device_up/down
is called by backup agents also. Then l2pop will create flood flows to
all HA agents(both active and slave). L2pop won't create unicast flow for
this port, instead unicast flow is created by learning action of table 10
when keepalived sends GARP after assigning ip address to master router's
qr-xx port. As flood flows are already created and unicast flow is
dynamically added, L3 HA failover is not depended on l2pop.

This solves two isses
1) with L3 HA + l2pop, failover will work even if any of above agents
   or processes dead.
2) Reduce failover time as we are not depending on neutron to create
   flows during failover.
We use L3HARouterAgentPortBinding table for getting all HA agents of a
router port. HA router port on slave agent is also considered for l2pop
distributed_active_network_ports and agent_network_active_port_count

Closes-bug: #1522980
Closes-bug: #1602614
Change-Id: Ie1f5289390b3ff3f7f3ed7ffc8f6a8258ee8662e"
7f1caa1310872bbbc35a3277c9db82a3376ef3ca,2016-09-08 19:02:37-04:00,"Add missing index on inserted_primary_key in migration

MySQL doesn't seem to care, but Postgres and MariaDB barf on it.

Also add a test with data for this migration.

Change-Id: Ie464a65b291e5974a23e9b45de1654709092b4ad
Closes-Bug: #1621490"
d46756a27be9084f72df7d51f78945c33b388ad8,2016-09-09 01:47:01-07:00,"Add sanity pings to restart tests to ensure connection

This adds sanity pings to the functional agent restart tests
to make sure there is actual connectivity between the two namespaces
before starting the restart exercise. This helps distinguish
whether a failure is because of a setup issue or because of
the restart process.

Change-Id: Id64ce49597b7e62e065f840a1372a930ce558e38
Partial-Bug: #1621789"
a74cd2f7798413f8da323390213a21fab148b5e4,2016-09-09 09:00:10+00:00,"Mark agents db mixin operations retriable

Marks the CRUD operations in the agents DB mixin as
retriable.

Change-Id: I1310d85daa29906b18d083e33a11a8b1463c0ad7
Partial-Bug: #1612798"
7317b8c95b59b709ed11cfd4021aeaa2e9c71e88,2016-09-09 09:00:23+00:00,"Add retry decorator to RBAC module

This protects the RBAC operations with the retry decorator.

Change-Id: Iac507483157b4cae34f11fee4eb977e718131f15
Partial-Bug: #1612798"
a4ccc0ce1cbbd37cb3a2e17432b684557fa51b30,2016-09-09 09:00:48+00:00,"Move retry decorator in auto allocate

No longer necessary on cleanup since individual plugin operations
are protected but it should be on _ensure_network_default_value
callback since it can happen outside of a transaction.

Partial-Bug: #1612798
Change-Id: Iab4f2216e6b138296e8245eb0b1e3e6b5e46561b"
dfbc809169da9af7dfc2421244d188caadcada05,2016-09-09 05:12:03-07:00,"Use singleton for Nova notifier

By adding a singleton getter method and using it in the places
that use nova notifiers, we ensure that only one object exists
so all callers share the same batching queues and the sqlalchemy
events will only be fired once.

Change-Id: I89752d9c69feb578f0294339aae1a5cf51ec124b
Closes-Bug: #1622503"
7ff0a50ed9ea0de2b8bfb0821a4ae83ac6ac8ddd,2016-09-09 07:31:47-07:00,"Downgrade binding skip in mech_agent

When multiple mech drivers are loaded, it's very common to
have on not find agents on a host, we shouldn't emit a warning
in this condition. The mechanism manager will log an error if
there is an actual failure to bind a port.

Change-Id: Icb643f6ffc6699579394d1e5d42f7bbfdcad6de4
Closes-Bug: #1622559"
2fe2efc55db4cffe90dd284cb074de81e0efbd4e,2016-09-09 07:52:57-07:00,"LinuxBridge: Pass host into get_devices_details_list

Pass the host into get_devices_details_list on the linux bridge
agent so the debug logs on the server side don't show ""host None"".
This is mainly just for cosmetics and consistency with the OVS agent
since the only thing the host is really used for on the server side
is special treatment of DVR ports, which does not currently apply
to linux bridge.

Change-Id: I700fa26982bdb087cf7ea4b3eb69aec2f2e099c8
Closes-Bug: #1622566"
c8f208c4656f4252dba0719558e5b476d337b126,2016-09-09 19:30:30+00:00,"Make optional the validation of filters

This fix covers the cases where it's required to be
flexible in the validation of unknown filters.

Change-Id: I1becad77d48556181c5667ad06b2971b8b8517b2
Partially-Implements: blueprint adopt-oslo-versioned-objects-for-db
Closes-Bug: #1622672"
493be3e11c35e075569ad1862b679798a328018c,2016-09-09 15:19:55-07:00,"Fix sudo errors in test__set_trunk_metadata_with_None_params

Mock out the entire bridge rather than set_db_attribute.

Change-Id: Ia6c112fc8aac1ec8a5397fcb80eedd0a430d2fbb
Closes-bug: #1622029"
3e25ee3e28e1832b8eb0474db1e980b75f377df1,2016-09-10 06:50:14+08:00,"Add sg_id in the AFTER_DELETE event of sg_rule delete

In the AFTER_DELETE of sg_rule delete, the sg_rule is actually deleted.
This makes it impossible/hard to know which sg is affected.

This patch add the sg_id in the event. And this patch will be used in [1].

[1] https://review.openstack.org/#/c/367718

Change-Id: Ibdef6a703913b74504e402d225b1a0dffadb7aff
Closes-Bug: #1621698"
b4b12f7ace84bbd62b3365ef05e712d178a1de18,2016-09-09 18:47:38-07:00,"Defer setting 'ha'/'distributed' flags in L3 code

Both DVR and the HA code were setting the 'ha' and 'distributed'
flags in the API body before it was being sent into the core L3
code. This meant that it could not distinguish between
user-requested flags and config-defaults, which is important for
flavor validation.

This patch just adjusts it so they aren't set until after the core
create method is called.

Long term these will be refactored to live in their corresponding
driver anyway and will not need to be responsible for setting these
flags to get them stored in the DB.

Closes-Bug: #1621430
Change-Id: I9945920d5540653cf5b86e8f1a2ba7b073595921"
10ada71486db33c6cb69f35811d0ca3dc547eff0,2016-09-10 03:53:17+00:00,"objects: expose database model for NeutronDbObject instances

Sometimes object users need access to corresponding models that are used
to persist object data. While it's not encouraged, and object consumers
should try to rely solely on object API and fields, we should fulfill
this special need, at least for now.

One of use cases to access the corresponding database model are
functions registered by plugins to extend core resources. Those
functions are passed into register_dict_extend_funcs and expect the
model as one of its arguments.

Later, when more objects are adopted in base plugin code, and we are
ready to switch extensions to objects, we can pass to those functions
some wrappers that would trigger deprecation warnings on attempts to
access attributes that are not available on objects; and then after a
while finally switch to passing objects directly instead of those
wrappers. Of course, that would not happen overnight, and the path would
take several cycles.

To avoid the stored reference to the model to influence other code
fetching from the session, we detach (expunge) the model from the active
database session on every fetch.  We also refresh the model before
detaching it when the corresponding object had synthetic fields changed,
because that's usually an indication that some relationships may be
stale on the model.

Since we now consistently detach the model from the active session on
each fetch, we cannot reuse it. So every time we hit update, we now need
to refetch the model from the session, otherwise we will hit an error
trying to refresh and/or detach an already detached model. Hence the
change in NeutronDbObject.update to always trigger update_object
irrespective to whether any persistent fields were changed. This makes
test_update_no_changes test case incorrect, hence its removal.

Due to the way RBAC metaclass works, it may trigger cls.get_object in
the middle of object creation (to validate newly created RBAC entry
against the object). It results in duplicate expunge calls for the same
object model (one during object creation, another when fetching the same
object to validate it for RBAC). To avoid that, switched RBAC code from
objects API to direct objects.db_api.get_object calls that will avoid
triggering the whole model expunge/refresh machinery.

Now that we have models stored on objects, the patch switched back
plugin code to passing models in places where we previously, by mistake,
were passing objects into extensions.

Specifically, the switch for allowed address pairs occurred with
I3c937267ce789ed510373616713b3fa9517c18ac. For subnetpools, it happened
in I1415c7a29af86d377ed31cce40888631a34d4811. Neither of those was
released in Mitaka, so it did not break anyone using major releases.
Also, we have not heard from any trunk chaser that would be affected by
the mistake.

There are not other objects used in database code where we would pass
them into extensions, so we should be good.

Closes-Bug: #1621837
Change-Id: I130609194f15b89df89e5606fb8193849edd14d8
Partially-Implements: blueprint adopt-oslo-versioned-objects-for-db"
2676372f261da202f41ab8e2d175be27b9405261,2016-09-10 07:11:57+00:00,"tests: don't override base object test class attributes

DNSNameServerDbObjectTestCase was overriding self.db_objs and
self.obj_fields if the attributes did not have unique order/address
fields generated by get_random_fields. But since
Id1ca4ce7b134d9729e68661cedb2f5556e58d6ff landed, we should have also
updated self.objs, otherwise test_filtering_by_fields will fail later
when it will try to find an object with attributes that were not used
when creating the object targeted by the filtering attempt.

Instead of adding the update for self.objs in the
DNSNameServerDbObjectTestCase test class, I went with an alternative
approach, getting rid of overriding logic completely. The rationale for
the path is that there is nothing wrong in duplicate address and order
field values (at least as per underlying model definition), and hence
our tests should be resilient against that kind of scenario.

So instead of comparing all fields for an object, just make sure that
the order monotonically goes up/down in the sorted result, and ignore
other fields to be strictly ordered.

Change-Id: Ic956072de5dab336f83b04bddfa9da967b2865b2
Closes-Bug: #1623425"
a7c8a825a46bf99015781d1875b926cf9668c92b,2016-09-10 08:39:50-07:00,"Emit router payload only during failures

When everything works as expected, no-one hardly pays any attention
to this log trace, which accounts for an incredible amount of log data.
This change proposes to emit the router payload only during failures
(when debugging info is needed the most), and furthermore it relocates
it to the L3 agent log files, where it is more pertinent.

Partial-bug: #1620864

Change-Id: I64281b963ba52c0a100a6194b7cafc5e9b1a8e74"
a006922bf1d10cd52e1283e85a277a10d755560d,2016-09-11 15:39:32+08:00,"Replace assertEqual(None, *) with assertIsNone

From python 2.7 onwards, some new method such as assertIsNone
equivalent to the assertEqual,this will simplify the number of
parameters.see [1] for more informaton.
[1]:https://docs.python.org/2.7/library/unittest.html#unittest.TestCase.assertIsNone

Change-Id: I2a42228cff4cdcf92c87ae0800782cbd641ff665"
bdfa3c9400afa67053cb20490bce73cdb828b063,2016-09-11 18:22:16+08:00,"Use ConfigParser instead of SafeConfigParser

SafeConfigParser supports interpolation on top of ConfigParser in
Python 2, and SafeConfigParser is deprecated in Python 3.2 and log
warning like "" DeprecationWarning: The SafeConfigParser class has
been renamed to ConfigParser in Python 3.2. This alias will be removed
in future versions. Use ConfigParser directly instead."" So we can use
ConfigParser if we don't need interpolation.

Closes-Bug: #1618666
Change-Id: Ie5d38b86bb2ba3c83c7eb541de0389c6e4dcf654"
5743ed4679d43c325c5b3a2a4955088e35018c97,2016-09-12 07:35:50+00:00,"Reduce log level for ryu in OVS agent log

In a tempest run, Ryu is logging about ~30K debug traces and it puts the
OVS agent's log amongst the biggest log files in a single node OpenStack
deployment in the gate. This patch sets Ryu and its components to log at
INFO level and above to reduce the number of traces emitted.

This patch, alongside [1,2], brings down the size of the biggest Neutron
log files, server and OVS agent respectively. More can surely be done,
however callbacks and ryu are the most obvious ones, and following up
with further cuts may be dealt with on a ad-hoc basis.

Closes-bug: #1620864

[1] https://review.openstack.org/#/c/366424/
[2] https://review.openstack.org/#/c/366478/
Change-Id: I40b7c77601788ae2e7428c7a0206ca2a807d10dc"
acbabaa3db2c12a41c52662a82e9a900d5929846,2016-09-12 07:45:38+00:00,"Make l2/l3 operations retriable at plugin level

This adds decorators to ML2/db_base_plugin_v2 and the L3
DB modules to make L2 and L3 resource operations retriable
at the plugin level.

Retrying the L2 operations in particular at this level should
go a long way to improving the reliability of complex operations
that require L2 resources in the face of deadlocks under high
concurrency.

Partial-Bug: #1612798
Partial-Bug: #1596075
Change-Id: I3c9437f7ecdd5ebb188b622144b7bd7bed74231d"
ab4ee76c8bdacb0f272328e0b4efefc3b820e5ba,2016-09-12 16:14:54-06:00,"Only do deferred ip allocation on deferred ports

Only do deferred ip allocation on ports that were originally marked as
deferred IP ports on port create.

Change-Id: Ia34bc2617f99cca73f58c9e615a8ba78e667c9b3
Closes-Bug: #1617409"
4361f7543f984cf5f09c0c7070ac6b0f22f3b6b1,2016-09-13 10:34:04+09:00,"of_interface: Use vlan_tci instead of vlan_vid

To pop VLAN tags in learn action generated flows, vlan_tci should
be used instead of vlan_vid.  Otherwise, VLAN tags with VID=0 are
left.

Change-Id: Ie38ab860424f6e2e2448abac82c428dae3a8a544
Closes-bug: #1622017"
d223bef22449db3752d57a9eb6b4915074004e32,2016-09-12 19:10:58-07:00,"Don't work with native DB port objects in DVR code

Passing around native DB records into core plugin operations
as part of the call arguments can result in detached session
errors. It's also just bad practice since the core plugin API
is expected to take regular dictionaries containing strings.

Closes-Bug: #1622824
Change-Id: I0d33c6ac9a9ceeebbd5c1179eb41aec6c991a2bf"
5902d0f174ba89ad1b467f0b01fdcd829c7d76de,2016-09-13 01:18:12-07:00,"Protect security group operations with the retry decorator

Adds the retry decorator to the security group DB module.

Partial-Bug: #1612798
Change-Id: I899ed5cacde769ecbb4057b6cb48e3624b07e149"
5f9d8887076edaf3eef132e914766ba5e7136468,2016-09-13 15:53:12+07:00,"Fix Rollback port's device_owner

From this patch: https://review.openstack.org/#/c/341427/
Sometimes, port doesn't revert device_owner to previous value
in concurrent requests case.

This patch fixes this problem and adds unit test.

Change-Id: I864a559f0316e164caa065abd75c44fae971b571
Closes-Bug: #1621750"
6e0b8c176cfc68a9e034019a0893c8c8fbf50015,2016-09-13 02:12:33-07:00,"Ensure there are fdb_entries before iterating

_get_agent_fdb may return None so we need to check for
that before we try to iterate over a key inside of it
in delete_port_postcommit.

Closes-Bug: #1622996
Change-Id: I2256df0e08380e550f32248fb9589ee43b0923ff"
951cd80c341fdc2783c8e3042a9e93becab58e36,2016-09-13 19:29:49+09:00,"Pass not IPDevice but port_name into OVSBridge's add_port()

The use_veth_interconnection config doesn't work fine because
IPDevice is passed into OVSBridge's add_port() although the method
expects port_name. This patch fixes the wrong argument.

Change-Id: I6ea3e37d857f34228c41118709b91f4407555a33
Closes-Bug: #1622850"
12420c1585abadc741440dcd48a5540ef85357db,2016-09-13 10:33:10+00:00,"Mark quota operations as retriable

This decorates the quota system operations with
the retry decorators. This will help significantly
with the bug this marks as closed since operations
in the quota engine after commit should no longer
trigger retries of the full API operation.

The logic to find the args in the decorator had
to be adjusted to deal with functions already decorated.
This just uses the getargspec function from pecan that
deals with decorated functions.

Partial-Bug: #1612798
Closes-Bug: #1596075
Change-Id: Ib786117dcea08af75551770ea4c30d460382b829"
5b7c71a327d735134fa0eeb4427d0e1bd1f7d1e5,2016-09-13 12:24:17-04:00,"Preventing iptables rule to be thrashed

When update meter label or rule, iptables_manager will update iptables
rule in router's namespace. In order to, it will clean traffic counter
number collected in interval time, the other iptables always trashing
that will clean old iptalbes rule and generate new same significance
iptables rule.

Change-Id: Ide2b26c98587258175234acded38ce481b7e7f76
Closes-Bug: #1618879"
88592970d58eeff43837a5e175bba95386a8491b,2016-09-13 13:47:13-04:00,"Remove erroneous newton milestone tag

Change https://review.openstack.org/268941 inadvertently tagged
alembic migration 3d0e74aa7d37 with the newton milestone.
Remove it.

Change-Id: I46f98a824d2a190c29fb26b62025772de2e4e33e
Partial-Bug: #1623108"
d1b9026729d085a9f986fb6c394a04b9aa5a87f6,2016-09-13 11:16:36-07:00,"Prevent duplicate LLA iptables rules

Check if lla,mac tuple is in pairs before appending
it again. Otherwise we end up generating duplicate
iptables rules.

Closes-Bug: #1622938
Change-Id: I43658a31f9853cbc94784f497193210990f769dd"
f07c07b16fb0858c45f6cef135a8d8c07a16c505,2016-09-13 13:37:44-06:00,"Don't allocate IP on port update when existing subnet specified

If a port update specifies only a subnet_id for a fixed_ip then we
want to look at existing fixed_ips to see if that subnet_id is already
there. This avoids allocating a new IP address on the subnet and
deallocating the old one.

Without some special care, this breaks the code path for prefix
delegation. One could argue that PD needs reworking. However, as a
stop-gap measure, we still run the old code path if the address is an
EUI-64 address. This allows PD to continue to work as it was
originally written and it doesn't do any harm because allocating
EUI-64 addresses is repeatable.

This commit removes a test case from the DNS integration tests. The
test was specifically testing that DNS records we updated in the case
where a subnet id was passed to re-allocate a fixed_ip. Since the use
case no longer works, the test doesn't make sense.

Change-Id: I887cd23cf65a1df9bd1d59ab897a1ecd005a588c
Closes-Bug: #1622616"
c231bfb6c4743baaa1429487621d3bf18e4f1c6a,2016-09-13 15:58:10-04:00,"Fix TypeError in sanity check logging format

The logger needs 'cap' in a replacement dict else you
get a TypeError when formatting.

Change-Id: I0bc9c8fe8f0f4e5fc44030fcc3217ccd1b485d51
Closes-Bug: #1623176"
9d24490da8552542309dc7b9d6cbc695af4c6de6,2016-09-13 18:06:59-07:00,"Handle racey teardowns in DHCP agent

Capture port not found exceptions from port updates of DHCP ports
that no longer exist. The DHCP agent already checks the return
value for None in case any of the other things went missing
(e.g. Subnet, Network), so checking for ports disappearing makes
sense. The corresponding agent-side log message for this has also
been downgraded to debug since this is a normal occurrence.

This also cleans up log noise from calling reload_allocations on
networks that have already been torn down due to all of the subnets
being removed.

Closes-Bug: #1621650
Change-Id: I495401d225c664b8f1cf7b3d51747f3b47c24fc0"
39ace4c9e3c67b89e7d42ea7b0359809fe1e0928,2016-09-14 01:33:02+00:00,"Utilize retry_if_session_inactive in dvr_mac_db

Adds the retry decorator to the DVR mac DB module and
leverages its ability to retry on DBDuplicate entries
to simplify the code.

We also add a transaction guard to make the previously
implicit assumption that _create_dvr_mac_address would
be called outside of a transaction explicit.

Partial-Bug: #1612798
Change-Id: I0c919a3f08e0be1aea4e28dc8f6d92b51de129e0"
ed8962b25fc4e215b84ff36703964193e9fcfccb,2016-09-13 22:16:40-04:00,"Tag the alembic migration revisions for Newton

This allows the database to be upgraded with the command:
  neutron-db-manage upgrade newton

Partial-Bug: #1623108

Change-Id: I5b9c02814bdc1945422184a84c49f9e67dcf24a9"
0eafa886d46c5a74f267211cf31df043c3399c60,2016-09-14 02:33:07+00:00,"Add retry decorator to provisioning blocks module

This adds the retry decorator to the provisioning blocks
module.

Change-Id: I1abc7618b5431d4c3e0b84c2d59f83f8eb5a4ffe
Partial-Bug: #1612798"
33afa82517dfe45a0e40d0f3ba738bc50bf04648,2016-09-13 23:32:23-07:00,"Capture SubnetNotFound from update_port call

In delete_subnet, we update the remaining ports with fixed_ips
of the IPs remaining from the undeleted subnets. The issue with
this is that two concurrent subnet_delete calls can result in
trying to update the remaining port with a fixed IP from a
subnet already deleted. This results in a SubnetNotFound exception,
which aborts the whole deletion.

This patch captures these exceptions and 'continues' to restart
the iteration and re-query to get the latest fixed IPs of the
ports to automatically update.

Closes-Bug: #1623422
Change-Id: I4e299217eb2aabbe572f24e4328272873369da0f"
c66e343618afe4d08f6fcd990f8a6f32d4349988,2016-09-14 00:05:13-07:00,"Disable DHCP on test_create_port_when_quotas_is_full

This test sets the quota to 1 for a tenant and creates
two ports, ensuring 1 works and one fails. This breaks
though if dhcp is enabled on the subnet and a DHCP agent
is running for the deployment because the agent will take
up a port.

This patch disables DHCP on the subnet for the test.

Change-Id: Id6b114962d7635999b8c5408e33b55b7a23243ee
Closes-Bug: #1623505"
181bdb374fc0c944b1168f27ac7b5cbb0ff0f3c3,2016-09-14 00:40:09-07:00,"Make DHCP notifier use core resource events

This makes the notifier subscribe to core resource events
and leverage them if they are available. This solves the
issue where internal core plugin calls from service plugins
were not generating DHCP agent notifications.

Closes-Bug: #1621345
Change-Id: I607635601caff0322fd0c80c9023f5c4f663ca25"
3aa89f4d818ab6705c56287b58a268e9fd5113c8,2016-09-14 22:57:56+08:00,"Refactor for floating IP updating checks

1. Will not fill the API fip updating dict with tenant_id and id
anymore, floatingip_db will be passed around functions.
We need to make the `fip` dict come from the API as it orginal is.

2. Refactor some redundant log messages for fip's port tenant_id
check and IP version check.

Change-Id: Ic45c95d90f3aecfcb731453fb3fd62e6ed92893b
Partial-bug: #1607746"
3a42143ce99cc4484368b16dd41f95b93627dc38,2016-09-14 23:01:09+08:00,"Correct floating IP extra attributes updating issues

Updating floating IP extra attributes, for instance description,
will unexpectedly disassociate it. This behavior will interrupt the
user's service traffic. And this is because that user can submit an
empty request dict (without port_id parameter) for the floating IP
updating API, and then it will be disassociated by default.
So there is no way to update the floating IP extra attributes without
changing it's association.

This patch will make updating floating IP extra attributes API works
properly.

Closes-Bug: #1607746
Change-Id: I036e473118431856550249359a22445380ef9ece"
a2bd0b4b53db8468681eb2905e2fbc2f9073869a,2016-09-14 17:02:46+00:00,"LinuxBridge: Use ifindex for logical 'timestamp'

With Xenial (and maybe older versions), the modified timestamps
in /sys/class/net/(device_name) are not stable. They appear to
work for a period of time, and then when some kind of cache clears
on the kernel side, all of the timestamps are reset to the latest
access time.

This was causing the Linux Bridge agent to think that the interfaces
were experiencing local changes much more frequently than they actually
were, resulting in more polling to the Neutron server and subsequently
more BUILD->ACTIVE->BUILD->ACTIVE transitions in the logical model.

The purpose of the timestamp patch was to catch rapid server REBUILD
operations where the interface would be deleted and re-added within
a polling interval. Without it, these would be stuck in the BUILD
state since the agent wouldn't realize it needed to wire the ports.

This patch switches to looking at the IFINDEX of the interfaces to
use as a sort of logical timestamp. If an interface gets removed
and readded, it will get a different index, so the original timestamp
comparison logic will still work.

In the future, the agent should undergo a larger refactor to just
watch 'ip monitor' for netlink events to replace the polling of the
interface listing and the timestamp logic entirely. However, this
approach was taken due to the near term release and the ability to
back-port it to older releases.

This was verified with both Nova rebuild actions and Nova interface
attach/detach actions.

Change-Id: I016019885446bff6806268ab49cd5476d93ec61f
Closes-Bug: #1622833"
424a633fd985ad517a06dee1aeec805702d2e576,2016-09-14 12:04:15-07:00,"Include timezone in timestamp fields

The Neutron 'created_at'/'updated_at' fields on API resources
were inconsistent with other OpenStack projects because we did
not include timezone information. This patch addressed that
problem by adding the zulu time indicator onto the end of the
fields.

Because this could break clients expecting no timezone, this patch
also eliminates the 'timestamp_core' and 'timestamp_ext' extensions
and consolidates them into a new 'timestamp' extension. This makes
the change discoverable via the API.

This is assuming the current API development paradigm where
extensions can come and go depending on the deployment and the client
is expected to handle this by checking the loaded extensions.
Once we decide extensions are permanent, this type of change will
no longer be possible.

Even though this is being proposed late in the cycle, it is better
to get this change in before the release where we expose even more
resources with incorrectly formatted timestamps.

APIImpact
Closes-Bug: #1561200
Change-Id: I2ee2ed4c713d88345adc55b022feb95653eec663"
a397792ff7ac03f4f021e8d7df62d04d6641aa14,2016-09-14 15:08:29-07:00,"Catch DBReferenceError in IPAM and convert to SubnetNotFound

If a subnet is removed after lookup but before IP allocation
insert, we can end up getting a DBReferenceError in the IPAM
system. Since this can occur on any flush we force a flush
with a session context manager to get the DBReference error
in a desired spot (in multi-writer galera this is a deadlock
much later, which we retry). We then convert it to SubnetNotFound,
which is an expected exception.

Closes-Bug: #1623402
Change-Id: I65632b174f8692cd465c721e285526827842a740"
25e65df7974c238517ab51ea07079ab0482ad44a,2016-09-14 21:14:09-04:00,"Fix migration of legacy router to DVR

We have to ensure ML2's create_port method is not called
in a transaction.

This adds a temporary hack to set an attribute on the context
to skip this check to accomodate an L3 code-path that has a port
creation entangled in a transaction.  This attribute will
ultimately be removed once this path is refactored.

Change-Id: I9c41a7848b22c437bedcdd7eb57f7c9da873b06d
Closes-bug: #1619312"
748faa0579056c0157d038e539610f386dd64abe,2016-09-14 20:39:41-07:00,"Revert ""Don't allocate IP on port update when existing subnet specified""

This reverts commit f07c07b16fb0858c45f6cef135a8d8c07a16c505.
This broke the ability to add fixed IPs to a port based on
subnet_id.

API test to prevent regression in child patch.

Change-Id: Ia13abea59431744ce7a0270f480f4bf61a7161e0
Closes-Bug: #1623800"
7c6071bbbc32014f6663c12c70a5ed5358fe870f,2016-09-14 20:39:43-07:00,"Add API test to ensure IPs can be added by subnet

A user should be able to request additional fixed IPs
from the same subnet they already have an IP from.
This prevents a regression from that behavior.

Related-Bug: #1623800
Change-Id: I1867963e027f8d240580ada89b540443f74ed684"
1279640da845d4f6bc6274e6706875610e179326,2016-09-15 03:04:52-07:00,"Expire DB objects in ML2 infinity loops

We must expire all DB objects in the session to ensure
that we are getting the latest object state from the DB
on each iteration of these 'while True:' loops to ensure
we don't continue forever on stale data.

Closes-Bug: #1623990
Change-Id: I2f4ea6cce5d83c13fd37650d28a7089c5aa9a4c0"
268e10ef4d3106e2bc7b4e679bcba67b4c9f0e9e,2016-09-15 09:47:40-06:00,"Raise level of message to info

We need to be able to search for occurences of this issue in the gate.
But, logstash doesn't index debug messages. So, they are impossible to
search for. Hence, raising the level to info which, I'm told, are
indexed.

Change-Id: Ie9116c362f3e3d5d424cb957dae23bdd222520fb
Related-Bug: #1609540"
31e1aeb66b2d8abb0d8424e9550693fad6f37c1c,2016-09-15 18:42:45+00:00,"Forbid importing neutron.tests.* from outside tests subtree

neutron-sanity-check tool was importing neutron.tests.base module, which
may be not present on some systems (f.e. RDO splits neutron/tests/
subtree in a separate python-neutron-tests package). It made the tool
not usable in some setups.

https://bugzilla.redhat.com/show_bug.cgi?id=1374282

This is not the first time when we by mistake import from
neutron.tests.* and break distributions. It's time to stop it by
proactively forbidding that pattern via a new hacking check.

Some functions were moved from neutron.tests.base to
neutron.common.utils to fulfill the need requirement. They were moved
using debtcollector, no current consumers should be affected.

Closes-Bug: #1621782
Change-Id: I790777ddcbd1b02218b3db54ae3d5c931d72d4fa"
a75ce6850f3954edafbb0c128750e39b57875743,2016-09-15 21:09:40+00:00,"Retry setting mac address on new OVS port 10 times

We've seen several times in the gate an OVS add port call
succeed and then have the mac address set fail to find it
seconds later. The vswitch log frequently shows that it
returns milliseconds later. Until we get to the bottom of
it, we should just retry several times before giving up
and raising.

Closes-Bug: #1618987
Partial-Bug: #1623732
Change-Id: Ia73a9be047093c02f61e3e9ce13d98dccd49dfeb"
033903aec0afbabce5155e49b807c9793c79f908,2016-09-15 18:08:06-04:00,"Add fullstack test with OVS arp_responder

Now that fullstack uses a modern OVS we may finally have
an OVS ARP responder test. The code will now have implicit
coverage. It previously was not run in any functional or
integration test.

Change-Id: I3db3185a08b7cc546dee9e711f5bda9143752f86
Related-Bug: #1623849"
35e386f6165a431a066ea92cd317406322053ff7,2016-09-16 01:00:51+00:00,"Fix metering-agent iptables restore failure

When we removed the trailing space from iptables rules, we
broke the code that adds/restores them since it was assuming
it could split() based on that space to get the rule.

Just detect if the two values are equal, denoting there was
no rule instead.  This is fine since a self-referencing rule
is invalid anyways.

Change-Id: I9157ced10de3099790dea7f94aa4e614ebf7f25c
Closes-bug: #1623958"
9ac3596c6feca21d024240293476046874e51d73,2016-09-15 18:53:27-07:00,"Fix events misnomer in callback registry debug trace

events is the module, we want to log the event variable.

Related-bug: #1620864

Change-Id: Iec0d403c57938b533dd3b314c100b6e21c3fea2a"
a60c2de881a806e041190732d4def209c583aac1,2016-09-15 21:28:21-07:00,"Add metadata proxy router_update callback handler

This patch implements the callback handler for router update events;
This checks if the proxy process monitor is active, and if not, starts
the proxy.

This is particularly important if the metadata driver misses to receive
a create notification due to failures, which in turn generates an update
event because of a resync step.

Closes-bug: #1623732

Change-Id: I296a37daff1e5f018ae11eb8661c77ad346b8075"
d9cc6deac61a519dc91221aa3a0e417dade86bf0,2016-09-16 19:49:51+00:00,"DHCP: enhance DHCP release log

Commit 2aa23de58f55f7b1001508326c5ac2627ba3a429 added in a warning
in the event that a release failed. This would have no information
that can help anyone deal with it.

Also updated the release note to include a recommendation to use
a version of dnsmasq including dhcp_release6 on an upgrade, so
that the warning we are logging here will not happen.

Closes-bug: #1619535
Change-Id: Ia73dcf5170aaf3f874a6abe83fefb8e85b6e67e3"
b3af52e7388423a5fd3872453512218b00a5c6d7,2016-09-16 22:54:11+03:00,"Keepalived global_defs configuration entries required to avoid DNS lookup

This changeset addresses a particular L3-HA Neutron deployment scenario
in which the DNS server configured for the management network is not
also accessible from the virtual router namespace (i.e. over the
external network).
Keepalived uses the hostname against getaddrinfo twice to set default
values for the router_id and notification_email_from global configuration
attributes. If the hostname cannot be resolved through /etc/hosts and
if the nameserver is not reachable, long delays are incurred during
keepalived startup and configuration reload, causing VRRP state flapping
and dropped traffic over floating IPs.

Setting router_id and notification_email_from in the keepalived
configuration avoids unnecessary DNS lookups. However, this solution
is only effective with keepalived >= 1.2.17. Older versions still
exhibit the same problem with or without this patch.

Closes-Bug: #1511722
Change-Id: If6e31d164bd6ade52997bc0073ef50cdbc99ec93"
225477c6c6de97aad6ce79ab83a97bffdf230e7d,2016-09-17 03:00:31+00:00,"fullstack: execute qos tests for all ovsdb/of interface permutations

Change-Id: Iff36b4e5c102ace45a201ca192b94f12e653b995
Related-Bug: #1622644"
414f607374e7d5ee7048539aa2aa96fae040d6cb,2016-09-17 07:49:35+00:00,"Garbage collect HasStandardAttributes subclasses in StandardAttrTestCase

Otherwise they may affect consequent calls to
get_standard_attr_resource_model_map on next plugin instantiation.

Change-Id: If8030776b3880e8c61980aeb28a65b397cca5ec4
Closes-Bug: #1625973"
251922f5de2de35fb4766da6ab3e7a195c30310c,2016-09-19 00:43:44+00:00,"Disable DHCP on agent port removal

The previous logic was just ripping the interface out without
stopping dnsmasq. This would lead to a file handle remaining to the
interface which would cause OVS to completely freak out and assign
the same ofport to multiple ports.

This preserves the behavior introduced in
I40b85033d075562c43ce4d0e68296211b3241197 but just fully disables
DHCP rather than relying on an exception generation to cause the
resync.

Closes-bug: #1624701
Change-Id: Icdd9ac136eeb3707c912853b134dbb58109e6940"
3a612fc870cd044e126c0f66a484e696318ae9cb,2016-09-19 15:17:48+08:00,"Improve tunnel_sync

When start ovs-agent, method tunnel_sync will call
_setup_tunnel_port when l2_pop is not enabled.
For each tunnel _setup_tunnel_port will be called once,
every call will add flood flows to br-tun. But one time
call is enough.

Change-Id: I80f25edb35a89c5476f5216e151a27cbd3dcd120
Co-Authored-By: Yan Xing an <yanxingan@cmss.chinamobile.com>
Closes-bug: #1589400"
19f3e9a50edcd4027a325aaf60c6e5fbedd7baac,2016-09-19 04:21:27-07:00,"Fix linuxbridge trunk subport RPC event handler

The part of the linuxbridge trunk driver that actually triggered
the dataplane wiring for subport changes was incorrectly trying to
fetch the trunk using the trunk ID with a method expecting the port
ID. This would always result in it thinking the trunk wasn't on the
host and returning without wiring.

This fixes it by adding another method to fetch trunks by trunk ID.
All of the other operations in this function already expect trunk IDs.

This was discovered and the fix verified with the scenario test in
the dependent patch.

Change-Id: I25324bc1445cc083799ff54f8508a9505517ce84
Closes-Bug: #1625136"
933af3fdac4d7d8dd8bf2b419c87b9dc27d69af8,2016-09-19 22:11:15-07:00,"Add to rally quotas to handle worst case quota race

Quoting the quota devref:
""""""
For a reservation to be successful, the total amount of resources requested,
plus the total amount of resources reserved, plus the total amount of resources
already stored in the database should not exceed the project's quota limit.
""""""

This means that in the absolute worst case scenario with 20 concurrent
workers, 19 could have made reservations, committed resources, but not
yet cleared their reservation. Because of the outstanding reservation
and the resources created by the 19 workers, they will all be
double-counted until their reservation is cleared (or it expires).

This adjusts the rally scenarios to handle the double-count for
concurrency.

Related-Bug: #1623390
Change-Id: I4808a92e7e6067aeeb62fc3b3d7f7ac71b179c44"
5ad5d103ad02e2787a539c82b0efcbe51cfe857c,2016-09-20 14:54:10+03:00,"Do not retry default security group creation

No need to retry creation of a default security group - it will
always fail with DBDuplicate

Closes-Bug: #1625557
Change-Id: I8af479ff9631851e7d78c4fc28e8363eda848775"
70907b3e5513828c330425d7629dae71d632ac72,2016-09-20 23:22:40+00:00,"Always cleanup stale devices on DHCP setup failure

If the DHCP port setup process fails in the DHCP agent device
manager, it will throw a conflict exception, which will bubble
all of the way up to the main DHCP agent. The issue is that, during
a 'restart' call, the config files are wiped out while maintaining
the VIF before calling setup. This means that, if setup fails, there
is no reference to the interface name anymore so a subsequent destroy
will not first unplug the VIF before destroying the namespace.
This leaves a bunch of orphaned tap ports behind in the OVS case
that don't have an accessible namespace.

This patch addresses the issue by cleaning up all ports inside of
a namespace on a 'setup' failure before reraising the exception.
This ensures that the namespace is clear if destroy is called in the
future without another successful setup.

Closes-Bug: #1625325
Change-Id: I0211422de51ce6acc6eb593eb890b606101cb9f0"
673abd56c906836d1e9aa14536139537100900c0,2016-09-20 23:22:48+00:00,"Don't immediately restart in DHCP agent on port change

Now that the agent will receive port update events for
all port changes[1], we need to avoid immediately restarting
when the subnets on the agent's port changes. Otherwise
the restart may request ports on a subnet which is in the
process of being deleted. While the server is equipped to
handle this, it makes subnet deletion much more contentious
than it needs to be.

This alters the logic to schedule a resync for later if the
agent's port has had its subnets changed rather than restarting
right away. Then by the time the agent eventually syncs the
server should have finished deleting the subnet. Even if it hasn't,
it spaces out the request from the agent for the network far enough
that the operation will be much less frequent to avoid racing
with the server.

1. I607635601caff0322fd0c80c9023f5c4f663ca25

Partial-Bug: #1622616
Change-Id: I98761a7e3f4bce8d5485c885f03c6bfdde246802"
bad3eaace1a320e33d3bcdff43e4c66ff0c49066,2016-09-20 18:00:07-07:00,"Stop oslo_messaging from error logging CallbackNotFound

This is expected when the server is pushing for a resource
and some listeners (like the OVS agent) are not interested
in the event. This happens when Trunk create/delete events
are dispatched by the server.

Change-Id: I90ddffda546af45ca85b3e4f4f22eed005d971df
Closes-bug: #1625872"
9019ff2f744ae91839d05a188358ef92343add43,2016-09-21 03:51:19+00:00,"Make DHCP agent use 'revision_number'

Change I445974b0e0dabb762807c6f318b1b44f51b3fe15 updated the
'revision' field to 'revision_number' but it missed the DHCP
agent and subsequently broke it's ability to detect stale updates.

This fixes the name in the agent.

This is marked as a partial for 1622616 because one of the reasons
the agent was frequently updating the DHCP port was in reaction
to stale port update messages for its own port.

Partial-Bug: #1622616
Closes-Bug: #1625867
Change-Id: Id41000127e1084f7ff243f8dc9c399999fbdaab4"
14fee9cfcc816128606fc11d33800af90a0b1859,2016-09-20 21:58:55-06:00,"Try to reuse existing IPs when a port update specifies subnet

If a port update specifies only a subnet_id for a fixed_ip then we
want to look at existing fixed_ips to see if that subnet_id is already
there. This avoids allocating a new IP address on the subnet and
deallocating the old one.

Without some special care, this breaks the code path for prefix
delegation. One could argue that PD needs reworking. However, as a
stop-gap measure, we still run the old code path if the address is an
EUI-64 address. This allows PD to continue to work as it was
originally written and it doesn't do any harm because allocating
EUI-64 addresses is repeatable.

This commit removes a test case from the DNS integration tests. The
test was specifically testing that DNS records we updated in the case
where a subnet id was passed to re-allocate a fixed_ip. Since the use
case no longer works, the test doesn't make sense.

This commit also preserves the ability to add an additional IP from a
subnet for which the port already has IPs.

Change-Id: Iba5d54efa7f99ed82275ffc8e5be975b373c29d3
Related-Bug: #1622616
Closes-Bug: #1625334"
e80112ca627805b4ad85f26361be1e9618030dbc,2016-09-21 16:44:08+09:00,"Fix a release note typo for implicit provider loading deprecation

Don't repeat --config-dir option twice.

Related-Bug: #1492069
Related-Bug: #1599936
Change-Id: I002b80ba8e5496c164d08357e4cce9e0b4abf5cf"
09d1185d24c30690358a9314c14fabaead2f4c78,2016-09-21 10:51:10+03:00,"Do not retry default security group creation

No need to retry creation of a default security group - it will
always fail with DBDuplicate.
The patch opens a transaction before calling to create_security_group()
when creating default security group, thus avoiding db retries.

Closes-Bug: #1625557
Change-Id: Id15b55b097641325ac68275fe4bb3ebe93718cdd"
49609f36f5b4b48f7d6cf2c5bbae65eab1a59876,2016-09-21 09:57:16+00:00,"Remove deprecated class NeutronController

Commit 9b8bf7d25c4dda41b78946ce7a3c0ab63602e834 marked
NeutronController as deprecated.

This code is no longer used in Neutron and there is no need for
the class nor the unit tests for it.

TrivialFix

Closes-bug: #1625140

Change-Id: Ie02b6f1a45c3ea32a1116a48946c59673e2d2472"
88424604016416264804cd8d87c2cebc158c6157,2016-09-21 06:26:24-07:00,"Add basic status transition trunk scenario test

While we wait on a solution to getting 802.1q access inside
of the guest VM, it is helpful to at least have a test that
causes the agents to wire up trunk ports and ensure data model
status transitions happen as expected and that connectivity to
the trunk port itself is not disrupted by subport operations.

This test performs those assertions by booting two VMs with
trunk ports, creating subports on one, asserting statuses,
moving the subports to the other, and asserting statuses again
while ensuring connectivity to the VM in between.

This test uncovered both of the related bugs.

Related-Bug: #1625136
Related-Bug: #1625135
Change-Id: I5f634e3bcc54f5420ba49027b4fb250a13fe277a"
e11102e42a26c31ed6606ddf3e7c83cff18dd52b,2016-09-21 13:34:41+00:00,"tests: catch eventlet.Timeout exception

This exception kills the running test worker with all test cases
scheduled to it, probably because unittest module is not capable of
surviving it.

This patch makes all test cases to catch the exception and convert it to
unittest' friendly failure mode (triggered with self.fail).

Change-Id: I5b0d1efa458ca57dfce637dc75d419fe127751ed
Closes-Bug: #1625221"
d1389dcc4b622ab670c37c290a594665fab222cb,2016-09-21 16:41:05+02:00,"Install dibbler.filters rootwrap file

This file was added in https://review.openstack.org/#/c/185977, but was
not listed in setup.cfg
As a consequence, it is not installed in current RDO packages

Closes-Bug: #1626132
Change-Id: I1b87d89367ab534164394f9f18e81223ff4111ce"
4371ae010a7888220bb67ca9bd423e54c0239fd4,2016-09-21 15:16:02-07:00,"Ensure trunk status is acknowledged during OVS subport operations

Before this patch, change to trunk status was reported only when
subports were being added, but not when being removed. This patch
tweak things to make sure the same happens on subports removal.

This patch also improves unit coverage for the parts of the code
affected. In particular the import of oslo_context has been aliased
to catch errors where context as variable is shadowed by the homonym
module.

Closes-bug: #1625135

Change-Id: I73127d7829c31ca66578eb8f7d76409b36c9dc6d"
29457631ad0b77b06dee40cb5114f5f4aced129a,2016-09-21 22:17:04+00:00,"Update trunk metadata during wire/unwire operations

Before this patch metadata on the OVS trunk bridge were
not updated during unwiring operations and upon subsequent
wire operations old subports were getting wiped from the
external_ids field of the OVS parent port. This could lead
to OVS ports left behind on the host on trunk removal.

This patch ensures that the subports stored as metadata
reflect the logical state of the trunk.

Closes-bug: #1625875

Change-Id: I9d885b10d84fad43c527d3ca7bc9a37439197fc9"
97301049958522cf91527d48172f4af9c2645c2d,2016-09-21 20:54:41-04:00,"Allow more time for DB migration tests

Adopt the timeout override fixture from nova.

Borrowed from I591f3c270804dfb01eab7c8c5d43b87a7abcdeda
Co-Authored-By: Sean Dague <sean@dague.net>

Closes-Bug: #1626277

Change-Id: I0b40ce97ba42d55f048e9728d9f032ada5c85100"
a01ca102500cb4705c6c4d8e10180931aa7d5056,2016-09-22 11:26:27+08:00,"Fix wrong use of six.moves.queue.get()

timeout is not the first positional argument.

Change-Id: Icd745514adc14730b9179fa7a6dd5c115f5e87a5
Closes-Bug: #1625604"
b078060189fc57541d854c00be6cee52b7166d72,2016-09-22 16:28:52+00:00,"Relocate VxlanAllocation/VxlanEndpoints DB model

This patch will relocate the VxlanAllocation and VxlanEndpoints db
model from plugins/ml2/drivers to db/models/plugins/ml2 and separate
it from mixins for OVO implementation.

Change-Id: I14702ddcc5c32ba34b5f905a15cd816a69ef2b49
Partial-Bug: #1597913"
74229030b862250eb5625b5dd87476be5550e2b8,2016-09-22 19:35:03+00:00,"Relocate PortBindingPort DB Model

This patch moves PortBindingPort model under neutron/db/models for
consistency.There are no plans to implement an OVO object for the model
at this point in time. Actually, the model should probably eventually
go away from Neutron tree since it's not used by reference plugin,
and is just a remnant from the times when the neutron tree contained
lots of plugins, some of which were using the model.

Change-Id: I5728fea38816b7e500eaa836d5c5dadef51457f7
Partial-Bug: #1597913"
7e822960425326f26806bbfb650b8a844f38557d,2016-09-22 15:05:12-07:00,"Fix ML2 test extension driver API test cases

The test cases were asserting bad behavior by the way the
test driver was designed. Rather than ensuring that the extension
was extending the resource in each case with the correct value,
it was asserting that different values came back from
update/create/show. In other words, it was asserting API
inconsistency which interferred with the dependent patch.

This patch fixes that by having the extension store the values requested
in the API and then use those same values for extending the result
whether it be for updates, creates, or shows.

Change-Id: Ib1517102e3fb776fca818acfddd9e0f733563fb3
Partial-Bug: #1625981"
cb79d09e249a47d362706b2f4d64bd58c97c344f,2016-09-22 17:22:24-07:00,"Fix ML2 revision_number handling in port updates

The revision number is bumped on the flush that changes
the port or a resource that bumps the port. However, in ML2
we create the dict that is used for after_update events,
mech driver calls, and the API response before all resource
modifications are complete so the dict may not reflect
the correct revision number.

This adjusts the update_port_status to flush changes to the
DB before constructing the dictionary response to give the
event listener a chance to bump the revision.

It also adjusts ML2 to update the 'updated_port' dict with
the latest result from make_port_dict after all of the related
objects have been processed to ensure the result has the latest
info from extensions. The API test for allowed address pairs
was adjusted to stop checking for order on update since no order
is stored in the DB.

The API test for revision numbers and ports was updated to
expect the correct behavior.

Closes-Bug: #1625981
Change-Id: I49d2d79a57d484fd98b8969f511895e607b7f128"
0d8483391dd7aa19304e3f1e2b6ea3bee040a279,2016-09-23 02:34:25+00:00,"XenAPI: add support for conntrack with XenServer

With XenServer as hypervisor, the commands neutron-ovs-agent in
compute node run are actually executed in Dom0. But current Dom0
plugin doesn't allow conntrack command, this patch is to add such
support.
Also, the exitcode the commands returned in Dom0 will pass through
Dom0 to neutron to make sure the plugin is only aimed executing
commands, it doesn't deal with business scenario.

Closes-Bug: #1603400

Change-Id: I304788240bcd590ec211bca052fe64594a4e6eca"
d4f92ede9ed52cd0b9059d993e3cf1f42d5ff57e,2016-09-23 02:49:35+00:00,"Fix dhcp_release6 error when not supported

If the system does not have a version of dnsmasq that supports
dhcp_release6, warn about but otherwise handle it gracefully, and also
don't even try to execute it the next time.

Closes-Bug: #1622002
Related-Bug: #1624079
Change-Id: I6bb9547f9d9a9fcfb2357521f3f5bd1dc1dd5136"
08f2af18f996c9ec89ddb6554a1132aa9605b5af,2016-09-23 14:24:38+00:00,"Handle add/remove subports events loss due to agent failures

Upon restart the agent reconciles the logical with the physical
state by removing/adding physical subports that are used to
be/are current present in the logical view.

This patch adds a functional test to demonstrate that there's
no need to handle the resync in the trunk driver, since the ovs
agent already takes care of it.

Change-Id: I164153c79313f2ae7a1fca0414736d5987656185
Partially-implements: blueprint vlan-aware-vms
Partial-bug: #1623708"
70ea188f5d87c45fb60ace8b8405274e5f6dd489,2016-09-23 17:07:12+00:00,"New option for num_threads for state change server

Currently max number of client connections(i.e greenlets spawned at
a time) opened at any time by the WSGI server is set to 100 with
wsgi_default_pool_size[1].

This configuration may be fine for neutron api server. But with
wsgi_default_pool_size(=100) requests, state change server
is creating heavy cpu load on agent.
So this server(which run on agents) need lesser value i.e
can be configured to half the number of cpu on agent

We use ""ha_keepalived_state_change_server_threads"" config option
to configure number of threads in state change server instead of
wsgi_default_pool_size.

[1] https://review.openstack.org/#/c/278007/

DocImpact: Add new config option -
ha_keepalived_state_change_server_threads, to configure number
of threads in state change server.

Closes-Bug: #1581580
Change-Id: I822ea3844792a7731fd24419b7e90e5aef141993"
873b5ac837220c11e204c6610782f8b86c90bf03,2016-09-23 19:14:29-07:00,"Retry port update on IpAddressAllocationNotFound

If a port update and a subnet delete interleave, there is a
chance that the IPAM update operation raises this exception.
Rather than throwing that up to the user under some sort of
conflict, bubble up a retry instead; that should bring things
back to sanity.

Closes-bug: #1622616

Change-Id: Ia8cac09349d4cb722737bdf0bec6c54b9e77f31d"
d1fb4238306f854ab610204a50c5cdc20ea5c770,2016-09-25 02:12:35-07:00,"Fixes for missing IPs on subnets in DHCP agent

There is a race condition server-side where a port request containing
a subnet_id is processed at the same time the subnet is being deleted,
the port operation may be successful without having a fixed IP on the
requested subnet. This patch makes the DHCP agent resillient to this
bug by checking the port response and raising a SubnetMismatchForPort
to trigger a resync if it doesn't have all of the requested subnet IDs.

Additionally, it avoids skipping assignment of IPv6 addresses to the
interface if they are stateless. The original logic to skip assignment
was only meant to be for SLAAC addresses.

Both of these issues were resulting in the KeyError observed in the
bug report.

Related-Bug: #1627480
Closes-Bug: #1624079
Change-Id: I85ef1f4d60efd0309d6a0706e29fdbcc16f0b59d"
971cf85034a1f94efec27742ff43edb7e664dc98,2016-09-25 02:18:01-07:00,"Add missing revision number altercations

This adds revises_on_change for the following models
and API tests to ensure the correct behavior:

* port security (network and port)
* DNS domain (network and port)
* extra dhcp opts (port)
* extra routes (router)
* subnet service type (subnet)

Additionally, it configures the DNS extension to be loaded
in the gate since the extension is enabled for tempest.

Closes-Bug: #1627649
Change-Id: Ifa969c8c2582f8f41d42df07652f259781a36bb5"
3ace0e5fa0020cc8052651500c547c4bbb4b6338,2016-09-25 14:22:13+00:00,"Make HenryG the Magnificent responsible for 'oslo' LP tag

https://wiki.openstack.org/wiki/CrossProjectLiaisons#Oslo

Change-Id: I9483a2e34cb726462f5ffe129887e828090394a8"
3daffd2e62dba6b36123b6a958a2f463d4dd1411,2016-09-25 21:41:27+00:00,"Darek (@dasm) is our new release liaison for Ocata

https://wiki.openstack.org/wiki/CrossProjectLiaisons#Release_management

Change-Id: I55b44ff090989fe7f43b9ae43e8b8819caeb2e48"
c0d0986e8b7412f7c37db799177dc529ce9045d2,2016-09-25 15:53:32-07:00,"Correct fix for IPv6 auto address interfaces

This is a partial revert of d1fb4238306f854ab610204a50c5cdc20ea5c770.
That patch attempted to allow the DHCP agent to manage IPv6 interfaces
to avoid a KeyError in the subnet_interface_map. However, this led
to races with router advertisements and static configuration
(see bug 1627902).

The correct fix was actually a very simple conditional that was broken
because this map shouldn't have been referenced for IPv6 subnets in
the first place. The force metadata option was shortcutting the whole
evaluation so the agent was trying to add a metadata route to a v6
subnet.

This patch undoes the v6 changes from
d1fb4238306f854ab610204a50c5cdc20ea5c770, corrects the conditional,
and adds a simple unit test that ensures the branch doesn't throw
and error.

Closes-Bug: #1624079
Change-Id: Ide494b6333a4f1e279ab58aa27c0aa719e79545d"
98de72e9f32090a93c9c1b6f45cc0f2385c27792,2016-09-26 10:46:36+00:00,"Don't try to delete non-existent namespace

The namespace in the DHCP agent may already have been
deleted by a previous event when _destroy_namespace_and_port
is called (e.g. all subnets deleted from network and then network
is deleted). To avoid log errors every time this happens, check
for the existence of the namespace before trying to delete it.

Closes-Bug: #1627691
Change-Id: I204ba7a0de056f13af505541d67f0acdd70fd54d"
cd7d63bde92e47a4b7bd4212b2e6c45f08c03143,2016-09-26 13:20:46+00:00,"Refetch subnet/network from DB in ML2 update ops

This ensures that any extensions run in the ML2 extension framework
that bump the revision number of the subnet or network result in the
altered revision number being returned to the API caller and passed
into the ML2 mech drivers and callback handlers.

Closes-Bug: #1627628
Change-Id: Ieb37a3833ee52c671419c6dc981cf91c2366ae94"
e83a44b96a8e3cd81b7cc684ac90486b283a3507,2016-09-26 14:49:05+00:00,"iptables: fail to start ovs/linuxbridge agents on missing sysctl knobs

For new kernels (3.18+), bridge module is split into two pieces: bridge
and br_netfilter. The latter provides firewall support for bridged
traffic, as well as the following sysctl knobs:

* net.bridge.bridge-nf-call-arptables
* net.bridge.bridge-nf-call-ip6tables
* net.bridge.bridge-nf-call-iptables

Before kernel 3.18, any brctl command was loading the 'bridge' module
with the knobs, so at the moment where we reached iptables setup, they
were always available.

With new 3.18+ kernels, brctl still loads 'bridge' module, but not
br_netfilter. So bridge existance no longer guarantees us knobs'
presence. If we reach _enable_netfilter_for_bridges before the new
module is loaded, then the code will fail, triggering agent resync. It
will also fail to enable bridge firewalling on systems where it's
disabled by default (examples of those systems are most if not all Red
Hat/Fedora based systems), making security groups completely
ineffective.

Systems that don't override default settings for those knobs would work
fine except for this exception in the log file and agent resync. This is
because the first attempt to add a iptables rule using 'physdev' module
(-m physdev) will trigger the kernel module loading. In theory, we could
silently swallow missing knobs, and still operate correctly. But on
second thought, it's quite fragile to rely on that implicit module
loading. In the case where we can't detect whether firewall is enabled,
it's better to fail than hope for the best.

An alternative to the proposed path could be trying
to fix broken deployment, meaning we would need to load the missing
kernel module on agent startup. It's not even clear whether we can
assume the operation would be available to us. Even with that, adding a
rootwrap filter to allow loading code in the kernel sounds quite scary.
If we would follow the path, we would also hit an issue of
distinguishing between cases of built-in kernel module vs. modular one.
A complexity that is probably beyond what Neutron should fix.

The patch introduces a sanity check that would fail on missing
configuration knobs.

DocImpact: document the new deployment requirement in operations guide
UpgradeImpact: deployers relying on agents fixing wrong sysctl defaults
               will need to make sure bridge firewalling is enabled.
               Also, the kernel module providing sysctl knobs must be
               loaded before starting the agent, otherwise it will fail
               to start.

Depends-On: Id6bfd9595f0772a63d1096ef83ebbb6cd630fafd
Change-Id: I9137ea017624ac92a05f73863b77f9ee4681bbe7
Related-Bug: #1622914"
4148102f736f7191dd5bf1c2c41505c338c6dc56,2016-09-26 23:11:22+00:00,"Process OVS trunk bridges associated to VM deletes

If a VM is deleted while the OVS agent is down, upon
restart the OVS trunk bridge is deleted successfully
but the patch ports integration bridge side are left
behind.

This patch makes sure the bridge as well as its peers
are cleaned up.

Closes-bug: #1623708

Change-Id: I3f010755fdb6501753d20357ad2cd0d6c02cf22a"
0d81441af55ee34f70dc66efab1f875fd24ee043,2016-09-27 04:30:03+00:00,"Relocate Provisioning Block DB Model

As there would be issue of cyclic imports while implementation of
objects for Provisioning Block which has db models definition in same
file, this patch will move Provisioning Block model.

Change-Id: I74402153267cac79a530c4f4f5bb7fd7df247e78
Partial-Bug: #1597913"
2b66c6a2ed77dcebcbe37ed6c6702c9190249b6e,2016-09-27 16:58:55+00:00,"Relocate L3 DB Models

As we have started oslo versioned objects implementations. There
would be issue of cyclic import while implementation for objects
which have db models definitions and mixins in same file. This patch
will move routers models as discussed in [1].

For example DNS models and some queries are in same file [2]. for object
implementation I have separate models definitions and mixins where
queries were being done [3].

[1]. https://www.mail-archive.com/openstack-dev@lists.openstack.org/msg88910.html
[2]. https://review.openstack.org/#/c/334695/15/neutron/db/dns_db.py
[3]. https://review.openstack.org/#/c/334695/15/neutron/db/models/dns_models.py

Change-Id: I9b9a44da5d28252be58cea1a920a64e18d8bbf32
Partial-Bug: #1597913"
930655cf57de523181b2d59bb4428b9f23991cce,2016-09-28 09:20:27-05:00,"Relocate RouterL3AgentBinding DB model

As there would be issue of cyclic imports while
implementation of objects for l3agentbinding which has
db models definition and mixins in same file, this patch will
relocate l3agentbinding models.

Change-Id: Idef2fe3e16b245da849e2d29c5578e5f5d081dc4
Partial-Bug: #1597913"
820270fcacb1d16a342efee17a19ccd4669c1c30,2016-09-28 17:30:39+00:00,"Relocate Metering DB models

This patch will separate metering db models from mixins
for OVO implementation work.

Change-Id: If1bdb64c36e1993d62269d390d3d18144b6c492d
Partial-Bug: #1597913"
a80b89b6fe1611a68d34684d9e80ad606f115366,2016-09-28 13:38:13-04:00,"Ignore NULL fixed_ips for duplicate floating_ip check

Closes-Bug: #1628549

Change-Id: Ie49b46af93697ca67009373eadce9ba4f312dcc0"
558c0519e1efd20393fe0dfcd7fc1a47f0220061,2016-09-28 18:12:21+00:00,"Relocate VlanAllocation DB model

This patch will relocate the VlanAllocation db model from
plugins/ml2/drivers to db/models and separate it from mixins for OVO
implementation.

Change-Id: Ib544b22c9e1acaf4025e8cdace694b2000a4da90
Partial-Bug: #1597913"
286af7c3f089bca679eaa18ea74c407dc37a0816,2016-09-29 08:33:56-05:00,"Relocate ProviderResourceAssociation DB models

This patch will separate ProviderResourceAssociation db models from
mixins for Oslo-Versioned Objects implementation work.

Change-Id: If650e0f6bdc41d175ba8be646cd043c875894ed7
Partial-Bug: #1597913"
80eb375ba1d58a41be1fcb6e11163f78cce8b65d,2016-09-29 13:39:18+00:00,"Fixed functional iptables firewall tests for newer kernels

Iptables functional tests fail on Xenial and other newer kernels if
br_netfilter kernel module is not loaded, in which case sysctl knobs to
enable bridge firewalling are not available, and attempt to set them
with _enable_netfilter_for_bridges fails.

We should load the kernel module before running those tests. Luckily,
devstack has a function for just that (plus more).

Change-Id: I602d8cd02c73b18e9d719b19998e36059ae28cd8
Depends-On: Id6bfd9595f0772a63d1096ef83ebbb6cd630fafd
Related-Bug: #1622914"
276015788a2d7e331946b44eeb068089e0772a61,2016-09-29 17:51:39+00:00,"Relocate external network db models

This patch will relocate external network db models
and separate it from mixins for OVO implementation.

Change-Id: I83e2c7bbab3bd59cc9d2af71c66c0662c7724ecc
Partial-Bug: #1597913"
438d4a83b0967f97bef2fc4c86f956e5fa6ca685,2016-09-29 20:13:01+00:00,"TestSanityCheck: drop test tables during cleanup

The tests were creating tables in the memory but were not cleaning them
up, making them clash on attempt to create floatingips table.

Change-Id: If28ef4ce76cd36e7240d106b75e43d16f43e2c16
Closes-Bug: #1629347"
e1a832dad8848d5ae41f27d0bf79cbdcc0b4ebaa,2016-09-29 15:48:31-05:00,"Relocate Geneve DB models

To avoid cyclic imports for OVO work.

Change-Id: Iebd5a44d2195276e92111cb8964b90fc2955e2de
Partial-Bug: #1597913"
d59fa2b65e23b243806d82929d59c2bf79a91570,2016-09-30 12:50:39+00:00,"Disallow specifying too long name for meter-label

Change-Id: Id916192f0ae38434de7d86790e056e48764b0916
Closes-Bug: #1609725"
8ad62fe75188e934549047b7fd0ab5fd31194842,2016-09-30 14:13:19+00:00,"Remove old oslo.messaging transport aliases

Those are remnants from the oslo-incubator times. Also, oslo.messaging
deprecated [1] transport aliases since 5.2.0+ that is the minimal
version supported for stable/newton. The patch that bumped the minimal
version for Neutron landed 3 months+ ago, so we can proceed ripping
those aliases from the code base.

[1] I314cefa5fb1803fa7e21e3e34300e5ced31bba89

Change-Id: I9e66140ad0b10c50e216c78e4914c98313cada05
Closes-Bug: #1424728"
22b4f037dda09d124be4d5ac38eb9da871e88b13,2016-09-30 15:59:38+00:00,"Relocate Router Extra Attributes DB Model

As there would be issue of cyclic imports while the implementation
of Oslo-versioned Objects for Router Extra Attributes which has DB
models definition in same file, this patch will move Router Extra
Attributes model.

Change-Id: I8c90e35ef08ef74fb5309707673796e587a7289e
Partial-Bug: #1597913"
cf6d700390ed945ffde1fd344d69b496c3954cbc,2016-09-30 12:59:29-05:00,"Relocate SegmentHostMapping DB model

This patch relocates SegmentHostMapping db model to neutron/db/models.

Partial-Bug: #1597913

Change-Id: I630e5c42f9ab781ba6565cdf0f780bf78c2b5dc7"
2823c2e569776b023f889af8d2bd22c2453950f1,2016-09-30 15:00:42-05:00,"Refactoring config options for l3 ha agent opts

Refactoring l3 ha agent options to be in neutron/conf/agent/l3.
This would allow centralization of all configuration options and
provides an easy way to import.

Partial-Bug: #1563069
Change-Id: I2d6bd6beb0d1658baf88c49b954d2db3136e0c8d"
676257cea09b736328caacc61182e27d369e254b,2016-09-30 21:48:50+00:00,"Remove recursion from import_modules_recursively

Since the function already uses os.walk that will iterate through all
subdirectories for us, there is no need to recursively call the
function.

The recursive call was not just redundant, but also had another problem,
where we were passing relative paths to subdirectories, which made the
function to attempt importing modules that are not located under the
topdir. It could crash, or, worse, import a module that is
not under the expected parent directory.

This patch also modifies an existing unit test for the function to
validate that modules from subdirectories are also imported, even
without the recursive call.

Change-Id: I8b3a844460e4987b8a8375b01353d01e57d91604
Closes-Bug: #1634735"
62fd09afc766d6a94a05efa27e0dc5b9772e85bf,2016-09-30 18:03:28-05:00,"Refactoring config options for ml2 plugin drivers

Refactoring neutron ml2 drivers configuration options to be in
neutron/conf/plugins/ml2/drivers. This would allow centralization of
all configuration options and provides an easy way to import.

Change-Id: I825bfed769bff92de010733b16f4a4b5171a052c
Partial-Bug: #1563069"
f327aa67500187c068bef3296b8de829c98de8ab,2016-10-02 17:22:49+03:00,"Remove deprecation warning for l3_agent_scheduler

Change Idef2fe3e16b245da849e2d29c5578e5f5d081dc4 relocated the
RouterL3AgentBinding model, but the last rebase didn't change all the
references of this model - there was one left.

Change-Id: Id48d48413ecc2f55fc889b8d19a6760c16434d96
Partial-Bug: #1597913"
1f4f806584585e4bed02ec7ef784f57e11b05994,2016-10-03 02:44:52-05:00,"Handle uuid references within an ovsdb transaction

Enable the OVSDB API implementations to handle referencing a newly
created object within the same transaction. For vsctl, this is via
the --id=@name construct. For native, this is via storing the
created row as the result, then replacing the result when the
transaction completes. This uses an api.Command object passed as
part of a column value in a db_set/db_create operation as a
reference to that object in a transaction. For example, do:

with self.ovsdb.transaction() as txn:
    queue = txn.add(self.ovsdb.db_create(""Queue"", ...))
    qos = txn.add(self.ovsdb.db_create(""QoS"", queues={0: queue}))
    port = txn.add(self.ovsdb.db_set(""Port"", pname, ('qos', qos)))

instead of having to do 5 separate transactions to: create a
queue, find the queue, create the QoS entry, find the QoS entry,
and finally to update the port with the QoS entry.

Change-Id: I1781794958af1483dabc0f5d17f2df6fea828564
Closes-Bug: #1615105"
2f7c58f405288d323722ec6be224c4c70ccea8b3,2016-10-03 13:09:07+03:00,"DVR: remove misleading error log

csnat_ofport is always OFPORT_INVALID on compute nodes
so the error was always wrong.
Not sure how it could mean duplicate dvr port even on controllers,
so the patch is just removing the condition and the log.

Closes-Bug: #1629816
Change-Id: Ifbb8128fbd932946dab84a73b780da495f2ea1af"
b6a296edf6f6ae1c5b07ccafd98c000ebf1bf997,2016-10-03 10:20:05-05:00,"Relocate Tag DB model

This patch relocates Tag db model from neutron/db to neutron/db/models

Change-Id: Ibb9325f30af85300afe62bb5415388271cf13833
Partial-Bug: #1597913"
f9b1f0906c7eee7225549d956f51f93a8465413f,2016-10-03 11:48:17-05:00,"Relocate L3HARouter DB model

As there would be issue of circular imports while
implementation of Oslo-Versioned Objects for L3HArouter which has
db models definition and mixins in same file, this patch will
move L3HArouter models into a separate module.

Change-Id: I44e638fb4c19a2bdd513b67baeb7e6a2acc72d2f
Partial-Bug: #1597913"
19af726e39b30670314b3bf7025b3a682e523953,2016-10-03 12:09:40-07:00,"Fix the 'port_id' attribute not exist error

Change-Id: Ie9e42771788d8a20572cb650b15edb95923dd426
Closes-Bug: #1629484"
509bc4c2abc67f4deaa947bec3735a5236a61516,2016-10-04 08:41:33+00:00,"Relocate dvr model

As there would be issue of cyclic imports while implementation of
Oslo-Versioned Objects for DVR which has db models definition and
mixins in same file, this patch will relocate DVR models.

Change-Id: I4005570c7507ae9c28fd2910b368e4fdf5e603b0
Co-Authored-By: Victor Morales <victor.morales@intel.com>
Partial-Bug: #1597913"
5b9fe3494a80b3185b5d35dccbc71132211dd989,2016-10-04 14:37:08+03:00,"Fix _list_availability_zones for PostgreSQL

For PostgreSQL  _list_availability_zones crashes if you're using
GROUP BY without object id. Use with_entities to use group_by
correctly.

Closes-bug: #1616793

Change-Id: Ibc09666bc5863a1980acd0a34d6545841a93a481"
fc93f7fcdba34fdb4f41c60e6e532262b8dbcebb,2016-10-05 08:15:20-05:00,"Relocate Flavor and ServiceProfile DB models

This patch will separate flavor and service profile db models from
mixins for Oslo-Versioned Objects implementation work.

Change-Id: Ia35d24c075dc716e44fbf8a9b6a2ebb0297e7aa9
Partial-Bug: #1597913"
72ddd2338b094d32b0393ca2b510dd8ffa5ae48e,2016-10-05 13:06:39-05:00,"Relocate Segment DB Models

As there would be issue of cyclic imports while implementation of
objects for segments which has db models definition and mixins in same
file, this patch will relocate segment models.

Change-Id: I6f5aea69a0f7f1647bb06c86f1fac9367717033c
Partial-Bug: #1597913
Co-Authored-By: Victor Morales <victor.morales@intel.com>"
2d33e2d77b096d098c26b0c7dfb5b8104054079c,2016-10-06 02:17:33+00:00,"Handle label_id's DBReferenceError when creating label-rule

Currently, creating meter-label-rule with non-existent meter-label
is returned with 500 error, because there is no error handling for
foreign key constraint error from DB.
This patch adds error handling for the error from DB
and raises MeteringLabelNotFound error.

Change-Id: I05d6c70cfe1c54618c55cba435bc8e3301948738
Closes-Bug: #1608378"
eb1efc7aceb7a1fe509edcab5cea60dc0668bc87,2016-10-06 14:59:18-04:00,"Account for Py2/Py3 differences in fcntl.ioctl return value

Closes-Bug: #1630439

Change-Id: Icc7bc9372d87dfd6cc15a2b472e38250479ac4ec"
bd1c454c4f6de69eec7b3814b90faeb4db371ba6,2016-10-07 00:40:01-07:00,"Deterministic ordering of fixed_ips

This adds an order_by clause to the fixed_ips relationship
on the port object to ensure that the fixed_ip ordering is
consistent between a create, an update, and a get request
for a port. Without it we were at the mercy of the sql backend
to determine how it felt like ordering them on the join condition.

Closes-Bug: #1630410
Change-Id: I523e0ab6e376f5ff6205b1cc1748aa6d546919cb"
145dbaab21c7b541294869eec547731a9694cbad,2016-10-07 00:42:02-07:00,"Get rid of double-join to rbac_entries without filter

apply_filters_to_query was performing an outerjoin to rbac_entries
unconditionally when model_query could have already performed an
outerjoin (if the request was from an unprivileged user) and/or when
the join wasn't even necessary (the '?shared=False' query that uses
a subquery and not a join). This resulted in terrible performance
because of cartesian products of rbac entries with themselves.

This fixes the issue by ensuring there is only an outerjoin to the
rbac table if it's going to be used for a filter condition and it's
not already joined because of a query scope imposed due to the user
not being privileged.

Unfortunately this doesn't include tests to prevent regressions because
we don't have any methods for testing the performance of individual
queries.

Closes-Bug: #1630939
Change-Id: I4364f4a97a29041e86b2fbd8aa895578153f4cf9"
0e5caebd452518b6be9c99248187ddc9926818ce,2016-10-07 10:11:44+00:00,"Ignore gre0 and gretap0 devices in netns cleanup script.

This is tested by
http://git.openstack.org/cgit/openstack/neutron/tree/neutron/tests/functional/cmd/test_netns_cleanup.py?h=9.0.0#n49

Change-Id: I24ac257cafc7a2617215f1072509e70e40d23fea
Closes-Bug: #1631004"
68caeced9268fbf74d0c6bf5e35509f15037cc36,2016-10-07 12:57:05+00:00,"Add sample_default for state change server config

Adding sample_default to ha_keepalived_state_change_server_threads
will make sample config file contents consistent.
This patch also adds a missing space between help text sentences.

Related-Bug: #1581580
Change-Id: Ieae84c69a397465bed595b2970d1d51ce93fa3b0"
0963aec572c2f0626088aee8e7dee9575378784c,2016-10-07 12:57:09-04:00,"Refactor code to deprecate get_interface_mac

The ip_lib code is able to get the MAC address of a device
already using the IpLinkCommand class, let's remove
get_interface_mac() since it's not necessary.

Changed all callers to use the new get_device_mac() code
and tagged get_interface_mac() for deprecation since it
could be in use by other callers outside the neutron tree.

Closes-Bug: #1630439

Change-Id: I1695d7e46efe5245eb581bd40d5420250a3bad89"
e669e7b96b48bfdb95f78dd3ff3f9bba862fb376,2016-10-07 14:18:19-04:00,"Relocate Agent DB model

This patch set is for breaking the circular dependency between
Agent/AgentVersionedObject.
See:https://review.openstack.org/#/c/297887/ for details.

Change-Id: I7be4ce2513e49e6da46a7bdffb8538613f0be7c7
Partial-Bug: #1597913
Co-Authored-By: Victor Morales <victor.morales@intel.com>
Co-Authored-By: Sindhu Devale <sindhu.devale@intel.com>"
ead39faa377cd30a0184920de6cac89793864e1d,2016-10-07 21:35:35+00:00,"Relocate DNS db models

This patch relocate db models for dns.

Partial-Bug: #1597913

Change-Id: I6d1b43d8c5c8d6f8b80730a16eedac5e59cbed44"
abc31a7ff249fab37f6ac6fb29e44d8b35f73f74,2016-10-11 13:25:11-04:00,"Extend project_id in object dicts (Newton only)

This is a work-around for bug 1630748 that can be backported to
stable/newton. This workaround will be reverted in Ocata and replaced
by a proper fix.

Partial-Bug: #1630748

Change-Id: I4ec9340094bc51cd8aa6e5112bf8114aa26c2982"
1d01864c066155939e84b0402730f1266b091841,2016-10-12 16:48:09+03:00,"Added trailing slash in link to Networking API v2.0

TrivialFix
Closes-bug: #1631466

Change-Id: I310ea62f210ec2d4250d0f93c3081356f429fc41"
e6d6a387704f68e20c1907ce5aa7325cea9f6c54,2016-10-12 18:10:18-05:00,"Pecan: add http_proxy_to_wsgi middleware

Pecan does not currently use api paste to load middleware like the
legacy wsgi, so we need to explicitly import it and wrap the pecan app.
This is a follow-up to Ice9ee8f4e04050271d59858f92034c230325718b.

Change-Id: I3e1b08bf1f902cf09c8a39699c00f1b0d22c3277
Closes-Bug: #1590608"
e795a3fcf882ad8130018f32b57f2f887a1d20da,2016-10-13 10:00:25+08:00,"Make the HA router state change notification more faster

HA router state change takes too much time to notify neutron server.
It takes almost 16s, by default ha_vrrp_advert_int 2s, for a single
HA router state change.

In this 16s time, assuming that a HA router meets 8 times HA router
state change. After this 16s, the first change dequeue and notify the
neutron server, then the 2nd, 3rd, and so on. Things are now becoming
interesting, after this 16 seconds if you run
`neutron l3-agent-list-hosting-router ha_router_id`, you may see the
router state in one specific agent is alternatively changing in active
and standby. It's not stay in the real state, because of the delay
notification.

This patch sets the BatchNotifier interval to ha_vrrp_advert_int (default
2s) to make the HA router state change notification more faster.

NOTE: the BatchNotifier event queue is needed, because the HA router state
change needs to be sent in a proper order. Then the neutron server could set
the HA state properly.

Closes-Bug: #1612069
Change-Id: Ife687038d31bd1e1ee264ff8b6ae1264fdd05489"
43f5b5912f91d04ea9abcc8ea386b0ad2448da7b,2016-10-13 16:00:42+05:18,"Drop MANIFEST.in - it's not needed by pbr

Neutron already uses PBR:- setuptools.setup(
	setup_requires=['pbr>=1.8'],
	pbr=True)

This patch removes `MANIFEST.in` file as pbr generates a
sensible manifest from git files and some standard files
and it removes the need for an explicit `MANIFEST.in` file.

Change-Id: I902f29fedb4b756af978af52927bd32a51270dc8
Closes-Bug: #1608980"
070ee35b9c580904829c6c205163485edd0f4a43,2016-10-13 13:51:57+03:00,"Allow to override Idl class in OVSDB Connection

Add an option to neutron.agent.ovsdb.native.connection.Connection to
override the Idl class that is created to communicate with OVSDB.

This is a feature that would help in Dragonflow[1], where the notify
method should be overriden before start() is called, in order to receive
all events in real-time, and not retroactively.

[1] https://github.com/openstack/dragonflow/blob/d17ae9705a4f585fe3e87a398823dc983cf985c1/dragonflow/ovsdb/impl_idl.py#L135

Change-Id: I49da05f02a00352b1b1db863d244e97f9c148804
Closes-Bug: 1627615"
013a48f49b4141e4c865aeffc85a9e29a9d25c71,2016-10-13 15:33:22+00:00,"Remove deprecation warnings for agents_db

Change I7be4ce2513e49e6da46a7bdffb8538613f0be7c7 relocated the Agent
model (and a few other functions), but some references to old
functions/model still remain. These cause a considerable amount of
warnings when running unit tests and the code itself.

Change-Id: Id026cae75bfa56b1023f8a1c4e5db750cf0bff5f
Partial-Bug: #1597913"
97338258967d3b95f382f188ab2ab573a3432c17,2016-10-13 15:38:38+00:00,"Cleanup of SecurityGroup classes

Commit Ifb70a118cef48c3c4cd313e22e907aa47bc51ad0 intended to remove some
classes, but without DeprecationWarnings. To prevent from possible
problems, if it would be now removed, added Warnings and included info,
about future removal.

Change-Id: Iacb93abc363bf638efc3acb5b29c02a7508bc43a
Related-Bug: #1444112"
46ba1aa762737daee26e35a45eaa87e3a427521a,2016-10-14 13:14:05+11:00,"Only emit deprecation warning when deprecated value read

If providers is not found in the CONF.service_providers.service_provider
it looks them up from implicit conf files. If nothing is defined there
it still emits a deprecation warning.

Maybe a warning should be emitted if this value is empty, however the
deprecation warning that is provided is incorrect and misleading.

Change-Id: I3166a445b69d854b294843814a081e74c1aadb3b
Closes-Bug: #1633293"
19c354aacd27f6941467e34826774c6199bc4f8f,2016-10-14 11:24:03+03:00,"Add http_proxy_to_wsgi to api-paste

This sets up the HTTPProxyToWSGI middleware in front of Neutron-API. The
purpose of this middleware is to set up the request URL correctly in
case there is a proxy (For instance, a loadbalancer such as HAProxy)
in front of Neutron.

So, for instance, when TLS connections are being terminated in the
proxy, and one tries to get the versions from the / resource of
Neutron, one will notice that the protocol is incorrect; It will show
'http' instead of 'https'. So this middleware handles such cases.
Thus helping Keystone discovery work correctly.

The HTTPProxyToWSGI is off by default and needs to be enabled via a
configuration value.

Change-Id: Ice9ee8f4e04050271d59858f92034c230325718b
Closes-Bug: #1590608"
c4b2c8d558ee7ef9fbb7f2483dd7f446a0e0d14a,2016-10-14 19:55:28+09:00,"test_routers_flavors: Skip if requirements are not met

- Require l3-flavors extension and enable it on gate
- Skip on ServiceProfileDriverNotFound

Closes-Bug: #1633339
Change-Id: I53ccc6ec33665160b44d699c96795dc72f1710e6"
3d500d36608e83d202c1a6c8438ea5961a7debe1,2016-10-14 15:10:54-05:00,"Only send string values to OVSDB other_config column

The other_config columns in OVSDB are defined as maps with string
keys and string values. The OVS agent was passing an integer
segmentation id and could pass None as the physical_network.
Unfortunately, the upstream Python OVS library does not pass the
exceptions through to us.

Change-Id: Iafa6be3749b1ee863f5fa71150c708fc46951510
Closes-Bug: #1630920"
cb48d15466643b72931ef43085421a9fb1eaf870,2016-10-14 15:36:40-05:00,"set_db_attribute differs between vsctl and native

On the following:

b.set_db_attribute('Port', pname, 'other_config', {'a': 'b'})
b.set_db_attribute('Port', pname, 'other_config', {'c': 'd'})

will produce different results between the vsctl and native OVSDB
implementations. vsctl will merge the values into a single dict
and native will overwrite the dict.

This patch makes the native implementation mirror vsctl.

Related-Bug: #1630920
Change-Id: Ie7680a301b8b3ee8e5654666e2aea78ecbd07a12"
7fdb98cf174ead0ba75d3fad13c89d5c55e40ff2,2016-10-14 18:38:31-05:00,"Pecan: rework notifier hook for registry callbacks

[1] and [2] were added to use the registry callback notifier for dhcp and nova
notifications for the legacy wsgi layer.  This adds the same functionality
to the pecan wsgi layer.  It just so happens to clean the code up nicely
and also fixes a bug that was introduced by [3] that caused an ever
increasing number of subscriptions to the registry callback notifier.

[1] I7440becb6d30af7159ecaeba09d7a28eceb71bea
[2] I1d7d4b80ee77deefce18df22f76cab81750c0397
[3] I607635601caff0322fd0c80c9023f5c4f663ca25

Change-Id: I0a8b64e7742283a9d6c6b42ebc27887836df69ec
Closes-Bug: #1633296"
ca62e7ec9d09eac2b516b3014fc4d678ac85a6db,2016-10-15 20:03:45+00:00,"Make ovs functional tests mutually isolated

Patch ports between br-int and br-tun have now got
randomly generated names so two different tests
shouldn't try to create ports with same name in same time.

Change-Id: I6107bc3bc2e2a504e8ec5b4f0e3abaa68d51c01f
Closes-Bug: #1625724"
9006726acbd6255263de7acae6bf6110a5aeed8e,2016-10-17 18:03:00-05:00,"Pecan: Don't prefetch resource fields on DELETE

The legacy wsgi does not prefetch resources and specify fields on
DELETE.  It does do this on PUTs though.  However, the pecan wsgi policy
hook was doing it for both PUT and DELETE.  This also fixes a failure
with the auto-allocated-topology tests.

Change-Id: I9933c141f7d0481caade5a9484022fe090cf47f0
Closes-Bug: #1633664"
c1b28a8d7377380464e7fc7ce36ab1406f12eaf1,2016-10-17 18:33:35-05:00,"Pecan: Fix internal server error on QoS rule PUT

A patch [1] was made to the legacy wsgi code but was not also done for the
pecan code.  This patch does the same check.

[1] Ia82ad84a3a07df4df8eaeaed6c47d31be9493cbd
Closes-Bug: #1633668

Change-Id: I829a9fee79109e42a366d349afef3868265e9d94"
9204b34afc887edd927d1f16d577e0e3385000f6,2016-10-18 17:44:04+08:00,"Validate type of allowed_address_pairs

If user don't pass ""type=dict list=true"" in create/update port
with allowed_address_pairs attribute, we will hit Quota exceed
exception. So we need to check address_pairs type in validation,
if allowed address pairs is not Python list, we should raise an
exception.

Change-Id: I7c84b728e8e660b678f251122cc332cd0ce5c576
Closes-Bug: #1631432"
784864d1785bcd32297865cae5a7a243b05ed30d,2016-10-19 08:42:42+08:00,"Update metadata proxy when subnet add/delete

With current code, if first subnet of the network is an ipv6 subnet,
the metadata proxy will not be spawned. If user then adds ipv4 subnet
with dhcp enabled, the metadata proxy will still not be spawned. As a
result, the metadata service will not be available for the network.

This patch will kill/spawn metadata proxy,  when subnet add/delete.
So, even if the first subnet of the network is not an ipv4 subnet with
dhcp enabled, the metadata proxy can still be spawned if network has
subnets need metadata proxy.

Closes-bug: #1556991

Change-Id: I0b45af8f2b756732f45c13d7e2dbcd30653cc026"
14ee32940c87186d36b253773e1d73b5274349bf,2016-10-19 17:16:33+09:00,"ovsfw: Add a dl_type match for action=ct flows

Recently ovs has been changed to require a dl_type match for
action=ct flows.

Change-Id: I9040d8c50ee30f5daef7ea931a28cd0cf7855f3e
Closes-bug: #1634757"
e8bd6424e930556f296aaa492f2f8d62c52f7edf,2016-10-20 13:43:40-06:00,"Replace retrying with tenacity

We are replacing all usages of the 'retrying' package with
'tenacity' as the author of retrying is not actively maintaining
the project. Tenacity is a fork of retrying, but has improved the
interface and extensibility (see [1] for more details). Our end
goal here is removing the retrying package from our requirements.

Tenacity provides the same functionality as retrying, but has the
following major differences to account for:
- Tenacity uses seconds rather than ms as retrying did.
- Tenacity has different kwargs for the decorator and
Retrying class itself.
- Tenacity has a different approach for retrying args by
using classes for its stop/wait/retry kwargs.
- By default tenacity raises a RetryError if a retried callable
times out; retrying raises the last exception from the callable.
Tenacity provides backwards compatibility here by offering
the 'reraise' kwarg.
- Tenacity defines 'time.sleep' as a default value for a kwarg.
That said consumers who need to mock patch time.sleep
need to account for this via mocking of time.sleep before
tenacity is imported.
- For retries that check a result, tenacity will raise if the retried
function raises, whereas retrying retried on all exceptions.

This patch updates all usages of retrying with tenacity.
Unit tests will be included where applicable.

Note: This change is not newton critical so projects are welcome
to hold off on committing until post-newton. Ideally this change
will merge by the first part of Ocata so dependant functionality
can land and have time to solidify for Ocata.

[1] https://github.com/jd/tenacity

Closes-Bug: #1635395

Change-Id: I1c0620894d07d58efbba5226b5244fec950354ca"
93104d3d703153cb99d67dfe62097f8332d1af97,2016-10-20 18:07:32-05:00,"Log OVS IDL library errors to neutron logs

The OVS IDL library, instead of passing exceptions, logs them
via its Vlog wrapper around Python's logging module. Currently,
we aren't getting any of these log messages. This patch replaces
the Vlog class log methods with the equivalent oslo_log methods.

Closes-Bug: #1634258
Change-Id: Id5a55b5fc323641d0dfd6e3e78b2d2422482fbe0"
64252405c4780f09b376655b1b439543290a2f65,2016-10-20 19:03:08-05:00,"Pecan: Bulk create with one item returns plural

If a bulk create happened with a single item, the pecan code would
return back to the user the singular version of the resource in the
body.  For example, to bulk create many security group rules, the user
would give in the body of the request the json with a parent key of
""security-group-rules"" with a value of a list of json security group
rules.  If this list is of length one, then after the creation of the
one security group rule, the API would return back to the client
""security-group-rule"" as the parent key.  This is not how the legacy
wsgi layer behaved.  The behavior is expected when nova creates security
group rules by calling the neutron API through its deprecated security
groups API.

Change-Id: I8757630403e4d486cd3c8dd6f041e9ee326ba3b4
Closes-Bug: #1633671"
d34bbf57cf5a8316944810e7309ac60383ad87eb,2016-10-22 06:28:59+00:00,"Refactoring config options for cache_utils opts

Refactoring neutron cache_utils config opts to be in neutron/conf so that all
the configuration options for cache_utils reside in a centralized location.
This simplifies the process of looking up the cache_utils config opts and
provides an easy way to import.

Change-Id: I722a2fa7d72c62e6d878d0137f899d09a9ad64ae
Partial-Bug: #1563069"
2c7ef566af9bccbc565e0dc0259a8c456396153f,2016-10-25 01:05:24-05:00,"Handle db_add in transaction for new objects

The native interface chokes when doing db_add on an object that
was created within the same transaction due to the column we are
modifying not yet existing. This patch adds defaults for the
column.

Change-Id: I4386aa293f9b18d2e17b4a80d9c7da4b9b46f3c9
Closes-Bug: #1642764"
3c1bf8697b9be4a406e978af8a3329389f992514,2016-11-01 14:39:09+02:00,"Don't depend on translated strings for error check

Currently, execute() may raise an exception that contains a *translated*
string that starts with 'Exit code: %(returncode)d...' if the returncode
of a process was not 0. find_child_pids() will then check if the
raised exception contains 'Exit code: 1' (to check if the returncode is
1), but in non-English locales this will fail as the 2 strings are not
encoded the same.

This patch adds a new ProcessExecutionError (which inherits from
RuntimeError, so as to not change all the code that currently depends on
execute() returning RuntimeError) which now accepts a returncode. This
can be changed explicitly without depending on the error message.

Later patches can move ProcessExecutionError to neutron-lib, if this is
needed - this patch intends to write the smallest piece of code that can
be backported.

Closes-Bug: #1638273
Change-Id: I85d3bec13e852918eb13e73c1367c70e1f4d34b1"
d400c04095e1e09468b3bd009ae7004b400fddea,2016-11-02 13:57:38-07:00,"Add 'to_primitive' for MACAddress and IPNetwork

Both of these OVO common types did not have a to_primitive
method, so their native netaddr objects were being passed
to the json serializer.

For the MACAdddress object, this resulted in an traceback
because EUI types are not json encodable. For the IPNetwork,
this resulted in a list of every IP address in the network.

This fixes both by adding a 'to_primitive' method that calls
str on the netaddr objects, which results in sane representations
(string mac address and string CIDR).

This adds a base test the common types test case to ensure
all primitive representations are json serializable.

Closes-Bug: #1638664
Change-Id: Ic0032e3fc12de643e6900702249e69d3946faa19"
11c3f0cafd62f9f9b46fd494f9cc6c372f77b1c9,2016-11-03 08:31:24-07:00,"DHCP agent: advertise SLAAC prefixes

Advertise IPv6 SLAAC prefixes via router advertisements with router
lifetime of zero so prefix can be discovered on isolated networks.
Since the router lifetime of these RAs is zero, they will not be used as
a next hop. Implementing this now so Octavia can use an isolated IPv6
network.

Change-Id: I4a9c2018606d1729465612206f8e8e2fc4922516
Closes-bug: #1498987
Related-bug: #1407573"
660946a921ce41b196533fe49d0df4e5a479eea0,2016-11-03 23:02:31+00:00,"Fix modify_fields_from_db for vif_details empty str

vif_details is represented as an empty string in our DB schema
when it's not defined. The 'modify_fields_from_db' method was
incorrectly attempting to feed this directly into the json decoder.

Closes-Bug: #1638703
Change-Id: I7b13fb30de71bb4dce4dbab4ffe430e1d0ef8f3a"
7dc2707c2b0b05ad7699a24680a5b45e67f717fc,2016-11-03 17:08:59-07:00,"Only mark ports ready on synced networks

The DHCP agent was previously resending every single port to
the server whenever sync_state was called, even if it was just
for one network.

This let to sending way too much unnecessary data to the server
and also potentially resulted in sending a port to the server
that wasn't actually provisioned yet.

This patch corrects the behavior by only sending ports for networks
that are being synced if it's a conditional sync.

Closes-Bug: #1639086
Change-Id: Ie7686837b18ff251baa315ef95dc511cda475672"
1392d37d3d1aa54a55fc6f5402f1da749a7e8299,2016-11-03 21:43:45-05:00,"Pecan: No fields to plugin on GET member actions

The legacy wsgi does not pass the fields query parameters down to the
plugin layer on GET member actions.  Pecan should follow suit to
maintain compatibility.

Change-Id: Ic9ef676b75464eaba58ff1403c8969610e9a9a6a
Closes-Bug: #1639109"
7b277a1ba0ca2c602cf053163a8d1ed3c3aa9743,2016-11-04 20:49:13-04:00,"Remove last vestiges of oslo-incubator

This is a community goal for Ocata.  We're already not using any of
the code, but there are some other files and references left over.

Partial-Bug: #1639103

Change-Id: I2afd263ddc480e2512e3be77a03ffe5ae16e17a5"
ea7b51655f5504404cc7c416547608c24fbd45ab,2016-11-07 12:15:20+00:00,"Add fullstack test for check DSCP marks outbounds

New fullstack test is added to check if packets which
should be sent from port with DSCP mark set are really
sent to another port with this DSCP mark.

This test uses IPv4 only.

Change-Id: I4b26c3c644eb6f2f7813658c99d16fbc3cc61e06
Closes-Bug: #1625570"
6b59cc72a4eec9fabaf90f0a0a86b4781a68df17,2016-11-07 19:51:58+00:00,"Deprecate send_arp_for_ha option

It puzzles me why we would want to have it configurable. Having it = 0
is just plain bad (it breaks a floating IP roaming around HA routers),
having it = 1 may be unsafe if clients miss the update, having it more
than 3 (the default) is probably wasteful. That makes me think that
maybe we should not have it in the first place.

The patch that introduced the option also introduced the feature itself,
and does not provide any clue around why we would need it:
I125dbc57b90027dc5e99ff0a5d6877843a0b02a5

Maybe the option is in the tree because, in Assaf Muller's words, ""we're
a bunch of lazy developers that like to shift the responsibility to our
poor users that have to deal with thousands of configuration options"".

I suggest we just move with deprecation and removal here.

Change-Id: I9d12b8f4c25ddf91312153f236915c0c14302e2d
Related-Bug: #1639879"
eb430620ffcd3c69b55cd2fb8e9655e683517e25,2016-11-07 20:24:22+00:00,"Removed update_network from plugin.common.utils

Change I607635601caff0322fd0c80c9023f5c4f663ca25 deprecated update_network
from plugin.common.utils. Please call update_network directly on the plugin.

Change-Id: I5a014ef457b09803d3d90e7735fae991be697d53
Related-Bug: #1621345"
1cd05858846698fc77c10a6131c3900f8e974e70,2016-11-07 20:24:45+00:00,"Removed deprecated checks

Change I4644ab087abc441beed52a170df8b5279fed76a4 changed functions
check_asserttrue and check_assertfalse into check_asserttruefalse.
Please use latter.

Change-Id: Ifb38143a0045dd29c81b3507554196ab9b19c787
Related-Bug: #1594756"
05cd620389aad58d9d1bdb7064dc0ec3034a4e46,2016-11-07 20:24:51+00:00,"Removed deprecated methods for AgentSchedulers

Removed methods deprecated by
change I3a32a95489831f0d862930384309eefdc881d8f6

Change-Id: I00c8c323135e3510896a9b66877fe887285d9281
Related-Bug: #1569404"
7d17f8c7c3436dd3bb8a26500f5a1e7706e4eb9e,2016-11-07 20:25:07+00:00,"Removed get_engine() from db/api

This function was deprecated in change
Id38c06aee428200a061c59a984b59b81b24056e3
get_engine() can be called directly with
context_manager.get_legacy_facade().get_engine()

Change-Id: I7ef45c7ced65a3a3746e616c7b796a34b3551d3c
Related-bug: #1520719"
3e44d75660bcf018d60e2cc7b798e76efbc04905,2016-11-07 15:07:43-07:00,"Pecan: Find subresource controllers by parent

Fix for finding subresource controller by parent and
added functional tests

Change-Id: I34bb1968fdc3daa75f8a60f5ad9aa68cc3414ad5
closes-Bug: #1633665"
f5a721e0c2d2d3ed86fc66f4b3ec83f4eb54bf4d,2016-11-07 22:20:26+00:00,"Introduce context in methods for Router Extra Attributes OVO usage.

This patch introduces context in methods where it is needed for
object operations done during the integration of Router Extra
Attributes OVO.

Used in integration patch: https://review.openstack.org/#/c/381209/

Change-Id: I4dea67207220a19abf5d3cc754f02150b3621550
Partially-Implements: blueprint adopt-oslo-versioned-objects-for-db"
6bb12ef128df7a86872c7eca7a8059791beaafae,2016-11-08 03:41:11+00:00,"Removed deprecated function import_modules_recursively

Change Ia8d91a1704c894bc1f6cf14e6cdd971fab255b62 moved function
import_modules_recursively from neutron.tests.tools to
neutron.common.utils
Please use appropriate function path.

Change-Id: I7a178ceff5bbc4b6f45cfc040232148090bce135
Related-Bug: #1612959"
bea8985d78e6925874d2645c7ef82f765799df6e,2016-11-08 03:42:37+00:00,"Removed deprecated tests function

Change I790777ddcbd1b02218b3db54ae3d5c931d72d4fa deprecated functions:
get_related_rand_names, get_rand_name, get_rand_device_name,
get_related_rand_device_names in neutron.tests.* to allow separation of neutron
code and neutron tests.

Change-Id: I04e2fb87572d825fa736c66266dc6ec9855b93f9
Related-Bug: #1621782"
5805a075b55a9f7faec8d17ed6840ca94b5d5c39,2016-11-08 13:29:48+07:00,"Remove timeutils.clear_time_override in neutron

The clear_time_override function in timeutils was written as a
helper function to mock utcnow for unittests before 'mock' was
generally used. Now that we have mock and fixture, we no longer
need to use it.

Change-Id: I7baa623fd71a7d03acc61dd1f18287bb654539cd
Partial-Bug: #1266962"
b79f8ef8a80c0ac91b78643949a8349ca170c3ec,2016-11-08 09:10:56+01:00,"Devref to explain nova-neutron interactions during live-migration

Closes-bug: #1531511
Co-Authored-By: Andreas Scheuring <andreas.scheuring@de.ibm.com>
Change-Id: I3532c1766672f78d67de7995e04a6749f75d5c7a"
03b84bc920b5499e1fef23c646268fffa1d859d7,2016-11-08 18:27:02+00:00,"Deprecate SR-IOV 'physical_device_mappings' config option

The device to physnet validation is made in Nova by pci_whitelist config option.
Therefore it is redundant to validate it in Neutron with physical_device_mappings
config option.

Closes-Bug: #1640220
DocImpact

Change-Id: I5f363347b327212a49a9b78a7164c11d9e457b10"
e727b92d3d643384cc2e34d26266cd1e2f3334fe,2016-11-08 19:54:04+00:00,"Register osprofiler options before setting engine hook

The patch makes the module to not assume the options are registered by
some other code, that may never be executed, f.e. when it's part of a
single test case execution.

Change-Id: I7eefb32e6f34d732bda681919b434a96b8ad36da
Closes-Bug: #1640782"
9f1057bfd9aff4acee1d41f14298c155a6759f55,2016-11-09 03:20:11+00:00,"DHCP: Add missing path for marking ports as ready

'refresh_dhcp_helper', which is called after subnet update/create
notifications in the DHCP agent, can end up retrieving ports that
the agent hadn't yet seen. It will then configure those ports but
not notify the server that they are ready.

Unless the port is subsequently updated on the server afterwards to
generate a new port update notification, the DHCP agent won't ever tell
the server that the port has had DHCP provisioned. This led to the
bug this closes. Another patch[1] that removed excessive DHCP ready
notifications uncovered this bug.

This patch just adjusts refresh_dhcp_helper to ensure that all ports
are marked as ready after configuring them all.

1. Ie7686837b18ff251baa315ef95dc511cda475672

Change-Id: I1fed60c1835c2ebed7c050c6fa114f89beec3190
Closes-Bug: #1639806"
9c81f275e6cd569b19747d2a1fa635aec4d71f02,2016-11-09 15:11:17+08:00,"Change cfg.set_defaults into cors.set_defaults

Cors has added set_deafults method, just use it.
Related link:
https://review.openstack.org/#/c/285368/

Change-Id: I4b7fe72cbe968640f2f7a6de63f9289d6728782d"
63d428a60d2c3c27f9f1138f77671516a4d0091d,2016-11-10 10:36:18+00:00,"Add check to address_pair that items in list are dict

This patch adds check to allowed_address_pairs that
items in list are dictionary before checking
'ip_address' and 'mac_address'.

From user view, error is changed to 400 from 500 when
creating/updating port with 'allowed_address_pairs'
specifying string that contains ""ip_address"" or ""mac_address"".

Change-Id: I92ea4d56e01b0e122c2150f9d82464b67f4dc466
Closes-Bug: #1640034"
0a27cf7fd66f5a21c76bd85311072b684903fe79,2016-11-10 10:25:06-07:00,"Move OVO exceptions to neutron/objects/exceptions

Change-Id: Ibf424b4e317e910e33c29fb9ec150452caa06a89
Partial-Bug: #1614920"
17ecc54493ea29e75b8fee71e3de878c965f464d,2016-11-10 10:25:06-07:00,"Make OVO exception NeutronDbObjectDuplicateEntry retriable

OVO object create() raises exception NeutronDbObjectDuplicateEntry
on seeing duplicate entries which should be handled by retrying the
transaction.

Partially-Implements: blueprint adopt-oslo-versioned-objects-for-db
Closes-Bug: #1627811

Change-Id: I2b311326c2caa7500aa9318d0b5bf753cf0eb543"
cc9ce5189db4f3300c38b36dd28a98d64ca7a1fe,2016-11-12 16:02:17+05:18,"Changing arping command execute to accept 1 as extra OK code

Connecting any network to a router causes l3-agent to send out
gratuitous ARP packets that do not require a response. On Ubuntu 14.04
sometimes this command returns 1, which causes it to falsely report
arping command failure. This is now added to the extra OK codes.

Change-Id: I6299e936d4e4e7fd7497d23224e7abf605a99c15
Closes-bug: #1578842"
3d6d9393c858ee40395295571f9008844127255f,2016-11-12 16:43:43+00:00,"policy: cache extracted parent fields for OwnerCheck

Parent foreign key extraction requires another database fetch per object
validates, which does not scale well. To mitigate the issue, cache
extracted parent key values in a global policy cache dictionary.

Use oslo.cache to maintain cache. Hardcode expiration timeout for
policy lookups to 5 secs.

Change-Id: I6b3d7c96b7487c9bef6d39a28c76fea0721c3098
Related-Bug: #1513782"
7db68e32023162d843d287a121fec64a6786e87c,2016-11-14 17:53:34+09:00,"ovsfw: small cleanups to improve readability

security_group_updated is actually called but of no use for ovsfw.
Fix the comment to reflect the reality.  In iptables_firewall, the
method is used to clear obsolete conntrack entries, but ovsfw implements
that differently.  Also, remove empty definition of apply_port_filter,
which is never called.

Change-Id: I26b402e0fa5ac19022e022bf7c51e171d0f5d333
Closes-Bug: #1606462"
b45fd35e3f4a2aaacc7a22faafd00b7350e4f398,2016-11-14 19:12:34+08:00,"Remove floatingip address ignores ha_state

We both enables router_distributed and l3_ha in server side,
and configures L3 agent node as dvr_snat in compute nodes.
HA router removing floatingip address only in master node,
and dvr local router only remove FIP rule. This will cause
RTNETLINK error if we operates floatingip ""associate --> disassociate
--> reassociate"".

This patch removes floatingip address whether router's ha_state
is master or backup.
Another solution is adding remove_floating_ip in dvr_edge_router.

Change-Id: I2fab45cff786c475d69c5f0cf4e9b71e6bbbe653
Closes-Bug: #1641535"
bc03048134f12df47e1e619d21ba394db9c52dc1,2016-11-15 00:01:26+00:00,"Fix ""failed unplugging ha interface"" error when deleting router

Deleting router namespaces happens before deleting router ha interface.
So it will fail when deleting router ha interface. The change
is to remove router ha interface before deleting router namespace.

Change-Id: I3d936701c9dac7671f12e1966449662988a0f26a
Closes-Bug: #1629159
Related-Bug: #1488730"
16ae4190a7cce9b7da610bc15ca0a6378ddb736d,2016-11-15 00:06:17+00:00,"Add L3 HA test with linux bridge

Adds an HA test case using the linux bridge interface and
a test to recreate the router to ensure all cleanup was
done appropriately on teardown.

Related-Bug: #1629159
Change-Id: I80b70b848ea64d5f996055edc4bfb0ec1f4ae548"
97f4a3fdbbe1a2b9dd9b09cc042094a4cd5177ca,2016-11-15 14:03:59-05:00,"Move sysctl out of IPDevice class

Not all callers use a device with sysctl calls, so move it
out of the IPDevice class to make it more generic.

This will help facilitate a future change to set accept_ra
to fix another bug.

Change-Id: Iaf85981a227234466863f00ee4e2209405a2b083
Related-bug: #1627902"
202564cd643bb6c18ea2cd7a3c66617365fa0c72,2016-11-15 18:04:16-08:00,"Fix ML2, base db plugin update_subnet for transactions

This refactors the DB base plugin update_subnet method into
precommit and postcommit methods so a core plugin can avoid
executing the postcommit methods while it has an open
transaction. Backwards compatibility is preserved for plugins
which do not need this.

This is important because the update_subnet method in the
base plugin performs operations that shouldn't be inside
of an uncommited transaction, such as updating ports,
generating AMQP notifications, and generating AFTER_UPDATE
callback events. Until this patch, ML2 was performing the
entire base plugin update_subnet operation in a transaction.

This is also necessary for the facade and push-notification
switch because ongoing db sessions will not be used for
core methods and notification generation.

Related-Bug: #1540844
Partially-Implements: blueprint push-notifications
Partially-Implements: blueprint enginefacade-switch
Change-Id: Ib825a9e0c0c6693a4e708ae6ce362775c70d843d"
904f85e2f933493d386f463af3ff6168dd36b7de,2016-11-16 04:15:44+00:00,"Disable 'accept_ra' in DHCP agent namespace

Currently the DHCP agent relies on the acceptance of an
RA to configure its IPv6 address with SLAAC or DHCPv6-stateless
network modes.  It should explicitly assign addresses to the
agent based on the data model instead.

In order to do this we must disable RAs in the namespace so
that a static assignment doesn't conflict with a previously
created dynamically-generated address.

Change-Id: I1b38d131249d59fa486a07024d4b1ec61e693d59
Related-bug: #1627902"
1e195afaf12cbb426a356a11cacfe45f04bd43a2,2016-11-16 17:52:07+02:00,"L3 scheduler: add retry indicators for bind_router

Change I3447ea5bcb7c57365c6f50efe12a1671e86588b3 added a binding_index
to the RouterL3AgentBinding table. In certain (concurrent) cases, a row
with the same binding_index might be used twice, which will raise
DBDuplicateEntry. However, that change didn't retry on this case at all
code-paths, so this patch rectifies this issue.

Closes-Bug: #1633042
Change-Id: I228b0084a8e7c48e78bc2ea6a3fccf7437210e73"
0e51574b2fb299eb42d6f5333e68f70244b08d50,2016-11-17 14:24:05+08:00,"Have qos object increment port/network revision

When associate/disassociate qos of port/network, port/network's revision
number will not bump. This patch fixes that.

Change-Id: I1e60851fb1e99a3f803e0bf3854653ff107f768f
Closes-Bug: #1642476"
7c7e2418a238d53042b1b30fefe9aea05cf02681,2016-11-17 20:58:42+00:00,"Fix reset/start methods on AgentStatusCheckWorker

This worker would fail to start again if stop() or reset()
was called on it because of some bad conditional logic. This
doesn't appear to impact the current in-tree use case but
it should behave correctly.

Closes-Bug: #1641788
Change-Id: Id6334c1ef6c99bd112ada31e8fe3746d7e035356"
5ff8aecefb69ed4ea97b45725f0da29611694987,2016-11-17 18:11:37-05:00,"Speed-up iptables_manager remove_chain() code

remove_chain() has three list iterations that can be
reduced to two, brings a small performance increase.

Change-Id: I6f6e05b2336a983062f4787cb933d56fdf71a90a
Partial-bug: #1642770"
01c4bda9516a0370d7ffc2975a48a1d4d4ed5c2e,2016-11-18 11:21:57+07:00,"Disallow specifying too long name and description for qos

Change-Id: I5c3ed086a7b6ac98186a136a2e449d31e8a93aec
Closes-Bug: #1610103"
03f7ec38b6ebcb4badbf04ed5314b8db9f2d941b,2016-11-18 00:42:49-07:00,"Use callbacks to create DVR floating GW port

This stops the DVR mixin from overriding the '_update_fip_assoc'
function in order to create its agent floating IP gateway ports.
It instead now subscribes to the floating IP AFTER_UPDATE event
to create these ports.

Additionally, it fixes the semantics of the floating IP AFTER_UPDATE
event so it's emitted after the update is committed to the DB
so it's safe to call core plugin mutation methods and external systems.

In addition to fixing the callback semantics, this is part of the
effort to eliminate GUARD_TRANSACTION in-tree, which
should pave the way for ML2 to adopt the new engine facade and for
push notifications to safely transmit the latest DB state.

Related-Bug: #1540844
Partially-Implements: blueprint push-notifications
Partially-Implements: blueprint enginefacade-switch
Change-Id: I93e4d847f96707b17c4a7dfdb3bbf81d062fe3fb"
c9358687cae598143cad20fffd16c6c191985ca4,2016-11-18 00:43:16-07:00,"Separate floating IP port creation from transaction

This moves the floating IP port creation outside of the transaction
that creates the floating IP record. This eliminates the use of one
of the GUARD_TRANSACTION flags to prepare us for the enginefacade
switch and correct event notification semantics for push
notifications.

Note that this introduces a small window where the server can die
mid-process and leave an orphaned port without a floating IP. This
is similar to what can happen for router gateway ports. The intention
is to address these in a follow-up patch with a periodic garbage
collection task that will look for floating IP ports with a device
ID of 'PENDING' since the tenant cannot delete them on their own.

Related-Bug: #1540844
Partially-Implements: blueprint push-notifications
Partially-Implements: blueprint enginefacade-switch
Change-Id: Ia4c34c6654a5bfb64fbf06b11b0a29b018c6854f"
5ea4c986d3532ac519c7a2758d8a7e162c5e5bb3,2016-11-18 00:48:24-07:00,"Move DVR fip agent gw port create out of transaction

This shouldn't be happening in a transaction. It creates
port resources in ML2 that need to have correct commit
semantics.

This refactors it to leverage the callback framework and
unifies the codepath for creating these DVR ports after
a router creation and after a router update with a migration.

Related-Bug: #1540844
Partially-Implements: blueprint push-notifications
Partially-Implements: blueprint enginefacade-switch
Change-Id: I15d8d32b54087e4a2ca1bfa74b46fa95adc4b95d"
eef348f74a13f42780713aa9dfca9cc617fa52c8,2016-11-18 19:42:33+09:00,"callbacks: Make the value of FLOATING_IP match with api resource

Note: BEFORE_RESPONSE code assumes they match.  Nova notifier uses
FLOATING_IP/BEFORE_RESPONSE.

Closes-Bug: #1642918
Change-Id: If834ca1ee52d538cae4a5d164e0e0343c7019546"
42b209a6f9918c9fe8a96462b85278569a1cc85d,2016-11-21 19:44:11+00:00,"Fix security_groups_provider_updated for linuxbridge

According to [1], security_groups_provider_updated will get port ids
to update the related security groups.

However, in the firewall of l2 agent, ports are identified by 'device'
attribute. This is fine for ovs agent, because, for ovs agent, port id
is the same as 'device' attribute.

But for other agent, like linuxbridge agent, the 'device' attribute of
port will be the device name. This will make l2 agent can't find port
and fail to update the security group of port. The info message at [2]
can be observed.

The fix is to convert port id list to 'device' list.

[1] http://git.openstack.org/cgit/openstack/neutron/tree/neutron/db/securitygroups_rpc_base.py#n157
[2] http://git.openstack.org/cgit/openstack/neutron/tree/neutron/agent/linux/iptables_firewall.py#n177

Change-Id: Idf9bd7942ef2063cfbc5e9eeead8d49d09883ea8
Closes-Bug: #1555027"
7962dd49eff154acc5d69a6e2a59322a0b2a623b,2016-11-21 19:44:22+00:00,"Metering: sync only active routers hosted on the same host

When syncing data from neutron server, metering-agent may receive
information about routers that are not hosted by the l3-agent on the
same host, because the server didn't filter them out. This could lead to
the following problems:
  * metering-agent tries to setup iptables rules for a router that is not
    on the host
  * metering-agent tries to get get traffic counters for a router that
    was once on the host but is already removed
  * metering-agent not sets up iptables rules for a router that is
    removed then added back to the host, because nothing about the
    router is changed from metering-agent's perspective

This commit fixes the aforementioned problems by making metering-agent
only receive information about routers that are on the same host, and
update metering-agent's knowledge about which routers it should care.

However, there could still be problem if one removes then adds a router
back to the same l3-agent, or just sets the router's admin_state_up
property to False then True in a short time(shorter than the interval
between two syncs). Because the metering-agent sees nothing changed
while during the same time the router's namespace is removed and added
back on the host. Thus metering-agent will fail to get such router's
traffic counters. This commit also make iptables-driver to forget such
routers and leave the metering-agent to reconfigure them later.

Closes-Bug: #1580548

Change-Id: Ia6ae82c676582b06710d6f96b9938c215258182d
Signed-off-by: Hunt Xu <mhuntxu@gmail.com>"
fcc13b5f8fe3bf55b7ef2adc93eaa3b620c67e0d,2016-11-21 19:44:49+00:00,"Refactoring agent metadata config

Refactoring neutron agent metadata config opts to be in
neutron/conf/agent/metadata so that all the configurations options
reside in a centralized location. This simplifies the process of looking
up the config opts and provides an easy way to import.

Change-Id: I8bae1facc58a4f9e21196f625478532403651545
Partial-Bug: #1563069"
d7b40d172935df2bacd050012a12a05791dc4e4a,2016-11-21 19:45:04+00:00,"Refactoring config options for l2 agent ext opts

Refactoring neutron l2 agent extension config agent_ext_manager
and fdb_population opts to be in neutron/conf/agent so that all the
configuration options for l2 agent extensions reside in a centralized
location. This simplifies the process of looking up the l2 agent
extension config opts and provides an easy way to import.

Change-Id: I4ae842c6cfd62edad9a1d435ffad6bec760a2809
Partial-Bug: #1563069"
5e1c3c705e4ab9ca52ae5cef1bdd79443808a27d,2016-11-21 19:46:00+00:00,"Refactoring config options for plugin macvtap opts

Refactoring neutron ml2 plugin macvtap driver config opts to be in
neutron/conf/plugins/ml2/drivers/macvtap so that all the
configuration options for macvtap drivers reside in a centralized
location. This simplifies the process of looking up the macvtap driver
config opts and provides an easy way to import.

Change-Id: I1768eefb9eadcea19bcb675cbd96a6cb728b4123
Partial-Bug: #1563069"
1e91b6392ef73498a8873dbe30287ee8c2d6dbe3,2016-11-21 19:46:08+00:00,"Refactoring config options for plugin l2pop opts

Refactoring neutron ml2 plugin l2pop driver config opts to be in
neutron/conf/plugins/ml2/drivers/l2pop so that all the
configuration options for l2pop drivers reside in a centralized
location. This simplifies the process of looking up the l2pop driver
config opts and provides an easy way to import.

Change-Id: Ia06c0c31ef40c691d67cfc5d514fdff907f5dca4
Partial-Bug: #1563069"
e83d07d00a93ac3902025a0588d4f7c5b74dcd5c,2016-11-22 01:11:39+00:00,"Improve performance of _modify_rules

The _modify_rules method currently uses nested loop to removes rules
that belong to us but don't have the wrap name. Speed up this operation
by storing our rules as set.
Reduce operation complexity from O(n*m) to O(n).

Change-Id: I82e6184a30ddb25f2258e21fe749573af44a52ca
Related-Bug: #1502297"
3e45c19eedccd800d7c6e5f0fce57295cf3a7b02,2016-11-22 16:05:40+00:00,"ovs-agent: Catch exceptions in agent_main_wrapper

When of_interface=native, the ovs agent code is run as a ryuapp thread,
which means it must be properly shut down or the process fails to
terminate.  Catch exceptions and make sure that the agent terminates,
even if in unlucky cases.

Change-Id: I7aebeaa00e2416a275d9ecd940eb28c819349656
Closes-Bug: #1611237"
7d42176853c80545df46c3fa593d7816f12e57cf,2016-11-23 07:21:08+00:00,"ovsdb: don't erase existing ovsdb managers

The current existing agent erases already set ovsdb managers
entries. In some use cases, cloud admin sets ovsdb managers.
eg, for SDN controllers or monitoring purpose. Neutron agent
shouldn't unconditionally erase the existing ovsdb managers.

This patch implements a new api add_manager (along with
get_manager and remove_manager) to the ovsdb api which will
allow us to configure a manager on a switch without overriding
the existing managers.

Closes-Bug: #1614766
Change-Id: Ibf9bd02fac3070d166546cac478ef984e4e43f28
Co-Authored-By: sridhargaddam <sgaddam@redhat.com>
Co-Authored-By: Terry Wilson <twilson@redhat.com>"
29273adaf9c31fa22e4580c5af6eb9469290d38c,2016-11-23 13:08:32+00:00,"Fix InvalidInput exception output

Ensure that only one period ends the data. The exception adds the
period so no need to pass the error_message with a period.

TrivialFix

Change-Id: I411534fc7ea56946a72890808154cc43ba3b6c1d
Closes-bug: #1618881"
562b6380b8489c9c2c23de94979df48a55a8716b,2016-11-23 16:07:57+00:00,"Remove legacy oslo.messaging.notify.drivers

These were deprecated in https://review.openstack.org/247906

Now that Liberty is EOL we can remove these legacy entrypoints.

Closes-Bug: #1639103

Change-Id: I94e61cb219b23ce2f5d0f34dc9ae1c87650568bd"
6566fb1a373a564e1549184711b0938f4995b33f,2016-11-23 12:12:48-08:00,"L3: Only send notifications if l3 plugin exists

Validate that the plugin exists to invoke notifications

Change-Id: Iab970ca633b338e021b2c910281672b2350939c4
Closes-bug: #1618728"
46430ab9a04a34f310c0249f097b616e19d6810a,2016-11-24 08:22:11+08:00,"Get rid of floating IP bgp next_hop query

Based on neutron-dynamic-routing change:
Ic6bb7f4263c6e2da315178be2ed041eb7020c905
then neutron can get rid of floating IP bgp next_hop query.

Related-Bug: #1615919
Partially implements blueprint: bgp-spinout

Change-Id: Iad7d9353a52922e956f2860e30ced3fb5672be48"
4e9650000b42a693a32541079a77ae4416dfadf7,2016-11-24 11:43:01+00:00,"Revert ""DHCP agent: advertise SLAAC prefixes""

This reverts commit 11c3f0cafd62f9f9b46fd494f9cc6c372f77b1c9.

This patch broke all CentOS installations that ship dnsmasq 2.66 that
does not support --ra-param CLI argument.

Change-Id: I1919f9d3af40bb2f10693420ae08e1ec62accb65
Closes-Bug: #1644312"
9e006cbe64717f3743a215293586713394c47467,2016-11-24 04:46:22-08:00,"Capture NotFound Exceptions in subnet postcommit

Change I28323eddcf34fd12002cc706f4a9bcbb3f976ceb introduced
a subtle difference in the types of exceptions that can be
encountered during the operations after creating a subnet.

Before that change, a giant enclosing transaction would provide
REPEATABLE READ guarantees, so once a port was looked up by
IPAM, calling update_port on that port afterwards in the same
transaction would not result in a PortNotFound exception.
The same applied to looking up a router and then updating its
gateway port.

Now that there is no giant enclosing transaction, we have to
capture the possible PortNotFound and RouterNotFound exceptions
that can occur during these post commit subnet create operations.

Closes-Bug: #1644502
Change-Id: I29e2bf7bcda37ebbcee193f94c8b03df90f24ef1"
9660c2f0b362705e5e7b49dc9a6d0495a1141fbf,2016-11-24 20:49:58+05:18,"Update network dict with segment and mtu info in _create_subnet_db

Without this, the mech driver create_submit_(pre/post)commit functions
when called will not have segment and network mtu information in
context.network.current.

Change-Id: I3214a19e2374221b211ac7ab9b98842a1bdfc4a7
Closes-bug: #1644519"
62176a9b40619327aacee9ed4162252d1245d019,2016-11-25 06:59:54+01:00,"Solve unexpected NoneType returned by _get_routers_can_schedule.

Solve a problem with an unexpected NoneType returned by
_get_routers_can_schedule called from within
_schedule_ha_routers_to_additional_agent when using:

router_scheduler_driver =
    neutron.scheduler.l3_agent_scheduler.AZLeastRoutersScheduler

This was leading to problems with starting neutron-l3-agent on network
nodes, causing HA routers to fail to start.

Closes-Bug: #1641879
Change-Id: I33c5a6214670f0ada9c2293b0eb2ff243f6f7b1b"
f33bada2a9290126020a761a60446963e46d448d,2016-11-25 15:01:03-05:00,"Remove PLURALS

It's written to but never read from!

Related-Bug: #1642426

This patch is required by neutron-lib adoption because it is part of
rehoming neutron/api/v2/attributes.py. All subprojects that reference
PLURALS must be patched to remove the reference.

NeutronLibImpact

Change-Id: Ifdf29b8fc4c824c0ee840c4f51593a5aa8a22127"
3b610a1debdfb99def758406b1604aa3273edeea,2016-11-28 10:04:03+09:00,"Add missing revises_on_change attribute

This patch adds revises_on_change attribute to the following models
and API tests to ensure the correct behaviour:

ExternalNetwork (Network)
RouterExtraAttributes (Router)
QosPortPolicyBinding (Port)
QosNetworkPolicyBinding (Network)
PortBindingPort (Port)
SegmentHostMapping (Network Segment)

Change-Id: I8bda9fc940e99d18bab2b4229198374f1cabf84b
Closes-Bug: #1642517"
69d73630301a9c2d55781920c47b3c29a2cd0fc4,2016-11-28 03:43:47-08:00,"ml2: Add original port to context on _bind_port

During portbinding a new PortContext with the binding information
for the new host gets created. This patch adds the original
port to the newly created context. This has the following effects

- When the port was not bound before, context.original will be set
  set to None on portbinding.

- When the port was bound before (also if binding failed before)
  context.original is set to this port dict on portbinding. This
  happens mostly in the following scenarios:

  - Nova triggers a reschedule of an instance
    Nova reschedules an instance to another host, after spawning an
    instance on the first host failed for some reason. In this case,
    context.original is set to the port with the binding information
    as it was on the failed host.

  - Live Migration
    The port is now available on another host. context.original is
    set to the port and binding information of the source host.

Context.original can now be used in mechanism drivers that need to be
migration aware. This is the case for the macvtap mechanism driver.
The corresponding functionality will be added with patch [1].

[1] https://review.openstack.org/#/c/361301

Partial-Bug: #1550400

Change-Id: I2b60243366505f6e6e4c716d627255a56a4ba486"
6aa9a3cd63f07f982bde7bdd1243c40bdf37349b,2016-11-28 19:22:13+00:00,"Fix OSprofiler support

During the new OSprofiler initialization method introduction
there was an issue introduced - OSprofiler expects context
to be a dict, not Context object. This patch fixes it.

Change-Id: I8b42aa47276c6e7ef362cf9ed4501ee732b5cc4b
Closes-Bug: #1644437"
d1930cefd27448eefc373a229a26f8da25581983,2016-11-28 12:20:25-08:00,"Lock in DHCP agent based on network_id

All cache operations and dnsmasq process operations
are scoped to a network ID so we can always safely
perform concurrent actions on different network IDs.
This patch adjusts the DHCP agent to lock based on
network ID rather than having a global lock for every
operation.

sync_state calls are still protected with a reader/writer
lock to ensure that when sync_state needs to run, all
other operations are blocked.

Related-Bug: #1548190
Change-Id: I56010dc801d82be56f12e834c5164316872c2f8b"
b5223453bcc92acdcec41420fdd03debf0a8afa2,2016-11-28 17:26:11-05:00,"Calculate IPv4 DHCP subnets once for metadata

When enabling metadata, we iterate through the subnets
on a network multiple times.  Do it only once at the
beginning and return early if there are no candidates.
Follow-on to comments in an earlier review,
https://review.openstack.org/#/c/293237

Had to fix a few tests that were creating ""fake"" subnets
without an ip_version attribute or passing a network
mock instead of a fake one.

Change-Id: I57dfeec339a072e78242373bf793dbbf04e8e4c3"
c95295290f1687617a62b959d58642282992bded,2016-11-29 03:15:12+00:00,"Renamed all [AGENT] config sections into [agent]

Though oslo.config should not care about the case, it seems like
oslo-config-generator creates two separate sections with different case
if both are included.

Related-Bug: #1643944
Change-Id: I2f8a737d3c027d57a8a16e80838142a78dbd315d"
10c0e361e934cde604c7ee6f6327110c7b63bd46,2016-11-29 13:29:22+09:00,"gate_hook: Remove a stale comment

I believe the bug has been fixed.

Related-Bug: #1583214
Change-Id: I8ec819858c0235f657aff8c7233eb82548e7d737"
0daed9ebcab7d46d066fd9d8af576d9aca0a7205,2016-11-29 14:37:05+09:00,"Add notify for tag operations

When a tag's added to (or removed from) a resource, no notification is
generated indicating that the network (or port or whatever) has changed.
This patch adds notify for tag operations.

Change-Id: I4373b2220f87751a4d89462bef37d04bf9a71fe7
Closes-Bug: #1560226"
61eb74af31125c7cb68f2d198602b15e505b2ee3,2016-11-29 12:34:19+00:00,"Remove allow_pagination and allow_sorting config options

They were deprecated in Newton. This patch cleans them up.

Note: it does not mean that the features will not work anymore. On the
contrary, now API will consistently sort and paginate for plugins that
honour the relevant sorting/pagination parameters.

Note2: base resource controller still allows to pass
allow_pagination=False and allow_sorting=False parameters to disable the
features if a registered plugin does not support the features yet.

Change-Id: I5fd30b20f645846d9366740372c4815c4b33e2eb
Related-Bug: #1566514"
4c41a259c93e326d5635164047c72c9de207fde5,2016-11-29 17:54:27+02:00,"Migrate device_owner for router's interface

When migrating a HA router to legacy, the router's interface (whose
device_owner is network:ha_router_replicated_interface) isn't changed
to network:router_interface. This means that certain actions (such as
trying to use 'neutron router-interface-delete' and migrating the router
to DVR) won't work (since a router interface of the appropriate type
can't be found and an SNAT port won't be created, respectively). This
patch takes care of the needed migration.

Closes-Bug: #1645716
Change-Id: I0c18ccf08ddfa57fde9b5ac331101497079bd330"
9168dbf93d70ec4df6ab29d2b300497fef401682,2016-11-29 16:19:03+00:00,"Delete conntrack when remote ipset member removed

Through [1] ipset members are updated in update_security_group_members
instead of updating during firewall apply. In the same way, we will
delete conntrack entries immediately after deleting remote ipset
members(in update_security_group_members) instead of deleting them after
firewall apply.

As explained in [2], this change partially fixes bug #1580377 i.e it
deletes conntrack entries on remote hosts for a removed port.

[1] https://review.openstack.org/#/c/347068/
[2] https://bugs.launchpad.net/neutron/+bug/1580377/comments/13

Co-Authored-By:shihanzhang <shihanzhang@huawei.com>
Partial-Bug: #1580377
Change-Id: Iea3344a24e2a068b794c44796b4c945432379c13"
78d5b240c09c326a1e3e4abdaa23111246e2b82b,2016-11-29 22:57:38+00:00,"Refactoring config options for mech_sriov opts

Refactoring neutron ml2 plugin mech_sriov config opts to be in
neutron/conf/plugins/ml2/drivers/mech_sriov so that all the
configuration options for mech_sriov reside in a centralized
location. This simplifies the process of looking up the mech_sriov
config opts and provides an easy way to import.

Change-Id: I64b243f91f2e637279456b3b06c2998cd89dc076
Partial-Bug: #1563069"
028a349bc531cbcd91fd15f072be4b84952376b8,2016-11-29 21:18:47-05:00,"Skip larger than /64 subnets in DHCP agent

Dnsmasq can't handle these in IPv6 so we need to skip them to avoid
a whole bunch of log noise caused by continual retrying of issues.

Closes-Bug: #1645616
Change-Id: I36d167506cc45731e3f500a0c59b70b1bc27590f"
2e621eeb1cdfae5ceb3c83eb6befcb954f0b6cec,2016-11-30 05:02:46+00:00,"Use to_policy_values for policy enforcement

Use the common policy values for all services when enforcing policy
decisions. We add all possibly used policy values to maintain backwards
compatibility.

Change-Id: Ie1d0739ab4dfb0654d8767693dbdba5cd52a30b2
Closes-Bug: #1602081"
42031f75478e888b756a74a22bfa4672a93dd4d6,2016-12-01 11:13:54-06:00,"Refactoring config opts for ml2 plugin openvswitch

Refactoring ml2 plugin openvswitch driver configuration options to be
in neutron/conf/plugins/ml2/drivers. This would allow centralization
of all configuration options and provides an easy way to import.

Change-Id: Ie8c6023b2d012eae7ecdb99d5d413956608f4294
Partial-Bug: #1563069"
d8055d52e5c6f3e0dfd49b857f715edae6520e03,2016-12-02 18:41:03+00:00,"Support alembic 0.8.9 in test_autogen_process_directives

The test case validates that autogenerated alembic commands meet
our expectations.

The new alembic version adds a leading '# ' to each autogenerated
comment to make flake8 happy. This patch adopts the test case to handle
both new and older versions. This is achieved by switching from exact
match to using a regexp.

Change-Id: I9ca411e5b3d20412fffa05f6eb79659f6c56f3fd
Closes-Bug: #1647027"
fc251bf72cb962972d6237d5c2b7e50e3dac377a,2016-12-04 07:22:38+00:00,"Expose [agent] extensions option into l3_agent.ini

This option was added in Newton as part of blueprint l3-agent-extensions
but was not exposed into the sample config file.

Change-Id: Ifdb60032223d37858f41e6c3efc18f0de72912db
Closes-Bug: #1643944"
8fcba9dec801a0fb57ff29f97838958f083c8131,2016-12-05 11:46:45+01:00,"QoS: update the database before notifying the backend on delete

Previously, the QoS plugin was executing the DB delete operation
after notifying the backend about the operation. This leads
to situations where the backend is notified for deletion, and
then the policy can't be deleted because it's in use.

Correct order is, DB delete first, then notify the backend.

Change-Id: I357543832b9359bf169d05d079bd153f0ee591c4
Closes-Bug: #1646370"
91d048dbde83a52f43aceebaf1b1e1ef0937602d,2016-12-05 17:54:41+01:00,"Allow keystone v3 in the designate driver

Using the loader from keystoneauth1, it is possible to easily use
keystone v3 options in [designate].
For the end user, it means she/he must specify designate.auth_type,
then she/he can specify an Keystone v3 endpoint in designate.auth_url.

Change-Id: I8bb02f11e60767dacdf6ac852979cfa82de1e08b
Closes-bug: #1585976
DocImpact"
26020fed035f8e75346331ec0b7b6a2c913d867d,2016-12-06 15:05:07+09:00,"doc: Fix a warning

Fix the following warning:
    WARNING: Block quote ends without a blank line; unexpected unindent.

Closes-Bug: #1647541
Change-Id: I1025a22c4c97ca1b824f5fa26bfa3b354d42f4b8"
a2f971c7bf363631af5a153a29c226a7e7529050,2016-12-06 15:51:16+01:00,"Remove fallback functions in agent/rpc

agent/rpc contains fallback functionality that
aren't needed any longer.

Change-Id: Ifd2d37c1e13bcf886c93860ae2313053225bed2f
Closes-bug: #1647730"
4f4d9ad3d33da85df2530347617b9dbc33543e54,2016-12-07 03:12:03+00:00,"Add validation for security_groups parameter in Port

Currently, we check whether specified value in list
matches with UUID format or not.
However, we don't check whether data type of specified value of
security_groups key is list in the first place.
This patch adds check above.

Change-Id: If027df3ff34b219e4a043934b9461ac0fcb40156
Closes-Bug: #1477921"
2acdcedb594d06e7c9f4f14e017c918a4a65c6b2,2016-12-07 10:07:53+00:00,"Delete related conntrack when delete vm

When deleting vm, the conntrack for this vm is still
exist. This patch deletes removed port's conntrack entries
only in port's hosting node. Another patch [1] removes
this port's conntrack entries in remote hosts.

[1] https://review.openstack.org/#/c/352440/

Closes-Bug: #1580377
Change-Id: Ia8132a62050eaa5e01377f653337b5792f158e2f"
bb78621a72bb0f54205fac57e19d4679143bc3f3,2016-12-07 15:11:43+00:00,"Make UUIDField actually validate UUIDs

Instead of using oslo.versionedobjects UUID type, use a custom UUIDField
class located in common_types that will actually validate passed values
for UUID-ness.

Closes-Bug: #1614537
Change-Id: I20b24ee57c521b1c68977c2ff7ae56b56875dd64"
6948467b770df68cb96877f3e0e710650ad63fd4,2016-12-07 11:38:29-05:00,"Add janitor to cleanup orphaned fip ports

This adds a janitor worker to the L3 DB module that
will run every 5 minutes looking for floating IP ports
with the device_id of 'PENDING'. If it finds any, it
will keep track of the port ID to see if any stay in
'PENDING' with the next iteration.

If the device ID is still PENDING after 5 minutes, it
means one of two things has happened. Either the server
died after creating the floating IP port, but before
creating the floating IP itself; or, it died after creating
the floating IP port and the floating IP record, but before
updating the device_id of the floating IP port to the
floating IP ID.

The janitor handles both cases by deleting the floating IP
port if it has no associated floating IP and by updating
the floating IP port device ID if it does have an associated
floating IP.

Related-Bug: #1540844
Closes-Bug: #1648098
Change-Id: I684a822553a5a0c54513ca7d20ccaf3c74180593"
21bb77667007b0b140c17d9104204943c4a0f4cc,2016-12-07 12:32:06-05:00,"Correctly configure IPv6 addresses on upgrades

When starting the dhcp-agent after an upgrade, there could
be stale IPv6 addresses in the namespace that had been
configured via SLAAC.  These need to be removed, and the
same address added back statically, in order for the
agent to start up correctly.

To avoid the race condition where an IPv6 RA could arrive
while we are making this change, we must move the call
to disable RAs in the namespace from plug(), since devices
may already exist that are receiving packets.

Uncovered by the grenade tests.

Change-Id: I7e1e5d6c1fa938918aac3fb63888d20ff4088ba7
Closes-bug: #1627902"
1a2a71baf3904209679fc5448814a0e7940fe44d,2016-12-07 12:01:43-08:00,"SRIOV: don't block report_state with device count

The device count process can be quite slow on a system with
lots of interfaces. Doing this during report_state can block
it long enough that the agent will be reported as dead and
bindings will fail.

This adjusts the logic to only update the configuration during
the normal device retrieval for the scan loop. This will leave
the report_state loop unblocked by the operation so the agent
doesn't get reported as dead (which blocks port binding).

Closes-Bug: #1648206
Change-Id: Iff45fb6617974b1eceeed238a8d9e958f874f12b"
6578c531ad2452134760038524bbc0b26efce319,2016-12-07 15:37:57-05:00,"Remove deprecated dhcp_domain from dhcp_agent.ini

The dhcp_domain value in dhcp_agent.ini value had been
marked for deprecation in favor of using dns_domain in
neutron.conf back in Liberty [1].  Remove it.

[1] https://review.openstack.org/#/c/200952/

Change-Id: Iebde452559f88ca95713664136da1613cac9b32c
Closes-bug: #1583769"
ec6ed98cfaca455a663c0e6909b7faeb703a349e,2016-12-08 16:51:13-05:00,"DVR: Fix IPtables driver for metering with DVR routers

IPTables driver for metering was not handling the DVR router
namespaces properly for configuring the metering forward rules.

This patch addresses the issue by configuring the iptables
manager based on the availability of the namespace and selecting
the respective namespaces such as router namespace and snat
namespace with the right external device.

Change-Id: I6790d6ff42d9f8fa220e1a231ae94cbf8b60506c
Closes-Bug: #1506567"
d352661c56d5f03713e615b7e0c2c9c8688e0132,2016-12-09 12:33:30+00:00,"Revert ""lb-agent: ensure tap mtu is the same as physical device""

This reverts commit 6cf92011143eb55adda180ffac91886566fc7826.

Conflicts:
	neutron/plugins/linuxbridge/agent/linuxbridge_neutron_agent.py
	neutron/tests/unit/plugins/linuxbridge/agent/test_linuxbridge_neutron_agent.py

This hack was used to copy MTU from physical bridges to tap devices to
support Jumbo frames. Now that we have proper MTU behaviour in interface
drivers, this is not needed.

This hack makes all efforts of the interface driver to set the correct
network MTU on all ports ineffective. It breaks multinode grenade
linuxbridge job, among other things.

Even back in Liberty times when it was introduced, there was no real
need to explicitly set Jumbo aware MTU on tap devices from Neutron side.
This could have been achieved by setting network_device_mtu on Nova side
in addition to Neutron:

https://github.com/openstack/nova/blob/liberty-eol/nova/network/linux_net.py#L1590

Change-Id: I53c0eb57da956b36f09731d25db989719e9bc9dc
Related-Bug: #1605271"
a5a8a37344f6d193886ae8d047664aef76920ed8,2016-12-09 11:49:09-08:00,"Check for unbound ports in L3 RPC handler

The handler was making the incorrect assumption that once a
host_id was set, a port which failed to bind could only be in
the 'binding_failed' state. So it would not try to rebind ports
that encountered an exeption during port binding commit that left
them in the unbound state.

Change-Id: I28bbeda5fed4275ea38e27308518f89df9ab4eff
Closes-Bug: #1648879"
a1817f7d456609d6dae1ede00b7a4bcf9629282f,2016-12-10 14:16:01+00:00,"Optimize trunk details extension hook

As per findings [1], the hook was found to be a burden. That is
because of the lazy join on every DB lookup required to fetch
the MAC for the subport. Instead of issuing a gazillion JOINs
(one per each subport), this patch modifies the loop and speed
it up at the expenses of some temporary memory cost: it does so
by building a temporary map, looking up ports by IDs (which is
bleeding fast) and reassembling the data from the temp map as
the API expects it to be. Pronto!

[1] https://wiki.openstack.org/wiki/Neutron_Trunk_API_Performance_and_Scaling#surprise_effect_on_filtered_port_listings

Closes-bug: #bug/1648714

Change-Id: I58e39dbf1c83e1204d8d7f436395531ca096b1ab"
fd3eebbec4ae95019a7135679248b753c391504e,2016-12-11 22:45:40+08:00,"Unplug external device when delete snat namespace

[1] allow us to identify the stale snat namespace and delete the
namespace when the gateway is cleared as the agent restarts. But Method
SnatNamespace.delete unplugs 'sg-XXX' devices only, leads to stale
port remaining in ovs bridge.

This patch identify the stale external device and unplug it.

[1] https://review.openstack.org/#/c/326729/

Change-Id: I27fff32aeeecdc599a578637f390dc1d73f0171b
Closes-Bug: #1649092"
60dc1a0ce04968b39100ce7ab252fd1e07cbbbb0,2016-12-12 11:15:52+09:00,"tempest: Fix qos extension check

Fix issues introduced by the recent change. [1]

[1] I88e59cdbd79afb5337052ba3e5aecb96c7c8ea1c

Closes-Bug: #1649171
Change-Id: I2a2b627fd30ec564d8c8566fd3e46eb889e15dc9"
1800ae63c2c1b6366f555c2f943e97f361c9ecd4,2016-12-12 12:40:03+00:00,"Fix DHCP Port Creation on Service Subnets

This changes the IPAM logic for service subnets to allow DHCP ports
to be created on subnets of any service type, provided that the subnet
has DHCP enabled.. This ensures that DHCP ports can still be created
automatically on 'nova:compute' service subnets, for example.

DocImpact

Change-Id: I736262f2a7d3f3d7dfdc5276e2364aca7187d18b
Closes-Bug: #1636963"
503fc8c9187912062d7ade1d9c7933973f6ad0bc,2016-12-13 15:22:11+08:00,"Remove duplicated revises_on_change in qos db model

Both [1] and [2] add revises_on_change to qos db model. This patch
removes the duplication.

[1] 3b610a1debdfb99def758406b1604aa3273edeea
[2] 0e51574b2fb299eb42d6f5333e68f70244b08d50

Change-Id: I93c80e4f7d2b1c0989d1889e11f586cc5dc09bc5
Closes-Bug: #1649488"
fd3bf3327cada36ef57eefebabc78a112298be8d,2016-12-13 11:14:27+00:00,"DSCP packet marking support in Linuxbridge agent

Linuxbridge agent uses iptable rules in POSTROUTING chain
in the mangle table to mark outgoing packets with the
DSCP mark value configured by the user in QoS policy.

DocImpact: DSCP Marking rule support is extended to the
           Linuxbridge L2 agent

Closes-Bug: #1644369

Change-Id: I47e44cb2e67ab73bd5ee0aa4cca47cb3d07e43f3"
1866bd4b45f0eb6266ff5a608729f24e4090cfa4,2016-12-13 15:14:46+00:00,"Bulk creation of SecurityGroups

Currently, Bulk Creation of security groups
is enabled, but due to a mismatch in the function
signature, it is not possible to create security
groups in bulk.
This patch allows the same.

Change-Id: Id1c7a520aa1bb58984b199c86aca2267b98e6b3e
Closes-Bug: #1604662"
d40322c7d4aa1dd6d595dfe415278c9f252f4da2,2016-12-13 10:58:08-05:00,"DVR: Fix race condition in creation of fip gateway

In large-scale environments, we have seen a router update
arrive for one tenant while we are still creating the
router for a different tenant and initializing the shared
floating IP gateway port.  Sometimes these updates can
get scheduled simultaneously, with the second running
before we are done creating all the resources in the
first, causing an exception when trying to set the
default route since either the interface or IP address
does not exist yet.

Add a lock to better synchronize these functions so
a create can finish before an update can be done.

If it still fails, we will throw an exception so that
the namespace will be cleaned-up and the update can be
re-scheduled for the next iteration.

Closes-Bug: #1631513
Change-Id: Ia8c92cea2f8798582c39ad3450ab3b3c45a356f7"
e45d2a904d76e840a55b15d8f94a548a35e5969b,2016-12-13 21:27:43+00:00,"Correctly print --limit value passed via API

Passing an invalid limit value, for example '--limit -1'
in neutronclient, generates this error from the API:

  Bad limit request: Limit must be an integer 0 or
  greater and not '%d'.

It should print what was passed.

Closes-bug: #1649665

Change-Id: I9b8bd67d344cd91e008f7c897f1ea6a020a9c30b"
7b6e236c7c02f81f268bfc9c9089d523187d543e,2016-12-14 23:50:19+09:00,"Restore extraroute dict after OVO change

A recently merged OVO change [1] made the dict have netaddr objects.
This change restores plain strings so that it can be JSON
serializable again.

[1] I2439116abf051d0e19821ba53895fa0c724f6a96

Partially-Implements: blueprint adopt-oslo-versioned-objects-for-db
Closes-Bug: #1649733
Change-Id: Ie64aa161f1a2bb17098d88db20195b7e84bb0eae"
5c8dffa7fb6c95a04a7b50c7d6e63c9a2729231b,2016-12-15 22:27:12+00:00,"Update MTU on existing devices

This patch makes OVS and Linuxbridge interface drivers to set MTU on
plug() attempt if the device already exists. This helps when network MTU
changes (which happens after some configuration file changes).

This will allow to update MTU values on agent restart, without the need
to bind all ports to new nodes, that would involve migrating agents. It
will also help in case when you have no other nodes to migrate to (in
single node mode).

Both OVS and Linuxbridge interface drivers are updated.

Other drivers (in-tree IVS as well as 3party drivers) will use the
default set_mtu implementation, that only warns about the missing
feature (once per process startup).

DocImpact suggest to restart agents after MTU config changes instead of
          rewiring router/DHCP ports.

Related: If438e4816b425e6c5021a55567dcaaa77d1fffff
Related: If09eda334cddc74910dda7a4fb498b7987714be3
Closes-Bug: #1649845
Change-Id: I3c6d6cb55c5808facec38f87114c2ddf548f05f1"
3bac4060f5a2f297ae270eaf0729a030fd15444d,2016-12-16 03:32:07+00:00,"Document how to proceed with new platform features

Updated effective neutron guide to reflect that we should not start
using new features in code without checking common platform for these
features' availability in distro packages. If some are indeed missing a
feature, we may need to revisit the direction, or talk to distros, or
handle failures gracefully.

Change-Id: I38cbe19ae0134fb129aad1fa80cc712a17ab94ad
Related-Bug: #1644312"
02fa4a1fbfbbb843a02c9d1aeb45c250373d937c,2016-12-16 16:45:54+00:00,"Ensure random object unique constraints aren't violated

The unit test framework for objects generates random values
for the objects it creates. We need to pay attention to
previously generated values to avoid using the same value
for data models that have unique constrains.

Closes-Bug: #1650615
Change-Id: I0c54b0d82b8c15f2740cce5a850c8fa50acba536"
605df9cb9451614ac801ffd3650f9cbe771e7ec3,2016-12-17 07:39:59+00:00,"Moving pyroute and oslo.privsep deps into requirements.txt

It is true that the code using the modules is still utilized in tests
only; but it's also true that those deps are now needed for example for
oslo-config-generator to work, so in the end, it's not only about tests.

Change-Id: I9e27aca32be03130057e00c727d29cb26532e860
Related-Bug: #1492714"
a802b382d331423bf3449665dcfa7c48d7b8e094,2016-12-19 18:33:43+00:00,"Use subqueries for rbac_entries and subnets<->network

Loading subnets as part of the networks list and networks
as part of the subnets list appears to have a significant
impact when the network has tags and the subnets have
extra routes entries. This is even further compounded by
the network having rbac entries (likely due to the subnet
inheriting the RBAC entries of the network with the custom
join condition in the model).

This patch converts rbac_entries on both subnet and network
to use a subquery and converts the network and subnets
relationships on the subnet and network models (respectively)
to use subqueries as well.

On my dev environment after running the script in the report,
a network list took 5 minutes. Converting just the rbac_entries
or just the network/subnet relationship to subqueries reduced it
to 3-5 seconds. Converting both (as this patch does), reduces it
back down to a couple of hundred milliseconds (normal perf of my
development env with the current network count).

Subqueries will just cost us a constant number of queries and
won't scale up with result count so this should not impact scalability
in any way.

None of these fields are queryable from the API, so we don't need
to worry about breaking queries against the models.

Partial-Bug: #1649317
Change-Id: Ic1947e3d78d58a79b21344b10cb7ab0e573e419f"
6bd3ad2bb3d52a4d51d357656525abdb6ebb696e,2016-12-19 11:20:54-08:00,"Bump revision of resource on tag add/remove

This updates the tag to bump the revision of the standard
attr record it's associated with. This required a small change
to include a bump revision method directly on the standard
attr records.

Closes-Bug: #1643879
Change-Id: Ia096cd342ed3eeec33a8ae64efe13d469c375dd6"
e48caf6736426e6cabc94fe3f7fbcdaf26c21dc1,2016-12-19 17:08:23-05:00,"Add agent object in router info

agent object is a member of some sub classes of RouterInfo such as
HaRouter. This changeset makes it a member of the RouterInfo class
itself.

Prior to the change, the agent object has been passed in to some
methods of RouterInfo that requires it to access the agent object's
member information. The bugs in concern requires calling the PD object
that is a member of the agent object to get IPs that need to be
preserved in the gateway port. Without this change, signatures of the
methods external_gateway_added() and external_gateway_updated() have
to be modified to pass in the agent object. And any subclass of
RouterInfo that overwrites or uses the methods must be changed as
well. It doesn't seem to make sense considering the subclass such as
HaRouter has the agent object as one of its members already.

The changeset fixes the bugs by preserving the LLAs for prefix
delegation when the gateway port is being updated.

Closes-Bug: #1639042
Closes-Bug: #1640271

Change-Id: I61c6128ed1973deb8440c54234e77a66987d7e28"
1d38f30555384257445f0d119a307e74e88d7fbf,2016-12-20 10:52:41+00:00,"Kill processes when cleaning up namespaces

This patch will kill processes that are listening on any port/UNIX
socket within the namespace to be cleaned up. To kill them it will
issue a SIGTERM to them (or to their parents if they were forked) and,
if they don't die after a few seconds, a SIGKILL to them and all their
children.

This is intended for those cases when there's no specific cleanup and
serves as a fallback method.

Change-Id: I4195f633ef4a1788496d1293846f19eef89416aa
Partial-Bug: #1403455"
2d453e579241ba67e044d4e467bdc3d8d9f5e258,2016-12-20 16:16:08+00:00,"Remove test cases that moved to tempest

Remove the follow three test cases that have been added (or updated if
the same case already existed) in tempest [1]:
- test_networks.NetworksTestJSON.test_show_network_fields
- test_networks.NetworksTestJSON.test_list_networks_fields
- test_networks.NetworksTestJSON.test_create_update_network_description

[1] : https://review.openstack.org/#/c/374645/

Change-Id: I919e11194939bb60be90455ed5e585cd6a894e5e
Related-Bug: #1552960"
e9efe86856c77721e289654bea8629cd1d160b76,2016-12-21 08:27:07+02:00,"SR-IOV: remove ml2_conf_sriov.ini from oslo-config-generator

This I42dadfd0b62730ca2d34d37cb63f19f6fec75567 patch
remove the supported_pci_vendor_devs option and now
no additional options are required for sriov ml2 mech
driver. The is a clean up patch to remove also the
ml2_conf_sriov.ini from the oslo-config-generator.

Closes-Bug: #1641220

Change-Id: Ida6c0930ce65169a9bc59ef80d6b427b2d5d4e09"
22352f5d4c595e373bb73c8bc590e6d3e621dac0,2016-12-21 14:48:46+08:00,"Remove iptables nat and mangle rules for security group

There is no need to add iptables nat and mangle rules for security
group, these rules will slow down network performance especially
when using 6wind Virtual Accelerator.

Change-Id: I1d5748394665535d114e8d942a68d5bd43927058
Closes-Bug: #1650466"
92199dbd83a1a5a9c02cb2d9e2651d3f285b611e,2016-12-21 16:54:46+09:00,"of_interface: Revert patching ryu

To handle the mentioned bug, commit 4361f754 patched a internal data
structure of ryu, which was a necessary evil at the time of the commit.
The data has been added in ryu-4.7 and the patch is no longer needed.

Change-Id: I0ecf1841dd84ab40e919e8e0817806a75b9aa9de
Related-bug: #1622017"
af0c53887c24b155842bd29ca73dc3800b4b1ec4,2016-12-21 17:24:21+00:00,"iptables: don't enable arptables firewall

We don't use any arptables based firewall rules. This should somewhat
optimize kernel packet processing performance.

I think the setting came from:
http://wiki.libvirt.org/page/Net.bridge.bridge-nf-call_and_sysctl.conf

but does not apply to the way we use iptables.

Depends-On: I41796c76172f5243e4f9c4902363abb1f19d0d12
Change-Id: I5de6cf0fac4d957ada816d3cd2ae1df9831f333d
Closes-Bug: #1651765"
5c02e1f0ca965514a5f1bada0ed2e4a90de7c7d5,2016-12-21 15:52:22-05:00,"Fix python3 issues with devstack

use six.b() as write() params have changed:
https://docs.python.org/2/library/stdtypes.html#file.write
https://docs.python.org/3/library/os.html#os.write

Change-Id: I276809f26a7a6fe6cc05203dc44fe30128e6090c"
55a25bdfaf066523e1faa4e8124e3c1c40add506,2016-12-22 19:34:24+00:00,"Fix a bug in process_spawn binding on ports

process_spawn module is used in netns-cleanup functional tests. This
module forks processes which will listen on random ports/sockets.
Due to the lack of randomness on how get_free_namespace_port() from
net_helpers was used, all forked processes got the same sequence of
ports to bind on. This led to a race condition and some stayed
alive without actually listening on any port/socket.

Also, the ignore_sigterm feature wasn't handled properly and parent
always died after a SIGTERM which caused the test to fail when the
above condition happened since netns-cleanup wasn't able to find its
parent and kill the process which failed to bind.

Change-Id: I2f6e1f99eae595e3ea8c10998a7ad3c861a694f4
Closes-Bug: #1652124"
9bab88ba83a6f395cfec5d1351a1597c05fee607,2016-12-23 13:31:49+00:00,"Account for unwire failures during OVS trunk rewiring operations

If a failure occurs while unwiring stale ports, we currently
ignore the outcome of the operation, whereas we should at least
warn the user that something is not quite as it is supposed
to be.

This patch makes sure that trunk status is accurately reflected
after a sequence of unwire+wire operations for a given trunk.

Closes-bug: #1649887

Change-Id: I3b6ed57e00c0146babe23ea6ed0ca14e83020d26"
45ef8997e81c2648c6f8f10aafe427abe7b5730a,2016-12-23 10:59:57-05:00,"Remove Duplicate line in privsep.filters

Only one line is picked up by configparser, so we should just
have one in the default privsep.filters file. This was found when
a stricter configparser kicked in for a python3.5 test.

Closes-Bug: #1652157
Change-Id: Ib7d9aa0e0b74a936002e0eea0b3af05102b06a62"
8ef0979700afc90634535b6991975ade639324d5,2016-12-24 01:33:50+09:00,"gate_hook: Add a no-op rally case

This is the first step of the following plan:

    1. make neutron's gate_hook accept ""rally"" but do nothing.
    2. make project-config change to consume the gate_hook
    3. make the rest of neutron change

Partial-Bug: #1643451
Change-Id: I0a309272ec46b8477fe57eeb676a5cd850e4d60b"
6958829471160bd13c6db8795cdbe61b81356c7d,2016-12-28 12:08:07+00:00,"Do not try and remove non-existent iptables chains

When creating a new filter for a port, there is no need
to remove any iptables chains as none should exist.  This
just leads to more work and increases the number of logging
messages about non-existent chains.

Change-Id: I1cecd39cf5fd046d84a1ef47c245a0a22e9323cb
Partial-bug: #1642770"
2ad9c679ed8718633732da1e97307f9fd9647dcc,2016-12-29 11:30:20+02:00,"Don't create HA resources until needed

Change I3447ea5bcb7c57365c6f50efe12a1671e86588b3 introduced a new
running-index for RouterL3AgentBinding, binding_index, which helps to
keep count of how many bindings a router has for each agent (and how
many bindings in total). Since we were able use this DB column to make
sure concurrency doesn't break on creating a new HA router, we also
postponed the creation of L3HARouterAgentPortBinding to after the first
binding was successfully created.

This patch proposes a change to the way routers are scheduled to an
agent: when creating a new HA router, no L3HARouterAgentPortBinding
entities will be created until after the corresponding
RouterL3AgentBinding was successfully created.
In other words, instead of pre-creating the L3HARouterAgentPortBinding
objects without assigning it to an agent, we'll create them only after
the RouterL3AgentBinding were successfully created.

Related-Bug: #1609738
Change-Id: Ie98d5e3760cdb17450aea546f4b61f5ba14baf1c"
0af6e6ded04c994b788836906d94fe097b581a0b,2017-01-03 16:02:30+08:00,"Change the order of installing flows for br-int

For ovs-agent, it uses CANARY_TABLE table to check ovs status, when
ovs-agent restarts, it should firstly install flows for CANARY_TABLE
table.

Closes-bug: #1642223
Change-Id: I2aebbe5faca2fd4ec137255f0413cc2c129a4588"
7fc79f43dce4411291074d07dcf9eb7ae108fe04,2017-01-03 04:34:44-08:00,"Refactors QosAgentDriver

QosAgentDriver has a method which uses linux specific module, which
is trying to import pyroute2.

Module pyroute2 tries to import a module from socket which does not
exists on windows (socket.inet_pton[1]). This can cause neutron
services to fail to start on windows[2].

[1]: https://docs.python.org/2/library/socket.html#socket.inet_pton
[2]: http://paste.openstack.org/show/593272/

Change-Id: I706368bfcaece380e1357e0c504fd3b9553ba49c
Related-Bug: #1492714"
2ba12ae4eef9e5dba30821c31572f12e3c22860e,2017-01-05 05:28:47+00:00,"DB: remove deprecated oslo_db warnings

Commit 2ad571c8d7a7e1d8d18f7c5e97c564509fd34816 move the
test_base to a tests directory.

TrivialFix

Closes-Bug: #1648222

Change-Id: Ic5ce4a8555be4f80df69173ceefc03b73af65793"
9a022e7d7b85b7c21cf26698fe59c818c4577194,2017-01-05 03:33:35-07:00,"Reduce IP link show calls for SR-IOV scan loop

The device scanning logic was calling 'ip link show' for every
vf_index on the system, which was taking an excessive amount of
time an CPU cycles on very dense SR-IOV servers (>64 interfaces).
This was being executed every 2 seconds so it would cause the
agent to take a large percentage of the CPU time.

This patch adjusts the logic to use two 'ip link show' commands for
checking all of the operations in a single get_assigned_devices_info
call.

Closes-Bug: #1653880
Change-Id: I361caaf7f70580ee8c7b48a4a9c9477bdefd8b4b"
4f3be300b2d5888dc86c74755eea646fa8da6812,2017-01-05 11:57:24+00:00,"Replaces uuid.uuid4 with uuidutils.generate_uuid()

Openstack common has a wrapper for generating uuids.We should
use that function when generating uuids for consistency.

Change-Id: Id13e01ba59f37a5be90db1fe778e9735f0e8b9b6
Closes-Bug: #1082248"
b1405cbe1ec77bab5dfa0e810813951b3e0e8aa4,2017-01-05 23:31:10+09:00,"Use gate_hook to enable q-trunk for rally.

Instead of making devstack enable it, because it can have
undesired effects for other rally-using gate jobs.
(See Closes-Bug for an example)

Closes-Bug: #1643451
Change-Id: Id971432955196a7d5f64c598aeebf1a7bc245321"
327f7fc4d54bbaaed3778b5eb3c51a037a9a178f,2017-01-05 14:46:11+00:00,"Adding debug trace to IPWrapper.get_devices()

This patch adds a debug trace to the get_devices() method due to some
jobs failing in gate (especifically functional test for netns_cleanup).
From gate logs, looks like rootwrap_daemon is returning the output of
the previous command and this trace is to make sure what the actual
output is.

Change-Id: I83c59b9f0ae1ab51f166f442d99a1022e88d808e
Related-Bug: #1654287"
021f2f80357a6cdb9ed922dbcf073c5a617e4c1a,2017-01-05 20:51:45+01:00,"DHCP: ""reserved_dhcp_port"" not well managed during startup

During DHCP agent startup, same reserved DHCP port can be configured by
2 different DHCP agent (HA case).
In this special error case (race condition case) a DhcpPortInUse
RemoteError exception is triggered (Bug: #1425402).

This exception is actually not caught well, instead of trying with the
next ""reserved DHCP port"" an exception was raised.

Change-Id: I40cb8884b36c4a7c14f470d3a126f4a9a0a98d47
Closes-bug: #1651512"
22707fb3d2a621d2f632f395f8d77c3f9e83c90d,2017-01-06 05:31:33+00:00,"Add filter check for quering

Neutron rasises 500 error if the filter is the resources'
object property.

This patch add the check to prevent querying with base_db property.

Change-Id: I1aec4c1537e687e9087c468a592802779f370cb3
Closes-Bug: #1654195"
17c2b45d916168fa396caf1a6188e6c8a0c8d19a,2017-01-06 12:36:58+00:00,"Kill neutron-keepalived-state-change gracefully

When HA routers are deleted, neutron-keepalived-state-change was
killed by l3/ha_router using SIGKILL and orphaning its child process
'ip -o monitor'.

This patch implements a way to kill it gracefully through SIGTERM, and
also sending a SIGKILL if keepalived-state-change didn't die after a
10 seconds timeout. The SIGTERM handler in keepalived-state-change
kills the ip monitor process using SIGKILL.

It kills ip_monitor PID using kill instead of through IPMonitor.stop()
because the monitor runs as root and keepalived-state-change doesn't
(it drops its privileges after launching the monitor). Doing so, would
lead to a ""Permission denied"". We can safely kill the monitor this way
since it was started with respawn_interval set to None which means that
it won't be automatically respawned.

Closes-Bug: #1632099
Change-Id: I7385172a007fdd252ea3a1c03c58064160d07e9e"
7c0e62ee2f8eb7325cc21245db4825a7f7e5df13,2017-01-08 15:45:45+02:00,"l3scheduler: create ha_vr_id more robustly

In some cases, the creation of the ha_vr_id could have occurred twice.
For example, if a router was created with a given external_gateway then
a vr_id would be allocated twice: once from super().create_router()
(which triggers the scheduler on its own), and once from the
create_router() logic.

This patch modifies some code paths to make this allocation more robust.
For example the code that allocates a new vr_id will now also assign it
to the router in the same transaction, to make sure atomicity.

Closes-Bug: #1654032
Change-Id: I82c33aee5cfcc086f60fc74ed4d7bd7d443a3370"
0378194f59bb725294b38288265497b1d504764c,2017-01-09 14:26:26+02:00,"Add retry to _create_ha_port_binding

Since _create_ha_port_binding creates a RouterPort object, it bumps the
revision of the Router in an atomic fashion. If something else modified
the Router concurrently, StaleDataError may be thrown. In that case we
just want to retry the function.

Closes-Bug: #1654998
Change-Id: I7a4c58a4476ca85209d28c2d3a2cb61268e3cab6"
3ea5f7ce5627599b7e1f0f1c1d583dd5466b7d31,2017-01-09 04:51:28-08:00,"Get rid of ml2 port model hook join

The binding is already joined to the port via a backref relationship
so we can just utilize that rather than join to the table an additional
time.

Partial-Bug: #1649317
Change-Id: I267a808b411f44b2128955dc93bd8da34d1fac91"
3e4c0ae223de776732f70626b387fba4de2e9c3f,2017-01-09 15:56:09+00:00,"Revert ""Add ALLOCATING state to routers""

This reverts commit 9c3c19f07ce52e139d431aec54341c38a183f0b7.

Following the merge of Ie98d5e3760cdb17450aea546f4b61f5ba14baf1c, the
creation of new router uses RouterL3AgentBinding and its' new
binding_index attribute to ensure correctness of the resources. As such,
the ALLOCATING state (which was used to do just that) is no longer
needed and can be removed.

Closes-Bug: #1609738
Change-Id: Ib04e08df13ef4e6b94bd588854a5795163e2a617"
495b7863a0c9c1f4ab319bb114ff0bec442376df,2017-01-09 13:54:17-08:00,"Get rid of _network_model_hook for external_net

The network already has a joined relationship to the external
network table so we can leverage that instead of causing an
additional join for the filtering criteria.

Partial-Bug: #1649317
Change-Id: Idfee69b124f4ab8e2998da8492c5fa627f705bb9"
f204728e37d4f18e741dfa295d6b3da5529efd6c,2017-01-10 03:38:02-08:00,"Get rid of additional fixed_ip filter join

Partial-Bug: #1649317
Change-Id: I692b4b85d539af3465a48eed83e40f2ad5b87e51"
ca60a91cbd3668c469313a3bd6c0c99aeff30a74,2017-01-10 13:20:29+00:00,"adds support for vhost user reconnect.

- vhost-user reconnect is a new feature added
  in dpdk 16.07 and qemu 2.7.
- vhost-user reconnect allows VMs using vhost-user
  interfaces to reconnect to the vhost-user backend if
  the backend terminates either as a result of a graceful
  shutdown or a crash with out requiring the vm to reboot.
- vhost-user reconnect requires qemu to be the vhost-user server
  and ovs to be the client.
- dpdk prior to 16.07 only supports qemu client/ dpdk server mode.
- This change extends the ovs mech driver to select the correct qemu
  vhost user socket mode based on the available interface types
  reported by the agent.

Change-Id: Iec89eaa597311e086c5f6e8d67308d446b07ac33
Closes-Bug: #1604924
Depends-on: Ia5da5b3ef28d1b23b217adc5196199df47b54ed9"
6f20f1c0ac65c92019cd6d6f0935fab5bab9696d,2017-01-10 20:08:06+00:00,"Suppress annoying ""Could not load"" stevedore warnings

Override the DriverManager __init__ method to be able to
pass warn_on_missing_entrypoint=False to the
NamedExtensionManager so we don't mislead operators with
""Could not load"" warning messages when plugins ultimately
load just fine by full class path.

Closes-Bug: #1649965
Change-Id: I52964905d12c0f35c86862ac04d2c6e13db80358"
dd36243caea7a6e18ee042da72c7327534cb1f16,2017-01-10 21:42:45+00:00,"Added UT for floating ips with dns

This patch adds several unit tests that verify a floating IP's DNS
information is properly sent to the external DNS service in all cases
where a new DNS recordset would need to be created.

Change-Id: If9bdfa31624bbf0c403f0c447a9e75978bde172d
Closes-bug: #1655378"
3f9f740d81b51be5e563069c720366fa90ade9ee,2017-01-12 03:52:30+00:00,"Fix netns_cleanup interrupted on rwd I/O

Functional tests for netns_cleanup have been failing a few times
in the gate lately. After thorough tests we've seen that the issue was
related to using rootwrap-daemon inside a wait_until_true loop. When
timeout fired while utils.execute() was reading from rootwrap-daemon,
it got interrupted and the output of the last command was not read.
Therefore, next calls to utils.execute() would read the output of
their previous command rather than their own, leading to unexpected
results.

This fix will poll existing processes in the namespace without making
use of the wait_until_true loop. Instead, it will check elapsed time
and raise the exception if timeout is exceeded.

Also, i'm removing debug traces introduced in
327f7fc4d54bbaaed3778b5eb3c51a037a9a178f which helped finding the root
cause of this bug.

Change-Id: Ie233261e4be36eecaf6ec6d0532f0f5e2e996cd2
Closes-Bug: #1654287"
175bfe048283ae930b60b1cea87874d1fa1d10d6,2017-01-12 10:43:50+00:00,"Protect against non-determinstic sort

With the switch to subquery loading, we need to eliminate the
possibility for non-deterministic results in the event of LIMIT
queries caused by non-unique SORT BY parameters.

This always adds on a set of unique keys to sort by when sorting
params are present. By placing them at the end, they take the lower
priority over the user-provided sort strings.

1. http://docs.sqlalchemy.org/en/latest/orm/loading_relationships.html#subqueryload-ordering
2. http://docs.sqlalchemy.org/en/latest/faq/ormconfiguration.html#faq-subqueryload-limit-sort

Change-Id: I5abb1c7e2710af0be9dbd757608574945a26637e"
fc075fa0d83bbd2a4c7b46299a35ccedb91388dc,2017-01-12 14:53:53+04:00,"Manually add pk for alembic_version table

We hit a problem that Neutron migrations cannot be applied
on galera cluster with ENFORCING mode as alembic_version table
missing primary key on the table and it is expected that all tables
will have primary keys.

alembic_version is created and managed by Alembic and fixes for this
on Alembic side are on the review [1]. Anyway here migration is
proposed that will add pk on this table if it is missing, as in
other case we will have inconsistency between new deployments and
old ones.

[1] - https://gerrit.sqlalchemy.org/#/c/279/

Change-Id: I543a1ee286bdf11ae35adb87125d044a351a2648
Closes-bug: #1655610"
38c070bde41262b428a384ce156b4835e6162c74,2017-01-12 16:27:00+00:00,"DVR: fix csnat port missing after router update

When updating router gateway to another external network, original csnat
ports are deleted in db, but no new ports are created because the
_create_snat_interfaces_after_change method did't take the network
change into account.

To reduce the complexity of operation taken by l3 agent caused by the
csnat ports change, we don't need to delete original csnat ports.

This patch will skip the csnat port deletion if it is a network change.

Change-Id: Id8e89daa339424bb3c5efdffd0a59cfed005bb5d
Closes-Bug: #1651813"
1927da1bc7c4e56162dd3704d58d3b922d4ebce9,2017-01-13 06:39:52+00:00,"Add check for ha state

If all agents are shown as a standby it is possible changing state
were lost due to problems with RabbitMQ. Current change adds check
for ha state in fetch_and_sync_all_routers. If state is different -
 notify server that state should be changed.

Also change _get_bindings_and_update_router_state_for_dead_agents
to set standby for dead agent only in case we have more than one
active.

Change-Id: If5596eb24041ea9fae1d5d2563dcaf655c5face7
Closes-bug:#1648242"
f15851b98974dc16606da195cf3ecee577cd0ef8,2017-01-13 08:53:21+00:00,"DHCP: enhance DHCPAgent startup procedure

During DhcpAgent startup procedure all the following networks
initialization is actually perform twice:
 * Killing old dnsmasq processes
 * set and configure all TAP interfaces
 * building all Dnsmasq config files (lease and host files)
 * launching dnsmasq processes
What is done during the second iteration is just clean and redo
exactly the same another time! This is really inefficient and
increase dramatically DHCP startup time (near twice than needed).

Initialization process 'sync_state' method is called twice:
 * one time during init_host()
 * another time during _report_state()

sync_state() call must stay in init_host() due to bug #1420042.

sync_state() is always called during startup in init_host()
and will be periodically called by periodic_resync()
to do reconciliation.
Hence it can safely be removed from the run() method.

Change-Id: Id6433598d5c833d2e86be605089d42feee57c257
Closes-bug: #1651368
Closes-Bug: #1650611"
f57dbf3f1329c0b56bceb7c919f121369b865de2,2017-01-13 14:00:22+00:00,"Remove references to defunct Stadium docs

Change-Id: I4f755e88bfbe19e58de81dc7ec4d12a26a43c8c0
Closes-Bug: #1656297"
8b048cc2872d243914ddea0210ba2128d979d1d2,2017-01-13 14:31:26+00:00,"Use project_id instead of tenant_id in objects

Objects must use project_id and not tenant_id. The object framework
ensures that tenant_id is added as an extra field for backward
compatibility.

This patch reverts the workaround implemented in change
I4ec9340094bc51cd8aa6e5112bf8114aa26c2982 and implements a proper fix
by explicitly updating the objects.

Co-Authored-By: Artur Korzeniewski <artur.korzeniewski@intel.com>
Co-Authored-By: Darek Smigiel <smigiel.dariusz@gmail.com>

Closes-Bug: #1630748

Change-Id: Iab90bcab41655b2e210aea0e7581eb00b94ce5e5"
84b3ae3ae9111e241352bdccad238c9fd37b83df,2017-01-13 15:44:16+00:00,"Linux Bridge: driver support for QoS egress minimum bandwidth

This patch provides the Linux Bridge agent driver the ability to control
Linux Traffic Control (TC) to set the minimum required transmission rate
for an interface.

The TC library is refactored to use HTB qdiscs. This allows TC to
define, for several flows in the same interface, the maximum and the
minimum network bandwidth and the burst size.

To be able to do traffic shaping (instead of policing) for ingress
traffic, a new element, the Intermediate Functional Block device (IFB)
is introduced.

DocImpact
Partial-Bug: #1560963

Change-Id: I4d4db54519f1435068d1af38819404d1e5d9cd52"
dcd4c8b8de4972b8e5aff55e041df54f66ac81b3,2017-01-14 00:22:30+08:00,"DVR: delete stale devices after router update

After the external network change of router gateway, the l3 agent
deletes stale external devices in the qrouter namespace only. This
doesn't apply to distributed router.

This patch extract a method named _delete_stale_external_devices from
RouterInfo and override it in DvrEdgeRouter.

Change-Id: I2602efd5be92ec57410e54cf9c26641330a52ee6
Partial-Bug: #1651813"
d8d41ae5d6ceda8677b1a46d1bbaf0a0ff4e593b,2017-01-13 21:17:36+00:00,"Fix broken links in devref

Change-Id: I42b58963125166763afeb46e5c4575b9913c867a
Closes-Bug: #1656127"
e74b45d0eb923129902f1926aaddb51e6e2b8085,2017-01-16 07:39:38+09:00,"Revert ""Protect against non-determinstic sort""

This reverts commit 175bfe048283ae930b60b1cea87874d1fa1d10d6.

The change causes the following error if you're
unlucky enough to have such a marker column.

   ArgumentError: Only '=', '!=', 'is_()', 'isnot()' operators can be used with None/True/False

I saw test_floatingip_list_with_pagination failing,
where fixed_port_id of the marker was None.

Closes-Bug: #1656262
Change-Id: I6c32949d789f25d877d329ef0ae9d8650cb81acf"
e9572eabc0fd56bb0d9853553b100476a53403f8,2017-01-16 07:41:19+09:00,"test_l3: Enable native pagination and sort

Add the following vars in test plugins to improve the coverage.
    __native_pagination_support
    __native_sort_support

non-native cases are still covered by others.  (eg. test_extraroute)

Related-Bug: #1656262
Change-Id: Icea91df303d06190995a06f532ea595ec2c9919f"
a8b6a597b6aab7cd3b0a5d0c3baad75af395fe1d,2017-01-16 03:06:21+00:00,"Revert ""Setup firewall filters only for required ports""

This reverts commit 75edc1ff28a460342a9b5e5b7d63c6f4fb59862d.

Ports with port security disabled require firewall entries in
neutron-openvswi-FORWARD chain to work properly.
Ports created with no security groups will not get skipped with current
code.
With fixed security groups check, these ports' security groups can not
be updated after creation.

Change-Id: I95ddbe38d8ac8a927a860a98f54e41e17fb71d43
Closes-Bug: #1549443"
2725b4d3140be526f9662082958ef82d1d3ebeef,2017-01-16 18:23:23+00:00,"Include port_security check in fullstack tests

Bug #1549443 skipped setting up the right firewall rules for ports
created with port security disabled. This bug was not caught since
tests didn't cover this fact.

This patch adds functionality to existing test by creating ports with
port_security_enabled=False and checking that traffic is allowed prior
to enabling port security and assigning security groups to them.

Change-Id: I65da39fd390e4faecc6cfb18bb50e1f5ce684f1e
Related-Bug: #1549443"
dd5aca38f90e1b387837c555e110d825062bfb5a,2017-01-16 14:25:22-05:00,"Remove deprecated min_l3_agents_per_router

The option was deprecated [1] for removal in Newton
and is being removed in Ocata.

[1] Deprecated in patch with Gerrit Change-Id of:
    I8a5fc74a96c784d474aefe2d9b27eeb66521ca82

DocImpact remove all references to the option.

Change-Id: I3a9195ff6fd18fad9f85cec03a632e7e52d954e7
Closes-Bug: #1555042"
393a3bd94724284c8f567fbfcd418859e5fc73c4,2017-01-16 14:35:20-08:00,"Protect against non-determinstic sort

This reverts commit e74b45d0eb923129902f1926aaddb51e6e2b8085.

This re-adds the non-deterministic sort logic but avoids using
boolean columns to work around the related bug.

Original commit msg:

With the switch to subquery loading, we need to eliminate the
possibility for non-deterministic results in the event of LIMIT
queries caused by non-unique SORT BY parameters.

This always adds on a set of unique keys to sort by when sorting
params are present. By placing them at the end, they take the lower
priority over the user-provided sort strings.

1. http://docs.sqlalchemy.org/en/latest/orm/loading_relationships.html#subqueryload-ordering
2. http://docs.sqlalchemy.org/en/latest/faq/ormconfiguration.html#faq-subqueryload-limit-sort

Related-Bug: #1656947
Change-Id: I503c65560d970427be93b39898f4e7acfc4d3e1f"
18e2e2def5bd1c28e6d017c0de674cda7683e14a,2017-01-17 17:39:38+00:00,"Add IPLink class to Windows ip_lib implementation

This new class is used to read the link address from
a network device.

Partial-Bug: #1644878
Change-Id: Ieeaa1d3633b942e549c0513ca7360c0a91d10d04"
39567df190b0e46706d7bab32c58f86ee8786aa1,2017-01-17 17:42:44+00:00,"Fix broken Windows compatibility in ovs_lib

This patch changes the ip_lib used. Substitutes the
the Linux implementation for the generic wrapper.

Closes-Bug: #1644878
Change-Id: Ida1b3586d8d6b5fda69286aa1428d31d16010d71"
daa8e1b1b0c2ec5353b20aae155cea668c637ffc,2017-01-18 10:01:27+08:00,"Neutron server was not compatible with member actions

Register a new extension into Neutron server, and this extension
contains a member action. if new member action contains the ""update""
string. As a result, Neutron server check the target whether contains
""ATTRIBUTES_TO_UPDATE"". Because this is a member action so that neutron
server will not go ""_update"" method normally but ""_handle_action""
method. So the exception happens KeyError: 'attributes_to_update'.

Co-Authored-By: zhang ping<ping.zhang@easystack.cn>
Change-Id: Ie8bb7b9af42a82aada28d2bcdfd5b0e573ad9778
Closes-Bug: #1606455"
a594df67a73a73dc6d26b62b29aa93dfb5f8d00c,2017-01-18 14:56:19+00:00,"Catch invalid subnet service_types on input

_validate_subnet_service_types function does not consider the
data type of service_type on creatation or update. For example,
if an integer type is passed, the neutron-server will hit
internal error.

This patch adds a check to make sure the data type is unicode.

Change-Id: I5e6d15def3e23f51172b69e1287ff18ab5d3f6aa
Closes-Bug: #1633066"
66c7c604fe3be6b80deaa1cac86117ebad9ee3d1,2017-01-19 14:53:49+09:00,"Fix importing old path for exceptions

The network_ip_availability plugin uses old path for exceptions.
This patch fixes the path and adds negative test for the exception.

Change-Id: I9021f76e21b386f371ff73b926553611ab87fb66
Closes-bug: #1657137"
8047da17db2d4d50f797d99880f3b76d0eba2084,2017-01-19 07:33:43+00:00,"XenAPI: Support daemon mode for rootwrap

For Neutron's compute agent in a XenServer's compute node, the commands
actually need run in Dom0. Currently XenServer only supports rootwrap
for that purpose by invoking a script which invokes XenAPI to execute
commands in dom0. There are much performance overhead due to it requires
parsing on the script and the configuration file every time running
commands.

This change is to support daemon mode with which each agent service will
call XenAPI directly to execute commands in dom0. And it will keep the
single XenAPI session.

DocImpact: Need update the following configuration.

file: /etc/neutron/plugins/ml2/openvswitch_agent.ini
[agent]
root_helper_daemon = xenapi_root_helper
[xenapi]
connection_url = http://169.254.0.1
connection_username = root
connection_password = xenroot

Closes-Bug: #1585510
Change-Id: I684034359fe0571bc92dbcf342a9821553b1da35"
91b2efcbd5f21d7e726b51ca0196a68cf46c3fde,2017-01-19 10:37:14-08:00,"Remove get_router_cidrs method of dvr_edge_ha router

Since commit a388f78c8cb4b1c860bfc11029b5210955f1932d, we fetch
routers' existing floating ip address from the fip namespace's
route table instead of qrouter namespace's qg device for the
dvr_local and dvr_edge router. But for dvr_edge_ha router, it
still fetch the existing floating ip like legacy router, causing
it can’t know which existent floating ip rules need to be removed.

After removing the get_router_cidrs method, the dvr_edge_ha router
inherit the get_router_cidrs method from dvr_local router and it
will remove the existent floating ip rules successfully if we
disassociate the floating ip.

Co-Authored-By: Swaminathan Vasudevan <swaminathan.vasudevan@hpe.com>
Change-Id: Ic471189773298b353db7629c827c8787703c0069
Related-Bug: #1644415"
7953e9886d96557b80a9afa2543d0db5008dc35f,2017-01-20 10:03:20+04:00,"Fix empty string check for python 3

It's '' in py2 and b'' in py3.
See bug for traceback.

Closes-Bug: #1657476
Change-Id: Ic2c32669bf238b702e13e81e15dd079d538a6abc"
7d99bf0c8d575729eb5fe6ef1325a53eee23ed10,2017-01-20 21:06:15+00:00,"Break circular import with use of common_types

Using UUIDFIelds from common types in objects/quota.py in [1],
ended up in circular imports. This patch will fix it.

[1]. https://review.openstack.org/#/c/338625/
Change-Id: I67580a875d2a8c8a791b9e246c1247349c4771df
Closes-Bug: #1653780"
d7a6827e43a60a740a7d12c40fc1ead027046348,2017-01-20 16:33:26-05:00,"Change neighbour commands to use pyroute2

Change ip_lib's IpNeighCommand class to use pyroute2
for adding, deleting and dumping entries, rather than
using 'ip neigh'.  This will increase performance when
many ARP updates happen at once.

Change-Id: Idd528c0b402d1c9fc4b030f2aaa6d641d86ec02a
Partial-Bug: #1511134"
1bcdc299ba8ffbf778fb1442cd8f9da59903ffdc,2017-01-23 14:44:42-03:18,"Allow the other nic to allocate VMs post PCI-PT VM creation.

Let's say a compute node has got 2 network adapters
(em1 and em2) with its correspondent VFs configured.
If you start a VM with a direct-physical binding
it will take one of these NICs.

At that moment, SRIOV agent starts to show
ERROR messages including the ""device dictionary""
completely empty.

In consequence, you cannot allocate VMs with VFs
even though there is still another NIC available.

Change-Id: I8bf0dd41f900b69e32fcd416690c089dde7989b9
Closes-Bug: #1616442"
72154cc0cfa3c51ca8e0fcaf62875546a59bc0ef,2017-01-24 05:35:45+00:00,"Elminate join for network owner filter

Coverage provided by test_list_ports_for_network_owner
and test_get_ports_count.

Partial-Bug: #1649317
Change-Id: I56a15f4b5b47f46fa75b6b5174478cf62b3d0670"
318650ab806f4251974abfa9ffb26cb4edf7d515,2017-01-24 01:04:14-05:00,"Allow all migration of routers

This patch proposes the allowance of changing a router's 'distributed'
or 'ha' attributes without any restriction as to the previous state of
these attributes, as long as the router's admin_state_up is False.

Closes-Bug: #1654991
Change-Id: Iad4dd77f74ba01876e0091112a1e24a3463993d1"
38c1812015b6977f8212723d082222cefb0926e6,2017-01-25 14:13:36+01:00,"Transition qos notification driver into qos driver

This will deprecate the notification_driver config setting,
and no config setting will be needed.

Also it lays down the foundation for a more decoupled interaction
with mechanism drivers.

Closes-Bug: #1657379
Related-Bug: #1627749
DocImpact

Change-Id: I2f166a43f0b980ad22617f8a3f7b4cc7f4786c48"
829b39b1ebdb96d87323852e2e099a955e402b63,2017-01-26 00:58:55+00:00,"ovsfw: Refresh OFPort when necessary

Events like server reboots change ofport numbers.  In such cases,
cached ofports need to be refreshed.

Change-Id: If4acf61736b8f1e9707efc409509e1f557d5f886
Closes-Bug: #1645655"
7872508f9f25ea638f067cab65550778fbf1d0ed,2017-01-26 16:49:15+00:00,"[Live Migration] Extend ml2_port_binding table

Extended the Primary Key of ml2_port_binding table to include ""hosts""
and added a new column named ""status"" to indicate the status of the
port similar to the ml2_distributed_port_binding table. Updated the
PortBinding object with the above changes.

Change-Id: Ie01f83b01ab673b9ae7e05b4eaed504ffc8db773
Co-Authored-By: Brian Stajkowski <brian.stajkowski@rackspace.com>
Partial-Bug: #1580880"
c148edb8574595057416002a96de80ce9290afeb,2017-01-26 16:22:20-05:00,"Do not raise an error deleting neighbour entry

Ever since https://review.openstack.org/#/c/418609/
merged, changing to use the pyroute2 library for managing
neighbour entries, there has been an up-tick in DVR
error messages - ""DVR: Failed updating arp entry"" is
happening trying to delete a non-existent entry.

Since the error is not fatal, just catch and ignore it.

Change-Id: If6c4715b85c0bd65f5f58600ce5572fa60651510"
4c636bd1e62394025cc118f19c7b0fa2d65fe444,2017-01-26 21:41:45+00:00,"Retry on routerport delete race

After deleting the router interfaces, another concurrent
process (e.g. HA port creation) could happen before the actual
router is deleted, which would lead to an SQLAlchemy error due
to the relationship being violated.

This patch fixes the issue by bumping the router revision before
deleting the router to check for concurrent interface additions.
A race will trigger a staledataerror which will be retried by
the decorator

Closes-Bug: #1655281
Change-Id: I465e9a2f9b216991afa26c16271854fb88068006"
e4b0b9f8be165e688ee56a5063a3ccc91e823636,2017-01-26 23:05:06+00:00,"Refactor L3 scheduler (unify code paths)

This patch proposes a (rather major) refactor to the L3 scheduler.
Basically, the auto_schedule_routers() code-path was split to 2
different code-paths, each dealing with a different case (unscheduled
routers vs underscheduled routers), in addition to the API-initiated
schedule() logic. This patch removes the 2 code-paths in favor of moving
most of the logic into schedule(). While the result is a slightly
longer schedule(), the benefit is that a lot of the previous
unmaintainable code-paths of auto_schedule_routers() are now removed.

Yay! :D

Related-Bug: #1609738
Change-Id: I227ca60422545e40d3bbb8baf2b41a8ce14f4294"
c6de850021d099d6bad026b2192ea40b9c849f87,2017-01-26 16:18:02-08:00,"DVR: Add static routes to FIP namespace

The static routes are currently only added to the router
namespace and snat namespace, but not added to the fip
namespace.

This patch adds the static routes configured for the router
to the FIP namespace, to its own table. So this will allow
the FIP namespace to be configured with different nexthop
routes for different routers.

Change-Id: Ida165d1ecf5c07af31dac11d9daed33ccaaf5605
Closes-Bug: #1571676"
6ce47f1d62519a7de3abaef64383c3b927d7fe0d,2017-01-26 18:26:27-08:00,"Stop passing datapath as 'may_exist' argument

While debugging the related bug, this showed up in the logs:
AddBridgeCommand(datapath_type=None, may_exist=system, name=test-brd8f3648c)

This was caused by the add_bridge command not passing in the datapath
type as named argument so it was taking the positional argument of
may_exist. So the datapath type was being lost whenever this command
was being used.

This fixes it by makeing add_bridge use a named argument for
datapath_type and it also switches it to using the
OVSBridge.create() method to unify the code-paths for bridge
creation.

It's not clear that this was a cause of the bug though, so
this fix is only related.

Change-Id: I5711c29c21741dd847f2c27fb621f723b24cb7fd
Related-Bug: #1627106"
8d3f216e2421a01b54a4049c639bdb803df72510,2017-01-27 11:19:16+01:00,"Addressing L3 HA keepalived failures in functional tests

Current testing of Keepalived was not configuring the connectivity
between 2 agent namespaces.
Added setting up the veth pair.

Also, bridges external qg-<id> and internal qr-<id> were removed
from agent1 namespace and moved to agent2 namespace, because they had
the same name.
Added patching the qg and qr bridges name creation to be different for
functional tests.


Change-Id: I82b3218091da4feb39a9e820d0e54639ae27c97d
Closes-Bug: #1580648"
cb6eae20fae1f5e46cb2af4f0b0dc5368074580b,2017-01-27 11:54:28+00:00,"Remove baremetal notification from nova notifier

This is a revert of change I3d53bff8278dabafd929ecbea0b4b3b441c9e1cf

The nova notifier was updated to notify nova on ports with the
baremetal: device_owner, these ports are owned by Ironic not Nova, so
nova is getting notifications that it doesn't understand.

Change-Id: I8318a682163f6a5b739be68ce56973c43d0e32f2
Closes-Bug: #1656010
Depends-On: I43c3af9f424a65211ef5a39f13e4810072997339"
38de22bf2d4c0879a84db4fbc9fa030f181affc0,2017-01-27 11:26:24-08:00,"Always acquire network.id lock in dhcp port update

Looking at the cache before aqcuiring a lock may cause the
agent to mistakenly think the network doesn't exist when it
is actually being wired in parallel.

Always acquiring the network-based semaphore will ensure that
the network isn't currently being setup in another coroutine.

Closes-Bug: #1659919
Change-Id: I99ae71e3c5b1cd91dca3f6c80b04d2ecb79de64f"
a502c96b8efa62627e245ffa69a23f4b6d3f90a5,2017-01-27 11:47:51-08:00,"Kill the metadata proxy process unconditionally

When force_metadata=True and enable_isolated_metadata=False,
the namespace metadata proxy process might not be terminated
when the network is deleted because the subnets and ports
will have already been deleted, so we could incorrectly
determine it was started. Calling destroy_monitored_metadata_proxy() is
a noop when there is no process running.

Change-Id: I77ff545ce02f2dca4c38e587b37ea809ad6f072c
Closes-Bug: #1648095"
4750112ea348690af25035f0ed73decad4a070a8,2017-01-30 16:00:56+04:00,"Init privsep on l3 agent start

Should fix the problem with privsep call failures

Change-Id: I1150291eb6310677f4f4ab035a5cd275d21b7e39
Closes-Bug: #1660305"
cd38886d20c0900788f2c15157be1a016cb475be,2017-01-30 15:16:55+00:00,"Fix iptables rules for Prefix Delegated subnets

Make sure the correct iptables rule is added when the router gets
an interface on a PD-enabled subnet. This will allow traffic on PD
subnets to reach the external network.

Includes a unit test for the new function, and modifies an
existing test to verify the adding and removal of the rule.

Change-Id: I42f8f42995e9809e5bda2b29726f7244c052ca1c
Closes-Bug: #1570122"
11825081ec7ad8b1fa8f250e1d4cd908612be64f,2017-01-30 09:00:43-07:00,"Fix link in QoS devref

The QoS devref has a bad link to the L2 agent extensions
doc. This patch fixes the link.

Note: The bug reports a few other neutron dead links, but
these are either already fixed, or for liberty release notes
and liberty is already EOL.

Change-Id: I047f638f0a348d636aa533c0db93e8a1f23c6356
Closes-Bug: #1652944"
b61b630f0b8e620b218a29d72a250382e07055c1,2017-01-31 21:58:59+00:00,"Fix port update for service subnets

Updating a port's fixed_ips will currently fail for a subnet that has
a service type, regardless of whether the port has a matching
device_owner. This is because _update_ips_for_port in
ipam_pluggable_backend.py does not take the device_owner into account
when calling _ipam_get_subnets.

This patch fixes the bug by passing the port's device_owner to
_ipam_get_subnets in _update_ips_for_port, and includes a new unit
test to prevent future regressions.

Change-Id: I09ac773ae27eebe104d5c39e1e8863c02880f85d
Closes-Bug: #1660607"
7b5f01c2e58cd21ab3d46676ee6a3288012fbb45,2017-02-01 02:23:49+00:00,"Add IPv6 Prefix Delegation support for DVR

Unlike Legacy routers, DVR Edge Routers have their gateway
interfaces in the SNAT namespace as opposed to the router
namespace.  Added a new method to the router_info class,
get_gw_ns_name(), so callers can determine which namespace
the gateway device lives in.  This can then be over-ridden
in the DVR Edge router class.

The Prefix Delegation code will also now listen on the
update_router event from the l3-agent and reset the namespace
name if it changes.

Closes-Bug: #1541406
Change-Id: If6ada5027d0483fac7fc3ff935fee1edfc6e2759"
557e0c0a4c95c4b1e556f8aaf351937a237c7cd9,2017-02-01 07:08:20+00:00,"Terminate macvtap agent when physical_interface_mapping config not present

Starting the macvtap agent without specifying at least one
physical_interface_mappings does not make sense. As it only
supports layer2 networks (flat, vlan) an interface mapping is
mandatory. An existing agent deployment without an interface
mapping can not serve any networks to instances!

This patch terminates the agent when no mapping is
provided. As without this mapping the agent cannot serve any networks
for instances, this patch can't really break existing deployments.

UpgradeImpact Agent terminates when no physical_interface_mapping
configuration is provided.

Change-Id: I647cf4da55fda54e32b7047b84e0d7f671629fa7
Closes-Bug: #1587444"
02f97dd9a01c807b3fdd9af1d74164c7bc2b83dd,2017-02-02 00:37:32-08:00,"Ensure that subnet update does not creat RPC client

Commit fc7cae844cb783887b8a8eb4d9c3286116d740e6 would create
the notification class each time that the subnet update is
invoked.

Change-Id: Ie62f4bc4f152cb346d4e6de77b732a87ab6f2f28
Closes-bug: #1661181"
185d6cbc648fd041402a5034b04b818da5c7136e,2017-02-02 12:09:12-05:00,"Add support for Keepalived VRRP health check

Adds functionality to generate bash script which verifies health of current
keepalived instance by pinging all available and configured GW addresses.
This functionality supports IPv4 and IPv6 by detecting needed ping version
using netaddr.

DocImpact:
Added a new parameter to 'l3_agent.ini' named
'ha_vrrp_health_check_interval' which is by default set to 0 (disabled).
Values > 0 designate health check functionality should be enabled.
Requires allowed ICMP ECHO_REQUEST because that is disabled by default.

Co-Authored-By: Artur Korzeniewski <artur.korzeniewski@intel.com>
Change-Id: Ib4d0691f432830357ea3f113036719645bc59a62
Closes-Bug: #1365461"
33129f2ac6a41afe2f59a0d50d5db0257f588a79,2017-02-02 18:59:03-08:00,"Use bytes for python3 friendly os.write

Bytes not str. Otherwise we get
TypeError: a bytes-like object is required, not 'str'
in the metadata proxy and it dies.

Closes-Bug: #1661303
Change-Id: If6b6f19130c965436a637a03a4cf72203e0786b0"
255e8a839db0be10c98b5d9f480ce476e2f2e171,2017-02-03 13:13:45+00:00,"Turn nova notifier into a proper rate limiter

This adjusts the batching logic in the Nova notifier to immediately
send and then sleep to allow batching of subsequent calls in the batch
interval.

So rather than always wait for 2 seconds to elapse while batching,
batching will only occur in the 2 second period after a call is made.
This turns the batch notifier into a standard queuing rate limiter.

The upside to this is a single port create results in an immediate
notification to Nova without a delay.

The downside is now that a sudden burst of 6 port creations to a
previously idle server will result in 2 notification calls to Nova
(1 for the first call and another for the other 5).

Closes-Bug: #1564648
Change-Id: I82f403441564955345f47877151e0c457712dd2f"
751c62a601eab268ba310bcd18adb5f0d148aff5,2017-02-04 00:01:47+01:00,"Skip reading config files from neutron.conf.d for the namespace proxy

The namespace proxy should only be handling config options passed in
via commandline. To achieve that it overwrites default config file
detection by explicitely passing in an empty list, however it did
not overwrite default config dir detection.

Starting with oslo.config 3.20.0, a default config_dir setting reads
files from $service.conf.d.

As Newton shipped with oslo.config 3.17, which did not expose this new
feature, this is a fix for Ocata only and does not affect Upgrade.

Change-Id: Id2dffe6f53afbfd48128d91c5d807be8785534eb
Closes-Bug: #1661106"
b56f008f3a01e5dbbf5b0744a9286a8302c3326a,2017-02-04 11:07:04+09:00,"Enhance tag mechanism

This patch enhances the tag mechanism for subnet, port, subnetpool,
router resources. The tag-ext as new extension is added so that
tag supports their resources.

APIImpact: Adds tag support to subnet, port, subnetpool, router
DocImpact: allow users to set tags on some resources

Change-Id: I3ab8c2f47f283bee7219f39f20b07361b8e0c5f1
Closes-Bug: #1661608"
3ffe006743b33f48bca6fce541e0a8f64f844fb7,2017-02-06 09:01:31+00:00,"Switch to 'subquery' for 1-M relationships

This switches to the use of subqueries for 1-m relationships
which will result in a higher constant query factor but will
eliminate the potential for cross-product explosions.

Closes-Bug: #1649317
Change-Id: I6952c48236153a8e2f2f155375b70573ddc2cf0f"
0629129c038d6187d76006e53c79a7aa6da03bce,2017-02-06 12:05:05-05:00,"DVR: Look at all SNAT ports for a subnet match

For IPv6, the csnat port list could have multiple
subnets contained in it, but we were only ever
looking at the one associated with the first fixed
IP when trying to match an internal port.  Change
to check all subnets on all port combinations
(internal and csnat) before giving up.

Change-Id: I9c0ac933c08734a3f6738a233fdf6021ce9bd375
Closes-bug: #1624515"
785656744a6883b22972da0d867b36b699d6b15c,2017-02-07 04:46:37+00:00,"Fix duplicated sg rules check for remote_ip_prefix

Security group rule setting remote_ip_prefix 0.0.0.0/0 for ipv4 or
::/0 for ipv6 plays the same role as the sg rules without setting
remote_ip_prefix. We could treat them as duplicate.

Change-Id: Ic9213e77d3b03aded7fc34d486066c8af4a3b2a1
Closes-Bug: #1534113"
1376df7873c2ac77c256ab2fed928de41a2c1d58,2017-02-07 12:21:51+00:00,"Raise InvalidInput exception on provider-net creation without seg_id

This patch raises InvalidInput to users when they create provider net
without seg_id if ml2_vlan_ranges just sets the physical net name. This
must be more friendly.

Closes-Bug: #1649750
Change-Id: I9831d1a5b5764dcb8ee94641a3afc3991e56f8c2"
b7213030fd59c6169b9a2d4cb9680cf5adbfe6d8,2017-02-07 16:59:04+01:00,"Simplify the QoS bandwidth test to increase reliability

The initial implementation was measuring the bandwidth stability
over segments of time. But recent failures on high gate pressure
has shown that such stability can't be expected on the edge.

The test now checks the average bandwidth during the whole transmission.

Change-Id: Ic6a00f20ce76aba319ecdada79f68599c891cf29
Closes-Bug: #1662109"
86c4af7a6083e1c391dbfb484c45d25eaeaaaa39,2017-02-09 09:14:15+09:00,"Update devref for enhanced tag mechanism

The devref describes tag mechanism supports network only but
now it supports subnet, port, subnetpool, and router.
This patch updates the description about supported resources.

Change-Id: I1a4b02e253157154218bfe63a18891083178f55a
Closes-Bug: #1662102"
486e2f4eb5a02c98958582e366a4d6081ea897e0,2017-02-10 01:52:42-08:00,"Pass --concurrent flag to ebtables calls

This flag will force ebtables to acquire a lock so we don't
have to worry about ebtables errors occuring if something else
on the system is trying to use ebtables as well.

Closes-Bug: #1316621
Change-Id: I695c01e015fdc201df8f23d9b48f9d3678240266"
26766963c6e6b2105718e21cd14dfc6df201154c,2017-02-14 09:34:36-06:00,"Clean up ovsdb-native's use of verify()

When updating an ovsdb set-type column, the existing code does
the following:

1. Read the existing column value
2. Call verify() to cause a write failure if something else
   modifies the column before we commit
3. Append the value to our local copy of the column
4. Assign the local value to the object.column to trigger
   __setattr__ to write the value to the database

If verify() fails, which it *very* often does in a test
environment or a busy system, ovsdb-server will respond with a
TRY_AGAIN response which will cause the whole process to start
over.

In the 2.6 cycle, Row.addvalue()/delvalue() methods were added
which use OVDB's native 'mutate' methods to handle adding/deleting
from a set/map-type column. Using these means calling verify() is
no longer required and things will proceed *much* more efficiently.

Bug #1627106 where we get frequent TimeoutExceptions appears to be
related. Eliminating the frequent TRY_AGAIN responses, in my local
testing, also eliminates the TimeoutExceptions. This doesn't mean
that the underlying issue is resolved, but it may be avoided.
Related-Bug: #1627106

Change-Id: I26c7731f5dbd3bd2955dbfa18a7c41517da63e6e"
1e95cfa98a12548b09a974c6db66d386f3b36d05,2017-02-14 10:19:53-08:00,"Invert device_owner to avoid filtering too much

In an earlier change[1], a filter was added to avoid Linuxbridge races
with Nova. This filter breaks anything else using device owners other
than n(eutron|etwork):.

[1] https://review.openstack.org/#/c/193485/

Closes-Bug: #1524004
Closes-Bug: #1664659
Change-Id: I31a8e0e255b8b0251c991d5e20a4b9441d4ec489"
0faf1aa49f18e8dcbee6ea8be78f6e918090e0a1,2017-02-15 12:53:44-06:00,"Disable process monitor for keepalived test

There was an existing attempt to disable process monitoring, but
since the AGENT.check_child_processes_interval defaults to 60 and
is checked in ProcessMonitor.__init__, overriding the config value
after instantiating the ProcessMonitor only has the affect of
making the check happen continually as quickly as possible instead
of not at all. Instead, we instantiate the process monitor after
changing the config value.

Change-Id: Ic4907b6a227c6fa8288c9d3e2106da0b53323509
Closes-Bug: #1665061"
840e04b6f122f022f67b600ed2f96ae5e92eabe0,2017-02-15 20:49:45-08:00,"Skip native DHCP notifications on status change

On profiling the get_devices_details communications between
the agent and the server, a significant amount of time
(60% in my dev env) is being spent in the AFTER_UPDATE events
for the port updates resulting from the port status changes.

One of the major offenders is the native DHCP agent notifier.
On each port update it ends up retrieving the network for the
port, the DHCP agents for the network, and the segments.

This patch addresses this particular issue by adding logic to
skip a DHCP notification if the only thing that changed on the
port was the status. The DHCP agent doesn't do anything based on
the status field so there is no need to update it when this is
the only change.

Change-Id: I948132924ec5021a9db78cf17efbba96b2500e8e
Partial-Bug: #1665215"
3dddfa56db69b504408c6894a814a89ea63b05f0,2017-02-17 17:41:17+00:00,"Macvtap: Check for no original port in is_live_migration

Change 6865f4d9f22d5daa2f07ff9651c2280aed489c8c mistakenly
assumed that None would not be present for the 'original'
property on a PortContext. However, this is the default value
for the original field in PortContext, which is what is used
in the construction as part of the _create_port_db process
in ML2.

This resulted in binding failures for the macvtap mech drivers
due to an attribute error in cases like brand new ports.

This patch simply checks for None before trying to determine
if it's a live migration (which it isn't in the case of port creation).

Part of the issue is likely that the FakePortContext in the unit tests
was defaulting to an empty dict which is the not the same behavior as
the real PortContext.

Change-Id: I6659235a70aa4528fd21911c04e651194591e449
Closes-Bug: #1658802"
4ffeef246f3a73a3459583af7fcc55817a6ac1fc,2017-02-18 15:33:40+00:00,"Enforce port QoS policies for all ports.

This patch enforces the port QoS policies applied on all ports.
Besides that, a port QoS policy must prevail over a network QoS
policy, if both are present on the same port.

Change-Id: Icccb835e48bb70ac1a08e0887ecb34160bec8cfa
Closes-Bug: #1659312
Closes-Bug: #1665282"
8a1371588d0da485debc2dd8aba4ebad08f3c655,2017-02-19 21:32:54-08:00,"Allow no network to be passed into subnet context

Similar to change I498791614fd456ab67c453cad691f7658d107123,
we can avoid an unnecessary network retrieval by making the network
part of the subnet context lazily loaded by allowing None to be
passed into the subnet context.

If a driver does need items off of the network, the context will
trigger a lookup at the time of reference.

Partial-Bug: #1665967
Change-Id: Ic6651f1d44fcdbb749c99a6cc2c7300b1036388c"
bc306a5512dc7d46737f1822cd2f827f87b95f9c,2017-02-20 01:22:33-08:00,"Avoid loading network and all rels for subnet query

The Subnet model has a relationship to Network that is only
used for bumping the revision of the network. However, loading
the network loads all of its relationships as well so we end
up wasting a bunch of time loading segments, DHCP agents, etc all
for no reason. During a subnet update, we get the subnet from the
DB several times (policy engine, before update, after update,
and dhcp agent scheduler) so the slowness in get_subnet is amplified.

The recent switch to subqueries[1] has made loading all of this
unrelated data much more expensive since each relationship requires
a query, which was likely what brought this problem to the surface.

This adjusts the relationship to just load the standard attr object
of the network directly so we can still bump the revision of the network
without having to load the network itself.

This resulted in a ~20%-30% reduction of time spent in single update-subnet
operations on my dev environment (1sec to 650-850ms).

1. I6952c48236153a8e2f2f155375b70573ddc2cf0f

Closes-Bug: #1665967
Change-Id: Ie5f956ddf0704a5dde6e4f801a446f48fea5f697"
4134f882cc695a4e1efa22502bc5dddc31a9865f,2017-02-21 06:58:12+00:00,"Make ML2 OVO push notification asynchronous

The OVO push notification logic was blocking the AFTER_UPDATE
event for all core resources. This isn't problematic for individual
HTTP API calls. However, the agent current updates the status of
every port it wires two times, including on agent restarts.

In order to drastically reduce the impact of this notifier, this
patch moves it into a spawned eventlet coroutine so it doesn't
block the main AFTER_UPDATE events. A semaphore is used to prevent
multiple coroutines from trying to hit the database at once in the
background.

This doesn't change the semantics of the notifier since its goal
is always to send the latest events.

Partial-Bug: #1665215
Change-Id: Ic259bad6f65f4bc45f5b900e0979c9a91865089b"
2c01ad9c564dcc294fb954a62d86d1e334f52178,2017-02-21 06:59:37+00:00,"Avoid segment DB lookup in _expand_segment on port

The port context already has a network attached to it that contains
all of the segments for that network. In all cases the segments the
port wants to lookup should be present here so we can just iterate
over them without a separate DB query.

Partial-Bug: #1665215
Change-Id: I9014c4e401134f4db908ed989e0095d0ca95b7c9"
60edb4c9519543a04d5ccc73c8b5371123fefcd8,2017-02-21 06:59:50+00:00,"Allow no network to be passed into PortContext

This allows a PortContext to be constructed without a network
passed in for cases like update_port_status that don't examine
bindings, segments, or any other network properties.

In the event that a mechanism driver is loaded that does reference
the 'network' property for these occasions, the context will look
up the network then in a late binding fashion.

This will improve the performance of the update_port_status call
from the provisioning blocks callback, which doesn't provide a
cached network to update_port_status.

Partial-Bug: #1665215
Change-Id: I498791614fd456ab67c453cad691f7658d107123"
7c8f4c5294efb3af3b9afd7e25299884f5dbc746,2017-02-21 07:36:46-08:00,"Add some debug statements to root-cause 1666493

It seems like the allocate is being called on the wrong subnet
in the related bug report. Add an assert and some debug
statements to help figure out why.

Change-Id: I22b8f1f537f905f4b82ce9e50d6fcc5bf2210f9f
Related-Bug: #1666493"
391ac43bf3862d67cee3ea0f628bd7958e585c7f,2017-02-23 10:25:11+00:00,"Deprecate gateway_external_network_id option

This option is used only when external_network_bridge is set to
non-empty value, and that other option is already marked for removal.

DocImpact The gateway_external_network_id option is deprecated and will
          be removed in next releases.

Change-Id: Ie6ea9b8977a0e06d69d735532082e9e094c26534
Related-Bug: #1511578"
bfa36eb4ceba2bf54b1b9d7f735a595afe707ffd,2017-02-23 15:23:07+02:00,"Configure HA as False when creating a router for DVR tests

In order not to interfere between HA and DVR we should create
a new router with False HA value
There is another patch that checks different combinations between
HA and DVR: https://review.openstack.org/#/c/418276/

Change-Id: Ifa66341c023b7f63ef5eff7d461d1d4bc38fc567"
6dee4c5942684128f2df4eb6b1a1f0ec978c7224,2017-02-25 06:29:33+00:00,"Cleanup _find_related_obj

All of the additional lookup logic was essentially duplicating
a relationship property of 'load_on_pending=True', which tells
SQLAlchemy to lookup the relationship during object creation [1].
So we can dump all of this logic and just use that option.

1. http://docs.sqlalchemy.org/en/latest/orm/relationship_api.html
   #sqlalchemy.orm.relationship.params.load_on_pending

Related: blueprint push-notifications
Change-Id: I0e495a50f5cab9b6449825039d7683d77de1e763"
c1dfb53bf1db1fe65ba6a8ef64a0b30151ee5c03,2017-02-27 15:14:14+00:00,"iptables: stop 'fixing' kernel sysctl bridge firewalling knobs

Those are different on different kernel versions, and have reasonable
default values on all newer kernel versions, including RHEL. We
nevertheless made devstack to set those in the past; now I propose to
clean the code from neutron tree and leave it up to deployment tools to
fix in an unlikely case the system has broken default values.

Now that iptables firewall code does not trigger sysctl, we can also
remove this filter from the corresponding rootwrap .filters file.

DocImpact make sure deployment docs mention the expected sysctl knob
          values.

Change-Id: Iabf61021c90b0536be274463d48fb5a572ecc023
Related-Bug: #1622914"
374de0ad49986b2f80a0bf3e16d16c48c3f8f7c0,2017-02-28 17:12:55+01:00,"Use registry.receives decorator in neutron.db.l3_dvr_db

Switch to registry.receives decorator in neutron.db.l3_dvr_db

Partial-Bug: #1668262
Change-Id: I01b0711e5a4f4729ce76519522271577516cacec"
f448fd2229a5e6cdc92dd215b8e499e85984511f,2017-02-28 17:19:17+01:00,"Use registry.receives decorator in neutron.db.l3_hamode_db

Switch to registry.receives decorator in neutron.db.l3_hamode_db

Partial-Bug: #1668262
Change-Id: I57b9f268b2d26f9605452d57622d2c222625e2d2"
e1edf6f276736db9f2f8607d63ce68a761678ddd,2017-02-28 17:25:08+01:00,"Use registry.receives decorator in neutron.db.availability_zone.router

Switch to registry.receives decorator in neutron.db.availability_zone.router

Partial-Bug: #1668262
Change-Id: Ib4e34159bf71a749eddf945fb942f679da7bacd0"
8626979c75be44c006d3019b921cd44a1339d466,2017-02-28 22:08:01+00:00,"Convert gate_hook to devstack-tools

Devstack does not support multiple duplicate sections in local.conf.
Currently it works by chance, and is not guaranteed to work when next
changes land for devstack. So we should make sure we generate local.conf
that does not have duplicate sections.

This can be achieved using tools from devstack-tools package, that allow
to produce and merge multiple local.conf files compatible with devstack.

This change will need to be backport to all stable branches to
accommodate for branchless devstack-gate repo.

Related-Bug: #1667331
Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Depends-On: I53119876b82eeaec19382dbe115cb1740bed0cec
Change-Id: Ibd0f67f9131e7f67f3a4a62cb6ad28bf80e11bbf"
cd39505f89ccbd8ca22cfbd3f8fd6ccaffab186f,2017-03-01 12:58:52+00:00,"Use registry.receives decorator in neutron.db.db_base_plugin_v2

Switch to registry.receives decorator in neutron.db.db_base_plugin_v2

Partial-Bug: #1668262
Change-Id: I205bac32d94bc40b737f7b2e90f559925821110a"
1fae7ad1085c4548b4019652256bcae49a36f192,2017-03-01 14:10:00+00:00,"LB Trunk: Stop matching MAC of subport to port model

Matching the MAC of the tap interface on the hypervisor
to the MAC that the VM will actually use to send traffic
through the tap causes the following error messages:

brq9e974900-cd: received packet on tapa8a6ce4a-e8 with
own address as source address

This is triggering a warning because there are now two
forwarding entries on the bridge, a static one from the
tap device, and a learned one from the packets received.[1]

Due to the presence of a static MAC entry, this will break
things like allowed_address_pair use cases that allow a MAC
to be used by multiple ports.

This patch removes all of the logic to set the MAC
address on the TAP device because it didn't serve any
other purpose than easy to correlate output from
ip link show commands and neutron port MAC addresses.

TAP devices will now just get whatever MAC address the kernel
selects for them.


1. https://lists.linuxfoundation.org/pipermail/bridge/2004-January/003740.html



Closes-Bug: #1668209
Change-Id: I0ff46f9550a79f486063a8e2810ed3b1140a4769"
ae9d1160bdaedc23dd6a1a0a85c09b8e65422a13,2017-03-01 06:11:44-08:00,"Stop making IP-specific provider rules in SG code

Setting up rules to allow DHCPv6, DHCP, and RAs from specific
IP addresses based on Neutron resources has a few issues:

1. It violates separation of concerns. We are implementing logic to
   calculate where an IPv6 RA advertisement or DHCP advertisement
   should be coming from in the security group code. This code should
   not be trying to guess IPv6 LLAs, know about subnet modes, DHCP server
   implementations, or the type of L3 plugin being used. Currently all
   of these assumptions are baked into code that should only be
   filtering, which makes it very rigid and brittle when it comes to
   other implementations for DHCP and/or RAs.
2. It has scaling issues on large networks. Every time one of these
   provider rules is updated, it triggers every L2 agent to refresh
   all of the security group rules for ports in that network, which puts
   significant load on the server.
3. It's main purpose: preventing spoofing of RA[1,2] and DHCP packets,
   has long been superceded by preventing VMs from acting as DHCP/RA
   servers[3][4].

This patch completely removes all of this logic and just returns
static provider rules to the agents that allow all DHCP server
and RA traffic ingress to the client. This addresses the issues
highlighted above since the code is significantly simplified and
the provider rules don't require refreshes on the agents.

Now that the provider rules never change, the RPC notification
listener on the agent-side for 'notify_provider_updated' is now
just a NOOP that doesn't trigger any refreshes. The notification
was left in place on the server side for older version agents
that have stale IP-specific provider rules. The entire notification
can be removed in the future.

The one open concern with this approach is that VMs will now be
able to receive DHCP offers from other DHCP servers on the same
network that aren't being filtered (e.g. a VM with port security
disabled or another device on a provider network). In order to
address this for DHCP, this patch adds two rules that only allow
DHCP offers targeted to either the broadcast or the correct client
IP. This prevents incorrect offers from ever reaching the client.
For RAs, this patch just allows all RAs so we may pick up
advertisements from other v6 routers attached to a network;
however, the instance won't actually be allowed to use bad addresses.

1. https://bugs.launchpad.net/neutron/+bug/1262759
2. I1d5c7aaa8e4cf057204eb746c0faab2c70409a94
3. Ice1c9dd349864da28806c5053e38ef86f43b7771
4. https://git.openstack.org/cgit/openstack/neutron/tree/
   neutron/agent/linux/iptables_firewall.py
   ?h=521b1074f17574a5234843bce68f3810995e0e1d#n475
Closes-Bug: #1653830
Closes-Bug: #1663077
Change-Id: Ibfbf011284cbde396f74db9d982993f994082731"
a5e04fbd84b96e306db3d3ed6140fa82e7441495,2017-03-01 18:34:36+01:00,"Use registry.receives decorator in neutron.notifiers.nova

Switch to registry.receives decorator in neutron.notifiers.nova.

Partial-Bug: #1668262
Change-Id: I50f61f97ded73cd3b7f18ac97d8d4b918554e098"
42631e311779b9a779ad8e7bd6654a58c6124fca,2017-03-01 11:19:16-08:00,"Scan for mac through all devices

The first device the agent happens to pick could be something
without a mac address like a 6in6 interface. This was causing
the agent to fail to start if it was unlucky enough to pick
that address.

This patch just adjusts the logic to keep iterating through
the list until we find a mac.

Closes-Bug: #1669087
Change-Id: I6e934a2dff8fd441e1c70c9a5857fd6150835e2a"
e3cd8e9bdf7f5571517e87bb9d681e9a234c682c,2017-03-01 19:46:32+00:00,"Use registry.receives decorator in neutron.db.dvr_mac_db

Switch to registry.receives decorator in neutron.db.dvr_mac_db.

Change-Id: I7f1426adabe1d97b8df11d561454972354c23b14
Partial-Bug: #1668262"
2f4a5f8f37286b09d74ed18f562d09b37095a448,2017-03-01 19:48:20+00:00,"Use registry.receives decorator in driver_controller

Switch to registry.receives decorator in
neutron.services.l3_router.service_providers.driver_controller.

Change-Id: I96b32365ef15c5e7c1f54cf58f1451e978f6bd91
Partial-Bug: #1668262"
4f237819cf20e83e738fbe5f66f9d87d8932cfd0,2017-03-01 23:18:04+00:00,"Use @registry.receives in neutron.services.qos.drivers.base

Switch to registry.receives decorator in neutron.services.qos.drivers.base

Change-Id: If7532e0f08824523b55f0de53a59525d519ca7f9
Partial-Bug: #1668262"
5bd08ce7f9283d8bf7789049e536a9957d54e41a,2017-03-02 14:36:28+09:00,"Don't use save_and_reraise_exception when we never reraise

Otherwise we get ""Original exception being dropped"" messages.

Closes-Bug: #1669244
Change-Id: Iecda4cce3f87c1a5a18cf365a3d6bdf5a8b4b514"
20097d44bf686c74c3dea236b730af51162f9408,2017-03-02 09:37:45+00:00,"Use @registry.receives in neutron.services.trunk

Switch to registry.receives decorator in neutron.services.trunk package.

Partial-Bug: #1668262
Change-Id: Iad3d99d958eb906b1cf2370378149ba1a4b209f4"
c3dda721813956c0924939546075f816935baa89,2017-03-02 17:52:11+00:00,"[Fix gate]Update test requirement

Since pbr already landed and the old version of hacking seems not
work very well with pbr>=2, we should update it to match global
requirement.
Partial-Bug: #1668848

Change-Id: Ie0a2cef329e2820ffe60c512a4870c0c3053574a"
5a6f98a30ed7730a582cd6682e0625c849c1f562,2017-03-02 11:23:18-08:00,"Include metadata content for debugging

This will help root cause the Cirros image complaining
about a lack of keys when they are visibly present in the
Nova API logs.

Related-Bug: #1668958
Change-Id: I606c56f73be147e7f3281dfc73b874e404c39675"
366dd7cc37c053e0fff897b16414c960243abcfc,2017-03-02 21:01:37+01:00,"Deprecate nova_metadata_ip in favor of nova_metadata_host option

nova_metadata_ip option name is a bit confusing as it accepts an ip but
also a dns name (which is required when https protocol is used).

This change deprecates nova_metadata_ip option in favor of
nova_metadata_host option and updates option help to highlight that we
can use an ip or a dns name.

DocImpact
Closes-Bug: #1585699
Change-Id: Ia6c2471c7b4f3e924941222133edbb90151757a5"
ed5fc12ab7ed5404c3eba49874e68b0adde33b67,2017-03-03 17:03:36+00:00,"Fix trunk subport scenario test

This test wasn't allowing ping before asserting
that ping should work. It only passes in the OVS
scenario because the job is configuring to use the
hybrid iptables driver which does not filter vlan-aware-vms
on OVS.

Closes-Bug: #1669372
Change-Id: Ia70360d664d5efd4154c0eb843143f1567785d59"
ff3132d8d455012b2b29f1eb65817f8492f84fe9,2017-03-03 19:22:45+00:00,"Stop killing conntrack state without CT Zone

The conntrack clearing code was belligerenty killing connections
without a conntrack zone specifier when it couldn't get the zone
for a given device. This means it would kill all connections based
on an IP address match, which meant hitting innocent bystanders
in other tenant networks with overlapping IP addresses.

This bad fallback was being triggered every time because it was
using the wrong identifier for a port to look up the zone.

This patch fixes the port lookup and adjusts the fallback behavior
to never clear conntrack entries if we can't find the conntrack
zone for a port.

This triggered the bug below (in the cases I root-caused) by
killing a metadata connection right in the middle of retrieving
a key.

Closes-Bug: #1668958
Change-Id: Ia4ee9b3305e89c958ac927980d80119c53ea519b"
ec84c84910516783ad2e0bf9ce5e7c4fb6775645,2017-03-03 12:04:11-08:00,"Prepare trunk rules module to deal with the Ironic use case

There is a chance the _validate method might grow to be
unmaneagable to support the ironic user case. Break it
down before it's too late.

Related-bug: #1648129

Change-Id: I511d48f4702c3f0dd1013067ae1ceb82cf41d9a3"
1f5ee0e8942e4b77a89a00ee0249de5d5014e2bc,2017-03-03 19:38:23-08:00,"Get rid of ML2 inheritance of delete_network

In an effort to simplify the codebase, this eliminates
all of the custom code in the ML2 delete_network
method and leverages registry callbacks for network
events.

The only purpose of the remaining inheritance of the
method is to leave the transaction guard on.

Partial-Bug: #1666424
Change-Id: Ib7d1c2081654dda82b5e015c71d20f378f3308f7"
1feb19c83ff61a3782ce862d71b8d04e21d7aa00,2017-03-06 17:59:32+00:00,"Stop skipping compute owner in Linux Bridge loop

Nova Ocata and Newton have protection against bridge
creation races in os-vif[1] so we no longer need
to special-case this port type in the Linux Bridge
loop going forward in Pike.

1. Ib0266086e0caffecf3f9f2a8291369cfa155f386

Related-Bug: #1617447
Change-Id: I2a23d0cbc4c4d0db6e9f48d91ca03b5007f91a84"
6975e2a48e85a5f0f198e2af3e99bc06dd409eaa,2017-03-06 22:19:18+00:00,"Ensure ovsdb_connection enabled before calling monitor

ovsdb-client monitor attempts to connect to ovs via the
ovsdb_connection if it is set. Since it is set by default, we need
to ensure that OVS is listening on the socket before calling
ovsdb-client monitor.

Closes-Bug: #1669893
Depends-On: Ibde5417d005265d27e939ca29788c21f73b38980
Change-Id: Ia34b9d599b522dd12ef088100c2b68a75a78d797"
31fa23d84c9054fb4cfebccef953bf6839698a1d,2017-03-06 15:10:20-08:00,"Get rid of delete_subnet method in ML2

This method has grown to be one of the most hideous methods in
Neutron. It's well past Icehouse so it's time to address the
REVISIT and get rid of it entirely. :)

This patch refactors ML2 and the db_base_plugin_v2 delete_subnet
method so ML2 can perform its ML2-specific tasks with callbacks
and db_base_plugin_v2 can handle the rest.

Partial-Bug: #1666424
Change-Id: Ie29acfbe323b60205ade9d660f7497f5bf4a35ca"
ae8e6095f9c15f9d1012427c0b098c98fdc154fa,2017-03-07 14:07:16+00:00,"add 4094 to fix the range of available local vlans

in fact the range of available local vlan is 1-4094,
but when initialization of the local vlan in ovs_neutron_agent,
self.available_local_vlans is set([1,2,3...4093]),omit 4094
This causes a problem that ovs-agent will not use 4094 as local vlan

modify moves.range(p_const.MIN_VLAN_TAG, p_const.MAX_VLAN_TAG+1)

Closes-Bug: #1668908
Change-Id: Ic25929cad89ab2e31fdf5b70875b84491dfc52ed"
46827e0de9b164cb54973180eb4f9849d97469b4,2017-03-07 15:55:40-05:00,"Fixes crash when starting Neutron OVS Agent on Windows

The neutron OVS Agent does not start on Windows because
of Linux specific import.

The fix consists in moving the method get_ip_version in
the common module of ip_lib being the only one used from
the module. We will import the common module
agent/common/ip_lib after that.

Change-Id: I95e9a6fa99e0992499f46a4f0debccd47b8a936c
Closes-Bug: #1670402"
9c7ca5cc020a93a65fc817ae960d221d43e0e924,2017-03-08 07:50:51+00:00,"Don't return null-byte separated string from ExternalProcess.cmdline()

Instead construct the string using psutil.Process.cmdline() method that
will parse the data from kernel for us and will return a proper
space-separated command line (plus will provide some more safety
guarantees, e.g. against zombies).

This change also introduces a new psutil dependency for neutron. Before
that, the library was used in functional tests only, and with a minimal
version number that is not compatible with global-requirements.txt or
.cmdline(). Moved the requirement into runtime requirements.

Related-Bug: #1672921
Change-Id: I780ea10bd1870c86c1a048071863843bc2993958"
3b22541a2aa9a5b06e2bff256701dbe24554c17c,2017-03-08 15:20:50+00:00,"Switch ns-metadata-proxy to haproxy

Due to the high memory footprint of current Python ns-metadata-proxy,
it has to be replaced with a lighter process to avoid OOM conditions in
large environments.

This patch spawns haproxy through a process monitor using a pidfile.
This allows tracking the process and respawn it if necessary as it was
done before. Also, it implements an upgrade path which consists of
detecting any running Python instance of ns-metadata-proxy and
replacing them by haproxy. Therefore, upgrades will take place by
simply restarting neutron-l3-agent and neutron-dhcp-agent.

According to /proc/<pid>/smaps, memory footprint goes down from ~50MB
to ~1.5MB.

Also, haproxy is added to bindep in order to ensure that it's installed.

UpgradeImpact

Depends-On: I36a5531cacc21c0d4bb7f20d4bec6da65d04c262
Depends-On: Ia37368a7ff38ea48c683a7bad76f87697e194b04

Closes-Bug: #1524916
Change-Id: I5a75cc582dca48defafb440207d10e2f7b4f218b"
1698bee770b84a2663ba940a6ded5d4b9733101a,2017-03-08 20:10:35+00:00,"Set OVS inactivity_probe to vsctl_timeout when adding manager

If the vsctl_timeout > OVS's inactivity probe interval and a
transaction execution time exceeds the probe interval, OVS will
disconnect and the transaction will return TRY_AGAIN and most
likely repeat failing until the vsctl_timeout is reached. This
change ensures that the ""failsafe"" creation of the manager also
sets the inactivity probe to the vsctl_timeout value.

Currently the patch doesn't override the probe_interval on an
existing Manager since it is possible that connection is used by
outside applications and it theoretically should be handled at
deployment.

Related-Bug: #1627106
Change-Id: I76fa0a0cf04a166edf062086fceb2fd90960ad6b"
4c40016dfba21a851d1cac5ce199ddcca001562b,2017-03-08 14:48:03-08:00,"Init policy in pecan after hook as well

policy.init() is called in the before hook, but this isn't
invoked on GET calls so if the first call a thread receives
is a GET call, we can end up with an uninitialized policy
enforcer and get a traceback.

This just calls policy.init() in the after hook as well.

Change-Id: I29ebc9a91b98a27e707d5b35ad1a24a26e8c8f44
Closes-Bug: #1671267"
3593620faa37322a1aaf1ce0c0ae3065ec623c2f,2017-03-10 16:35:42+08:00,"Change the way to distinguish the port type

In delete_port_postcommit, a DVR port (port['device_owner'] =
DEVICE_OWNER_ROUTER_SNAT) can match on l2pop_db.HA_ROUTER_PORTS[1],
but can not get any fdb entries by _get_ha_port_agents_fdb. Then,
the fdb_entries[network_id]['ports'] is been overwritten by {}. So
the associated flow entries will not be deleted.

Closes-Bug: #1668277
Change-Id: I7b621157fe85945acd99e4f08b6370d2f9c3d44d"
a51a6e7fcb71b7af7d01862a7a92ab5b9d207844,2017-03-10 16:37:01+00:00,"TrivialFix: Do not use synchronous_reader argument

While running the following was observed in the captured stderr:

neutron/tests/unit/testlib_api.py:104: DeprecationWarning: Using the
'synchronous_reader' argument is deprecated: argument value is
propagated from the parent _TransactionFactory
      synchronous_reader=True)

I simply removed the argument.

The parent ref is here and defaults to True:
https://github.com/openstack/oslo.db/blob/master/oslo_db/sqlalchemy/enginefacade.py#L160

TrivialFix

Change-Id: Ic1744d97edb69b0f806aea7f2cde0b89b6bfbce1"
c7fb24b3cb9cda1cc78e834a0153d219995ce97f,2017-03-13 17:27:42-07:00,"Check for None in _get_agent_fdb for agent

get_agent_by_host can return None in the l2pop
driver so we need to check for that case before
we blindly try to decode configuration values on
the result.

There are a couple of cases that can lead to this.
* The deployment can be misconfigured and is missing
  either a tunneling_ip option for the agent on a
  host or is missing an L2 agent with that host_id
  entirely.
* Multiple mech drivers are in use and a port is being
  deleted from an agentless host.

Related-Bug: #1533013
Closes-Bug: #1672564
Change-Id: I1e79f600172edad1e31e8231a0a6a2c55f46804c"
98371a6c83d1d866b98ac4a8c9c7b8b4686c42c9,2017-03-14 12:11:24-04:00,"qos: Pass correctly table_id to openflow driver

There was a switch to using uninstall_flows() in
I90ff1055d367609694eef975c7d084e4cd7a2cf4. But native driver doesn't
understand 'table' parameter and requires 'table_id' instead.

Closes-bug: #1672789

Change-Id: I7ccbd074c88d7f5577afcc2bba1489bae0897da5"
cf42abc85e385eac12123ccac63a7dd3eb4f83ce,2017-03-15 04:27:23+00:00,"Let setup.py compile_catalog process all language files

Two years ago the translation files have been split into several
files, separating the log messages of different log levels from each
other, like X.pot, X-log-warning.pot, X-log-info.pot, and so on.
However, the setup.py command `compile_catalogs`, that comes from the
babel package and compiles the corresponding .po files into .mo
files, only supported one file per python package.  This means that
during packaging `compile_catalogs` never compiled the X-log-*.po
files, so the corresponding translations were always missing.

Since babel 2.3 the domain can be set to a space separated list of
domains.  This change adds the the additional log level files to the
domain list.

Change-Id: I436072d03f401240df6d7b8348616bc7c4731c4a
Closes-Bug: #1536226"
bb3c0e8285783b655427a3896f928831c6033deb,2017-03-15 04:31:09+00:00,"Add PD support in HA router

The following enhancements are added:
  -- PD keeps track of status of neutron routers: active or
     standalone (master), or standby (not master),
  -- PD DHCP clients are only spawned in the active router. In the
     standby router, PD keeps track of the assigned prefixes, but
     doesn't spawn DHCP clients.
  -- When switchover occurs, on the router becoming standby, PD
     clients are ""killed"" so that they don't send prefix withdrawals
     to the DHCP server. On the router becoming active, PD spawns DHCP
     clients with the assigned prefixes configured as hints in the
     DHCP client's configuration

Closes-Bug: #1651465
Change-Id: I17df98128c7a88e72e31251687f30f569df6b860"
e4495bfe0a4fe97c206d279cd7fb49460e1254b8,2017-03-15 04:32:20+00:00,"Use @registry.receives in neutron.services.segments.plugin

Switch to registry.receives decorator in neutron.services.segments.plugin.

Change-Id: Ic9b5a2ce2b1dac2ed912a72c9698d19c2cf4ce9d
Partial-Bug: #1668262"
1257a3f203aacfbbe16c1afa79893b8b990a1a57,2017-03-15 17:06:09+08:00,"Don't add duplicate metadata rules after router update

For a HA router, when it's updated, the l3 agents which are standby
always call the after_router_added method, then duplicate metadata
rules are added to iptables table. Althrough these rules will not be
applied to system because of the _weed_out_duplicates method, they will
grow linearly with router update operations.

Because these metadata rules are added once router is added to the agent
and will not be cleaned until router is removed, calling the add_rule
method in after_router_updated is a waste.

This patch removes adding metadata rules in after_router_updated.

Change-Id: I6650f1071499ed6cabd936bb0fb36b32a4b60bca
Closes-Bug: #1658460"
75612f200b984c9f42558ed951ae19e17c3633d9,2017-03-15 11:54:09+00:00,"Bump os-log-merger version in post_test_hook

The 1.0.6 version of os-log-merger exploded in cases where
log files contained \0 characters. 1.1.0 fixes such issue.

Change-Id: I470d38dfd5dd7e9cf6317d9f2f32875f33f3a996
Closes-Bug: #1672921"
0cb8fd637472c9aeb3ad162bf74d96f5a678eacd,2017-03-15 15:11:12+00:00,"On update_tags, clean up tags from the requested resource only

There was a bug in I0179a3616689f39d93c337c730283e21a01677cf that made
the service plugin to clean up removed tags from all resources, not just
the one requested.

Change-Id: Ifbe13102ebd903e01eb28a00d97e7e94d1a0e0b1
Closes-Bug: #1673086"
7f23ccce23066af3a977c3accb04d3927bb467fb,2017-03-15 09:52:18-06:00,"Agent common config

Refactoring Neutron configuration options for agent common config to be
in neutron/conf/agent/common. This will allow centralization of all
configuration options and provide an easy way to import.

Partial-Bug: #1563069
Change-Id: Iebac0cdd3bcfd0135349128921b7ad7a1a939ab8
Needed-By: Ib676003bbe909b5a9013a3178b12dbe291d936af"
44b6fcb4d26eaa5e28f147d903482f8fdd37d911,2017-03-15 12:46:23-07:00,"Use correct retry mechanism in tags

This replaces wrap_db_retry with
neutron.db.api.retry_if_session_inactive() in the tags
plugin.

wrap_db_retry is missing a bunch of exception types we
can encounter and are expected to retry in normal database
operations in Neutron (e.g. staledataerror in the bug report).

This patch doesn't include a unit test because there is already
quite a bit of coverage ensuring the decorator handles these types
of exceptions.

Closes-Bug: #1673243
Change-Id: I65b10ee54301401cd4525152a82a604ac8744582"
99e5f4fb4680082407f6c38bad6b7345696e5e9f,2017-03-15 12:56:21-07:00,"Get rid of custom wrap_db_retry call in sync_allocations

Just for consistency, get rid of the last direct call to
wrap_db_retry and instead use neutron.db.api.retry_db_errors
in the sync_allocations code so we don't potentially get
bitten by slight inconsistencies between the two.

TrivialFix
Related-Bug: #1673243

Change-Id: I975c7d0ec84698d277acbbec6d9cfec5c03439aa"
c0130c57e5138a8906fad7cab9cf820b88064d72,2017-03-15 23:31:58+00:00,"Neutron Feature Classification

The feature classification matrix will provide information about
plugins and the features they support.
Acts as a launching point for users to read about the intent
of the matrix before reviewing the matrix to find features and plugins
that meet their needs.

Will implement a page where users can view Neutron features
and plugins and their status.
Similar to Nova's implementation here:
http://docs.openstack.org/developer/nova/feature_classification.html
http://docs.openstack.org/developer/nova/support-matrix.html

Co-Authored-By: Darek Smigiel <dariusz.smigiel@intel.com>

Closes-Bug: #1580327

Change-Id: I67f4dc67883623decdbf136c598eb9e2d0bc24c4"
4f7fc8435f9340aae293bdcfef99201956ec2838,2017-03-16 02:33:53+00:00,"Stop spilling tracebacks during normal operation

Yes, they are innocent; yes, we log them with DEBUG level. But they
scare people, they make people judge the software, they are bad PR, and
they are probably redundant, string representation of the exception
should be enough. If there is an issue that will result in retry
attempts used without remedy, only then we should spill tracebacks and
scare users.

Guidelines: https://specs.openstack.org/openstack/openstack-specs/specs/log-guidelines.html#stacktraces-in-logs

Partial-Bug: #1673249
Change-Id: I791a52161635da64b1840c01ee6cf56a51bc7400"
86866f9ba5655ada618be4ebdb4dd6d62dece314,2017-03-16 11:28:10-04:00,"pecan: Make admin context if no context was created

Simlarly to legacy [1] this patch creates context in case environment
doesn't have one.

Closes-bug: #1673105

[1] https://git.openstack.org/cgit/openstack/neutron/tree/neutron/wsgi.py?id=fe4559f475757c7fc1314862eba4705a27c06c87#n276

Change-Id: I4bf17d115166a8b18b054da41e79914eab27f6d3"
1353927d12ae6d5970d435e68a73403030785b7e,2017-03-16 22:12:11+00:00,"Remove network port special-case in provisioning block

Since the merge of I607635601caff0322fd0c80c9023f5c4f663ca25,
DHCP agents now receive all port update/create events so we
no longer need to special-case network ports in this function.

Related-Bug: #1621345
Related-Bug: #1605955
Related-Bug: #1590845
Change-Id: I4b1cfcfee7441e63370ff3e61f75c119b34cc0fd"
5fd6b4c768f456e254c29a9ab8ef563774297dc9,2017-03-17 14:14:25+08:00,"Pass parameters when create eventlet.wsgi server

Otherwise, config option wsgi_log_format in neutron.conf
will not work

Closes-Bug: #1672615
Change-Id: I43a3b6d99f940b5276aabaccad15d1050023baa2"
676a3ebe2f5b62f0ce7a3f7f434526931d5504a5,2017-03-17 15:06:08+00:00,"Disable RA and IPv6 forwarding on backup HA routers

Neutron does not disable ipv6 forwarding for HA routers and it's
enabled by default in all router namespaces. For ipv6, this means
that it will automatically join the following groups:

* link-local all-routers multicast group (ff02::2)
* interface-local all routers multicast group (ff01::2)
* site-local all routers multicast group (ff05::2))

As a side effect it will answer to multicast listener queries, thus
causing external switch to learn its MAC address and disrupting traffic
to the master instance.

This patch will enable ipv6 forwarding on the gateway interface only
for master instances and disable it otherwise to fix the issue.

Also, the accept_ra procfs entry was enabled under certain
circumstances but it wasn't disabled otherwise. This patch, will
disable RA on the gateway interface for non master instances.

Closes-Bug: #1667756

Change-Id: I9bc890b43f750cad68fc67f4c79f1426c3506863"
a6a344c7b57d0b234fd67c6e05b8ae9cd9f9f219,2017-03-17 12:06:57-06:00,"Consume ServicePluginBase from neutron-lib

Neutron lib now contains ServicePluginBase [1]. In accordance
with the discussion in [2], this patch:
- Removes ServicePluginBase from neutron and replaces all uses
with neutron-lib.
- Removes PluginInterface; the plugin interface for extensions
is ServicePluginBase; that's what's used by everyone today.
- Updates a few UTs, based on the above.

NB: A subsequent patch will address the WorkerSupportServiceMixin
so its untouched herein.

NeutronLibImpact

[1] I2b1131ac53e9bfeb42a92f9ef134be6ff4cfe5a3
[2] https://review.openstack.org/#/c/424151/

Change-Id: I1e8f2ee6a96df9ba07dae37f1a80e61ad20693cc"
b6d4d382a9fc1088752ae9b010fb25d0fcdd5845,2017-03-17 16:55:52-04:00,"Fix linuxbridge agent startup issue with IPv6

The linuxbridge agent tries to move all the IP addresses
from the first interface attached to a bridge at startup.
This can fail if the interface has an IPv6 address since
IPv6 is always disabled on bridge devices.

Change ensure_bridge() to not disable IPv6, and instead
move all IPs and default route by family - IPv4 and IPv6.

Change-Id: Ic236de04c0203633df49967a9a4528fda13c51df
Closes-bug: #1662324"
650a4d8d29b642f79d13e8987429b8e92a6076f0,2017-03-17 21:49:27+00:00,"teach logger mech driver vlan transparency

add check_vlan_transparency method to logger mechanism driver.
Without this patch and with logger mechanism driver enabled,
vlan transparency is always rejected by logger mechanism driver.

Closes-Bug: #1673876
Change-Id: I954f3c0ba9d14d0800af26650d9ba2f088698aaf"
ce3f96f324b21f8ef3b3a4c02adc678411163a84,2017-03-18 01:06:54+00:00,"Revert ""Stop skipping compute owner in Linux Bridge loop""

This reverts commit 1feb19c83ff61a3782ce862d71b8d04e21d7aa00.
Better fix in I23c5faaeab69aede1fd038a36f4a0b8f928498ce but that
make take time due to dependency on a nova patch.

Change-Id: Iaa4d85f63cb8e058d09858636ce1434352e39bed
Closes-Bug: #1673910"
8f1fd73d6a88436d24f936adec997f88ad7f1413,2017-03-20 21:32:08+00:00,"Use unique binding_index for RouterL3AgentBinding

This is because (router_id, binding_index) tuple is expected to be
unique, as per db model.

Closes-Bug: #1674434
Change-Id: I64fcee88f2ac942e6fa173644fbfb7655ea6041b"
aac17c6be90c2640ce9df4b02027d8fc01944fd8,2017-03-21 01:26:31+00:00,"Reconcile quitting_rpc_timeout with backoff RPC client

With backoff client, setting .timeout property on it doesn't take any
effect. It means that starting from Mitaka, we broke
quitting_rpc_timeout option.

Now, when the TERM signal is received, we reset the dict capturing
per-method timeouts; and we cap waiting times by the value of the
option. This significantly reduces time needed for the agent to
gracefully shut down.

Change-Id: I2d86ed7a6f337395bfcfdb0698ec685cf384f172
Related-Bug: #1663458"
f48dbeda5c4f8f34fb0f56227254ea3b8f830005,2017-03-21 05:28:02+00:00,"Switch RootHelperProcess from select.poll to select.select

The new eventlet 0.20.x that the gate was recently bumped to [1] removed
select.poll [2]. Instead, we should use select.select that is both
supported by eventlet as well as available on all platforms.

[1] I534b8d7d6c2fa00c1fa7d84b3438e6e2b2fcad9e
[2] http://eventlet.net/doc/changelog.html#id2

Change-Id: Ie649abf495e00e7e05de47520ed89bbcd28360db
Closes-Bug: #1674557"
a7898c54954396f8fdfe86a6445f5e5648407d5e,2017-03-21 07:01:32+00:00,"Simplify RootHelperProcess._read_stream()

select() itself has timeout mechanism, so we do not need to use
wait_until_true wrapper.

Related-Bug: #1674557
Change-Id: I35bc4716f0d1e0d92e7b7a3f6dcb6978e9d725f9"
dd882bbc57e74e967047016d9f43735d3bfbb368,2017-03-21 10:16:00+00:00,"Move NEUTRON_* definitions from plugin.sh into settings file

If devstack triggers a plugin that directly imports from devstack/lib/*
before triggering neutron's plugin.sh, NEUTRON_* variables that are used
in some devstack/lib/* files may not be set.

The ``settings`` file is sourced by devstack for all repos before any of
plugins enabled in the environment is triggered, and so moving NEUTRON_*
definitions there should guarantee for us that the variables are set
when the first enabled plugin is executed.

Since Q_PLUGIN_CONF_PATH and Q_PLUGIN_CONF_FILE are defined in
lib/neutron_plugins/ml2:neutron_plugin_configure_common, and we want to
avoid triggering that code from the plugin, we need to duplicate values
for NEUTRON_CORE_PLUGIN_CONF_PATH and NEUTRON_CORE_PLUGIN_CONF from
there.

Closes-Bug: #1675022
Change-Id: Ib65d3615fba270c2fd6c116218bbb95a29f56aa6"
2d1ee7add7c08ebbf8de7f9a0dc2aeb5344a4052,2017-03-21 11:24:57+01:00,"Apply QoS policy on network:router_gateway

All router ports (internal and external) used to be excluded from QoS
policies applied on network. This patch excludes only internal router
ports from network QoS policies.
This allows cloud administrators to set an egress QoS policy to a
public/external network and have the QoS policy applied on all external
router ports (DVR or not). To the tenant this is also egress traffic so
no confusion compared to QoS policies applied to VM ports.

DocImpact

Update networking-guide/config-qos, User workflow section:
- Replace ""Network owned ports"" with ""Internal network owned ports""

Change-Id: I2428c2466f41a022196576f4b14526752543da7a
Closes-Bug: #1659265
Related-Bug: #1486039"
95f621f717b2e9fe0c89f7188f6d1668200475c8,2017-03-21 18:35:28+00:00,"Bump default quotas for ports, subnets, and networks

It's probably not very realistic to expect power users to be happy with
the default quotas (10 networks, 50 ports, 10 subnets). I believe that
larger defaults would be more realistic. This patch bumps existing
quotas for the aforementioned neutron resources x10 times.

DocImpact change default quotas in documentation if used in examples
          anywhere.
UpgradeImpact operators may need to revisit quotas they use.
Closes-Bug: #1674787
Change-Id: I04993934627d2d663a1bfccd7467ac4fbfbf1434"
c5f5bd0c4feda3ecd1f81b5bdd346c63185fb0a3,2017-03-23 08:50:01+08:00,"Fix some reST field lists in docstrings

Probably the most common format for documenting arguments is reST field
lists [1]. This change updates some docstrings to comply with the field
lists syntax.

[1] http://sphinx-doc.org/domains.html#info-field-lists

Change-Id: I8fb91bcb8ae4bfbfa68ddf7c38a4f1f5cf548b36"
75c34838ef7132352a34b0c224c2536a5283b1d5,2017-03-23 09:02:46+00:00,"Use oslo.context class method to construct context object

oslo_context.Context.from_environ provides a more generic way
to contruct a context object from request environment.
We can support more new attributes supported in keystonemiddleware
without changing our code.

Partial-Bug: #1674349
Closes-Bug: #1621073

In the unit test, context.tenant_name is replaced to context.project_name
as it will be the recommended way to access project name now.
Note that equivalency of project_name and tenant_name will be ensured
by a depending neutron-lib patch [1], so this change affects nobody.

[1] https://review.openstack.org/#/c/448537/

Depends-On: Ieec57d9ea8d95e55499a17e2c04da5e3e78a1557
Change-Id: Ie48aa843ca8c852b1e93e760d2e3e8aaa38aed56"
9049c32c7c7314e05250551807b4164082da4695,2017-03-23 11:18:11+00:00,"Stabilizing process monitor function test case

The problem seems to be that the TC is starting new processes
parallelly but it does not wait for them to start properly instead
it tries to kill one of them immediately but in some cases if the
startup phase is delayed the process that is about to be killed is
not started yet.
The fix is to introduce a waiting phase until all the child
processes are up and running right after the initial spawning
phase.
As the problem is not functional the fix is difficult to test.
I executed this TC in a loop with this fix for a 5000 times and
the problem has not appeared. Without the fix I had 3.8% failure
rate.

Change-Id: I19a8a4c35efc35a002478204fd24910d73c9c8c2
closes-bug: #1513771"
58a016ca7078deae8260b81969f6cf04045bd2fb,2017-03-23 14:47:59+00:00,"Configure tempest.conf via test-config phase

tempest is configured in test-config phase, and it removes existing
config before doing it, rendering all our settings ineffective.

This change moves tempest.conf related hook code to test-config that
happens after tempest is configured, and after it removes the initial
config file.

Related-Bug: #1646391
Change-Id: Id30caccfccd73b804dbd3e36639b4b3e95a256ee"
37fc39fda3bd7491249c3c4d1a0b506eb39a4eb5,2017-03-24 06:25:31+08:00,"Replaces uuid.uuid4 with uuidutils.generate_uuid()

Openstack common has a wrapper for generating uuids. We should
use that function when generating uuids for consistency.

Change-Id: I9e8097f7254e9cd63f27898ab49c473aa6177121
Closes-Bug: #1082248"
4ba0e75254b087c232be18c007d50045606b20b5,2017-03-24 02:04:36-07:00,"Skip DHCP agent query in provisioning block setup

Provisioning blocks merged in Newton so for Pike we can
safely assume we are not running with Liberty agents that
don't notify the server when the port is ready.

This allows us to skip a query to the agents and configuration
parsing on every port provisioning block setup.

Related-Bug: #1453350
Change-Id: I8111469ad4b0d88580bff7a77492ad95af8e9377"
d761d26225a8fc63e512fc26b864a46c0956e19a,2017-03-24 11:02:08+01:00,"delete_flows shall only touch flows with the bridge cookie

With this change delete_flows will only remove flows matching the default
cookie of the bridge.

The uninstall_flows implementation in the native bridge is also modified
to touch only the flows with the bridge cookie.

To still allow deletion of all cookies, cookie=COOKIE_ANY is introduced
as a special value, and used in the agent code in the places where the
intent is indeed to clean all flows whatever their cookie is.

Partial-Bug: #1557620
Change-Id: Idd0531cedda87224531cb8fb6a912ccd0f1554d5"
106f6507db7db61f3fb6f55ebf6b6d9405d66079,2017-03-24 11:22:35+01:00,"Refactor OVSCookieBridge: always use bridge cookie

Instead of having OVSCookieBridge as a passthrough class that does not
provide the intended behavior (see bug 1557620), this change implements
a cookie bridge as a patched copy of the underlying bridge:
- the underlying bridge is copied
- the copy is given an extension-specific cookie

The 'extension bridge should only touch its flows' effect is obtained
by a separate change (Idd0531cedda87224531cb8fb6a912ccd0f1554d5).

The two problems in the bug are addressed:
- the extension-specific cookie is now applied even for calls to
  methods other than add/delete/mod_flows
- the extension-specific cookie is now applied in the case of the
  native/ryu implementation

This commit also re-enable the use of uninstall_flows in the QoS OVS driver,
which had to be disabled in Idd0531cedda87224531cb8fb6a912ccd0f1554d5, but
can now be re-enabled with this bug addressed.

This change complements the unit tests to confirm that the bug is
fixed.

Change-Id: I55835a34d8fba7a139dce93f99cbff54584d695c
Closes-Bug: #1557620
Needed-By: I8570441a0b8d5ee3ad7f88e07affac2f1b782021"
12d24abba75ab3b926edbac389437bacc23914dd,2017-03-24 19:58:51+00:00,"Delete segments on BEFORE_DELETE instead of PRECOMMIT

Deleting segments results in BEFORE/PRECOMMIT/AFTER events
itself so it shouldn't performed while already inside a transaction
to delete a network.

Closes-Bug: #1675910
Change-Id: I6c8070e1dc2216ea909288ce1133321e8eda1daa"
0e1fa9c7ee1f41045216ce96bbd8305c9fc0bb97,2017-03-27 17:25:34+00:00,"Fix Quota error while running tests

The test methods in the test class create networks and the cleanup
takes place after all tests are run. As such installation specific
default quota (that was e.g. just 10 networks till Pike) may be hit and
tests then fail.

This patch reduces the chance that the quota limit is not hit by
speeding up network resource cleanup (doing it after each test case
completed, not when the whole test class is cleaned up).

Change-Id: I6ba2704c60c77d89e00842e28bece14c64ef98a6
Closes-bug: #1671478"
c9d46984096574d130465705ac68b9df272aaa98,2017-03-27 16:28:15-04:00,"Update metering agent to use stevedore alias for driver

Currently the metering agent is using the old import method,
use stevedore instead.

DocImpact

Two places in the networking guide should change to
'driver = iptables' from current format.

Partial-Bug: #1504536
Change-Id: I1e6d196a3ada8fbfc2b70d6a983984d8db09bbd0"
5554d9c5b016bb08c23bba27361bf82dc429f963,2017-03-28 10:07:38+08:00,"Use router tenant for interface attach

When trying to add interface from a shared network by other tenant to
router, internal server will be raised.
Should use router tenant id instead of subnet tenant id to create port
when adding interface to router. And from the user's perspective the
port created should belong to the user who created it.

Change-Id: Ib124bbc85b9289940eb3de75a222196479e48e6b
Closes-bug: #1673696"
bae6555816d7b5784a09bf261958025c52df433f,2017-03-28 02:46:45+00:00,"ExtensionTestCase: register correct core plugin

We should register the passed plugin as core only if service_type is
False. Otherwise, the passed plugin is a service plugin, in which case
we should register some other core plugin for the test. The easiest
thing is to use the base db plugin for that matter.

This fixes subproject unit tests because now the core plugin will always
have _get_collection function that is needed by some underlying db api
functions.

Change-Id: Ica421831763eb2f5d25fc068287305b402227b53
Closes-Bug: #1676656"
3e1ed94e389c427f1da56cde43a458832078f073,2017-03-28 06:42:32+00:00,"Avoid router ri.process if initialize() fails

When router_info initialize() fails(with trace) some resources(
like keepalived process) may not be created. While handling this
exception, l3 agent calls _process_updated_router instead of
again calling _process_added_router, which also fails trying to
access resources which are not created.

In this change, agent will have new router_info(i.e
self.router_info[router_id] = ri) only when initialize() succeeds.
When initialize() fails, as router_info is not part of agent,
""_process_router_if_compatible"" will again call initialize().
We also cleanup router_info when initialize() fails.

Closes-bug: #1662804
Change-Id: I278ac83de57713c93d6e50846d79034d774c5d47"
2f8b4e06feb4a03f77490c7758c5979005e0ea68,2017-03-28 18:02:01+09:00,"Remove a release note for reverted patch

The release note was missed remove in revert patch[1]. Now it shows
non-existent feature in the release note[2]. This patch removes it.

[1]: https://review.openstack.org/#/c/431506/
[2]: https://docs.openstack.org/releasenotes/neutron/ocata.html#new-features

Closes-Bug: #1676787
Change-Id: I377de0c8491424f3ae9d56ed8ba2526e6137fc2e"
29652e0aff760bf445fd7ffef8eeede61a6710e3,2017-03-28 14:27:05-04:00,"Verify metering label exists before applying rule

If the metering-agent receives a label rule before it
has added the label, it will fail to update the iptables
rules as there are no existing chains.

When the action is ""create"", check if there is an existing
label, and create one and the corresponding iptables chains,
before trying to add the rule.

Closes-Bug: #1617248

Change-Id: Ia0ec1361188cca53023667d249c2b1e10bc22089"
f95d33ec6e58915aeb1fbaa27588334920752eb5,2017-03-29 11:58:16+08:00,"Port idlutils.get_schema_helper from ovsdbapp to neutron

There is a fatal error in networking-ovn in some case, so I port
idlutils.get_schema_helper from ovsdbapp to neutron and add some unit
tests. Networking-ovn will pass try_add_manager=False to it.

Change-Id: I12461c96f7a2845b3155fd587fb1fcc84ecf85f0
Partial-Bug: #1674889"
0e99b057dff08b37bd48bbd4f3aaf970ced2dffd,2017-03-30 11:53:14+08:00,"Handle empty body in add_router_interface

when passing an empty dict body {} to add_router_interface[1], internal
server error will be raised.
There is argument check in the cli which checks either subnet or port id
is needed, but not in the server side when the body is empty.

[1]:
https://developer.openstack.org/api-ref/networking/v2/?expanded=add-interface-to-router-detail

Change-Id: Iad48dadb1235bc45787a1e87ff3f0d7a21df18af
Closes-bug: #1674069"
f84ce9a57ceaf6f931ca51e028bac64c93835d91,2017-03-30 11:09:59-04:00,"Remove stale floating IP addresses from rfp devices

Old versions of the DVR code used to configure floating
IP addresses directly on the rfp-* devices in the
qrouter namespace.  This was changed in Mitaka to use
routes, but these stale floating IP addresses were
never cleaned-up when the l3-agent was restarted.

Add a check for these addresses and remove them at
startup if they exist.  This can be removed in a cycle
since once they are cleaned they will not be added
back by the agent.

Change-Id: Id512d213cd7ee11da913a4e4b0da20c3ad5420b0
Closes-bug: #1675187"
e5ad765484e546b9f857a91c0fea41ebfd87adab,2017-03-30 15:37:23+00:00,"Retrieve fresh network DB data before getting it in ml2

The DB objects that have join relationship with network, will be
acquired once during a DB transaction.
However, if they are updated after the first acquisition, the network
DB model object maintains the older value, and doesnt update it.

After cd7d63bde92e47a4b7bd4212b2e6c45f08c03143, the updated network
is retrieved from the db causing this bug.
This patch retrieves the latest data for these DB objects so that
updated information can be used.

Change-Id: Ic8935008515bed687ad3abd00c8ccaf656a30452
Closes-Bug: #1649503"
8a0faef877a18d931178a2ed1d55734aa91e32d3,2017-03-30 18:05:33+00:00,"TestTrackedResource: register core plugin in directory

This is achieved by switching the test class to BaseTestCase and using
setup_coreplugin. This makes later calls to neutron.objects.db.api
functions that extract the plugin from plugins directory to work.

The test class registers some sqlalchemy events for models not
registered in BASEV2, which later makes unregister_events fail because
of failure to compare those model classes with other registered model
classes (those that belong to proper model classes like Port). Before
the patch, the core plugin was not correctly registered in plugins
directory, and no code was actually loading the plugin, so no other
sqla events were in _REGISTERED_SQLA_EVENTS, which explains why
previously calls to unregister_events hasn't failed.

Good news is that the new parent class does clean up all events itself,
so we don't need to set the cleanup hook ourselves.

This switch also facilitated removal of some other preparatory steps
from the class that are already implemented in the new parent.

Closes-Bug: #1677636
Change-Id: Id462e532066ac3cd5e2f76c3670da7f7820c6581"
c76164c058a0cfeee3eb46b523a9ad012f93dd51,2017-03-30 14:54:51-07:00,"Move conntrack zones to IPTablesFirewall

The regular IPTablesFirewall needs zones to support safely
clearly conntrack entries.

In order to support the single bridge use case, the conntrack
manager had to be refactored slightly to allow zones to be
either unique to ports or unique to networks.

Since all ports in a network share a bridge in the IPTablesDriver
use case, a zone per port cannot be used since there is no way
to distinguish which zone traffic should be checked against when
traffic enters the bridge from outside the system.

A zone per network is adequate for the single bridge per network
solution since it implicitly does not suffer from the double-bridge
cross in a single network that led to per port usage in OVS.[1]

This had to adjust the functional firewall tests to use the correct
bridge name now that it's relevant in the non hybrid IPTables case.

1. Ibe9e49653b2a280ea72cb95c2da64cd94c7739da

Closes-Bug: #1668958
Closes-Bug: #1657260
Change-Id: Ie88237d3fe4807b712a7ec61eb932748c38952cc"
c20ad344da1f51617e631c1768b645ed1e01c1fc,2017-03-30 18:01:50-07:00,"Egress sg_rules should get 'prefix' from 'dest_ip_prefix'

When adding an egress rule to sg assigned remote CIDR, vms using
this sg will add a rule in iptables like -oxxxxxxxx-x -d CIDR.
But test cases for egress with prefix always using -s CIDR, which
is not correct.

Closes-Bug: #1523835
Change-Id: Ifabfe3278aa0516a222f71153e47149ff4562d5e"
3d58ce44d41fd38af862007ad79dd4dae826b9c0,2017-03-30 22:33:14-07:00,"Deal with port commonly when hypervisor is XenServer

When neutron is deployed with hypervisor is XenServer, current
implementation will grab port's iface-id via xapi, but this isn't
the proper way:
Port's iface-id is already set when creating VM or hot plugging
VIFs in nova project, so there is no need to grab it via xapi

Change-Id: Ie07527cc89ac81ff1e3519db66925cee482f77a4
Closes-Bug: #1649747"
6ad855a934e44e0fdc6a70c7dac9901ac9eafb5b,2017-03-31 19:26:34+04:00,"Handle auto-address subnets on port update

The patch handles the case when a port is updated
with an IP from a new IPv6 auto-address subnet

See bug for details on how the issue can affect DHCP
functionality.

Closes-Bug: #1678104
Change-Id: If2473f2db3ca16b5f46d3280e79a49756d1c098a"
b9b598040da1b8d3e860b39d9027c10f8576ee33,2017-03-31 17:37:49-07:00,"Move notify_security_groups_member_updated to callback

This moves the notify_security_groups_member_updated calls
outside of ML2 into a callback in the security groups RPC
base.

This will allow us to ultimately stop overriding the
create/delete/update port inheritance in ML2.

This results in a small behavior change internally for bulk
port creation operations where the notifier will be called
once for each port rather than once for all ports. We can
revisit this in the future if it turns out to be problematic
but right now the bulk port creation API is rarely anyway
since it's mostly a hidden feature (lack of client support).

Partial-Bug: #1666424
Change-Id: I344a82d5a1a8bf1e2b3f6a3ce7725682bb03b007"
fc563eaabec392281be90bd2472bed4f6506cb40,2017-04-02 04:09:52-07:00,"deepcopy binding and binding levels avoid expiration

Perform a deepcopy on the sqla objects passed into the PortContext
so we get detached versions of them safe to reference forever.
This is necessary because the PortContexts outlive the
transaction context managers they are creating in which means an
object can be expired and result in a query after a commit
(e.g. in bind_port_if_needed) that will fail and result in an
exception.

This required a few additional explicit session.merge calls to deal
with cases where touching the mech context was implicitly expected
to modify the DB state on the next commit.

Closes-Bug: #1669528
Change-Id: Ib5ba2daa80acba53c082bade1f61a3ee44ca41fc"
e2226fe373dfde74e8fc9e64ad65100e1c5de98b,2017-04-02 16:33:11+00:00,"Improve validation of supported QoS rules

New way of validation of QoS policy can be applied on port/network based on
port_types. It can validate if port can support rule by rule_type and also by
rule parameters or some values of parameters.

For example bandwidth_limit_rule can have parameter ""direction"" with
possible values ""ingress"" and ""egress"". Some of mechanism drivers can support
only one of those directions.

If user will try to apply policy with rule unsupported by port_type then it
will get error message and policy will not be applied.
Such validation is made during:
* port create
* port update
* network update
* QoS rule create
* QoS rule update

Co-Authored-By: Miguel Angel Ajo <majopela@redhat.com>

Implements blueprint qos-rules-validation
Closes-Bug: #1586056

Change-Id: I75bd18b3a1875daa5639dd141fb7bbd6e1c54118"
4a6d06550bd98b473bdcf5e58dcfb7f5ca9424ef,2017-04-03 21:22:38-07:00,"Inherit segmentation details for trunk subports if requested

This patch introduces support for requests where the user does
not know the segmentation details of a subport and by specifying
segmentation_type=inherit will let the trunk plugin infer these
details from the network to which the subport is connected to, thus
ignoring the segmentation_id in case it were to be specified.

This type of request is currently expected to have correct results
when the network segmentation type is 'vlan', and the network has
only one segment (provider-net extension use case).

DocImpact: Extend trunk documentation to include Ironic use case.

Closes-bug: #1648129

Depends-on: Ib510aade1716e6ca92940b85245eda7d0c84a070
Change-Id: I3be2638fddf3a9723dd852a3f9ea9f64eb1d0dd6"
5e125c92197031bf84be7a02c7eab02a8578adf7,2017-04-04 00:04:25-07:00,"Add net precommit create callback and req to update

This adds a network precommit create callback to ML2
and adjusts the precommit update callback to include
the request.

This changes will be leveraged by the dependendent
patch Id2db458f4688e4aa4c70ccdb09867b9a66de28ea.

Partial-Bug: #1678041
Change-Id: Ic99955356e564354e6dbeb4d46497e4d64e4656c"
fb64e7de492efbafebf38c875ce6ba76601286ac,2017-04-04 20:34:33+03:00,"hacking: disable log translations check

In order to stay along with log translation guidelines [1]
N320 check should be disabled.

[1] https://docs.openstack.org/developer/oslo.i18n/guidelines.html#log-translation

Change-Id: If45d8dfe256893194b06d0d1139c907665a0605a"
59d29f7cda8976c2a360b0c844df825a101661ee,2017-04-04 20:35:15+03:00,"Fix TypeError in native of_interface _get_dpid

If no bridge datapath_id was returned for some
reason (like broken deployment), _get_dpid()
would process further and raise TypeError while
trying to use int conversion on an empty list.
This patch addresses the problem by raising a
RuntimeError if no datapath was found for a
bridge.

Closes-Bug: #1615690

Change-Id: Ie97540793e5d2b14120d3f1bafbf659427c44117"
9b31b388a83d6cd1746f5698c811943a08263015,2017-04-04 14:10:41-04:00,"Fix tempest router timestamp test when HA enabled

When run in an HA or DVR configured environment,
the test_show_router_attribute_with_timestamp API
test can fail with an 'updated_at' timestamp mismatch.

The test should check if the timestamp is >= since
post-creation code could update the object.

Closes-bug: #1679794

Change-Id: I3c58af022d1699ab05ca964b6d957dae39cf1ccc"
0476ad641dffb4cdcb6fb72e9dd6579ffc21b754,2017-04-04 16:59:52-04:00,"Print useful error on rootwrap daemon failure

If the rootwrap daemon fails to execute a command, it
generates a cryptic message:

Unserializable message: ('#ERROR', ValueError('I/O operation on closed file',))

We should at least log the command that we were trying
to run, which will help users figure out why it failed.

Change-Id: I2c94e5a226630432028351f8287868f4fe5d2fa1
Closes-bug: #1677742"
c54c5791b43deada9936f0c9c5d8b681a3216893,2017-04-05 09:10:21+00:00,"ovs-agent: Clear in_port=ofport flow earlier

This is the minimum change to pass tempest's
test_update_instance_port_admin_state test. Alternatively, the delete_flows
could be changed to just deal with drop_port flows, which can affect
3rd party codes.

Change-Id: Id15eed5f21bc6842daceb28ee9bc660f20e9b04a
Closes-Bug: #1559920"
0bdc6b980bbd7a48f89ff63c45a2feb880275570,2017-04-05 11:45:13+00:00,"Add sem-ver flag so pbr generates correct version

tl;dr : without this Ocata and Pike have the same version causing
packaging issues.


https://docs.openstack.org/developer/pbr/#version

Because projects don't push a tag before milestone 1 (pike-1 here),
downstream packages are still building packages by using the version
from Ocata and it causes problems to distros because they can't test
the upgrades from Ocata to Pike.

Bumping the semver will allow us to test packages upgrades.
Note: When your version is X.Y.Z, api-break will bump X, and feature
will bump Y. In this patch, we bump X because this is the way you
bump tags over releases.


Change-Id: I7f3549852e984bb32cdaeb7d8a758c18db045b26
Sem-Ver: api-break"
ebc30229c4eec9f7e025371a0a6a08b10f955041,2017-04-05 17:47:33+00:00,"Log messages for keepalived-state-change in syslog

We don't maintain a long standing log file for the helper process, so
any log messages that we issue from inside it just vanish after router
cleanup.
This patch enforces syslog logging for the daemon, revealing any errors
and other messages that may be triggered by it.

Closes-Bug: #1635629
Change-Id: I8712f5f3a34fc9f403dfba06e7a64bd9eb408c4a"
cf97509f2b84cf1deaafa3176e58f7db0e515216,2017-04-05 14:19:57-07:00,"Quota list API returns project_id

Quota list API returns tenant_id with the project's resource quota
but it doesn't return project_id. When neutron supported keystone v3
feature, it was missed[1]. This patch also removes an useless check
from UT.

[1]: https://review.openstack.org/#/c/357977/

APIImpact

Closes-Bug: #1667827
Change-Id: I78f4aa38a0d775e7600afafdd6941ef485f62ade"
61d0082f9ae9f9a935b5c3517c0b9036c40dbb00,2017-04-06 09:36:07+00:00,"Fix SQL fixture to preserve engine facade settings

This adjusts the SqlFixture class to preserve the settings
we configure on the enginefacade transaction factory and
to actually pass our enginefacade into to the
test DatabaseResource we create.

This is necessary for unit tests to be able to use configuration
options we set on the enginefacade like the flush_on_subtransaction
flag added in I71e274d0f0199896f28daae6db71241d9b43a2f3.

Related-Bug: #1664643
Partially-Implements: blueprint enginefacade-switch
Change-Id: Idabc7b6b4174575c89c8010886c2b440de6a8e05"
d28a33a898360ae1c649e07d8bcdf8f2b2e11f1d,2017-04-06 12:30:15-07:00,"Fixed validation of create_and_list_trunk_subports rally scenario

New validation now enforces that times is >= concurrency because times
is total number of *runs*, not the number of concurrent *run sets*.

Change-Id: I454ef821e00bd5123a9640f472ad4b034dbec75e
Closes-Bug: #1680580"
757476983ca0832099f04b9f029617ab270de9fe,2017-04-06 21:51:33+00:00,"execute: don't call greenthread.sleep directly

The module may be used in scope that is not using eventlet (f.e. from
inside neutron-keepalived-state-change), in which case a call to
greenthread.sleep from the main thread will result in AssertionError.

Instead of that, call time.sleep that will redirect to greenthread.sleep
in eventlet environment.

This reflects what we do in oslo.concurrency execute implementation.

Change-Id: Id73c0e5015feca2c559da4a68a70aeaaf5cec2a7
Closes-Bug: #1680183"
9a0907dbb9eaf1dcf7f1ccfc22b0e6e4f775b046,2017-04-06 21:52:19+00:00,"Flush objects by ourselves before processing before_commit event

During commit processing, sqla automatically flushes objects.
However, it does so after dispatching the before_commit event,
while Neutron expects it happens before the event.  This
counter-intuitive behaviour might or might not be considered
a bug in sqla.  Anyway, it's better to be safe in our side.

Closes-Bug: #1678726
Change-Id: Iceaf178be2885b0299d6d281983e9f7f8ae6def0"
08d29e3c90093c508fb8ebc511ca5caca1716379,2017-04-06 21:52:52+00:00,"Tempest: Fixing L3 agent hosting router for DVR setup

The tests for L3 agent hosting routers were failing in DVR setup
because the code was trying to add router to l3 agent when it was
already there.

Closes-bug: #1590049

Change-Id: I0087ad6f6df662579d557ab790de64e04ff22943"
5c286f590f390a25399093afc61cbf4db396fe1c,2017-04-07 13:07:33-07:00,"Ignore gre devices when fetching devices in test_cleanup_stale_devices

They may show up in namespaces depending on kernel modules loaded.

Change-Id: I78892244d17c4ab7421d3eae9bdeeec1e69690bc
Related-Bug: #1604115"
0f7f684b8630fb54f3f29546859d77f0fa5c17f9,2017-04-10 00:41:36-07:00,"Fix some reST field lists in docstrings

Probably the most common format for documenting arguments is reST field
lists [1]. This change updates some docstrings to comply with the field
lists syntax

[1] http://sphinx-doc.org/domains.html#info-field-lists

Change-Id: I783202f2896acd3c2aee5a7408664b3008fa8854"
453e8064a531197ca26b020474049afff40ba969,2017-04-11 09:56:08-05:00,"Exit on failure to load mechanism drivers

By using the on_missing_entrypoints_callback and
on_load_failure_callback options[1] we can call a handler for the
missing driver error properly.

As the bug states, I logged it as a critical failure and terminated
the neutron server.

I used SystemExit, I wasn't sure if there was a more graceful way
of exiting.

[1] http://docs.openstack.org/developer/stevedore/managers.html

Change-Id: Id18afd159d0b0ada0cc36964dd9c1ebe7a1cd94b
Closes-Bug: #1659290"
1346b4a65701aaec667c8a8a2790ffa345e0efad,2017-04-11 16:33:57+00:00,"DVR: Don't clean snat-ns of DVR HA router when fullsync

Since [1], when the l3 agent does fullsync, for every router, it calls
ensure_snat_cleanup depending on whether the agent is dvr_snat or not.
However, DVR+HA routers always have snat namespaces on dvr_snat agents
holding themselves for keepalived. Therefore, the cleanup call is
unexpected and will cause a series of issues.

This patch ensures that snat namespaces of DVR+HA routers will not be
cleaned when the agent do fullsync.

[1] https://review.openstack.org/#/c/326729/

Change-Id: I5df0a1404f1a80ab0b226d7a60c2885e24247e02
Closes-Bug: #1632540"
89de63de05e296af583032cb17a3d76b4b4d6a40,2017-04-11 19:56:13+00:00,"Port data plane status extension implementation

Implements the port data plane status extension. Third parties
can report via Neutron API issues in the underlying data plane
affecting connectivity from/to Neutron ports.

Supported statuses:
  - None: no status being reported; default value
  - ACTIVE: all is up and running
  - DOWN: no traffic can flow from/to the Neutron port

Setting attribute available to admin or any user with specific role
(default role: data_plane_integrator).

ML2 extension driver loaded on request via configuration:

  [ml2]
  extension_drivers = data_plane_status

Related-Bug: #1598081
Related-Bug: #1575146

DocImpact: users can get status of the underlying port data plane;
attribute writable by admin users and users granted the
'data-plane-integrator' role.
APIImpact: port now has data_plane_status attr, set on port update

Implements: blueprint port-data-plane-status

Depends-On: I04eef902b3310f799b1ce7ea44ed7cf77c74da04
Change-Id: Ic9e1e3ed9e3d4b88a4292114f4cb4192ac4b3502"
3162846a7b42d860533df6dc32d9c553669df45b,2017-04-11 15:27:48-07:00,"DVR: Create router to fip namespace connection based on gateway state

In order to route traffic between the internal subnets and the
external subnet that belong to the same address_scopes we need
to create the gateway port and the fip namespace irrespective of
the configured floatingips for the internal subnet.

This will consume an additional IP from the external subnet on
all nodes, but with the introduction of service_type networks,
this will not be an issue any more.

This patch is the first in series that creates the agent gateway
port and the fip namespace on every node when the gateway is set
for the router. For every router created it will connect the
router namespace to the fip namespace.

Partial-Bug: #1577488
DocImpact: Document the change in behavior for fip-agent-gw create
Change-Id: I30c4f7fc250e486fe9a71b68540e783e90a6cf15"
8fad40bd2f945a9c7e9dd446bc5ba0c112730c04,2017-04-12 16:05:35+01:00,"Adding missing neutron policies to policy.json

Currently, Neutron's policy.json does not exhaustively
list all the policy actions within Neutron.

This has some downsides:
  1) It makes it harder to override these policy actions
  2) It is inconsistent
  3) The policy.json should be a ""golden copy"" of all the
     policy actions enforced by the system.
  4) It makes it harder to RBAC test Neutron
     (because it is very difficult to determine which
      policy actions are valid and which are not).

The current policy actions that are enforced by the system
but not contained in the policy.json are as follows:
  - create_security_group
  - delete_security_group
  - delete_security_group_rule
  - get_security_group_rules
  - get_security_groups
  - get_security_group_rule
  - get_security_group
  - update_security_group
  - update_router
  - update_router:external_gateway_info
  - update_router:external_gateway_info:network_id

Closes-Bug: #1676674
Change-Id: I4625c8f55bfa46b1a2209642e425677a47455219"
ec03a576143562f2c917276c6aaeebcecdca5788,2017-04-13 03:15:03-07:00,"Call expire_all in revision tests before re-use

After the merge of Ia15c63f94d2c67791da3b65546e59f6929c8c685, delete
port occurs in a separate session. So when an interface is deleted
from a router, the router object that gets a revision bump is in a
separate sqlalchemy session.

This means that if the router object is loaded in a parent session,
it will not see the updated revision number. This is fine for the normal
code path since we don't return the revision number of the router after
the port removal in the API. However, in the unit tests we keep re-using
the same session for all of the operations so we can get a stale router
in a get_router call after an interface removal if the router SQLA object
is still in the identity map of the session.

The transience of this failure was due to the fact that a stale read
would only occur if the router SQLA object hadn't been garbage collected.

This fix alters the unit tests to call expire_all() on the session being
used whenver it is referenced if it's not in an active transaction.

Change-Id: I5ba5c5773b85ed9a710e69d7e2f596f760b43fd3
Closes-Bug: #1679815"
604e598a7d43b8b3a260969de84af737a4988c4e,2017-04-13 03:36:37-07:00,"Allow offloading lookups in driver contexts

This allows segments looked up ahead of time to be passed
into NetworkContext objects and NetworkContext objects to
be passed into PortContext objects. This allows us to avoid
doing segments lookups for every PortContext construction
when handling a bunch of ports (e.g. in RPC handler).

Change-Id: Ib4c43a7894fe1285ecf4bdf9af5e5f1b93b0b39b
Partial-Bug: #1665215"
323eb7f2e146ecc2f7c25d59e57d1e1e006cb71f,2017-04-13 03:36:37-07:00,"Add some bulk lookup methods to ML2 for RPC handling

This adds three methods to make working with bulk port
DB lookups easier in ML2:

* partial_port_ids_to_full_ids: takes short port IDs map to
  full port IDs. This will allow us to eliminate many LIKE
  queries and do one just once for all ports on an RPC call.
* get_port_db_objects: Takes a list of port IDs and returns
  a map to port DB objects. This allows us to get access to
  sqla obejcts for a bunch of ports without a custom
  session.query call.
* get_network_contexts: Takes a list of network_ids and does
  a bulk construction of NetworkContext objects and returns
  them as a map of network_id to NetworkContext to avoid
  expensive net lookups when constructing lots of PortContext
  objects.

Partial-Bug: #1665215
Change-Id: I330eefbf429bd62f2a7e8ebadf7037da15c86815"
27d18ac5c5205604243ef50305e1ba40979551ca,2017-04-13 08:06:39-07:00,"Don't override default values for oslo.db options

This change will make neutron-server use default values from oslo.db if
any of them are not overridden in config files, instead of applying its
own unique values that may be unexpected to users and operators.

It also makes our config files correct since now we don't claim wrong
values being default. (Remember the config generator was never aware of
our snowflake behaviour.)

If you wonder why we were overriding it in the first place, it was
needed back in the times when we were using db module from
oslo-incubator that has not provided proper defaults. Those times are
long gone.

Of course the change is not impact free, and operators who for some
reason want to keep the old values may need to adjust their
configuration files. Still, I believe using default values from oslo.db
is the correct thing to do long term.

We still need to set connection string for unit tests to sqlite:// since
oslo.db doesn't provide any default value for the option. It should be
fine to effectively unset default value for the option for
neutron-server since no one in production can use sqlite anyway.

This change also drops set_db_defaults function from
neutron.common.config. I have checked that there are no consumers for
the function outside the tree.

NeutronLibImpact
UpgradeImpact

Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Change-Id: Ia97d6cf24e554f7b3878dd301ae4e7e10a1c9998
Closes-Bug: #1682307"
2b7c6b2e987466973d983902eded6aff7f764830,2017-04-13 15:30:09+00:00,"Pass MTU and AZ into network_create_precommit

The values of MTU and AZ aren't passed to network_create_precommit.
Call network_create_precommit after updating those parameters.

Co-Authored-By: Manjeet Singh Bhatia <manjeet.s.bhatia@intel.com>
Change-Id: If966a4158db727091bf2bcc6ba4d48fa9294a96c
Closes-Bug: #1675891"
b0aa83aca39bc268e2ad82019ac16c4e9499662e,2017-04-13 12:46:28-05:00,"Add string validation on security group's name

This patch disallows cases that following name is specified.
   1. name whose type is not String.
   2. name whose characters is more than 255.

Change-Id: Ib72a4e480b62a22da2171ed24449321f2b27258b
Closes-Bug: #1610764"
c7acad2a0800e032600b074ca48119c4a3f90a10,2017-04-13 14:34:35-07:00,"Record queries for helpful failure msg in bounds test

This will let us actually see what extra queries are being
executed.

Change-Id: I1410ded27f817a95d090a4c18e40d13e69a26768
Related-Bug: #1679775"
91c15edf54c07da77ecf4fc335b0ba3951ff1f90,2017-04-13 15:02:35-07:00,"Ignore gre devices in namespaces when cleaning up devices

Agents and netns_cleanup tool attempt to clean up devices from
namespaces before destroying namespaces, but they should skip doing it
for gre devices that are automatic and show up depending on kernel
modules loaded.

Change-Id: Ie95890ed92ac73ec8e2d118a9727b9e1624a5178
Related-Bug: #1604115"
1ae91ce9be56fd6952d53ce3f8b094a6958b2709,2017-04-13 15:03:06-07:00,"ip_lib: ignore gre and lo devices in get_devices by default

This is the most common use pattern for the method, so it makes sense to
make it default.

(Actually, it may be that there are no usage for the arguments
whatsoever, but better safe than sorry.)

NeutronLibImpact this change potentially breaks callers of get_devices
that may want to get the automatic devices by default. Those imaginary
callers may need to set exclude_gre_devices and/or exclude_loopback to
True from now on.

Change-Id: Ic32b8abc7f8502b8907ae21c996e13cb8fd5401d
Related-Bug: #1604115"
67f39774546d3edddbccfa226a823a8a292f5a2d,2017-04-14 15:34:27-07:00,"Use registry.receives decorator in neutron.db.l3_db

Switch to registry.receives decorator in neutron.db.l3_db.

Partial-Bug: #1668262
Change-Id: Ia8ac4f510c003667cac95f76dea0e9ae55159878"
f96b5439de459b6d437235a0ecb259cda2e1c81d,2017-04-14 23:13:35+00:00,"Allow self-sharing RBAC rules to be deleted without usage check

This patch allows the update and deletion of network
'access_as_shared' rule whose target tenant-id is the network owner
without checking for network usage.

Change-Id: I34d627da869f68c02e1abc4a19246698766d66e4
Closes-bug: #1517702"
864a8a7ce8edf15f3aedddc881f75cfa9d425e38,2017-04-14 17:25:27-07:00,"Handle CIDR IP address in allowed address pairs

A CIDR IP address in allowed address pairs causing init
and update operation failures on OFPort.
This is because those operations are not handling CIDR IP addresses.

This patch fixes that problem.

Change-Id: Ic4513859364403555e13593fb34bd2e58ea6377b
Closes-Bug: #1652729"
3889b0f214fbb1d32531395cff232cf57daf7b17,2017-04-14 17:46:25-07:00,"Dont try to apply iptables rules in a endless loop

If the namespace does not exist the current behavior
is to try to apply the iptables rules forever in a
endless loop. This fills up the logs on the network
node and leads to outage.

Change-Id: I628b18a66f9478d7349fa1817431aae2f62ee105
Related-bug: #1623664
Related-bug: #1573073"
02c16a0e603b6e75cca64df21dd86d9c30e4a6f6,2017-04-15 01:24:49+00:00,"Reduce rpc calls in SR-IOV agent

Use one update_port_list rpc call instead of
update_port_up/update_port_down for each device separately.

Closes-Bug: #1682979
Change-Id: I0a367712ff9410c2376b5b70c76806391bed3707"
2665f968575edef56b3b8b6189f48a89a7a6e646,2017-04-15 16:58:51-07:00,"Check permutations of router migrations

This patch adds tests to check all possible router migrations, from and
to: legacy, dvr, ha and dvr+ha.

The tests are divided into different classes so as to not reach the
quota (tempest resources are cleaned up as part of the tearDownClass).

Related-Bug: #1654991
Depends-On: I4e08a97158dc4538c6f021c049c6e60fb7293459
Change-Id: I5b9fc4a81a1e6d59102c016e716000e68aaf4e0a"
ac8348853b23f890f5abf46cbbd1a3a7ca8e799e,2017-04-15 20:39:48-07:00,"Implement '-F' option for 'net-ip-availability-*' command respond

In respond to 'net-ip-availability-list' and 'net-ip-availability-show'
commands, follow the '-F' or '--field' option when present

Change-Id: I688d77167a401aa07771fee5a46323c416a546ee
Closes-Bug: #1586908"
7f513e547cb0fd0d5c23924d264fd53cdc6141ce,2017-04-16 17:19:49-05:00,"Add IPAllocations to the port fixed_ips

Since the IPAM is currently inserting the IPAllocation objects directly
into the DB, the make_port_dict method triggers queries to the DB when
the fixed_ips relationship is accessed, which negatively affects the
performance of Neutron.

This patchset changes this behavior, by appending IPAllocations to the
port's fixed_ips relationship. This change will facilitate the
implementation of enginefacade

Change-Id: Ib32509d974c8654131112234bcf19d6eae8f7cca
Closes-Bug: #1676235"
da8d5b4770fc86392e953de01b7250506c032500,2017-04-16 17:44:31-07:00,"Allow to disable DVR api extension loading

A lot of clouds using the router service plugin don't configure for DVR,
but the service plugin still loads the extension, and exposes it via
API. Which will break if api consumers (admins with default policy.json)
attempt to create new style routers based on the information passed
through /extensions/ api.

This change introduces a new config option that allows to avoid loading
the extension. For complatibility sake, it requires an opt-in from ops
side to disable it, otherwise the extension is still loaded as before.

This is helpful for automation matters. It may also be useful when
preparing tempest.conf api_extensions=, when you could actually pass the
result of /extensions/ request into tempest and expect the test suite to
pass without yanking dvr off the list for non-dvr setups.

We could go further and try to check if the controller is configured
properly. That is complicated by the fact that f.e. such validation may
require talking to ml2 drivers, or even agents, which is not feasible
during api startup.

Change-Id: I84be9be93862fe71a2d5b5322d7ebd476c784163
Related-Bug: #1450067"
429703a9a8781c38c709551a3cfed35ca3d2c574,2017-04-17 02:07:27+00:00,"Expose neutron api application as a wsgi script

This can then be loaded into a wsgi compatible web server like
apache2/httpd or nginx.

DocImpact A new neutron-api script is installed, and can be used to
start either a standalone wsgi server (calling the script directly),
or as a wsgi script loaded by a web server (e.g. by httpd/mod_wsgi).

Change-Id: Ie9bb8b33f6e1335219e574d832ac264b043d90e6
Partial-Bug: #1666779
Co-Authored-By: Brandon Logan <brandon.logan@rackspace.com>
Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>"
d2976d46d0c03399c94d892bdcf6955bff8bf523,2017-04-17 14:08:47+08:00,"Replace six.iteritems with dict.items(Part-1)

according to https://wiki.openstack.org/wiki/Python3,
now we should avoid using six.iteritems and replace
it with dict.items.

Change-Id: I8753e80b34c0f86cf70aebc3bcbd3392ee933f62
Partial-Bug: #1680761"
d5556a5e4eae3e638c4006987c7a334056b700f4,2017-04-17 06:17:30+00:00,"Floating IP association without subnet gateway IP

Neutron throws an exception when we try to attach the floating ip
to the instances that are launched in a network whose subnet is
connected to the external router by an Ip address otherthan its
gateway-ip. Now the neutron will execute the request with no
exception/warning.

Closes-Bug: #1515990

Change-Id: If212c36d918ed57400a53f4b5fa1925b3d1fa6fd"
25ce9c1c88ff4dd15a688a829679f8e1854b74bc,2017-04-17 18:38:42-07:00,"tests: allow database layer to generate id for standard attributes

Otherwise we risk a clash between multiple standard attribute records
created during a test run.

Change-Id: I965c6f9117a82aa8da20118c7b36a6dec32ac44b
Closes-Bug: #1683369"
46bc515f82983c510dc4fb014c18e27813ce4d65,2017-04-18 02:06:41+00:00,"Don't load rels on detached objects

OVO detaches DB objects from the session and then holds onto
them for the life time of the OVO object. Simultaneously we attach
a weakref to the object to the session to load relationships for it
on commit.

If GC hasn't eliminated this object by the time we try to load
relationships, we end up trying to load rels for a detached object,
which implicitly tries to add it back into the session. This fails
if there is another copy in the session.

This patch just skips loading detached objects because we don't need
relationships loaded for them anyway.

Closes-Bug: #1683469
Change-Id: Ida3272562edb6608c6bfd7e11267159d6565a0c7"
9c4395965158e066becdb84cf30ea5f0e63e7cbc,2017-04-18 01:27:37-07:00,"Stop loading OVOServerRpcInterface in ML2 testcase

This RPC notifier has an asynchronous handler that does DB lookups
to send notifications after an object has been created. Not only
is this a waste of resources in unit tests, it interferes with tests
that are inspecting the DB queries that occur between calls.

This just blocks the OVOServerRpcInterface in the ML2 test case and
then enables it for the set of unit tests that needs it.

Change-Id: I807e2445da9be241c24d8b6e5bda8b12927aa7fc
Closes-Bug: #1679775"
27746d1d16ceec59ca6576d565e5e4157427fa96,2017-04-18 09:45:38+01:00,"Update auto-addresses on MAC change

On MAC update add an entry for auto-addressed IPs so
that they get removed and re-allocated.

Also Fix the unit test that was testing for this, so that
it checks the IP for the new updated port (it was checking
the port before the update).

Change-Id: I0a83efa7b8dfa1f6979566846195fb349547018a
Closes-Bug: #1671548"
574312165b4c2c3ab7aec08a066677d11f477bc5,2017-04-18 18:56:46+08:00,"Replace six.iteritems with dict.items(Part-2)

according to https://wiki.openstack.org/wiki/Python3, now we should avoid
using six.iteritems and replace it with dict.items.

Change-Id: I58a399baa2275f280acc0e6d649f81838648ce5c
Closes-Bug: #1680761"
36893a55bd4c3261896f0775556c515029189efd,2017-04-18 11:06:04-04:00,"Add devref for supporting use floatingip cross scopes

[1] has been merged for supporting use floating IP to cross scopes.
The devref should be updated for it, due to the discussion in [1].

[1] https://review.openstack.org/#/c/283134/

Change-Id: I5c330ba5d5446ec985b628d8bc3b37d65fa7d53d
Related-Bug: #1543885"
8bb94820bd1d95414047ae52165411fe818a8d0e,2017-04-18 13:38:35-04:00,"Remove deprecated send_arp_for_ha option

Now Neutron always sends three gARPs after address assigned to an
interface.

Change-Id: I0d44f4cc59e1675b20d0da329faf7fd3ab91acbf
Closes-Bug: #1639879"
84d2d027625e15fdd5cc887c2c8b810e994b7a30,2017-04-18 11:59:56-07:00,"Ensure behavior of None for device_id

A simple unit test to ensure that we have had the same behavior
across releases WRT to explicitly passing None for device_id.

Change-Id: I153f3e1b4258f33c5fa3f16cc30a411052670b30
Related-Bug: #1681784"
59589929e59f4b8c147bd90240ae6fabeb2671ac,2017-04-18 18:25:51-07:00,"Use NETWORK callbacks in get-me-a-network code

This adjusts the get-me-a-network code to just
rely on the regular NETWORK precommit events rather
than the EXTERNAL_NETWORK events that the following
patch eliminates.

Partial-Bug: #1678041
Change-Id: Id2db458f4688e4aa4c70ccdb09867b9a66de28ea"
0376d2f6adada320554f247e4c67e15243d01d74,2017-04-19 05:58:57+00:00,"Make QoS policy object compatible with versions 1.2 and higher

For version 1.2 or higher of QoS policy object it can contain
QoSMinumumBandwidtLimit rules and appending of such rule type
was missing in make_obj_compatible function.
Now such rules are appended to QoS policy.

Change-Id: I40d699db58c34e83272432376d1d59679a680db2
Closes-Bug: #1681440"
37097a991b837b5508b4eb85649854a6c07cc280,2017-04-19 08:27:23+00:00,"Revert ""Update auto-addresses on MAC change""

Original patch caused ironic CI regression.

This reverts commit 27746d1d16ceec59ca6576d565e5e4157427fa96.

Closes-Bug: #1684038

Change-Id: I29afcfac626f4947ad4db288185208c2c5c2b7a1"
df320474c5d07ecba0f0ac5cd73a6d5be66dc0a2,2017-04-20 06:06:16+00:00,"Set MTU on tap devices in Linux Bridge agent

Libvirt does not set the MTU of the tap device it creates when creating
a bridge interface. It also does not set the MTU of the bridge itself.
This cannot be fixed on the Nova side since libvirt doesn't appear to
have support for setting MTUs on bridges until version 3x.

This results in a situation where the first VM tap interface attached to
a bridge will always have an MTU of 1500. The Neutron agent will then
add in VLAN/VXLAN interfaces with the correct MTU; however, the bridge
MTU will still be pinned to the smallest interface MTU attached to it.
This breaks jumbo frames until all small MTU tap devices are removed
from the bridge.

This patch explicitly sets the MTU on tap devices to match the network
MTU when processing the device.

We will have to carry this workaround until we stop Nova from
plugging taps into bridges[1] or until we drop support for older
libvirts on the Nova side and have it set the MTU.

This bug was introduced by change
I53c0eb57da956b36f09731d25db989719e9bc9dc which reverted automatic
setting of tap MTUs to match those of the physical device.

1. I23c5faaeab69aede1fd038a36f4a0b8f928498ce
Closes-Bug: #1684038
Change-Id: Ia245a3e22339fce026901e24a82e836c8b27cc28"
47fdee443680c04a85d741a2f7efd31df4bfcff5,2017-04-20 00:46:09-07:00,"Fixup event transaction semantics for ML2 bulk ops

This splits out code in ML2 for ports, subnets, and networks
into clear before, during, and after functions corresponding
to the state of the transaction they are called within.
This allows the bulk creation to correctly call chunks of code
outside of DB transactions even when doing many creations at once.

Change-Id: Id6fe0f5066358be954a6ca14dd49c36755897e31
Closes-Bug: #1683550"
529da4e583aefe7640d8559987282f223f3ad06b,2017-04-20 02:44:05-07:00,"Bulk up port context retrieval

With the switch to subquery relationships, individual get_port calls
can get expensive with large numbers of ports
(100ms per port in my dev environment). This patch bulks up the
retrieval of the port contexts so one set of queries covers all
of the devices in an RPC call.

Partial-Bug: #1665215
Change-Id: I63757e143b23c24c349be98dc5a09115b8709a25"
cc59e9f159ace557a61586e1df3f4d0b6054ed2f,2017-04-20 02:55:57-07:00,"Remove EXTERNAL_NETWORK callbacks

external networks are not really independent resources that
have their own lifecycles independent from networks. The only
use cases for this callback can be achieved with just regular
NETWORK callbacks.

The only users of this event have been adjusted to use NETWORK
callbacks (according to codesearch.openstack.org).

Closes-Bug: #1678041
Change-Id: Ie8249ddc3de643bfcb5c97480f30dc3500699256"
e6333593ae6005c4b0d73d9dfda5eb47f40dd8da,2017-04-20 20:13:48-05:00,"Use the ovsdbapp library

This patch uses the ovsdbapp Python library, which is the new
project based on the Neutron OVSDB API.

The CLI implementation of the OVSDB API remains in the Neutron
tree.

Neutron continues providing the (deprecated) ability to allow
the OVSDB API to be imported from Neutron.

The deleted tests exist in the ovsdbapp project. More will be
moved later, but many of the tests in the Neutron tree use
ovs_lib, which doesn't exist in ovsdbapp so those tests will
probably stay in the Neutron tree.

Closes-Bug: #1684277
Depends-On: I3d3535b1d6fe37c78a9399903b65bbd688b1c4b9
Change-Id: Ic8c7db0e80d0ad104242322d3f1f70cab8caab92"
192bc5f1a8781111b6b0c2211f4421fafacb27c7,2017-04-21 11:40:58+09:00,"Use conjunction for security group rules with remote_group_id

Prior to this commit, the number of flows can be prohibitively large
in some cases.

Closes-bug: #1628819
Change-Id: I194e7f40db840d29af317ddc2e342a1409000151"
2448df86516c2a4246eed9cd4e59a2d75e4d96e0,2017-04-21 09:26:46+00:00,"Fullstack: enable DHCP agent

With the merge of I8111469ad4b0d88580bff7a77492ad95af8e9377,
ports will not transition to the ACTIVE status on a subnet
that has DHCP enabled that does not clear the DHCP provisioning
block. So if we don't deploy a DHCP agent for these tests,
the ports will not transition to ACTIVE.

This fixes the fullstack tests by adding DHCP agents
to clear the provisioning block.

Co-Authored-By: Jakub Libosvar <libosvar@redhat.com>
Closes-bug: #1677729
Change-Id: I66c5e4ead23f0e6bd4b9e867c8cf419f67f6d78c"
0193777e60216844019963f785cd28ca205c42a4,2017-04-21 18:15:24-05:00,"[Pecan] Fix custom tenant_id project_id matching

This patch fixes the missing custom tenant_id and project_id
matching on policy_enforcement.py

Change-Id: I278759f6b65cce7caa4f66fa694488b75f0459b6
Closes-Bug: #1674517"
a15c84956366456683cd7e5227c5e244e15c3e6e,2017-04-22 15:23:59+08:00,"ProcessManager: honor run_as_root when stopping process

Without this commit, the run_as_root parameter is always True when
stopping a process, which leads to the usage of unnecessary sudo such as
in some functional tests, like the keepalived ones.

This commit fixes the aforemetioned problem by taking run_as_root into
account when stopping a process. However, run_as_root will still always
be True if the process is spawned in a netns.

Closes-Bug: #1491581

Change-Id: Ib40e1e3357b9a38e760f4e552bf615cdfd54ee5a
Signed-off-by: Hunt Xu <mhuntxu@gmail.com>"
233a68d27c0225bd461795c4418a9fed2fe11346,2017-04-22 20:24:15-07:00,"Prevent regression of IP loss on MAC update

This adjusts the UTs to ensure MAC address updates
don't wipe out the original fixed IPs on a port if the
IPs weren't part of the update.

Change-Id: Ibd9ec8ece6678c837027b59c1154db872270e7be
Related-Bug: #1684038"
d79798389e97317a961e86b20ec47c3053f27060,2017-04-24 14:43:38-06:00,"remove and shim callbacks

The callback modules have been available in neutron-lib since commit [1]
and are ready for consumption.

As the callback registry is implemented with a singleton manager
instance, sync complications can arise ensuring all consumers switch to
lib's implementation at the same time. Therefore this consumption has
been broken down:
1) Shim neutron's callbacks using lib's callback system and remove
existing neutron internals related to callbacks (devref, UTs, etc.).
2) Switch all neutron's callback imports over to neutron-lib's.
3) Have all sub-projects using callbacks move their imports over to use
neutron-lib's callbacks implementation.
4) Remove the callback shims in neutron-lib once sub-projects are moved
over to lib's callbacks.
5) Follow-on patches moving our existing uses of callbacks to the new
event payload model provided by neutron-lib.callback.events

This patch implements #1 from above, shimming neutron's callbacks and
removing devref + UTs. Rather than shimming using debtcollector, this
patch leaves callback constants as-is, and simply references the lib
class/function in its respective neutron callback module. This allows
consumers to test callback types without changing code. For example,
an except block block like that below continues to work even though
the raised exception now lives in lib::

try:
     neutron_cb_registry.notify(...)
except neutron_cb_exceptions.CallbackFailure:
     handle_exception()

In addition this patch contains minor UT updates to support the shim
approach.

NeutronLibImpact

[1] fea8bb64ba7ff52632c2bd3e3298eaedf623ee4f

Change-Id: Ib6baee2aaeb044aaba42a97b35900d75dd43021f"
723169245978db29fdd42af18d5958e76c23a0fe,2017-04-25 17:58:30-04:00,"Only add ""on-link"" routes for L2 adjacent subnets

When multiple subnets exist on a single network, the
DHCP agent adds on-link routes for all of them since
they are in the same L2 network.  If either subnet
has a segment_id it can only be considered as on-link
if they match, else we should not include a subnet
route.

These extra routes are optional anyways according to
RFC 3442, but were added for the use case when all of
the subnets are considered adjacent, which allows
instances to bypass the router and communicate directly.

Closes-Bug: #1668145
Change-Id: Iae889e9226a61059cd4f3d37fbe48d013b7a3482
Implements: blueprint tripleo-routed-networks-deployment"
46d1a890e700dfa6e921387569f87f793ca4e8e9,2017-04-26 11:31:20+01:00,"Update auto-addresses on MAC change

On MAC update add an entry for auto-addressed IPs so
that they get removed and re-allocated.

Also add a check to ensure the length of fixed_ips in the result
is what was expected i.e. ensure we replaced the IP's(as is the current
behaviour) and not just added to the list.

Change-Id: Id1eadce7a18ba82d6c1a42f1afb0267f076f9308
Closes-Bug: #1671548"
0e2b667bf1685f569f843a036eebdaf79624184d,2017-04-26 12:12:53-06:00,"use neutron-lib callbacks

The callback modules have been available in neutron-lib since commit [1]
and are ready for consumption.

As the callback registry is implemented with a singleton manager
instance, sync complications can arise ensuring all consumers switch to
lib's implementation at the same time. Therefore this consumption has
been broken down:
1) Shim neutron's callbacks using lib's callback system and remove
existing neutron internals related to callbacks (devref, UTs, etc.).
2) Switch all neutron's callback imports over to neutron-lib's.
3) Have all sub-projects using callbacks move their imports over to use
neutron-lib's callbacks implementation.
4) Remove the callback shims in neutron-lib once sub-projects are moved
over to lib's callbacks.
5) Follow-on patches moving our existing uses of callbacks to the new
event payload model provided by neutron-lib.callback.events

This patch implements #2 from above, moving all neutron's callback
imports to use neutron-lib's callbacks.

There are also a few places in the UT code that still patch callbacks,
we can address those in step #4 which may need [2].

NeutronLibImpact

[1] fea8bb64ba7ff52632c2bd3e3298eaedf623ee4f
[2] I9966c90e3f90552b41ed84a68b19f3e540426432

Change-Id: I8dae56f0f5c009bdf3e8ebfa1b360756216ab886"
98373690b271cfd0fa0b30083544484deb49a34b,2017-04-27 14:07:45+09:00,"l3_db: Fix a regression in the recent CommonDbMixin change

The recently merged change [1] modified the logic in the way
to break deployments without dns-integration.  It broke
networking-midonet gate jobs.

[1] If1252c42c49cd59dba7ec7c02c9b887fdc169f51

Closes-Bug: #1686584
Change-Id: I80696fa1227d1d36ae67d8f2b70e4206c4cdcd70"
c29f3aaa7c20c89cb1eac818d2981c16fd484ace,2017-04-27 12:51:50+00:00,"Add QoS bandwidth limit for instance ingress traffic

This patch introduces the new parameter ""direction"" to
the QoS bandwidth limit rule. It will allow the creation
of bandwidth limit rules for either ingress or egress
traffic. For backwards compatibility the default direction
will be egress.

DocImpact: Ingress bandwidth limit available for QoS
APIImpact: New type of parameter for QoS rule in neutron API

Change-Id: Ia13568879c2b6f80fb190ccafe7e19ca05b0c6a8
Partial-Bug: #1560961"
fb2093c3655ecd15f48e841c0fc6f9ccb7697a34,2017-04-27 11:56:51-07:00,"DVR: Add forwarding routes based on address_scopes

When we create agent gateway port on all the nodes irrespective
of the floatingips we can basically use that agent gateway port to
forward traffic in and out of the nodes if the address_scopes match,
since we don't need SNAT functionality if address scopes match.

If a gateway is configured and if it has internal ports that belong
to the same address_scopes then no need to add the redirect rules.
At the same we should also add a static route in the fip namespace
for every interface that is connected to the router that belongs to
the same address scope.

Change-Id: Iaf6d3b38b1fb45772cf0b88706586c057ddb0230
Closes-Bug: #1577488"
99d0ff92e878b60fa4e58d2542642326e20bfb5e,2017-05-02 06:23:51+03:00,"Utils: make delete_port_on_error more informative

When under load the port may have been deleted by another process.
Here we will log the port that was not found. This will help
debug.

Change-Id: I2556c54584c84cbdb777a4fa366b18a9195b60c5
Closes-bug: #1694389"
984ab8c87a32670871879a1f2db7de986ad661e9,2017-05-02 09:41:11-07:00,"tempest: Obey identity_feature_enabled.api_v2_admin in a few tests

Skip tests when the endpoint is not available, which is the case in gate
after [1]. We'll enable them back once we adopt them to v3.

[1] Ic233f6b43dd1e3cfdadff0f18aba4ea78825a996

Related-Bug: #1687544
Change-Id: I8fffc50fd45e43f34ca591416924bcf29626b21f"
2e8e6b8395ae0f7a48c6742b7f5a8989867fba2b,2017-05-02 16:46:36+00:00,"Fix tempest router migration test when HA enabled

When run in an HA or DVR configured environment,
the test_update_router_extra_attributes_bumps_revision
API test can fail if the release does not support
router migration from CVR-HA to DVR.

Although Ocata and later releases support any type of
router migration, older ones do not, so the test
should be explicit and test a known valid migration.

Change-Id: I8caf86817a5cd8e4d0cf05d7beef850756e84bab
Related-bug: #1679794"
ac527e242938af280fc26b11b572767177837add,2017-05-02 16:49:51+00:00,"Clean MissingAuthPlugin from unit tests

In the unit test logs there is a MissingAuthPlugin exception
printed several times.

This patch aims to mock the notifier when it's not being tested.
When it is being tested, like in the NovaSegmentNotifierTestCase,
mocking the keystone auth prevents the exception from being
thrown.

Closes-Bug: #1683606
Change-Id: I63a1c887f6a7a43f2bddd48b86078e5836cbf438"
3299cdffae5cd7196a1676da103da5e2e413ec21,2017-05-03 17:14:29+00:00,"Change list of available qos rules

This patch changes way how neutron calculates which QoS rules
are available to use. It now returns all rule types which are
supported by at least one loaded QoS driver.
If user will want to apply policy with rule unsupported by driver
used by port then it will be catched on port/network update event.
This validation mechanism was introduced in
I75bd18b3a1875daa5639dd141fb7bbd6e1c54118

DocImpact: list of returned available QoS rule types is changed

Change-Id: Ia00d349625db358ab486802fc0ff2e69eaa3895e
Closes-Bug: #1686898"
d605967c975e1ebd90d430061a7530510d0dd5f2,2017-05-03 20:39:52+00:00,"Fix error getting segment_id in linux DHCP driver

A recent change [1] added code to the linux DHCP driver
to check the subnet segment_id attribute when adding
extra host routes for a subnet.  I have seen both
KeyError and AttributeError failures in various check
jobs lately since there is no guarantee all subnets
have this attribute.  Be safer by using getattr().

[1] https://review.openstack.org/#/c/438171/

Related-bug: #1668154

Change-Id: I96bea4edab4c96f2ca28ba854f6ca8d4ab4df5f5"
b12b6deb33aebee53b32aae532f42170c3c084c3,2017-05-04 09:09:25+00:00,"Add the parameter sub-resource-ID to the test show/update resource function.

It is sometimes necessary to show/update sub-resources, such as QoS policy rules:
https://developer.openstack.org/api-ref/networking/v2/#update-bandwidth-limit-rule.
So you need to specify a sub resource ID in the GET/PUT URL.

Change-Id: Id7cb72e40fbb2b3685dde584ff85003187a0d4eb"
0d3594bbbc45d9ad585a07e5a1e85703c8175a91,2017-05-05 16:49:58+07:00,"Remove deprecated eventlet TimeoutError exception

Eventlet now deprecate TimeoutError exception [1].
Updating eventlet to latest 0.21.0 can cause UT fail because
of misunderstood between deprecated exception and the new exception class
Timeout. [2]

This patch remove deprecated exception usage, fix the UT failure with eventlet
0.21.0 in order to upgrade eventlet upper-constraint to latest version.

[1]. https://github.com/eventlet/eventlet/blob/master/eventlet/__init__.py#L55
[2]. https://review.openstack.org/#/c/460424/

Change-Id: I48179953ef19ec6b2f3f6706337a1dae1b3830bd"
ff48a5eb38e921721eef1dcf2f19382e7d70662f,2017-05-05 13:01:30+00:00,"Revert ""Fix tempest router migration test when HA enabled""

This reverts commit 2e8e6b8395ae0f7a48c6742b7f5a8989867fba2b.

Change-Id: I43d2a58a53071a9ec48785057f8d2655a1c55255
Closes-Bug: #1688548"
52ed8468a4583453951cf584e9bd1f30a212b29e,2017-05-05 11:32:07-04:00,"Fix tempest router migration test when HA enabled, v2

When run in an HA or DVR configured environment,
the test_update_router_extra_attributes_bumps_revision
API test can fail if the release does not support
router migration from CVR-HA to DVR.

Although Ocata and later releases support any type of
router migration, older ones do not, so the test
should be explicit and test a known valid migration.

Added missing l3-ha extension requirement from v1.

Change-Id: Ic48d078542492e933f71d24df85c54c53a0b110c
Related-bug: #1679794"
507cdde679613e85b54e3d86c6ae50a73e28e494,2017-05-05 19:59:37+00:00,"Fix: set IPv6 forwarding when there's an IPv6 gw

Currently when there is an IPv6 gateway set, IPv6 forwarding
configuration is skipped. This patch fixes it and also adds test
coverage to check the values of `accept_ra` and `forwarding` with
and without an IPv6 gateway.

Related-bug: #1667756

Change-Id: I0297aa6d0afeb56a8c69be41424d4b70509377d2"
26920b8712859ab3c44641ff33ca7f0ecfc45bc2,2017-05-08 14:01:43+09:00,"test_dhcp: Use a safer host name

We use ""foo_host"" as a hostname in a test.
Usually ""_"" is not allowed in a hostname. (See RFC 952 etc)
Oslo.config (correctly) complains on that.

Closes-Bug: #1689019
Change-Id: Ife817d4f9f904ab1cecb1d8501b94069d5468bdf"
8528ea2b0e45379ce29ba6e1cfe17c5ae4197592,2017-05-08 19:02:11+09:00,"Disable QoS scenario tests differently

The test was disabled due to some issues in the reference implementation.
CIs for other implementations might not want to disable it.

Closes-Bug: #1689238
Related-Bug: #1662109
Change-Id: I36357e2ef967db3a73c2341903cd18f5109a006b"
22b3e36010a53736c854aa67915283058bdfcba1,2017-05-08 09:00:11-04:00,"service: add callback AFTER_SPAWN

Add callback (PRCESS, AFTER_SPAWN) to do housekeeping task.
ML2 driver(in fact, networking-odl) wants to run house keeping task
which needs to run only in api server.

The following is very netwokring-odl specific as FYI:
The task is to run a timer which is extended when rest requests are
handled. The timer is fired to kick journal thread only when rest
request is idle in order to check if there is journal entries that was
created by other neutron servers that crash before processing them.
Such timer isn't needed for each workers. Only single timer among api
worker and rpc workers is enough.

cf https://review.openstack.org/#/c/461620/
The current approach is to run timer unconditionally for all processes
and stop it if it's worker process. With this patch, the timer can be
simply run for main process(api worker).

Change-Id: I9c07bc528c3a2fade0c835797889fc169f9bd1a6"
a429678b218ea45c32d166cd41d0665132abaebd,2017-05-09 04:55:04+00:00,"ovsfw: followup cleanups for the conjunction patch

This is trivial cleanups for commit 192bc5f.  No functional changes.

Change-Id: Iafd3d8fbd738737ced7709e84a7a31eb987bf13f
Related-bug: #1628819"
0a4596aa203a74c99f64f3c53e7945894ffdcdd3,2017-05-10 12:37:38+03:00,"Adds an option to skip ports on ovs_cleanup

In some cases we would want to refrain from cleaning up specific
openvswitch ports.

In Octavia, the health manager service is using a predefined[1]
openvswitch port which will gets nuked by the ovs_cleanup script in the
boot process.

That port is created by the operating system NIC configuration file
(by using OVS_EXTRA[2]), but due to the order of actions in the boot
process, the ovs_cleanup script gets invoked by systemd only at a later
stage. As a result the port will be deleted each time and the Octavia
health manager service will fail to bind.

This patch takes advantage of the 'external_ids' column that already
exists for ovs ports, in order to filter out ports we would like to
skip. We filter those ports by adding 'skip_cleanup' to the
'external_ids' column.

It is important to note that this will work if we append the following
to the port: -- set Interface o-hm0 external_ids:skip_cleanup=true""

Related-Bug: #1685223

[1] http://git.openstack.org/cgit/openstack/octavia/tree/devstack/plugin.sh?h=stable/ocata#n190
[2] https://github.com/osrg/openvswitch/blob/master/rhel/README.RHEL#L102

Change-Id: If483d0ee027596999370ab0d21b1743d4ef16acb"
b971ac799f632e1f2652adb2191c76fc29f271dc,2017-05-15 22:37:25+08:00,"Add tempest test for l3-ha extension

Add missing l3-ha extension under neutron tempest tests.

Change-Id: Ia608d3f5d63a88eefa4e61da6df2f3656c8446a0
Closes-Bug: #1684065"
8595a017028450ba1c5f7cd0da4e6a9bd624666e,2017-05-15 23:24:59+08:00,"Add missing unit test for segment db

This patch add test for get_dynamic_segment.

Change-Id: Icf676059a0dd24ad18b8632563c4de81190f0d04
Closes-Bug: #1684519"
4489f34497d117009a77dbf73a3ff0eee44edf72,2017-05-15 15:43:48-07:00,"Move subnet event to db_base_plugin_v2

There isn't anything ML2-specific about this event.
It can just live in the same place as the SUBNET_GATEWAY event
to prepare for the elimination of the SUBNET_GATEWAY event.

Partial-Bug: #1690944
Change-Id: If2c18c5d52658e90ebf1fe4bea91254c1bc5062f"
43ba3defbd72c53619d1b40fbbc7cdb438611a59,2017-05-15 15:47:20-07:00,"Get orig subnet in precommit method

This small refactor will allow us to emit events
in the subnet precommit handler containing the original
subnet contents.

Partial-Bug: #1690944
Change-Id: I2105e0d805a8ce43c9b6d5bc429fa86e571926bf"
b23959b998f3d52793f4e07393b8ce1be8fb12aa,2017-05-15 15:51:39-07:00,"Add BEFORE_UPDATE subnet event

Adding a BEFORE_UPDATE event for the subnet will allow
us to eliminate the BEFORE_UPDATE event for SUBNET_GATEWAY
and eliminate the SUBNET_GATEWAY resource entirely.

Partial-Bug: #1690944
Change-Id: Id2d20bef43ff82f5698e826d391ce4480d729b27"
8f2aad8fe169e8d6c9663f808898b90e0b62aefd,2017-05-15 16:04:20-07:00,"Use SUBNET instead of SUBNET_GATEWAY event in L3

SUBNET_GATEWAY is being superceded by SUBNET, so
we can just use that instead.

Change-Id: I3ef5e6a046df4bae28aa111a796210a59df820fa
Partial-Bug: #1690944"
7b239a928f7834ff98e0fff82491bfbb2a10eece,2017-05-15 16:04:20-07:00,"Eliminate SUBNET_GATEWAY resource

SUBNET_GATEWAY is not a real resource. It just corresponds to when
an attribute of the SUBNET changes. We can just supercede it entirely
by having everyone use the SUBNET resource, which solves significantly
more use cases.

Change-Id: Iae467bacb083888f72b8c9b52a10e4928a3ff6ab
Closes-Bug: #1690944"
9f55d77016083ffb9c4d9cd3da5bb95de82186f7,2017-05-15 19:12:37-07:00,"Notify L2pop driver from update_device_(up|down)

This patch calls update_port_up and update_port_down inside
of the l2pop driver directly from update_device_up and
update_device_down in the ML2 RPC layer. This allows the L2pop
driver to setup forwarding entries completely independent of
the port status update events.

This will allow L2pop to function without requiring the ports to
transition from ACTIVE->BUILD->ACTIVE every time the agent requests
device details.

This will unblock the push notifications work and will additionally
enable us to remove the update to BUILD status as part of a performance
improvement backport for bug #1665215.

Partial-Bug: #1665215
Partially-Implements: blueprint push-notifications
Change-Id: Icd4cd4e3f735e88299e86468380c5f786e7628fe"
b244fa5f6e6e68e5da431b96e8c81bfad7938912,2017-05-16 11:14:38-05:00,"Fix tempest test failing with segments extension

This patchset fixes tempest test case test_filtering_shared_subnets that
fails when executed with the segments extension enabled, due to the fact
that the 'segment_id' attribute is returned in subnets listed with an
admin client but not in subnets listed with a non admin client.

Patchset https://review.openstack.org/#/c/459439/ proposes to enable the
segments extension in the gate.

Change-Id: I6b9bd6fe944c9485c21d25b37c943f3bd53fd7c9
Closes-Bug: #1690598"
96c5dd6a2b9610d345c8e7df73f25820b5041360,2017-05-16 09:56:57-07:00,"Wait 2 seconds between gratuitous ARP updates instead of 1 second

An unfortunate scenario in Linux kernel may end up with no gratuitous
ARP update being processed by network peers, resulting in connectivity
recovery slowdown when moving an IP address between devices.

Change-Id: Iefd0d01d12d06ce6398c4c5634c634991a78bbe9
Closes-Bug: #1690165"
37b84c4c7375302e331fd4d779a732fa18cb09c8,2017-05-16 15:02:51-07:00,"Handle PortNotFound when deleting a network

Tempest has some tests which fail during network cleanup
because they are racing with the subnet delete which cleans
up the neutron:dhcp owned port, which the network delete code
also tries to delete.

This change handles the PortNotFound for these types of auto-deleted
ports so we don't fail to delete the network when the ports are
already gone.

Change-Id: I54ebf2be14e82f288a9bf177967f1136b72b289e
Closes-Bug: #1691176"
a7e6d3b175b740b8286d2030fccba538e875e6df,2017-05-17 03:51:35+00:00,"Add check for Bandwidth Limit Rules

Currently it is possible to create 2 rules in the same policy
where the Max Bandwidth ( from the Bandwidth Limit Rule ) can
be less than Minimum Bandwidth defined in ( Minimum Bandwidth
Rule) , which can be pretty confusing.
This patch raises an exception if such an issue occurs.

Change-Id: Ib748947bcd85253aa22e370a56870afbfbafa19b
Closes-Bug: #1667138"
a04332ca4a3182d0fcfd2c20fbe0bc1dd0fdfe14,2017-05-16 22:10:16-07:00,"Separate port status update from getting details

This is a small refactor to separate updating the port status
from the method retrieving device details. This is in preparation
for patch I99c2b77b35e6eabb6e4f633c4e8e2533594c6b55 which will allow
updating ports' status in bulk.

Change-Id: Ifa78f6911cfbbd3e982807122bddc898613f323f
Partial-Bug: #1665215"
1be00e8239db3db6e962b30a6b3c2b90144e19b8,2017-05-17 05:11:32+00:00,"Bulk up port status updating in ML2 RPC

This eliminates the last of the bottlenecks in
get_devices_details_list_and_failed_devices by making the status
updates use a bulk data retrieval as well.

The last remaining thing that will impact performance is the status
update back to ACTIVE on removal of the provisioning blocks. However,
that will require a much larger refactor since it is callback driven
at the individual port level.

Elimination of the L2pop driver will ultimately solve this completely
since we won't need to cycle the port status anymore on every single
agent restart.

Closes-Bug: #1665215
Change-Id: I99c2b77b35e6eabb6e4f633c4e8e2533594c6b55"
234f09a4629a75d30c7acd5ef2d0a024858cc124,2017-05-17 08:30:32+00:00,"Add ""direction"" parameter to QosBandwidthLimitRule

Added document reference to this new parameter.

Change-Id: I4b74269ca1b56a6c29034a42e583db5160122ff9
Partial-Bug: #1687392"
7ad7584ce113bff21999d6ffd155334bf3d05d2f,2017-05-17 16:34:18-04:00,"Add IPv6 default route to DHCP namespace

The DHCP namespace used to always have its IPv6 default
route configured from a received Router Advertisement (RA).
A recent change [1] disabled receipt of RAs, instead
relying on the network topology to configure the namespace.
Unfortunately the code only added an IPv4 default route,
which caused a regression with DNS resolution in some
circumstances where IPv6 was being used.

A default route is now added for both IP versions.

[1] https://review.openstack.org/#/c/386687/

Change-Id: I7c388f64c0aa9feb002f7a2faf76e7ccca30a3e7
Closes-bug: 1684682"
bf8e6007cfa50d461790be325e9e97b8b396ae47,2017-05-17 22:18:54-04:00,"Send port ID in network-changed event to Nova

When Nova gets a network-changed event, it rebuilds the
entire network info cache for the instance if it does not
have a specific port ID. This can be costly and redundant
when performing something like a live migration with multiple
ports attached to the same instance.

This change simply adds the port ID to the network-changed event
since we have it in scope. Nova can use it or not, but at least
the information is provided for context.

Change-Id: Ifdaef05208d09ddd9587fed6214cf388e5265ba4
Closes-Bug: #1691602"
1b987be2b55558dcc276fcfc8af6e39f8b6bac16,2017-05-18 02:55:45+00:00,"Use vif_type='tap' for LinuxBridge for consistency

This adjusts the Linux Bridge mechanism driver to return
the 'tap' VIF type to Nova so the Linux Bridge agent is
responsible for plugging all ports into bridges.

This completely eliminates all of the work Nova was doing with
regard to bridges so we now have one consistent path how ports
(both compute and dhcp/l3) are connected into Linux Bridge
networks. Both Nova and the DHCP/L3 agents will now just create
a device and leave wiring to bridges to be completely the
responsibility of the L2 agent.

In order to preserve backwards compatibiliy with Ocata agents
that won't touch compute ports, we only report back vif_type='tap'
if the agent has a report_state value showing that it wires compute
ports.

This will also solve a longstanding bug (bug #1105488) that
is preventing Nova instances from using custom bridge mappings
since the agent will be guaranteed to be responsible for the
connection to the bridge.

Depends-On: I075595158d8f3b5a6811c4794aa7b91912940db5

Related-Bug: #1617447
Closes-Bug: #1673910
Closes-Bug: #1105488
Change-Id: I23c5faaeab69aede1fd038a36f4a0b8f928498ce"
82831b9d8d4bd61f90610df9eca8c7f6e447f8d8,2017-05-18 10:56:48-07:00,"Send both gratuitous ARP REQUESTs and REPLYs

Due to a linux kernel bug [1], network peers risk missing a gratuitous
arp update. This can be safely worked around by enabling arp_accept for
network interfaces that may receive those ARP packets [2]. Sadly, due to
another kernel bug [3], gratuitous ARP packets that we send are not
honoured by arp_accept. If we switch from REPLY to REQUEST packets, then
all recent kernels should enforce ARP table entry override on gARP
received.

REPLYs are left for backwards compatibility in case some network peers
honor REPLYs and not REQUESTs.

[1] https://patchwork.ozlabs.org/patch/760372/
[2] https://bugs.launchpad.net/fuel/+bug/1456272
[3] https://patchwork.ozlabs.org/patch/760373/

Related-Bug: #1690165
Change-Id: Iacd01875bf1299ff68fb5d1009d72088270320bb"
b748f2e9b9892443cd4ae072f69a26f8af6da2d1,2017-05-18 14:01:33-04:00,"DVR: Do not check HA state on DVR-only routers

Trying to check HA state on a DVR-only compute node
can trigger:

AttributeError: 'DvrLocalRouter' object has no attribute 'ha_state'

Also moved the mode assignment outside of the loops
since it only needs to be done once.

Co-Authored-By: Sean Redmond <sean.redmond1@gmail.com>
Closes-bug: #1691427
Change-Id: I3e48e06e76325939fbc9533b0198924bc96d600e"
45fd7eef6eb0fe5c760338953c91c046730f153c,2017-05-23 10:59:56+01:00,"Add precommit calls to the QoSDriver class

Added create, update and delete precommit calls for QoS
driver, to be used by some out-of-tree backends.

Co-Authored-By: Miguel Angel Ajo <mangelajo@redhat.com>
Co-Authored-By: Rodolfo Alonso Hernandez <rodolfo.alonso.hernandez@intel.com>

Closes-Bug: #1657381
Change-Id: I44dd7e049eab054363063021f07ade81ef2d1a90"
4094979777102dd36a79d7fe8c809f9e360a946a,2017-05-24 15:23:15-07:00,"Drop 'notifies_port_ready' check for DHCP agents

Provisioning blocks merged in Newton so for Pike we can
safely assume we are not running with Liberty agents that
don't notify the server when the port is ready.

This also drops a block of logic in the agent that was providing
forward compatibility with servers that didn't support the
'dhcp_ready_on_ports' endpoint since servers have been supporting
it for so long and we don't normally allow agents to be upgraded
first anyway.

Related-Bug: #1453350
Change-Id: Ia86547fb4601915d7dd852b6f7a11c120089d6f6"
0fecc04d7a9223bfcb03183270fee5ebf5875e27,2017-05-25 15:52:02+00:00,"Revert ""DVR: Add forwarding routes based on address_scopes""

This reverts commit fb2093c3655ecd15f48e841c0fc6f9ccb7697a34.

This patch started spamming logstash like crazy with ERRORs.

Closes-Bug: #1693539
Change-Id: I81627f1bac1b981f930b66c126abd8285653bf49"
9d69822e4391edcfb659538f18069a61037d3f12,2017-05-26 23:31:36+00:00,"Add ""default"" behaviour to QoS policies

This patch implements the ""default"" behaviour for QoS policies.
If this flag is enabled for a QoS policy in a project, all
new networks created will have this QoS policy assigned by default.

If a new QoS policy is created or updated with this flag and another
QoS policy in the same project is set as the default policy, the new
one won't be created or updated. To set another QoS policy as default,
the current one must be unset.

DocImpact: A ""default"" flag is introduced for QoS policies. If this flag
           is enabled in a QoS policy (attached to a project), then all
           networks created in this project would have this QoS policy
           assigned, unless an explicit policy is specified.
APIImpact

Closes-Bug: #1639220
Change-Id: If5ff2b00fa828f93aa089e275ddbd1ff542b79d4"
8a596f35bb70a2c8ab48f68327662310141bb518,2017-05-29 14:08:19-07:00,"VXLAN multicast groups in linuxbridge

Enable creation of VXLANs with different multicast addresses allocated
by VNI-address mappings. Dictionary of multicast addresses and
corresponding VXLAN VNI IDs should be loaded from settings. Usable to
not flood whole network when managing routers between more datacenters
and can not use L2population because VXLAN points to external device.

Co-Authored-By: Kevin Benton <kevin@benton.pub>
DocImpact: VXLAN addresses used by linux bridge can be specified per VNI
Closes-Bug: #1579068
Change-Id: I24f272ccd6d61d9fa7ea3b6f256fabd381f5434a"
55d810c7e68dd5379a55da45f1cf43ac78573497,2017-05-30 08:12:28+00:00,"Revert ""Change list of available qos rules""

This reverts commit 3299cdffae5cd7196a1676da103da5e2e413ec21.

At least, there's a user which relies on the previous
semantics. (Our tempest plugin)
We should not change API semantics lightly
in an incompatible way.

Closes-Bug: #1694396
Related-Bug: #1694190
Change-Id: I88a216951d8996ac8bc90078b4239f0d25392e58"
572deac00be43b87546d9dd6d3d9886b0963ae1e,2017-05-30 06:21:00-07:00,"Fixes import_modules_recursively for Windows

The neutron agents fail to start on Windows, due to the fact that
neutron.common.utils.import_modules_recursively expects the paths
to be forwardslash separated, while on Windows they are backslash
separated.

Change-Id: I5e15273c2f70b70fad0cf1216ef0b33c6a99d702
Closes-Bug: #1694220"
6cfe39708fd8a25d06335780d8bcc6afb4224443,2017-05-31 07:39:11-07:00,"Fixed docs job failure

Removed one orphan reference of unclear value (pudb), and moved another
one into the text itself. This allows to pass gate with new sphinx.

Change-Id: I943d9b0904731ebcc4d3fd3a9b686fd08b03c48b
Closes-Bug: #1694614"
817f39e49599c3308b5d619163a2426269633067,2017-05-31 15:05:32+00:00,"Provide fallback for disabled port security extension

The push notification logic always assumed the port security object
would exist but it is not present on the port when the extension is
disabled. This defaults it to true like the server side code.[1]

1.
https://github.com/openstack/neutron/blob/c430e9b8d41c139284e840be37629afcdbc96b37/neutron/plugins/ml2/rpc.py#L142

Change-Id: Ice89ad9dd486ad5fcac534ef5f7d8aae3b6b0f97
Closes-Bug: #1694420"
9fbd9eb3b7b01b5503997655ae5e8729442801eb,2017-05-31 15:06:59+00:00,"Change supported vif type in Linux Bridge.

With [1], the vif_type for a Linux Bridge port is set
to 'tap', replacing 'bridge'. This definition needs to be
changed in the list of supported vif types in the pluging
driver.

[1] https://review.openstack.org/#/c/447150/

Change-Id: I715565627b2446533298b5905edbaa256bd84c92
Closes-Bug: #1694190"
4a1d951920e26287d849c6e670d1fff5789e261d,2017-05-31 13:46:16-07:00,"Switched to pyroute2.config.asyncio.asyncio_config

To monkey patch socket module for pyroute2, we call eventlet_config.
In recent releases of the library, this becomes deprecated. Instead, we
should now use asyncio_config() to patch stdlib.

Using the old path now triggers a warning. Our docs tox target (and
gate job) considers all warnings as errors (this is because we pass -W
to sphinx). We also import from neutron.tests.functional to generate one
of our docs pages. Which all combined breaks our docs job.

This patch fixes the warning, and the job.

Change-Id: I7554327c9f09c85b52293240b23133eeadc90670
Closes-Bug: #1694614"
73701bf75b964509c7d7e8b62dba97f7cbe9c87a,2017-05-31 20:52:15+00:00,"ovs: bubble up failures into main thread in native ofctl mode

When native ofctl interface is used (the default), the agent main() is
running in a separate gevent thread. Unless we explicitly request from
ryu to raise errors that may have happened in the agent app, it will
ignore them (only logging a warning message). This may interfere with
service management software like systemd that may use the return code to
decide whether to restart the dead service.

This patch makes ryu raise any uncaught errors happening inside the
agent. It also makes the agent 'wrapper' helper function not to swallow
raised exceptions on logging the error. Those two changes combined make
the agent exit with rc=1 if an exception happens inside the main()
function when in native mode.

This patch doesn't include any unit tests because those would be very
silly (like checking that we indeed pass the needed arguments to ryu).

Change-Id: Ic86b5eeae25a916c3c51f21e6820f5b0212dd5f8
Closes-Bug: #1694505"
527468be33407d65a940f1cd1e7a5a0bbbe12795,2017-06-01 14:13:39-07:00,"api: work around Routes cutting off suffix from resource id

Routes allows for auxiliary format suffix. Sadly it doesn't distinguish
between an actual format suffix (.json) and any other suffix that may be
part of the id. (like for first.second resource tag). To work this
behavior around, we will reattach the 'format' suffix if it is not of a
supported format (json only at the time of writing).

This of course leaves a corner case where there is a tag where .json is
a part of its id. This seems to be a reasonable balance to leave it
unfixed, because an alternative would probably be not backwards
compatible.

Closes-Bug: #1694897
Change-Id: I271107150166f0ee680faaa2e3ca6044cf4e8d4f"
a858ca7d8fdd625524859b723b9ce3fdb747b6b6,2017-06-02 22:40:06+00:00,"l3_ha_mode: call bulk _populate_mtu_and_subnets_for_ports

Based on the observation that a call to sync_routers can be very
slow (minutes) on some setup, and that profiling data show that
a significant amount of time is spent in many individual calls
of _process_sync_ha_data to _populate_mtu_and_subnets_for_ports for
a single interface, this change refactors _process_sync_ha_data to
call _populate_mtu_and_subnets_for_ports only once on a list of
interfaces instead of <n> times.

Said otherwise:
- before: O(#routers) SQL queries
          (one per network of an HA interface of a router)
- after : O(1) SQL queries
          (on the set of networks with an HA interface on a router)

A basic test shows a drastic improvements, from minutes to around
one second, in the processing of a sync_routers call with 256 routers.

Change-Id: I3a00c8fbb245ab3b6d93bdaa97f3435570992791
Related-Bug: 1692971"
927646e03a2b89c4e2e5de67e867b82e1b2d59ad,2017-06-04 06:31:13+00:00,"Configure root_helper and root_helper_daemon in fullstack tests

Fullstack tests are similar to non-test environments, so rootwrap and
rootwrap-daemon should be used instead of plain sudo.

L3 agents and DHCP agents used in fullstack tests should be guaranteed
to be eventlet monkey patched to avoid race conditions when two threads
are trying to issue commands via rootwrap daemon at the same time.

Closes-Bug: #1557168

Change-Id: Ida5a45420a8f58c1f5a36eb3fc546a7ea053a661
Signed-off-by: Hunt Xu <mhuntxu@gmail.com>"
db9ac80072ee78673f9846f8217b45dee23cf3a4,2017-06-05 14:17:23+00:00,"Update minimum tox version to 2.3.2

After latest changes on tox.ini we need to change minimum
version of tox to 2.3.2. Problem is described in tox changelog
as #issue279. Without this change tests are unable to run.

Change-Id: I458cf0d5e8927cf11a44b49ecfb5178a228aafaf
Closes-Bug: #1695888"
30b6a6378ca1bfd6c28c9f3458f4cdec02227662,2017-06-06 09:53:12+07:00,"Fix html_last_updated_fmt for Python3

html_last_updated_fmt option is interpreted as a
byte string in python3, causing Sphinx build to break.
This patch makes it utf-8 string.

Changing Popen to .check_output because of 3 reasons:
1. check_output() will raise CalledProcessError if
the called process returns a non-zero return code.
2. For consistency with keystone [1] and cinder [2]
3. It makes the code look much better.

[1] https://review.openstack.org/#/c/457142/
[2] https://review.openstack.org/#/c/433081

Change-Id: Ifeff184b71a83b78de751dfd0c2f43a33cd409ee"
0ef8e2c16817830144acec07c4ea0164597df47c,2017-06-06 20:31:42-04:00,"neutron-rpc-server fails with no plugins loaded

Neutron RPC Server fails with exception
""object has no attribute 'rpc_workers_supported'"".

Change-Id: I0997789bb61635ed36e4b95f03fc7d396511e19f
Closes-Bug: #1687896"
17ed89cbc12db9d9c8882f1e4162547725d030ec,2017-06-08 09:49:46+00:00,"Update pylint disable list to pass pylint 1.7.1 checks

Recenly pylint version was bumped to 1.7.1 in global-requirements.txt.
Pylint 1.7.1 adds more checks and breaks the neutron pep8 job.

This commit adds new checks to the disabled list to avoid the gate
breakage. Individual disabled tests can be fixed later.

The new disabled list is compatible with pylint 1.4.5,
so we can merge this regardless of pylint bump is reverted or not.

Closes-Bug: #1696403
Change-Id: If6228d0626413049b82f9d75bcdf3bea7ddacde5"
48398e53478f0ec3d5058e8a62213717590db921,2017-06-08 14:36:36+01:00,"Change allowed directions for QoS min-bw rule in SR-IOV

Changed allowed directions for QoS minimum bandwidth rule in
SR-IOV driver to only ""egress"". Currently this is the only
supported direction for this rule in this backend.

Closes-Bug: #1696679
Change-Id: Ia56146143e902663e9a47231773956ab2f035c8e"
6ad51779f3d5188179ba323963417ec2b08cd66d,2017-06-08 11:27:59-07:00,"Revert ""Use vif_type='tap' for LinuxBridge for consistency""

This reverts commit 1b987be2b55558dcc276fcfc8af6e39f8b6bac16.

This probably triggered a race between nova and l2 agent when
hot-detaching VIFs.

Change-Id: I2fc20666d43942446878da358ccf4472e04ad94c
Related-Bug: #1696125"
9b809fcc60d7e09b4f79fad0b992d0f27d2a100f,2017-06-08 18:42:10+00:00,"objects: exclude revision_number from updatable fields

Revision service plugin is the entity that updates the database model
attribute, and we don't allow to modify the attribute on API layer. We
should not allow to explicitly update it on OVO layer either.

This can help with spurious unit test failures that sometimes try to
update revision number and then reuse the same number to fetch the
object. If revision service plugin decides to bump the number during the
test case execution once more, using the old number may yield no
results.

Change-Id: I4666c672223ac38508738b739207f754847c62bc
Closes-Bug: #1694753"
a99897ffb3e3a1247006b21103b54a71123a6b50,2017-06-08 18:42:47+00:00,"Use rootwrap for fullstack test runner

We plan to switch to devstack-gate for fullstack job, and it revokes
direct sudo calls before executing tests, so we can't rely on sudo
working anymore.

This also moves functional-testing.filters to a more generic filename
(testing.filters) because the filters are now deployed and used by
fullstack target too.

Related-Bug: #1557168
Related-Bug: #1693689

Change-Id: I1718ea51836adbb8ef8dea79822a722dcf111127"
96a821c48b7de0017d00c43a3f9da91585873354,2017-06-08 18:42:53+00:00,"tests: use devstack-gate to deploy dstat for functional/fullstack

This should help with a gate failure where IPV4_ADDRS_SAFE_TO_USE would
not be honoured by devstack, rendering a job failed on a particular
cloud (like citycloud), like:

'Could not determine host ip address. See local.conf for suggestions on
setting HOST_IP.'

Closes-Bug: #1693689
Change-Id: Iee7cc4c129e6e9eab91107fda92f66c5379d6f95"
e51ae07aecd14b8270f5e14175f943a5abc8caa6,2017-06-08 16:16:58-07:00,"Don't iterate updated_rule_sg_ids or updated_sg_members

updated_rule_sg_ids and updated_sg_members can be updated
concurrently by an RPC security_group_updated cast from the
server which will result in a RuntimeError due to set
size changing during iteration.

This adjusts the logic to just iterate over a copy of the set.

Change-Id: I0a7cf13157de256403cfd6196f64fafdfa65f180
Closes-Bug: #1696874"
ed27436c0687785075660cf9583bfd3c6fba9727,2017-06-09 11:50:15+10:00,"Checks if net_dns is None and returns so that we don't attempt to load
None objects

Change-Id: I2542fa2a77fc7d0689018564b9e83174b968e5fc
Closes-Bug: #1696889"
ce0352aa7b1609078e8f109b5b4c368d9a1baa89,2017-06-08 23:33:00-04:00,"Drop IPv6 Router Advertisements in OVS firewall

Only neutron routers should be sending RAs, and with
the iptables firewall these are dropped, but there
was no corresponding rule for the OVS firewall.

Change-Id: I045c652ad8cbecf5ed8e98934306476ed7170e90
Partial-bug: #1685237"
739daaa9555e734b94bef89f4fe1c5159c8fd435,2017-06-09 12:48:27-04:00,"Stop arping when interface gets deleted

It is possible for an interface to be added to a
router, have arping get started for it in a thread,
then immediately remove the interface, causing
arping errors in the l3-agent log.  This concurrent
deletion should be handled more gracefully by
just logging a warning on the first detection and
returning early.

Change-Id: I615b60561b3b7f8c950d5f412fb4cdf7877b98f7
Closes-bug: #1696893"
48dbb65e8bc1aafc473172381525c9be4e3768ec,2017-06-09 22:38:30+00:00,"Warn the admin of a potential OVS firewall_driver misconfiguration

OVS trunks work only with OVS firewall to implement security
groups. If a trunk request is indeed processed by an OVS agent
whose firewall_driver = iptables_hybrid, we should at least
log a warning to alert the admin.

Closes-bug: #1669074

Change-Id: I60e77e60e5e6d46ceff4bff61cbc07b6534ef152"
d730b1010277138136512eb6efb12ab893ca6793,2017-06-11 06:11:03+00:00,"Set HA network port to DOWN when l3 agent starts

When l3 agent node is rebooted, if HA network port status is already
ACTIVE in DB, agent will get this status from server and then spawn
the keepalived (though l2 agent might not have wired the port),
resulting in multiple HA masters active at the same time.

To fix this, when the L3 agent starts up we can have it explicitly
set the port status to DOWN for all of the HA ports on that node.
Then we are guaranteed that when they go to ACTIVE it will be because
the L2 agent has wired the ports.

Closes-bug: #1597461
Change-Id: Ib0c8a71b6ff97e43a414f3db4882914b12170d53"
33e48cf84db0f6b51a0f981499bbd341860b6c1c,2017-06-11 13:10:44+00:00,"Do not defer allocation if fixed-ips is in the port create request.

Fix a usage regression, use case #2 in Nova Neutron Routed Networks spec
https://specs.openstack.org/openstack/nova-specs/specs/newton/implemented/neutron-routed-networks.html

Currently ip allocation is always deferred if binding:host_id is not
specified when routed networks are used. This causes initial fixed-ips
data provided by the user to be _lost_ unless the user also specify the
host.

Since the user specified the IP or Subnet to allocate in, there is no
reason to defer the allocation.

a) It is a common pattern, especially in Heat templates to:
 1. Create a port with fixed-ips specifying a subnet.
 2. Create a server and associate the existing port.
b) It is also common to use Neutron IPAM as a source to get VIP
   addresses for clusters on provider networks.

This change enables these use cases with routed networks.

DocImpact: ""The Networking service defers assignment of IP addresses to
the port until the particular compute node becomes apparent."" This is no
longer true if fixed-ips is used in the port create request.

Change-Id: I86d4aafa1f8cd425cb1eeecfeaf95226d6d248b4
Closes-Bug: #1695740"
3ea08fe54bc0ae4032968cce944b0ac20f0aeafd,2017-06-12 01:18:50+00:00,"Remove redundant code in QosServiceDriverManager

I don't see notification_api [1] is used anywhere and it
duplicate with push_api[2]. So this patch-set removed it.

[1]https://github.com/openstack/neutron/blob/master/neutron/services/qos/drivers/manager.py#L41
[2]https://github.com/openstack/neutron/blob/master/neutron/services/qos/drivers/manager.py#L50

TrivialFix
Change-Id: Ib31c320f7486738190d27cf41e16a5f93e524039"
cf4e857dd2d7e6a7a63729257fdad2b599df8fc8,2017-06-12 01:36:59-07:00,"Use e.exc_type instead of calling str on exception

This fixes the usage of the oslo RemoteError exception checking
in the Linux Bridge trunk driver to stop calling 'str' on the
exception and just check the 'exc_type' attribute like we do
in the other agent code so it's safe to use with unicode.

Change-Id: I352ed422550343118319f8e83c4979f290f161f0
Closes-Bug: #1697383"
f5f8a75963a169a477fd732785150dbb559d176e,2017-06-12 05:36:23-07:00,"Mask password when logging request body

Change-Id: I825ab268c140b991e39583cd2c2d557a202b7d97
Closes-Bug: #1697408"
0cb9b5254f412e9ec0d3f2cb6fd07e038c3a5097,2017-06-12 11:51:40-04:00,"Split allowed ICMPv6 types into two constants

There was only a single list of allowed ICMPv6
types, but the defaults allowed for ingress
and egress are different when it comes to
Router Advertisements and Router Solicitations.

Change-Id: I737f07065cf2fb0b574a7f0f49e084488bf23ac0
Closes-bug: #1685237"
ae791696b8451ab3058d932ffb150cd15da2baa4,2017-06-13 08:52:12+07:00,"[log]: db models and migration rules

This patch includes db models and migration rules for initial
logging object. The implementation bases on logging api for
security group spec[1]

[1] https://goo.gl/t3NUlr

Partially-implements: blueprint security-group-logging
Related-Bug: #1468366

Change-Id: I3f91b3927c33021facc9eb9238555c0e06a918c0"
57a37c4a87e9757a109dfb5f3169fb8264d0795e,2017-06-13 02:20:35-07:00,"Switch to start_all_workers in RPC server

This does the same as the logic present but it emits
the registry callback event for resources.PROCESS AFTER_SPAWN
that some plugins may be expecting.

Change-Id: I6f9aeca753a5d3c0052f553a2ac46786ca113e1e
Related-Bug: #1687896"
abe9938367f3f7cf21e5c0e42ee7b9b81b4960b0,2017-06-13 10:25:58-07:00,"DVR: Fix DVR Router snat ports and gateway ports host binding issue

DVR snat ports and gateway ports are not bound to any host
and so we don't see the snat namespace getting created.

The issue is the _build_routers_list in l3_dvr_db.py is not called due
to the inheritance order.

Change-Id: I56f9de31524aeef262cf2a78be3abf8487c21a12
Closes-Bug: #1695101"
8e8f721f6ff615bf43f8563e8940e4d46388c0e7,2017-06-13 19:26:49+00:00,"Add libffi-dev to bindep.txt

libffi-dev is required to install cffi and PyNaCL from tarballs.
cffi is installed from requirements.txt, so 'test' profile is not
specified.

We usual use wheel packages when installing python packages,
but tarball is sometimes used, for example, when a new version
is uploaded. I think it is worth adding it to bindep.txt
to avoid accidental gate failure.

Closes-Bug: #1697613
Change-Id: I4800c9f213fa5c8f28c8603e022264e6aa139090"
5c2e607dd5d87c4b69f8fc098cd6127b3b667345,2017-06-14 12:11:58+09:00,"Add a dashboard for Infra reviews

Generated from https://review.openstack.org/#/c/473683/

Change-Id: I0ff12d258e4ad048199ebb593fbb92224f9ca528"
2e7b787f0e60d3707fe4dec7f8acbc90cf62ea29,2017-06-13 22:50:19-07:00,"Retry ebtables lock acquisition failures

It seems after the merge of
https://bugs.launchpad.net/ubuntu/+source/ebtables/+bug/1645324
that ebtables can fail to acquire a lock and bail with an error
255. This adds some retry logic to retry it up to 10 times to
work around this issue.

Closes-Bug: #1697833
Change-Id: Ic9dcf4b236a93e8811413c6ce2c4b82602544c6d"
2d0d1a2d76c3383bd1e2d14e8860824d843f5047,2017-06-14 11:11:43+00:00,"Add support for ingress bandwidth limit rules in ovs agent

Add support for QoS ingress bandwidth limiting in
openvswitch agent.
It uses default ovs QoS policies on bandwidth limiting
mechanism.

DocImpact: Ingress bandwidth limit in QoS supported by
           Openvswitch agent

Change-Id: I9d94e27db5d574b61061689dc99f12f095625ca0
Partial-Bug: #1560961"
7cae827b6b18f55fdfb3868c973f92c709df253e,2017-06-14 06:56:48-06:00,"replace WorkerSupportServiceMixin with neutron-lib's WorkerBase

neutron-lib contains the WorkerBase class [1] that is the equivalent of
neutron's WorkerSupportServiceMixin. This patch switches over to
neutron-lib's version.

Note: IIUC no consumers are using WorkerSupportServiceMixin so this
patch can land without waiting for them to sync-up. I've included
the lib impact tag just in case.

NeutronLibImpact

[1] https://review.openstack.org/#/c/424151/
[2] http://codesearch.openstack.org/?q=WorkerSupportServiceMixin

Change-Id: Iacf1b6dfe318e3e6cfc76e61c65d407cf9ae7b36"
0a185354a16d2bbd87bea4371933032d0f349e60,2017-06-14 15:58:33+01:00,"TC doesn't rise exception if device doesn't exist

If device doesn't exit, TC doesn't need to raise an exception
during the deletion of the qdisc.

In iproute2 source code [1], the error code used is ""1"".

[1] https://kernel.googlesource.com/pub/scm/linux/kernel/git/shemminger/iproute2/+/master/tc/tc_qdisc.c#188

Change-Id: I9abecd6ef9d74abff27fb0ed0f5f4535c0622fd6
Closes-Bug: #1697937"
6451e0750356b600ac01c13ac86eb556b2a616ee,2017-06-14 15:12:37+00:00,"Fix linuxbridge ebtables locking

Change linuxbridge ARP protection code to always hold the
neutron ebtables lock while operating on rules.  There
were a couple of places where we were reading the rules
without it.

Change-Id: Id7b38a3a662fb2e2736baa015492c36699319e58
Related-bug: #1697833"
9c0a0de556f8edafd153a7d4c1c0548dd4ff3129,2017-06-14 18:47:17-07:00,"Manually increment revision numbers in revision plugin

Don't rely on the SQLAlchemy revision_col flag to bump revision
numbers and instead bump them in a before_flush handler. This
will allow the follow-up patch to do enforcement on conditional
updates before the revision number is incremented.

Partial-Bug: #1493714
Partially-Implements: blueprint push-notifications
Change-Id: I5feeec5b8385727eff53dc669363bc41db8ceaba"
803f7b85448bbe7fbff8e245913eb3031f5abdc6,2017-06-15 00:25:35-07:00,"Fix test_dvr_gateway_host_binding_is_set

Router scheduling was happening before the schedule call
so sometimes the router was being scheduled to a different
host than the test was expecting.

This fixes it by explicitly setting the router to not be HA
and calls schedule before adding interfaces that would trigger
scheduling.

Closes-Bug: #1698058
Change-Id: I6c6319f1da72546a9d21af198daf9a2a67e6dec8"
73776facdcc9611b00410c43bd16e09bdfc7a7e7,2017-06-15 00:28:16-07:00,"Use super to make _build_routers_list safer

This switches _build_routers_list to call 'super' in both
of the override cases so we aren't sensitive to class ordering.

Change-Id: I2f8b54826918280cf63d69a6d34bfc4b358b3b6a
Related-Bug: #1695101"
3e87e4ab0dfe99bb594142efcb0f85ec8a573ee1,2017-06-15 09:02:12+01:00,"Add ""default"" behaviour to QoS policies documentation

Added devref documentation related to the ""default"" behaviour
for QoS policies.

Change-Id: Ic3b149ec5dfdc732a4b5851237389abaef8992b7
Closes-Bug: #1694298"
0d7952400be3e60973a30fae76a82ec5c8259ffc,2017-06-15 02:48:11-07:00,"Trigger port status DOWN on VIF replug

Now with the merge of push notifications, processing a port update
no longer automatically implies a transition from ACTIVE to BUILD
to ACTIVE again.

This resulted in a bug where Nova would unplug and replug an interface
quickly during rebuild and it would never get a vif-plugged event.
Nothing in the data model was actually being updated that resulted in
the status being set to DOWN or BUILD and the port would return before
the agent would process it as a removed port to mark it as DOWN.

This fixes the bug by making the agent force the port to DOWN whenever
it loses its VLAN. Watching for the VLAN loss was already introduced
to detect these fast unplug/plug events before so this just adds the
status update.

Closes-Bug: #1694371
Change-Id: Ice24eea2534fd6f3b103ec014218a65a45492b1f"
5d619e54e2d51e6dafbdb4f9ac58e26dfc7b14a8,2017-06-15 12:32:18+00:00,"net_helpers: Set process streams to text mode

RootHelperProcess extends Popen from subprocess and sets all
stdin/stdout/stderr descriptors to PIPE. These descriptors use byte
array by default in Python 3. If universal_newlines [1] is set for Popen
object, then those descriptors work in text mode.

[1] https://docs.python.org/3.5/library/subprocess.html#popen-constructor

Change-Id: I3fa2192271aed81fb6da658b8196b365a20fa286"
dba107be0eebcbf9cc87b01fdc3b17ad4e013ef4,2017-06-15 10:28:13-07:00,"DVR: Add forwarding routes based on address_scopes

When we create agent gateway port on all the nodes irrespective
of the floatingips we can basically use that agent gateway port to
forward traffic in and out of the nodes if the address_scopes match,
since we don't need SNAT functionality if address scopes match.

If a gateway is configured and if it has internal ports that belong
to the same address_scopes then no need to add the redirect rules.
At the same we should also add a static route in the fip namespace
for every interface that is connected to the router that belongs to
the same address scope.

Change-Id: I617e2fc5a70852c6f2e925ac7244f2a205d60de4
Closes-Bug: #1577488"
2a1b0b05234048fe0f29df459b984b87faea7505,2017-06-16 08:20:54+09:00,"docs: switch to openstackdocstheme

The docs reorganization proposed in the docs-specs [1],
we will migrate our sphinx theme to openstackdocsthems.
This commit switches our docs theme to it,

Also ajust title levels. openstackdocstheme assume one title (first
level) per page.  Second or later first-level titles are not shown.
This changes title levels to match openstackdocsthem requirements.

Note that oslosphinx is used by releasenotes build,
so it is not dropped from test-requirements.txt.

[1] https://review.openstack.org/#/c/472275/

Change-Id: I72d55c26401ae9bfd06626d1b1584a368bbd9f86"
ba5e8468599d5edfa0dad68457739fa03237b16a,2017-06-15 22:01:51-04:00,"Linuxbridge agent: detect existing IP on bridge

If bridge IP address already exists, when we try and add
it an error will be raised.  Check for the existence of
the IP to avoid the error.

Closes-Bug: #1697926
Change-Id: I9aae3b4f0fab053e8c215887f58b983d9549582d"
89abce3efe0645cc08e840b4cc4d455889ee8866,2017-06-16 16:32:46-07:00,"Pass the complete info in sg/rules db into PRECOMMIT_XXX callback

PRECOMMIT_XXX events callback need completed sg info, like the sg id
and its related rules for registered driver.

Change-Id: I6f49f25eb2ad16221357024f45a6bb6175d5cd55
Co-Authored-By: Rui Wang <starwangrui@gmail.com>
Co-Authored-By: Manjeet Singh Bhatia <manjeet.s.bhatia@intel.com>
Co-Authored-By: Yalei Wang <yalei.wang@intel.com>
Closes-bug: #1546910"
781b8f41498521041f7c9d4b4e0c0fa438736fc4,2017-06-17 00:15:22-07:00,"Stop binding attempts when network has no segments

There is no point in retrying binding if the network has no
segments to bind to. This occurs during normal operations when
a network is being quickly created/deleted and the DHCP port
gets created during the network deletion.

By skipping binding we avoid misleading error messages and
wasted CPU cycles.

Closes-Bug: #1696010
Change-Id: I0b987ab7c3f65c1d860064a1b437b92a1dc1cb81"
323c29fd054913493325ad0e987007181fb48976,2017-06-18 17:47:00-05:00,"Store segmentation_id during segment create

The segmentation_id of a new segment is assigned by the
_handle_segment_change callback in the ML2 plugin, which is executed
after the segment was created, before commiting it to the DB. This
patchset adds code to update the newly created segment with the
segmentation_id assigned by the callback.

Change-Id: I493278a0bf5a3a0aadad10e5bee546d83b949fdc
Closes-Bug: #1698596"
4dc81f0a533ce530255156589ad0260c0a49dafe,2017-06-19 12:06:58-04:00,"DHCP RPC: Separate local from non-local subnets

In order to allow the DHCP agent to service other subnets
on the network in other segments via DHCP relay, we need to
return all subnets regardless of segment association.

However, this behavior will break older DHCP agents that
then try to get IPs on the subnets belonging to other segments.
This patch adds a new subnet attribute, 'non_local_subnets'
that will be returned in the DHCP RPC calls, so that agents
that can deal with off-link subnets can handle them
accordingly.

Change-Id: I9cce7b8a19c1201435df0c6baac7be57c57847e6
Partial-Bug: #1692486"
802cf1194218dc125b7211d9c48df8cfebd4f932,2017-06-19 14:03:48-05:00,"Fix race between create subnet and port requests

When creating an IPv6 auto-address subnet for a network, ports can be
created or updated concurrently in the same network, before the subnet
creation concludes. In such a situation, an IpAddressAlreadyAllocated
exception may be raised, because the subnet create request attempts to
allocate auto addresses to the concurrently created or updated ports,
which have been already allocated by the port requests.

This patchset adds code to the IPAM to skip the attempt to assign the
auto address to ports if they already have received them.

Change-Id: If1eb4046865f43b15ba97c52e2d0b9343dc72c19
Closes-Bug: #1655567"
05293965f1aa2221649e8cebcdd318091c536af9,2017-06-20 11:39:52+09:00,"Fix SG callbacks notification

Fix a regression from the recent change. [1]

[1] I6f49f25eb2ad16221357024f45a6bb6175d5cd55

Closes-Bug: #1698812
Change-Id: Ifef2561ef4ff2a44068fc008475b216fdabe7095"
bd998d111e95d8b6360553651f88bdc0d6ebcd92,2017-06-20 12:50:27+09:00,"tempest: Make _create_router_with_client obey enable_snat=False

Found while working on I4452d61ee6e9d21add3d37ec39301efcbd3bd66d

Closes-Bug: #1699006
Change-Id: Ideb3e57b068dce150e333fde66f7ad488c2b515d"
0f536d5a25d410362e5a7b1390bc627cc3dc5071,2017-06-20 01:34:10-07:00,"Use objects instead of SQLA deep copies in PortContext

The workaround of using deepcopy calls on the PortBinding
and PortBindingLevel objects prevents the port relationship
from being loaded to bump its revision because it then fails
to merge.

So in order to allow port bindings to bump the revision we
need to stop using sqlalchemy objects in the PortContext. This
patch adds a new snapshot object that just copies the column
values and provides a method to reconcile them back into the
session.

This workaround can go away after we switch to using OVOs, but
this needs to be backportable so we can't just wait for OVO
adoption.

Partial-Bug: #1699034
Change-Id: Ib85ec8182117fa3c4844dabfffe881e38e68b556"
43eb75fd1d7c99b42293d723626bc48434479ee4,2017-06-20 01:34:17-07:00,"Add revises_on_change to Binding DB models

All of the ML2 binding models were missing the revises_on_change
attribute to bump the revision of the port whenever they are
created/updated/deleted.

These are important because port binding happens in a separate
transaction so without them the revision number before and after
port binding was exactly the same. This opened up the L2 agent
to a race condition dependent on the order of processed push
notifications.

Closes-Bug: #1699034
Change-Id: I75f3c63941130ce845574e60214ac34e99111693"
ce8a0b2b7d73caf078c6634d6dded5117dbed265,2017-06-20 14:23:49+00:00,"dvr: Move normal/output br-int flows to table TRANSIENT

DVR flows are not compatible with OVS firewall flows as firewall flows
have higher priority. As a consequence, rules for DVR were never match
as firewall uses output directly.

This patch replaces flows using normal or output actions and resends
packets to TRANSIENT table instead. This transient table then uses
either those normal or output action rules. With this split, we will be
able to match egress/ingress flows in TRANSIENT table instead of
LOCAL_SWITCHING putting DVR pipeline in front of OVS firewall pipeline.

Change-Id: I9f738047f131b42d11a90f539435006d16ea7883
Closes-bug: #1696983"
3c1a25d9683263505b00cb0d6b04add1831f0ca0,2017-06-20 12:18:09-04:00,"Make HA deletion attempt on RouterNotFound race

The L3 HA RPC code that creates HA interfaces can race
with an HA router deletion on the server side. The L3 HA
code ends up creating a port on the HA network while the
server side is deleting the router and the HA network.

This stops the L3 HA network from being deleted because
it has a new port without a bound segment, which leaves the
HA network in a segmentless condition and no ports after
the L3 RPC code cleans up its port.

This adjusts the L3 RPC logic to attempt an HA network cleanup
whenever it encounters the concurrent router deletion case
to ensure that the HA network gets cleaned up.

To make this more robust in the future, we may need the L3
HA code to recognize when an HA network has no segments and
automatically create a new one.

Change-Id: Idd301f6df92e9bc37187e8ed8ec00004e67da928
Closes-Bug: #1696537"
be8e9fc425b39090fedd2d530db1cd1143ec13d6,2017-06-20 19:52:10+00:00,"Add provider info to network for update

Ml2 Plugin is not sending provider info
while update_network to mechanism update_precommit,
due to which network becomes un-usable, This patch
extends the updated_network to include provider info.

Change-Id: I1838ce375b80f26ad37ede4bf438317f3bbd439f
Closes-Bug: #1698804"
330ebbb1b14cc0f7abf0cd7873461c858a1e645f,2017-06-20 20:17:35+00:00,"functional-tests: Make addresses for tunneling unique

OVS can hold only one tunnel with same endpoints. Some tests had
hardcoded values for both tunnel endpoints which made them unable to run
in parallel manner.

This patch takes always exclusive address using resource allocator.

Change-Id: If81296d54656551b24917d561f235edb96a6c2df
Closes-bug: #1697533"
0415f4f50cf1cd020c43acffb1330fda23b65d95,2017-06-21 09:03:26+08:00,"Fix bug when checking duplicated subnets for router interface

If user set gateway for router first, and gateway subnet
overlapped with tenant subnet, will cause add router interface
to fail.

Add router interface checking for duplicated subnets should
ingore the gateway network.

This patch also filters gateway network when creating gw port.

Change-Id: Idcc8be221656ace13b12b62f559e4cb9a6af4f32
Closes-Bug: #1697410"
154b8750bcdc7053e29c790e5106c4750d05e110,2017-06-20 22:21:23-07:00,"security group: pass update value to precommit_update

This patch is follow up for [1].
When updating security group, pass updated value to precommit.
old value is passed as original_security_group and new value
is passed as security_group.
[1] https://review.openstack.org/#/c/448420/

Although argument to callbacks will be unified by EventPayload
eventually, it's necessary to unbreak decomposed modules.

Change-Id: I5a27d1d218a0be4fae6f9740559bbbf773518821
Related-bug: #1546910"
bd9fc827c69d8a11cd48ec79af1b3b1cf6645e14,2017-06-21 15:46:30+00:00,"Fix some tempest deprecation warnings

Saw this recently in a tempest test run:

    DeprecationWarning: Read-only property 'manager'
    has moved to 'os_primary' in version 'Pike' and
    will be removed in version 'Queens'

Tempest BaseTestCase class credential names have changed
from manager->os_primary, admin->os_admin, and
alt_manager->os_alt, so we should start using them.

Closes-bug: #1697588
Change-Id: I44de8046fc983bf6780c310e8db174a5902c2826"
012de2ea0875609c60445a731ead0b522e8cdb22,2017-06-21 22:07:44+00:00,"Correct the config group in check_trunk_dependencies

The 'securitygroup' is registered as cfg.CONF.SECURITYGROUP. Currently,
this check always raise error as no 'cfg.CONF.securitygroup', then neutron
will abort the trunk_create. So nova will error when create VM with trunk
parent port for waiting timeout about the network-vif-plugged event.

Closes-Bug: #1699516
Related-Bug: #1669074
Change-Id: I0b0bdb5a39f1978e12ddaeddd4e0d825894ea241"
da646496e3a48d78c13a015b56c187ce9ac9b5ef,2017-06-22 08:20:48+00:00,"Ingress bandwidth limit rule in Linuxbridge agent

Add support for QoS ingress bandwidth limiting in
linuxbridge agent.
It uses traffic shaping done by tc with tbf qdisc.

DocImpact: Ingress bandwidth limit in QoS supported by
           Linuxbridge agent

Change-Id: Id495b302d31f5527db3e45b51517bc53153e7fc2
Partial-Bug: #1560961"
4548ffd6b37247a70b6447177db63e4fbf5c411c,2017-06-22 12:15:12+00:00,"tempest-api: Skip test if deployment has not enough agents

Neutron deployments can have various number of agents. For agentless
deployments there is no point in running agent API tests so that should
be reflected in tempest.conf available extension.

One of the tests require at least two agents - this patch skips such
test if environment doesn't contain enough agents for running the test.

Change-Id: I0f006258aa89c1f52fac73669352d725b109696c
Closes-bug: #1699199"
c28dd28514e37e1f655118a8b9d8bb34174b4a82,2017-06-22 16:28:20+02:00,"DHCP Agent: Set dhcp-range netmask property

To complete the DHCP support for non-local routed networks via relay
agent the dhcp agent must configure the netmask in the --dhcp-range
option for IPv4 networks. This was previously not required becuase
dnsmasq can determine it from the local interface information for
local networks.

DNSMASQ(8)
  For directly connected networks (ie, networks on which the machine
  running dnsmasq has an interface) the netmask is optional: dnsmasq
  will determine it from the interface configuration. For networks
  which receive DHCP service via a relay agent, dnsmasq cannot
  determine the netmask itself, so it should be specified, otherwise
  dnsmasq will have to guess, based on the class (A, B or C) of the
  network address. The broadcast address is always optional. It is
  always allowed to have more than one dhcp-range in a single subnet.

Change-Id: I5d609e47a3463c11338dd38aedebfb4a6822f503
Closes-Bug: #1699754"
5aa7192ffa962b3063f7e8137d77dfb6a1e33a82,2017-06-26 22:02:11+00:00,"Common Agent loop: Catch delete_port extension failures

Catch delete port extension failures like we do with normal port
removal to avoid interrupting the deletion processing for other
ports.

Related-Bug: #1697937
Change-Id: I42d86a86965d30e14c85ce975681a6b82be41ecc"
40da4dd96ec27170ef8674900c8caafd2c8f92d3,2017-06-27 11:31:34+07:00,"Remove 'description' attribute

Since the QosPolicy model inherits from standard attributes[1],
the Standardattrdescription extension adds the 'description'
to the attributes map in the API layer[2].
So there is no need to keep it in Qos code.
[1]https://github.com/openstack/neutron/blob/master/neutron/db/qos/models.py#L26
[2]https://github.com/openstack/neutron/blob/master/neutron/extensions/standardattrdescription.py#L55

Change-Id: Ia1ba22d754c66f2976dcbd946ab688e3e2507cfb"
72338d9fad620ea5615a283d1e1d3cb7b56a5d9d,2017-06-29 13:59:42-07:00,"DVR: Fix neutron metering agent to notify hosts hosting DVR

DVR router updates are notified based on where they are hosted.
But in the case of metering rpc notifier the notification to a
specific host was not implemented and also when a call is being
made to routers_updated_on_host, it is being ignored since it only
implements the routers_updated function call.

Change-Id: I39b0d43b14294a8eecf6cba230d948c2c45a0b7a
Closes-Bug: #1682345"
7f17b4759e41aa0a922ac27c2dabc595e7d2f67c,2017-06-29 22:50:12+00:00,"API compare-and-swap updates based on revision_number

Allows posting revision number matching in the If-Match header
so updates/deletes will only be satisfied if the current revision
number of the object matches.

DocImpact: The Neutron API now supports conditional updates to resources
           that contain the standard 'revision_number' attribute by
           setting the revision_number in an HTTP If-Match header.
APIImpact

Partial-Bug: #1493714
Partially-Implements: blueprint push-notifications
Change-Id: I7d97d6044378eb59cb2c7bdc788dc6c174783299"
3f4bceecaa67a1f20c7ec6243d0c883ff815f531,2017-06-30 15:55:33+09:00,"of_interface: allow install_instructions to accept string actions

Other than the of_interface methods, today we are forced to use ovs_lib
methods to program flows, which call ovs-ofctl in turn. Let's make
install_instructions accept string actions regardless of of_interface
driver.

Related-bug: #1672340
Change-Id: Ie2fdeab1f4ac567ef336abae03768e43f426311a"
5be1ace5462994b492b811e20d8a90caac0fcffd,2017-06-30 02:17:38-07:00,"Use subqueryload in l2pop DB for binding ports

This adjusts the l2pop DB queries that leverage the port relationship
on the PortBinding and DistributedPortBinding models to ensure that the
port gets loaded from the DB as part of the initial query.

Without this the number of DB queries will increase with the number
of ports since the port wasn't being loaded until the 'port' attribute
was referenced on its corresponding binding object.

Closes-Bug: #1701288
Change-Id: I7c3b08d525b2c90100c9fe4efaee973cf3a076f3"
cc5746f3a1b233c1480548da3eede9860e42a355,2017-06-30 10:54:03+01:00,"Add ""default"" behaviour to QoS policies documentation

Added documentation related to the ""default"" behaviour for QoS policies.

Change-Id: I433b80ba880397c9322752240727ca60a2e2d53f
Closes-Bug: #1694298"
9647d68fdbaabf1a340eab0116cb4889e9ae7962,2017-07-05 16:35:41+03:00,"New RPC to set HA network port status to DOWN

In commit 500b255278ab41974fe6febd9a3ed13de5ddf3f6 we are using
""get_router_ids"" RPC to update HA network port status. But that
was needed to backport that commit to other branches.
As ""get_router_ids"" RPC is expected to fetch only router ids and
not to have any other processing, we are adding new RPC
""update_ha_network_port_status"". L3 agent will call this new RPC
to set HA network port status to DOWN.

Related-bug: #1597461
Change-Id: I8f34c4f5178d2b422cfcfd082dfc9cf3f89a5d95"
6402cd37c9fdc1b21b0320f5c04a509112e783a8,2017-07-06 15:44:57+04:00,"SR-IOV agent should specify host when requesting devices info

Otherwise neutron server may set BUILD status for ports not bound
to agent's host.

Closes-Bug: #1702635
Change-Id: Ic0aa2b5d8fb5ad682293ce2b8e44606ef862a62d"
a6f83bc0aa7575b74c9267b2e399b9d830942e77,2017-07-06 14:27:21+00:00,"Use _is_dns_integration_supported for _delete_floatingip

L3_NAT_dbonly_mixin._delete_floatingip still uses
utils.is_extension_supported to determine if DNS-specific methods should
be run rather than the self._is_dns_integration_supported method used
by _create and _update.

This causes issues with L3 service plugins like Cisco ACI where the core
plugin is ML2 but the L3 plugin does not implement the DNS methods.
When such a plugin sets _dns_integration to False, _create and _update
do not call the DNS-specific plugin methods, but _delete_floatingip does
 which leads to an exception being raised.

This patch changes _delete_floatingip to use the same method for
determining DNS support as _create_floatingip and _update_floatingip.

Change-Id: Ieb2db6cb96c5d6aae166aa7f0d2d481b2a3690f9
Closes-Bug: #1702693"
316e2f42c163e3a363f660af65bdf4c9acd43ee2,2017-07-07 00:49:51+08:00,"Tempest: Add default-subnetpools tests

Add missing default-subnetpools tempest tests.

Change-Id: I59a98b822400a6f3ba480daf275c1e3058225b87
Closes-Bug: #1684071"
05b776f4ce5801617d91c8fa552254069be79ba9,2017-07-06 22:33:15+00:00,"releasenote: Specify openstackdocs as html_theme

https://review.openstack.org/#/c/480767/ forgot to specify
the correct html_theme.

Change-Id: I02e7ab3aed032260009f2c1e870cd0e9696c0e79"
d7c4428525dac6cbde005f51bcd44b12ebc3bc0a,2017-07-07 10:53:44+02:00,"Allow to set UDP ports for VXLAN in Linuxbridge agent

Introduce vxlan.{udp_srcport_min, udp_srcport_max and udp_dstport}
for setting the port range used for VXLAN communication.

Change-Id: I97999988090eee7aee9b533ac1dad2de95b29cbe
Closes-Bug: #1483853
DocImpact:  vxlan.{udp_srcport_min, udp_srcport_max and udp_dstport}
can be used to set UDP port numbers used for VXLAN in LinuxBridge
agent."
06380b0576d9e2f1f367d2d575e00fa388ffd649,2017-07-07 19:30:32+00:00,"Do not defer allocation if fixed-ips is in the port create request.

The above is no longer true if fixed-ips is used in the port create
request.

Closes-Bug: #1697803

Change-Id: I211e40584a42d777531fe9d698c4907c7d97e2ac"
5b78a81e2d152f2854b22c25cd7cc47eaff2859b,2017-07-10 16:25:56+09:00,"ovo_rpc: Avoid flooding logs with semantic violation warning

Still log them, but not repeatedly.
Also, lower the level from error to warning.

The message has been there long enough. (since [1])
Relevant parties should have already known if their service
plugin needs to be refactored or not.  It's no longer
desirable to keep the warning that loud.

[1] I5efc625c5e8565693e795d70e0f85810552d38cd

Closes-Bug: #1696668
Change-Id: I4f1f399ac8e1c9acec9c7bce2f57c053c98e3031"
8e5128e27ab91bec70273dd19b1358ff21f5140b,2017-07-11 14:16:21+02:00,"Remove unused exceptions

There are four exceptions (TenantNetworksDisabled,
InvalidExtensionEnv, DvrHaRouterNotSupported,
MissingMinSubnetPoolPrefix) that are not used in Neutron, thus
unnecessary to have them in neutron/common/exceptions.py.

- TenantNetworksDisabled was added in [1] to Quantum, and was
  raised when the tenant network type was TYPE_NONE.
  It was used in the openvswitch and linuxbridge plugins in Quantum,
  but now there are no occurrences of usage.
  It is still used in the Neutron plugin of OpenContrail though,
  so complete removal may be inappropriate right now.

- InvalidExtensionEnv (previously InvalidExtenstionEnv, renamed in
  [2a]) was added in [2b] to Quantum. It was raised when the
  appropriate quota driver was not provided, thus the extension
  environment was invalid. The usage was removed in [2c].

- DvrHaRouterNotSupported was added in [3a], and was raised when the
  router was both DVR and HA (it was not supported by that time).
  The usage was removed in [3b].

- MissingMinSubnetPoolPrefix was added in [4]. I did not find any
  prior usage of this exception.

This patch removes the last three exceptions from exceptions.py,
and adds a note to the first about possible removal in the future.

[1]: https://review.openstack.org/#/c/12362/

[2a]: https://review.openstack.org/#/c/23902/
[2b]: https://review.openstack.org/#/c/10484/
[2c]: https://review.openstack.org/#/c/23406/

[3a]: https://review.openstack.org/#/c/143733/
[3b]: https://review.openstack.org/#/c/196893/

[4]: https://review.openstack.org/#/c/148698/

Change-Id: Id47044e1feea4aea0d375b922aea7bd6cc50ac08"
2cc547241c99b01e36fdc69a08c59f975b32c508,2017-07-11 14:24:17+00:00,"New API call to get details of supported QoS rule type

This commit adds new API call that allows to discover
details about supported QoS rule type and its parameters
by each of loaded backend drivers.

DocImpact: New call to get details about supported
           rule_type for each loaded backend driver
ApiImpact

Change-Id: I2008e9d3e400dd717434fbdd2e693c9c5e34c3a4
Closes-Bug: #1686035"
87b02a255232f774c3548101681d8b5687a6adf5,2017-07-11 10:12:06-05:00,"TrivialFix: Remove only_contrib argument

While running unit tests plugins/ml2/drivers/test_type_vlan.py
the following message is observed:

"""""" UserWarning: Discovering extensions only by contrib path is
no longer supported since all contrib extensions have either
been made required or removed. The only_contrib argument is
deprecated and will be removed in a future release.
""""""

From the source code you can see the TODO message to remove
the argument in Queens.
https://github.com/openstack/python-novaclient/blob/264c22a9cc0955a1d0f545d5bc5de30bdf7b5072/novaclient/client.py#L181

This commit removes the argument and the stderr captured by unit
tests.

Change-Id: Ia4270c69c1519342636206fa439640240a1e13bb"
d559cd53e86fb0a3313289467bf4c56bbe76bcec,2017-07-11 15:24:46+00:00,"ovs-fw: Use TRANSIENT table for traffic classification

Commit ce8a0b2b7d73caf078c6634d6dded5117dbed265 introduces a TRANSIENT
table where all traffic local to br-int is sent after it's been
preprocessed by other features using openflow. This patch adopts the
table.

Change-Id: Ic66c186ab73bad6fcd133f2b9d15e07fd0eebb33
Related-bug: #1696983"
913c9e78b92cb000cc59e19cb84a5b8a1eae076b,2017-07-12 13:30:50+07:00,"[log]: implement logging plugin

This patch introduces the logging api definition and initial
implementation of LoggingApiPlugin. The api definition code will
be removed after [1] has been merged on neutron lib.

[1]https://review.openstack.org/#/c/415817/

Co-Authored-By: Yushiro FURUKAWA <y.furukawa_2@jp.fujitsu.com>

Partially-implements: blueprint security-group-logging
Related-Bug: #1468366
Change-Id: Iace31506502de25da9dce5fcfdbfe2c726bea27f"
e9e8f5dccbc43ab3e07ec285a24489fdb9ac6c80,2017-07-12 15:36:48+00:00,"Introduce trusted ports to firewall driver API

Currently trusted ports (DHCP & router ports) are considered trusted
ports based on theirs owner. Trusted ports are not passed to the
firewall driver and hence the driver doesn't have any way how to deal
with such ports.

This change introduces two new methods to firewall driver API:
 - process_trusted_ports
 - remove_trusted_ports

These methods will give firewall driver a chance to process traffic
coming from the trusted ports in case its needed.

For specific case, see patch depending on this one.

Change-Id: I0be64483515e45f98ffffce8346a6bff06bc0fd1
Related-bug: #1626010"
5c331ecbd25be464184e345cea8f38bb9fc712fc,2017-07-12 12:59:36-07:00,"Fixed AttributeError in l2pop.delete_port_postcommit

The error sneaked in with Ib6e59ab3405857d3ed4d82df1a80800089c3f06e
where is_ha_router_port expects a NeutronContext object but we still
pass PortContext instead.

Change-Id: I593af5d050de00ddea7d758007d9856c4b97695f
Closes-Bug: #1703938"
5f972ef406fa195b0fedb409abde89b3f559ea3c,2017-07-13 12:38:55+03:00,"Ensure that fault map translations work correctly

The patch does two things:
1. make the code validation of the code checks more generic
2. enables a extended fault map to be treated correctly (for example
   https://github.com/openstack/vmware-nsx/blob/master/vmware_nsx/plugins/nsx_mh/plugin.py#L769)

Change-Id: Idc89c0ece2e6ff3b0368f431fea098128bd68c34"
190b31e03a1d2ea9be9fd764acab53da8c226a35,2017-07-13 16:51:54-05:00,"Add dns_domain attribute to ports in the API

This change adds a dns_domain attribute to ports in the API.

This patchset belongs to a series that adds dns_domain attribute
functionality to ports.

Change-Id: Ied1f2f0c1e96ae21c309b6e6fed9e3c602b0450b
Partial-Bug: #1650678"
727039bce88233babf8bda19442df79e5c5f1592,2017-07-13 17:00:04-05:00,"Add port dns_domain to DB and object models

This patchset adds a new dns_domain attribute to the PortDNS DB model
and OVO object.

This patchset belongs to a series that adds dns_domain attribute
functionality to ports.

Change-Id: Ib1ea7d0faee4f0544141fdcbb75164aadcfc5056
Partial-Bug: #1650678"
a52f3af266e0443e26eaed248cde7ecdc6e37515,2017-07-16 17:56:25+00:00,"Remove neutron-fwaas specific policies

Drops unit tests related to fwaas policies.

Tests related to get_firewall_policy/rule are also unnecessary.
They have been migrated to neutron-fwaas already.

Closes-Bug: #1703347
Depends-On: I6dc6b2295a605444c918e44949f4b1485177e82e
Change-Id: Ie866f140fd4e5537ff0d757304ab5279f0cf0a79"
a8109af65f275ec1b2e725695bf3bb9976f22ae3,2017-07-17 20:51:48+00:00,"Extend Quota API to report usage statistics

Extend existing quota api to report a quota set. The quota set
will contain a set of resources and its corresponding reservation,
limits and in_use count for each tenant.

DocImpact:Documentation describing the new API as well as the new
information that it exposes.
APIImpact

Co-Authored-By: Prince Boateng<prince.a.owusu.boateng@intel.com>
Change-Id: Ief2a6a4d2d7085e2a9dcd901123bc4fe6ac7ca22
Related-bug: #1599488"
9662e2b170a60c489f072410f976e3365e20f897,2017-07-18 23:00:00-07:00,"Use context interface for constraint

Use the new constraint interface on the context rather than
setting an ugly attribute.

Depends-On: I6bc2539a1ddbf7990164abeb8bb951ddcb45c993

Related-Bug: #1493714
Change-Id: I9142ca96a40092b2a4c94920c4ded9bbc3a0b35b"
bc51380ded25eb679209c379a07a1ac176af30f3,2017-07-18 23:12:36-07:00,"Log reserved cookies in cleanup_flows method

This will help us debug why flows are unexpectedly being
cleaned up if the related bug ever resurfaces.

Related-Bug: #1697243
Change-Id: I517b16c550037f41a5f4915b98963c2232daa78c"
93d45fe1ab896c1ec9d183d9ab3c4248cf0aa5ea,2017-07-19 15:04:17-07:00,"Ignore cast exceptions in AgentNotifierApi

After an upgrade we can get NotFound exceptions from AMQP after there
are no longer any agents interested in listening to that exchange.
These should be ignored and not propagated up since they don't indicate
any kind of issue.

However, oslo messaging is not translating the exceptions into an
oslo.messaging exception so there is no way to catch them without
importing amqp directly.

As a workround to unblock Ironic, this patch just proposes a generic
catch of all exceptions during a cast. These casts occur after work
has been done so raising them back to the user doesn't do anything
useful anyway.

Once we have an oslo.messaging exception to catch we can narrow it to
that.

Change-Id: I15cc2d6ae48e505c2da121880e27481dedf36d3b
Partial-Bug: #1705351"
cced31c6b9cef33022a2cfb97d5aac6d02e75cb8,2017-07-19 22:19:58-07:00,"DVR: Server side patch to schedule an unbound port with Floating IP

Unbound ports that are associated with a Floating IP and connected to
DVR Routers will not be serviced by the DVR Routers, unless we bind it
to a valid host.

This server side patch allows the neutron server to schedule the
unbound port Floating IP on the network node or the node with dvr_snat
agent where the SNAT functionality resides.

The DNAT rules for the unbound ports will be configured in the SNAT
namespace on the network node.

Related-Bug: #1583694
Change-Id: I05d0bfb3fa275b1e4e479928000cf8494da858f6"
6370a0471076ccb095a90f97ffc869ae7ea2e5ed,2017-07-20 14:26:07+00:00,"ovsfw: Fix overlapping MAC addresses on integration bridge

The patch relies on the fact that traffic not going from instance
(and thus port not managed by firewall) is tagged. Traffic coming from
the instance is not tagged and thus net register is used for marking
such traffic. These two approaches make matching rules unique even if
two ports from different networks share its' mac addressess.

Traffic coming from trusted ports is marked with network in registry
so firewall can decide later to which network traffic belongs.

Closes-bug: #1626010

Change-Id: Ia05d75a01b0469a0eaa82ada67b16a9481c50f1c"
8ff25e725e148acf83ef6e1f6a3c445da00e3932,2017-07-20 23:03:47+03:00,"hardware offload support for openvswitch

In Kernel 4.8 we introduced Traffic Control (TC see [1]) hardware offloads
framework for SR-IOV VFs which allows us to configure the NIC [2].
Subsequent OVS patches [3] allow us to use the TC framework
to offload OVS datapath rules.

This patch allow OVS mech driver to bind direct (SR-IOV) port.
This will allow to offload the OVS flows using tc to the SR-IOV NIC
and gain accelerate OVS.

[1] https://linux.die.net/man/8/tc
[2] http://netdevconf.org/1.2/papers/efraim-gerlitz-sriov-ovs-final.pdf
[3] https://mail.openvswitch.org/pipermail/ovs-dev/2017-April/330606.html

DocImpact: Add SR-IOV offload support for OVS mech driver
Partial-Bug: #1627987
Depends-On: I6bc2539a1ddbf7990164abeb8bb951ddcb45c993

Change-Id: I77650be5f04775a72e2bdf694f93988825a84b72"
499faa307489811b9ae2373427f72d95e62aeab5,2017-07-21 19:51:33+00:00,"Always try to delete bridge for ID on network_delete

If network_deletes are received before port creates
are processed, the agent might not have the network in
it's map even though it has a bridge to delete.

This adjusts the logic to always try to delete the bridge
corresponding to a network_id even if it's not in the
network_map yet.

Change-Id: I5e72bff2ffd9568f272ed48187ad543ab5a3d1ec
Closes-Bug: #1698271"
ca2399dbe04d5fbf6268c4d0f83b22a1bd180597,2017-07-21 19:52:07+00:00,"Remove network_id from network_map on net delete

This removes the network_id from the network_map dict when
a network is deleted on the Linux Bridge agent.

Change-Id: I0bd3be91626fd7c4e258c35041bb92130ee23182
Closes-Bug: #1705185"
2bfd21820fc8c5662dfcd066d96e1590284cdf4c,2017-07-24 10:19:36+02:00,"ovs-fw: Update internal docs with TRANSIENT table

Commit d559cd53e86fb0a3313289467bf4c56bbe76bcec introduced TRANSIENT
table to ovs firewall but didn't update docs.

Change-Id: I3d5ca5dd89e890d08039a0f4f68c9b755961a020
Related-bug: #1696983"
96f0142b8089a85f1a031f236c6d39fd463bf86c,2017-07-25 08:14:04+09:00,"Tag mechanism supports resources with standard attribute

Tag mechanism supports network, subnet, port, subnetpool
router resources only. This patch allow tag mechanism to support
 resources with standard attribute.

Two old extenions are kept because of backward compatibility.
They will be removed in Queens release.

APIImpact: Tag is supported by resources with standard attribute
DocImpact: allow users to set tags on resources with standard attribute

Change-Id: Id7bb13b5beb58c313eea94ca03835d3daf5c94bc
Closes-Bug: #1682775"
5806572738feda2072ea5a756a94439dbdddfb47,2017-07-24 18:13:31-07:00,"ml2 plugin: add (PORT, BEFORE_UPDATE) callback

Add (PORT, BEFORE_UPDATE) callback for port binding.
This is necessary for third party driver, In fact for networking-odl.
When port binding happens, neutron server may not know necessary
information. In such case, necessary information needs to be retrieved
from external SDN controller.
It needs to be done outside DB transaction and before actual port
binding. i.e. BEFORE_CREATE/UPDATE for PORT resource.
(PORT, BEFORE_CREATE) exits already.

Change-Id: Iab115087f619df46ea1b19289dec124d5ee394f5
Partial-bug: #1704848"
d24abbe792c7ddb911c4f7ffee5c3b2fced4650b,2017-07-25 15:16:25+09:00,"Add specific values to specific fields in get_random_object_fields()

Generally, get_random_object_fields() generates random values to
update OVO objects. However, in some cases, specific values are
required, otherwise Foreign Key violation is triggered.

This patch adds a dictionary to hold all updatable fields which
require specific values.

Change-Id: I6da72c3ac43f01b5ffa21f128fb3eeaf9fd0a503
Closes-Bug: #1705187"
25af4bba7c04bb184704978f9f207dd292400563,2017-07-25 07:55:54+00:00,"Add datapath_type to vif_details in OVS driver

Added datapath_type to vif_details returned by OVS
mech driver.

Depends-On: Ie523c821995c046c7f77783a34e75053fc0abb3d
Partial-Bug: #1632372

Change-Id: Ief83150caf1a32a2c043b0245b36e5ebc3a16379"
2ec36dc812710c284b75498e695a44585484c6a1,2017-07-25 11:09:25-05:00,"Enforce ethertype with IPv6 integer protocols

By extending the black list to include the integer representation
for IPv6 we can succesfully block api requests to create security
group rules for IPv6 protocols with ehtertype IPv4.

Closes-Bug: #1706229
Change-Id: I5abeff178b3be18f1e93d00d9d546147b11c1a74"
d207fb92354858e7443113a4b5d642a465a3af27,2017-07-26 19:21:02+00:00,"Fixed FlushError on subnet creation retry

Automatically allocated fixed IP addresses were not reflected on cached
port records, which triggered FlushError if the allocating method failed
and triggered a retry.

Change-Id: Ia7725094827b554aa6d928c7daa026959a237991
Closes-Bug: #1706750"
1e5432cccdb29101b6f5177a6a98b23000e86ece,2017-07-27 13:56:40+07:00,"Add netlink-lib to manage conntrack entries

When the security group is updated, the conntrack entries will be deleted
by conntrack-tools with each rule associated with each SG rule.

In large scale system, updating so much rules will call a large number
of subprocesses to implement the ""conntrack -D"" commands. That will
consume the system resource and time.

This netlink-lib will be used by netlink conntrack driver to improve
conntrack management performance.

Original solution and performance from neutron-fwaas [1]

[1] https://review.openstack.org/#/c/438445/

Co-Authored-By: Cao Xuan Hoang <hoangcx@vn.fujitsu.com>
Change-Id: I7503c87900eb0f7bc5386f915b925bb2576502cc"
9e9a8a07c3cb1eed074399af36affe857011133e,2017-07-27 09:07:55-04:00,"DVR: Fix binding info for DVR port not found error

Recently we have been seeing an error in neutron associated
with DVR routers, that says 'Binding info for DVR port not
found'.
This error is thrown when the 'get_bound_port_context' is
called when trying to notify_l2pop_port_wiring.
notify_l2pop_port_wiring is intended for router 'HA' ports, so
the get_bound_port_context should be called here only for 'HA'
ports.

This was introduced by a recent refactor in neutron
Icd4cd4e3f735e88299e86468380c5f786e7628fe

Change-Id: I1c636344068518aa26be6c96c598c61b7f0f3563
Closes-Bug: #1702769"
85d8f6f1c8c51f32b6ec2f6fdc8cc09bbcc060eb,2017-07-27 09:03:00-07:00,"Catch exceptions for all rpc casts

I15cc2d6ae48e505c2da121880e27481dedf36d3b catches exceptions for
specific RPC endpoints affected by a recent change related to
push-notifications. There may be more changes like that in the future,
so instead of fixing them one by one, this patch consistently catches
exceptions from all cast calls for all RPC clients.

Change-Id: Ia7e6cd717758a9d5b18fe9cb07c55938f52040ce
Partial-Bug: #1705351"
7da955bf46e3e62f775afaad936006497e4320e3,2017-07-27 23:03:40-04:00,"DVR: Fix router_update failure when agent restarts

Router update task fails when agent restarts with DVR routers
as it was failing adding an IP rule to the namespace.

The IP rule matching code was not finding a match for
a rule for an interface since we are not specifying an
IP address, but the resulting rule does have the ""any"" IP
address in its output, for example, 0.0.0.0/0.  Change
to always supply the IP address.

Change-Id: Ic2e80ebb59ac9e0e0063e5f6e69f3d66abe775a1
Closes-Bug: #1702790"
ec709767e6ca7fa7d8ceb81b6ef76fdde1580289,2017-07-31 11:29:40-07:00,"Check if record is stale after bulk pull

We need to check if the results from a bulk_pull are stale because
the resource might have been updated and concurrently pushed from
the server while the bulk_pull query was being fulfilled.

Change-Id: I755a1cb2e0037ec2316161a09ad462bc4b09f397
Closes-Bug: #1707699"
ce8dbcff838a6e89cba87882d84365db590508b8,2017-07-31 15:46:57-07:00,"Don't log 'Exit code: 0'

A regular gate run shows this was logged ~2500 times.
It doesn't provide any useful information since the
command executed successfully and we can see the
issued command in the debug statement before it.

Partial-Bug: #1707307
Change-Id: I431d6a59ce36deb9a5fb9deef39655d28d71f24d"
72f7f1eaa8a4b9b2c792d4466506b8164020d922,2017-07-31 23:00:41+00:00,"Drop port_delete and port_update debug msgs

The push notification resource cache will already give us
the port update and delete notifications so there is no need
to log here now.

Change-Id: I6000691dfd61facf47d70360d4050cfdefc3e7e2
Partial-Bug: #1707307"
d92dc1244ed8277bf0c204448b49a425b40f55b1,2017-07-31 23:00:46+00:00,"Change ovsdbapp vlog to INFO

This is to eliminate the following messages that fill the
OVS agent logs:

ovsdbapp.backend.ovs_idl.vlog [-] [POLLIN]

Change-Id: I00010ef600a4185b7628318bb88971d978b9fe67
Partial-bug: #1707307"
b7892b16b25c34edd9da6b4901b08a58c9725046,2017-08-01 01:47:46+00:00,"ovsfw: fix allowed_address_pairs MAC issue

Current ovsfw implementation does not take care of the different
MACs in allowed_address_pairs with the VM's MAC.
This patch use the following method to fix this issue:
1. Do not check dl_src in table=72 because table=71 has checked
dl_src for Egress.
2. Add all allowed MACs in table=0 and table=73 for Ingress.
3. Do not check dl_dst in table=82 because this check has done
in table=0 and table=73.
4. Delete allowed MACs in table=0 and table=73 when needed.

Change-Id: Iad59096f0c9855ebfd4a0d5b447e73b443d66c1d
Closes-Bug: #1697593"
fe0bb07113a00a4d8a56dc08b004bf758c505e4b,2017-08-01 06:54:17+00:00,"Enable QoS scenario tests

This test has been disabled since [1].
But it seems the failure ratio is not so high with
the current code.  Let's re-enable it now and see how it goes.

Note: This same test has been enabled on the gate jobs for
other implementation for a while. It doesn't fail much there
either. (networking-midonet)

[1] I37f1488db258f6a4d383fb472cb5433c65371ac5

Related-Bug: #1662109
Change-Id: Ia39c73189ad8a3331c1911989fe69428f064f7a6"
99a12a23920a8e6d746be179e342c281466644aa,2017-08-01 08:56:45-07:00,"docs: clarify wording about how to use advanced glance image

This is to follow up on comments in
https://review.openstack.org/#/c/469838/

Change-Id: I59a0f63e56d972a2fadf5a4e0bf531ccf4da8dba"
0177568c93c1773ba22989ea1565dd666c516de3,2017-08-02 14:11:13+00:00,"devstack: fix ovs install on fedora like OS

This patch I3d0981fbe30f2436f00c200919b50aeb97491252
resolved custom kernel version, but introduced a bug
for the 3.x series. This patch avoids the replacement
in the case of the 3.x series.

Closes-Bug: #1704077

Co-Authored-By: Moshe Levi <moshele@mellanox.com>

Change-Id: Iff1c5a39fe4b0d9320910d0cfafdd36873825d03"
32814bb39e4f7738d460035d30cc8b3c0d9667e4,2017-08-02 16:44:01+00:00,"Bump network rev on RBAC change

Increment the revision number when RBAC policies are
changed since it impacts the calculation of the 'shared'
field.

Closes-Bug: #1708079
Change-Id: I4c7eeff8745eff3761d54ef6d3665cf3dc6e6222"
0b9748e1f9788d1ad7b157fe9eb16666a00da420,2017-08-02 11:37:06-07:00,"Degrade log message for missing fanout exchange to debug

In upgrade scenario, this is a regular case (no agents created the
exchange, so fanout is ineffective), so logging it using ERROR level is
misleading and against guidelines.

Change-Id: If098071c9c19490af7eb0863dbab83e488019bd7
Related-Bug: #1705351"
1865f27a8b98f322caaad46cbb145c0972753d84,2017-08-02 16:34:27-05:00,"Remove code to debug auto address allocation error

Change If1eb4046865f43b15ba97c52e2d0b9343dc72c19 fixed bugs 1666493 and 1655567
that reported exception IpAddressAlreadyAllocated being raised during the
creation of IPv6 auto-address subnets. This patchset removes code that was
added by change I22b8f1f537f905f4b82ce9e50d6fcc5bf2210f9f to root-cause these
bugs.

By removing log statements, this patchset contributes to reduce the
'Neutron log obesity epidemic'

Change-Id: I28c58dc4a957df833d277f0d08ce831c7ee07c68
Partial-Bug: #1707307"
0b5750ca518314a10266f25cb09997b7a859ab1e,2017-08-02 20:14:10-07:00,"Sinkhole workaround for old topics

This patch introduces a workaround on the Neutron side
for bug 1705351 that results in the Neutron server blocking
trying to send to topics the agents no longer subscribe to.

The workaround is to just subscribe to those topics and do
nothing with the messages that come in until oslo.messaging
can properly recover from loss of listeners.

Change-Id: I946a33dfd0c0da26bb47b524f75f53bf59d3fbd5
Closes-Bug: #1705351"
49a0555129588b5c5d33eccb11231fc60689fcdd,2017-08-02 22:09:56-07:00,"Remove configuration options max_fixed_ips_per_port

This was marked as deprecated in Newton.

Related-bug: #1502356

Change-Id: Iafaa340a9291e1ee84e776ddfffc5f870f7e67e2"
1d80c960f61248f11af427d6008faac7fcc2db0b,2017-08-03 18:29:09+00:00,"ovs-fw: Handle only known trusted ports

Similarly to filtered ports this patch caches so called trusted ports to
avoid processing in case of unknown port is passed down to firewall
driver. The cached ofport is used for removal as the cache reflects
currently installed flows.

The patch also catches exception caused by inconsistency coming from
ovsdb.

Closes-bug: #1707339

Change-Id: I15cdb28072835fcb8c37ae4b56fc8754375a807c"
6f1ecf24662b206e2ba580e8eb5fb6fcb551bf7e,2017-08-04 07:16:57+00:00,"Exclude relnote from past releases from Pike relnotes

reno includes release notes touched in a target release
even if they are added from past releases.
The recent release note cleanup I made as part of doc8 adoption
and some other cleanup touched release notes from past releases.
As a result, we see several number of release notes from past
release in the Pike release notes unexpectedly.

Also adds a warning note to the release notes howto page

Change-Id: I127f96896488e9992d9309d76055b4883f6a62f3
Closes-Bug: #1708560"
12d6a3ea4c9fc73a50f73ef57952bb5023f62a40,2017-08-06 23:19:05+00:00,"doc: Fix non-existing URLs

Change-Id: I72c1c0fcb7cc541b87b184b32f0797539b919a44
Closes-Bug: #1708394"
1da78c924e31b21ed19d10676064c8540929589d,2017-08-07 10:09:13-07:00,"tests: apply latest release milestone alembic scripts first

Before walking through migration scripts that belong to the release
under development, we should first execute all scripts for the latest
official release because it serves a convergence point. Without it, we
can't guarantee that calling --expand will succeed because some of new
scripts may depend on schema state that is defined by contract scripts.

Change-Id: I501b38900fb2f4409839ecd09be4d937cf20c6a9
Related-Bug: #1671634"
39a9ed4c50c14029498ccffa7928bb194cb2b703,2017-08-08 13:18:09+07:00,"[log]: add driver manager to LoggingPlugin

This patch adds driver manger to LoggingPlugin to manage
logging drivers are enabled belong ML2 dirvers.

Co-Authored-By: Yushiro FURUKAWA <y.furukawa_2@jp.fujitsu.com>

Change-Id: I5a0f896c9ec7f670b662f16825feccbc07db19dd
Partially-implements: blueprint security-group-logging
Related-Bug: #1468366"
68477904140d7c4a1947f435c7f3ac5767c7e517,2017-08-08 13:25:40+07:00,"[log]: Add validator to logging api

This patch added a validator to logging api for checking resource bound
(sg or port is exist or not, ...) and validating whether or not supporting
logging type on each port when we create a log object by specific port_id.

Co-Authored-By: Yushiro FURUKAWA <y.furukawa_2@jp.fujitsu.com>

Change-Id: I10f2441fc2c7bdbda51b05002549b235743a7deb
Partially-implements: blueprint security-group-logging
Related-Bug: #1468366"
242b63be234f6d98a57166b25f8b5728430ddb80,2017-08-08 11:17:19+00:00,"Don't check full subnet body in test_filtering_shared_subnets

Plugins may add attributes to subnets, in which case simple equality
check will fail. Instead of comparing bodies, compare just IDs. It
should be enough to achieve the goal of the test case.

Change-Id: Iebc22f99285777df7de499c713b2bc1e38e0bd62
Closes-Bug: #1706986"
8b4bb9c0b057da175f2d773f8257de3e571aed4e,2017-08-08 10:44:45-07:00,"DVR: Configure centralized floatingips to snat_namespace.

This patch is the agent side patch that takes care of configuring
the centralized floatingips for the unbound ports in the snat_namespace.

Change-Id: I595ce4d6520adfd57bacbdf20ed03ffefd0b190a
Closes-Bug: #1583694"
03c100b9596f2c46c090571286abe750174494b4,2017-08-08 19:42:09+00:00,"Fill device_info with port_security_enabled data

Firewall drivers check if port security is enabled. After ovo is sent
over the wire, the port_security_enabled is part of 'security' field.
The patch translates the RPC call from agent to server so the payload
containing port_security_enabled is at the same place.

We may consider implementing change of OVO field to contain boolean
directly.

Change-Id: I647343e84b41da63d7ffcc5a87f3dfa2036adc56
Closes-bug: #1605654"
37d33b2fcd4a1dde356df3b4b4a2f739afb6876c,2017-08-08 16:29:28-07:00,"Allow extension driver to provide multiple aliases

This allows extensions to supercede older extensions
if they provide all of the same functionality plus more.
This is used by the DNS domain port extension driver.

Change-Id: I3e91669a83e9e16039f4063bf54b511cec94cecc
Partial-bug: #1650678"
4a7753325999ef1e5c77f6131cfe03b2cfa364a7,2017-08-08 18:42:43-05:00,"Add port dns_domain processing logic

This patchset adds logic to the ML2 DNS integration extension to process
a new dns_domain attribute associated to ports.

This patchset belongs to a series that adds dns_domain attribute
functionality to ports.

DocImpact: Ports have a new dns_domain attribute, that takes precedence
           over networks dns_domain when published to an external DNS
           service.

APIImpact: Users can now specify a dns_domain attribute in port POST and
           PUT operations.

Change-Id: I02d8587d3a1f9f3f6b8cbc79dbe8df4b4b99a893
Partial-Bug: #1650678"
1908829ace1867c5df9f56ba6302aa56ac09e136,2017-08-09 09:33:35+01:00,"Add documentation for Linux Bridge and OVS ingress QoS

Added documentation reference for ingress bandwith limit QoS rule
for Open vSwitch and Linux Bridge backends.

Change-Id: I605b941efe661621298e703ee9f8ea0c1938135f
Closes-Bug: #1699802
Closes-Bug: #1698046"
75ddc9c34e08133ffb618271ca21499365b90ad7,2017-08-09 13:44:12+00:00,"functional: disable netlink tests

Current gate runs with kernel 4.4.0-89. Creating conntrack entries fails
with this version and leaves conntrack in stuck state leading to
functional tests to hang.

This patch proposes to skip those tests that create conntrack entries so
we can enable back the functional job to voting to avoid new regressions
at this suite.

Change-Id: I9f883cea1d101efe6a7214c3a9b679fc32427365
Related-bug: #1709032"
85a3e93537fcc2055705cb95a38e88c47ccd500a,2017-08-09 19:48:05-07:00,"Hook bandit security linter to pep8 target

This helps catch a number of potential issues with the neutron
code in advance. A false positive can be skipped with #nosec
at the offending line, just like #noqa can be added on
offending module imports.

Change-Id: I3e4cbc94539dd2cce61bfa5cd0265e75d7336311"
6d5dc8677b9a7f13c5201fac4d5f6496d0dc40f2,2017-08-10 16:28:59+09:00,"fullstack: Actually run ovsfw tests

super(...).setUp() must be called before OVSVersionChecker so that
rootwrap gets configured first.

Change-Id: Ie152f64a598a68566e36a4903017132e03eb35a6
Closes-bug: #1709547"
c36676877eccca983aba1bf64a953bc65bf78c36,2017-08-10 07:54:34+00:00,"Remove 'persisted dirty' log message

In a gate run the neutron.quota.resource module logged 5235
lines from this module, making it one of the top offenders.
This single line accounted for 3297 of those entries and it
offers limited information since the quota engine is quite
stable at this point and debugging tenants' dirty status isn't
an issue that comes up.

We can just get rid of this particular log line.

Change-Id: I9cb0fcfbad51a0863d04fb89fbb8b09e3e21bdf0
Partial-Bug: #1707307"
34ad023ea3b00ed876e9c5b1a4f19ee56f7f89b7,2017-08-10 15:50:28+03:00,"Fixing test_convert_default_subnetpool_to_non_default

Susbnetpool is created by admin but the show command
is using non-admin client.

Change-Id: I4cac1b87c03053255ed298d4423ea672e60b410d
Closes-bug: #1709869"
9515c771e742a5b6d29b17f84f49a0b39706489b,2017-08-10 23:40:31+00:00,"DVR: Provide options for DVR North/South routing centralized

DVR supports both East/West and North/South routing. While the
SNAT is centralized the DNAT is mostly distributed. There are
certain circumstances where the DNAT might be centralized when
the ports are unbound.

In order to have a well defined behavior and when there are
no external network connectivity available in the compute host,
the DNAT functionality is centralized.
In order to achieve this we are introducing a new agent type
option 'dvr_no_external' to centralize the DNAT.

This new L3 agent type ('dvr_no_external') would only allow the East/West
routing to occur in the compute host and the DNAT or Floating IP will be
configured in the centralized network node.

Change-Id: Ia5d7336e478e0fa5ba62b7ae5ed0c56656116d94
Partial-Bug: #1667877"
f21c7e2851bc99b424bdc5322dcd0e3dee7ee5a3,2017-08-11 00:57:34+00:00,"Allow to set/modify network mtu

This patch adds ``net-mtu-writable`` API extension that allows to write
to network ``mtu`` attribute.

The patch also adds support for the extension to ml2, as well as covers
the feature with unit and tempest tests. Agent side implementation of
the feature is moved into a separate patch to ease review.

DocImpact: neutron controller now supports ``net-mtu-writable`` API
           extension.
APIImpact: new ``net-mtu-writable`` API extension was added.

Related-Bug: #1671634
Change-Id: Ib232796562edd8fa69ec06b0cc5cb752c1467add"
9e185bca08510ec831afdd75013bb3655d9a6e76,2017-08-11 06:41:24+00:00,"Allow unprivileged users to get their quota usage

When user try to get quota usage detail for their own project, it will
return null. As process logic of details method is incorrect, it only
allow admin to get other's project quota usage detail.

Change-Id: I2e21dac497a6c5bffba6b55cb4456820900449df
Closes-Bug: #1708133"
e0a26029043401e80fbbcc603c01371866ef28d2,2017-08-11 01:31:09-07:00,"Add a target to Sinkhole so it's compatible

This prevents oslo messaging dispatch from trying
to treat the receiver function as a target. When it
thought it was a target it was referencing attributes
it didn't have.

Closes-Bug: #1710064
Change-Id: I1832a05f23cd76c1732d3b98539988bc9519d79e"
03898582c81547f048fd9c1d51527c7f6c44f6ba,2017-08-11 02:03:50-07:00,"Stop logging versions on every agent update

This logging statement was being called on every agent update
even if no versions changed, resulting in a bunch of useless
messages.

We already log when the actual versions change in the _set_version
call here: [1]

To cover the cases where versions are removed, this adds two logging
statements so we can be sure we see when the tracked versions do
change but not be bothered by version logs in any other condition.

1.
http://git.openstack.org/cgit/openstack/neutron/tree/neutron/api/rpc/callbacks/version_manager.py?h=d225b86738a9db56bc643dfe637b1f21393ad27e#n113

Partial-Bug: #1707307
Change-Id: I4761d21257dabfbd661bba1b24fe09d208d16ae6"
62c1a4b6873d0b2382349ece65545bf28c9c87ca,2017-08-11 02:08:22-07:00,"Log policy filters in one line

Rather than generating an entire log line for each policy that
filters out an attribute, we can instead log the excluded attributes
once after all of the policy checks are done.

This only applies to the policy checks, policy enforcements
(e.g. preventing a user from entering a field value on create)
are still logged individually.

Partial-Bug: #1707307
Change-Id: I77401e30cb220901dacd61028acde4c79001ed9b"
cc69828ff09f5dbc37488f3f56bb045772e35634,2017-08-11 11:10:10-04:00,"Apply network MTU changes to l3 ports

This patch makes L3 agent to update its ports' MTU when it's changed on
core plugin side.

Related-Bug: #1671634
Change-Id: I4444da6358e8b8420a3a365e1107b02f5bb1161d"
9df067f12d5a66b88728e6af46689050112d9e3a,2017-08-11 15:12:40+00:00,"Apply network MTU changes to dhcp ports

This patch makes DHCP agent to update its ports' MTU when it's changed
on core plugin side.

Related-Bug: #1671634
Change-Id: Ie1e1ca6a5f908c1e5669ddb3988d49c57da4b9c4"
daa1c85a3b84b6ee5bd127ea88e285d189b88979,2017-08-12 01:43:47+09:00,"releasenotes: Move Pike ignore-notes to a proper file

Now unreleased.rst is for Queen.

Related-Bug: #1708560
Change-Id: Iaf6642c8955d68a1f6b6572d3ae2a3dabc1244df"
2d8ffe2a08120f835c875060a197b4db2ec8c735,2017-08-11 20:37:16-07:00,"Stop logging full object in RPC push code

We already log the full object on the agent side
and other server methods log important parts of
the object so there isn't much to gain logging the full
OVO components passed to this function's args.

This adds a specific debug statement that just indicates
the types, IDs, and revision_numbers being pushed out so
they can still be correlated with received objects on the
agent side.

Partial-Bug: #1707307
Change-Id: I4499bb328f0aeb58fe583b83fb42cd2d26c1c4c1"
637734c1b6d5a158374576ce27941a04363fc8bb,2017-08-14 09:46:41+00:00,"Fix DefaultSubnetPool API test

As default subnetpool is a unique resource in the cloud, it needs to be
cleaned after each test is done. This patch adds a cleanup call to
DefaultSubnetPool tests in order to delete created default subnet pool.

Change-Id: I4c963d0d0e9910f7047061b51feb36c8a19de65c
Closes-bug: #1709938"
b19fb20336b5aa2bc2bb2471574a490a9a37c1f8,2017-08-17 15:42:02+07:00,"Fixes input for netlink-lib functional tests

Netlink-lib creates some conntrack entries to verify list_entries()
method. Each entry contains a zone_id, which might be duplicated with
some already existed entries in OS.

This patch proposes a simple verification to make sure entries created by
netlink-lib do not contain existed zone_id.

Change-Id: I4bce5041f82782cf9e51d99c605593afb2cf4fc8
Closes-Bug: #1708030"
23ef48ad558def5ed2ce701e651a50590ac323c0,2017-08-18 05:45:47+00:00,"Treat Filter as Dict in get_policies

Currently QoS plugin's get_policies doesnt check if the filter
is a dict or not, though similar checks exist in get_rule_types()
and get_policy_rules().
This patch adds the check so that if any consumer passes filters=None
then it is converted to a dict.

TrivialFix
Partial-Bug: #1711165

Change-Id: Id50674c44cd3720dcd8fd6d66361d937599f5992"
d5a3b24bde15543001551458bedd9e245521bbd0,2017-08-21 11:57:43-06:00,"add doc section for ml2 extension drivers

Today the ML2 config reference doesn't mention anything about ML2
extension drivers. While it likely doesn't make sense to clutter the
primary ML2 driver types (type/mech) with extension drivers, this patch
proposes we add a small section about them to link the concept to the
config reference.

Change-Id: Id964e6e4d13d400ea4cd8a1707ad0f08c52ef0b1
Partial-Bug: #1683102"
8ab3a7dc0d5778dfb9c8fdf7e5e0526f1eadd39e,2017-08-23 08:53:25+08:00,"Add network ip availability filtered by project_id

Currently we can't get network ip availability list by project id,
This patch fixes it.
Also add project_id attribute in net-ip-availability-show.

Change-Id: I3eed5a26e5674740b331f772eb7f510b41fae4e4
Closes-Bug: #1696309"
334a1ed7d52afa21230db8588dd4cc1673386ae3,2017-08-23 14:03:39+03:00,"Fix test_keepalived_ipv6_support for Keepalived v1.2.20

In commit [1] (some explanation in [2] ) VRRP initialisation is enhanced
to read source IP address(to use when sending VRRP packets) from the
HA interface or from keepalived config(""unicast_src_ip"" parameter).
If it is unable to find IP address, VRRP initialisation will fail with
error ""Cannot find an IP address to use for interface"".

In the test, we set vrrp->family to AF_INET by setting vip to
169.254.0.1/24 through config, but not providing source IPv4 address(i.e
no 'unicast_src_ip' option or no IP on HA interface), making the test
to fail with [1]. To fix that, we set the IP address on HA interface.

Note: Commit [1] is added in Keepalived version 1.2.20.
Tested the fix on both Keepalived v1.2.19 and Keepalived v1.2.20.

[1] https://github.com/acassen/keepalived/commit/37488e57
[2] https://github.com/acassen/keepalived/issues/445

Closes-bug: #1712388
Change-Id: I260c0e6810ed54c93f93621afa6ab13855ef2428"
95bbb7385bbd538de99a94b20e2f58718cce16d7,2017-08-23 13:03:18+00:00,"Fix default qos policy when creating network

In _create_network_policy(), policy object is passed into _get_policy_obj()
although it expects to be passed policy id. This patch passes policy id
instead of policy object and adds a unit test and API tests.

Change-Id: Ic4c755c54d93d7ca3312b432b7c1e6770f25c359
Closes-bug: #1712278"
594d8b8b3aa9f8b91b0fd111cd8d8c366068a5b0,2017-08-23 14:44:16+00:00,"functional: Fix reference to ovsdb connection

Change I379448fd135a3bb2ac99709812b9f476c73923a7 replaced connection
attribute of IDL to ovsdb_connection. After updating upper constraints
to newer ovsdbapp version, we no longer have connection attribute.

Change-Id: I6f060fff4df7323a3877f56cb1fa586a22d16670
Closes-bug: #1712594"
db4eddf0b151086b1075c3e568866a466fa366c8,2017-08-24 06:43:45-07:00,"functional: Remove ovsdb tests

There are tests that exercise ovsdbapp internals and should be part of
ovsdbapp project. We keep test_ovs_lib which exercises the real things.

Change-Id: I0375caef25d6ea6c58832fc39f7acc915793ffd0
Related-bug: #1712594"
13ddee8aaa0607bb5582107187a7bb36f9473e38,2017-08-24 13:32:17-06:00,"fix formatting in ubuntu controller install guide

The ubuntu controller install guide contains improper indentation and
extraneous new lines. As a result the sub-steps for #1 are not shown
in this HTML (generated) guide.

This one needs to also get back-ported to pike.

Change-Id: Ib2b263c8da49ccc8905cbd59331ce6694de232e6
Closes-Bug: #1712107"
2750590cde2c2fbf2b62a753966e77b1c0fa8c1d,2017-08-24 13:55:41-06:00,"update contributor internals index

A number of our RSTs under doc/srouce/contributor/internals/* are not
referenced from the index.rst and as a result are not
published/accessible in our docs.

This patch updates the index to ref all internal pages.

Change-Id: If534f8d6a7da2807285edb6885c800696d1c50a9
Closes-Bug: #1712907"
51ca6837974a19369504f7cba7749d4e01d25a1f,2017-08-25 10:41:39-04:00,"Refactoring agent linux&ovsdb config

Refactoring neutron agent linux and ovsdb config opts
to be in neutron/conf/agent so that all the config options
reside in a centralized location. This simplifies the
process of looking up the config opts and provides an easy
way to import.

NeutronLibImpact

Change-Id: Ib1e0e63dec2985c417412d1ecc68e2a74ef87182
Partial-Bug: #1563069"
13eea520b5c03010dc4b42a9dcf41b004fe40ed7,2017-08-27 00:45:53+08:00,"dhcp agent start md-proxy with vrouter id only when has metadata subnet

When user create network with isolated subnet, dhcp agent will
create md-proxy with vrouter id. This will conflict with then md-proxy
created by l3 agent. This patch updated dhcp agent start md-proxy with
vrouter id only when the network has metadata subnet.

Change-Id: I3288327bf9d0cdf759a6fdf365d1289e8b7442db
Closes-Bug: #1703059"
d3c560b78804aa408d4454386a26c1e039825ced,2017-08-29 14:04:57-06:00,"update docs for stdattr tag support

Tag support was extended to all resources that support the std attr
mechanism. This patch handles a few remaining updates in the docs.

This one is also a candidate for backport to pike if warranted.

Change-Id: I7dfc7a371e6af64dde09c0e712424b8e647d7027
Closes-Bug: #1706307"
32700292615b528a9095b99f795a290033d982d5,2017-08-31 13:25:52+00:00,"dvr: Don't raise KeyError in _get_floatingips_bound_to_host

We thought _get_floatingips_bound_to_host is not needed but removing the
method caused sending garps for fip that doesn't belong to node during
the full-sync.

This patch just replaces dict lookup with get() method, so fips are
filtered based on presence on the host and if host is not set on fip, it
won't raise a KeyError.

Co-Authored-By: Swaminathan Vasudevan <SVasudevan@suse.com>

Related-bug: #1712412
Related-bug: #1713927

Change-Id: I0fbc772d757fb13b788f9df8d6d7d28d288d054a"
8d2c1bd88b14eefbea74c72f384cb9952e7ee62e,2017-08-31 12:39:08-06:00,"complete docs for revision number

Today the revision_number exists in documentation CLI output in only
some places. This patch updates the doc CLI output to include the
revision_number in the remaining places.

Change-Id: I8000005752c4dbaa7cf7fd12d2c281abb855ae19
Closes-Bug: #1703234"
1a5b796b0639593eaee36be5a7b3ac371884d67d,2017-08-31 19:23:46+00:00,"fullstack: skip test_mtu_update when DHCP agent is not in rootns

The test case requires access to devices created by DHCP agent. When the
agent is deployed with linuxbridge agent, we start it in a host-
namespace, and then it creates its own qdhcp- namespaces for dhcp ports
inside the host- namespace.

This could be solved by calling:
ip netns exec host-* ip netns exec qdhcp-* ip link show ...
but ip_lib doesn't support constructing such commands.

Of course, we could extend ip_lib to support this use case, but
currently we have larger dragons to fight. We will revisit the skip once
all agents are moved to namespaces as planned by jlibosva@.

This patch merely disables the test case if DHCP agent is running in a
namespace. We may revisit it when and if we feel comfortable making
significant changes to ip_lib.

Change-Id: Ieea83bf2959654f98b1dc4d7aa17138d0626ec40
Related-Bug: #1671634"
a521bf0393d33d6e69f59900942404c2b5c84d83,2017-08-31 20:28:53+00:00,"Make use of -w argument for iptables calls

Upstream iptables added support for -w ('wait') argument to
iptables-restore. It makes the command grab a 'xlock' that guarantees
that no two iptables calls will mess a table if called in parallel.
[This somewhat resembles what we try to achieve with a file lock we
grab in iptables manager's _apply_synchronized.]

If two processes call to iptables-restore or iptables in parallel, the
second call risks failing, returning error code = 4, and also printing
the following error:

    Another app is currently holding the xtables lock. Perhaps you want
    to use the -w option?

If we call to iptables / iptables-restore with -w though, it will wait
for the xlock release before proceeding, and won't fail.

Though the feature was added in iptables/master only and is not part of
an official iptables release, it was already backported to RHEL 7.x
iptables package, and so we need to adopt to it. At the same time, we
can't expect any underlying platform to support the argument.

A solution here is to call iptables-restore with -w when a regular call
failed. Also, the patch adds -w to all iptables calls, in the iptables
manager as well as in ipset-cleanup.

Since we don't want to lock agent in case current xlock owner doesn't
release it in reasonable time, we limit the time we wait to ~1/3 of
report_interval, to give the agent some time to recover without
triggering expensive fullsync.

In the future, we may be able to get rid of our custom synchronization
lock that we use in iptables manager. But this will require all
supported platforms to get the feature in and will take some time.

Closes-Bug: #1712185
Change-Id: I94e54935df7c6caa2480eca19e851cb4882c0f8b"
41e6f02bf253e82fcc4baf4b77795ad831b58b43,2017-08-31 13:56:19-07:00,"Pecan: process filters at end of hook pipeline

Separate user-applied filters from policy-enforcement
filters processing and put it at the end of the pipeline
so users can't put filters on the API request that impact
the fields available to the hooks.

This prevents a filter excluding the ID field from breaking
pagination.

Change-Id: I05f4582fb1e8809740d473e24fa54483e040a6c8
Closes-Bug: #1714131"
afd1995d91353874d04ac2d12be0162cea27c1d1,2017-08-31 15:22:27-07:00,"DVR: Fix agent to process only floatingips that have a host match

The agent is not currently checking for the host bound
before configuring the floatingip. That leads to
floatingips being configured on multiple hosts.

This is a partial fix on the agent side to prevent
configuring a floatingip ip that is not bound to
this host.

Related-Bug: #1712412
Related-Bug: #1713927

Change-Id: I1bc8c42425f97234f56412a2f109a996d9f896de"
e76a575b0570880d4209ff1ea73f82c01e4a6e24,2017-08-31 17:48:18-07:00,"Pecan: add calls to resync/dirty quota usages

Add calls to dirty and resync the quota engine during
DELETEs and GETs respectively. This matches the old API controller
behavior and will be covered when the unit tests are switched to
use pecan in [1].

1. I76dc23fb7b96d82b0da50285bd0aac76142e81e5

Closes-Bug: #1714389
Change-Id: I1fb6b471e0e7cbf9b10dd14233931be94af38a41"
bf36f8c934b49310103a1b1831c9f7c8a0d14adf,2017-09-01 06:31:37+00:00,"Pecan: set tenant_id field when project_id set

Add logic to pecan to add 'project_id' as a mandatory policy
field whenever 'tenant_id' is specified as a policy field.
This logic was added to the previous controller code to ensure
that 'project_id' was queried in the database whenever 'tenant_id'
was required by the policy engine and the user had fields set.

Closes-Bug: #1714378
Change-Id: I3652fbc50ce0c9a7cd1cc193e0933cf0373ecb54"
d538ea774b8a6b5450cf68648f5de89a0f0dcb89,2017-09-01 12:37:13-06:00,"update static urls for pike

A number of places in our docs have static links to ocata based content.
What's more some of our doc content lives at a new URL.

This patch updates our docs to ref pike rather than ocata.

This patch should be backported to pike.

Change-Id: Ieefaf7a78dce03faf9df1ca7d596bbd81230805b
Closes-Bug: #1714516"
f998e8d96552d8c0e2d2421a4e2a8583ad2cfffb,2017-09-01 20:37:04+00:00,"test_ha_router: wait until two agents are scheduled

We need to give some time to neutron-server to schedule the router to
both agents. This reflects what other fullstack test cases do.

Change-Id: I3bce907262635c76b5444fab480f7157172e77a2
Closes-Bug: #1667055"
fb76c4f57d7d1cb6e74602d24a166c5d173917e0,2017-09-01 21:38:50+00:00,"Pecan: Add missing emulated bulk create method

This adds the simple bulk emulation logic that was present
in the old legacy controller for plugins that do not support
bulk operations.

Closes-Bug: #1714355
Change-Id: I4ff02b9c5c007847edd18ec4ad6794257dd79576"
700d609ace818457093dc653264f84ffbdae4d86,2017-09-01 23:53:28+00:00,"Pecan: strip duplicate and empty user fields

Remove duplicated and empty fields from users requests
in Pecan to preserve the old legacy API controller behavior.

Closes-Bug: #1714384
Change-Id: I1afc24b146a8fcc6c8ebae708f32dd7c1795292e"
e7c75d180ba050f76ac414f249b38b5b22c1b42a,2017-09-02 00:49:14+00:00,"update docs to use nova_metadata_host

nova_metadata_ip is deprecated in favor of nova_metadata_host. This
patch updates our docs to use the latter matching our intent on removing
the former.

Change-Id: I6a8e76acc2f01541f92123e46987b0f2f0fbf1cd
Closes-Bug: #1669955"
8f3c27cd853d9e4d029939cbd8b371bf880c2cae,2017-09-02 23:25:30-07:00,"DHCP provisioning block only on port addr update

Don't add a DHCP provisioning block during port updates
unless the IP address or MAC address has changed. There is
no point in waiting on the DHCP agent after a port update
unless the addresses have changed. We already wait on the
DHCP agent after the port has been initially created so
we will be guaranteed that a reservation exists for the
correct MAC/IP in the DHCP agent.

Closes-Bug: #1714655
Change-Id: Idef5994e274ea99260367edb8331fd10b98a1432"
1d3c404d7305d0e5dc61c85476fdebb6df8e88f7,2017-09-03 06:37:38+00:00,"Pecan: add missing body to delete notify payload

The legacy API controller included the original object in the delete
notification body payload. This adjusts pecan to do the same.

Closes-Bug: #1714386
Change-Id: I5b2f87e7b1eccceedb821506bb2de43b764fde8d"
d5b4f242d4242206be7c7efc0cda1842b6d04c0b,2017-09-03 18:54:28-05:00,"Document dns_domain for ports attribute

This commit adds to the Networking Guide chapter for DNS integration the
workings of the dns_domain attribute for ports.

Change-Id: Ib775fe3d44b766c457875a04460ad90d1e377974
Closes-Bug: #1710203"
07ddb11685663a00ff963549ad169614d2592c30,2017-09-04 12:29:01+00:00,"Match load_rc_for_rally logic to load_rc_hook

This makes the rally extras loading logic compatible
with devstack-gate and unblocks the rally job.

Closes-Bug: #1714901
Change-Id: I80c9a155ee2b52558109c764075a58dfabee44d4"
38d058c2cf0746e2452a0c2c704c914c836de9e7,2017-09-05 08:50:59+00:00,"Fix generation of thousands of DHCP tap interfaces

As reported in the bug, there may be an case where an empty
namespace file in /run/netns, but the namespace not
actually exist. In such case the DHCP agent throws an error
when pluging the interface in the dhcp namespace.
This may also result in many tap interfaces
getting generated in OVS bridge or Linux bridge.

This patch fixes the above bug by unpluging the tap device
in the bridge if exception occurs, this can prevents the tap
interfaces generate.

Co-Authored-By: Brian Haley <bhaley@redhat.com>

Change-Id: I4a197edd180887ad36317ddb2f0c0e7bd2e34e30
Closes-Bug: #1561695"
f1b43395e787e8f6d91436bec42f79a6ea0858bd,2017-09-05 18:59:30+02:00,"linuxbridge-agent: add missing sysctl rootwrap entry

Sysctl was missing from the linuxbridge plugin rootwrap
configuration file. This was causing failures in the
linuxbridge agent when networks are created:

Rootwrap error running command: ['sysctl', '-w', 'net.ipv6.conf.eth0/557.disable_ipv6=1']:

NOTE: this bug was hidden by the fact that sysctl was
covered by the iptables-firewall.filters until recently,
when it was removed (see https://review.openstack.org/#/c/436315/).

Change-Id: Id20175df30d4d6039fb42e722d03f39521f6a499
Closes-Bug: #1715194"
effa12889ba3393ec22d9a44e21cf00768643730,2017-09-06 03:22:26+00:00,"ovsfw: Fix port_ranges handling

ovsfw ignored port_ranges when a SG rule protocol was sctp or given
in a number rather than a token.  This commit fixes that.

Change-Id: I6c810a152990246d42d98c3673c4b5ee126ebb4b
Closes-bug: #1708580"
b82db0a9f24e16f426d9f693b7971bef4e080a7f,2017-09-06 03:26:44+00:00,"ovsfw: Fix up port_range and ICMP type/code handling

port_range_min/max should be read as ICMP type/code for ICMP(V6).

Change-Id: I65157037038d11464902c0311eb4c54b84f60c72
Closes-bug: #1708358"
b2a6b9087b64a7454985f14251cb0022adae70a5,2017-09-08 14:48:46+09:00,"Add a new method get_router_info to L3 agent extension API

This can be useful for VPNaaS agent extension. [1]

[1] I0b86c432e4b2210e5f2a73a7e3ba16d10467f0f2

Related-Bug: #1692128
Change-Id: I5cfeb8db501b0cdba95c003ec6281c6a55a73b49"
183c82b59a69a308aff13829a153460207aba8b6,2017-09-08 07:38:04-06:00,"doc br_netfilter prereq for linux bridge

This patch updates our install documentation to account for the fact
that linux systems must have net.bridge sysctl knobs.

Change-Id: I8b65e2ef22d57cd6c501f25a33af8c1900f20497
Closes-Bug: #1672922"
9c062c6999312bd2d11ab4968141caae1b7e2a24,2017-09-08 17:36:37+00:00,"DVR: get_router_cidrs not returning the centralized_floating_ip cidrs

get_router_cidrs is over-ridden in dvr_edge_router. This function
is not returing the centralized_floating_ip cidrs when called.

This patch fixes the issue.

Change-Id: I95a2e3b1b1474aba15a7cdceeb4ed951b672e2ca
Closes-Bug: #1712728"
8c3cb2e15b48f5e2b0c3d22550f00f3c7adc7f33,2017-09-08 17:37:57+00:00,"DVR: Multiple csnat ports created when RouterPort table update fails

When router interfaces are added to DVR router, if the router has
gateway configured, then the internal csnat ports are created for
the corresponding router interfaces.
We have seen recently after the csnat port is created if the
RouterPort table update fails, there is a DB retry that is happening
and that retry operation is creating an additional csnat port.
This additional port is not getting removed automatically when the
router interfaces are deleted.
This issue is seen when testing with a simple heat template as
per the bug report.

This patch fixes the issue by calling the RouterPort create with
delete_port_on_error context.

Change-Id: I916011f2200f02556ebb30bce30e349a8023602c
Closes-Bug: #1709774"
07bfe6adb96ee0a88b9dd54d7e4b0bb684b63e3c,2017-09-08 10:50:12-07:00,"CountableResource: try count/get functions for all plugins

It's of no guarantee that core plugin implements counter/getter function
for a CountableResource. Instead of just trying core plugin, try every
plugin registered in the directory.

To retain backwards compatibility, we also make sure that core plugin is
checked first.

Change-Id: I5245e217e1f44281f85febbdfaf873321253dc5d
Closes-Bug: #1714769"
444f802012d30d912f300ad05cdf201b8c48f347,2017-09-08 10:56:31-07:00,"Pecan: Add missing body validations

This changes the pecan body validation to bring parity with the
old legacy controller code.

* If a body is present on POST/PUT, it must be a JSON dict
* DELETEs to an item must not contain a body
* A POST request to the standard collection controller must have
  resources in the body.

Closes-Bug: #1714348
Change-Id: I1568285c28d227bacf038b3667466a20d3947ca9"
d00a50aad11465d904663dea14b3814017bcff75,2017-09-08 15:34:49-04:00,"Refactoring config options for ml2 config opts

Refactoring neutron ml2 config opts to be in neutron/conf/plugins/ml2.
This would allow centralization of all configuration options and
provides an easy way to import.

NeutronLibImpact

Change-Id: Ibc5a9ab268578c243ef13f7e0041bacd6c0c410b
Partial-Bug: #1563069
Needed-By: Id0a97dda7718f06e33b2d30ce01cdcb3e9a46f7d"
31dc80a0c22ae1cbacad1694f799cbdc4228cfd4,2017-09-09 00:10:21+00:00,"Pecan: add plugin pagination/sorting validation

This adds the validation to ensure that the plugin supports
native sorting when native pagination is used.

This patch doesn't add a unit test for this because it will
be covered in the switch to pecan for the existing unit tests
in I76dc23fb7b96d82b0da50285bd0aac76142e81e5 (which is how this
bug was discovered).

Closes-Bug: #1714381
Change-Id: I6443832357c91fe791853a374cdec11dd1f968ea"
fe8107a8179deca093463bbc95b6ba8b54915bf7,2017-09-10 12:32:35+00:00,"Pecan: fix logic of hiding authZ failures as 404s

Change [1] altered the behavior of the legacy API controller
to do the sane thing and return an HTTP 403 instead of a 404
whenever a user got a policy authorization failure when trying
to mutate a resource they have the permission to view.

This carries the same logic over to the pecan API.

This also adjusts the logic for GET requests to return 404s
instead of 403s to match the resource hiding behavior of the
old controller.

1. I7a5b0a9e89c8a71490dd74497794a52489f46cd2

Closes-Bug: #1714388
Change-Id: I9e0d288a42bc63c2927bebe9c581b83e6fbe010b"
4d228320921fbb74d8e5c88c860099fc298a88fc,2017-09-10 09:06:09-07:00,"Remove gw_port expire call

This was initially added as part of the patch here:
I09e8a694cdff7f64a642a39b45cbd12422132806
However, it doesn't serve a purpose anymore because nothing
references the gateway port DB object before it is deleted.

Closes-Bug: #1716243
Change-Id: I87b614f8aef73aab8b5dd8217c99db1fe3ade742"
7adb297fed6865a4e0bfb498d7e8d019c588c522,2017-09-11 08:52:20-06:00,"doc for quota details extension

This patch adds a blurb about the quota detail API extension to wrap
up the doc aspect of this feature.

Change-Id: I3de3a686d70d74e10d01880c1ec0f4dd5b047038
Closes-Bug: #1704914"
bc5ca57910c1bd6bbe8320dc67ab086a00a9eb39,2017-09-11 09:23:58-06:00,"doc inherit segmentation type for trunking

This patch updates our docs to include some details on the 'inherit'
segmentation type supported by trunk subports. The API is updated in
I0772463d71cbb6703345e66f52ad6c02163a00ff.

Change-Id: I9bebf8a3543bff43cf6e80a0d4523b0c9b5c6eb5
Closes-Bug: #1679999"
1b4559a5e498eac31d051ba5d1c5a86597588560,2017-09-11 13:36:20-06:00,"fix missing l2pop config option docs

The l2pop ML2 mechanism driver's configuration options are no longer
being generated during the docs build. This patch adds the l2pop
config options back into the ml2 sample config generation and also
fixes a link to them in the admin docs.

This fix is a candidate for backport to pike.

Change-Id: Ia26b4d1995690e7291b6476dc683271e12de09ab
Closes-Bug: #1714528"
4833852abb864230daecf97bc672ad9a4a9c4267,2017-09-11 14:00:09-06:00,"Treat lack of segment info in port object as unbound

A push notifications change added segment information
to the get_device_details() RPC call, but sometimes the
segment information is not present, resulting in an
AttributeError.  Just treat the lack of segment info
as if the port was unbound, since the port is probably
in the process of being removed.

Change-Id: I631c6e1f02fa07eed330c99a96aa66d747784f37
Closes-bug: #1714068"
b184558ab6a61571160346818dcf220d925c5b30,2017-09-12 15:01:50+03:00,"ovs mech: bind only if user request switchdev

In I77650be5f04775a72e2bdf694f93988825a84b72 we added
vnic_type direct to the ovs mechanism drivers supported
vnic_types. This cause problems when working with ovs and sriovnicswitch
mechanism drivers in that order.  In this case the ovs will bind
the direct port instead of the sriovnicswitch.

This change make ovs mech driver to bind the direct port only
if user requested --binding-profile '{""capabilities"": [""switchdev""]}'
in the direct port if a user don't request this capability the SR-IOV
legacy NIC mode is used.

When enable-sriov-nic-features will be implemented in nova and
libvirt will expose the switchdev capability then nova will be
able to select a host which supports SR-IOV nic with switchdev
mode.

[1] - https://review.openstack.org/#/c/435954/11/specs/pike/approved/enable-sriov-nic-features.rst
[2] - https://www.redhat.com/archives/libvir-list/2017-August/msg00583.html

Closes-Bug: #1713590

Change-Id: I0b5f062bcbf02381bdf4f694fc039f9bb17a2db5"
3e341a9941607a404ce5219292464c423a3fa5fe,2017-09-12 14:20:12-06:00,"Fix post gate hook to accommodate for new os-testr

New os-testr uses stestr under the hood, which creates .stestr but not
.testrepository directory in the current dir. Other than that, it
doesn't seem like there is any difference in the format or names of
files generated in the directory.

Change-Id: I82d52bf0ad885bd36d2f0782a7c86ac61df532f2
Closes-Bug: #1716746"
1edd0c792499dbd6c59257a10c901360941dbcf6,2017-09-12 22:30:16+00:00,"Don't trigger DVR port update if status the same

The DVR path was missing logic to avoid triggering DB updates
even if the status was already correct. This was leading to a
constant back-and-forth updating between the agent and the server
effectively not changing anything but the updated_at timestamp
and the revision_number.

Closes-Bug: #1716522
Change-Id: I88c678ac8a562db91c71edbc71dc43d1ada6c452"
67b9402ea65677ab5e0a930a16bfbba25eac376b,2017-09-12 22:50:04-07:00,"Fixing external hyperlink.

Fixes a documentation hyperlink issue -:

* Goto doc page - https://docs.openstack.org/neutron/latest/contributor/internals/sriov_nic_agent.html

* Refer the hyperlink for text   ""SR-IOV Passthrough For Networking""
  It is currently broken.

* It should point to https://wiki.openstack.org/wiki/SR-IOV-Passthrough-For-Networking
  instead of the current one
  https://wiki.openstack.org/wiki/SR-IOV-Passthrough-For-Networking/

* This fixes the hyperlink on the doc page.

Closes-Bug: #1715629
Change-Id: I863fde51f488b76cc2613dbbc59455801cfd4195"
cfb3dc5c2db7ae0bb07f651507db333c93b742ef,2017-09-13 02:38:33-07:00,"Fixing hyperlink issue

Fixes a documentation hyperlink issue -:

* Refer to doc page -:  https://docs.openstack.org/neutron/latest/contributor/internals/openvswitch_agent.html
  for string  ""Networking in too much detail""

* Hyperlink for above string is broken
  It is pointing to http://openstack.redhat.com/Networking_in_too_much_detail#Networking_in_too_much_detail

* Instead it should point to  http://openstack.redhat.com/networking/networking-in-too-much-detail/

* This fix would correct the hyperlink on the doc page.

Change-Id: I53f10286a109629d72f8d7a3e8db46568fdb72bf
Closes-Bug: #1712787"
0dcf3d20c2e5c2592e9674e7277acce4eff98341,2017-09-13 19:01:37+00:00,"Remove duplicated ICMPv6 RA rule from iptables firewall

Change Ibfbf011284cbde396f74db9d982993f994082731 moves
generation of ICMPv6 RA rule from being hardcoded
in iptables_firewall to being generated on server
side and passed to agent.

Unfortunatelly it wasn't removed from iptables_firewall
and it was still added to rules which should be applied
by firewall driver.
That caused issue with warning message about duplicated rule.
detected

This patch removes this hardcoded rule to stop logging messages
about duplicated rules.

Change-Id: Ic5e95405d4dd8ffbe8ec5b053aed257aec91b1c8
Closes-Bug: #1708465"
c56a8c1b7ef554ea93a2def2c1ffab3e82f1592e,2017-09-15 13:25:35-06:00,"tests: generate unique network ids for L3HARouterVRIdAllocation

There is a bug in base test class where self.db_objs may end up with
non-unique values after update_obj_fields call. While we are looking at
fixing the underlying issue in the base class, this patch merely makes
L3HARouterVRIdAllocationDbObjectTestCase to not reuse the same network
id for all test objects.

Change-Id: Ib4e5ffa1df5adba5460d7e66d1c21b63745a7141
Related-Bug: #1717046"
92f1052d3c5d5bc7b89e49fdfff8f0ef24832a1c,2017-09-15 20:57:45+00:00,"DVR: Fix bad arping call in centralized floating IP code

When the centralized floating IP code was added, the call
to send_ip_addr_adv_notif() had an incorrect argument,
leading to this failure in the l3-agent log:

TypeError: range() integer end argument expected, got ConfigOpts.

Closes-bug: #1717597
Change-Id: Ib0a5162912caac0508e19996fb13e431af39cfc4"
653ed384d69f723e819e44c6f9b45ce108186c05,2017-09-18 15:40:30+02:00,"Update config-sfc documentation

* Use openstack CLI in command examples
* Add a note on additional parameter needed with default OVS driver
* Mention project_id instead of tenant-id

Change-Id: I249ae19861b39c9a2b5ddbfcd9561bace2e33906
Related-Bug: #1717894"
458d38e2c73f49d2b137a8092b72c0ad9c69756b,2017-09-18 22:39:44+00:00,"Don't assume RPC push object has an ID

Test coverage is provided by scenario job. We just
need to get it voting. :)

Closes-Bug: #1718063
Change-Id: I85f638d22206e5621366475009dddd519dfbc476"
140b99812efc41a8fe987be4f93af38a3c74ecfd,2017-09-19 15:20:14+09:00,"Add API tests for Tag resource with standard attribute

This patch added some api tests for tag resource with standard
attribute, which are securitygroup, floatingip, trunk, and policy.

In TagFilter test, identifier of resource was changed from name to
id because floatingip doesn't have name attribute.

Change-Id: I3a20abe00d4cb32b1a84aeb7b05429e776244c3e
Related-bug: #1682775"
47f43070e002663b73408256dea852ee5578b502,2017-09-19 19:12:38+08:00,"Fix missing content of neutron database creation.

Change-Id: I0a45b38d77c7f468472ae48541721636fb6fb05c
Partial-Bug: #1718125"
f8fb73aa30f075712b5ca18c78b88d6ae9e60566,2017-09-19 12:20:44-07:00,"Dont log about skipping notification in normal case

Avoid logging about a missing resource for normal cases
where there is no resource in the request (e.g. HTTP GET's,
custom actions, etc).

Change-Id: I04c6b6737f238ca6250869b92e1d0771b4f95f22
Partial-Bug: #1707307"
fd1403fd9a971cf3cbd863fa33ca68eb019fbdc1,2017-09-19 19:33:43+00:00,"Fix for race condition during netns creation

In some cases if ip_lib.IPWrapper.ensure_namespace() method
is called more than once for same namespace in very short
period of time it could raise error that ""File already exists""
for second call of this method.
It happens often e.g. in fullstack tests.
Reason of such problem is in Netlink protocol which is used
by iproute2 to communicate with kernel. This protocol, according
to http://man7.org/linux/man-pages/man7/netlink.7.html is not
reliable so it is not guaranteed when the message will be
delivered to kernel and when action will be really executed.
Because of that if on quite loaded host ensure_namespace() method
would be executed twice it can lead to error described above.

This patch is changing way how ensure_namespace() method works
to avoid raising ProcessExecutionError exception with this
error message.

Closes-Bug: #1717582
Change-Id: I1898426789c85ce1faa97665bfd47f1fa38ef727"
7bff99ac4a5ef0d4b2cc6f77f5679bb8e01f86d7,2017-09-21 10:27:49-04:00,"DVR: Always initialize floating IP host

With a recent change to the neutron server code, the server was
processing floating IPs that were not bound to the respective
agent during fullsync operation.

Change to always initialize floating IP host info so callers
can determine if info should be sent to an agent or not.

Also changed the logic that decides when the server should
send a floating IP to an agent to be easier to understand.

Closes-bug: #1713927
Change-Id: Ic916225e0a11c3fb8cd94437ca063e0d3295a569"
fc6e9a71d80aaed4a804c4922cc2094b9e6d1857,2017-09-21 15:24:03-06:00,"add doc link validation to release checklist and tox

This patch updates our doc conf.py to support the linkcheck builder in
addition to adding a new 'linkcheck' target in tox to run the builder.
Also the release checklist is updated suggesting the linkcheck tox
target be run prior to a release.

Change-Id: Ia7c282b7331f0b624bb3324f27dfec223cf414f7
Closes-Bug: #1716005"
017185496c9f3f30b4b819ead86dd5bfe5a72597,2017-09-21 23:56:43-07:00,"Ensure default security group before port update

The default security group can be deleted and updating
a port will recreate it. However, we should do this in
the BEFORE_UPDATE event handler rather than waiting for
it to happen inside of the port update transaction which
violates the transaction semantics of the security group
callbacks.

Closes-Bug: #1718282
Change-Id: I1ce8b558b0a831adcebead512d97554173423955"
45f1404c68553fd01f386522dd16841526c68dbf,2017-09-22 11:38:16+00:00,"Include all rootwrap filters when building wheels

The current method of specifying each rootwrap filter
in the file list is prone to errors when adding or
removing filters. Instead of relying on a manually
maintained list this patch just includes all the files
of the correct naming convention from the applicable
folder. This is simpler and easier to maintain.

Closes-Bug: #1718356
Change-Id: I7f8c55f63d1c5a85a6a92062e918426f7d2d3c35"
45be804b4069599e8eda9820084fcf11fb94167b,2017-09-22 14:13:05+00:00,"ovs: log config options when all of them are registered

Otherwise we don't see some of them for the agent, for example,
AGENT.root_helper is missing.

To make sure the logging is as early as possible, and to make sure that
options that may be registered by extensions are also logged, some
refactoring was applied to the code to move the extension manager
loading as early as possible, even before agent's __init__ is called.

Related-Bug: #1718767
Change-Id: I823150cf6406f709d1e4ffa74897d598e80f5329"
40ef31459091f19f362fbc6983a83ddccc183207,2017-09-22 12:44:40-04:00,"Remove security_groups_provider_updated rpc code

In Pike, the agent side of security_groups_provider_updated()
RPC code was changed to a NOOP when the provider rules were
changed to be static, https://review.openstack.org/#/c/432506
Now that we're in Queens we can deprecate it.

Change-Id: Ie018ff653633d3524f0e80c5e172a5d01bdad437"
3d1b33633fffcc2ea5731d381fe9123a623292b3,2017-09-26 11:52:35+08:00,"Fix _verify_gateway_port() in multiple subnets

The original code asserts that gw port's fixed_ips allocated from
the first subnet of external network. This will fails if external
network have multiple subnets.

Change-Id: I1a2d433b36a0cb72fc3e6dc3b377e0ca56fc6f7a
Closes-Bug: #1714007"
bb550de3d78e58bb811dc5ad1da69ddb356a3f9d,2017-09-26 08:38:31+00:00,"Linux Bridge, remove unnecessary logic to retrieve bridge name

In [1], the function ""get_existing_bridge_name"" retrieves the value of a
dict using the method get. Before this, it checks if the key value used is
""True"". This check is not needed using the dictionary ""get"" method.

[1] https://github.com/openstack/neutron/blob/11.0.0.0rc3/neutron/plugins/ml2/drivers/linuxbridge/agent/linuxbridge_neutron_agent.py#L155

Change-Id: Iba020c6b297228ae48bbd2a19f540b0152570317
Closes-Bug: #1719275"
38b3d4e16ac76d97f64f264c68ef9b88d66e0324,2017-09-26 11:40:29-04:00,"ml2: fix update_device_up to send lm events with linux bridge

In case of a live migration and with linux bridge the events are not
sent to Nova, because the port UUID returned by _device_to_port_id may
be a truncated UUID and the current plugin._get_port() can't find it.

Related-Bug: #1414559
Change-Id: Icb039ae2d465e3822ab07ae4f9bc405c1362afba
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@redhat.com>"
fdd29a207a430ec9c9f74afd093b70b0c0b2a765,2017-09-26 21:11:03+00:00,"Fix the link to the rally docs in README.rst

The links to the rally docs are invalid.
This patch fixes it.

Change-Id: I8713a8cdf317d385e770528111b0ac376f89391f
Closes-Bug: #1718819"
d739d01b6c98e082127af8fa6d4130e854ff413d,2017-09-27 07:44:39+00:00,"of_native: Use int for comparing datapath ID

Previously, DP ID was converted to integer and then back to string. As a
consequence of the conversion, DP IDs like 000123 were converted to 123
losing leading zeros. In case self._get_dp_by_dpid() method raises a
RuntimeError exception current DP ID of the bridge was compared to
cached DP ID and if IDs were different, original exception coming from
ryu library was swallowed. As conversion for cached DP ID removes
leading zeros, original exception was always swallowed if bridge's DP ID
started with zero.

This patch uses the integer for comparison between current and cached
bridge DP ID hence any exception coming from ryu is not swallowed.

Closes-bug: #1718235

Change-Id: I445aa61acc758b56c51a9403df4d92d9c1d40ace"
0456515a7a06ee96c2929c684a82737a1067ce72,2017-10-03 17:05:03+00:00,"br_int: Make removal of DVR flows more strict

As ingres traffic to instance ports when using DVR uses same matching
openflow rule as openvswitch firewall driver, it happens that setting
admin_state_up of router deletes firewall rules.

This patch makes the deletion more strict because DVR and ovs-firewall
flows differ in priority. Thus using priority when removing DVR flows
won't affect ovs-firewall flows.

Closes-bug: #1721084

Change-Id: I4eb61b2824579a4f8ba219cd1b1dcf57d38ebc89"
3a098ea0e88e7dc42897c43d84e66962c9b4c4dd,2017-10-04 15:42:50-04:00,"Refactoring db config options

Refactoring neutron db config opts to be in neutron/conf/db/ and
neutron/conf/agent/database/ so that all the configuration options
reside in a centralized location. This simplifies the process of
looking up the config opts and provides an easy way to import.

Change-Id: I4da9bb48d49b99e8c2b34a5c1b83e7eb95b70b82
Partial-Bug: #1563069"
b9ecb3804c85dedccb578b1e930e68270a3535e1,2017-10-04 20:52:19+00:00,"DVR: Fix centralized floatingip with DVR and HA

When HA is enabled with DVR routers the centralized floating
IPs are not configured properly in the DVR snat namespace
for the master router namespace.

The reason is we were not calling the add_centralized_floatingip
and the remove_centralized_floatingip in the DvrEdgeHaRouter
class.

This patch overrides the add_centralized_floatingip and
remove_centralized_floatingip in dvr_edge_ha_router.py file
to add the cidr to the vips.

Closes-Bug: #1716829
Change-Id: Icc8c5d4e22313448e2066a29dbe509e4345b364c"
27fcf86bcbf4a66f52385f0efea956f13c38d7b2,2017-10-04 20:52:36+00:00,"DVR: Fix unbound fip port migration to bound port

With the current change in allowing the unbound fip
to be associated with the snat node, we are seeing
that all floating IPs that are associated with an
unbound port are created at the snat node.
This is also applicable for floating IPs that are
created just before associating the port to a VM.
We have seen such scenarios in the test cases.

This is the right behavior as per design. But when
the port is bound to a host, the floating IP should
be migrated to the respective host.

This patch fixes the issue by sending notification to
the respective node, when the port is bound and also
clear the fip from the snat node.

Closes-Bug: #1718788
Change-Id: I6b1f3ffc3c3336035632f6a82d3a87b3be57b403"
4f627b4e8dfe699944a196fe90e0642cced6278f,2017-10-04 21:09:28+00:00,"Change ip_lib network namespace code to use pyroute2

Change network namespace add/delete/list code to use
pyroute2 library instead of calling /sbin/ip.

Also changed all in-tree callers to use the new calls.

Closes-bug: #1717582
Related-bug: #1492714

Change-Id: Id802e77543177fbb95ff15c2c7361172e8824633"
40866acd02a5ecd7fc6705578a82ea79946549a2,2017-10-09 08:38:40-06:00,"use new payload objects for *_INIT callbacks

Part of the work we did while rehoming the callback modules introduced
the notion of payload objects [1] to replace the unstructured kwargs
used today. When using payloads event sources need to use publish()
rather than notify() to trigger the callback(s) and pass along a payload
object (if needed).

This patch begins to move us onto the payload objects by updating
BEFORE_INIT and AFTER_INIT event types to use the payloads.

NB: This change needs to be in sync with consumers using the events
herein. Once publish() is used with payloads, callback functions must
also define the payload kwarg to follow suit. Therefore such consumers
need to depend on this patch.

NeutronLibImpact

[1] https://docs.openstack.org/neutron-lib/latest/contributor/callbacks.html#event-payloads

Change-Id: I9194c7857f10392149159071cda8e080e93adc10"
cda315c54f52a35b45fef6bb3c9457f3520550fe,2017-10-09 08:43:32-06:00,"clarify agent file name in config qos doc

This patch clarifies the agent file to update when configuring QoS as
the actual file name will depend which agent is being used.

Change-Id: Ie53e30c329e4b0bcaadc0b437ed783c7e0c00dbb
Closes-Bug: #1628533"
2ac329b90274ecbf7dd3234b39c74dc974658c30,2017-10-09 14:49:49-06:00,"clarify deferred fixed IP assignment for ports on routed networks

This patch clarifies the routed network configuration doc with respect
to when a fixed IP is assigned to a port on a routed network. For
more details see related bug.

Change-Id: Id8e97afdfc488069ac3a910e017c34b085b4eb36
Closes-Bug: #1718320"
a789d23b0242ae3b4c13856e96a72a3acc5a3697,2017-10-09 17:43:47-04:00,"Change OVS agent to update skipped port status to DOWN

When the OVS agent skips processing a port because it was
not found on the integration bridge, it doesn't send back
any status to the server to notify it.  This can cause the
port to get stuck in the BUILD state indefinitely, since
that is the default state it gets before the server tells
the agent to update it.

The OVS agent will now notify the server that any skipped
device should be considered DOWN if it did not exist.

Change-Id: I15dc55951cdb75c6d87d7c645f8e2cbf82b2f3e4
Closes-bug: #1719011"
9d74de162a2dd7bf5c2df59ccf9ff812f8e46387,2017-10-10 13:11:02+00:00,"ovs-fw: Remove iptables rules on hybrid ports

ovs-firewall now scans ports on its bridge and stores those that have
prefix 'qvo', which means such ports use hybrid plugging. Because
ovs-agent makes a full-sync when it's started, all ports that reside on
the node are passed to firewall driver to refresh firewall, a new helper
was added.

In case the initial scan noticed hybrid plugged, an iptables firewall
driver is instantiated and each port is passed down to helper that
removes iptables rules for given port.

Once all ports are processed, a mark is added to ovsdb to avoid cleaning
iptables in the future. That means next time ovs-agent is started
iptables firewall will not be instantiated.

NOTE: Fullstack tests are a great candidate to cover the migration but
      I'll leave it as TODO after we stabilize fullstack tests.

Closes-bug: #1721895

Change-Id: I662c310133a089bf29b734c539e57a8cff923074"
1cf6806043cee21ea4afb98c3d18e7b80fb11e80,2017-10-11 09:27:24+08:00,"Add a test csnat port removing in DVR migration

This is an additional test for deleting csnat port when
migrating DVR router to HA router.

Change-Id: I4a2365fe3a64b65034280558ffe6312d8dabd600
Partial-Bug: #1714251"
bb8954a228a9f09995b755fe0e7a347835b8f83d,2017-10-11 16:04:14+07:00,"[log]: implement logging agent extension

This patch introduces generic logging agent extension following
the spec [1].

[1] https://specs.openstack.org/openstack/neutron-specs/specs/pike/logging-API-for-security-group-rules.html

Co-Authored-By: Yushiro FURUKAWA <y.furukawa_2@jp.fujitsu.com>

Change-Id: I1a59367cf23060fb1a0cd9bab6772b22da15c9f0
Partially-implements: blueprint security-group-logging
Related-Bug: #1468366"
ed1c3b021751273e427d47fcf544c56bdabf97bb,2017-10-11 11:51:49-04:00,"Checksum-fill proxied metadata replies

Sometimes a proxied metadata reply can be dropped by
the hypervisor because of an invalid checksum.  Always
fill-in the checksum just like we do for DHCP replies.

Change-Id: I46987da3bf05577ff0a51a490f26cf2be3c3c266
Closes-bug: #1722584"
d8807e2fa921f179f6d89cc2ec32f4af2fa14682,2017-10-11 23:45:06+05:18,"Wrong path of rpc_api.rst in class docstring

Changing rpc_api.rst file path from doc/source/devref/rpc_api.rst
to /doc/source/contributor/internals/rpc_api.rst. Because rpc_api.rst
file is located at this path
doc/source/contributor/internals/rpc_api.rst.

Closes-Bug #1722072

Change-Id: Ic243aab9e3428bfec69db61a94b4129cd768e233"
2f0ffa998a6fb171109196df8c8d3ce9f9f5a215,2017-10-11 14:10:05-07:00,"iptables: don't log lock error if we haven't passed -w

In this case, it's an expected error, and we retry again with -w.

Related-Bug: #1712185
Change-Id: I97bf3032b5cebcbce51a3b3de6cb128ca342bd87"
80085abcd66c8625f830b082bfc6c31b125ddbb9,2017-10-16 18:18:23-04:00,"Stop arping when IP address gets deleted

A recent change decreased the severity of the arping log
message when the interface was found to have been deleted,
but it can also be the case that the interface exists, but
the IP address was deleted concurrently.  Downgrade log
message to info since there is nothing to be done about it.

Change-Id: Ie63d306802d07f7376e87daf5c88672f7d58093d
Related-bug: #1696893"
3a962e5559c8ab12d529f6927802db9b669e09d4,2017-10-17 08:22:10+00:00,"trunk: Fix init_handler() agent parameter

Commit 40866acd02a5ecd7fc6705578a82ea79946549a2 stopped passing agent
object as parameter as it's already referenced by `trigger' parameter.
This leads to an error during notify_after_init() in agents' code and
hence trunk handlers are never initialized. This patch replaces `agent'
reference with `trigger' to correctly initialize handlers.

Change-Id: I808980553056b9fec4e2700c1d5440e42091afbf
Closes-bug: #1722967"
d104ec67c90a9b0a1eae6f40644424b9df4b4156,2017-10-18 10:23:53+09:00,"Add NULL check before passing to in_() column operator

In some cases we may need to pass key=None filters to get_object()
and get_objects() methods, however we lack of NULL check before these
filters reach in_(), which will not return any matching queries in db
layer.

We need to do manual equals matches if NULL element exists in filters,
instead of pass them to in_() operator.

Change-Id: I7980b82e2627b7b097cae0a714d22e680cddd340
Closes-Bug: #1724177"
445ce14ec1037d9df9f03c65b1fd38ef30c03d7b,2017-10-18 10:59:59+09:00,"_test_security_group_precommit_create_event: Check the result of create

Related-Bug: #1724138
Related-Bug: #1698812
Change-Id: I31c07feb88b565970b9b97afacb7a53a5b28c137"
2a7cf9a97476ab1e56c5b3724b0d60cc29e7db1f,2017-10-18 11:00:03+09:00,"create_security_group: Expunge an object selectively

This expunge_all() can detach unrelated DB objects.  Especially
it can have wider effects with surrounding transactions, used by
some of service plugins like networking-midonet L3 plugin.

The problem was exposed by the recent OVO change [1] on
networking-midonet gate jobs.

[1] I5dcf9dc358c1122b2b22a6c4f40ae0b170e2003c

Closes-Bug: #1724138
Change-Id: Ib2227e332c52d2f7225c41f57108c38641348183"
d7e93c52bff5fd0d25767620c838acbdfcc485f4,2017-10-18 09:41:38+07:00,"Add a new method ha_state_change to L3 agent extension

This is needed by VPNaaS agent extension and other advanced
services in case they support L3 HA router.

Change-Id: Ice1b1c2ca97f47312e37379106ed5a6580f100dc
Needed-By: I0b86c432e4b2210e5f2a73a7e3ba16d10467f0f2
Related-Bug: #1692128"
2cea213d94e3ac7675d62491cec6c85253285b92,2017-10-20 16:13:53-04:00,"Do not try and iterate [None] in l3-agent network_update()

Since ri.ex_gw_port can be None, the l3-agent can throw an
exception when looking for ports it might have in a given
network.

Change-Id: I3ab3e9c012022cd7eefa5c609ca9540649079ad3
Closes-bug: #1724043"
d2e14524c9704a65622fcbfec1cf7b81a2178b27,2017-10-21 08:21:10+08:00,"Do not create fip agent port for dvr_no_external node

Change-Id: I6c108806aaf41ee12594d9b0909b1a301c394c64
Closes-Bug: #1723891"
2a479053ecdf0feec7abed6409ac69b75df53520,2017-10-23 09:26:52-05:00,"Security Groups: Test all protocols names and nums

The following operations are enforced by this change:
  * all v4 names/ints can be created in both v4 and v6 networks
  * all v6 names/ints can be created in v6 networks
  * no v6 names/ints can be created in v4 networks

This patch is a follow up to the doc chage:
Iff56c9290d8e86cfc0e2bfa24176f8d1e338a06e

Change-Id: I78dee3b665185d7da9d854a23f1a7c9d6dbe96de
Closes-Bug: #1692134"
6c50ad5858175e2eddeed7a3e28cf8b53c2eb2b3,2017-10-24 11:48:29-04:00,"Always call iptables-restore with -w if done once

In the case where we called iptables-restore with a
-w argument and it succeeded, we should short-circuit
future calls to always use -w, instead of trying
without it, just to fall-back to using it on failure.

While analyzing some l3-agent log files I have seen
lots of ""Perhaps you want to use the -w option?"",
followed by a call with -w, followed by not using it
the next time. Changing this can save one failing
call to iptables-restore.

Change-Id: Icac99eb1d43648c64b6beaee0d6201f990eacb51
Related-bug: #1712185"
907d539df641e684ed29719c863e9665e25a0995,2017-10-26 13:55:22+09:00,"tempest: Sprinkle extension checks

Closes-Bug: #1727180
Change-Id: Ie8fe87bc4b0b36dcf8b7c042149fbe8658e385b1"
2f9c9013e550f8451bd9ba611e333519a417ca80,2017-10-27 17:54:36-05:00,"Change QoS configuration manual

As [1] shows, the controller node hosts the Neutron server but
also agents like L3 and DHCP which require also OVS or LinuxBridge
agent to be running on it.
To enable QoS is required to enable the 'service_plugins' and
the 'extension_drivers', along with the agent section in the plugin
config if the agent is running on this host.

In the network node and the compute node only the agent
'extensions' configuration is needed to enable QoS
on the agent.

[1] https://docs.openstack.org/security-guide/networking/architecture.html

Closes-Bug: #1720077

Change-Id: I14128aabe0a9209c31a1bd4c76eed1182364ccdf
Co-Authored-By: Slawek Kaplonski <slawek@kaplonski.pl>"
45609a196fd575aa95c7afeb37a47b4bca810800,2017-10-28 08:50:38+02:00,"Correct link in config-ml2.rst

Change-Id: If52835c2fcdb2391fff986dc1fbcc04da0815ff6
Closes-Bug: #1727941"
fe1c8da7682dce5dcc08a4e4ecdbc0721dcb5e4c,2017-10-30 17:28:05+08:00,"Modify the wrong command in config qos doc

The example of ""detach a port from the QoS policy"" is
wrong in config qos doc.

OpenStack client don't display info about ""Updated"" after
set or unset operation. Egg, associate the created policy
with an existing neutron port, or detach a port from the
QoS policy. It is the same as network.

Also, OpenStack client don't display info about ""Updated
or Deleted"" when we modify or delete rules from Qos policy.

Change-Id: Idbc1877e85a13faca150307b3e773c1ea5333b77
Closes-Bug: #1727132"
7b8289253c355f39ac84bc6ea36d265a8be0e381,2017-10-31 16:20:28-04:00,"Fix callers of get_devices_with_ip() to pass addresses

If callers of get_devices_with_ip(), or
device.addr.list(to=address) pass an ip_cidr, it
could match any ip_cidr in that range on the interface.
Callers need to pass the IP without the prefix portion in
order to match it exactly.  Added a helper utility to
strip the cidr part from a ip_cidr.

Determined the unit test for this can't actually check
this case since we are mocking the return value from
/sbin/ip, so modified it to just make sure the dict
is correct.

Added a functional test that adds two IP addresses in
the same IP range to verify that we actually filter
correctly when a 'to=IP' is specified.

Change-Id: I3a95b3bb72a43f322ad23892d8959398aac22a1c
Closes-bug: #1728080"
0bbfad2de7fd4b858bd6068a394c8baf5b58cc4a,2017-11-01 09:44:26+09:00,"Reorder checks in apply_filters in db/_model_query

Function _kwargs_to_filters() in objects/db/api.py creates a filter
dictionary where all the values are made iterables except in the case
of StringMatchingFilterObj objects. As a consequence, when processing
such a filter, function apply_filters() in db/_model_query.py must
check if a value is a StringMatchingFilterObj before assuming it is
an iterable.

Change-Id: I1b43a06f6e35eaa61c6e6770076a167e6ee83987
Closes-Bug: #1724177"
51758c8c39e48d6e2d8b8c24b5fa0ffaf2861f17,2017-11-01 07:35:42+00:00,"Adding OVS Offload documentation

Closes-Bug: #1705772

Change-Id: I0923609e172b1051e9df99a464b22c3fba440ee2"
ae12745b85b143258ce7d0116d0c89af324c560f,2017-11-01 20:26:07-04:00,"Add RBAC access_as_external unit tests

Currently, most of the RBAC tests in [1] are related to shared.
We can add some tests to cover the access as external situation.

[1] https://github.com/openstack/neutron/blob/master/neutron/tests/unit/db/test_rbac_db_mixin.py

Change-Id: I2d17a8f35d3289b2dd7ee0a78bc8b196f549c442
Closes-Bug: #1726677"
28e8265651da2aad1d253f3a47c0e71525dd5e1b,2017-11-03 13:25:21+09:00,"Add initialization in StringMatchingFilterObj class

In order to support LIKE statement filter in OVO objects,
StringMatchingFilterObj class is introduced. However, this class
does not provide initial attributes of ""starts"", ""contains"" and
""ends"".

In real usage, if these attributes are not initialized, we will
hit failures in method apply_filters() in db/_model_query.py.

This patch adds the initialization back.

Secondly, a typo of ""obj_utils.StringMatchingContains"" is revised
in this patch too.

Change-Id: If828068d8d08ff09dff6c63d53320bc397d32448
Closes-Bug: #1724446"
8b381c7324999a8cc65e9202a3465777a0bc1f08,2017-11-03 16:46:09+07:00,"Use Agent OVO in agents_db and test_agents_db

Agent object has been merged [1].
This patch uses Agent object in agents_db and test_agents_db.

We also introduce a new function (get_agents_object) and keep
the old function (get_agents_db) for backward compatibility.

[1] https://review.openstack.org/#/c/297887/

Co-Authored-By: Nguyen Phuong An <AnNP@vn.fujitsu.com>
Change-Id: I4c4283cb1aa05d52dca00cc249e094ea7d55b1d3
Partially-Implements: blueprint adopt-oslo-versioned-objects-for-db"
806cf71eb5af34359f8bc0c6b740752e53cf854f,2017-11-03 16:49:12+00:00,"Fullstack: init trunk agent's driver only when necessary

Trunk driver is not needed to be initialized when ""trunk""
service plugin is not enabled.
On production environments it's not possible to base on
""service_plugins"" config option on L2 agent's side so this
driver is initialized always.
It cause problems on fullstack tests becasue there is race
condition between different ovs agents which consumes events
from Openvswitch monitor.
On fullstack tests however we can assume that agent's and server's
config are in sync so trunk driver can be initialized only if
""trunk"" service plugin is enabled on server side.

Change-Id: I3ad8d6e7b8f103867ee277078d03f3a01c20ac0d
Closes-Bug: #1687709"
7f969fa8557cb3054283848e928bded10c2b1afe,2017-11-06 09:54:00+07:00,"Use Agent OVO in l3_agentschedulers_db

Agent object has been merged [1].
This patch uses Agent object in l3_agentschedulers_db.

[1] https://review.openstack.org/#/c/297887/

Co-Authored-By: Nguyen Phuong An <AnNP@vn.fujitsu.com>
Partially-Implements: blueprint adopt-oslo-versioned-objects-for-db
Change-Id: I7c652919a258b2e0b7e068a759ff6bfa996b0c4d"
83e73e0e6f8e3c7a0bd438f8bebeb0ea08e53216,2017-11-07 14:23:58+09:00,"test_security_groups: Randomize SG names

To avoid conflicts with concurrent tests.

Closes-Bug: #1730271
Change-Id: Id33dc37118f57a0dbbfbe5ee71d1c7a48eefeb3e"
d2b909f5339e72f84de797977384e4164d72a154,2017-11-07 13:10:55-05:00,"Move check_ha_state_for_router() into notification code

As soon as we call router_info.initialize(), we could
possibly try and process a router.  If it is HA, and
we have not fully initialized the HA port or keepalived
manager, we could trigger an exception.

Move the call to check_ha_state_for_router() into the
update notification code so it's done after the router
has been created.  Updated the functional tests for this
since the unit tests are now invalid.

Also added a retry counter to the RouterUpdate object so
the l3-agent code will stop re-enqueuing the same update
in an infinite loop.  We will delete the router if the
limit is reached.

Finally, have the L3 HA code verify that ha_port and
keepalived_manager objects are valid during deletion since
there is no need to do additional work if they are not.

Change-Id: Iae65305cbc04b7af482032ddf06b6f2162a9c862
Closes-bug: #1726370"
c6d8ccb640b2c724c575c640ea044a5d3c711e2e,2017-11-08 02:03:44-05:00,"Enable bridge command for openvswitch agent

Allow ovs agent to run bridge command.
This is necessary because FDB extension uses bridge to update the FDB table.

Closes-Bug: #1730407

Change-Id: I0897f1efcf36fc7f6f06e80c3b29c0e1fa14b141"
46081445d681074d5c598e725e0c568e1402dd14,2017-11-09 12:21:50-05:00,"Change iptables-restore lock interval to 5 per second

The default wait-interval for iptables-restore when
using -w is 1 second between tries.  On a busy system
that could mean we timeout before we get the lock.  Try
5 times per second instead by using -W 200000.

Change-Id: I8307db20187516be781e37c191d8f09a9a8e3dc3
Related-bug: #1712185"
69d0047cfe969da02d44c036fc3c97a1bfdffc19,2017-11-09 20:34:52+00:00,"Do not load default service plugins if core plugin is not DB based

Some service plugins make the assumption that Neutron is running
with a datastore (e.g. revision and timestamps). As the datastore
setup is a responsibility of the Neutron core plugin, checking
that this is indeed true avoids errors for those plugins that do
not implement any DB backend (e.g. monolithic OpenContrail plugin).

Change-Id: I872fa6e3c3925e521150d79bba864101d9a5f648
Closes-bug: #1700651"
bfe947b26266e13251b7ba972d8b57e67e9ebb02,2017-11-09 17:24:31-05:00,"Skip IPv6 sysctl calls when IPv6 is disabled

If IPv6 is globally disabled, do not try to run any IPv6
sysctls as they will all fail as the parameters do not exist.

Change-Id: I789dbbe1c44581978c51f8c3c1d22aef10cbe01a
Closes-Bug: #1618878"
7ff492c5bb9ce9f24f12db40c8e3a33beb47f87b,2017-11-10 17:06:02-05:00,"Support protocol numbers in security group API

Somewhere along the way we broke supporting numbers in
the security group API that were not in our known list
of protocols.  In order to fix this properly we must
use the correct arguments when using iptables-save, as
it could use a name instead of a number, or vice-versa.
Determined the list of mappings by doing:

 for num in {0..255}; do iptables -A INPUT -p $num; done
 # iptables-save

Change-Id: I5895250b47ddf664d214cf085be693c3897e0c87
Closes-bug: #1716045
Closes-bug: #1716790"
1470baf02beb6e9f732129edc4c8979881ddea8f,2017-11-12 09:33:20+00:00,"Revert ""objects: get, update and delete converted to Subnet OVO usage""

This reverts commit 32c757babd1622b72fa15a8f5fb1248ff9e45ddf.

Closes-Bug: #1731623
Change-Id: Ie5c773165948d6db55f1b7ba3b7e312a5bb1318b"
e774b8842800ae9f1935b582579e45721a4f43fc,2017-11-14 15:59:50+08:00,"Tempest: Add availability-zone for agent

Change-Id: I586420488cc2db43e849132c0d2465185e4b32d0
Partial-Bug: #1684069"
f40128b437e58e39efc9f02af7135c02f7826b42,2017-11-15 09:44:05+00:00,"[L3][QoS] Adding L3 rate limit TC lib

This is the TC lib utils for L3 IP QoS implementation.
For more detail please see [1]: L3 agent side TC rules.

[1] https://review.openstack.org/#/c/374506/

Partially-Implements blueprint: floating-ip-rate-limit
Related-Bug: #1596611
Change-Id: Icfec83ca6dc31d7283d9c6c6ef0997d5e60daae6"
7ccb2994b8cd53317961c7dc4a251eeaa965c1d2,2017-11-15 17:37:44+00:00,"Raise exception when synthetic field invalid

A check is introduced in the ``__init__`` method of ``NeutronObject``
class. This check ensures synthetic fields are valid in any oslo
versioned object.

Reference: I3c565f83098a03d210616f51d359ca45388aaf60

Depends-On: I12c7a330555966d30e44418cbd500958fe844462

Co-Authored-By: Rodolfo Alonso Hernandez <rodolfo.alonso.hernandez@intel.com>
Closes-Bug: #1614478

Change-Id: I33c41fbd4dd40ba292ebe67ac497372d4354f260"
bcc57a4aed0b050c4d37fb73ced0c43aaabdc1a6,2017-11-15 21:21:35+00:00,"Add unit test to validate non DB base core plugin can be loaded

Thanks to the patch I872fa6e3c3925e521150d79bba864101d9a5f648, if a core
plugin is not based on the Neutron DB model, Neutron Manager does not
fail anymore to initialize DB dependent default service plugins.

Change-Id: I948876a7ea7acb0953f622c399dada2148f57571
Partial-Bug: #1700651"
237ec30ca94322716a1af5e59c0960f0eef24194,2017-11-16 10:20:41+09:00,"ovsfw: Merge multiple conjunction flows

The ovsfw code generated multiple flows with the same or overlapping
match fields and different actions=conjunction(nnn,2/2) flows.
Merge such flows and generate only one flow with
actions=conjunction(mmm,2/2),conjunction(nnn,2/2) so that filtering
are correctly performed.

Change-Id: I0cd325b02f35e103606595b8b124010fff8dc397
Partial-bug: #1708092"
4ac4c22a646799aaecca61334a8bb44147ab881a,2017-11-16 10:20:41+09:00,"ovsfw: Use multiple priorities in RULES_*_TABLE

The OpenFlow spec says packets shouldn't match against multiple flows
at the same priority or the result is undefined. In ovsfw, 8 priority
levels are needed to comply with this rule.

Note: unlike overlapping TCP port ranges cases, the current version
of OVS seems to handle this case magically.

Change-Id: I6deaee8dbe81453285b1fc685282952bc9456949
Closes-bug: #1708092"
5e08a9b0e7d4f99d217ca73c6aa37e52a13c5d5a,2017-11-22 17:44:22+01:00,"[OVO] Switch to use own registry

Neutron will now use own registry for versionedobjects.
It avoids problems with loading wrong OVO objects from
different projects (like os_vif) when names are the same.

Change-Id: I9d4fab591fbe52271c613251321a6d03078976f7
Closes-Bug: #1731948"
e2ad828e0fd76290b1069a5951ef3acdf0cd039b,2017-11-23 07:43:51+08:00,"Remove the ensure_dir

The utils.file.ensure_dir is deprecated for removal in version Ocata.
ensure_tree(path, 0o755) from the oslo_utils.fileutils can be used
instead.

Depends-On: Ic9b4b86e65052c06c33c8628bb0c6700cdfd875b
Change-Id: Ifff970d80acb7ef28cb7fc67d3ae0c5524de1bc3
Closes-Bug: #1733757"
89e0ed9e3d1630197545280ef6c11828d0f2b1dc,2017-11-24 16:53:11+00:00,"fullstack: Wait at least 3 minute for agents to report

Test runner polls neutron-server for agents for default value of
wait_until_true() which is 60 seconds. It has been proven to be
insufficient time on busy environments. This patch bumps the timeout to
3 minutes and also highers polling interval from 1 seconds to 10
seconds, to offload neutron-server.

Change-Id: I108176ee5668c2bc456dda1810aa509212e7cb38
Closes-bug: #1734357"
9ed693228f90251c0f03fb842ef19628b439f9bc,2017-11-27 06:30:56+00:00,"Call update_all_ha_network_port_statuses on agent start

As explained in bug [1] when l3 agent fails to report state to the
server, its state is set to AGENT_REVIVED, triggering
fetch_and_sync_all_routers, which will set all its HA network ports
to DOWN, resulting in
1) ovs agent rewiring these ports and setting status to ACTIVE
2) when these ports are active, server sends router update to l3 agent
As server, ovs and l3 agents are busy with this processing, l3 agent
may fail again reporting state, repeating this process.

As l3 agent is repeatedly processing same routers, SIGHUPs are
frequently sent to keepalived, resulting in multiple masters.

To fix this, we call update_all_ha_network_port_statuses in l3 agent
start instead of calling from fetch_and_sync_all_routers.

[1] https://bugs.launchpad.net/neutron/+bug/1731595/comments/7

Change-Id: Ia9d5549f7d53b538c9c9f93fe6aa71ffff15524a
Related-bug: #1597461
Closes-Bug: #1731595"
7a61f8636d983431a2265d87d3e06f14a799368a,2017-11-27 08:55:14-07:00,"clarify nova prereq for controller install docs

This patch adds a note to clarify the need for nova to be installed
prior to configuring the compute service for neutron.

Change-Id: If7f16c1bd01843c244b87a48a024d17e57cb775e
Closes-Bug: #1732669"
f0f480b5e1dfb52961c58c3a94a3ab4c400ac82b,2017-11-28 11:58:18-08:00,"Disable test_dscp_marking_packets fullstack test case

We disable test cases that are known to fail in attempt to get the
fullstack job pass and be able to make it voting.

Change-Id: If44a758bc7e81277437373569c3a39332bcd9bde
Related-Bug: #1733649"
4f00cebdc75b5bbded664e8a3d09fc08d2936344,2017-11-28 12:01:28-08:00,"fullstack: disable all test_connectivity test cases

Those are known to be unstable. Disable them while we figure out why
they fail.

Change-Id: Iae72fd9ae208ee9d8821376cb5f841a8fc65fbc7
Related-Bug: #1728948"
ab8baedd266dc76043eb9e227b8a0fb007d6d212,2017-11-28 20:17:40+00:00,"docs: Correct various mistakes in QoS doc

OpenStack client doesn't display ""Created"" after
create operation.

Also this patch corrects an erroneous ingress rule update command by
changing ""--max-burst-kbps"" to ""--max-burst-kbits"".

Finally, the output of several commands is corrected.

Change-Id: I93aac4a5f293919b3fd8acf1c0310f6864004ee0
Closes-Bug: #1730896"
d835dd2093083ebb9e5e8ba6b7d30096fb0ed2cd,2017-11-28 20:39:35+00:00,"[QoS] Add info about rate limiting on router's ports

Qos policy with bandwidth limit rules can be applied on router's
gateway ports to limit only if veth are used to connect it to
namespaces.
This commit updates ""ovs_use_veth"" config option help message and
qos docs to add such info there.

Change-Id: I69e78bc125d430c933f7576d05308030789cee0a
Related-Bug: #1732852"
8fcda21a0634aa24fedb9c3e482ecfd495883c9b,2017-11-29 16:45:38+08:00,"[L3][QoS] Neutron server side Floating IP QoS

Add qos_policy_id to floating IP, then the user could set/update
the binding QoS policy of a floating IP.

APIImpact: a new parameter qos_policy_id was added to floating IP
related API.

Partial-Bug: #1596611
Partially-Implements blueprint: floating-ip-rate-limit
Change-Id: I4efe9e49d268dffeb3df4de4ea1780152218633b"
a25323152290bc1ec061ecebc24a832ee9ca1277,2017-11-29 16:21:46+07:00,"[log]: Add driver api and rpc stuff for logging

This patch adds driver api and rpc stuff for logging extension as
below:
- Provides create, update and delete log api for log drivers
- Reserves a rpc notification api for log drivers if a log driver
requires rpc.
- Reserves a rpc listener for listening callback from log drivers.
- Also provides db_api: get_logs_bound_port, get_logs_bound_sg and
  get_sg_log_info_for_port and get_sg_log_info_for_log_resources.

Change-Id: I7d50356dd1da49af6faaaa8969b6ae9041f81063
Partially-implements: blueprint security-group-logging
Related-Bug: #1468366"
b24013f569024f71197370b10dd23a7647d22c73,2017-11-29 22:23:24-08:00,"Fix DNS connectivity issues with DVR+HA routers and DHCP-HA

Before this change, DVR_SNAT agents would get no routers when
asking for updates due to provisioning of DHCP ports on the
node they are running on. This means that there's no connectivity
between the DHCP port and the network gateway (that may be
hosted on a different node), and therefore things like DNS may
break when a VM attempts resolution when talking to the affected
DHCP port.

This change relaxed a conditional that prevents the right list of
routers to be compiled and returned from the server to the agent.
The agent on the other hand needs to make sure to allocate the
right type of router based on what is being returned from the server.

Closes-bug: #1733987

Change-Id: I6124738c3324e0cc3f7998e3a541ff7547f2a8a7"
6c437b7cedf8baf1dca857934ac438511d461141,2017-11-30 11:54:51+00:00,"Correctly configure the IPv6 LLA address

Handle a corner case where the address allocated by slaac is the
same as the ipv6 default link local address.

Closes-bug: #1709215
Change-Id: Ida667292fce41e281e016d56a278eef3b8939ed4"
c62d54d0c21fc4a760d2ac6501f9493137c5eb8a,2017-11-30 16:47:43-05:00,"Fix HA router initialization exception

When an HA router initialization fails early, it can lead to:

 AttributeError: 'HaRouter' object has no attribute 'process_monitor'

Add init of 'self.process_monitor' in RouterInfo init code in
case we try and cleanup early.

Change-Id: Iddeaeef13adee10f7b130e3f9e584b6e9f037030
Closes-bug: #1735557"
dd3abf8ee846eb95946d45b31fe7b0fd280005a2,2017-12-01 13:53:09+00:00,"[Fullstack] Fix destroy of VM fixture

When FakeFullstackMachine is connected to Linuxbridge
instead of Open vSwitch bridge, bridge object don't have
delete_port() method and it is not necessary to remove
""tap"" device from host namespace.
This device will be removed together with deletion of
VM namespace.

Change-Id: I57a2ef84104b0951d77a8fc79265236d8d8dddf4
Closes-Bug: #1735571"
92db1d4a2c49b1f675b6a9552a8cc5a417973b64,2017-12-03 09:20:53+00:00,"Fix meter-label-rule creation

The existing method is to meter outgoing traffic from the entire VM
to a specific ""remote_ip_addr""(in case of outbound),
but the method I suggested can meter outgoing traffic
from a particular subnet to external network.

From a metering point of view,
it does not matter which address/CIDR is the destination for outbound.
But, it is important to know where(subnet or VM) the packet leaves from.
That way you can see how much VMs are using the external network.
For outbound metering, dst is 0.0.0.0/0 and src is network of VMs
and for inbound metering, src is 0.0.0.0/0 and dst is network of VMs.

When creating a meter-label-rule, it is correct
to specify src address for ""remote_ip_prefix"" option for outbound
and specify dst address for inbound.
If you are confused by the term ""remote_ip_prefix"",
you need to clarify this option.

Change-Id: Ia3f3e26410a73d7b44abae637703fda41c4bc09a
Closes-Bug: #1716913"
364e5db586a93902e99f68a8e213ad9b2a9f39b5,2017-12-04 18:04:00+08:00,"ovs-fw: catches exception from ovsdb

OVS agent will raise an exception when deleting
multiple vms in bulk. Nova will delete tap when vms are
removed. Then, ovs agent checks ovs_port
by calling ""self.get_ovs_port"", and the exception will be raised.
The patch will catch exception.

Change-Id: Ief7de22e5f85253d8a25ecfbb139a8f87c1a0b35
Closes-Bug: #1729213"
034934aaf9105cce31770cf89c816875f702df6c,2017-12-04 13:53:27+01:00,"[Fullstack] Log tcpdump output lines in DSCP mark tests

This patch adds additional logging of captured tcpdump output during
dscp mark packets tests.

Change-Id: I1ab5727ea70afbe19d2557b9b5c4d77500658cbc
Related-Bug: #1733649"
13a65cf8a8cf550ee6df7ac35c4a63857e7b4eeb,2017-12-04 20:10:03+01:00,"FakeNotifier class 'topic' argument change to 'topics'.

Oslo.messaging commit: 2d53db6c51c2ac2ccddda210906c1e6418557470
changed topic to be a list.

Change-Id: I24032c91d2f01687009d6e32a972d34b248962c4
Closes-Bug: #1736220"
a20845048a87b99e17f3caf204e4b88199442d8d,2017-12-04 14:39:32-08:00,"Build metadata_agent.ini reproducibly

Currently, when metadata_agent.ini is built, the default value for the
directive metadata_workers is the build host's number of CPU. This is
wrong because metadata_agent.ini cannot be built reproducibly, which is
a bug in many distributions.

See for Debian: https://wiki.debian.org/ReproducibleBuilds/About

This patch therefore uses sample_default oslo.config directive to
hardcode a value put in generated configuration file that would not
depend on build environment.

Change-Id: I7292d09b96f90d0477dd4b59766854a733e1da38
Closes-Bug: #1736114"
98dfdc24bb7ee13b25766231bdb44caf8ff63766,2017-12-05 10:06:58+00:00,"Add CREATE_PRECOMMIT notification for Floating IPs

This patch is adding a CREATE_PRECOMMIT notification for floating ips.
Before it was possible to register a callback for that (no errors) but
the notification would never be sent because the code was simple not in
place.

Closes-Bug: #1736201
Change-Id: If901d4d54118a6343597ab2ad075b6a2399ea62c"
ee423e1fa035146904eb8cdd78660cf1cafa64e8,2017-12-05 18:36:20+08:00,"[Qos] Fix residues of ovs in ingress bw limit

When we delete vm port with attached QoS policy,
it is just doing nothing if vif_port does not exist.

This is fine for egress bandwidth limit as it is configured
directly on vif_port in OVS.

For ingress bw limit however it uses additional records in
Openvswitch database: qos and queue. Those records are not
cleaned up in such case.

This patch also records port in self.ports in the case of
bandwidth limit rules, just as in the case of dscp rules.
Never execute port clear if vif_port not exists. Finally, ovs
driver can clean such qos and queue records

Change-Id: Iddeb49e1e6538a178ca468df0fdf9e0617ca4f1c
Closes-Bug: #1726732"
eaf7e65469d38156b2a38f62cf75d9f8015aaa0c,2017-12-05 22:46:26-05:00,"Move segment deletion back to PRECOMMIT_DELETE

This essentially reverts commit 12d24abba75ab3b926edbac389437bacc23914dd.

Making the callback _delete_segments_for_network respond to
BEFORE_DELETE network event has created some bugs. In one of them,
it is not possible to delete a routed network, because the segments
cannot be deleted due to the fact that the associated subnets still
exist.

Making _delete_segments_for_network respond to PRECOMMIT_DELETE
introduces a StaleDataError with the standard attributes of the
deleted segments. To work around that, network_db is expired and
read again after notifying the PRECOMMIT_DELETE event in
delete_network in the DB core plug-in.

This also fixes an issue where we could delete the segment ID
of the l3-ha network when deleting a router, leaving all other
routers non-functioning.  Moving this to PRECOMMIT_DELETE fixes
it since it is done after we have checked that the network is
not in use and can be deleted.

Closes-Bug: #1697324
Closes-Bug: #1732543

Change-Id: I7c3c4654f183b317647a28d599a538fe460db68f"
e3ca20fb57c30e218a23dc6ea7098cb2234d2981,2017-12-12 01:24:12+00:00,"Update network external attribute for RBAC change

If a network's RBAC external attribute is deleted, we
should update the router:external attribute to False
if there is no other access_as_external rbac policy on the network.

Tempest API test patch: https://review.openstack.org/#/c/520255/

Change-Id: Ibdbe8a88581e54250259825bbf1c77485fd09f89
Closes-Bug: #1692472"
8236e83deced9af84ae0e5128c76acfa753093cc,2017-12-12 04:12:54+00:00,"Allow port create/update by shared nw owners

Currently if a new port is created by a tenant with whom
the network is shared (tenant is not the owner but has
network shared via RBAC) , the port is allocated on the default
subnet. This patch allows the tenant to create/update a port on
any subnet which is actually a part of a shared network, owned by
another tenant.
Tempest test in [1]

[1]: https://review.openstack.org/521413
Change-Id: I1046f6b13e68b1e274cc8f62f5b30aa5f8d71cdc
Closes-Bug: #1543756"
5da1a6f7c62893c2301f52f0f09b551b7fc8c525,2017-12-11 23:04:05-08:00,"Tags: harden validations

An invalid input would cause a server execption. We now validate
that the body in the tags validation is not None.

TrivialFix

Change-Id: I97a00ee6d2672485334bba757706f107e052b551
Closes-Bug: #1736678"
c43317e380d90a9b1eab4f3c5058b770b43dcf96,2017-12-13 09:33:34+08:00,"[Qos] ingress bandwidth limit by ovs is not accurate

According to Open vSwitch FAQ [1], max-rate value which is set for
all queues in qos is set as link speed in case when it is not specified.
This can lead to inaccurate ingress bandwidth limits in case when QoS is
applied e.g. directly on tapXXX port (which is ""tun"" interface type) and
configured bandwidth limit is higher than interface's link_speed.
This patch set max-rate parameter in qos's other_config table to not use
default value determined by Open vSwitch and to make rate limits more
accurate.

The modification is covered by functional tests in
https://github.com/openstack/neutron/blob/master/neutron/tests/
functional/agent/test_ovs_lib.py.

[1] http://docs.openvswitch.org/en/latest/faq/qos/

Change-Id: Id937216a724fbf776298efd11f74ac71056cfe06
Closes-Bug: #1730605"
088e317cd2dd8488feb29a4fa6600227d1810479,2017-12-13 09:27:09+00:00,"Honor both floating_ip_address and subnet_id when creating FIP

In the current code, if user specifies floating-ip-address
and subnet, we only process the subnet when creating
the fip port.

This patch adds floating_ip_address and subnet_id to
fip port's fixed_ips, if floating_ip_address is not in the subnet,
InvalidIpForSubnet exception will be raised.

This patch also fixes a default value error in tests.

Change-Id: I436353690839281ca7e13eaf792249306b71dd4b
Closes-Bug: #1732890"
7d5247bc4ce0ea4d4d171fb9abb792f5f826e964,2017-12-13 09:50:58+00:00,"[Fullstack] Additional log of tcpdump stderr output

This patch adds additional logging of tcpdump stderr output in
DSCP marking packets tests.
It is required to figure out why those tests are failing sometimes.

Change-Id: I02fe64bf817b47970e4e073f48ea8dea53bdd4f5
Related-Bug: #1733649"
9eb7c3ef91d995aeeaa6d6dcec3c08fa8ef6bb3b,2017-12-13 14:19:15-06:00,"Fix URL in SR-IOV internals doc

The last link in the 'Further Reading' section of the SR-IOV internals
document is not rendered properly. It gets a '/' at the end, that
makes the link useless. It seems to be a problem with Sphinx. To
work around it, the bullets are removed from the list of recommended
documents for further reading

Closes-Bug: #1737833

Change-Id: I2116e82d60bc361583eab8e3809ec5f9eab6d11c"
e862d280681bebecc590ce8853048287cb8d046a,2017-12-14 14:03:58-05:00,"Allow __new__  method to accept extra arguments

L3_NAT_dbonly_mixin accepts no extra arguments, but
some subclasses do want to be able to accept them.

Change-Id: I069215c4f3031661b7ce2c692dcf4cce1bd29b6c
Closes-bug: #1657412"
e3488f451ecf6e76ccbd001255fcd7f5e8d48b37,2017-12-18 00:22:23-08:00,"Ensure floating IP create does not break

Commit 088e317cd2dd8488feb29a4fa6600227d1810479 breaks floating IP
creation.

This changed the API and mandated that 'subnet_id' and
'floating_ip_address' be passed in the API.

This also cleans up tests with invalid inputs.

Change-Id: I7bc758eed56610c269485681f67a5379730d8ef5
Closes-Bug: #1738612"
081870b1a58caf954188a5788b76d2f7e28e799d,2017-12-19 14:31:00+07:00,"[log]: Change entry point name of logging plugin

The name ('logapi') seems redundant 'api' and it looks inconsistent
with entry point name of logging agent extension ('log') and
LoggingPlugin class[1]. So this patch change 'logapi' to 'log' to
make it look consistent.

[1] https://github.com/openstack/neutron/blob/master/neutron/services/logapi/logging_plugin.py#L27

Change-Id: I57d0b86823670a1dc5d116d98059993c802ef86c
Partially-implements: blueprint security-group-logging
Related-Bug: #1468366"
b27164f0a834b63b241ae9141bd9c40fad2cf1e0,2017-12-19 14:40:57+07:00,"[log]: Devstack plugin for logging api

This patch implements devstack plugin for logging api. The logging
api service base on logging api spec [1].

[1] https://specs.openstack.org/openstack/neutron-specs/specs/pike/logging-API-for-security-group-rules.html

Change-Id: Ib86535ad24319cb0e10a48df50651264201673c3
Depends-On: Ib8668dd25ee7c5000a6dafcc7db3dbc33ad190be
Partially-implements: blueprint security-group-logging
Related-Bug: #1468366"
69419778276a722c3f376046d1e0cc7fc4684e99,2017-12-19 10:07:33-05:00,"Add iptables metadata marking rule on router init

Move the iptables metadata marking rule earlier in
router init, that way any stray metadata requests
that arrive before the filter metadata redirect rule is
installed will just be dropped.  We do this irregardless
of whether we will be running the metadata proxy.

Partial-bug: #1735724

Change-Id: I8982523dbb94a7c5b8a4db88a196fabc4dd2873f"
29080700eb457a68f27ed5b5ae45c9a74dabec8b,2017-12-20 13:25:20+07:00,"ovsfw: Create tables for further consumption

The patch creates tables where other services using openflow can
implement rules for further packet processing. 3 new tables were created
for packets accepted by egress, ingress pipeline and packets dropped by
firewall.

Partially-implements: blueprint security-group-logging
Related-Bug: #1468366

Change-Id: I7900126de235ee9df902bef9556879f586d33ae8"
d4c41071645d0c25485d93886fbc09ca671ea18b,2017-12-20 12:40:34-08:00,"ipam: don't commit IPAllocation while IpamAllocation is rolled back

Don't mix old and new session management styles. Mixing them is not
guaranteed to work. The method is not switched to new enginefacade yet,
so stick to the old style. Since OVO create() method already opens a
nested transaction, do nothing in IPAM layer.

This change fixes an issue where sometimes, whenever
add_auto_addrs_on_network_ports raises a retriable exception like
StaleDataError, corresponding IPAllocation is still persisted in the
database without being rolled back and without the corresponding
IpamAllocation model persisted. Later, this situation may break port and
network deletion for resources affected by the issue, failing with the
following error:

Unable to find IP address 2003::f816:3eff:fed2:5006 on subnet
eed623f4-cbad-488c-b230-7f4a8b1514eb

It happens because whenever writer.using context manager exits, and it's
top level manager, it commits the changes to database. Since
writer.using doesn't know that it's being executed in scope of the old
facade .begin() call, it doesn't postpone commitment as needed.

The bug was introduced in Pike as part of the switch to the new
enginefacade (that was never fully completed), specifically by:
I50be115ea69f805b48b02aebe4259ec2c839830e

For existing setups that already have IPAllocation objects without
IpamAllocation counterparts, the solution is to remove those
dangling IPAllocations manually from the database. (That's of course
assuming they use Neutron DB IPAM plugin in the first place.)

Note: If we ever decide to remove nested transactions from OVO base
layer, we may need to revisit this code to keep ignore-on-failure
semantics.

Change-Id: Ic9e146f51d9a120011892828d3a67b0630f4c5ce
Closes-Bug: #1706750"
10644ad65b025389f5b90d5a2cae157d7b073254,2017-12-21 11:03:36-07:00,"use callback payloads for _SPAWN events

This patch switches callbacks over to the payload object style events
[1] for BEFORE_SPAWN and AFTER_SPAWN based notifications. As no event
data is passed for SPAWN notifications, an actual payload object is
not needed and thus this change uses publish() rather than notify()
and updates and callback receivers to accept the payload parameter.

NeutronLibImpact

[1] https://docs.openstack.org/neutron-lib/latest/contributor/callbacks.html#event-payloads

Change-Id: Ifad4781d82aa07f213f4e075b0c9455aa95e94bb"
3f1a9846d23198f4a89f89bac73ba80ef201dea0,2017-12-24 07:27:11+00:00,"use callback payloads for REQUEST/RESPONSE events

This patch switches callbacks over to the payload object style events
[1] for BEFORE_RESPONSE and AFTER_REQUEST based notifications. To do
so an APIEventPayload object is used with the publish() method to
pass along the API related data. In addition a few UTs are updated to
work with the changes.

NeutronLibImpact

[1] https://docs.openstack.org/neutron-lib/latest/contributor/callbacks.html#event-payloads

Change-Id: Ibd8559e0db9dcc995abf8937a0cb764b21a18531"
bfd499445c1b4e3d3addb253bae961bffef5dc25,2017-12-24 15:52:55+00:00,"use callback payloads for BEFORE_READ events

This patch switches callbacks over to the payload object style events
[1] for BEFORE_READ based notifications. To do so an EventPayload object
is used with the publish() method to pass along the API related data.
In addition a few UTs are updated to work with the changes.

NeutronLibImpact

[1] https://docs.openstack.org/neutron-lib/latest/contributor/callbacks.html#event-payloads

Change-Id: Iff3e96c56867b4bf4272fed676f39cd6796d756c"
b841a7f5d9a54468945e7eccecc91428797ebba9,2017-12-28 20:39:07+00:00,"[Fullstack] Shutdown tcpdump process gracefully

In fullstack test for dscp marking packets tcpdump is used to capture
packets send from one namespace (Fake VM) to another one.
When tcpdump is closed quickly with SIGKILL signal it may not displays
all packets and that might cause an issue with failed dscp marking test.

Now tcpdump will be kill with SIGINT signal so it should display
all captured packets to the stdout.
Also it should now return to stderr summary of all captured/dropped
packets which can be helpful in future debugging of issue with those
tests if that will not solve the problem.

Change-Id: Ib2d588d081a48f4f2b6e98a943bca95b9955a149
Related-Bug: #1733649"
9be7b62f773d3f61da57c151bfbd5c8fe4d4e863,2018-01-03 01:37:47+00:00,"DVR: verify subnet has gateway_ip before installing IPv4 flow

If a user clears the gateway_ip of a subnet and the OVS
agent is re-started, it will throw an exception trying
to install the DVR IPv4 flow.  Do not install the flow
in this case since it is not required.

Change-Id: I79aba63498aa9af1156e37530627fcaec853a740
Closes-bug: #1728665"
0e062a71ff2215a81d6ef9da6d7088227086ea8a,2018-01-03 10:31:12+08:00,"[doc] Added update regarding URL difference based on deployment

This is from [1] as networking guide content has been imported from
openstack-manual [2].

[1] I101a15872ad999bef1a8afed7762eb88f1c68c3a
[2] Ibcedc9389dbea4a5810f2cecf890f6ba9887a07b

Change-Id: I929c4640485423180b7ba8d5f54319dbaf3350d9
Closes-Bug: #1682021"
ce01b70ef86e723bc343819ceaf6aa7d96829c0c,2018-01-04 01:44:01-05:00,"[OVS] Shut down the port on changing the admin-state to false

On changing the port-admin-state to false, the port goes down.

Change-Id: Ica46e39d8858f4235a8a1b9caeb696346a86f38b
Closes-bug: #1672629"
cbee0f9f88ff34f70ff19590471b5405e06ff2a9,2018-01-05 11:07:32+01:00,"Use same instance of iptables_manager in L2 agent and extensions

This commit adds common_agent_extension class which is agent API
for L2 extension drivers used e.g. by Linuxbridge agent.
This is necessary to be able to use instance of iptables_manager
used in firewall driver also in L2 extension drivers (like qos).

This patch refactors little bit iptables_manager code to make possible
to initialize e.g. mangle or nat table on demand, even if iptables
is created as ""state_less""

Change-Id: I3b66e49b7f176124e8aea3eb96d0d465f1ab1ea0
Closes-Bug: #1736674"
ed57c3de4241f94ead2bc7c7761bab99dd61894e,2018-01-05 16:28:18+00:00,"ovsfw: Don't create rules if updated port doesn't exist

The firewall won't attempt on update to initialize port in case
port hasn't been initialized by sg_agent yet. This fixes a race where update
rpc call arrives between wiring tap device with integration bridge and
firewall initialization.

Change-Id: Ice0667df606ae23061acebceea23ab6e49dadbcf
Closes-bug: #1740885"
bab1ae881285ad4381a7e8bec0563d4611bdc2d1,2018-01-06 07:49:33+00:00,"L3: prevent associating a FIP to a DHCP port

We should not allow a floating IP to be assigned to a DHCP port.

Change-Id: I6bf940b6e9195dc7d99e13fbe4454b08488cab0f
Closes-bug: #1739071"
386ec26b3d24f5862f6f76e0124a4370f45080cf,2018-01-08 09:13:02+00:00,"[Fullstack] Change how DSCP marking packets are tested

In fullstack test test_dscp_marking_packets two fake hosts are
created, each of them has got one fake instance (called sender and
receiver).
Instance called ""sender"" sends ICMP packets to instance called
""receiver"". In receiver's namespace tcpdump process is spawned with
filter to match only packets marked with specified DSCP value.
After sender instance successfully pings receiver, tcpdump process
is killed and stdout from it was examined to search logged ICMP
packets which were send from sender's IP to receiver's IP address.
That check was failing sometimes as is described in bug report.

It was failing when tcpdump doesn't capture any packets so there was
nothing on stdout from it. But even in such case tcpdump reports on
stderr summary of packets and it was like below:

0 packets captured
6 packets received by filter
0 packets dropped by kernel

which means that packets matching our filter was received by tcpdump but
were probably not processed yet. See [1] for more details.

So this patch changes filter used in tcpdump and way how its output is
checked.
Now in filter expression there are added src and dst IP addresses also so
it will match only packets send from sender instance to receiver instance.
After that tcpdump's stderr output is examined with regex to check if
line like:

X packets received by filter

is there and if X value is different than 0. If so, it means that
tcpdump received packets with wanted DSCP mark and test should pass.

[1] https://unix.stackexchange.com/a/29369

Change-Id: Ia3522237dc787edb90d162ac4a5535ff5d2a03d5
Closes-Bug: #1733649"
7bd8b37e3863aca2d6cb0195e1df5068b8bfe497,2018-01-09 09:26:40+07:00,"[log] ovs fw logging implementation

This patch implements ovs firewall logging driver for security group
base discussed on the spec [1] and [2]

[1] https://specs.openstack.org/openstack/neutron-specs/specs/pike/logging-API-for-security-group-rules.html
[2] https://docs.google.com/presentation/d/1fteBesETsmA7CWV6wf1i2QKa7k8EHPpRjytj8Rzeb-A/edit#slide=id.p

Change-Id: Ib8668dd25ee7c5000a6dafcc7db3dbc33ad190be
Co-Authored-By: IWAMOTO Toshihiro <iwamoto@valinux.co.jp>
Co-Authored-By: Yushiro FURUKAWA <y.furukawa_2@jp.fujitsu.com>
Partially-implements: blueprint security-group-logging
Related-Bug: #1468366"
dc5293bba6b6b2b90c481ee02b82e1e9af163d0a,2018-01-09 10:49:52+07:00,"[log]: functional test for logging api

This patch performs functional test for logging api. The
implementation is based on the logging api for security group spec[1]

[1]
https://specs.openstack.org/openstack/neutron-specs/specs/pike/logging-API-for-security-group-rules.html

Change-Id: I157bdffe29b184c9e31166586f94eac7fa00188e
Partially-implements: blueprint security-group-logging
Related-Bug: #1468366"
7f7d65ea4c58b665c2b54fa9f2e8ec1f81668b48,2018-01-09 17:37:02+01:00,"[Fullstack] Mark test_bw_limit_qos_port_removed as unstable

Mark TestBwLimitQoSOvs.test_bw_limit_qos_port_removed fullstack
test as unstable until bug 1737892 will not be solved.

Change-Id: Ia931b081d6afdbed00f49a106baa5598a1b43e0e
Related-Bug: #1737892"
0f08b2c625d9158e7dce80ff2d01ffd273e0d9c3,2018-01-09 22:44:18+00:00,"Add missing iptable rule in snat ns for centralized fips.

The following iptable rule should be added to snat ns:
""-A neutron-l3-agent-snat -j neutron-l3-agent-float-snat"",
or the snat rule will take effect instead of centralized fips
when accessing to the outside for vms.
Closes-Bug: #1735866

Change-Id: I286283bfb4dbf935a34c5919ee0af5225e75fac9"
b04790e12e5c436e58a961d388a6d13a720ef687,2018-01-10 11:44:11-05:00,"Fix fwaas v2 configuration doc

The wrong extension was listed in the admin guide.

Change-Id: Idac3ffb974d904c50b2f7563a475d34865266b59
Closes-bug: #1742450"
d23a9ad7313b6d4b275f3b46c89d9f79d3cfb9a4,2018-01-10 14:20:57-08:00,"Speed up trunk MTU enforcement check

While things may have become generally slower for reasons still
to be determined at the time this patch was developed, we noticed
that enforcing MTU rules between subports and trunk parent was
done by performing one DB lookup per subport. This patch optmizes
the performance by piggybacking on the logic that is used to
retrieve the subport underlying network's segmentation type when
the segmentation type must be inherited.

Closes-bug: #1741954

Change-Id: Ib18427ef7a3509088eaf8fa0cfed3fb659b6baea"
f0ff58e770d97fe0c65bb4b8dbfef5ade4bccee5,2018-01-12 12:11:58+00:00,"Fix mocking of ovsdb connection in UT

After support for ovsdbapp 0.4.0 was added in
Id22faa1f6179c2fdf8a136972d65f10749c9fc2e
different connection object should be patched to mock
connection to ovsdb in unit tests.
This patch fixes issue with wrong patched module in tests for
logapi agent extension.

Change-Id: I98ee3be7854f6a89edfedd2a4fa38af0ce7d81e4
Closes-Bug: #1742797"
622a137974dbe0ffec84149fc36d19e440bd18b2,2018-01-12 13:48:33+01:00,"ovs-lib: Pass string as udp port to ovsdb

ovsdb maps accept strings as values only. This patch converts integer to
be passed to ovsdb in case vxlan_udp_port config value is used.

Change-Id: Idba77939a80d80a4bc9625d10c8b37b23b91b9c5
Closes-bug: #1742931"
5c601bebeb01876f1ea744e0ae95f83d1c30120d,2018-01-12 18:22:06+00:00,"Support filtering port with IP address substring

Neutron currently supports filtering ports by matching the exact
IP address. This patch adds support for substring matching using
""LIKE"" SQL operator.

This patch also added a new API extension to show whether or not
the substring matching capability is available.

APIImpact add IP address substring filtering on listing ports
API-ref: I97259b85a2dce5a54bb6ea2cb9d9779ec0a25504

Co-Authored-By: Zhenyu Zheng <zhengzhenyu@huawei.com>

Change-Id: I9549b2ba676e1bad0812682c3f3f3c97de15f5f6
Closes-Bug: #1718605"
a8271e978a1c540ae9888f568cf14b4c40ea1b6d,2018-01-12 23:08:56+01:00,"[OVS] Fix for cleaning after skipped_devices

When Openvswitch agent will get ""port_update"" event
(e.g. to set port as unbound) and port is already removed
from br-int when agent tries to get vif port in
treat_devices_added_updated() method (port is removed
because e.g. nova-compute removes it) then resources set
for port by L2 agent extension drivers (like qos) are not
cleaned properly.

In such case port is added to skipped_ports and is set
as DOWN in neutron-db but ext_manager is not called then
for such port so it will not clear stuff like bandwidth
limit's QoS and queue records and also DSCP marking
open flow rules for this port.

This patch fixes this issue by adding call of
ext_manager.delete_port() method for all skipped ports.

Change-Id: I3cf5c57c7f232deaa190ab6b0129e398fdabe592
Closes-Bug: #1737892"
1be857435288e4008a41fe67bbc8795dd3d8b134,2018-01-15 13:19:14+00:00,"Fix ingress bw limit for OVS DPDK ports

For OVS based DPDK ports ingress bandwidth limit is now implemented
using egress-policer qos type.
Additionally limit values are set in other_config of QoS because there
is no queue used in this case.

This patch moves also helper methods used to conversion between
bytes and bits and between bits and kilobits to neutron.common.utils
to be able to use it also in ovs_lib module.

Change-Id: I94d1e8dfb82df5c602476db8aaa884ae91fecd7f
Closes-Bug: #1724729"
602437216f56b3a27addaec11c14002e7e3a8443,2018-01-15 13:11:50-08:00,"Configure log extension for ovs scenario job only

Current implementation of the agent l2 extension is not compatible with
linuxbridge. More work should happen before it's possible to enable it
back.

Change-Id: I2db1ffea4c172a9461b22c46e99f0abbb4fc1d85
Related-Bug: #1743463"
067271978ca4556647b9c68b2895fd18e9f0bea2,2018-01-16 09:50:57+07:00,"Use Router OVO in metering_db

Router OVO is created in patch [1].
This patch uses Router object in metering_db

[1]https://review.openstack.org/#/c/516961/

Change-Id: If551787d923231a1efb876fa000d4dda304c6636"
fea188acd173fe09e2e6f98534c4b9cb1523ebc6,2018-01-16 14:37:32-08:00,"l3_ha: only pass host into update_port when updating router port bindings

There is a race condition in update_routers_states that may result in
some fixed ips incorrectly deallocated from router ports. This may
happen if update_routers_states fetches ports' state before another
thread updates the list; then update_routers_states passes port payloads
with old fixed ips into update_port, which results in ip address
deallocation. Among other things, l3 agent will detect the change and
remove the affected subnet prefix from radvd configuration file, since
it doesn't configure extra_subnets for RA.

There is no need to pass full port payload into update_port just to set
host. This patch replaces the payload with a dict of one key - host.
This allows core plugin to handle just this host field change, leaving
existing allocations (and other port attributes) intact.

Change-Id: Ib2c661d6e2cb8e34676fd83e19b6cf65c232545d
Closes-Bug: #1743658"
0efe1aec185365d8bd7a14ec5b812132d0f9e44d,2018-01-17 03:53:07+00:00,"Fix _port_arg for security rules with icmp/ipv6-icmp aliases

When a security group rule is created with icmp/ipv6-icmp alias such as
protocol number 1(ICMP), 58(ICMPv6) or string icmpv6(legacy name for
ipv6-icmp) as its protocol along with ICMP/ICMPv6 message type
specified, _port_arg will generate a wrong str for iptables/ip6tables.

Change-Id: Iae01b9a0da34797a5f061a110f06e18be9bbec5a
Closes-Bug: #1743552"
6bf0788da07854573048d494065375f64803dd46,2018-01-17 10:54:46+01:00,"Adding DSCP mark and inheritance in OVS and LB tunnels outer header

Adding ability to set DSCP field in OVS tunnels outer header, or
inherit it from the inner header's DSCP value for OVS and linuxbridge.

Change-Id: Ia59753ded73cd23019605668e60cfbc8841e803d
Closes-Bug: #1692951"
cb9f4dd451ba15e760ed08fe111d4385b974364a,2018-01-17 22:54:56+00:00,"Remove deprecated nova_metadata_ip

nova_metadata_ip was marked for removal in Queens,
https://review.openstack.org/#/c/436813/

Change-Id: Icda216f9c8c57bb37711c5aa3574d308c3b5536d"
f84781f246004651e0636f8b6507ee1e48bac6b0,2018-01-18 13:16:16+01:00,"Add retry decorator update_segment_host_mapping()

When multiple agents register at the same time there is
a possible race condition causing segment host mappings
updates to fail. StaleDataError raised by SQLAlchemy ORM.

Adding retry_if_session_inactive() decorator to the method
fixes the issue.

Also serialize the method with lockutils. It takes 25+
seconds to update segment host mappings for 10 agents with
the retry decorator alone. With the method serialized the
same operation completes in less than 1 second. The retry
decorator is still required for active/active scenarios.

Closes-Bug: #1743579
Change-Id: I616457f094d000a4016c610b454be8269d9b4948"
4db37df648adeb425d6dcc21138dae74e8558e5a,2018-01-18 13:52:09+00:00,"log-api: Don't enable logging for linuxbridge

We still run API tests agains logging API and the job has OVS enabled.
As all linuxbridge flavors contain same string, this patch changes when
logging service plugin is configured which is always but in linuxbridge
scenario job.

Change-Id: I66234f45ee74c070119d84830790df296ba8d5f7
Related-bug: #1743463"
b94b97617d564c4751a7f981b49f37ba05455217,2018-01-19 14:19:39-08:00,"Log warnings when test fails because of them

When the test case fails, it's useful to see which warnings triggered
the failure.

Change-Id: Ia4150a06989ba253ffed0c0995e1023ca1ed42a0
Related-Bug: #1744394"
703ff85b8262997f209e7666396c5d430d3baa34,2018-01-22 09:07:03-05:00,"Add log-tag to haproxy config file

By adding a log-tag line to the haproxy config file that contains
the network or router id, we will be able to differentiate which
proxy is logging what.  This should help with debugging.

Change-Id: I5bb57b7682c00645e20cce69847dbb3b72165aa8
Partial-bug: #1744359"
725df3e0382e048391fac109ea57920683eaf4d0,2018-01-23 12:19:43+01:00,"Fix race condition with enabling SG on many ports at once

When there are many calls to enable security groups on ports there
can be sometimes race condition between refresh recource_cache
with data get by ""pull"" call to neutron server and data received
with ""push"" rpc message from neutron server.
In such case when ""push"" message comes with information about
updated port (with enabled port_security), in local cache this port
is already updated so local AFTER_UPDATE call is not called for
such port and its rules in firewall are not updated.

It happend quite often in fullstack security groups test because
there are 4 ports created in this test and all 4 are updated to
apply SG to it one by one.
And here's what happen then in details:
1. port 1 was updated in neutron-server so it sends push notification
   to L2 agent to update security groups,
2. port 1 info was saved in resource cache on L2 agent's side and agent
   started to configure security groups for this port,
3. as one of steps L2 agent called
   SecurityGroupServerAPIShim._select_ips_for_remote_group() method;
   In that method RemoteResourceCache.get_resources() is called and this
   method asks neutron-server for details about ports from given
   security_group,
4. in the meantime neutron-server got port update call for second port
   (with same security group) so it sends to L2 agent informations about 2
   ports (as a reply to request sent from L2 agent in step 3),
5. resource cache updates informations about two ports in local cache,
   returns its data to
   SecurityGroupServerAPIShim._select_ips_for_remote_group() and all
   looks fine,
6. but now L2 agent receives push notification with info that port 2 is
   updated (changed security groups), so it checks info about this port
   in local cache,
7. in local cache info about port 2 is already WITH updated security
   group so RemoteResourceCache doesn't trigger local notification about
   port AFTER UPDATE and L2 agent doesn't know that security groups for this
   port should be changed

This patch fixes it by changing way how items are updated in
the resource_cache.
For now it is done with record_resource_update() method instead of
writing new values directly to resource_cache._type_cache dict.
Due to that if resource will be updated during ""pull"" call to neutron
server, local AFTER_UPDATE will still be triggered for such resource.

Change-Id: I5a62cc5731c5ba571506a3aa26303a1b0290d37b
Closes-Bug: #1742401"
04efb3bca33cb4ca49f29e548866ad6f5d0ed359,2018-01-25 16:52:06+01:00,"Fix eventlet imports issue

With Ubuntu python package 2.7.12-1ubuntu0~16.04.3 and
evetlet < 0.22.0 there is some issue with eventlet monkey_patching.
This commit adds workaround solution ported from eventlet patch
https://github.com/eventlet/eventlet/commit/b756447bab51046dfc6f1e0e299cc997ab343701

Change-Id: Ia381c98116765903bf2652acd175251233df4e54
Closes-Bug: #1745013"
46cbe459ea812ec6ca18b2f597f295e0755927ae,2018-01-26 10:15:03-08:00,"ovs: removed sinkhole RPC target for old topics

The oslo.messaging bug that triggered adding the hack is fixed in
Queens, so we don't need it anymore.

Change-Id: I775b466dce19c4168985b19e1ddb938118f48dcb
Related-Bug: #1705351"
906eda44d2c230be99fc5c61daa0f359ab46a3ad,2018-01-27 18:19:20-06:00,"Revert ""Integration of (Distributed) Port Binding OVO""

This reverts commit febeaf5d4016157d0cca41023e64b91e550453e8.

This patch broke postgres tempest jobs, as well as introduced potential
race conditions in database layer because of mixed usage of old and new
engine facades.

Related-Bug: #1744829
Change-Id: Ic142ae7faf4e5f10cbdf761d7e6f3d442e94a3eb"
d3c69dc4f22ef96ad3fb66430ce703d9c2199d2e,2018-01-29 15:12:01+01:00,"Drop strict-order flag from dnsmasq invocation

Without this flag, dnsmasq prefers to ask the servers that
are known to be up, rather than hitting servers that are either
down or known to be broken. This greatly reduces responsivity
impact of broken upstream servers.

Closes-Bug: #1746000
Change-Id: Ieee4dafc578c3bda0935fcdb80faad6c342a10e9"
9a620f6ea51f5696310283869e68f6a1d49164d1,2018-01-31 15:11:45+00:00,"This patch changes the CT zone allocation range

SG with hybrid-iptables driver uses per port conntrack zones.
FWaaS port security uses per network conntrack zones based on
local vlans assigned by ovs l2 agent.

In case both SG iptables-hybrid driver and FWaaS port security is enabled,
there is a posibility of iptables-hybrid  and OVS based FWaaS driver
allocating overlapping zone and creating security holes.

This patch changes the zone allocation range for iptables and
hybrid_iptables driver to  4097 - 65535. While OVS based
port security driver can use zones based on local vlan range 1 - 4096

Closes-Bug: #1745642
Change-Id: I4d51637ed1de8fe85b4982a03410d4a3f637ea3f"
08108c41992a13c6959b717cccfe2b929e55d2eb,2018-01-31 11:31:14-05:00,"Move Linuxbridge ARP spoofing to nat table PREROUTING chain

It was found that adding ebtables rules to the filter table
FORWARD chain could be vulnerable to a DoS attack.  Moving
to the nat table PREROUTING chain should mitigate this as
it is consulted prior to allowing the frame in.

In order to make this work with upgrades, had to make the code
detect and remove any old rules that might still exist in
the filter table.  That can be removed after a cycle.

Added some unit tests in addition to the existing functional
tests.

Change-Id: I87852b21db4404c58c83789cc267812030ac7d5f
Closes-bug: #1732294"
892c1ec6900c7834964dd912cadab5d7ee3d4f62,2018-02-01 18:51:39+08:00,"fix same mechanism driver called twice bug

when a mechinism driver calls context.continue_binding to
continue binding, it will be called again because
_check_driver_to_bind compares driver name with driver.

Closes-Bug: #1745572
Change-Id: I62b32c9b9d01dd929fe8cd3634c78dc0cbe325b6"
68dcc4d3c89609125f3076300f2f67338989bb97,2018-02-01 14:34:37+01:00,"Revert ""[Fullstack] Mark test_bw_limit_qos_port_removed as unstable""

This reverts commit 7f7d65ea4c58b665c2b54fa9f2e8ec1f81668b48.

Now bug 1737892 is closed with patch
I3cf5c57c7f232deaa190ab6b0129e398fdabe592
so it should be safe to remove mark of this test as unstable.

Change-Id: Ie3f16dc113455062a9f404de045412d4097b3f8b
Related-Bug: #1737892"
82d468ba7fd6dce91fec015d39126e71c1434fb1,2018-02-01 17:05:28+02:00,"Windows: fix exec calls

At some point, we've switched to an alternative process launcher
that uses named pipes to communicate with the child processes. This
implementation has some issues, truncating the process output in some
situations.

This change switches back to subprocess.Popen, which is a much easier
and convenient way to perform exec calls. We're also ensuring that the
os module is not patched (which would cause subprocess.Popen to fail
on Windows due to an eventlet limitation, the reason why the above
mentioned implementation was first introduced).

We're also ensuring that such calls do not block other greenthreads
by leveraging eventlet.tpool.

Side note: I had to store subprocess.Popen in a variable in order
to avoid having OpenStack bandit complaining, even though we're
explicitly passing ""shell=False"":
http://paste.openstack.org/raw/658319/

Closes-Bug: #1709931

Change-Id: Ib58e12030e69ea10862452c2f141a7a5f2527621"
257de1531098620f1019e00ea8446ce6aa9212c0,2018-02-01 11:55:49-08:00,"Add notification for floatingip update/delete

As neutron now allows L3 Flavors, but when other backends use L3
flavors, the floating delete only commits db transaction therefore
removing fip from neutron db but backend still have that fip as active
because there's no notification for the subscribed precommit_delete
event.

Co-Authored-By: Isaku Yamahata <isaku.yamahata@intel.com>
Change-Id: I87dd124cc5bf17365ca197e4b35ffaa7825ca17c
Closes-Bug: #1742802"
2200b1c3697a478af9f25a20ce09564bc2c9a968,2018-02-05 17:28:23+08:00,"Add/rm centralized fips for DVR+HA from standby node

For DVR+HA:
When adding/removing a centralized fip, just add/remove it to/from
keepalived instance and do not check if it is a master router.

When adding a centralized fip, it is still needed to invoke method
of supperclass to configure nat rules on master node.

When removing a centralized fip, it is still needed to invoke method
of supperclass to clean contrack on master node.

Change-Id: I202db59acb7fb0b7924748cf7def2879a748e56a
Closes-Bug: #1736068"
9bef065bd0f05ecb9a3aed8bd2f651809a55dfec,2018-02-05 15:21:18+01:00,"Mock ipv6_utils.is_enabled_and_bind_by_default method

We test DHCP agent DeviceManager without mocking method
ipv6_utils.is_enabled_and_bind_by_default(). Because of that
it fails all the time on hosts without IPv6 support.
This patch adds mock to prevent those failures.

Change-Id: Icb4854892839a20619e92852c8b1a317d71231da
Closes-Bug: #1747437"
65a81623fc0377b26d2d5800607f7c3acc08c45a,2018-02-06 12:25:59-05:00,"Process conntrack updates in worker threads

With a large number of instances and/or security group rules,
conntrack updates when ports are removed or rules are changed
can take a long time to process.  By enqueuing these to a set
or worker threads, the agent can continue with other work while
they are processed in the background.

This is a change in behavior in the agent since it could
program a new set of security group rules before all existing
conntrack entries are deleted, but since the iptables or OVSfw
NAT rules will have been removed, it should not pose a
security issue.

Change-Id: Ibf858c7fdf7a822a30e4a0c4722d70fd272741b6
Closes-bug: #1745468"
31a3f2ff454cdbb1e1e3b69ec90611ba6ffdc903,2018-02-07 23:50:47+00:00,"l3: don't begin db transaction in set_extra_attr_value

As ExtraAttributesMixin.set_extra_attr_value() is assumed to be called
by callback of PRECOMMIT. So there is no point to start nested
transaction. So don't start transaction and check if transaction is
already started.

Change-Id: I0e2707222b1f91199cf466c997c0e691679fd3a4
Partial-bug: #1745633"
2aff1f165ecf05347c42bf5686b3b35bf560c26f,2018-02-08 14:42:29+00:00,"Use Router OVO in external_net_db

Router OVO is created in patch [1].
This patch uses Router object in external_net_db

[1] https://review.openstack.org/#/c/516961/

Co-Authored-By: Cao Xuan Hoang <hoangcx@vn.fujitsu.com>
Change-Id: Id3aaf473737ed70ab4e16a122c82457cc5e1f307"
477d4135ba079b0239a3e4f24c92ae3b7742e537,2018-02-08 11:59:47-05:00,"DVR: Fix dvr_no_external agent restart with fips

Centralized floating IP return to Error state when
the 'dvr_no_external' agent restarts.
The sync data received from the server was not handling
the agent properly and so was not update the 'dvr_snat_bound'
flag.
This would initiate an floating IP Error state.
This patch will fix the issue mentioned above.

Closes-Bug: #1741411
Change-Id: Id1cf26ffba8262ba7b3e5f41faa4cb28ba9dcb7d"
6f83466307fb21aee5bb596974644d457ae1fa60,2018-02-09 04:07:34+00:00,"Allow objects to opt in new engine facade

New facade is enabled by setting new_facade = True for the object of
interest. With new_facade on, all OVO actions will use the new reader /
writer decorator to activate sessions.

There are two new facade decorators added to OVO: db_context_reader and
db_context_write that should be used instead of explicit
autonested_transaction / reader.using / writer.using in OVO context.

All neutron.objects.db.api helpers now receive OVO classes / objects
instead of model classes, since they need to know which type of engine
facade to use for which object. While it means we change signatures for
those helper functions, they are not used anywhere outside neutron tree
except vmware-nsx unit tests, and the latter pass anyway because the
tests completely mock out them disregarding their signatures.

This patch also adds several new OVO objects to be able to continue
using neutron.objects.db.api helpers to persist models that previously
didn't have corresponding OVO classes.

Finally, the patch adds registration for missing options in
neutron/tests/unit/extensions/test_qos_fip.py to be able to debug
failures in those unit tests. Strictly speaking, this change doesn't
belong to the patch, but I include it nevertheless to speed up merge in
time close to release.

There are several non-obvious changes included, specifically:

- in neutron.objects.base, decorator() that refreshes / expunges models
from the active session now opens a subtransaction for the whole span of
call / refresh / expunge, so that we can safely refresh model regardless
of whether caller opened another parent subtransaction (it was not the
case for create_subnetpool in base db plugin code).

- in neutron.db.l3_fip_qos, removed code that updates obj.db_model
relationship directly after corresponding insertions for child policy
binding model. This code is not needed because the only caller to the
_process_extra_fip_qos_update method refetches latest state of floating
ip OVO object anyway, and this code triggers several unit test failures.

- unit tests checking that a single commit happens for get_object and
get_objects are no longer valid for new facade objects that use reader
decorator that doesn't commit but close. This change is as intended, so
unit tests were tweaked to check close for new facade objects.

Change-Id: I15ec238c18a464f977f7d1079605b82965052311
Related-Bug: #1746996"
adbef046291f40f59e673f26b9126522f5d2d6f1,2018-02-08 20:53:58-08:00,"Remove redundant get_object call when creating fip qos binding

We try to fetch binding (and doing it wrong by passing incorrect OVO
class), and then return the result to callers. But no callers care about
the result, so it's useless work (and bad code).

TrivialFix

Change-Id: I68b436c9a0665d276bcda30f414a79f4d83e3758
Related-Bug: #1746996"
530d97141acb63dfe02566bda0a7e78fb058b6b0,2018-02-12 10:12:23+08:00,"Fix unnecessary security_groups_member_updated notification

notify_sg_on_port_change will cause unnecessary notification to
neutron-l2-agents when port update, for example like port's name
updating will also notify.

notify_sg_on_port_change will only be needed when port's
Security Group update or port IP change.

Change-Id: I5439adf2c4b7dcf832241201fd949f6930e65fdf
Closes-Bug: #1720322"
02cc3ca30733c88003331af26fbd364d703dd552,2018-02-12 13:53:30+01:00,"ovsfw: Update SG rules even if OVSFW Port is not found

In patch [1] ovs firewall driver was changed and update_port_filter()
method was not trying to initialize port flows in case when
OVSFWPortNotFound is raised.
Without that when e.g. instance is hard rebooted and of_port
number is changed firewall openflow rules were not initialized
for such port and there was no connectivity to such VM.

[1] https://review.openstack.org/#/c/531414/

Change-Id: I6d917cbac61293e9a956a2efcd9f2b720e4cac95
Closes-Bug: #1747709"
0d4889df41485cece4bef5915753ae7efd808138,2018-02-12 15:38:24-05:00,"Always pass device_owner to _ipam_get_subnets()

There was one code path where the existing device_owner
value, which is used for subnet selection when service_type's
are in use was not passed to _imap_get_subnets().  This could
trigger one of two exceptions - HostNotCompatibleWithFixedIps()
or IpAddressGenerationFailureNoMatchingSubnet() depending
on the environment.  Pass it along if known.

Also update the IpAddressGenerationFailureNoMatchingSubnet
exception to print the network_id and service_type values since
it could aid in debugging the problem quicker.

Change-Id: Ic13901b92cac05e8ddf1092b66aa5bcc5623fa8a
Closes-bug: #1637366"
46d693530b97581998313fb307201a3afd7da112,2018-02-13 10:18:31+09:00,"Compile ovs for ovsfw to avoid ovs-vswitchd core dumps

Change-Id: I750224f7495aa46634bec1211599953cbbd4d1df
Closes-bug: #1742863"
a91d84cfb44a9def517f2990d164b4972023709a,2018-02-13 10:16:02+01:00,"Fix error message when duplicate QoS rule is created

When user tries to create QoS rule which already exists in same
QoS policy, only check if rule is duplicated was done on DB layer.
Because of that, there was many retries of DB operations so user
waits to response from Neutron server long time.
Also error message returned from this DB related exception was not
user friendly.

This patch adds additional check of such duplicated rules before
there is attempt to save new/updated rule in database so in case
of error, response is send to user faster and it has proper
message.

Change-Id: I7d55df1eb931583c3dde064e073deb3e5479acc2
Closes-Bug: #1746526"
6407a71d06c81f937c21079fc54aa2709a223e20,2018-02-13 12:07:34+01:00,"[Fullstack] Unmark test_dscp_marking_packets as unstable

Bug 1733649 is now closed with patch
Ia3522237dc787edb90d162ac4a5535ff5d2a03d5

This commit removes decorator which marked fullstack test
test_qos.TestDscpMarkingQoSOvs.test_dscp_marking_packets
as unstable.

This commit removes also some additional logs of tcpdump's
output added only as temporary ""debug"" solution.

Change-Id: I0343b1b4fd8d6eed1c26838bf70bce9868e6ee0c
Related-Bug: #1733649"
87f4d4e3ead5d2663643e244fd3464f114fcdba3,2018-02-13 23:27:09+08:00,"Add unit test cases for floating IP QoS extension

Add unit test scenario cases:
`update floating IP with port_id and qos_policy_id`
for floating IP qos extension.

Partially-Implements blueprint: floating-ip-rate-limit
Related-Bug: #1745386

Change-Id: I2d4f860d9b5da6b7a24fed0152e5d8b1e0325dcd"
d15244ab4f2562b46c5fbdb6ccebe18f66e5a579,2018-02-14 22:21:18+03:00,"Fixing the filter in get MTU by network list query.

Based on the observation that a call to sync_routers can be slow
(10-15 seconds for one virtual router), and that profiling data show
that a significant amount of time is spent in function
_get_mtus_by_network_list, this change fixes incorrect the database
query for getting information about networks.

What changed:
- before: SQL query spent time O(#networks in database)
          (select all exists networks from database)
- after : SQL query spent time O(#network_ids passed to the function)
          (select only needed networks)

A basic test shows a drastic improvements, from 2 second to around
~0.2 second, in the processing of a _get_mtus_by_network_list call
with 300 networks in database.

Change-Id: Id50d1aaddd0d2a1110502de9c5b974063daa296a
Closes-Bug: #1748888"
44b966837da4c4ce64eb5d02579ada65f062ac01,2018-02-15 01:40:31-08:00,"l3: an unit test for set_extra_attr_value

Add an unit test for set_extra_attr_value to check if
exception is raised when it's called out of db transaction.
This patch is follow up for I0e2707222b1f91199cf466c997c0e691679fd3a4

Change-Id: I1c9bdf88ceba8ac07c8501b2f5590bc6adc6c337
Partial-bug: #1745633"
2a44b3fa3dd0e7f133c3503d08e1b5fecf6cbc6f,2018-02-15 23:45:22+00:00,"Set mtu for VXLAN interface in linuxbridge

Change-Id: I169613ecf936b4484447d1ca0ed81e4cb5369ce2
Closes-Bug: #1744101"
d5f27524819bc95530d0d5856782546fd02d65f8,2018-02-19 20:09:06+09:00,"Ensure _get_changed_synthetic_fields() return updatable fields

Currently _get_changed_synthetic_fields() does not guarantee
returned fields to be updatable. This patch adds this guarantee.

Change-Id: I123ae390bec489a931180a2e33f4bf7b1d51edb2
Closes-Bug: #1750353"
92959238a3e408e810ccd4f3d3d453a35afb5bba,2018-02-19 19:47:26+00:00,"[Fullstack] Respawn dhclient process in case of error

When dhclient process is started as async process by fake machine resource,
it might happen that ""None"" will be returned as first line of output
from this process. This is treated as an error and dhclient is halted
immediately.
Because of that fake machine don't have configured IP address and
test fails.

This patch adds ""respawn_timeout"" value set to 5 seconds for dhclient
async process. When dhclient process is restarted it should works fine
and IP address should be then configured properly.

Change-Id: Ie056578abbe6e18c8415c6e61d755f2248a70541
Closes-Bug: #1728948"
465ad6f3197b8591a401a9f0db2fabf6c70fdfce,2018-02-20 09:24:38+01:00,"[Fullstack] Limit number of Neutron's api workers

Default number of api workers in Neutron is set to be equal to
number of CPU cores on host. That is fine on production environment
but on fullstack tests, where each test spawns own neutron-server
process it might cause host overload.

This patch limits number of api_workers to 2 which should be enough
for single test case and should make significantly lower load on host.

Change-Id: I1e970e35883d5240f0bd30eaea50313d93900580
Closes-Bug: #1750337"
db5fb02b11f143f0ac8c07e16a2cccfaa27215c2,2018-02-20 20:54:32+01:00,"[Linuxbridge] Check if vxlan network MTU can be set

In case when MTU value configured for VXLAN network is
higher than physical device's MTU - 50 (VXLAN overhead)
then Linuxbridge agent will log proper error message.

Change-Id: I2c1142877fee4ab2fa06e6e4d203c78a776d9591
Related-Bug: #1744101"
8c23e357095b986ddd966c2d280feb2eabb933bf,2018-02-22 13:36:43+01:00,"Fix creation of port when network has admin's QoS policy set

In case when admin user creats QoS policy and will attach it to
user's namespace there was an issue with getting such QoS policy
with user's context to validate it.

This patch changes it, that QoS policy is always get with elevated
context during port/network create/update validation.

Change-Id: I464888ca3920b42edd6ab638f6a317ee51ef0994
Closes-Bug: #1750591"
b564871bb759a38cf96527f94e7c7d4cc760b1c9,2018-03-02 14:26:30+00:00,"Only allow SG port ranges for whitelisted protocols

Iptables only supports port-ranges for certain protocols,
others will generate failures, possibly leaving the agent
looping trying to apply rules.  Change to not allow port
ranges outside of the list of known good protocols.

Change-Id: I5867f77fc5aedc169b42f50def0424ff209c164c
Closes-bug: #1749667"
97b30494a9263db684e5901113b53c25e55d1854,2018-03-06 10:13:44+01:00,"Iptables firewall driver adds forward rules for trusted ports

Iptables firewall driver can now add process trusted ports and
adds rules for them to FORWARD chain.

Change-Id: I67d0f17b4b56671fc2e2dd6e2fc4518dc42cd131
Closes-Bug: #1720205"
9362d4f1f21df2a27c818bb0c2918241eb67e3d0,2018-03-06 12:10:24+01:00,"Spawn/stop metadata proxies upon adding/deleting router interfaces

When a network becomes isolated and isolated_metadata_enabled=True, the DHCP
agent won't spawn the required metadata proxy instance unless the agent gets
restarted. Similarly, it won't stop them when the network is no longer
isolated.

This patch fixes it by updating the isolated metadata proxy on port_update_end
and port_delete_end methods which are invoked every time a router interface
port is added, updated or deleted.

Change-Id: I5c197a5755135357c6465dfe4803019a2ad52c14
Closes-Bug: #1753540
Signed-off-by: Daniel Alvarez <dalvarez@redhat.com>"
d019790fe436b72cb05b8d0ff1f3a62ebd9e9bee,2018-03-08 11:12:37-08:00,"DVR: Inter Tenant Traffic between networks not possible with shared net

Inter Tenant Traffic between two different networks that belong
to two different Tenants is not possible when connected through
a shared network that are internally connected through DVR
routers.

This issue can be seen in multinode environment where there
is network isolation.

The issue is, we have two different IP for the ports that are
connecting the two routers and DVR does not expose the router
interfaces outside a compute and is blocked by ovs tunnel bridge
rules.

This patch fixes the issue by not applying the DVR specific
rules in the tunnel-bridge to the shared network ports that
are connecting the routers.

Closes-Bug: #1751396
Change-Id: I0717f29209f1354605d2f4128949ddbaefd99629"
0ab03003b9f9c4f0cace538eee84478a099c0c58,2018-03-08 20:05:44+00:00,"[Scenario tests] Try longer SSH timeout for ubuntu image

It looks that many scenario tests are failing because of too long
instance booting time and reached ssh timeout during checking
connectivity.
So longer timeout should solve this problem and tests should
not fail with this reason.

Change-Id: I5d0678ea2383483e6106976c148353ef4352befd
Closes-Bug: #1754327"
f00d0a45cc544856b850b779af27625ae8435ce5,2018-03-09 02:14:20+00:00,"[L3] Expunge context session during floating IP updating

With a certain chance, updating the QoS policy ID of a floating IP does
not take effect. This is because the revision will be processed.
We use session.expunge to synchronize the latest floating IP data.

Change-Id: I5e708f91c70c63baeb886c5644f754d22df1637d
Closes-Bug: #1753384"
e0223edf88abc8c1bb8714121a0df8a9997c7a30,2018-03-09 23:09:25+01:00,"Switch ip addr add/del/flush commands to use pyroute2

This patch replaces usage of ""ip addr add/del/flush"" commands
with pyroute2 library.
This also switches from rootwrap to privsep when doing those
actions.

This patch adds also UT for _run_iproute_neigh/addr functions
from privileged module.

Change-Id: I6f4df391ec1899f8a4b10b50735dc9a79fa8483f
Related-Bug: #1492714"
7eeec2a0c9ba7019a1e918fae03ce0c54f019785,2018-03-12 16:41:00+00:00,"Add l3_agent_mode configuration in tempest

Add dvr_snat agent mode, this will works for
all types of routers.

Change-Id: I029504d53d4a6e4178c0384be9f21408f333ce20
Closes-Bug: #1731857"
3002df76d1133697cd0c3494c272cd41606d5899,2018-03-13 13:44:44+09:00,"Fix UTs to accommodate new_facade flag in OVO objects

In current UTs, in tests that do not actually touch databases,
we mock out refresh and expunge in current context. This will
not work under new engine facade, as new sessions are created
everytime.

We will need this fix when we set any object's new_facade flag
to True.

Closes-Bug: #1750735

Change-Id: I3a8bc06a671e37959e3014f8672b9a5e118c5c52"
53054ad463120bf73b8b87f2887dc98f67604896,2018-03-13 11:02:56+01:00,"Switch create/delete interfaces to pyroute2

Create and delete network interfaces in ip_lib.py module
now uses pyroute2 library.
Only exception is creation of veth currently as there is no
way to create veth pair and put one end of such veth
in another namespace in one call.

Related-Bug: #1492714

Change-Id: I0a658d91f173fb705b5987a1174bda6a6570468d"
8be0c2a551fea0c02d757c6ad460f8435423ec32,2018-03-13 15:56:39+01:00,"Set trusted port only once in iptables firewall driver

Patch [1] added configuration of forward rule for trusted ports in
iptables firewall driver.

This patch fixes issue with many ""duplicate iptables rule detected""
warning messages due to try to add such forward rule each time when
trusted port is updated.
Now such rule is added only once for port.

[1] https://review.openstack.org/#/c/525607/

Change-Id: Ib816887f07f16b6ac865bb81d0f27f12d0b47dfb
Closes-Bug: #1754770"
537bfb9a1ca8490610bb96863b9fa7e417d65132,2018-03-13 11:38:19-06:00,"use callback payloads for PRECOMMIT_UPDATE events

This patch switches callbacks over to the payload object style events
[1] for PRECOMMIT_UPDATE based notifications. To do so a DBEventPayload
object is used with the publish() method to pass along the related data.
In addition a few UTs are updated to work with the changes. Finally
a few shims are put into place to allow PRECOMMIT_UPDATE based events to
use payloads while still supporting the existing kwarg style events.

NeutronLibImpact

[1] https://docs.openstack.org/neutron-lib/latest/contributor/callbacks.html#event-payloads

Change-Id: Ie6d27df01cd7b87894efc80946d41eb1ebe25bef"
fbe308bdc12191c187343b5ef103dea9af738380,2018-03-13 23:55:00+00:00,"DVR: Fix allowed_address_pair IP, ARP table update by neutron agent

Allowed_address_pair IP when associated with a network port will
inherit the services MAC.
Right now the ARP entry is updated with the last MAC that it is
associated with. But when allowed_address_pair IPs are used in
the context of VRRP the MAC keeps switching between the MASTER
and SLAVE. VRRP instance sends out GARP, but the ARP entry in the
router namespace is not getting updated based on the GARP.

This might cause the VRRP IP and the service using the IP to fail.

Since we having been adding the ARP entry with NUD state as
PERMANENT, the ARP entries are set for ever and does not adopt the
GARP sent out by the VRRP instance.

This will cause instances associated with DVR routers to have a
service interruption.

So the proposed patch will add the ARP entry for the Allowed address
pair with NUD for 'REACHABLE'.
This allows the Allowed_address_pair IP MAC to be updated on the
fly.

Change-Id: I43c3471f5d259e8c2ee1685398a06a4680c0bfcd
Closes-Bug: #1608400"
3327db80be22650144342d1cc7e2c1b3e04a57ca,2018-03-14 14:27:40+00:00,"ovs-fw: Clear conntrack information before egress pipeline

In case where Neutron logical port is placed directly to hypervisor,
hypervisor does a conntrack lookup before packets reach OVS integration
bridge. This patch introduces a rule with high priority that is placed
at the beginning of the egress pipeline. This rule removes conntrack
information from all packets if conntrack information is present. Then
packets continue in the egress pipeline.

That means all packets in egress pipeline are not tracked and ovs
firewall can do a lookup in correct zone. As for ingress pipeline, it
distinguishes between tracked - which are packets coming from egress
pipeline, and not tracked, which are inbound packets coming not from a
local port.

Change-Id: Ia4f524adce2b5ee6d98d3921cfb03d56ad6d0813
Closes-bug: #1747082"
6c772de103e469ad17cdbc6a86ed15655aa6b9cc,2018-03-15 14:52:07-07:00,"tests: port test_port_presence_prevents_network_rbac_policy_deletion

The test was originally implemented in this form as a tempest api test
case, but there is a problem with it being part of tempest suite,
because the suite should be safe to execute on a running cloud and
shouldn't affect other tenants. But sharing a network with everyone (*)
briefly impacts other tenants because they see a new shared network
popping up for a second in their net-list. It is also an issue because
if we are unlucky enough, some other tenant may start an instance
without specifying a particular port or network to use, in which case
there is a chance that nova allocates a port in this shared network and
attach it to the instance. When the rbac test case then tries to delete
the policy and the network, it fails because it's still in use.

The solution is to stop testing this scenario in tempest suite, instead
moving it into unit test suite.

A follow-up patch in neutron-tempest-plugin will clean up the bad test
case.

Change-Id: I199f639c95e8ae884ede46404370d7b64da3b309
Needed-By: Iba89a53b2715cf3a9c7485f2089f27d547fea308
Related-Bug: #1753209"
97730821ef43d7abf76212865b5b24007f2f7f63,2018-03-16 20:27:58+09:00,"Add a test class to validate UTs fixes of new_facade flag

In I3a8bc06a671e37959e3014f8672b9a5e118c5c52, we added mocks to
avoid touching databases when switching to new engine facade.
However, currently we do not have test codes to catch those failure.
This patch adds a fake object setting new_facade to True, to validate
without I3a8bc06a671e37959e3014f8672b9a5e118c5c52, the test class
would fail.

Change-Id: I968806b237f9c1275e7624a0995189c1d0bc75fb
Closes-Bug: #1750735"
6f7ba76075dd0d645ad6cee6854f87cc41cba1fa,2018-03-16 15:31:21+00:00,"ovs-fw: Fix firewall blink

Previously, when security group was updated for given port, the firewall
removed all flows related to the port and added new rules. That
introduced a time window where there were no rules for the port.

This patch adds a new mechanism using cookie that can be described in
three states:

1) Create new openflow rules with non-default cookie that is considered
an updated cookie. All newly generated flows will be added with the next
cookie and all existing rules with default cookie are rewritten with the
default cookie.
2) Delete all rules for given port with the old default cookie. This
will leave the newly added rules in place.
3) Update the newly added flows with update cookie back to the default
cookie in order to avoid such flows being cleaned on the next restart of
ovs agent, as it fetches for stale flows.

Change-Id: I85d9e49c24ee7c91229b43cd329c42149637f254
Closes-bug: #1708731"
6b13cf0bee67e6196201e7863b1facce54b6d6f6,2018-03-16 11:49:26-07:00,"DVR: Fix mac format for backward compatibility with vsctl api

Fix the mac address format for backward compatibility with
vsctl ovs api

Closes-Bug: #1756406
Change-Id: I3ba11fae433b437d9d3a0b12dd8a11fe1b35046a"
aaf11f45ecf8f832301491017a8009f1897e8d43,2018-03-19 11:56:45+01:00,"Switch IPDevice.exists() method to use pyroute2

Check if network device exists is now done by checking
interface index with pyroute2 interface instead of checking
if MAC address for device is set.

Change-Id: I2d5b95ec109fb19fc2a46c1017959f74011b9a22
Related-Bug: #1492714"
bbe1bac3f78eb15190289b6bc8d6b3a9ae77b412,2018-03-20 21:42:26+01:00,"Don't raise error when removing not existing IP address

When privileged delete_ip_address function is called to delete
IP address which is already not configured on device, it should
not fail with any error.

Change-Id: I9247ac899a76e5d9a2962d2cb81279f2d6f16c0b
Closes-Bug: #1757259"
8e8aa9062e3a3d9c6de65c762379c6e74f3560d9,2018-03-20 21:31:17+00:00,"Revert ""[Fullstack] Mark security group test as unstable""

It is possible that issue with ncat process can be already fixed by [1]
so there is no need to mark as unstable anymore.

This reverts commit 685596f89c02711410bd6b650a12264ca99145fe.

[1] https://review.openstack.org/#/c/545820/

Change-Id: Ia4ea2ed86ec1fd7aee5428319efb956672c9d1a8"
2a1319ab7a21c2492627c38c5549d20eada899ff,2018-03-21 21:20:19+00:00,"Don't set administratively disabled ports as ACTIVE

There was a race condition during port update to disable it.
In case when neutron-server receives port update call to set
admin_state_down on port, it sends PORT_UPDATE notification
to agents.

Then both L2 and DHCP agents start doing their job with port.
L2 agent asks neutron-server about device details and during
processing this call server sets port's status to DOWN if
its admin_state_up = False.
Problem is that sometimes just after that, DHCP agent will send
to neutron server notification that provisioning for this port
is finished.
As there is no any other provisioning block in db (because it
is just port update) neutron-server is setting port's status
to ACTIVE.

This patch fixes this issue by allowing to transition to
ACTIVE only ports which are administratively enabled.

Change-Id: If506e0ff68fc49748f19618470c85901339a419b
Closes-Bug: #1757089"
21e0942c0c15949b96a42df2a46e0201b7704643,2018-03-22 10:03:45+00:00,"Revert ""use segment api def from neutron-lib""

This reverts commit ec1d5def67d404972d3a46a2c281380b061c5219.

For more details see https://bugs.launchpad.net/neutron/+bug/1757513

Related-Bug: #1757513

Change-Id: I29a96295d3f715cb68a2be1e8345b78c8e490948"
8c2dae659a806fdc20331de4b8a917ec3ae0e6f6,2018-03-23 12:57:01+01:00,"Fix l3-agent crash on routers without ha_state

l3-agent checks the HA state of routers when a router is updated.
To ensure that the HA state is only checked on HA routers the following
check is performed: `if router.get('ha') and not is_dvr_only_agent`.
This check should ensure that the check is only performed on
DvrEdgeHaRouter and HaRouter objects.

Unfortunately, there are cases where we have DvrEdgeRouter objects
running on 'dvr_snat' agents. E.g. when deploying a loadbalancer with
neutron-lbaas in a landscape with 6 network nodes and
max_l3_agents_per_router set to 3, it may happen that the loadbalancer
is placed on a network node that does not have a DvrEdgeHaRouter running
on it. In such a case, neutron will deploy a DvrEdgeRouter object on the
network node to serve the loadbalancer, just like it would deploy a
DvrEdgeRouter on a compute node when deploying a VM.

Under such circumstances each update to the router will lead to an
AttributeError, because the DvrEdgeRouter object does not have the
ha_state attribute.

This patch circumvents the issue by doing an additional check on the
router object to ensure that it actually has the ha_state attribute.

Change-Id: I755990324db445efd0ee0b8a9db1f4d7bfb58e26
Closes-Bug: #1755243"
781f730eb11c64f68a8063c140e1815cebc084fe,2018-03-24 22:42:00+00:00,"Switch ip link command to pyroute2

This patch switches IpLinkCommand methods from ip_lib
module to use pyroute2 library.

This commit adds also additional link attribute ""allmulticast""
thus allowing to make easy functional test for
set_allmulticast_on method from IpLinkCommand class.

Related-Bug: #1492714

Change-Id: I9ffd23c240c607ffd5f10beff5c8c8d5f01441e9"
b17aad2384ab1fa50dae9b4f39c860276fddadf8,2018-03-25 08:10:01+00:00,"Handle adding ip address when it already exists

Adding IP address on device is now done with pyroute2 lib.
This commit handle the case when pyroute2 function raise
exception when same IP address is already configured on
device.
In such case it will now raise exception which inherits from
RuntimeError what is consistent with eariler code when it
was done by running ""ip addr"" command to configue IP.

Change-Id: I89f22310782f2f0baf0ce6b20d2ab0e1d68654a0
Related-Bug: #1492714"
1e49eab25080ff82002604a8f38eafbfa9a4f9b9,2018-03-25 10:42:45+02:00,"[Fullstack] Add block test until IPs will be really configured

In securitygroups fullstack test dhcp agent is used to configure
IP addresses inside FakeMachines.
During preparation to test, when such fake vms are created,
they are only blocked until boot - so until port becomes ACTIVE
in Neutron's database.
This patch adds also blocking vms until IP address is really
configured on each of such VMs.
If IP address will be not configured then we should at least have
better error message then error that nc process cannot be started.

Change-Id: I709b1489132edba932a4c73bea60f810c26011fa
Related-Bug: #1744402"
0f4d7ff5277a3effcf23d17fd85abeb7dc78aca8,2018-03-27 08:11:54-07:00,"Catch Errors When Nova API Microversions Are Not Supported

Currently, errors related to lack of microversion support are completely
masked because of the way eventlet.spawn_n() works. These changes
improve error handling so that deployers are explicitly notified when
Nova API microversions are not supported. This is useful because without
microversion support, the entire flow will break and hosts will not be
associated with segments properly. Deployers will have no idea why
because errors are not printed to log files setup by the standard Python
logging framework.

Related-Bug: #1759004
Change-Id: I9c6151ffa90394612e7f81ededd4a309dd8ab7fb"
a1b49c796e44df35318fc35327b132aae22dce48,2018-03-27 11:38:39-07:00,"Don't define polling_interval option in two places

The option is currently defined in two places - as a generic agent
option and as a sriov agent specific one. This is a problem now that
oslo.config tracks location where options are defined
(I6dec1e09dcab203c6287f9c56c866f220a42f850) because when unit test
runner imports all modules, it registers the option from those two
separate locations, and since locations are different, it's considered
the options are duplicate, which results in the following error:

DuplicateOptError: duplicate option: polling_interval

To fix the issue, I removed the definition of the option from sriov
module and made sure the common agent options are registered whenever
the sriov module is imported.

Change-Id: I485532692f4b3a5804885e0325a8352fe6b1aa65
Closes-Bug: #1759345"
c331b898e19c8125d005c09d8a6e247805e506a8,2018-03-30 10:52:18-07:00,"DVR: Add error handling for get_network_info_for_id rpc call

Add error handling for get_network_info_for_id rpc call in the
ovs_dvr_neutron_agent.

Closes-Bug: #1758093
Change-Id: I44a5911554c712c89cdc8901cbc7b844c4b0a363"
bb5138cff4e6c383d4d9e902423072a1493832b9,2018-03-31 17:55:35-05:00,"Fix DHCP isolated subnets with routed networks

After the merge of [1], the DHCP agent will fail to configure a routed
network when attempting to generate host routes for a non-local subnet
that is also isolated from the point of view of the metadata service.
This patch adds a check to make sure that the host route is not added
for non-local subnets.

[1] https://review.openstack.org/#/c/468744

Change-Id: Ia03f538a7d2d10d600d9359da5b3a74532709d1f
Closes-Bug: #1758952"
81db328b2df08f2b4adcc80104cf05ad8966c019,2018-04-03 19:17:03-04:00,"Use cidr during tenant network rule deletion

If a distributed router has interfaces on multiple tenant networks, with
'fast exit' functionality policy based rules are created in qrouter
namespace for every tenant network subnet and 'from <cidr>' is included
into an 'ip rule' command invocation.

When a port on a tenant network is deleted 'from <cidr>' part is not
included and a first rule matching specified parameters gets deleted.

For example with the following layout

ip netns exec qrouter-4f9ca9ef-303b-4082-abbc-e50782d9b800 ip rule
0:      from all lookup local
32766:  from all lookup main
32767:  from all lookup default
80000:  from 192.168.100.0/24 lookup 16
80000:  from 192.168.200.0/24 lookup 16

and neutron l3 agent will use this command

ip netns exec qrouter-4f9ca9ef-303b-4082-abbc-e50782d9b800 ip -4 rule\
del priority 80000 table 16 type unicast

and 192.168.100.0/24 rule will get deleted even if you actually removed
a port on 192.168.200.0.

This results in an extra rule present and not cleaned up and the right
rule removed. It is only recreated if a router is disabled and enabled
again.

additional changes:

1) Floating IP rules are identified by priority only as implemented
currently - for this reason this change adds fixed_ip to the rule
removal code. Rule priorities are 32-bit values in iproute2 so,
in theory, those should be not be used to cover IPv6.

2) IP protocol information for 'from all' rules is currently
derived from link-local address IP version. The same approach
is preserved by using version-specific /0 addresses without
changing the API provided by ip_lib.

Change-Id: I0ea6dddd26e17771be223a1fbdf21792c90f3e9c
Closes-Bug: #1759956"
91068d097ee1bf62bd0be1982870054625047dbe,2018-04-04 09:35:55+07:00,"[doc][vpnaas] Fix reference url after recent change

This patch intends to fix the reference URL after the recent change
in vpnaas [1]

[1] https://review.openstack.org/#/c/555167/

Change-Id: Icfec7fe3329c545d2f60c6e6cb7c28d4c05d6f36"
ed7dd4dae0cf80f2314d9e113995e63a362b8295,2018-04-04 11:47:41-07:00,"DVR: Check for item_allocator key before releasing

item_allocator class maintains the allocation of
items(link local address) from a given pool.
There may be cases where the key has been already
released or not being remembered while trying to
release it.
So it makes sense to lookup for the key before
releasing the key.

Change-Id: I34765dd3efa6c6742caeb7f6ae2ff14009dce6dd
Closes-Bug: #1761260"
b62d1bfdf71c2f8810d9b143d50127b8f3a4942d,2018-04-04 23:43:00+00:00,"Router should flip to standby if all L3 nodes down

A HA router should always be active unless all of the agents hosting
that router go down.  In that event, the router should switch to
standby.  This behavior changed with review:
  https://review.openstack.org/#/c/411784

That review seemed to be accounting for a flakey message bus.  This
change should account for that, but also revert to the original behavior
of the router state only changing when its backing agent hosts are down.

Change-Id: I89c3b2546382624f175f8de4de621c3e53adf527
Closes-Bug: 1682145"
7b0f6330d6f877f3d2093a64c2bca4c14334574c,2018-04-05 11:16:45+00:00,"Handle AgentNotFoundByTypeHost exception properly

During listing router_ids on host it is possible that on some hosts
there are no L3 agents.
In such case AgentNotFoundByTypeHost exception is raised in
neutron.db.agents_db module in _get_agent_by_type_and_host() method.
Now this exception is properly handled during listing routers on host.

Change-Id: Ia5ff1b57ef63c98b4ada4f2d46c45336e413be3d
Closes-Bug: #1737917"
ff5e8d7d6cdc6ce3cd93aededec512e1855f6c28,2018-04-05 11:05:53-04:00,"Refresh router objects after port binding

Post-binding information about router ports is missing in results of RPC
calls made by l3 agents. sync_routers code ensures that bindings are
present, however, it does not refresh router objects before returning
them - for RPC clients ports remain unbound before the next sync and
there is no necessary address scope information present to create routes
from fip namespaces to qrouter namespaces.

Change-Id: Ia135f0ed7ca99887d5208fa78fe4df1ff6412c26
Closes-Bug: #1759971"
7c4da6fb756189e6afc1c699e06ce74488c61d45,2018-04-05 08:37:08-07:00,"DVR: Avoid address scope rules for dvr_no_external agents

All FloatingIP for DVR_NO_EXTERNAL agents will be configured
in the SNAT Namespace. So there is no need to configure the
address scope related routes in the router namespace when the
agent is configured as DVR_NO_EXTERNAL.

Change-Id: I009dae9e7f485641f2f19dce8dd575da04bfb044
Related-Bug: #1753434"
64028a389ff904f15e471b44bd5b3979c5db2cd2,2018-04-06 09:31:42-04:00,"DVR: Restarting l3 agent loses centralized fip ip on qg-interface

When l3 agent is restarted on a dvr_snat node that is configured
for L3_HA and has a centralized FloatingIP configured to the
qg-interface in the snat_namespace, that FloatingIP is not
re-configured to the qg-interface when agent starts.

The reason being, the cidr is not being retrieved from the
keepalived instance and only retrieved from the
centralized_fip_cidr_set.

If 'L3_HA' is configured we need to retrieve it from the keepalived
instance.

This patch fixes the problem by retrieving the cidrs from the
keepalived instance for the qg-interface.

Change-Id: I848a20d06e2d344503a4cb1776dbe2617d91bc41
Closes-Bug: #1740450"
6e6166bda47bd1fc8687340e479a913e7fc0ed58,2018-04-10 16:01:48+04:00,"Replace assert to raise AssertionError

This patch is a fix for the issue B101 assert_used found by bandit
scanner:
https://docs.openstack.org/bandit/latest/plugins/b101_assert_used.html
As assert functionality could be turned off by the -O option for python
interpreter, assert statements were replaced to raise AssertionError.

The main reasoning for that is rest code after assert could be not
ready for values that assert filters.

Change-Id: I92a871b1b496c96c0c76cb37e4dda51bfc007e38
Related-Bug: #1759250"
7a714aeb13e99b95a8f495765a1fa57297f92d30,2018-04-11 01:10:49+09:00,"Fix pep8 errors

Recent pep8 upgrade and corresponding pycodestyle update break
pep8 job due to the new rules.

This commit fixes the following new errors:
- E266 too many leading '#' for block comment
- E501 line too long
- H903  Windows style line endings not allowed in code

The following errors are added to the ignore list
as there are many errors:
- E402 module level import not at top of file
- E731 do not assign a lambda expression, use a def
- W503 line break before binary operator

Change-Id: I1fd3357479bb2ba3d89de92739ffac99900761b6"
5a1934da8e2a58943cdad337b53aab8a5fcbc7ea,2018-04-11 07:20:42+00:00,"unit test: unbreak test cases for callbacks.subscribe

patch set of [1] added callback priority so that a new argument, priority,
was added to subscribe method. Thus its signature was changed.
It caused to break some unit tests.[2] Those test cases check arguments passed
to subscribe method.

The fix to those test cases needs to be compatible with older version of
neutron-lib.
So add a helper method, get_subscribe_args, to produce argument to subscribe
by checking if neutron-lib supports callback priority or not. and apply it
to broken test cases.

[1] https://review.openstack.org/#/c/541766/
[2] http://logs.openstack.org/periodic/git.openstack.org/openstack/neutron/master/openstack-tox-py35-with-neutron-lib-master/66d328a/testr_results.html.gz
  test_capabilities.CapabilitiesTest.test_register
  test_ovs_capabilities.CapabilitiesTest.test_register
  test_backend.ServerSideRpcBackendTest.test___init__

Change-Id: I94066ff8a8dae5c5637478aa52883b3b451f2857"
4d84c10ba4430752bf8c1227c770fb3c4f0a1618,2018-04-11 14:40:41+00:00,"Add standard attributes to segment resource

Standard attributes (i.e. revision_number, created_at, updated_at)
are missing in the segment resource. This is because the controller
doesn't process extensions on rendering the response. This patch
fixes it. In particular, this patch does the following:
* Process extensions when making the segment dict. This allows
  other extensions to add attributes to segment response.
* Make segment extension implement update_attributes_map.

Tempest test: https://review.openstack.org/#/c/558609/

APIImpact update api reference of segments

Closes-Bug: #1760902
Change-Id: I3c93818002c2d7753454547231ba08544b6fa1c0"
1c36c268deca9450938b37b4fceee63aac270edf,2018-04-11 22:46:55-07:00,"tests/tools: add prefix ""_"" to CALLBACK_PRIORITY_SUPPORTED

As it's private variable in the module, add ""_"" prefix
to CALLBACK_PRIORITY_SUPPORTED to _CALLBACK_PRIORITY_SUPPORTED.
This patch is follow up patch for
https://review.openstack.org/#/c/560128/

Change-Id: I80aa34a000d1c1bd87cfff77af8fca56befe2542"
544597c6ef9fb297693dbeb0f2d7dc22f3a1b25d,2018-04-12 21:01:58+00:00,"ovs: survive errors from check_ovs_status

Instead of allowing an error to bubble up and exit from rpc_loop, catch
it and assume the switch is dead which will make the agent to wait until
the switch is back without failing the service.

Change-Id: Ic3095dd42b386f56b1f75ebb6a125606f295551b
Closes-Bug: #1731494"
56324c12aa58ff9cf46582611b071f3abb743ddf,2018-04-13 09:39:29+02:00,"Fix potential race condition in privileged ip_lib module

Functions like _run_iproute_{link,addr,neigh} are not atomic and
work in two steps.
First it tries to get device index and in second step calls specified
command for this device.
It might happen sometimes that device exists during first of those
steps but not exists during second step. Such case causes raising
pyroute2.NetlinkError exception which isn't properly handled in
Neutron code which uses ip_lib module.

This patch fixes it by catching pyroute2.NetlinkError exception
and raising NetworkInterfaceNotFound.
This is subclass of RuntimeError and all callers of ip_lib can handle
it properly is needed.

Change-Id: I568ef183466f5ff2f2c30ed74a7dc52db41ba577
Closes-Bug: #1763329"
43d451d86f8c1f9dff2a8580089a631680bb0c09,2018-04-13 21:51:18+00:00,"Enable sorting and pagination for segments

It looks the sorting and pagination are natively supported in
segment db layer but the segment controller doesn't mark these
features as supported. This patch fixes it.

Change-Id: I325396bb0256196ee6c6fc42cc812a0c75ae3827
Closes-Bug: #1763161"
7aa941cc09aef8efe54f5bac111248d296e9c8ef,2018-04-17 15:52:06+02:00,"[RBAC] Fix setting network as not shared

In case when network was shared with specified project
by RBAC rule and it was also set as ""shared"" there was
a bug which forbid to set such network as not shared even
if only projects which still used network was owner and
project with specified RBAC rule.

This patch fixes it by adding additional check in
NeutronDbPluginV2._validate_shared_update() in such case.

Change-Id: I6ab05a8f0ece454f5bef8ba978af05f5fa1354d8
Closes-Bug: #1764330"
922cd0a938ac9dad462c09e3483a22e634d722e9,2018-04-17 14:23:23+00:00,"Change ha_state property to always return a value

Right now, ha_state could return any value that is in
the state file, or even '' if the file is empty.  Instead,
return 'unknown' if it's empty.

We also need to update the translation map in the HA code
to deal with this new value to avoid a KeyError.

Related-bug: #1755243

Change-Id: I94a39e574cf4ff5facb76df352c14cbaba793e98"
38d0b2b52d7daf77cd3d5123bd2d9853fea7448f,2018-04-17 18:23:06+00:00,"ovs: raise RuntimeError in _get_dp if id is None

If the switch misbehaves, we may receive None from db_get_val. In this
case, int() on the return value will raise TypeError which is not
expected by callers and may result in ovs agent crash.

Instead of bubbling up the TypeError exception, we raise RuntimeError if
datapath id is None.

Change-Id: I53bea00b9a7302d694b8066e969c894bf64cb2d4
Closes-Bug: #1731494"
164e4563945a3efd31899c682d2948c5ab6964d0,2018-04-17 18:23:34+00:00,"ovs: split OVS_RESTARTED handler into a separate method

Change-Id: If535cad87369980010ef0111d5416d22db707cfe
Related-Bug: #1731494"
806d96cbbe45fcd473935e777a2a56037fbb9d12,2018-04-17 19:36:41+00:00,"Override ovsdb_timeout default value in ovs_cleanup tool

In case when there is a lot of ports to clean in bridge, default
ovsdb_timeout which is set for 10 seconds is not enough.
This patch overrides default 10 seconds timeout in neutron-ovs-cleanup
tool to 600 seconds.
600 seconds value was tested experimentally on my dev environment for
at least 10000 ports in bridge.

In case when user will have more ports to delete with this script,
it will be required to increase this ovsdb_timeout value in
configuration.

Change-Id: I79a554acdb1d6d61903be0c42d0215d302884e93
Closes-Bug: #1763604"
be8a7a2795edf9ce510b29d5b67d4ff0a4eb0f79,2018-04-17 16:10:34-05:00,"Fix handling of dstport option for VXLANs

When specifying a value for the 'dstport' option in the [vxlan] section
of the Linux bridge agent, the agent crashes upon start. This is
because the value specified in 'dstport' is incorrectly converted to
a string before being passed to pyroute2 when creating a VXLAN tunnel.
pyroute2 expects an integer value. This patch fixes this bug.

Change-Id: I83131f3bb32253cbc4acec3a1f38bf225223ff8b
Closes-Bug: #1764867"
769d499670f2f3ec060ccf2f7710da91fed6a76a,2018-04-18 19:02:00+08:00,"Update auth_uri option to www_authenticate_uri

Option auth_uri from group keystone_authtoken is deprecated[1].
Use option www_authenticate_uri from group keystone_authtoken.

[1]https://review.openstack.org/#/c/508522/

Change-Id: I19a55c7e849dd47edff4d37a87a860ecc7e9ad27"
0063aa33c65def9245730754ab2dc2f1b09b76e0,2018-04-18 15:37:20+00:00,"pecan.jsonify v1.3 adjustment

From pecan v1.3, pecan.jsonify uses json.Encoder unconditionally so that
jsonifying mock fails.
Pecan v1.2 uses simplejson.Encoder as encoder which accidentally encodes
MagicMock as {} due to check of '_asdict' attributes.
Since pecan.jsonify uses __json__ magic method when it's defined,
add __json__ method to mocks to return {} as json encode.

Closes-bug: #1754978
Change-Id: Iac955a7de2a1b66b5b56a73f5cc8a4e75150f82e"
9506044550ca0eab31612f0f1228eb30b2150532,2018-04-18 19:25:57+00:00,"Add a shim extension standard-attr-segment

Standard attributes has been added to segment [1] and we need
a shim extension to indicate this.

[1] https://review.openstack.org/#/c/558318/

Change-Id: I761fa7cb684a457726dedc95fde92d6adb86f5e4
Partial-Bug: #1765008"
7326717d36d31e2cc383b535a4af06f0dae9e56d,2018-04-18 15:57:18-05:00,"Make OVSDB debug logging optional

OVSDB debug messages are very chatty and make log files much bigger
without a lot of benefit 99.9% of the time. If there is ever a need
for them because we are having a *really* weird OVSDB issue, then
we can configure the jobs to turn them back on.

Change-Id: I1d1e5e312509022084bcb651968bb9543ff61ba4
Closes-Bug: #1687065"
a75014792aeda0851510531919d040090e1aec15,2018-04-23 14:30:32+00:00,"Revert ""Automatically expire obsolete relationships""

This reverts commit 90ede813b06eb46472824a7090354c31cf43791f.

Closes-Bug: #1766267
Change-Id: Ia491a2a404bcbd9e108d20b2d9393aff1bb48c8e"
8b2c40366b3b65876e5465efae05b171be1bc473,2018-04-23 14:49:16+00:00,"ovs-fw: Apply openflow rules immediately during update

Because update operation updates openflow rules three times:
 1) New rules with new cookie
 2) Delete old rules with old cookie
 3) Change new cookie back to old cookie

and the step 2) uses --strict parameter, it's needed to apply rules
before deleting the old rules because --strict parameter cannot be
combined with non-strict. This patch applies openflow rules after
step 1), then --strict rules in step 2 are applied right away and then
rest of delete part from 2) and all new rules from 3) are applied
together.

This patch adds optional interval parameter to Pinger class which sends
more ICMP packets per second in the firewall blink tests to increase a
chance of sending a packet while firewall is in inconsistent state.

Change-Id: I25d9c87225feda1b5ddd442dd01529424186e05b
Closes-bug: #1708731"
60d62d310373a65a362a4bdeb183dcb37511d360,2018-04-24 12:16:43+02:00,"[Linuxbridge] Handle properly too big VXLAN MTU values

In case when MTU value configured for VXLAN network is
higher than physical device's MTU - VXLAN overhead
then Linuxbridge agent will not be able to create properly
vxlan interface with desired MTU value.
In patch [1] there was introduced validation if MTU of
physical device is big enough to create MTU with required
MTU value but it was working only for IPv4 tunnels as
for IPv6 overhead is bigger.

This patch changes this validation a bit and now it will
works properly for both IPv4 and IPv6  VXLAN tunnels.

[1] https://review.openstack.org/#/c/546291/

Change-Id: Ib707312adb45dae7295884aba4ece6538d330d56
Related-Bug: #1744101"
f6b0f7635c222029fc1b554dffceb579b3e4a846,2018-04-24 17:57:30+04:00,"Eliminate possible insecure usage of temp file/directory

This patch is a fix for the issue B108: hardcoded_tmp_directory
found by bandit scanner.

The main reasoning for that is the need for safely creating
a temporary file or directory.

Change-Id: I4277e9196b9b707b83bb298faeccb59f07d6f10b
Related-Bug: #1759250"
dbed642c4ca93e77dc53d8aac9086ab2e60ebaa9,2018-04-24 14:41:55+00:00,"Do not remove conntrack jump rules if no zone

In corner cases, the firewall code could try and remove
non-existent conntrack zone jump rules if a zone has never
been allocated.  This could happen on an agent restart
when there are no longer ports in the zone on the
compute node.  Skip the removal since it will just generate
an iptables warning complaining the existing rule does
not exist.

Change-Id: Ie32733b4a06b6d75cf1eb78915a510a4bb78f619
Closes-bug: #1765208"
e36a2bd65c65d7dad15579aa86bb5fe6614a40ab,2018-04-24 14:59:23+00:00,"Move standard-attr-segment to service plugin

Standard attributes was added to segment resource at [1].
In [2], a shim extension standard-attr-segment was added to ml2
plugin to indicate this change, but this extension should be
placed to segment service plugin instead. This commit fixes it.

[1] https://review.openstack.org/#/c/558318/
[2] https://review.openstack.org/#/c/562320/

Change-Id: I5b0a6bafd1e3f4552e32809a449868d7a5868739
Closes-Bug: #1765008"
0b8bcc4d74187d4fdee26f6d57d72c70809ea70e,2018-04-24 20:42:03+03:00,"Adds egress and ingress forward rules for trusted ports

Iptables firewall driver now adds rules for trusted ports to FORWARD
chain in EGRESS and INGRESS directions.
Unfiltered and trusted port rules are too wide. We have to match
traffic against security groups first.

Change-Id: I61e4dc92669e33a207adfb72a1692184884143e1
Closes-Bug: #1762736"
c760d4f26f4b4753c80269437d2cd0b8f63dbc7c,2018-04-25 17:16:03+00:00,"Add port_details to Floating IP

If the floating IP is associated with a port, this attribute
will contain detailed information of the associated port. This allows
users to retrieve the floating IPs with information of its associated
port (if any) in one API call.

Other related patches:
* neutron-lib: https://review.openstack.org/#/c/534882/
* osc: https://review.openstack.org/#/c/533809/
* sdk: https://review.openstack.org/#/c/533811/
* tempest-plugin: https://review.openstack.org/#/c/561710/

APIImpact the API reference needs to be updated

Change-Id: I31e940d2986278d2fbee6fdfea4ff15f7c07ebaa
Partial-Bug: #1723026"
3ad91f61f2d40d788764d64b1870d509069aad0a,2018-04-26 20:15:46+00:00,"Remove deprecated IVS interface driver

This was marked deprecated in Queens for removal in Rocky,
https://review.openstack.org/#/c/505401/

Change-Id: I77fa59ae1819e87ab8ccc1fa5f0db86de3b90e2e"
fab032b426e1fa89dc473c61cbf15377fe4aaff3,2018-04-27 15:50:47-04:00,"Retry dhcp_release on failures

Sometimes calls to dhcp_release(6) do not result in removal
of a lease from the leases file, for example, when the release
packet is not received by dnsmasq.  Trying more than once is
recommended in this case.

Instead of blindly trying some number of times, we monitor
the lease file contents, and retry the dhcp_release(6) call
when an entry still remains.  This is possible since
dhcp_release(6) is being run from the DHCP server itself.
We try three times and wait 0.3 seconds between tries.

We also now check for any stale leases in the leases file
that are unknown to neutron, also trying to remove them.

Change-Id: Ic1864f7efbc94db1369ac7f3e2879fda86f95a11
Closes-bug: #1764481"
8ac92aa946a985a20d279312d041fd66e09a9fbd,2018-04-28 17:30:21+09:00,"Select service_provider on the basis of service_module

In case of service_provider, selection according to service type is
necessary. Currently there was no filtering logic, so if there are two
or more service plugins using service_provider, there is a duplicate
service_provider.

New argument 'svc_type' is added to ProviderConfiguration so that only
the service_provider matching the service type is shown.

From caller side of ProviderConfiguration, one should specify
'svc_type' since ProviderConfiguration class have new 'svc_type'
argument to find service provider. Although netron code base using
ProviderConfiguration changed, existed code out of newtron tree should
be also modified following the change becuase if not, there would be
duplicated entries problem currently appeared. But there is no
difference without 'svc_type' argument because matching is effective
only when the argument is specified.

A new test case added in test_get_service_providers() in
neutron/tests/unit/extensions/test_servicetype.py which does not
have any filter options. Without this patch, this test case would be
failed having duplicated results.

Change-Id: I6ad9897dd174b45c7f2315699d25d38d4c060abc
Closes-Bug: #1763627"
7a97b33df5bc15a35a1df522440b444eb76abcea,2018-04-30 15:43:47-04:00,"Fix hw_vif_multiqueue_enabled typo

hw_vif_mutliqueue_enabled is not the right spelling.

Change-Id: I0fe4734888b734ac5962a530e2429d94aa4594d1
Closes-bug: #1767267"
a732bbf19e31f6bab8d1ffd2540f6e367caab4c8,2018-05-02 20:05:11+00:00,"Support filter attribute with empty string

This will enable users to filter list of results with attributes
with empty value. For example, the request below will list
all unbound ports (unbound ports have blank device_id).

  GET ""/ports?device_id=""

APIImpact
Change-Id: I9001214de126eb888c2425b6a6275f59ec8478e7
Closes-Bug: #1749304"
0c112a9f8997472bc9bc27b11501fc18c2e35dd5,2018-05-03 11:23:01-06:00,"remove description API attr from securitygroup

This patch removes the explicit API definition of the 'description'
attribute from the security group API extension. This
attributes is redundant as its added by default by the
standardattrdescription extension and moreover are clobbered by the
latter.

In addition this patch updates the UTs to account for the extension
manager not adding the standardattrdescription to the security group
definition during test runtime.

Also note that the segment API extension has the same issue, but will be
handled with the consumption of https://review.openstack.org/#/c/562331/

Change-Id: I1fcc2adf13792705fc4bb6faf757ee59faee1349
Partial-Bug: 1757513"
35365ead42eec24027140d3cfd9dfeb40316e8d6,2018-05-04 10:20:18+08:00,"[L3][QoS] Cover mixed dvr_snat and compute node dvr router

The dvr_snat node can also run the nova-compute which will
make the fip_qos l3 agent extension failed to install the
qos tc rules for the dvr router floating IPs.

To cover such mixed deployment, the tc rules for floating IP
qos will be processed again in qrouter-namespace of the
dvr_snat node, and the device is rfp-device.

Change-Id: I9eca25201e0647d4da77b325fba03cca1db5bb4d
Closes-Bug: #1758316"
e1761d2e29cdd93dffe3d39c0b9407b2facaa0c1,2018-05-07 11:21:34+09:00,"Update install doc for ubuntu

This change updates the auth_url value to match what has changed
in the keystone install guide:

https://review.openstack.org/#/c/541857/

Change-Id: I97356b31af35ef19d02b9f0c0a57cbde16752c65"
88688fb1082d01ae6f742b03c711faa4735a4109,2018-05-07 15:01:58+00:00,"Use extension fip-port-details from neutron-lib

The fip-port-details extension's API definition was added into
neutron-lib with https://review.openstack.org/#/c/534882/
This patch consumes it by using the API definition.

It also bumps the requires to use neutron-lib 1.14.0

NeutronLibImpact

Change-Id: I9a93c0aef247f6145f3a55a44d08844d74b44eff"
e177aafcedef27782bba5b34e7880cac56e9c773,2018-05-07 11:25:57-05:00,"Fix _setUpExtension shim

[1] recently converted _setUpExtension in [2] into a shim for a new
setup_extension method where an unused argument (resource_attribute_map)
is removed. In the process, a bug was introduced when calling the
new method by calling it with predefined values. This patch fixes it.

[1] Ia59fc1978228f9982d3ee447ebcfcb712eebbdb7
[2] neutron.tests.unit.extensions.base

Closes-Bug: #1769704

Change-Id: I39fb64d76809f49526e557e39cb07dfd9abdf9cb"
85b46cd51ebec67d5018d8bef4f796ee5ef4fedf,2018-05-07 22:53:20+02:00,"Monitor phys_bridges to reconfigured it if created again

In case when external bridge configured in OVS agent's bridge_mappings
will be destroyed and created again (for example by running ifup-ovs
script on Centos) bridge wasn't configured by OVS agent.
That might cause broken connectivity for OpenStack's dataplane if
dataplane network also uses same bridge.

This patch adds additional ovsdb-monitor to monitor if any
of physical bridges configured in bridge_mappings was created.
If so, agent will reconfigure it to restore proper openflow rules
on it.

Change-Id: I9c0dc587e70327e03be5a64522d0c679665f79bd
Closes-Bug: #1768990"
52a3779c2aaacbcca800e2e2343b1f99db80c5c7,2018-05-08 23:18:47+02:00,"Make neutron-tempest-ovsfw job gating

This job works as voting in check queue since [1]
was merged.
It works without problems for few weeks so now it's
time to add it to gate queue also.

[1] https://review.openstack.org/#/c/560097/

Change-Id: I051da2af89cee53db84fd7a4df458e7abbfddaa7"
c69a570c87e5beeb1bdc7a913bf8e3b6275d7cd7,2018-05-08 22:26:00+00:00,"Annotate filter parameters for standard attributes

Add 'is_filter' keyword for attributes 'revision_number' and
'description'. This indicates that these two attributes can be used
as filter parameters for standard resources. In the future, we will
rely on this to perform filter validation:
https://review.openstack.org/#/c/554368/

Change-Id: I847a849720297fb6b316098e278fa5c71dd1010a
Related-Bug: #1749820"
fa78b580105111b1238e5b18d415b08e8fb35d97,2018-05-09 19:04:20+00:00,"dhcp: serializing port delete and network rpc calls

The port delete events are not synchronized with network rpc events.  This
creates a condition which makes it possible for a port delete event to be
processed just before a previously started network query completes.

The problematic order of operations is as follows:

  1) a network is scheduled to an agent; a network rpc is sent to the
     agent

  2) the agent queries the network data from the server

  3) while that query is in progress a port on that network is deleted; a
     port rpc is sent to the agent

  4) that port delete rpc is received before the network query rpc
     completes

  5) the port delete results in no action because the port was not present
     on the agent

  6) the network query finishes and adds the port to the cache (even
     though the port has already been deleted)

  7) some time passes and a new port is configured with the same IP
     address as the port that was deleted in (3)

  8) the dhcp host file is corrupted with 2 entries for the same IP
     address.

  9) dhcp queries for the newest port is rejected because of the duplicate
     entry in the dhcp host file.

The solution is to add the network_id to the port_delete_end rpc event
so that the _net_lock(network_id) synchronization point can be acquired
so that it is processed serially with other network related events.

To ensure backwards compatibility with newer agents running against older
servers the determination of which network_id value to use in the lock is
handled using a utility that will fallback to the previous mode of operation
whenever the network_id attribute is not present in the *_delete_end RPC
events.  That utility can be removed in the future when it is guaranteed
that the network_id attribute will be present in RPC messages from the
server.

Closes-Bug: #1732456

Change-Id: I735f8b1c9248b12e5feb6cbe970cf67f321e6ebc
Signed-off-by: Allain Legacy <allain.legacy@windriver.com>"
f213ba487b104e00048c5aeda52a04043413d51d,2018-05-10 21:28:17+00:00,"Populate project info before using it

Sorting and filtering will rely on the attributes information. It is
necessary to populate project info before using it to sort/filter.

Closes-Bug: #1765452
Change-Id: Ife90268530b6e86a0b0d213e4742a2ef81cb2395"
1658e353c336d666ec43f725bd2c87633b43571d,2018-05-15 14:46:41+00:00,"Fullstack: Add using multiple security groups

Change-Id: I8eadb434be3e7d0849a6e4c3bdf75dbfb5f15a83
Closes-Bug: #1690998"
f3f2436d6db724126e5611d632b7d1efe309a2af,2018-05-15 19:02:36+00:00,"py3: Fix ingress_bw_limit_for_dpdk_port() value conversion

Python 3 is not able to type int from string but max_bw_in_bytes is a
string in float format. This patch types first to float and then to int,
hence no ValueError is raised.

Change-Id: I7a527a58f79c1451d8593330d433f620cb0a4107
Closes-bug: #1771409"
ec0760a40e68f921e482d77a01551f7f4e0e3788,2018-05-15 19:06:36+00:00,"py3: Fix list_entries for netlink_lib

As privsep communicates with main process via socket, data passed
through this socket must be string type in Python 3. This patch converts
bytes to string, then privsep works correctly.

Change-Id: I6838d13b5acc32e939fba3c9abfea7cd483e971b
Closes-bug: #1771410"
1a8a15f6309a56087702a0974041fa9850de4f62,2018-05-15 19:51:49+00:00,"objects: avoid deepcopying models in test_db_obj

SQLAlchemy may asynchronously push models out of session cache in which
case we may receive DetachedInstanceError.

In the test case, instead of deepcopying models to compare, compare
each modified attribute independently.

This change also includes conversion from InstrumentedLists to regular
lists when converting model attributes to object fields. The fact that
we were returning InstrumentedLists was always an oversight but it
revealed itself after the modification of the test case that is the
core of this patch.

When converting object fields to db, convert Port's distributed_binding
None value to a empty list to reflect that the relationship of the Port
database model is a list. It was not an issue before the patch because
we were not comparing model attribute for equality but for in-equality
before, and so None was always != [].

Finally, this patch moves a bunch of TODOs to better reflect where they
belong to.

Closes-Bug: #1770452
Change-Id: I42cdf540129bd4470ec1a59345db9845a6198328"
5e59cd2a5fcac205e3452efa20a1738c54834520,2018-05-17 10:11:27+08:00,"Refactor for L3 router QoS extensions

Move the l3 qos extensions to a separated folder,
then we can move a following up router gateway IP
QoS extension to it.

And also extract some common code to a base class.

Related-Bug: #1757044
Change-Id: I63cc9506caa80f889ad817444281a0ac31bc9418"
59bc19c14a84283adad555dce8536fd7198b82b3,2018-05-17 10:25:28+03:00,"Use Param DHCP_OPT_CLIENT_ID_NUM

Ironic is sending 'client-id' as a number (61) to meet rfc4776 [1],
due to this change Neutron DHCP should support this option as well.

[1] https://github.com/openstack/ironic/commit/228a2a7885e1b04d4180fe8daa2992884decaf6d

Closes-Bug: #1770932
Change-Id: I9728354d5f9e08a0dc23900b2bc22b4a0aedb737"
b9fabd82675e2b74dd4afd3b7d1f8fbda6951ecd,2018-05-18 00:14:33+00:00,"l3 flavor: more events/notifications and callback priority

After the addition of a new resource and related events with [1],
this patch adds the necessary notifications for l3 flavor,
resource(ROUTER_CONTROLLER) and events(PRECOMMIT_ADD_ASSOCIATION and
PRECOMMIT_DELETE_ASSOCIATIONS) so that l3 flavor driver can subscribe to
them when flavor is changed.

Apply callback priority to ensure that the ordering of callback the
following.
- l3_*_db callbacks to extend l3 extended attributes
  This callbacks need to be called first so that rest callbacks can
  see those extended attributes.
- l3 driver controller callbacks
- l3 flavor driver callbacks
extra routes/l3_gwmode/l3_hamode need care because they are
updated via update_router but within different db transaction.

[1] I1e72ee843851004d26410a90da4030ab3b024741

Closes-Bug: #1745633

Co-Authored-By: Manjeet Singh Bhatia<manjeet.s.bhatia@intel.com>
Change-Id: If20b11f0587f1ed30db72d97c15b20d4c6e87543
Depends-On: https://review.openstack.org/#/c/541766/"
2e34279ec3f4e93a7eca1e89b307fdbeb15b211e,2018-05-17 22:31:44-04:00,"Fix lack of routes for neighbour IPv4 subnets

According to [1], when a network contains more that one IPv4
subnet, they are returned in the 'classless-static-routes'
DHCP option, regardless of whether DHCP is enabled for them
or not.

However, the get_active_networks_info() method used for
synchronizing networks after the dhcp agent restarts filters
subnets with ""enable_dhcp=True"", which differs from the
get_network_info() method.  This will block VM access to
other VMs in the dhcp disabled subnets, even though they are
in the same network.  This is visible by looking at the ""opts""
file before and after a restart.

Change the dhcp agent to ask for all subnets in its
get_active_networks_info() RPC call by adding an
enable_dhcp_filter argument to toggle the behavior, with the
default being True to not break backwards compatibility.

Based on https://review.openstack.org/#/c/352530/ by Quan Tian.

[1] https://review.openstack.org/#/c/125043/

Change-Id: I11ca1d1a603d02587f3b8d4a5a52a96b0587d61f
Closes-Bug: #1652654"
52dc615b0dfd47df0bc11c1185949a86820246b0,2018-05-21 10:19:04-06:00,"use exc_to_retry from lib

The publicly used APIs from neutron.db.api were rehomed into neutron-lib
with https://review.openstack.org/#/c/557040/

This patch consumes exc_to_retry from neutron-lib by removing it in
neutron and using it from lib.

NeutronLibImpact

Change-Id: I785c20f0df7a281c135e8e3fc8af439e6e481d52"
edc909a26793584fa7cf07ba84b0cad4c26b3275,2018-05-23 06:31:32+00:00,"Change ovs release used to compile kernel module for tests node

In some test jobs, like fullstack and ovsfw-scenario job
openvswitch kernel module is compiled from source before tests.
This compilation was failing because of new kernel 4.4.0-127 provided
by Ubuntu.

Kernel module will be compiled from source which contains
fix for this change in kernel.
See related openvswitch commit message for details:
https://github.com/openvswitch/ovs/commit/138df3e563de9da0e5a4155b3534a69621495742

As current Ubuntu uses ovs 2.9.0 we don't need to compile ovs for
ovsfw-scenario-job anymore because fix we needed is already contained
in ovs 2.9.0.

Change-Id: Idc34776e5b2fad105e246f7718220c23f0a94164
Closes-bug: #1772689"
b6d117fcd577f50a431113c4ad13258a7692e822,2018-05-24 01:09:02+02:00,"Allow setting network-segment on subnet update

To enable the possibility to migrate a non-routed network to a
routed network allow updating the segment_id of a subnet.

Only allow the operation if:
 - The network only has one segment
 - The network only has one subnet
 - The current segment_id == None

APIImpact: The segment_id attribute of subnets now allows put operation.
Closes-Bug: #1692490
Depends-On: Iffda823a149a1143f46ee9a05e9640b34bf42c51
Change-Id: I1aee29dfb59e9769ec0f1cb1f5d2933bc5dc0dc5"
232ba4ef3cac257ef99d3c0f1a9d26d818ddc12c,2018-05-24 09:49:03-06:00,"expose objects as entry points in setup.cfg

We've already added support for pluggable (via entry points) object
loading in neutron-lib with [1]

This patch exposes the neutron.objects in setup.cfg using entry points
so that consumers can start to use them via the API in [1] rather than
directly import them from neutron.

[1] https://review.openstack.org/#/c/553838/

Change-Id: I25ddd77c55f48997ff6131f232addb4c2e629804"
1128619f1c2598b3b7b023a5d4a9f32d8ef5a529,2018-05-24 10:21:07-06:00,"use dhcpagentscheduler api def from neutron-lib

The dhcpagentscheduler extension's API definition was rehomed into
neutron-lib with https://review.openstack.org/#/c/520751/
This patch consumes it by using the API definition and it's constants
where applicable.

NeutronLibImpact

Change-Id: Ib0c97268f01885f6daacb3d1cdbbd94bb6020d60"
37b66a4700ec944ebc0a3bf140c1b01ce3c4987d,2018-05-29 19:19:57+00:00,"Fix an attribute error on listing AZs with filters

Change-Id: Ib84b1f869f936cf45abb2fab8e14e92d714cdbd3
Closes-Bug: #1768952"
3e9e2a5b4b2654864bb0e2a7d9b841eb03240147,2018-05-31 20:19:21+00:00,"Disable IPv6 forwarding by default on HA routers

In case of HA routers IPv6 forwarding is not disabled by default and
then enabled only on master node.
Before this patch it was done in opposite way, so forwarding was
enabled by default and then disabled on backup nodes.
When forwarding was enabled/disabled for qg- port, MLDv2 packets are
sent and that might lead to temportary packets loss as packets to
FIP were sent to this backup node instead of master one.

Related-Bug: #1771841

Change-Id: Ia6b772e91c1f94612ca29d7082eca999372e60d6"
50b3a168e86316ab92ba828c1a00ab963532ad1c,2018-05-31 17:41:27-04:00,"Mention neutron-rootwrap-daemon in root_helper_daemon option help

An operators mailing list thread [1] discussing scale issues
where vif plugging times out eventually came to the conclusion
that several operators run rootwrap in the neutron agent in daemon
mode.

This ability is not clear from the configuration option help, however,
so this change adds more details on running in this mode to achieve
scale. Another nice discussion about this can be found here [2].

There is a corresponding nova patch [3] to mention this option
if operators are hitting vif plugging timeouts in nova.

This doesn't change any defaults, it just improves the documentation.

The help text formatting is also updated for easier readability
and maintainability in the source.

[1] http://lists.openstack.org/pipermail/openstack-operators/2018-May/015364.html
[2] https://cloudblog.switch.ch/2017/08/28/starting-1000-instances-on-switchengines/
[3] https://review.openstack.org/571577/

Change-Id: I8b8a0cfea409c3469ad0ee223c87e0380b3afbad
Closes-Bug: #1774217"
89133d0cb8edcbc20bae70a9796164d047340152,2018-06-01 12:27:44+00:00,"doc: update doc to refer new trusted tag for SR-IOV

It allows Virtual Functions to become “trusted” by the Physical
Function and perform some privileged operations, such as enabling VF
promiscuous mode and changing VF MAC address within the guest. The
inability to modify MAC addresses in the guest prevents the users from
being able to easily set up two VFs in a fail-over bond in a
guest. This spec aims to suggest a way for users to boot instances
with trusted VFs.

https://specs.openstack.org/openstack/nova-specs/specs/rocky/approved/sriov-trusted-vfs.html

Change-Id: I58cbfd9698a6c7832abc52e0be70eab72f66e11a
Depends-On: https://review.openstack.org/#/c/458820/
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@redhat.com>"
cb0782ce611af6d9d1a063f10a96f8daf4115850,2018-06-01 07:07:56-06:00,"use std attr description for the segment extension

With the work done in [1], [2] and [3], we should be able to normalize
the description for segments by relying on that from the
standardattrdescription description.

This patch removes the 'description' from the segment extension's
attribute map as well as adds the standard attribute description and
shim extension in [1] as required extensions to ensure the description
is in fact added. Also the UTs are updated to inject the std attr
description into the segment API attributes for testing and no longer
test that description can be None (not supported with std attr
description).

Additional work is needed to close up the partial bug herein:
- Updating the segment API def/ref in neutron-lib.
- Consuming the former in neutron so that the segment extension uses
the API from neutron-lib.

[1] https://review.openstack.org/#/c/562320/
[2] https://review.openstack.org/#/c/558318/
[3] https://review.openstack.org/#/c/562345/

Change-Id: I693222b7041f4f6f7f6a1096a22727a66364636a
Partial-Bug: 1757513"
50ddf4b5ad05adb5090d6d14f63c07cfd9773ab4,2018-06-03 11:14:03+02:00,"Replace ovsfw tempest job with iptables-hybrid tempest job

In commit [1] openvswitch firewall driver is switched to be
default one used in devstack.
So various tempest jobs will use this driver and it will be
tested.
We now need separate job to test non-default firewall driver
which currently is iptables-hybrid driver.

[1] https://review.openstack.org/#/c/568297/

Depends-On: https://review.openstack.org/#/c/568297/
Change-Id: I6061a173c95c8a41a61bfa298ae5964cc9b5d2e8"
0dc8e7fbfb368d208e1278a2357b31a3e0a0a595,2018-06-04 16:27:08+00:00,"Add flavor_id argument to router tests.

As neutron/tests/unit/extensions/test_l3.py is used networking-odl for
functional tests, it ignores flavor data because flavor_id is not
included in hardcoded argument list.

Change-Id: I1826f50233dcf83f991e78d59ce1d3df2bc9013b
Closes-Bug: #1769751"
d0fa2c9ac50a783c410fab2df938974c4e829ffa,2018-06-05 01:07:40+00:00,"Don't skip DVR port while neutron-openvswitch-agent is restared.

neutron-openvswitch-agent will refresh flows when it's restarted.
But the port's binding status is not changed, update_port_postcommit
will be skipped at function '_update_individual_port_db_status' in
'neutron/plugins/ml2/plugin.py', l2pop don't handle DVR ports, the
fdb entries about DVR port will not be added.

So, we can't skip DVR port at notify_l2pop_port_wiring when agent
is restared.

Closes-Bug: #1773286
Change-Id: I54e3db4822830a0c83daf7b5150575f8d6e2497b"
5ae71c833aab03dda9218a3d41a538ea7238fe80,2018-06-05 12:33:55+10:00,"Switch to oslo_messaging.ConfFixture.transport_url

oslo_messaging's rpc_backend setting, which is set by
ConfFixture.transport_driver has been deprecated since Newton. To allow
oslo_messaging to remove it, switch to setting transport_url instead.

Partial-Bug: #1712399
Change-Id: I2fbf5159febe9d4970935d77bd75e84204710c8e"
8930d33c71e394c1cfaa1b9ad5493c79d394cb40,2018-06-05 12:02:26+02:00,"Fix UT BridgeLibTest when IPv6 is disabled

There was missing mock of
ipv6_utils.is_enabled_and_bind_by_default() in BridgeLibTest
unit tests and that cause failing some of tests from this module
when tests are running on host with disabled IPv6.
Now it's mocked and tests are running properly and are
testing what they should test.

Closes-Bug: #1773818
Change-Id: I9144450ce85e020c0e33c5214a2178acbbbf5f54"
32f14aa8a030e0d619ddd4989a3ea54a481f20e5,2018-06-06 15:22:37+02:00,"[Fullstack] Change time waiting for async ping results

During agents restart there is async ping run and there is
called function to wait until all async ping workers will
finish their job.

In TestHAL3Agent.test_ha_router_restart_agents_no_packet_lost
there are 60 pings sent with 1 second timeout so default
wait_until_true timeout which is set to 60 seconds might not
be enough in some cases.
Because of that wait_until_true timeout is now set as
twice higher value than is needed to number of packets to send
with ping_timeout.

This should give enough time to finish all workers.

Change-Id: Ia7c3755c2ba5029bdab3c1dd30b305f3bde19740
Closes-Bug: #1775183"
11b41d73b48d46b7725bb97d4b85158d8bc2acfb,2018-06-06 13:39:45+00:00,"[Fullstack] Wait for SG to be applied by L2 agent

In fullstack test_securitygroup there were used simple
net_helpers.assert_ping() and assert_not_ping() functions
which tries to ping IP address 3 times with some short timeout
and test fails if result of ping will not be as expected.

Unfortunately sometimes in fullstack tests it might be not enough
if test is creating new SG or SG rule or apply SG to port and
just after that checks connection because L2 agent don't have
enough time to apply all rules on ""host"".
This patch changes it to use block_until_ping() and
block_until_no_ping() methods from FakeMachine fixture.
It will also check if ping is possible/not possible but
will try to check it for 1 minute before fails.

Similar change is also done for methods which checks TCP
connectivity using netcat helper class. It now uses
common_utils.wait_until_true() helper function instead of
fail immediatelly.

Change-Id: I9e523d803e3c49d5d090ae5b9d36d43ce7311535
Closes-Bug: #1774006
Closes-Bug: #1767829"
f98f239a15d68344f84ca755dd8a55698d528b1c,2018-06-07 15:32:20+00:00,"Revert ""DVR: Fix allowed_address_pair IP, ARP table update by neutron agent""

This reverts commit fbe308bdc12191c187343b5ef103dea9af738380.

This does not help the ARP update for the unbound Allowed-address-pair
IP, since the temporary ARP update (NUD: reachable) goes to incomplete
state when the router tries to re-ARP for the IP, before it responds to
a VM, since DVR routers does not allow the ARP requests to flow through
the br-tun.

Closes-bug: #1773999

Change-Id: I9977c8cbbbc1e68565249e7f80c59319fe967300"
14301613e61aac038a993e74f0cd9238c500d112,2018-06-08 07:05:57-06:00,"remove safe_reference from common db mixin

The safe_reference property in common db mixin is only used by
vmware-nsx and they can use weakref directly (see depends on patch).
This patch removes safe_reference as we're working towards removing
common db mixin all together.

Depends-On: https://review.openstack.org/#/c/571221/

[1] http://codesearch.openstack.org/?q=%5C.safe_reference

Change-Id: I77f9561139fd88eff51638f6f41cf79f0b876dc1"
1f8378e0ac4b8c3fc4670144e6efc51940d796ad,2018-06-08 16:26:35+02:00,"[OVS] Add mac-table-size to be set on each ovs bridge

By default number of MAC addresses which ovs stores in memory
is quite low - 2048.

Any eviction of a MAC learning table entry triggers revalidation.
Such revalidation is very costly so it cause high CPU usage by
ovs-vswitchd process.

To workaround this problem, higher value of mac-table-size
option can be set for bridge. Then this revalidation will happen
less often and CPU usage will be lower.
This patch adds config option for neutron-openvswitch-agent to allow
users tune this setting in bridges managed by agent.
By default this value is set to 50000 which should be enough for most
systems.

Change-Id: If628f52d75c2b5fec87ad61e0219b3286423468c
Closes-Bug: #1775797"
fe907b7fc62bbf0e5d30dcfb885848bd29469a50,2018-06-09 02:58:20+08:00,"Fix unscheduling fail when concurrent port delete

When a network is removed from a dhcp agent, in some scenarios if the
agent releases its port concurrently, there is chance that the
unscheduling will fail due to that the target port is not found.

Catch the PortNotFound exception as an expected error under this type of
concurrent circumstance and logs it to move forward.

Closes-Bug: #1775496
Change-Id: Ib51b364f6ced0de7685c8ee07c1d292308d919f5
Signed-off-by: Kailun Qin <kailun.qin@intel.com>"
ce8b73ba87b2833d91653cc5c09e431a977ea55c,2018-06-11 11:10:53-06:00,"use make_weak_ref and resolve_ref from neutron-lib

The make_weak_ref and resolve_ref functions were rehomed into
neutron-lib with https://review.openstack.org/#/c/557809/
This patch consumes them by removing the functions and using lib's
version of them instead.

NeutronLibImpact

Change-Id: I41169ed0d93ea8caee530dcfc01a91271f02d538"
100491cec72ecf694cc8cbd6cd17b66a191a5bd7,2018-06-11 11:10:53-06:00,"use object utils from neutron-lib

The neutron.object.utils module was rehomed into neutron-lib with
https://review.openstack.org/#/c/557809/
This patch consumes it by removing the neutron.objects.utils module
and corresponding test module, updating the contributor internals for
objects and using lib's version of the module.

NeutronLibImpact

Change-Id: If53d0ad660851275462d2641ed1829cdb4c32d05"
8b19db164aa9ecdf2c0bbc97f6e2799f15cebf27,2018-06-11 19:02:43+00:00,"Annotate filter parameters for tag attributes

* Add additional attributes 'tags-any', 'not-tags' and 'not-tags-any'
  to the attribute map. These three attributes represent the query
  parameters on list request.
* Add 'is_filter' keyword for attributes 'tags', 'tags-any', 'not-tags'
  and 'not-tags-any'. This indicates that these four attributes can be
  used as filter parameters. In the future, we will rely on this metadata
  to perform filter validation: https://review.openstack.org/#/c/554368/

Change-Id: I9e2033e7ba9d198f96c1ce6089a809d6721dd82d
Related-Bug: #1749820"
19dccbf07e5234734dee7317bbb681413a1590cd,2018-06-12 09:14:48+02:00,"Add BEFORE notification event for subnet in ml2 plugin

Implements the BEFORE_CREATE notification in the
_before_create_subnet method.

Related-Bug: #1766380
Change-Id: I2ad73054b3b870314e8047e9a84ca60285c852e1"
5106dfe5217b5274305ab565e23dbd1548c1f756,2018-06-12 15:07:07+02:00,"Configure privsep helper in neutron-netns-cleanup

This closes a bug that makes netns-cleanup crash when
trying to invoke privsep helper, because the rootwrap
config isn't correctly passed down to the privsep helper
library.

Closes-Bug: #1776468

Change-Id: I8258a44a9e2542ec222ebac72c4b889858ab2fc2"
7458575cfbc00a9bedf4d514a95e9b891639d5e8,2018-06-12 16:05:48+02:00,"Convert missing exception on device.link.delete()

Once we started using oslo.privsep the call to device.link.delete()
should return RuntimeError when the device can't be handled by ip link
for example, when it's an ovs internal device.

Closes-Bug: #1776469

Change-Id: Ibf4b0bbb54aef38fc569036880668c745cb5c096"
e356345261737162aab90bf7338d931d64ae524e,2018-06-13 20:39:02+08:00,"Fix DVR scheduling checks wrong profile for host

When DVR scheduling in live-migration, the current implementation in DVR
serviceable ports checking on host performs a ""contains"" operation of
sub-string match which checks the wrong port binding profile for host
(i.e. compute-1 will also match compute-10).

Add quotes to force an exact match of the host name in the port binding
profile dictionary to address this issue.

Closes-Bug: #1776255
Change-Id: I0d2bd9b9ff0aa58a7cce1b8da2a5f21ac6b38c57
Signed-off-by: Kailun Qin <kailun.qin@intel.com>"
db22f5bfa81df10ce4a30cae725b6e11c843ee30,2018-06-13 18:21:14+00:00,"Fix exception in neutron-sanity-check

When the config options were all moved to neutron/conf
the neutron-sanity-check script was not updated.  Have
it use the registration methods directly.

Change-Id: Ie45ce0faa17ee4cfe8d2a1dce442b032efea0041
Closes-bug: #1769868"
ba1e1eb4dd7b56a72b97204a9a1e1b2f49b34268,2018-06-14 14:31:28+02:00,"Mark test_ha_router_restart_agents_no_packet_lost as unstable

Fullstack test
test_l3_agent.TestHAL3Agent.test_ha_router_restart_agents_no_packet_lost
is marked as unstable now becuase it is failing quite often recently.
We need to figure out what is the reason of this issue but
to not block gates with many failures, let's mark it as unstable
for now.

Change-Id: I21e590a24390345dfe451b035fd973928445e987
Related-Bug: #1776459"
9f6a4ceecfef858f503df3f63de4f945374eee4f,2018-06-15 15:12:10+00:00,"Remove the unit test 'test_ports_vnic_type_list'

This test created three ports and tried to list and filter those
ports by their vnic type. However, the current implementation
doesn't support filter by vnic type. The test passed is a false
positive because neutron ignored the invalid filter and returned
all the ports which happened to be those three ports.

This patch remove this invalid test case.

Change-Id: I4397df1c35463a8b532afdc9c5d28b37224a37b4
Related-Bug: #1749820"
5a7c12f245fd665de5a0364059e4ad918def3e12,2018-06-15 14:25:42-07:00,"DVR: Self recover from the loss of 'fg' ports in FIP Namespace

Sometimes we have seen the 'fg' ports within the fip-namespace
either goes down, not created in time or getting deleted due to
some race conditions.
When this happens, the code tries to recover itself after couple
of exceptions when there is a router_update message.
But after recovery we could see that the fip-namespace is
recreated and the 'fg-' port is plugged in and active, but the
'fpr' and the 'rfp' ports are missing which leads to the
FloatingIP failure.

This patch will fix this issue by checking for the missing devices
in all router_updates.

Change-Id: I78c7ea9f3b6a1cf5b208286eb372da05dc1ba379
Closes-Bug: #1776984"
6f5946d34bcc4a52920533f1a4ee81d7615a00ea,2018-06-15 21:48:06+00:00,"Fix the tests for filtering with qos_policy_id

Some QoS tests tried to list ports by attribute qos_policy_id
but this attribute is not a valid filter. In before, the tests
passed because neutron ignored the invalid filter and returned
all the ports which happened to be the correct set. However,
using qos_policy_id as filter is incorrect and this patch fixes it.

Change-Id: Ic3ab5b3ffdc378d570678b9c967cb42b0c7a8a9b
Related-Bug: #1749820"
5ceca4d9d1041345ccfeab675c8e8216050f7135,2018-06-18 14:43:33-07:00,"DVR: FloatingIP create throws an error if no l3 agent

FloatingIP create throws an error if the L3 agent is not running
on the given host for DVR Routers.
This happens when we try to create a DVR Router in the Legacy
Router deployed cloud.
FloatingIP create checks for the agent type based on the host,
and when agents are not available on the given host, it raises
an exception.
This patch will fixes by handling the exception raised, when the
agent is not available.

Change-Id: I80522d12087495861e832cf1c7a3fe9a7830d386
Closes-Bug: #1776566"
5ddb2a4762eac52290cd0491881ec6ca15bb9217,2018-06-20 02:21:28+00:00,"Make L3 IP tc filter rate limit more accurate

Currently the L3 agent qos extension does not set the mtu for
tc filter rules, the default value is 2kb. Tc filter rules use
such mtu will result in an inaccurate bandwidth.

So in order to improve the precision, we set the mtu to 64kb.
For the test results, you can read the bug description.

For more information you can read the linux tc man page:
[1] https://linux.die.net/man/8/tc-tbf
[2] http://man7.org/linux/man-pages/man8/tc-police.8.html

Closes-Bug: #1777598
Change-Id: I7a167ec6139ccc55988b34f82080a182116d02a3"
c4ea8ba82bb0e5c3026330333c9a88c88ab930ee,2018-06-20 17:58:43+02:00,"Mark unit test test_get_objects_queries_constant as unstable

This test is failing a lot in our check and gate queues.
It's reported in [1].
To make life easier, this test will be marked as unstable
until [1] will be fixed.

[1] https://bugs.launchpad.net/neutron/+bug/1775220

Change-Id: Ie37e72b98f0d8e6e3ccafb1fe38a57bd50777331
Related-Bug: #1775220"
0b3a64480bc268bec25a4216a793cd7f1c4d1966,2018-06-21 07:43:37+00:00,"[Fullstack] Ensure connectivity to ext gw before agents restart

In TestHAL3Agent.test_ha_router_restart_agents_no_packet_lost
fullstack test we should first ensure that connection from external_vm
to router's external gateway is possible. If it's fine, we
can restart L3 agents and test if connectivity will not be broken.

Change-Id: I1f153c553cd2dfa846ce80c166e2a35acd9169a3
Related-Bug: #1776459"
9f2b40f2cecc116906e77d69797c0c6877bd5b4d,2018-06-21 15:35:51+02:00,"Dropping radvd process privileges

radvd needs to run as root, but has the capability to drop privileges on
linux hosts. Currently, radvd process is not using this feature and
this can be considered a serious risk.

In addition, some distributions like SUSE, radvd process runs as a non
privileged user by default, causing radvd failure to daemonize
because it can't write the pid in the corresponding neutron folder and
break the IPv6 functionality.

This patch allows radvd process to run with the same user used by
neutron. In order to allow this, it changes the radvd config file
permissions to 444 because radvd doesn't allow that this file can be
writeable by self/group. The readonly mode is not a problem updating the
file because of the way the neutron_lib replace_file function handles
the files operations.

Closes-Bug: #1777922

Change-Id: Ic5d976ba71a966a537d1f31888f82997a7ccb0de
Signed-off-by: aojeagarcia <aojeagarcia@suse.com>"
006113e3bfd566f3b394580262a60345eec160d6,2018-06-21 14:25:22+00:00,"Skip MTU check during deletion of Networks

MTU check can be skipped during deletion of Networks.
The MTU check doesn't provide any additional support during deletion
of the networks.

Also, if a network is created with MTU 'X' and the
global_mtu later on is decreased to 'Y', the created
network cannot be deleted due to the MTU check.

Change-Id: Ia838d2a661c5098f90b58b2cb31557f2ebf78868
Closes-Bug: #1713499"
d97cce0403eb0ca10fb26ba23facb37c86934835,2018-06-21 18:22:00+00:00,"Add missing transaction in driver_controller.

All the operations related to router associations (add/del)
were executed under transactions, there was a case
'get_provider_for_router' doing add_resource_association
out of db transaction, luckily due to autocommit there were no
issues but this patch adds the missing transaction.

Closes-Bug: #1778118

Change-Id: Iaec9a40614c7e6ce1120e9fa7ef3a4fdb4d59963"
44e8c91f3c011b91865f85547e1f9fc3d9b4636c,2018-06-24 06:05:24+00:00,"Introduce l3_logging extension base

This patch introduces base class for L3 logging extension base.
It will be used for SnatLogExtension and FWaaSLogExtension.

Change-Id: I5372fa4d93f51692cebc9dc4df5b4fe79b1ef554
Related-Bug: #1720727"
b2b42296965d8d339f06e62bd76ff81c0b746777,2018-06-25 23:48:08-07:00,"DVR: FIP gateway port is tagged as DEAD port by OVS with external-bridge

FIP agent gateway port is tagged as a DEAD port by OVS when external
bridge is configured in neutron.

When external bridge is configured, the vlan tag should be removed
after the port is plugged in.

This patch fixes the issue.

Change-Id: I969b9d7e7cef4beff526a2b26de3f1a9f9de4c1c
Closes-Bug: #1778643"
8d580dc0379842a6a83e922d71f6bc1ffbc85d23,2018-06-26 23:47:14+02:00,"Routed Networks - peer-subnet/segment host-routes (1/2)

Ensure that host routes are maintained for each subnet within
a network. Subnets associated with different segments on the
same network get's host_routes enties added/removed as
subnets are created, deleted or updated.

This change handle the host_routes for the subnet that is
created or updated.

Partial-Bug: #1766380
Change-Id: If6792d121e7b8e1ab4c7a548982a42e69023da2b"
8f3a066b20b7ffafec95a618d60e40727504f37c,2018-06-27 00:22:35+02:00,"Add support to regenerate port mac_address

Passing 'null' (None) as the mac address in a port update
request causes the port's mac address to be re-generated
using the base MAC address Neutron uses for VIFs.

This change implementes a temporary lib api definition
with a new converter that will generate valid mac if the
data provided is None.

APIImpact: Port mac_addr regenerated if None passed on update.
Closes-Bug: #1768690
Change-Id: I7d04beea4810718c3b745de8ea97897b1323267e"
b692eff9ec30fea45ff82d7e807455b45308c807,2018-06-27 16:55:08+09:00,"Remove an extra backslash in a docstring

It was added by https://review.openstack.org/#/c/577029/ but
it seems it was not essential.
I tested this with networking-midonet doc build.

Related-Bug: #1771092
Change-Id: I33d0f59bec6274f7924f37c89feaf6a19d2bfd90"
8361b8b5aebad4df3c1012952d9a87b936fef326,2018-06-28 10:48:06+02:00,"Routed Networks - peer-subnet/segment host-routes (2/2)

Ensure that host routes are maintained for each subnet within
a network. Subnets associated with different segments on the
same network get host_routes entries added/removed as subnets
are created, deleted or updated.

This change handle the host_routes for the peer subnets on the
same network when a subnet is created or deleted.

Also adds a shim api extension.

APIImpact: Host routes are now calculated for routed networks.
Closes-Bug: #1766380
Change-Id: Iafbabe6352283e7f1a535a7b147bd81fb32f0ed1"
c57a5d9d8aef4a9b89e3d41c293ceb40d7ebad22,2018-06-28 08:51:16+00:00,"[Fullstack] HA L3 agent restart only standby agents

In fullstack test which is testing if there is no packet lost
during restart of agents there were restarted always all agents
which hosted router.
In case when as first was restarted 'master' agent it might
lead to the case when after restart 'master' node was switched
to second L3 agent and that caused lost of few packets and
failed test.
This test should only check if restart of standby agents will
not cause any packet lost so this patch do it in this way.

Change-Id: I6293169d7d7f35e3a9726071e63003ac569dd01e
Closes-Bug: #1776459"
144d3abf7c8472753f7cb8156f07ee9f82ca2d3a,2018-06-29 00:30:19+02:00,"python3: fix netlink_lib delete_entries

libc and netfilter_conntrack calls, as C bindings, do not work with
python3 strings
This fixes netlink_lib by using bytes type for addresses manipulation

Update corresponding unit test by removing str() conversions

Change-Id: I0044d943de3dcde7c4337f396ae9d10cede381f3
Closes-bug: #1779170"
6a89dd2feb46d85889e90a0c83f2fbebcf67e9de,2018-07-02 08:24:36-06:00,"use db utils from lib

The APIs our consumers are using from neutron.db_utils were rehomed into
neutron-lib with https://review.openstack.org/#/c/540161/

This patch consumes them by removing the rehomed APIs and using lib's
implementation where applicable.

NeutronLibImpact

Change-Id: I7ee53bce917feae8e37bf278eb3121a5af47131c"
54aa6e81cb17b33ce4d5d469cc11dec2869c762d,2018-07-02 14:41:10-05:00,"Disallow router interface out of subnet IP range

Currently, a non privileged tenant can add a router interface to a
shared / external network's subnet with an IP address outside the
subnet's allocation pool, creating a security risk. This patch prevents
tenants who are not the subnet's owner or admin from assigning a router
interface an IP address outside the subnet's allocation pool.

Change-Id: I32e76a83443dd8e7d79b396499747f29b4762e92
Closes-Bug: #1757482"
f5f682c63a043d59388731d78fae98481685019e,2018-07-03 14:53:17+09:00,"Modify logic of l3-agent to be notified

Although no DVR router is hosted on controller node,
neutron-server notifies l3-agent on compute node.
As a result, the following bug happen when VM migrate or resize.
　1) L3-agent on compute node output error logs
     when VM connect no DVR and HA router.
　2) Unused namespace is appeared on compute node
     when VM connect no DVR and no HA router.
So, I modify logic of l3-agent to be notified
after migrating or resizing.

Change-Id: I53955b885f53d4ee15377a08627c2c25cb1b7041
Closes-Bug: #1775310"
d950949b9023669f037e406a6bd930e1d626f109,2018-07-05 21:02:54+00:00,"Ensure request's object type is dict

Handle an edge case that API users send a POST/PUT request with
invalid data in request body.

Closes-Bug: #1780327
Change-Id: I3877c18a18ac506dc8f4a9ded2a18b53b9f6cfae"
88a0ebbe7fca2757c2d5d644058c22c896a8e92d,2018-07-09 14:21:05-04:00,"Add fullstack test to restart agent with active l3-ha router

Re-start of the l3 agent hosting the active l3-ha router
shouldn't cause data plane interruption, assuming there
is no failover.  Create a test explicitly for that.

Change-Id: I5963c21e2b382a09c40b81e2446350696e16d265
Related-Bug: #1776459"
d1efeeb433f090fabb02a07eabfa66576ebea9ea,2018-07-10 15:20:11-04:00,"Fix UnixDomainHttpProtocol class to support all eventlet versions

It was recently decided to uncap eventlet:
http://lists.openstack.org/pipermail/openstack-dev/2018-April/129096.html
So eventlet is now capped at 0.20 not by global requirements,
it is capped in upper-constraints, because currently not every
openstack project is able to work with a newer eventlet version,
mostly because of the caps in projects requirements.txt.
According to global-requirements, last allowed version of
eventlet is 0.22.1:
https://git.openstack.org/cgit/openstack/requirements/tree/global-requirements.txt

In an effort to support both eventlet<0.22 and eventlet>=0.22,
change the code to try and determine the correct number of
arguments to use in the call to initialize the parent class.

Change-Id: Ibe3dc8af6cf9f8bb4f8eababb7f4276e4db3f1f9
Closes-bug: #1777640"
886e24155358afe7ad167ba1602d3939d68c3d5f,2018-07-11 17:26:49+08:00,"Fix attribute mismatch in router provider update

The transition of a router from distributed to centralized may
mistakenley get its 'ha' attribute updated at the same time. The
side-effect is that the router may become HA enabled unexpectedly.

This patch fixed the mismatched attribute in _update_router_provider
method which addressed the issue cited above.

Closes-Bug: #1780094
Change-Id: Ib00de137692979229d1b7ba033ecff04e9cc9db0"
8b16b53b5b54b2ad8521b6c6c22660fab30e1b0d,2018-07-12 15:14:04+08:00,"Send update instead of remove for DVR reschedule

The current ""agent remove-add"" method to reschedule a router is not
friendly for DVR. In DVR cases, the old agent may still need to keep the
router in a non-master role to service any VM ports that exit on that
host while the new agent handles the master role of the router.

This patch proposes to send ""update"" instead of ""remove"" notification
for DVR rescheduling, which aligns with the retain_router check in
remove_router_from_l3_agent as well.

Closes-Bug: #1781179
Change-Id: I23431f9f46f72e6bce91f3d1fb0ed328d55930fb"
839e575fa69792c4e304c22c8209e73b0e7366f4,2018-07-12 08:13:05-06:00,"use plugin utils from neutron-lib

The remainder of the neutron.plugins.common.utils were rehomed into
neutron-lib with [1][2]. This patch consumes them by using the functions
from neutron-lib, and removing the neutron.plugins.common.utils module
all together as it's fully rehomed now.

NeutronLibImpact

[1] https://review.openstack.org/#/c/560950/
[2] https://review.openstack.org/#/c/554546/

Change-Id: Ic0f7b37861f078ce8c5ee92d97e977b8d2b468ad"
f7b62a7f29e6b88fdbcc3bff779b39b541d1de47,2018-07-13 18:14:50-05:00,"Multiple port binding for ML2

Functionality is added to the ML2 plugin to handle multiple port
bindings

Co-Authored-By: Anindita Das <anindita.das@intel.com>
Co-Authored-By: Miguel Lavalle <miguel.lavalle@huawei.com>

Partial-Bug: #1580880

Change-Id: Ie31d4e27e3f55edfe334c4029ca9ed685e684c39"
390b6a531f7bb58ebc655306feee74cb0b6cd30c,2018-07-14 16:42:09-05:00,"Update get_port_binding_host for multiple bindings

With the adoption of multiple port bindings, get_port_binding_host is
updated to select only the active binding

Change-Id: I57ee16aa970527de2c2d787ebf0df71241f01e74
Partial-Bug: #1580880"
f374697760c65d3db53c50e77080a7a76819c24c,2018-07-14 16:46:01-05:00,"Add binding_deactivate method to Linux bridge agent

This commit adds a binding_deactivate method to the Linux bridge agent
to receive messages from the ML2 plugin when a binding is de-activated
for a port. After receiving that message, the agent un-plugs the
corresponding tap interface from the port's network bridge.

To support this, a binding_deactivate method is also added to the agents
notifier. Finally, the activate method in the ML2 plugin is updated to
use the binding_deactivate method in the agents notifier.

Change-Id: I3f4e34766791c472a2c81842190094f697baa05c
Partial-Bug: #1580880"
be7ad302e1f8b9a6b57c7b0c9f6c17f43f63f391,2018-07-14 16:49:27-05:00,"Support binding_deactivate in CacheBackedPluginApi

CacheBackedPluginApi enables the neutron server to push resources
updates to L2 agents. The agents retrieve the resources updates locally
from the cache implemented by it. CacheBackedPluginApi also emulates
server notifications to the agents, such as port_delete or port_update,
based on the updated data received by the cache. This commit adds code
to CacheBackedPluginApi to implement a binding_deactivate notification
from the server to the agents

Change-Id: I023ccbd405bc41379007d87a9c1051970aa8d603
Partial-Bug: #1580880"
0694bebd6de3934528492aadb78e3048dd5a07ea,2018-07-14 16:53:10-05:00,"Add binding de-activation to OVS agent

To support multiple port bindings, the L2 agents have to have the
capability to handle binding deactivation notifications from the
Neutron server. This patch adds the necessary code to the OVS agent.

After receiving the notification, the agent un-plugs the corresponding
VIF from the integration bridge.

Change-Id: I78178de2039ccabc649558de4f6549a38de90418
Partial-Bug: #1580880"
fe4bec79916c2c92932a4cb6be86515f719372ce,2018-07-15 11:47:00-04:00,"Fix fwaas v1 configuration doc

Modify the fwaas v1 config about  driver

Change-Id: Id6821174a15838713435a499a258f6d37a9cad2a
Closes-Bug: #1777547"
5bd6281f9cf2362cd2964b2e7c2e7cbc479d9461,2018-07-16 11:17:45+08:00,"[server side] Floating IP port forwarding OVO and db script

This patch implements the port forwarding OVO and db layer code.
Such as:
* Introduces a new OVO named 'PortForwarding'.
* Introduces a new db model for OVO.
* A migration db script for port forwarding function.

Partially-Implements: blueprint port-forwarding
This patch partially implements the following spec:
https://specs.openstack.org/openstack/neutron-specs/specs/rocky/port-forwarding.html

The race issue fix in:
https://review.openstack.org/#/c/574673/

Fip extend port forwarding field addition in:
https://review.openstack.org/#/c/575326/

Partial-Bug: #1491317
Change-Id: If24e1b3161e2a86ccc5cc21acf05d0a17f6856e7"
e4348eb1e152dc89e9f42d0c785798b063fee758,2018-07-16 08:10:54-06:00,"use retry_db_errors from neutron-lib

The externally consumed APIs from neutron.db.api were rehomed into
neutron-lib with https://review.openstack.org/#/c/557040/

This patch consumes the retry_db_errors function from lib by:
- Removing retry_db_errors from neutron.db.api
- Updating the imports for retry_db_errors to use it from lib
- Using the DB API retry fixture from lib in the UTs where applicable
- Removing the UTs for neutron.db.api as they are now covered in lib

NeutronLibImpact

Change-Id: I1feb842d3e0e92c945efb01ece29856335a398fe"
b935f9d9a7c7bc872b49d66ce6ee586283ce69c0,2018-07-16 11:32:02-04:00,"Add list of all working DSCP marks

There is no place in the documentation that explicitly lists the valid
DSCP marks, except for an incomplete hint in the DSCP spec in
neutron-specs.  This provides an explicit list.

Change-Id: Ic350c88e59c33d98b54086707c9add05cf137dc2
Closes-Bug: #1781915"
0fe31bc8aea8b01d64f75b98510e94714d0d07f7,2018-07-17 20:58:25+00:00,"Add osprofiler to api-paste pipeline

The osprofiler filter is included in the standard pipelines for
nova, glance, cinder, heat, magnum [1], but is missing for neutron.

This means when a deployment uses profiling, there is a gap in the
data collected when the neutron API is executing.

[1] https://github.com/openstack/openstack-ansible-os_nova/blob/master/templates/api-paste.ini.j2#L31-L32

Change-Id: I8e45888968cde8ca29548447d0b0bc00ae569fc1
Closes-Bug: #1781619"
41fe927c8067ed2f1a1075c7fdf7799b91af95ef,2018-07-18 02:17:16+01:00,"Add missing policy actions to policy.json file

This patchset adds missing policy actions to the policy.json
file for several reasons:

1) It signals to operators all the policy actions that are
   enforced in the system. With the governance spec [0]
   urging projects toward policy in code documentation,
   it makes sense to document all policy actions in the
   policy.json as Neutron doesn't have policy in code.

2) It is consistent with Neutron's policy enforcement
   documentation [1]:

   ""For each attribute which has been explicitly specified in the
    request create a rule matching policy names in the form
    <operation>_<resource>:<attribute> rule""

    So it makes sense to capture each policy that is enforced,
    including all those with these special attributes.

3) Why include ""update_router:external_gateway_info"" but not
   ""create_router:external_gateway_info""? This is inconsistent.

4) It makes it difficult to validate Neutron's policy via Patrole
   if the policies aren't contained in the policy.json -- how else
   is it possible to determine which policies to expect if they
   aren't documented anywhere?

[0] https://governance.openstack.org/tc/goals/queens/policy-in-code.html
[1] https://docs.openstack.org/neutron/pike/contributor/internals/policy.html#authorization-workflow

Change-Id: I40f84134f0b56cfd574dfd69e5ebbf6a3fc2b3df"
fee630efaa74ce3d193999944e5b3a331fb2fbd9,2018-07-18 14:41:21+03:00,"Fix neutron-openvswitch-agent Windows support

Currently, the neutron-openvswitch-agent does not start on Windows
due to Linux specific imports. This patch addresses this issue.

Also, we're wrapping the object returned by subprocess.Popen using
tpool.Proxy in order to prevent IO operations on the stream
handles from blocking other threads. Currently, the ovs db monitor
blocks the whole process.

Closes-Bug: #1775382

Co-Authored-By: Lucian Petrut <lpetrut@cloudbasesolutions.com>
Change-Id: I8bbc9d1f8332e5644a6071f599a7c6a66bef7928"
ec5cd0d1b85d56adef836bf1167287993ec35ca6,2018-07-18 13:51:58+00:00,"Reduce IP address collision during port creating

Try to give it a large random chance during generate IP
address.

The DB retry mechanism change moved to neutron-lib:
I5ad139bdfb3ae125658b36d05f85f139a1b47bee

Closes-Bug: #1777968
Change-Id: I2acc9c720b39271bde2a89da4a66958f7aba5b7d"
5c3bf124966a310cbc6c8ffad5ab30b144d9d7aa,2018-07-18 11:59:33-05:00,"Add binding activation to OVS agent

As part of the implementation of multiple port bindings [1], add binding
activation support to the OVS agent. This will enable the execution in
OVS agents of the complete sequence of steps outlined in [1] during an
instance migration:

1) Create inactive port bindings for destination host
2) Migrate the instance to the destination host and plug its VIFs
3) Activate the port bindings in the destination host
4) Delete the port bindings for the source host

[1] https://review.openstack.org/#/c/309416/

Change-Id: Iabca39364ec95633b2a8891fc295b3ada5f4f5e0
Partial-Bug: #1580880"
2b1d8ea4a202f24c1b485ccebdbf831c505a4e6a,2018-07-19 04:13:43+00:00,"Implement filter validation

Enforce validation on filter parameters on list requests.
If an API request contains an unknown or unsupported parameter,
the server will return a 400 response instead of silently ignoring
the invalid input.

In resource attributes map, all filter parameters are annotated by
the ``is_filter`` keyword. Attributes with is_filter set to True
are candidates for validation.

Enabling filter validation requires support from core plugin and
all service plugins so each plugin need to indicate if it supports
the validation by setting ``__filter_validation_support`` to True.
If this field is not set, the default is False and validation is
turned off. Right now, the ML2 plugin and all the in-tree service
plugin support filter validation. Out-of-tree plugins will have
filter validation disabled by default.

An API extension is introduced to allow API users to discover this
new API behavior. This feature can be disabled by cloud operators
if they choose to do that. If it is disabled, the extension won't
be presented.

Depends-On: Ic3ab5b3ffdc378d570678b9c967cb42b0c7a8a9b
Depends-On: I4397df1c35463a8b532afdc9c5d28b37224a37b4
Depends-On: I3f2e6e861adaeef81a1a5819a57b28f5c6281d80
Depends-On: I1189bc9a50308df5c7e18c329f3a1262c90b9e12
Depends-On: I057cd917628c77dd20c0ff7747936c3fec7b4844
Depends-On: I0b24a304cc3466a2c05426cdbb6f9d99f1797edd

Change-Id: I21bf8a752813802822fd9966dda6ab3b6c4abfdc
Partial-Bug: #1749820"
f7064f2b6c6ba1d0ab5f9872b2d5ad7969a64e7b,2018-07-19 15:12:20-05:00,"Add binding activation to the Linuxbridge agent

As part of the implementation of multiple port bindings [1], add binding
activation support to the linux bridge agent. This will enable the
execution with linux bridge agents of the complete sequence of steps
outlined in [1] during an instance migration:

1) Create inactive port bindings for destination host
2) Migrate the instance to the destination host and plug its VIFs
3) Activate the port bindings in the destination host
4) Delete the port bindings for the source host

[1] https://review.openstack.org/#/c/309416/

Change-Id: I2c937cc0a551e5ce0e8534c4dd4384ec2ca92da1
Partial-Bug: #1580880"
69b83526303329b8239f839b2869acb1128387e5,2018-07-20 05:57:05+00:00,"Fix ml2 hierarchical port binding driver check error.

Avoid binding loop caused by the wrong comparison between
""id"" and ""segmentation_id"" of a ""segment"" object.

Change-Id: Ibc9f3093318d92027eaaf81bd08401c0f02ae414
Closes-Bug: #1760029"
7e0c1e9e23788fc60b2bf19659a7b513ba330dea,2018-07-20 11:23:19+02:00,"[QoS] Clear rate limits when default null values are used

In that case before, tc was called with zero rate and burst values.
Newer iproute versions (>= 4.9) do not allow that anymore, so we send a
clear command instead

This also fixes QoS L3 agent extension functional tests run with such an
iproute version (CentOS 7.5, Ubuntu 18.04)

Change-Id: Idf16e2460bd434f5eab79745558c55c6579e81e8
Closes-Bug: #1782141"
3d06c63e74a8ded495a064349951097f33d8fb49,2018-07-23 11:15:29+02:00,"[Fullstack] Use string for global_physnet_mtu config option

This was added in Ia838d2a661c5098f90b58b2cb31557f2ebf78868 and breaks
config parser with python3

Closes-Bug: #1783095
Change-Id: I1cd054edb32e7ccf3bd3a356ed535a4a6003a9a1"
73c7eddb5a0ba2b6e1e06a9acd266bb15283eacd,2018-07-23 14:03:10-06:00,"use callback payloads for ROUTER/ROUTER_GATEWAY BEFORE_DELETE events

This patch switches callbacks over to the payload object style events
[1] for ROUTER and ROUTER_GATEWAY BEFORE_DELETE based notifications. To
do so a DBEventPayload object is used with the publish() method to pass
along the related data.

NeutronLibImpact

[1] https://docs.openstack.org/neutron-lib/latest/contributor/callbacks.html#event-payloads

Change-Id: I3ce4475643f4f0afed01f2e9956b3bf84714e6f2"
b803195a9979f7b3b0fd9cea41699b33fc8cf2bb,2018-07-25 16:08:42+09:00,"Dont use dict.get() to know certain key is in dict

In CommonAgentLoop class, there is logic to detect tap device is changed
locally or not by comparing timestamp with previous.
Sometimes timestamp value could be None depending on the timing (see bug/1781129)

But current _get_devices_locally_modified logic can not detect local
change from None to something because _get_devices_locally_modified
function don't always compare if previous timestamp value was None.

In order not to miss updated device always, better not to use dict.get() to
know previous iteration have timestamp or not.

Change-Id: Ib0361ad5c281f88558e8e048cfec588b9f9b1de4
Closes-Bug: #1781129"
2f98f56cb5fc0e5400bdb4173c752e0e92c702f5,2018-07-25 15:22:14+07:00,"Allow neutron-api load config from WSGI process

neutron-api needs to load config files when deployed under
WSGI process. This patch will do this. neutron-rpc-server
also need to be aware of plugin extension.

uWSGI seems not happy with eventlet.GreenPool. So this patch
will switch to futurist.ThreadPoolExcutor for ML2 OVO push
notification.

Partially-implements: blueprint run-in-wsgi-server

Change-Id: Ia2659c9c8f1deeceefc1c75f1149a1e47c91e7a9
Closes-Bug: #1708389"
21ae99d5b3e287480a2d9cfcfdc2571671d047c4,2018-07-26 11:43:34+08:00,"[server side] Floating IP port forwarding plugin

This patch implements the plugin.
This patch introduces an new service plugin for port forwarding resources,
named 'pf_plugin', and supports create/update/delete port forwarding
operation towards a free Floating IP.

This patch including some works below:
* Introduces portforwarding extension and the base class of plugin
* Introduces portforwarding plugin, support CRUD port forwarding
resources
* Add the policy of portforwarding

The race issue fix in:
https://review.openstack.org/#/c/574673/

Fip extend port forwarding field addition in:
https://review.openstack.org/#/c/575326/

Partially-Implements: blueprint port-forwarding
Change-Id: Ibc446f8234bff80d5b16c988f900d3940245ba89
Partial-Bug: #1491317"
da5b13df2b2a8171f60311414250671820390738,2018-07-26 10:07:12+03:00,"Trivial: avoid KeyError while processing ports

The Neutron OVS agent logs can get flooded with KeyErrors as the
'_get_port_info' method skips the added/removed dict items if no
ports have been added/removed, which are expected to be present,
even if those are just empty sets.

This change ensures that those port info dict fields are always set.

Closes-Bug: #1783556

Change-Id: I9e5325aa2d8525231353ba451e8ea895be51b1ca"
e82a17527d0c1a59ee92f53ba5fc6752c5034dc4,2018-07-26 14:59:23+07:00,"[doc] Follow-up logging service for firewall_group

This patch updates the networking guide to include 'firewall_group'
as a new resource-type in 'Neutron Packet Logging Framework'

Change-Id: I94d779fcabc64417d4d561c659270501c0651a66
Co-Authored-By: Nguyen Phuong An <AnNP@vn.fujitsu.com>
Partial-Bug: #1720727"
314a06359e4eaa7a858f2ba88c98b0a849376aba,2018-07-26 18:20:58+04:00,"Make dvr router port creation retriable

On concurrent router interface creation DB retries are usual.
In case of DVR there are 2 sources for retries: csnat and dvr
router ports creation.
This patch wraps dvr port creation with retry to avoid duplicate router
subnet violation when retrying the main add_router_interface().
See bug for details.

Change-Id: Ia3c6429a82a9c349eb9577bf255d34f16c6d602e
Closes-Bug: #1783728"
d00a1558a5a51ad8d189ad3d72aabae6447a88b5,2018-07-27 17:25:10+08:00,"[server side] Expose port forwardings in FIP API

This patch introduces a new API extension named 'extend-fip-port-forwarding'
for exposing 'port_forwardings' field in floatingip responses.

Partially-Implements: blueprint port-forwarding
Change-Id: I9016abb6eb650c86c570a0ee78ee12361f4632e4
Partial-Bug: #1491317"
de9b39ed2c4423cfb1ea8b3b92f2b0b40e9c9d62,2018-07-27 18:25:47+08:00,"[agent side] L3 agent side Floating IP port forwarding

This patch contains the l3 agent extension and agent part code.
This patch introduce a new l3 agent extension named ""port_forwarding"",
to process the binding of the port forwarding resources, manage its own
floatingip configuration on router interface and floatingip status.
Currrently, we support all Neutron Router reference implementations.

This extension uses the period router sync task and PortForwarding OVO
rpc.

* The main idea about this new extension is using the generic router sync
  rpc to maintain the host port forwarding resources,
* For a single port forwarding create/update/delete, process it one by one
  in smaller scope for forbidding refresh the iptables with a larger
  scope frequently.

Partially-Implements: blueprint port-forwarding
Partial-Bug: #1491317
Change-Id: Ic56e67d428f6177099c285a9d1bccabc1e710f2b"
a4ffcab4cae23f1f7b3cc31f1ef922af9582ac2c,2018-07-28 13:51:10+07:00,"[log] Generic RPC stuffs for logging in server side

This patch intends to make generic RPC stuffs for logging in server side.
So logging can be extended to be used by other resources like firewall.

Partial-Bug: #1720727
Change-Id: I6f93a71c2ae725e3b97d8abc5f57093894792116"
d7942945c9447e5171f979c69c7af6a9623e305d,2018-07-30 07:10:23-06:00,"use get_port_binding_by_status_and_host from lib

The get_port_binding_by_status_and_host function was rehomed into
neutron-lib with https://review.openstack.org/#/c/580786/ and released
in neutron-lib 1.18.0. This patch consumes the function by removing it
in neutron and replacing all uses with lib's version.

NeutronLibImpact

Change-Id: Iac3246d0eb59709749e0b7e857091447d11a0133"
4088461ed6cdbc3b1a6896cb03596dd4c3a64d05,2018-08-01 02:45:14+08:00,"[server side] Fix race issue for port forwarding plugin

This patch fixes the race condition with update/delete neutron
serveral resources, such as port forwarding conflict with
floatingip and port forwarding conflict with port.

Also this approach need the revision function, so need to fix in port
forwarding model to aware relationship revision update.

As the port forwarding resource associated with 2 resources,
one is floatingip, the other is neutron internal port.
So floatingip update/delete maybe in a conflict situation with
port forwarding creation. But for port, we just lack the logic to
process port forwarding during update port's fixed_ip and delete
port.

So the approach here is adding logic to let l3 plugin and port
forwarding plugin know each other when both sides may process the same
floatingip resource. Based on the existing revision_number feature,
if one side fail as db staleError, the api layer will retry the whole
operation for this resource, so there must be a failure on one side in
this case. This patch just adds the association logic for l3 plugin and
port forwarding plugin, also adds a event receiver for port update/delete.

Then the behavior about the port forwarding associated resources would
be:
* For fip resource, I introduce one function in that patch.
  _check_floatingip_request
So during floatingip update/delete, the function will process
fip and check by rpc callback from l3_plugin, if port forwarding plugin
also creates a port forwarding with the same fip at this moment. The
success side would be the one who update the fip_db first, the other side
would be failure after db retry.

* For port resource, during update port fixed_ip or delete port, we will
delete the associated port forwarding resources for free the
fip:external_port socket.

Partially-Implements: blueprint port-forwarding
Change-Id: I637ebcb33b91d899a077bded5ca10097a830a847
Partial-Bug: #1491317"
35d945e92f77af1a1051c13158c67ef3c59e8f6b,2018-08-01 02:45:42+08:00,"Add ext_parent policy check

Add common parent owner check for the resources which introduced by
service plugin.

Then port forwarding resource will share the same tenant_id with
floatingip. That means only the fip owner can create/update/get/delete
the associated port forwarding resource.

Partially-Implements: blueprint port-forwarding
Partial-Bug: #1491317
Change-Id: I450c674e55ca15e1d9a6a6224138f3305427da68"
cdb973e77dc33dcccfb8c62eed69e4b2318acd8d,2018-08-01 17:15:46-05:00,"Generic validate_request method for logging

This patch adds a generic validate_request method for logging, So
logging can be extended to other resources like firewall group.

Co-Authored-By: Nguyen Phuong An <AnNP@vn.fujitsu.com>
Co-Authored-By: Kim Bao Long <longkb@vn.fujitsu.com>

Partial-Bug: #1720727
Change-Id: I9d580645131a9f1b8233ea5f6e0378cd98f023f1"
00b923ddf37de2176168f5a525b4190dd4e04c4d,2018-08-01 17:20:04-05:00,"Adding resources callback handler

This patch allows logging plugin to handle resource callback
events AFTER_UPDATE/AFTER_CREATE/AFTER_DELETE of security
group, firewall group.

Co-Authored-By: Kim Bao Long <longkb@vn.fujitsu.com>
Partial-Bug: #1720727
Change-Id: I1cb170de1dbb7ac5380d386d850241f3c4a2f225"
ced78395a7952d0e616055892645fd2a6165833f,2018-08-02 08:32:51+07:00,"Fix no ACCEPT event can get for security group logging

Currently, we cannot get ACCEPT packet log because there are some
changed related to ovs firewall code since ovs firewall logging has
been merged.

Regarding to performance perspective, we only log first accepted packet.
So we only need to forward first accepted packet of each connection
session to table 91 and table 92.

So this patch fixes these issues.

Closes-Bug: #1782576
Change-Id: Ib6ced838a7ec6d5c459a8475318556001c31bdf0"
f937dd2a150f77f9c3de489acdafe2bdce13fdbe,2018-08-02 16:11:13+07:00,"Fix no packet log data when debug is set False in configuration

In production environment, it's quite difficult to require operator
to enable debug log level. This patch changes LOG.debug to LOG.info
of packet_in_handler function. Therefore operator can get packet log
data while debug=False or True in config file. This patch also adds
timestamp to log_file if local_output_log_base is specified.

Partial-Bug #1781372
Change-Id: I729e57caecd502d018084c3c766278006bcbf0c9"
c205963399b47eaa48b11835e28f527fa4dbc60a,2018-08-03 18:35:45-05:00,"Add note to RBAC chapter of Networking Guide

This commit adds a note to the RBAC chapter of the Networking Guide
clarifying that subnets inherit the RBAC policy entries of their
network.

Change-Id: Ic9256f3fcfe89b495c97df16fe6c6b3f052b9ab8
Closes-Bug: #1784586"
9caf87bb0c97dae75f8ea0ab459ec282766906d5,2018-08-04 00:45:51+00:00,"Add delete rule for auto_allocated_topology

This patchset updates policy.json to cover delete action for
auto_allocated_topology introduced in Neutron API [0].

[0] https://developer.openstack.org/api-ref/network/v2/index.html#delete-the-auto-allocated-topology

Closes-bug: #1785349
Change-Id: If7b5c3262370057e6b40d96967d355cd0ee7e2d3"
66c8ed9c973a9b6df727517f96df40d2ecf467d6,2018-08-05 19:54:59-05:00,"Add release note for port forwardings.

This patch adds a release note for the floating IPs port forwarding
functionality.

Change-Id: I2e0069148cd2551d4534d8a2fd8799f432ffb5e3
Partially-Implements: blueprint port-forwarding
Partial-Bug: #1491317"
ef8e437312f9e6596d2f88b2599c66b9818046c2,2018-08-08 23:08:07+09:00,"Add FIP port forwarding to Networking Guide

This patch adds and introduction and configuration instructions to the
Networking Guide for floating IPs port forwarding

Change-Id: I821b242f4ba58d92b8e9491db65232ec0a85f73b
Partially-Implements: blueprint port-forwarding
Partial-Bug: #1491317"
bc2a4a4032ee22d7edd62f8a9f21ff14cfa3eccf,2018-08-08 10:52:51-04:00,"Correctly call is_distributed_router()

A recent change to _notify_l3_agent_port_update() was
making a call to is_distributed_router() via the l3plugin,
but since that method lives in l3_dvr_db.py it was
failing.  This was not caught by the unit test since it
was mocking the return value.

Had to modify things to get the router first since the
object is required for the check.

Change-Id: I2289f882b692b375d1b40d7a50d206d72da66155
Closes-bug: #1785848"
5a2a6d28619133ce9be8d2705d820168a43dabc0,2018-08-08 10:58:33-04:00,"Fix import style

Based on the current import style guide,
https://docs.openstack.org/charm-guide/latest/coding-guidelines.html#import-style
it is recommended to not import a function directly, but instead
import the module and use module.function().

Do this for the is_distributed_router function in l3_hamode_db.

Trivialfix

Change-Id: Ie52f3a2480f337d90535baed90a4b6d824d3a51f"
034db863a02ce38a520e4b8aa3a65e1ccdb37f30,2018-08-08 17:01:26-04:00,"Use system protocol assigments for iptables protocol map

Merge the system protocol assignments into the iptables name
to protocol mapping array, IPTABLES_PROTOCOL_NAME_MAP, so that
systems with updated or new values in /etc/protocols can
successfully install iptables rules.

This was done as an IptablesFirewallDriver() instance mapping
since there is typically only a single instance per-agent,
and it also allows us to more easily unit test it.

Change-Id: Ib73def4e2a9e3644462fdee312768382fcb800a5
Closes-Bug: #1783378"
59d178c9de6028016053f2a6958372e14ded386a,2018-08-09 07:51:40+02:00,"Remove -u root as mysql is executed with root user

As openstack installation guides suggest to run mysql with root shell
user, mysql will not ask for password, so in
controller-install-*.rst ""-u root -p"" is useless.

Change-Id: Ib209661f6dcbbdeb158bd1acf343c084f8ed8930
Closes-Bug: #1785025"
40d92d40ec0953f82a040c2197304934efa3e9e1,2018-08-09 10:05:36+00:00,"Config privsep in the metering agent

Enable privsep to execute ip netns or other commands.

Change-Id: I4e20a1e92c0d154b76615437efe5eced4e0cc6bd
Closes-Bug: #1786213"
adf38349c45c8871a8858d3440a2c6fb4d967583,2018-08-09 21:32:59+00:00,"Fix iptables metering driver entrypoint

Closes-Bug: #1786347
Change-Id: If1c276338cec0c199d8cc8d8f6385025a3bb5d25"
c6de172e58ed4cbd157c2e560ffbbb4dc3a34730,2018-08-09 15:41:56-07:00,"get_subnet_for_dvr returns SNAT mac instead of distributed gateway in subnet_info

On hosts with dvr_snat agent mode, after restarting OVS agent,
sometimes the SNAT port is processed first instead of the distributed port.
The subnet_info is cached locally via get_subnet_for_dvr when either of these ports
are processed. However, it returns the MAC address of the port used to query
as the gateway for the subnet. Using the SNAT port, this puts the wrong
MAC as the gateway, causing some flows such as the DVR flows on br-int
for local src VMs to have the wrong MAC.

This patch fixes the get_subnet_for_dvr with fixed_ips as None for the csnat port,
as that causes the server side handler to fill in the subnet's actual gateway
rather than using the port's MAC.

Change-Id: If045851819fd53c3b9a1506cc52bc1757e6d6851
Closes-Bug: #1783470"
6c300b1a9b3f0db82b4edd84eda74600d28b7185,2018-08-10 08:28:54+00:00,"Remove fdb entries for ha router interfaces when going DOWN

When HA router's interface on host is going DOWN but router
is still available on this host, L2 population
mechanism driver will now send to other hosts info to remove
fdb unicast entries to this port on host.

It will not send FLOODING_ENTRY because this port is still on
host but in standby mode and might be transformed to master
in future.

This solves issue with migration router from Legacy to HA.
In such case, port which was originally attached to legacy
router is transformed to be HA backup port before changing
its status to DOWN.
Now in such case unicast entries to this port and backup
node will be removed properly so packets to HA router will
be really send to host which is master node for router.

Closes-Bug: #1785582

Change-Id: Icc14e5f5d40fc6fbb49e0f7b18cc3b15ebec8508"
99567388acfb0c0b9d3fc05430eaef3acb7ad9c5,2018-08-10 10:33:14+02:00,"Create veth pair devices using pyroute2

Create of veth devices now uses pyroute2 and priv_sep.

Change-Id: I8d0346dd1859010aba864ea908c7dcb118aa5412
Related-Bug: #1492714"
38309ca4dc79e033a7b8384f4e9f1224c5a69524,2018-08-10 15:44:50+00:00,"Update metering driver to load interface driver

Currently the metering iptables driver is using the old method
to load the interface driver. This patch allows it to load
interface driver via stevedore aliases.

Change-Id: I9e3027c1ec695ec3a09db0c53a0388e406e4ced6
Related-Bug: #1504536"
e9a7ed8c63ec5bb0fdca3406c8b21071729dd09d,2018-08-12 16:17:50+00:00,"Update network revision only when it needs

Basically, in case of concurrent requests creating ports
on *one* network, only one request succeeds, other requests
mostly getting 'standardattribute' update error as network
revision_number changed about 8 times for all port updates.

This patch increases network revision_number in database,
only when a port is created in a network, instead of each
update on port.

Change-Id: Idffb4edda616677b9b071644d3835c85052091a5
Closes-Bug: #1782421"
ae81d403f7b8508fe581647b5853c702dd2331a2,2018-08-14 09:41:00+08:00,"Pass context in l3 flavor notifications

There are some notifications pass context in l3 flavor
notifications, and add context for consistency.

Change-Id: I01ced41201b61c624e675375b7bcd9589b2553e0
Closes-bug: #1785539"
c8b04827a988a83db0504937eb83f3dae7763dc2,2018-08-14 21:06:21+00:00,"Revert ""Update network revision only when it needs""

Closes-Bug: #1787028
This reverts commit e9a7ed8c63ec5bb0fdca3406c8b21071729dd09d.

Change-Id: If52eb8f7c6a801f22a67d2a5786f16ddaa7c5f0f"
7d2ac2d0aff90d17d2e46aba2af3b4cc32d1833c,2018-08-15 16:28:36+00:00,"Fix lost connection when create security group log

Packet sent to table 91 are considered accepted by the egress pipeline
and NORMAL action is used by default in this table. However, if we
create a security group logging resource, then ovs flows log will be
added into this table with higher priority. Therefore packet matches
with ovs flows log will be sent to CONTROLLER and never forward.
So this patch append action=NORMAL into ovs flows log to forward
the packet and send it to CONTROLLER for logging.

Closes-Bug: #1787106
Change-Id: I6e95e2e646ec8a5507c7f140ab2c4a56be8404c3"
7a27e24447cf519796cb39532e719ed66f6bcb3d,2018-08-16 15:59:32+03:00,"Reduce qos rpc times on the ovs-agent side

When multiple ports are bound to qos-policy with the same id,
ovs-agent should check whether the cache has policy information
instead of directly reading rpc when processing the port.

Change-Id: I88f9f5af95439f1536799169390764c89109f467
Closes-Bug: #1783559"
28e07d4c5eb9eec0c51f0e6b055c8ded64bc2d13,2018-08-16 22:24:27+00:00,"Doc: update the qos devref about SR-IOV support

SR-IOV has added support for enforcing egress minimum bandwidth [1]
and this commit updates the devref about that.

[1] https://review.openstack.org/#/c/347302/

Change-Id: I0e637b893e60d7fdfb1ab4cece15aad74f43d3b5
Related-Bug: #1578989"
0bd1cec6768c9748cb415261fd8e4d4da0ee7ddb,2018-08-19 07:35:33+00:00,"[Fullstack] Add debug_iptables=True in security groups tests

In security groups tests with ""iptables"" or ""iptables_hybrid""
driver it will be useful to have debug_iptables_rules enabled
to check what rules are applied by L2 agent in case of test
failures.

Change-Id: Ib7d12b2e589019bc6043affe371ef5aa5425945b
Related-Bug: #1779328"
73f111e7e860218857351309d59a3a329e18850b,2018-08-19 07:35:49+00:00,"Use nested virt in scenario jobs

virt_type option in nova-compute will be now set to ""kvm"" instead
of ""qemu"" if test job will be running on node which supports
nested virtualization.
In case of nodes where it's not supported, devstack will
automatically switch it to ""qemu"" again. It's in [1].

This should improve time of booting vms so tests should be finished
faster and there should be less errors with ssh to instance timeouts.

[1]
http://git.openstack.org/cgit/openstack-dev/devstack/tree/lib/nova#n289

Change-Id: Ia361f33f0b103ed44ef372c1464b3c0473a19291"
60a9248b17cad8d2e7dd49cea120348dda99dc2b,2018-08-21 11:38:59-04:00,"doc: add known limitation about attaching SR-IOV ports

Nova does not currently support attaching SR-IOV ports to
existing instances, you can only create a server with an
SR-IOV port at this time. This adds an item about that
limitation to the SR-IOV admin docs.

Change-Id: I0a954de724384a81cb45446da20fa6b17d4bd63a
Related-Bug: #1708433"
4bd2f0e8f7461240c6f57afb196111cfdb7c3507,2018-08-22 11:20:53-06:00,"shim neutron rpc with neutron-lib

The common rpc and exceptions were rehomed into
neutron-lib with [1]. This patch shims those rehomed
modules in neutron to switch over to neutron-lib's
versions under the covers.

To do so:
- The rpc and common exceptions are changed to
reference their counterpart in neutron-lib effectively
swapping the impl over to neutron-lib.
- The fake_notifier is removed from neutron and lib's
version is used instead.
- The rpc tests are removed; they live in lib now.
- A few unit test related changes are required
including changing mock.patch to mock.patch.object,
changing the mock checks for a few UTs as they don't
quite work the same with the shim in place.
- Using the RPC fixture from neutron-lib rather than
that setup in neutron's base test class.

With this shim in place, consumers are effectively using
neutron-lib's RPC plumbing and thus we can move consumers
over to neutron-lib's version at will. Once all
consumers are moved over we can come back and remove
the RPC logic from neutron and follow-up with a consumption
patch.

NeutronLibImpact

[1] https://review.openstack.org/#/c/319328/

Change-Id: I87685be8764a152ac24366f13e190de9d4f6f8d8"
267eea50fd9e9c74faa96d529a7ec2fd8aa8d51f,2018-08-22 23:25:36-07:00,"Revert ""DVR: Add error handling for get_network_info_for_id rpc call""

This reverts commit c331b898e19c8125d005c09d8a6e247805e506a8.
Related-Bug: #1751396

Change-Id: I2e348091b5bdd0f3ef056dd108342989ce57062f"
fd72643a61f726145288b2a468b044e84d02c88e,2018-08-22 23:26:37-07:00,"Revert ""DVR: Inter Tenant Traffic between networks not possible with shared net""

This reverts commit d019790fe436b72cb05b8d0ff1f3a62ebd9e9bee.

Closes-Bug: #1783654
Change-Id: I4fd2610e185fb60cae62693cd4032ab700209b5f"
8a3ff8a19ec39630d24b71cec86740b6b9f16bbe,2018-08-24 14:46:38-04:00,"Parse dhcp leases file in a more robust way

It turns out that in environments with a big number of VMs, sometimes
the neutron dhcp agent fails to read the dhcp lease file because some
lines with the ipv4/ipv6 entries don't have enough fields and causes the
dhcp agent to fail.

When this happens the agent calls sync_state to
fully resync the agent state, that causes a serious performance problems
in scale environments.

We need to be more robust reading the file to handle these exceptions.

Co-authored-by: stephen-ma
Partial-Bug: #1788556

Change-Id: Ia681a5e929df5bf8c97ae9445876c306c34061b5"
c6aac9041f98f971cd1362bee2768a04bbe5cf1d,2018-08-25 02:09:02+00:00,"DVR: Add IPv6 csnat port address correctly

If router gateway info update, in l3_dvr_db will receive events,
We will get subnets from router attached DVR port, if exists
multiple IPv6 slaac-enabled subnets, previous code will create
csnat port form one of the IPv6 subnets.
This is inconsistency with router interface
udpate in _update_snat_v6_addrs_after_intf_update.

This patch adds all IPv6 subnets if the distributed
router port have multiple IPv6 subnets.

Change-Id: I02ffed238897ebc91b96aebb7f94ed90b7613769
Closes-Bug: #1786169"
c57fede20f0549e3e46cd4dff7d57b5ab39b0805,2018-08-28 10:49:29+02:00,"Disallow networks with first ip 0.0.0.0 with dhcp enabled

fixes dhcp-agent errors due to establishing 0.0.0.1 as default gw

Change-Id: I9e64b4597896ffde6a2f4caff81c64ca7738e402
Closes-Bug: #1471957
Signed-off-by: Andrew Karpow <andrew.karpow@sap.com>"
310bfa326fb9c016d02f9a505ae309ae0e15e7d4,2018-08-29 08:12:56+07:00,"Fix incorrect log resources querying

This patch aims to fix a co-existence problem between security_group
and firewall_group log resources due to incorrect log querying from
database.

Change-Id: Ic60ad436e0fbb23cdae0e63eaeb73130ebf02089
Closes-Bug: #1787119"
f9dc83eb9576ca01d732bf6a3ff3b3e9d01647e7,2018-08-29 10:33:53+02:00,"[Fullstack] Mark securitygroups tests as unstable

It agains fails quite often in iptables scenarios.
We need to debug it more to find out what cause this issue
but for now let's mark this test as unstable to make
life of other people easier.

Change-Id: I7bf6f9b346c6c853193cb045fb364b97375e9d93
Related-bug: #1779328"
f6d98a747b03e4da5109b2ee0e3c1bd7e88aee49,2018-08-29 14:06:26+02:00,"ovsdb monitor: do not die on ovsdb-client stderr output

That process may generate stderr output (ovs 2.10 with dpdk support will
log about missing optional libraries for example), in which case the
agent will loop forever respawning the ovsdb-client processes.

AsyncProcess already handles processes exiting uncleanly, and logs
stderr output with log_output=True (which is the case for OvsdbMonitor).

As the monitors work on stdout output, disabling die_on_error is enough
to make them work with this behaviour.

Change-Id: I8f2e5b93b9c16f9b288046911b5aeb4938845233
Closes-Bug: #1788865"
addcddbe18c30d14150fdec7d32d776b7156ed2f,2018-08-29 17:11:56+02:00,"Remove deprecated RamFilter from admin guide

Removes the RamFilter from the documentation as its
deprecated as of [1] and not needed when using the default
scheduler driver.

[1] https://review.openstack.org/#/c/596502/

Change-Id: I49442352d0fec2c9ff920ac1bb21fc2e5339a41e"
3e9506a01de7311662f9066007765b367f980d2e,2018-08-29 17:36:40-04:00,"import zuul job settings from project-config

This is a mechanically generated patch to complete step 1 of moving
the zuul job settings out of project-config and into each project
repository.

Because there will be a separate patch on each branch, the branch
specifiers for branch-specific jobs have been removed.

Because this patch is generated by a script, there may be some
cosmetic changes to the layout of the YAML file(s) as the contents are
normalized.

See the python3-first goal document for details:
https://governance.openstack.org/tc/goals/stein/python3-first.html

Change-Id: I03b604c04299bb9504739d41110c915c119ea809
Story: #2002586
Task: #24314"
0d1fb7446401b3ffeb868c5c080fe1a4178c7b31,2018-08-29 17:38:40-04:00,"switch documentation job to new PTI

This is a mechanically generated patch to switch the documentation
jobs to use the new PTI versions of the jobs as part of the
python3-first goal.

See the python3-first goal document for details:
https://governance.openstack.org/tc/goals/stein/python3-first.html

Change-Id: Id22b50eb0ccd50f252313a01903f73a76ab97012
Story: #2002586
Task: #24314"
6c9e5df5dd58c3a6673ee257cc971bf1a870f148,2018-08-30 08:49:40-06:00,"use security_groups_port_filtering from neutron-lib

The security_groups_port_filtering extension's API definition was
rehomed into neutron-lib with https://review.openstack.org/#/c/575243/
This patch consumes it by using the API def from neutron-lib and
removing it from neutron.

NeutronLibImpact

Change-Id: I78396846bc18a1adc550a950cf6006790ff863ed"
daeea79e76bf6793f98bd9906601d7129c4e2d2f,2018-08-30 14:18:17-04:00,"add python 3.6 unit test job

This is a mechanically generated patch to add a unit test job running
under Python 3.6 as part of the python3-first goal.

See the python3-first goal document for details:
https://governance.openstack.org/tc/goals/stein/python3-first.html

Change-Id: I10a0a135641b75ff3d2754085174b9fef8674ed4
Story: #2002586
Task: #24314"
b32db30874a7729c4e9209cfc18e106a7e9fc697,2018-08-31 11:16:19+04:00,"l2 pop: check for more than 1 first active port on a node

With high concurrency more than 1 port may be activated on an
OVS agent at the same time (like VM port + a DVR port),
so the patch mitigates the condition by checking for 1 or 2
first active ports.

Given that the condition also contains ""or self.agent_restarted(context)""
which makes it True first 180 sec (by default) after agent restart,
I believe the downside of changing 1 to 2 should be negligible.

Please see bug for more details on the issue.

Closes-Bug: #1789846
Change-Id: Ieab0186cbe05185d47bbf5a31141563cf923f66f"
e7c7ae807d013f029df9c19a9faba0283833421e,2018-08-31 10:32:31+01:00,"doc: Additional fixes to the SR-IOV doc

- Add steps to ensure physnets VLAN ranges are configured, if necessary
- Add steps to ensure a network using the given physnet is configured
- Update nova scheduler options, which have been moved since Ocata
  (nova 15.0.0) [1]
- Update nova PCI options, which have been moved since Ocata (nova
  15.0.0) [2]
- Simply some commands
- Some typo/grammar fixes

[1] https://github.com/openstack/nova/commit/7d0381c91a6
[2] https://github.com/openstack/nova/commit/4e5ed1c4891

Change-Id: I45fdc8e40121698bf144d0e0a65537edda2c805d
Signed-off-by: Stephen Finucane <sfinucan@redhat.com>
Closes-Bug: #1788900"
987e8b0cc4cc6a39ac0d4d32a47764f833c57a2e,2018-08-31 15:01:05+01:00,"Fix devstack/lib/ovs to run with Fedora 28

The patch is fixing two problems found when stacking DevStack on a
Fedora 28 host OS.

Problem 1: Account to the different patch versions between the
kernel-devel and kernel-headers packages.

Problem 2: Install the elfutils-libelf-devel package which is needed to
compile OVS.

For more a detailed information about each problem, check the bug linked
in this patch.

Closes-Bug: #1790143
Change-Id: Idfdee28124ff19272abcaaa3adade0435e3e474a"
0649112113a88155039db06f4d79ef48984176a5,2018-09-04 16:57:16+07:00,"Add fullstack test for logging

Since Queens, the security group logging has been merged. But there
is no fullstack test for this feature. So this patch add fullstack
test to avoid regression as https://review.openstack.org/#/c/587681

Co-Authored-By: Yushiro FURUKAWA <y.furukawa_2@jp.fujitsu.com>
Change-Id: Id9bbedc96e399338ea568556bdb17923392512b4
Partially-implements: blueprint security-group-logging"
4f2f5eeb8bbed7385cafbcd8ba2acb39870f4941,2018-09-04 14:46:03-04:00,"Delete ovs port if namespace is corrupted

This patch isolates a corrupted dhcp
namespace and protects the ovs from being
blasted by thousands of dangling ovs
ports created by dhcp agent.

Change-Id: I80138b3c37f41a18dc488a306768b8e2fa299eda
Closes-bug: #1728642"
db7e19d2ba3fcde0510be0094a4851178fae578b,2018-09-14 11:36:05-06:00,"Fix pylint warning with eventlet > 0.22.0

When eventlet was bumped up to 0.24.1 in upper-constraints [1]
it started generating a pylint warning, since neutron has
support for older versions such as 0.22.0 that take a different
number of arguments. Just silence the warning.

Also, in order to get this through the gate, the
neutron-grenade-dvr-multinode check job is being temporarily
set to non-voting and removed from the gate.  That change
should be reverted as soon as we fix bug 1791989.

[1] https://review.openstack.org/#/c/589382/

Change-Id: I169ecb6f33b670c5469919214a32645cd9eda206
Closes-Bug: #1791178
Related-Bug: #1791989"
91d6151a4d732bca802e0c0613cefa35d6d36698,2018-09-15 11:40:46+00:00,"Revert ""Use nested virt in scenario jobs""

Nested virt doesn't work well on infra nodes.
This reverts commit 73f111e7e860218857351309d59a3a329e18850b.

Change-Id: Ie76684e656066834fc0600d618004ca21ccb1223
Closes-Bug: #1788006"
52f0096d13192aa35287e9f552c8245401dba087,2018-09-15 11:41:02+00:00,"[Docs] Update note about default burst value in QoS bw limit

This patch combines two separate notes about burst value in
QoS bandwidth limit rules into one to make it more clear for
readers.

Change-Id: I48fa93969416db0b0049af533b6aa4021fa22616
Related-Bug: #1777866"
8ed2ba87984edad163dea69688f1d7d71f1e119a,2018-09-15 11:41:13+00:00,"Update FIP QoS Docs

This patch updates QoS docs to remove ""port show"" command
before associating Floating IP to port.
It is like that to be clear that QoS policy which is attached to
the FloatingIP is NOT visible in the port's attributes.

Change-Id: I127fbd25433e39905c3b83bbe914f027ab45ef3f
Closes-Bug: #1778740"
157e3218da96cb1ba0950311db0c321e70365add,2018-09-15 05:44:05-06:00,"Use tempest-multinode-full job from Tempest

This job is defined in Tempest to replace
neutron-tempest-multinode-full which was job defined
in Neutron's repo.

This job is set as non-voting in Neutron because old
neutron-tempest-multinode-full job was non-voting also.
If stability of this new job will be fine for us, we
can switch it to voting later.

Depends-On: https://review.openstack.org/#/c/598610/
Change-Id: I2dcbf4ade83760797b4e5072f0e05dac877842c9"
760870b6c238f5f2aa5fec33852e51b4ebccb718,2018-09-16 13:42:58+00:00,"Don't uninstall flow tables in setup_dvr_flows_on_integ_br

This is a revise for I7b24a159962af7b58c096a1b2766e2169e9f8aed

Br-int's flow tables are already uninstalled in setup_integration_br.
And setup_integration_br will install some default flows. If we still
uninstall flow tables of br-int in setup_dvr_flows_on_integ_br, these
default flow tables will be missing.

Closes-Bug: #1775146
Change-Id: I71c1f9034dfc913b9e9ae17cc8f6bd084c9ee580"
9278d79aa640bc18fc106af02b2c3091acf99ee3,2018-09-17 12:51:51+00:00,"remove _setUpExtension

We already prepped for removing the _setUpExtension method in change
https://review.openstack.org/#/c/561305/ and this patch removes it.
Consumers should now be using setup_extension instead.

Change-Id: I8135fc4eb05e474db7224b7771b71270a93a47bf"
d19dcf1ef2f8e4b837e57dfef4ed1580c5d1e7b7,2018-09-17 13:04:21+00:00,"Fix IPv6 prefix delegation issue on agent restart

On l3-agent restart, prefix delegation subnets weren't always
inserted into the local router_info cache, leading to a missing
ip6tables rule.  Add it when the internal network is configured
if the prefix has already been assigned.

Change-Id: Ic045e2763ba2772bcaf037591821501e84e40878
Closes-bug: #1789403"
f265c5365b9b08844c78a718aba01a2b6be4bba6,2018-09-18 14:40:03-04:00,"Use Tempest slow job to run all slow tests

tempest-slow job run all the slow tests including API
or scenario slow tests. By running this job will help to
avoid any regressions across projects.

This new job ""tempest-slow"" will run as voting on check pipeline
and same job run on nova and cinder gate.

Tempest also run ""tempest-slow"" as voting job.

Detailed discussion on ML[2].

[1] http://git.openstack.org/cgit/openstack/tempest/tree/.zuul.yaml#n147
[2] http://lists.openstack.org/pipermail/openstack-dev/2018-May/130394.html

Change-Id: Icdf5578234a96fa36e4b275d70f943da059a4b1e"
40ba4ebe6a56d786f6f42022e78dc6d4251d582c,2018-09-25 11:58:13+02:00,"Bump pecan version to 1.3.2

In version 1.3.2 there is fix for issue which caused
failure of start neutron-server process.
Same issue was also reported in [1]

[1] https://bugzilla.redhat.com/show_bug.cgi?id=1597622

Change-Id: Iafe10b13ee729d781a79fcfa328521acfecdaec1
Closes-Bug: #1794259"
f502bbc2ac515ba68811e0785910b983b9bc5b18,2018-09-25 15:16:14+00:00,"Use extension 'empty-string-filtering' from neutron-lib

NeutronLibImpact
Related-Bug: #1749304

Change-Id: Ifb3fc88451c5c348e348b631b37d20e65b7ff486"
66991f1c8be86560ef2d774ed7a7b07ff2834ab1,2018-09-26 10:30:39+08:00,"Add PortForwarding to neutron.objects entrypoint.

Closes-bug: #1794406
Change-Id: Ifad26642d730456136dfa9177d1c9515fe5ec421"
656a8f872970013ff4c0bc577266cbe7f0343037,2018-09-28 13:15:34+00:00,"Do not install centralized FIP if HA port is down

The issue scenario happens when we disassociate a floating IP
while the 'master' router host is restarted or powered-off.

When the L3 agent is powered-on again, the HA router state config
still remains 'master', but the ha port is down. And the message
queue still has one 'router_update' message (floating IP
disassociate message), so the L3 agent will sync this router info
at least twice during the restart, one is the router_update, the
other is the L3 agent full-sync.

The first one will add the centralized FIP to the qg-device, because
the router state is 'master'. So for DVR HA routers, only add the
centralized floating IP to the qg-device in the snat-namespace when
the HA port is up. For the restart procedure, if the HA port is up,
but the router is set to 'backup', do not add the floating IP.

Closes-Bug: #1794305
Change-Id: Ib39fe7dcd437a867c69852885c461a594167f6a1"
82d7c2beed3eacbd6f697acac10e72e5398c954b,2018-10-02 11:50:43+02:00,"Make binding statement singular.

The method _create_ha_port_binding returns only single binding
but add_ha_port using it use plural bindings while safe_execution
of create_ha_port_binding. I noticed this while converting l3ha_model
to ovo in [1], which required access to db_obj of bindings.

[1]. https://review.openstack.org/#/c/602497

Change-Id: Ifabed41c59b2a946e968fdb0748c17e654bd4fcc"
00de8f9a9e36bbca6ef7f0c17c2e6f74a144a358,2018-10-02 09:52:22-04:00,"Do not fail deleting namespace if it does not exist

Note: this is a squash of two changes since they are
dependent on each other, and are currently blocking
the gate queue.

Sometimes cleanup methods are failing in the check and
gate queues trying to delete non-existing namespaces.
Since they could have been deleted asynchronously, don't
raise if the failure is ""No such file or directory"" since
the system is in the intended state.

Cleaned-up the DHCP agent to longer check for existence
first, and the tests to longer mock-out the namespace
exists check.

Fix test_legacy_router_lifecycle failures

Multi-path routes returned via the pyroute2 library have
their outgoing interfaces in the 'multipath' dictionary
element, not in the route dictionary.  In that case return
all the multipath routes correctly.

Change-Id: I5415cb3a88ff2640a19598a1fcb2278388815343
Closes-bug: #1795482
Closes-bug: #1795548"
b43b8c446dac3ed24eebd0b712b569c6f71eba2c,2018-10-02 20:45:19+00:00,"Remove population of is_filter keyword

The population of is_filter in network_ip_availability and
portbindings_extended modules was a walk-around for the missing
of this keyword in neutron-lib's resource attributes.
This issue is resolved in the release of neutron-lib 1.19.0
so this walk-around can be removed.

Depends-On: https://review.openstack.org/#/c/605690/
Change-Id: I7bb29bbe68f7e9afbc20704948661dd5e9dae912"
995744c576503b1de90c922dbecf690ad49f244f,2018-10-03 09:59:34+00:00,"Always set ovs bridge name in vif:binding-details

- This change updates _set_bridge_name to set
  the bridge name field in the vif binding details.
- This change adds the integration_bridge name
  to the agent configuration report.

Change-Id: I454efcb226745c585935d5bd1b3d378f69a55ca2
Closes-Bug: #1788009"
eea5aaac4f5c62ed0c74bd7e922680e20b87bb6b,2018-10-03 19:32:12+00:00,"Fix corner case in failure assigning MAC to SR-IOV NIC

Sometimes due to NIC driver incorrect behavior, VFs might be
missing in 'ip link show' output.  This may lead to a VM boot
failure as agent will just skip such missing devices.

Make the agent do a resync in case a newly added device
'disappears' during processing, which should cause a MAC to
get assigned.

Co-authored-by: Oleg Bondarev <obondarev@mirantis.com>

Change-Id: I148b5a025fc388821fd1269d02908cc8ce1882fe
Closes-bug: #1784484"
d82a5d3c1471524969aafe4a441465ac0ce11f7c,2018-10-04 11:39:23+02:00,"Update tests neutron.conf to use transport_url

The deprecated rpc_backend parameter was removed from oslo.messaging in
I193cc0e613459a6dbbfd54ed0901a54ded78d712

Use transport_url parameter instead

Change-Id: Ia73fe052986617dd6ce5e68cced0c4c88516a33e
Closes-Bug: #1795878"
4e3fb3191927e07b37fe0937102dc17334e906d1,2018-10-04 15:53:53+00:00,"Introduce floating IP pool resource

Add support for listing floating ip pools (subnets).
A new API resource ``floatingip-pools`` is introduced.
This API endpoint can return a list floating ip pools
which are essentially mappings between network UUIDs and
subnet CIDRs. Users can use this API to find out the pool
to create the floating IPs.

Related patches:
* neutron-lib: https://review.openstack.org/#/c/556674/
* tempest-plugin: https://review.openstack.org/#/c/562038/

APIImpact add floatingip pools api
Change-Id: Iaa995630645042520df67d95271e14f11ffcff8c
Partial-Bug: #1653932"
452b2824125641128b5297fcf84de090e0763740,2018-10-05 04:16:34+08:00,"Trigger router update only when gateway port IP changed

During the ha router state change event, the gateway port only
changed the L2 binding host. So l3 agent has the entire gateway
port information. It is not necessary to send a router_update
message to l3 agent again.

Closes-Bug: #1795127
Change-Id: Ia332421aff995f42e7a6e6e96b74be1338d54fe1"
ee7660f593f0f997fff457021b3d5feb5c71906d,2018-10-06 02:40:52+08:00,"Install centralized floating IP nat rules to all ha nodes

For L3 DVR HA router, the centralized floating IP nat rules are not
installed in every HA node snat namespace. So, install the rules to
all the router snat-namespace on every scheduled HA router host.

Closes-Bug: #1793527
Change-Id: I08132510b3ed374a3f85146498f3624a103873d7"
360fde9f88cb9fbddcfacc399ed6bfa18ebbfe30,2018-10-09 08:08:05+00:00,"Ingress direction for min bandwidth rule

Add API extension for QoS minimum bw rule ingress direction.

Change-Id: I6747652df0372ab2ee480a97758501edba0f5b3f
Depends-On: https://review.openstack.org/580387
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
8e60531d11401c2c509a1255b49f89bc2bf81a74,2018-10-10 15:01:49+02:00,"Exclude fallback tunnel devices from netns cleanup

When a namespace gets created, if the fb_tunnels_only_for_init_net
sysctl configuration is set to 0, the fallback tunnels will be
automatically created if the corresponding tunnel is present
in the initial network namespace. Source [0].

This is being observed in some systems where namespaces are not
getting cleaned up due to the presence of such devices as
ip_lib.namespace_is_empty() is returning False.

This patch is adding such devices as per the kernel documentation
to the list of excluded devices by default.

[0] https://www.kernel.org/doc/Documentation/sysctl/net.txt

Closes-Bug: #1797084
Change-Id: I94415a0da5367e2d98d792a5eb4ba3919b838326
Signed-off-by: Daniel Alvarez <dalvarez@redhat.com>"
f849eba286e87d51424e1e768619680297ada5cb,2018-10-10 16:39:28+02:00,"Add both directions for minimum bw rule in doc

Changed QoS backend/rule support table in devref documentation to show
that Minimum Bandwidth rule can support both Egress and Ingress
directions in case of placement based enforcement.
Added a new table to show which directions are supported for Minimum
Bandwidth rule by the network backends, and how that depends on the
enforcement type (dataplane or placement).

Change-Id: I97ab4815d134d306917a84a7b308b734d6db2dd2
Depends-On: https://review.openstack.org/580387
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
f44e5bcfb2a4e38b57d61f56d0cc980530bda9bc,2018-10-10 16:50:55+02:00,"Make grenade-multinode-dvr job voting again

This job was set to be non-voting and was removed from
gate queue in [1]
It looks that patch [2] which was merged to stable/rocky
recently fixed this issue and this job is working fine again,
so lets make it voting and gating again.

[1] https://review.openstack.org/#/c/602097/
[2] https://review.openstack.org/#/c/595490/

Change-Id: Ied3b7c439056134388b16742448cd1da7ece04cf
Related-Bug: #1791989"
85588ad38e3a08137f4f7b4be98ce271064eb2f0,2018-10-11 02:07:05+00:00,"Allow Ipv6 addresses for nova_metadata_host

Current logic didn't check if the nova_metadata_host is an IPv6 address
causing the proxy request to fail with an exception because the url is
not valid.

This patchs check if the nova_metadata_host is an IPv6 address and
create a valid url enclosing the IPv6 address with brackets

Closes-Bug: #1796593

Change-Id: Ibfebffcec2c8860237a1f151084de978a7863bd8
Signed-off-by: aojeagarcia <aojeagarcia@suse.com>"
f352f9faaa2927709ec3863035e6b619e5fc34b1,2018-10-11 11:08:07+02:00,"ovs-agent: Report resource info in heartbeat

Example config for ovs-agent:

ml2_conf.ini:
[ovs]
bridge_mappings = physnet0:br-test
resource_provider_bandwidths = br-test:100000:100000

Agent configurations now includes 'resource_provider_bandwidths' and
'resource_provider_inventory_defaults'.

Change-Id: Ib197573e5cdb60ef0db4e7a771c3179bf9d5bb95
Co-Authored-By: Lajos Katona <lajos.katona@ericsson.com>
Depends-On: https://review.openstack.org/577220
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
d7d433f7290517c4e68290e46e6bcb859f1930a4,2018-10-11 11:15:06+02:00,"sriov-agent: Report resource info in heartbeat

Example config for sriov-agent:

sriov_agent.ini:
[sriov_nic]
physical_device_mappings = physnet0:ens5,physnet0:ens6
resource_provider_bandwidths = ens5:100000:100000,ens6:100000:100000

Agent configurations now includes 'resource_provider_bandwidths' and
'resource_provider_inventory_defaults'.

Change-Id: I1af798d404ed94cd30da3f92734bea911bbc3ac7
Co-Authored-By: Lajos Katona <lajos.katona@ericsson.com>
Depends-On: https://review.openstack.org/577220
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
277c1e77b2e5ac2e281a4178cd4c679d96e45c83,2018-10-11 09:17:28+00:00,"ovs-agent: fullstack test resource info report

Change-Id: Ia36b05c835339fea8913103dffad1422a9aacaed
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
ac5815a110f0033c1a217481822fc0c72c1ba16c,2018-10-11 13:44:26+00:00,"Add permanent ARP entries for DVR fip/qrouter veth pair

Since we know the IP and MAC addresses of both sides of the
fip/qrouter namespace veth pair device, just add permanent
ARP entries for them.

Change-Id: I6193b00681dfb79222eedfd00c89620321ac1b4f
Related-Bug: #1791989"
cf37563c8393f964e7f390f13c43070791360cc1,2018-10-11 14:59:34-04:00,"Remove deprecated vsctl ovsdb_interface api

This was deprecated in https://review.openstack.org/#/c/503070/
so remove all the vsctl-related code, leaving just the native
ovsdb api.

Also removed renamed ovs_vsctl_timeout value, which was changed
to ovsdb_timeout in https://review.openstack.org/#/c/518391/

Change-Id: I50dfcea3deb41df1bd01fd06b76522453a6ba50b"
81652cd939ebaf7ea09e5f8dd31d8185619c8243,2018-10-12 11:00:35-04:00,"DVR-HA: Configure extra routes on router namespace in dvr_snat node

Extra routes are not configured on Router namespaces in dvr_snat
node with DVR-HA configuration.
This patch fixes the problem.

Change-Id: If620b23564479042aa6f58640bcd6705e5eb52cf
Closes-Bug: #1797037"
6d9f1c662f0f233815aa6c500963ef1712f30e0a,2018-10-12 14:47:35-06:00,"use retry_if_session_inactive from neutron-lib

The retry_if_session_inactive decorator was rehomed into neutron-lib
[1]. This patch consumes it by removing the function from neutron and
using neutron-libs version where appropriate.

NeutronLibImpact

[1] https://review.openstack.org/#/c/557040/

Change-Id: I3e3289f33e62d45933d0fbf165bb4b25078f22d5"
c2c37272bf788aac63399127cddd487dc0f15c38,2018-10-13 00:09:24+02:00,"[Functional] Increase test_timeout for db migration tests

In Neutron we hit quite often same issue as Manila, see [1] for
details.
It looks that solution for this problem may be increase timeout
for test_walk_version functional tests.
Higher timeout will be applied for tests for both pgsql and mysql
backends but it is mostly needed for mysql because 'pymysql' works
much slower on slow nodes than 'psycopg2'

This patch adds also new decorator to set individual timeout for
tests.

[1] https://bugs.launchpad.net/manila/+bug/1501272

Change-Id: I5f344af6dc3e5a6ee5f52c250b6c719e1b43e02d
Closes-Bug: #1687027"
3b5373b4efffc4213bf8753680c9ed3cc305b0d4,2018-10-13 17:14:59+02:00,"Allow update request with current segment_id

If the segment_id in the update request equals the segment_id
already associated with the subnet being updated, there is no
need for further update related segment validations.

Closes-Bug: #1793391
Change-Id: I65cd5b92b219c14dd07ae72457af243756c4ed02"
a85c5ed3fb1d0cf9af14b976a233c682ffa89c6b,2018-10-15 20:35:49+02:00,"supported_vnic_type configurable for ovs

Now supported_vnic_types is hardcoded to the mechanism drivers, but that
can depend on several factors, like type of the NIC, admin decision,
etc.
With this patch we put the right to decide which vnic types are
supported for ovs agent into the hands of the admin, by allowing
blacklisting items from the mechanism driver specific list.
Background: http://eavesdrop.openstack.org/meetings/neutron_qos/2018/
neutron_qos.2018-07-31-15.00.log.html#l-58

Change-Id: I63e562e2eccc5b02c1c767d6a2c28cb803131e99
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
6352b944a4dfa209e11f1981d9204aa89b9f157d,2018-10-17 10:25:55+07:00,"Introduce L3 agent extension for SNAT logging

This patch introduces SNAT logging extension for Neutron Packet Logging
framework.

Co-Authored-By: Kim Bao Long <longkb@vn.fujitsu.com>
Partial-Bug: #1752290
Change-Id: I882b8e75525f51ef8b5b032fc89843ae904844e7"
4df02ee93cd3c77d2d0bba0f5c1574c22b477eea,2018-10-17 09:27:18+02:00,"Enable ingress direction for min_bw rule

Enable QoS minimum-bandwidth rule for ovs and sriov backends for both
ingress and egress directions.
Add qos-bw-limit-direction as supported extension to qos-plugin, and
add create/delete/update_minimum_bandwidth and
delete_minimum_bandwidth_ingress empty methods to sriov/ovs/linuxbridge
extension drivers.

Change-Id: I6eb21ccf0400ea9adae90ff0bf97e08cdb09b8eb
Depends-On: https://review.openstack.org/609368
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
eb4221e6f0b48b131f2009168b3b22f5a3d4dd8f,2018-10-17 07:34:36+00:00,"Introduce Port resource request extension

The resources needed by a port are expressed to nova via
resource_request extending the port.
If the port requested by nova boot has resource_request attribute, that
means that placement must enforce the minimum bandwidth requirements.

Change-Id: I82afa56fa784fc43fefd1ce494bff649f51ad1c8
Depends-On: https://review.openstack.org/584903
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
50c75e9e51a053c89a585c55a586ed3d931d82f1,2018-10-18 10:43:38+07:00,"Add a request validator for SNAT logging

A log request for SNAT resource should specify resource_type='snat'
and resource_id=router_id. So this patch adds a validation method for
the incoming log request.

Co-Authored-By: Kim Bao Long <longkb@vn.fujitsu.com>
Change-Id: I4fff5a9c8877d192aab780eed9be90452711fb3d
Partial-Bug: #1752290"
1973a037c29b0fc8bf6347771ed930726d1648f5,2018-10-19 12:12:54+08:00,"Fix dvr ha router gateway goes wrong host

During L3 agent restart, the dvr ha router gateway port
binding host may change because the multiple ha router
scheduled hosts.

After this patch, we return the 'master' ha binding host
directly during the gateway port create. And do not let
the original 'master' (current is backup) host override
the gateway port binding host.

Closes-Bug: #1793529
Change-Id: Icb2112c7f0bd42c4f4b1cf32d6b83b6d97f85ef7"
f4d438019e3bd2f9b6c64badb9533168e583d8af,2018-10-21 21:48:50+05:18,"neutron.conf needs lock_path set for router to operate
This change is adding required configuration in neutron.conf
to set the lock_path parameter, which was missing in
compute-install-ubuntu.rst

Change-Id: If090bdf060dfe21d11b1a5dfd010dc8167d9e45e
Closes-Bug: #1796976"
f787f12aa3441ecffef55f261c4d87dbb12ca6cf,2018-10-22 18:43:33+02:00,"Make port binding attempt after agent is revived

In some cases it may happen that port is ""binding_failed""
because L2 agent running on destination host was down but
this is ""temporary"" issue.
It is like that for example in case when using L3 HA and when
master and backup network nodes were e.g. rebooted.
L3 agent might start running before L2 agent on host in such case
and if it's new master node, router ports will have ""binding_failed""
state.

When agent sends heartbeat and is getting back to live,
ML2 plugin will try to bind all ports with ""binding_failed""
from this host.

Change-Id: I3bedb7c22312884cc28aa78aa0f8fbe418f97090
Closes-Bug: #1794809"
c39afbd5fcdfff2ad5e7f6963768da9f3d8027d2,2018-10-22 22:58:48+02:00,"[Functional] Increase test_timeout for db migration tests

Patch [1] increased timeouts for test_walk_version functional tests
for MySQL backend to 300 seconds to avoid failures due to timeouts.

Unfortunately it looks that on nodes from some cloud providers used
in the gate and with number of migration scripts which we have in
Neutron those tests can take sometimes even around 400 seconds.

So lets increase this to 600 seconds to avoid such failures of
functional tests job.

[1] https://review.openstack.org/#/c/610003/

Change-Id: I9d129f0e90a072ec980aadabb2c6b812c08e1618
Closes-Bug: #1687027"
fb068f089c5cc0597c152f53b65cc246ac0a937b,2018-10-23 23:23:45+02:00,"Increase tempest jobs timeout

For jobs like:
- neutron-tempest-iptables_hybrid
- neutron-tempest-linuxbridge
- neutron-tempest-dvr

Sometimes we hit timeouts which aren't related
directly to Neutron.

As was decided on Neutron CI meeting [1], lets try
to increase jobs' timeout to 3h and check if that
will help to stabilize those jobs.

[1] http://eavesdrop.openstack.org/meetings/neutron_ci/2018/neutron_ci.2018-10-23-16.00.log.html#l-121

Change-Id: I24d694ba57aa3ff49f8c118486265925f1b4a611"
a98766d758fbf828ebd9ba0916f61f7ac1acde43,2018-10-24 08:46:21-04:00,"Revert ""Add openstack/placement as a required project for neutron-grenade*""

This reverts commit 0014c0c3734e8d344e4a45e127fbd0c86dcfaf3c.

This is handled generically now with this change and its dependency:

  https://review.openstack.org/#/c/606853/

Change-Id: I360211cf60afb5611fb9e77fe6332fa59159708f"
60c50d92966696771d42e587047d8f14eb86372a,2018-10-24 17:51:59+00:00,"OVSNeutronAgent.rpc_loop is always called with ""polling_manager""

Furthermore, ""polling_manager"" cannot be retrieved like in [1].
""get_polling_manager"" is a generator and must be used within a
context manager.

[1] https://github.com/openstack/neutron/blob/e5726c7bdace306e28005abb899162225306d09f/neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py#L2074-L2076

Change-Id: I7a704f63fbfee770ee214e5f233134d17ff2d7a1
Closes-Bug: #1799748"
152364dbc89b13e1d7bbe38cda0db736a0c3f782,2018-10-25 12:11:27+02:00,"Add neutron-status upgrade check command framework

This adds basic framework for neutron-status upgrade check commands.

For now it has only ""check_nothing"" check implemented.
Real checks can be added to this tool in the future.

Depends-On: https://review.openstack.org/#/c/610061/

Change-Id: Ib08119e1bb8de80856edb6a39769d4bc9d98c587
Story: 2003657
Task: 26144"
8bd5ecd4fc0c7c6199983c710c62b1ad88039a4f,2018-10-25 15:34:06+02:00,"notification: Add 'status' to agent after_create/update

Make the same status information available to notification consumers
(resource==agent, event==after_create/after_update) as it was already
available where the notification is sent in class AgentDbMixin.

Change-Id: Ie74091da934c7e49fd29ae4c6f930a7eb47e14b2
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
69d6b86f56cff0af76edc30fd01148e79fdd688a,2018-10-25 15:34:06+02:00,"ovs/sriov mech drivers: resource_provider_uuid5_namespace

Set a UUID v5 namespace for the Open vSwitch mechanism driver and
another for the SR-IOV mechanism driver. These will be used to
deterministically generate Placement Resource Provider UUIDs.

Change-Id: I365a0aeefffe68bd7d5ba5f6697b814bf2713a19
Depends-On: https://review.openstack.org/586567
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
1d98f0a7d43bc45b66260053bde76d992fd613b8,2018-10-26 01:24:24+08:00,"Event driven periodic resync task for DHCP agents

The DHCP agent will resync its state with Neutron to recover from any
transient notification or RPC errors. Currently, the periodic resync
task waits on a timer to determine whether a re-sync is necessary. The
interval between attempts by default is 5 seconds and can be longer
thru config. This may cause a potentially long delay before an agent
gets new work via an agent_updated RPC call.

The idea of this RFE is to change the timer based periodic resync task
into an event driven one. It also proposes a new DHCP agent config
option ""resync_throttle"" to ensure the minimum interval taken between
resync state events to avoid too frequent resyncing. In this way, we
could force the agent to act on the resync request immediately therefore
decreasing how much time is needed before DHCP services are available.

Co-authored-by: Allain Legacy <Allain.legacy@windriver.com>

Closes-Bug: #1780370
Change-Id: Ie9d758ba5f750a38dc19ea5ce8b2c6b414f9ef80"
9b23e1be07a8d686a403ba8939ec5ac79d4ebc74,2018-10-26 08:14:46+00:00,"sriov-agent: fullstack test resource info report

Change-Id: Ibbe656707276d6c3c68b051e6d66d6d388dbfd18
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
32cc8b63d7bbe5cfc83b82a058d1c5832980f290,2018-10-26 18:03:52+04:00,"Add capabilities for privsep

CAP_DAC_OVERRIDE and CAP_DAC_READ_SEARCH were added
(like in nova) to fix agents on kernel 4.15.
Please see bug for details

Change-Id: Ieed6f5f6906036cdeaf2c3d96350eeae9559c0c7
Closes-Bug: #1800157"
90cc4d087ff2252fc7252fc4ae2fea47a7448284,2018-10-29 15:27:50-04:00,"Fix incorrect usage of '# flake8: noqa'

Correct usage is '# noqa' at end of line, otherwise syntax
checking is disabled for the entire file.  Had to fix an
incorrect pylint directive uncovered by the change.

Trivialfix

Change-Id: If210b7c9e9d2c5fc9773c0c6f2dc07cfd52a5a51"
221f386029faf499c5a445374685cba5b67df31e,2018-10-30 08:59:28+08:00,"Fix incorrectly passing ext_ips as gateway ips

An event will be sent out after creating
router gateway. Within the event, ext_ips
is sent incorrectly while gw_ips is expected.
Project neutron-dynamic-routing subscribes
the topic and will process the event. But
it can't process ext_ips.

This commit gets the gw_ips through the
ext_ips and sends gw_ips out.

Co-Authored-By: Allain Legacy<Allain.legacy@windriver.com>

Change-Id: I9b67b58e87faa9cbb8ed4cd03c74f467ca20d73f
Closes-Bug: #1796629"
f5d3a4159bcd526384ab2063ad9082f1a0d291b1,2018-10-30 10:31:38+08:00,"Verify port_forwarding subnet and IP address both

Free subnet can not remove from router if other router's
subnets have port_forwarding. This patch fixed it by
checking the router interface subnet and IP address.

Co-Authored-By: LIU Yulong <i@liuyulong.me>
Closes-Bug: #1799140
Change-Id: Idace35126bb00139fa1f9f48be3aa3aab265b9d8"
20800389f1620d7299f6f3216312fca76ec527ba,2018-10-31 08:58:31+01:00,"Increase tempest-full jobs timeout

For jobs:
- tempest-full
- tempest-full-py3

Sometimes we hit timeouts which aren't related
directly to Neutron.
So, as was done for some other jobs in [1] it will also
increase timeout for tempest-full jobs.

This patch adds also our own list of irrelevant files for
tempest-full-py3 job as it wasn't specified before.

[1] https://review.openstack.org/#/c/613234/

Change-Id: I6e56b5f9243cdc29e8a36399ae98f95173e61c98"
b70ee4df885d8ca18cb3dbfbec9691ecc0321f09,2018-10-31 12:58:45+00:00,"Block port update from unbound DHCP agent

Current DHCP port management in Neutron makes the server to clear the
device_id while the agent is responsible for setting it.

This may cause a potential race condition, for example during network
rescheduling. The server aims to clear the device_id on a DHCP port and
assign the network to another agent while the old agent might just be
taking possession of the port. If the DHCP agent takes possession of the
port (i.e., update port...set the device_id) before the server clears
it, then there is no issue. However, if this happens after the clear
operation by server then the DHCP port would be updated/marked to be
owned by the old agent.

When the new agent takes over the network scheduled to it, it won't be
able to find a port to reuse so that an extra port might need to be
created. This leads to two issues:
1) an extra port is created and never deleted;
2) the extra port creation may fail if there are no available IP
addresses.

This patch proposes a validation check to prevent an agent from updating
a DHCP port unless the network is bound to that agent.

Co-authored-by: Allain Legacy <Allain.legacy@windriver.com>

Closes-Bug: #1795126
Story: 2003919
Change-Id: Ie619516c07fb3dc9d025f64c0e1e59d5d808cb6f"
84a9a5ec57421718192427bac79b968729edeb3c,2018-10-31 17:01:48+00:00,"iptables-restore wait period cannot be zero

In case --wait (-w) parameter is zero, iptables-restore returns an
error.

Correct:
  [root@dev02 iptables]# iptables-restore -w 1 -W 20000 ipt

Incorrect:
  [root@dev02 iptables]# iptables-restore -w 0 -W 20000 ipt
  Option --wait-interval requires option --wait

Change-Id: I431fe6f637b963d61d81afed30a4fb1ec112d66c
Closes-Bug: #1800884"
5018d702415a6f056ff54d95447c5031e7e7d9b9,2018-11-01 18:01:25+01:00,"Fix connection between 2 dvr routers

In case when 2 dvr routers are connected to each other with
tenant network, those routers needs to be always deployed
on same compute nodes.
So this patch changes dvr routers scheduler that it will create
dvr router on each host on which there are vms or other dvr routers
connected to same subnets.

Co-Authored-By: Swaminathan Vasudevan <SVasudevan@suse.com>

Closes-Bug: #1786272

Change-Id: I579c2522f8aed2b4388afacba34d9ffdc26708e3"
a58a527494aa40b11b23eca47a8afb60fb24583a,2018-11-01 16:00:16-04:00,"Scan for MAC through all devices in macvtap agent

The first device the agent happens to pick could be something
without a MAC address like a 6in6 interface. This was causing
the agent to fail to start if it was unlucky enough to pick
that address.

This patch just adjusts the logic to keep iterating through
the list until we find a MAC.

Change-Id: Iba9c7c3cb200e74a78ea885e8d9323de64c2c663
Closes-Bug: #1801030"
c1837812318eb732076a6c928c8903094ec9d6e3,2018-11-02 15:41:48+08:00,"Add test cases to verify port number 0 for port_forwaring

Floating IP port forwarding internal or external port number should
not allow 0, otherwise you will get some ValueError exception in
neutron server.

Change-Id: I8bf8ed6f9c4b937743f8c0f998ee897e3af17459
Closes-Bug: #1799150"
e9e374fa7deb43152593e060f5e46a7d59a4f199,2018-11-02 23:12:01+01:00,"Increase timout of gate jobs

In patch [1] timeout for
- tempest-full
- tempest-full-py3
was increaced to 3h.
Unfortunatelly it was done only for check queue.
I forgot to do the same change for jobs in gate queue

This patch adds same change for gate queue.

[1] https://review.openstack.org/#/c/614423/

Change-Id: I263124aa732efea8295313aeff7697b91c00f3f4"
d860109bf60421a721e5009ca6f66a767bfd3488,2018-11-05 11:40:13+01:00,"supported_vnic_type configurable for sriov

Now supported_vnic_types is hardcoded to the mechanism drivers, but that
can depend on several factors, like type of the NIC, admin decision,
etc.
With this patch we put the right to decide which vnic types are
supported for ovs agent into the hands of the admin, by allowing
blacklisting items from the mechanism driver specific list.
Background: http://eavesdrop.openstack.org/meetings/neutron_qos/2018/
neutron_qos.2018-07-31-15.00.log.html#l-58

Change-Id: Iad9e2e966df53b4164d2a56a93215c69825b5241
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
f5842b304c3f24c9cdc8555664155fb4127b0809,2018-11-05 20:56:25+08:00,"Set router_id if floating IP has port_forwardings

Set floating IP's router_id when it has port_forwardings
during the update API.

Co-Authored-By: chenguobin <chengb@chinatelecom.cn>

Closes-Bug: #1799135
Change-Id: Idb1a52b6f32bdb18d920bce2b891b4d73c557dfb"
916e7745166d404f187533de702726aac3ef6eba,2018-11-06 15:40:34+01:00,"Wait to ipv6 forwarding be really changed by L3 agent

In test test_ha_router_namespace_has_ipv6_forwarding_disabled
functional test it may happen that L3 agent will not change ipv6
forwarding and test fails because it checks that only once just
after router state is change to master.

This patch fixes that race by adding wait for 60 seconds to
ipv6 forwarding change.

Change-Id: I85a602561ebe9b7ab135913af49a3f010b09f196
Closes-Bug: #1801930"
e17dac3ae9f64d726db7cee20c492b3507350349,2018-11-06 23:03:06+08:00,"Add protocol to port_forwarding uniq constraint

Floating IP port forwardings with different protocols can not have
the same internal or external port number to the same VM port. But
we can have different application servers, for instance TCP server
and UDP server, listen to the same port at same time.

This patch adds the protocol attribute to the DB uniq constraint
to allow creating different protocol port forwardings with same
internal or external port number.

Co-Authored-By: LIU Yulong <i@liuyulong.me>
Closes-Bug: #1799155
Change-Id: Ifbb5f3ee2473aac98982bff0d2e6bb9b3e5ab5d6"
f4089680b507153b99cb8c659eec9f2a09ef3aa6,2018-11-06 22:22:42+00:00,"Add missing step for ovs deploy guides

There was missing step about adding underlying interface to the
provider bridge in ovs deployment guides.
This patch adds this missing step.

Change-Id: I2ef5f12c469647d7f197cb5db71692e68d23f718
Closes-Bug: #1801361"
cf0b461836bc68c1afc664fa3fbd44f6d34ee20e,2018-11-06 23:27:25+00:00,"Bump neutron-lib to version 1.20.0

Depends-On: https://review.openstack.org/#/c/615894/
Change-Id: I6625c5099828ee6e5df1f07f0cc8179f3ebabdb1"
cdfeeaf2bcd422c1b5cbb9d9ccc49ec639f5abea,2018-11-07 15:22:51+00:00,"DevStack: OVS: Only install kernel-* packages when needed

If the host OS is using an older kernel and invoke the compile_ovs
function from the DevStack OVS library (devstack/lib/ovs), that function
will try to install the kernel-dev and kernel-headers package even if
the ""build_modules"" parameter is set to False.

That could fail because the specific kernel-* packages for the version
of the kernel running may not be present in the distro's repository
anymore. Plus, if the kernel modules will not be compiled, there's no
reason to install such packages.

This patch is fixing this problem by using the ""build_modules"" parameter
as a flag to whether install or not those kernel-* packages.

Change-Id: I11af0e22d25973e6334e867ab2659fbdf9f10d86
Closes-Bug: #1802101
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
b8d2ab8543a27b03bde534ef994027d9b44556c4,2018-11-10 07:09:51+08:00,"Prevent create port forwarding to port which has binding fip

For dvr scenario, if port has a bound floating, and then create
port forwarding to it, this port forwarding will not work, due to
the traffic is redirected to dvr rules.

This patch restricts such API request, if user try to create port
forwarding to a port, check if it has bound floating IP first.
This will be run for all type of routers, since neutron should
not let user to waste public IP address on a port which already
has a floating IP, it can take care all the procotol port
numbers.

Closes-Bug: #1799137
Change-Id: I4ba4b023d79185f8d478d60ce16417d3501bf785"
593c04d10d9d67cc6f864ff37416951dd28584f5,2018-11-10 15:57:25+01:00,"Import neutron.db.api module in common.utils

Patch [1] removed import of neutron.db.api module in
neutron.common.utils.
This cause some issues e.g. in networking-ovn projects because
listeners:

@event.listens_for(orm.session.Session, ""persistent_to_deleted"")
on _persistent_to_deleted() function [2] and

@event.listens_for(model_base.BASEV2, ""attribute_instrument"", propagate=True)
on _listen_for_changes() function [3]

aren't created as they where before.

This patch adds import of this neutron.db.api module again just to
ensure that those listeners are created properly.

[1] https://review.openstack.org/#/c/614252/
[2] https://github.com/openstack/neutron/blob/master/neutron/db/api.py#L110
[3] https://github.com/openstack/neutron/blob/master/neutron/db/api.py#L134

Closes-Bug: #1802369

Change-Id: I3e427ee5c904c34115aaf1afa67e1109ea58d603"
8c17df7138744de567d1e45cfb604a0221db90ab,2018-11-12 16:13:20-05:00,"Notify router_update after directly gateway IP change

If directly change router gateway port IP address, the gateway IP
does not changed in router related namespace in l3 agent side. This
patch adds a method to catch a 'PORT' IP change event, and notify
the L3 agent.

Closes-Bug: #1795222
Change-Id: If276a7613c156f8c826967c9c8cbd6f2a8d32674"
cd0cc47a6ab0f7968a8c24e9d477909c45e4ae87,2018-11-13 16:25:04-05:00,"DVR: Centralized FloatingIPs are not cleared after migration.

With DVR routers, if a port is associated with a FloatingIP,
before it is used by a VM, the FloatingIP will be initially
started at the Network Node SNAT Namespace, since the port
is not bound to any host.

Then when the port is attached to a VM, the port gets its
host binding, and then the FloatingIP setup should be migrated
to the Compute host and the original FloatingIP in the Network
Node SNAT Namespace should be cleared.

But the original FloatingIP setup in SNAT Namespace was not
cleared by the agent.

This patch addresses the issue.

Change-Id: I55a16bcc0020087aa1abe76f5bc85cd64ccdaecd
Closes-Bug: #1796491"
e3dc447b908f57e9acc0378111b8e09cbd88ddc5,2018-11-14 08:28:02+00:00,"raise priority of dead vlan drop

- This change adds a max priority flow to drop
  all traffic that is associated with the
  DEAD VLAN 4095.
- This change is part of a partial mitigation of
  bug 1734320. Without this change vlan 4095 traffic
  will be dropped via a low priority flow after being
  processed by part/all of the openflow pipeline.
  By raising the priorty and droping in table 0
  we drop invalid packets as soon as they enter
  the pipeline.

Change-Id: I3482c7c4f00942828cc9396cd2f3d646c9e8c9d1
Partial-Bug: #1734320"
aa19fa1c3ff8f2fad8fc53b5a2fda0a70bf8cf63,2018-11-14 09:27:26+00:00,"Implement ip_lib get_devices using pyroute2

IPWrapper.get_devices() now uses pyroute2 and priv_sep.

Related-Bug: #1492714
Change-Id: Idb847bf16fe8898735266d93d39430da1f5410f9"
2572c158f5290ddc3bc2e4f06ecbd4768c82eee4,2018-11-14 12:46:37-05:00,"Change to use iproute2 instead of brctl

brctl is being deprecated in some Linux distros, so
change neutron to start using iproute2 commands or
the pyroute2 library where possible.

Added create() to IpLinkCommand class to allow usage
of pyroute2 for bridge creation.

Change-Id: If679e79fa3242ee1cd8610b5525deca35b41c87e
Closes-bug: #1801919"
b847cd02c56dc8fe654f4731306dc2b5493a62eb,2018-11-15 14:59:49-05:00,"Enable 'all' IPv6 forwarding knob correctly

When the external gateway is plugged and we enable IPv6
forwarding on it, make sure the 'all' sysctl knob is also
enabled, else IPv6 packets will not be forwarded.  This
seems to only affect HA routers that default to disabling
this 'all' knob on creation.

Also, when we are removing all the IPv6 addresses from a
HA router internal interface, set 'accept_ra' to zero so
it doesn't accidentally auto-configure an address.  Set
it back to one when adding them back.

Re-homed newly added _wait_until_ipv6_forwarding_has_state()
accordingly.

Closes-bug: #1787919

Change-Id: Ia1f311ee31d1479089685367a97bf13cf170b342"
9b23abbdb68f7e0c80c305ec1874281f6dea7e9e,2018-11-16 15:33:13+01:00,"Add kill_timeout to AsyncProcess

AsyncProcess.stop() method has now additional parameter
kill_timeout. If this is set to some value different than
None, eventlet.green.subprocess.Popen.wait() will be called
with this timeout, so TimeoutExpired exception will be raised
in case if process will not be killed for this ""kill_timeout""
time.
In such case process will be killed ""again"" with SIGKILL signal
to make sure that it is gone.

This should fix problem with failing fullstack tests, when
ovs_agent process is sometimes not killed and test timeout was
reached in this wait() method.

Change-Id: I1e12255e5e142c395adf4e67be9d9da0f7a3d4fd
Closes-Bug: #1798472"
c8cb1454afcb65d1ecbd2716888edd3819cdec5b,2018-11-17 12:31:27+08:00,"Add test cases for port number 0 for port_forwarding

Depends-On: https://review.openstack.org/#/c/616030/
Depends-On: https://review.openstack.org/#/c/613562/

Closes-Bug: #1799150
Change-Id: Iae80e59e3472cfccdf28ff29ba2f630781258ebc"
0745e32cd2bfacb11754814d30392d97e87c23b9,2018-11-21 12:29:39+00:00,"DVR Floating IP create don't raise exception if agent not found

Patch [1] added handling of AgentNotFoundByTypeHost exception in
create_fip_agent_gw_port_if_not_exists method in
neutron.db.l3_dvr_db.DVRResourceOperationHandler class.
Unfortunatelly there was mistake there and such exception wasn't
catched properly.
That caused issue e.g. in functional-python35 tests but wasn't catched
properly in functional tests using python27.

This patch changes this to handle such exception properly.

[1] https://review.openstack.org/#/c/574917/

Change-Id: If43f2c944ff46d8b05fbcf68231fd04bed147ba0"
01fe73f99c456adb6d7a231e5ef6e5497d926b5f,2018-11-22 18:37:25+02:00,"Trivial: Fix ovs cleanup script on Windows

The ovs cleanup script fails to run on Windows due to an import
error. The linux utils module will always get imported, which uses
platform specific modules.

Since only a constant is used from this module, the import can
easily be removed, fixing this issue.

Change-Id: I0cf7b629dc5d374d2066346276f73a12e4d03973
Closes-Bug: #1804180"
889bb1b3af65cdb50ec4fb319d00e2a39dc4dfcc,2018-11-23 11:52:48+01:00,"Cleanup old jobs from experimental queue

In experimental queue there were some jobs which are already covered
by jobs which runs in check queue, so we don't need them in experimental
too.

Removed jobs:
tempest-pg-full -
    covered by neutron-tempest-postgres-full from peridoic queue
legacy-tempest-dsvm-neutron-with-ryu-master -
    covered by neutron-tempest-with-ryu-master from periodic queue
legacy-neutron-dsvm-api-pecan and legacy-tempest-dsvm-neutron-pecan -
    pecan hook is droped by patch [1]  so there is no way to
    run it anymore
legacy-grenade-dsvm-neutron-forward - it is not needed in master branch,
    this job is testing upgrade from N to N+1 release so it makes sense
    to run it only on patches proposed to stable releases

[1] https://review.openstack.org/#/c/485825/

Change-Id: I1a632cb2fbc369c3ac949bd979fd0e96272931db"
7d0e1ccd34a473c511c9c2357421825539965e41,2018-11-25 09:23:00+00:00,"Get centralized FIP only on router's snat host

It may happen that L3 agent works in dvr_snat mode but
it handles some router as ""normal"" dvr router because
snat for this router is handled on other node.
In such case we shouldn't try to get floating IPs cidrs
from snat namespace as it doesn't exists on host.

Change-Id: Ib27dc223fcca56030ebb528625cc927fc60553e1
Related-Bug: #1717302"
c1407db676b6e610a8dc37620a60f45610f4249c,2018-11-25 21:30:48+01:00,"Store journal log from host in fullstack's job results

Change-Id: Ibd16e111927d4c999cd668de9c04fc4c3146f347
Related-Bug: #1798475"
08bf770055e27e4eb9f12d67f3f171e62862670d,2018-11-27 03:59:50+00:00,"Merge ""Fix incorrect usage of '# flake8: noqa'"""
c68ebd661b68c9da548a71521610839c38acd0c5,2018-11-27 09:23:25+00:00,"Implement IpRuleCommand.list_rules() using pyroute2

Change-Id: I55d5dd756940e5a92f472c9309d49f427e907928
Related-Bug: #1492714"
aaf215b5a59a7e22961d1c155d86367e35e78f87,2018-11-27 19:01:40+09:00,"Convert instance method to staticmethod in linuxbridge_neutron_agent

Convert unnessary instance method to staticmethod so that any plugin
API can use the methods.

Closes-Bug: #1805356
Change-Id: Ic568f470b813b85cfa46aa46308480e2579f779c"
06ba6a1aceb8dd2c6df3b243bddb15ef8a8af27d,2018-11-28 00:03:13+08:00,"Only store segmenthostmapping when enable segment plugin

This patch adds a check to determine if the 'segments' service plugin is
enabled. The segment-host mapping db table should only be saved and
updated to the db table if the users configure the 'segments' service
plugin in the config file. The data should be available only in a routed
network resource situation.

Change-Id: I65a42aa2129bef696906a18d82575461dc02ba21
Closes-Bug: #1799328"
3e2e2e557756a333c3b1579279b762298fbe63d2,2018-11-27 21:12:21+00:00,"Sync up model_query module to neutron-lib

The implementation of method 'apply_filters' in
neutron_lib.db.model_query is updated [1]. This patch sync up
the neutron's side implementation.

[1] https://review.openstack.org/#/c/609847/

Change-Id: I180c0813bb433088f6037ff108327fd7a119512b"
ae031d18866a9e3652f4fc122f120915209a7b29,2018-11-29 12:50:17+01:00,"Force all fdb entries update after ovs-vswitchd restart

When ovs-vswitchd process is restarted neutron-ovs-agent will
handle it and reconfigure all ports and openflows in bridges.
Unfortunatelly when tunnel networks are used together with
L2pop mechanism driver, this driver will not notice that agent
lost all openflow config and will not send all fdb entries which
should be added on host.

In such case L2pop mechanism driver should behave in same way like
when neutron-ovs-agent is restarted and send all fdb_entries to
agent.

This patch adds ""simulate"" of agent start flag when ovs_restart is
handled thus neutron-server will send all fdb_entries to agent and
tunnels openflow rules can be reconfigured properly.

Change-Id: I5f1471e20bbad90c4cdcbc6c06d3a4412db55b2a
Closes-bug: #1804842"
e2948455412d6cd4f0e73a616367dda2fbb57157,2018-11-29 17:10:05+01:00,"rally-jobs: Add FloatingIP workloads

As discussed on the neutron-performance meeting [1] floating IP
operations should be covered in the neutron gate rally job.
As I set out to write the missing tests I discovered that some of it
was already written by rally folks. For example see [2].
In neutron we only need to add them to the rally job definition.
Keep in mind the test code has been relocated since to the
rally-openstack repository. For example see [3].

[1] http://eavesdrop.openstack.org/meetings/neutron_performance/2018/neutron_performance.2018-10-22-16.02.log.html#l-143
[2] https://review.openstack.org/225223
[3] https://github.com/openstack/rally-openstack/blob/4e4bfc5/rally_openstack/scenarios/neutron/network.py

Change-Id: Icec7011cb293f1c92d968ef60efe7468ea4631fb"
f0678b9b0965dae1ab340cd7dd9805eca1ea6e7f,2018-11-29 19:33:16+00:00,"Add propagate_uplink_status to port

Introduce an attribute 'propagate_uplink_status' to port.
This attribute can be implemented for VF port to indicate if the VF
link state should follow the state of the PF.

Note: ML2 extension driver loaded on request via configuration:

  [ml2]
  extension_drivers = uplink_status_propagation

Other related patches:
* neutron-lib: https://review.openstack.org/#/c/571821/
* tempest test: https://review.openstack.org/#/c/586719/
* OSC: https://review.openstack.org/#/c/586684/
* neutronclient: https://review.openstack.org/#/c/586712/

APIImpact Add 'propagate_uplink_status' attribute to 'port' resource

Change-Id: Ie8260c332e24c1880f9f82e6b6dacca8415be842
Close-Bug: #1722720"
00bf365025772d423eea7da1ddbb6211ab757aed,2018-12-01 17:45:46+08:00,"[L3][QoS] Neutron server side router gateway IP QoS

This patch enables to bind a QoS policy to the router gateway,
then in L3 agent side SNAT traffic for the VMs without floating
IPs can be limited under the policy bandwidth rules. This is
suit for all kinds of L3 routers: DVR, DVR with SNAT HA, L3 HA
and Legacy.

API update router gateway json:
{
router"": {
  ""external_gateway_info"": {
    ...
    ""qos_policy_id"": ""policy-uuid""
    }
  }
}

Depends-On: https://review.openstack.org/#/c/567497/

Partially-Implements blueprint: router-gateway-ip-qos
Closes-Bug: #1757044
Related-Bug: #1596611
Change-Id: I26e22bce7edd1f93b2ac0048b61b14f858938537"
cd3cc7e9087dc7ee0e6833d806da9a1896ede54c,2018-12-01 17:45:47+08:00,"[L3][QoS] Agent side router gateway IP rate limit

This patch implements the L3 agent side router gateway IP rate
limit. For routers in centralized snat node (network node),
the tc rules will be set on the corresponding device in router
namespace:
    1. Legacy and HA router, qrouter-namespace and qg-device
    2. Dvr (edge) router, snat namespace and qg-device

If gateway IP rate limit was set, then under the same router,
all the VMs without floating IP will share the bandwidth.

Partially-Implements blueprint: router-gateway-ip-qos
Closes-Bug: #1757044
Change-Id: Ie92ff0d4df0e85ce71c7d50f34ea6ff973812af8"
b617df2b2158fb3668795d8db9e112b27d083623,2018-12-01 22:58:37+00:00,"Change ""cmd"" folder in fullstack tests

When fullstack tests are executed manually using a debugger
(e.g.: PyCharm integrated debugger), the ""cmd"" folder is imported
instead of ""cmd"" [1] module.

To solve this problem, this folder and the references to this path
must be changed.

[1] https://docs.python.org/3/library/cmd.html

Change-Id: I8e6b6995c10875a882a46ca3a0d779aafda124a3
Closes-Bug: #1805844"
22c9cf3d95c3d14351045bac2920b4e0994ec42f,2018-12-03 16:09:06+00:00,"Add native OVSDB implementation for bridge monitor

This patch implements an OVS bridge monitor based in the OVSDB
native implementation (OVSDB IDL, Open vSwitch Database Interface
Definition Language). This new implementation supersedes the CLI
OVSDB monitor.

Partial-Bug: #1789592

Change-Id: I9c512d4cbd4cebf94c339231f83bbe89b37650ba"
c4061f4a78851bebbe11368d7815b949c10e18ea,2018-12-04 11:28:13+08:00,"[Doc] L3 router gateway IP rate limit

Adds L3 router gateway IP QoS config guide for users.

Partially-Implements blueprint: router-gateway-ip-qos
Closes-Bug: #1757044

Change-Id: Ie5abc1bad47caba8d1fef42c2e5c7c8df6cc9c2b"
0385868848f8c18c8a37fd4c661d1b1a5078e044,2018-12-04 12:21:00+08:00,"Check if agent can reach neutron server

The ovs agent will install some basic drop flows first for the
physical bridge mappings during the init procedure. If message
queue is not connected, or neutron-servers are all down, real
traffic flows will not be refreshed anymore. This will cause
the data plane down if tenant network and provider network are
sharing the physical NICs.

This patch adds a RPC check during init L2 agent. When restart
the ovs-agent, if the MQ is OK and we have available neutron-server,
go next step. Otherwise, a rpc timeout will be raised. L2 agent
will start fail, physical bridge mapping drop flows will not be
installed. The original flows will not be replaced, so the traffic
can still work properly.

Closes-Bug: #1803919
Change-Id: Ie15cf625b3710eaf290d6aafecb3f65df664b9df"
9aa7af82210f1ffb6274399648962b65162e17d1,2018-12-04 16:16:21+08:00,"Fix the bug about DHCP port whose network has multiple subnets.

When a subnet's enable_dhcp attribute is updated, we must restart
dhcp device. So,when we decide whether 'restart' or
'reload_allocations' in refresh_dhcp_helper function we only compare
the cidr of subnets which enabled dhcp.

The previous logic only calls 'restart' when deleting or adding a
subnet. This may cause the dhcp port not updated when the subnet's
enable_dhcp is updated to True.

Change-Id: Ic547946ac786c5fab82b4ee7078bf86483f51eb5
Closes-Bug: #1805824"
87926fddc0442d70d43b2c7e9aac3073d70bc0ce,2018-12-04 19:54:18+00:00,"Implement IpRuleCommand.add() using pyroute2

Change-Id: I0cc6b24a91794eeba46462fac2bfdeda2ba2ab9e
Related-Bug: #1492714"
f999970755571244f1133dc74e43fbbd62ecf380,2018-12-06 10:08:51+00:00,"Add debug information in BridgeCreateEvent

Added extra information (bridge name) when a bridge creation event
is received.

Trivial fix: changed BridgeCreateEvent __init__ argument to ""agent"",
as requested in [1].

[1] https://review.openstack.org/#/c/612153/

Partial-Bug: #1789592

Change-Id: I0bca7e71fb379febfe2131566bb8c1bf8f039183"
6b5466969499de021275c49e3fec2ab45d7fd908,2018-12-07 22:55:37+08:00,"Enable delete bound trunk for linux bridge agent

For agent such as linux bridge which allows creating trunk on
bound port, this patch provides a fix to allow deleting trunk
without unbound port first. And it will help to keep the port
(trunk's parent port) working while deleting the trunk.

Co-Authored-By: Allain Legacy <Allain.legacy@windriver.com>

Closes-Bug: #1794424
Story: 2003889

Change-Id: Iae2ae535bf3ba1548136bf3fe4306a42bad4e635"
1966ad3945a7a44beeefc603f9d6da54ac67f9a3,2018-12-10 09:39:06+00:00,"Check port VNIC type when associating a floating IP

When associating a floating IP to a port and the router is distributed,
the VNIC type of this port must be ""normal"" only. In any other case,
the floating IP can't be assigned. For example, a SR-IOV can have a
floating IP if the router is distributed (the router is in the same
host of the port).

Closes-Bug: #1566951

Change-Id: I4944041df81e24683bc612560808bcdcc2db6bf2"
26a4b3eac05b50a2d27f9968f80a31454df925a2,2018-12-10 14:47:04-05:00,"tox: Reuse envdirs

This massively reduces the amount of time needed to install
dependencies and saves a lot of disk space to boot.

Modeled on Nova change, https://review.openstack.org/#/c/534382/

Change-Id: Icae3b6b2b0d014aec17b04b3b516b13b2fa47c5d"
f24f42237368ae103bdee6a02105ae5b34f3bf69,2018-12-11 19:29:28+00:00,"Support fetching specific db column in OVO

There is a analysis [1] suggested to run queries against specific
columns rather than full ORM entities to optimize the performance.
Right now, it is impossible to execute such optimization because
OVO doesn't support fetching specific column yet.

This commit introduces a new method 'get_values' in the base
neutron object class. Subclass of neutron object can leverage
this method to fetch specific field of a OVO. It supports fetching
non-synthetic fields only as syntheic fields are not directly backed
by corresponding DB table columns.

neutron-lib patch: https://review.openstack.org/#/c/619047/

[1] https://review.openstack.org/#/c/592361/

Needed-By: https://review.openstack.org/#/c/610184/

Change-Id: Ib90eae7738a5d2e4548fe9fed001d6cdaffddf3b
Partial-Implements: blueprint adopt-oslo-versioned-objects-for-db"
bd2a1bc6c3d68ddd27fc0b77ec767b11ec0fcb54,2018-12-12 18:18:31+00:00,"Do not delete trunk bridges if service port attached

When a deployment has instance ports that are neutron trunk ports with
DPDK vhu in vhostuserclient mode, when the instance reboots nova will
delete the ovs port and then recreate when the host comes back from
reboot.  This quick transition change can trigger a race condition that
causes the tbr trunk bridge to be deleted after the port has been
recreated.  See the bug for more details.

This change mitigates the race condition by adding a check for active
service ports within the trunk port deletion function.

Change-Id: I70b9c26990e6902f8888449bfd7483c25e5bff46
Closes-Bug: #1807239"
3995abefb16181594181133b271cdf35fa8d9937,2018-12-13 11:58:35+04:00,"Do state report after setting start_flag on OVS restart

This fixes race condition leading to lack of fdb entries
on agent after OVS restart, if agent managed to handle all ports
before sending state report with start_flag set to True.

Change-Id: I943f8d805630cdfbefff9cff1fb4bce89210618b
Closes-Bug: #1808136"
89ba2416f26fc4255bc1cd9f01d68bf18fe73b95,2018-12-13 09:22:27+00:00,"Table name in ""add_ip_rule"" can be a string

In neutron.agent.linux.ip_lib.add_ip_rule, the ""table"" argument can be
an integer or a string (""default"", ""main"", ""local"").

This parameter is incorrectly treated in ""_make_pyroute2_args"".

Change-Id: I0a50af5fe9b1550700e607eb680bb16e5044e8ef
Closes-Bug: #1807128"
97c98a1c6dac5788690504463a5ca33f4b181d6a,2018-12-13 09:22:39+00:00,"[DVR] Allow multiple subnets per external network

An external network can have more than one subnet. Currently only the
first subnet is added to the FIP namespace routing table. Packets for
FIPs with addresses in other subnets can't pass through the external
port because there is no route for those FIP CIDRs.

This change adds routes for those CIDRs via the external port IP and
interface.

These routes doesn't collide with the existing ones, added to provide
a back path for the packets with a destination IP matching a FIP.

E.g.:
$ ip netns exec fip-e1ec0f98-b593-4514-ae08-f1c5cf1c2788 ip route
  (1) 169.254.106.114/31 dev fpr-3937f879-d  proto kernel  scope link \
      src 169.254.106.115
  (2) 192.168.20.250 via 169.254.106.114 dev fpr-3937f879-d
  (3) 192.168.30.0/24 dev fg-bee060f1-dd  proto kernel  scope link  \
      src 192.168.30.129
  (4) 192.168.20.0/24 via 192.168.30.129 dev fg-bee060f1-dd  scope link

Rule (2) is added when a FIP is assigned. This rule permits ingress
packets going into the router namespace. This FIP belongs to the second
subnet of the external network (note the external port CIDR is not the
same). Rule (4), added by this patch, allows egress packets to exit
the FIP namespace through the external port. Rule (2), because of the
prefix length (32), has more priority than rule (4).

Change-Id: I4d476b47e89fa5709dca2f66ffae72a27d88340a
Closes-Bug: #1805456"
97c9c4656dd208fb34bd300bbcde058cfe9a1944,2018-12-13 09:52:01+00:00,"get_standard_device_mappings for mechdriver

get_mappings for machanism drivers return back different dicts for
different mechanism drivers. By adding get_standard_device_mappings
method SRIOV and OVS mechanism drivers can return a mapping dict in a
form like this one:
{'physnet_name': ['device_or_bridge_1', 'device_or_bridge_2']}

Change-Id: Ieddd9b3a4f3d7269aafc373f040c55b025f5c201
Related-Bug: #1578989"
b75cf8743cb4231c3a9bf9a34a58a083924ccf3b,2018-12-13 11:34:18+00:00,"Mark mysql related functional tests as unstable

Thos tests are failing quite often because of timeouts. Details
are in related bug report.
Lets make our life easier and mark them as unstable until we will
figure out how to fix this issue.

Change-Id: I47743e519c41795bba64e4da041a87bffd947fbd
Related-Bug: #1687027"
063b04de24664f273b4fcb290476c12de850dadf,2018-12-13 22:25:09+09:00,"Add irrelevant-files for grenade-py3 jobs

grenade-py3 job is part of integrated-gate-py35
template now[1]

Adding corresponding irrelevant-files for grenade-py3
also same as for other integrated jobs to avoid
running it on test etc only changes
Example- https://review.openstack.org/#/c/623420/

[1] http://git.openstack.org/cgit/openstack-infra/openstack-zuul-jobs/tree/zuul.d/project-templates.yaml#n1397

Change-Id: Ifc654f56f1a95fc1bbfab08d49b8fcc4534f1694"
20f8271b6b8aa3a8a0bfdf3a0df5fe689ddc5c65,2018-12-13 14:24:23+00:00,"Prevent some L3 ports change IP address

Some L3 ports can directly modify the IP address now,
but there are some types of device_owner, for instance
network:router_centralized_snat, should not allow to
change the IP address, otherwise it will increase L3
agent code complexity.

Since router public gateway port is related to the
external network, and this port can be used for some
service, like VPN. So after this patch we will only
allow the gateway port to update the IP address
directly, aka device_owner network:router_gateway.

The following l3 router ports will not be allowed to
directly update the IP address:
  network:ha_router_replicated_interface
  network:router_centralized_snat
  network:router_ha_interface
  network:router_interface
  network:router_interface_distributed

Remove one unit test case since it will not occur in
neutron.

Change-Id: I2890a71abc82cb781b601afb879bdcca10e39257
Closes-Bug: #1796824"
a02f8a95f752903e7520af286acbaab61a031ece,2018-12-13 15:09:31+00:00,"Pass elevated admin context when fetching snat router for FIP to unbound port

If a floating IP is assigned to an unbound port, it is scheduled to the SNAT router.
This fails when the router is in a different tenant and user is not an admin.
This was previously working, but broken with the changes for enabling
centralized FIP/unbound port.

A common usecase for this when not using a true VIP is a port and Floating IP may be
precreated as a pair, and then attached to a VM.
It works otherwise if the port is already bound to a VM.

Change-Id: I0ee5344216fdff0a9e3bd6fa165f8d0aa736ac85
Closes-Bug: #1802006"
176ce5ce30286171616fc66cdf624d45271db644,2018-12-13 09:20:27-07:00,"shim _resource_extend for neutron-lib

The resource_extend module was rehomed into neutron-lib with commit
https://review.openstack.org/#/c/613431/
This patch shims neutron.db._resource_extend to reference neutron-lib's
implementation allowing consumers to switch over with worrying about
dependency chains. Once all consumers switch over a follow-up patch
will be submitted to remove neutron's _resource_extend module.

NeutronLibImpact

Change-Id: I9ffe91b6dedaf46d679c6a3c4f465f2bfd66e32d"
489dd1853082b797809de8ad7ead8b0bf3fd7364,2018-12-14 19:27:41+00:00,"Implement IpRuleCommand.delete() using pyroute2

Related-Bug: #1492714

Change-Id: Ia9f192541f7b9994c3dae93f3f3ae96f1a4fba0c"
a5ab91527944416de95b11ca0a7e377a8334f8f6,2018-12-15 20:02:06+09:00,"Drop 3rd-party plugin specific policies

I confirmed the corresponding policies are already included in
policy.json files in vmware-nsx and networking-cisco repos.
Thus we can safely drop them from the neutron repo.

The following list shows the corresponding policies in their repos.

[networking-cisco]
neutron/conf/policies/cisco_plugin.py
https://github.com/openstack/networking-cisco/blob/aa58a30aec25b86f9aa5952b0863045975debfa9/etc/policy.json#L168-L175

[vmware-nsx]
neutron/conf/policies/vmware_plugin.py ->
qos_queue: https://github.com/openstack/vmware-nsx/blob/46bcd38717a785a74bce36a4250fb14f8de7cd4b/etc/policy.json#L64-L65
lsn: https://github.com/openstack/vmware-nsx/blob/46bcd38717a785a74bce36a4250fb14f8de7cd4b/etc/policy.json#L106-L107

get_network:queue_id in neutron/conf/policies/network.py ->
https://github.com/openstack/vmware-nsx/blob/46bcd38717a785a74bce36a4250fb14f8de7cd4b/etc/policy.json#L25

get_port:queue_id in neutron/conf/policies/port.py ->
https://github.com/openstack/vmware-nsx/blob/46bcd38717a785a74bce36a4250fb14f8de7cd4b/etc/policy.json#L50

create_port:mac_learning_enabled/update_port:mac_learning_enabled in neutron/conf/policies/port.py ->
https://github.com/openstack/vmware-nsx/blob/46bcd38717a785a74bce36a4250fb14f8de7cd4b/etc/policy.json#L47
https://github.com/openstack/vmware-nsx/blob/46bcd38717a785a74bce36a4250fb14f8de7cd4b/etc/policy.json#L60

Partially Implements: blueprint neutron-policy-in-code
Change-Id: I7a34291cb7abbe288e7dda329b2d1ef2c3e7890f"
ef5342886eed1ab560c22c4194dff2e742fd3d2e,2018-12-17 09:21:23+00:00,"Revert ""Make neutron-tempest-iptable_hybrid job non-voting""

Proper fix in os-vif [1] is already merged and released in
os-vif 1.13.1 so we should be good now.

[1] https://review.openstack.org/#/c/624831/

This reverts commit 462b510c50081464c23d837b6b8d5ad8a1405331.

Change-Id: I3afdeaa7463d05e5cbd2d593715b1e2f25749586"
0a4d2ee87721da4472099c1043c0146a9e02ee6d,2018-12-17 12:20:48+01:00,"Fix mysql functional migration tests

In patch [1] I marked all MySQL related migration tests
as unstable but I made mistake with calling super() method in
tests from TestModelsMigrationsMysql class.
This wasn't catched as tests were skipped instead of fail.

This patch fixes that, so tests can be run properly and be skipped
only if ""real"" issue with timeout will happen.

[1] https://review.openstack.org/#/c/624685/

Change-Id: Id42d6d8e24fdea5ac83f0fecc6975c19b933a501
Related-Bug: #1687027"
f2192f12262f79a8a4f604436a8afcb2e5fae4e0,2018-12-17 12:47:48+01:00,"Add logging for functional tests

In patch [1] I changed most of functional tests classes to
inherit from neutron.tests.functional.base.BaseLoggingTestCase
class to enable logging of results for such tests.
I missed two classes then, so this patch fixes it and adds
inherit from same base class to tests which still didn't have
logging enabled.

[1] https://review.openstack.org/#/c/619266/

Change-Id: I9afbe241ee26c8cdc807d2f4fa1c285ff1f07d60"
05a54e800430bcfc81e36e1dad89fa47f3e8a6f0,2018-12-17 13:11:49+00:00,"Implement IpAddrCommand.get_devices_with_ip using pyroute2

Related-Bug: #1492714

Change-Id: If7292c33dd0716a0a412bf60658123d2e688dfdb"
e78f82e64fbdc1feac6aaccb108aa5100b0f49ed,2018-12-18 10:18:40+01:00,"Fill port-resource-request

port-resource-request is an admin-only, read-only attribute for neutron
ports. The content of this field is filled from the QoS minimum
bandwidth rule attached to the port.

Change-Id: Ic9862a1b5e24eb798d67823ac3bacab9e54420d8
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
7197079a3f632cc4b7d7cc27b4aab35da8ba4b3f,2018-12-18 14:50:21+01:00,"doc: Add NICs known to support ovs offload

Add cards to the known-to-work list as requested in a bug report.

Change-Id: I2dc1c36df5610d8927c3de3675fb186f5ea2e462
Closes-Bug: #1807421"
30ba87e5e0edaf0791e302d53d959209a71818e6,2018-12-20 12:45:49+00:00,"Revert ""Log alembic migration script's output with oslo_log""

This reverts commit dffcf4b54a29e64a026bcda9795b57953388019c.

Prior to this patch, output to stdout would look as follows:

INFO  [alembic.runtime.migration] Context impl MySQLImpl.
INFO  [alembic.runtime.migration] Will assume non-transactional DDL.
INFO  [alembic.runtime.migration] Context impl MySQLImpl.
INFO  [alembic.runtime.migration] Will assume non-transactional DDL.
  Need to apply migrations from neutron contract branch. This will require all Neutron server instances to be shutdown before
  proceeding with the upgrade.

However, with this patch, now only the following shows up:

INFO  [alembic.runtime.migration] Context impl MySQLImpl.
INFO  [alembic.runtime.migration] Will assume non-transactional DDL.
INFO  [alembic.runtime.migration] Context impl MySQLImpl.
INFO  [alembic.runtime.migration] Will assume non-transactional DDL.

The message to notify the deployer to run migrations does not appear to be
present in any log files either.

The message and return code are used by deployment projects to determine
whether migrations must be run, for example:

https://github.com/openstack/openstack-ansible-os_neutron/blob/e34b27e5ae6405bf587ea01b70e63bac4b9efb10/tasks/neutron_db_setup.yml#L59-L69

Change-Id: I9c9959d4e8407cdc5f7a24a76a222b2bdfc87d4b"
ae4b331725012c7694132d17e28312159aedb1f3,2018-12-21 16:36:18+00:00,"fullstack: retry on updating port's IP address

If the update_port call failed with error IpAddressAlreadyAllocatedClient,
retry a few more times in order to find IP addresses that are available.

Change-Id: I7c5d51b01fa56083b1a689fa629a9a34c8b77012
Closes-Bug: #1808595"
760eedf7f75a7924b3fe43b6c274fa12a22dbc7d,2018-12-21 23:03:24+01:00,"Use oslo_log instead of alembic.util in functional tests

Instead of using alembic.utils logging functions which
prints output to stdout, lets use in functional tests
oslo_log logger to log all such commands.

This is needed to limit amount of output on stdout during
functional tests running on python3.5.

It was previously switched to use oslo_log in this migration
scripts always by [1] but because of issue in OSA we had to
revert this patch in [2].
So now let's try to change it only in functional tests.

[1] https://review.openstack.org/#/c/625555/
[2] https://review.openstack.org/#/c/626565/

Change-Id: I88fde6d107a1f1b5c48c5c89cd2e1c07fd12c755"
e83e5618b7ca71fb96bf460922480b9808b431b6,2018-12-24 07:52:50+00:00,"Don't modify global variables in unit tests

The unit test
test_enable_dhcp_helper_enable_metadata_nonisolated_dist_network
modifies the global variables fake_port1, fake_port2, creating flakiness
on unit tests that use those variables when execured in environments
with high concurrency.

Creating a deepcopy of the variable avoid that those changes can be
propagated to other unit tests.

Closes-Bug: #1809643

Change-Id: Idfd0e99739952baf4d7b545b406cd1b251deb5f8
Signed-off-by: aojeagarcia <aojeagarcia@suse.com>"
41fe4e9629a7f34880934fe3ef5d836bba435cdf,2019-01-02 16:40:55+01:00,"Use ADMIN_ONLY constant in policy rules

It is follow up patch for [1] to use constant RULE_ADMIN_ONLY
in neutron.conf.policies.port module.

TrivialFix

[1] https://review.openstack.org/#/c/590363/

Change-Id: Ic97c61c2d9cff5a96cfed6e4df33161fae0b75a4"
76c28812013c558041612609efe30b88a5226267,2019-01-03 12:40:26+08:00,"Make test service_plugins override simple

Just make things simple and give a chance to accept that
ordered 'service_plugins' list or tuple for the base test
class NeutronDbPluginV2TestCase.

Change-Id: I7c352ede811703e3a96848378b92cbbf5e109228
Related-Bug: #1809238"
433228dd78098ca84a13c75b9dc5ce40f43c7f9d,2019-01-03 12:41:55+08:00,"Prevent bind fip to port has port forwarding

If one port has port forwarding and the port is under
a dvr router, then binding floating IP to this port
will not be allowed.

Change-Id: Ia014e18264b43cf751a5bc0e82bc55d106582620
Closes-Bug: #1799138"
1f3e5f91f660b527013c0233d5cd20484edb72f7,2019-01-03 11:36:52+01:00,"neutron-tempest-iptables_hybrid job inherits from tempest-full-py3

Job neutron-tempest-iptables_hybrid was previously converted to
zuulv3 syntax but it inherited from devstack-tempest job.
It's better to inherit from proper job which already have configured
good ""tox_envlist"" and version of python which should be used.

Change-Id: I686386c48fabebb77813c4284f234f2ee3cb4024
Related-Bug: #1804844"
ecfbc141480c41d1579b1d7fb205c55de2c6e9d6,2019-01-03 14:27:33+01:00,"port-resource-request policy rule to constant

Change-Id: I14a0b7615b0cda890d5f9a31945de4162737c6aa
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
7ae764eff9fd4490b5b4e4d215e6bd647e3cd76a,2019-01-04 08:28:51+00:00,"Migrate neutron-tempest-dvr job to zuulv3 and python 3

Related-bug: #1804844

Change-Id: I34ec9081ac87aed26abc09bcfa06d4fd2d6aaff8"
bc29d4843d5d4a69c2b5e92475a805d218a9c55e,2019-01-07 15:46:52+09:00,"Revert ""Remove -u root as mysql is executed with root user""

This commit was approved just to keep the consistency with
other OpenStack projects, but most proposed changes related to it
have been rejected so far [1].
The main reason is because it is clearer to specify options explicitly
and we should not assume some configuration.

I totally agree these opinions and see no reason that neutron
contineus to use different command line options for mysql.
Consistency in the installation guide will bring better user experience.

[1] https://review.openstack.org/#/q/file:%255Edoc/source/install/.*+message:mysql

This reverts commit 59d178c9de6028016053f2a6958372e14ded386a.

Related-Bug: #1785025
Change-Id: I699d03de9e26d5784e6bd5e7d4fa219de6209207"
b545c06bcee238231e018c00bb0967bf98f0976f,2019-01-09 15:30:34+01:00,"Rename ironic job

Change the name of the job to match the change for zuulv3
Depends-On: https://review.openstack.org/#/c/629173/

Change-Id: I6ee36b6fe0eb8043dc22a6906066a2611f7d7c74"
284afcf24f2dfd3af20a803ada79c69205249f25,2019-01-16 22:45:40+01:00,"Lock privileged.agent.linux.ip_lib functions

It is workaround of bug in pyroute2 library which, when
running in multithread environment, sometimes have issues
with NetNS class.
When NetNS.__init__() is called, it uses os.pipe() function to
create 2 file descriptors which are used to communicated between
2 processes.
In some cases when multiple threads are running it might happen
that in two instances of NetNS() class there will be same file
descriptors used and that leads to problems when one thread
closes file descriptor and second still wants to use it.

With this patch functions which uses instance of pyroute2.NetNS class
are locked thus there shouldn't be risk of using same file descriptors
in 2 separate threads.

Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>

Change-Id: Id5e6f2f8e9c31a7138da9cd6792e9d75845b81c5
Closes-Bug: #1811515"
eacdf1f18fbd819ba737b11309f48278092a8798,2019-01-17 20:07:33+00:00,"Migrate neutron-tempest-linuxbridge job to zuulv3 and python 3

Related-bug: #1804844

Change-Id: I800aa23d2dd176db512fb1539639301b87279ae4"
65a2f86aafa7637ec07aa0a313ea0fae39758608,2019-01-17 20:30:35+00:00,"Gracefully handle fetch network fail in qos extend port

When the qos plugin is handling a port resource request through it's
port resource request extension, sometimes the network a port is
attached to is looked up and returns None. It may happen like that
if network will be deleted in concurrent API request.

Change-Id: Ide4acdf4c373713968f9d43274fb0c7550283c11
Closes-Bug: #1810504"
4bb78e8c215d24cd2fc9168e7bfbb47ceb89de3e,2019-01-17 20:33:35+00:00,"Fix l3-agent usage of L3AgentExtension class

The L3AgentExtension class delete_router() method expects a
dict as it's 'data' argument, but the l3-agent code that
deletes a router was passing just the router ID.  Change to
correctly pass a router dictionary if one exists.

Change-Id: I112d1f8dce9defddfbd8fbfa75bf538e308e1561
Closes-bug: #1809134"
ffbf65126fcd25ca242e5512b6e30cb7a1b4ef37,2019-01-17 21:04:35+00:00,"protect DHCP agent cache out of sync

If DHCP agent port cache is out of sync with neutron server, dnsmasq
entries are wrong and VMs may not acquire an IP because of duplicate
entries.

When DHCP agent executes port_create_end method, port's
IP should be checked before being used, if there are duplicate IP
addresses in the same network in the cache we should resync.

Co-Authored-By: doreilly@suse.com
Closes-Bug: #1645835

Change-Id: Icc555050283420fddfb90bb67e02bc303e989e27"
f8e0a497ad6a36fa0d9510cda9e7344c2ed73763,2019-01-17 21:30:55+00:00,"Skip ovsdb_monitor events for ports with ofport=-1

There is no need to trigger neutron-openvswitch-agent to
start processing ports in case if invalid port (with
ofport=-1) will be added to bridge.
Such port will be processed later when ofport will be
changed.

Change-Id: I3465daf4809d5d56565f59b177b5f8870352cc9d
Related-Bug: #1808171
Related-Bug: #1811405"
58de79a58bfeda46c6ab7fcaa765b8a557652874,2019-01-18 02:24:56+00:00,"Clear residual qos rules after l2-agent restarts.

During the l2-agent stop, if the policy rule is cleared,
after the l2-agent is started, the qos rule that has been applied should be cleared.

Change-Id: Iaaff10dfa8ac6ab8c9dead3124e2bb3caa03a665
Closes-Bug: #1810025"
f1592c42d9649e8da952021aa1f6e7a4a127cd48,2019-01-18 09:55:31+00:00,"Add a new configuration parameter rpc_response_max_timeout

A new parameter rpc_response_max_timeout is added and registered into
neutron.conf.

The rpc_response_max_timeout plays a role of the ceiling of timeout
seconds when waiting for the response of a remote rpc server.

During an RPC call, the waiting time starts from the existing parameter
rpc_response_timeout(default 60s) and doubled each time until it reaches
the ceiling which is currently set as 10 times rpc_response_timeout.
It seems to be less flexible since user cannot directly change the
ceiling value unless he/she changes the rpc_response_timeout.
By adding rpc_response_max_timeout, user can now modify it without
changing any other parameters.

Co-Authored-By: Allain Legacy<Allain.legacy@windriver.com>

Change-Id: I170113c2946cc95308edcb1a703a99c71e50b6f9
Related-Bug: #1805769
Story: 2004456
Task: 28171"
f1fa9529ee6753e2a3f47e4a6eb0286118520d25,2019-01-20 10:02:07+00:00,"Revert ""Skip ovsdb_monitor events for ports with ofport=-1""

This patch cause some race condition in neutron-ovs-agent
and tempest-slow job was failing quite often.
Please see related bug report for details.

Closes-Bug: #1812552

This reverts commit f8e0a497ad6a36fa0d9510cda9e7344c2ed73763.

Change-Id: Id51f2abaf3c8d57abdd06f024120da526ed40185"
e788d294584add2407f601a46f90b08082cccc5f,2019-01-20 20:25:10+00:00,"Support iproute2 4.15 in l3_tc_lib

In version 4.15 of iproute2 there was added support
for chain index in tc_filter [1].
Such version is available e.g. in Ubuntu 18.04 and it
has to be supported in l3_tc_lib regex to match
properly output of ""tc filter"" command.

[1] https://lwn.net/Articles/745643/

Closes-bug: #1809497
Change-Id: Id4066b5cff933ccd0dd3c751bf67b5d58af662d1"
534e85039271d91647173527cd4c4905b9532537,2019-01-22 09:42:51+01:00,"Add lock_path in installation guide

Oslo_concurrency needs lock_path option, make it consistent in
documentation for Suse, Redhat and Ubuntu installation guides.

Change-Id: Ib675d7bf399f2aa7eba9d343fa0f06281d33089a
Related-Bug: #1796976
Closes-Bug: #1812497"
26eb2509fea632e67ffabcc15195cc13ee02bf68,2019-01-24 08:39:23+00:00,"Always fill UDP checksums in DHCPv6 replies

Bug #1244589 re-appeared for IPv6.

This change adds an ip6tables rule to fix the checksum of DHCPv6
response packets. Those checksums were left unfilled by virtio (as a
hypervisor internal optimization), but some picky dhcp clients (AFAIU
particularly ISC dhclient) try verifying the checksums, so they fail
to acquire an address if the checksums are left incorrect.

Change-Id: I4a045e0dcfcbd3c7959a78f1460d5bf7da0252ff
Closes-Bug: #1811639
Related-Bug: #1244589"
85e1b1b0dc2fd2f383fe92a1c636e4bc28e55462,2019-01-24 08:41:38+00:00,"Correct arguments to nfct_open

While working on this module, I noticed a couple of inconsistencies
in how we were calling nfct. Specifically, the NFNL_SUBSYS_CTNETLINK
value is supposed to be 1[1], and the order of arguments to nfct_open
is subsys_id then subscriptions[2]. We were passing them in the
opposite order, which didn't particularly matter because both were
defined to be 0. Now that the subsystem identifier is correctly
defined it does matter though.

Change-Id: I9fb74a9ef7a83cd630afa1e1ea0e2fc0c6df3943
1: https://git.netfilter.org/libnfnetlink/tree/include/libnfnetlink/linux_nfnetlink.h#n45
2: https://git.netfilter.org/libnetfilter_conntrack/tree/src/main.c#n68"
63ea9d7bcc57e64b136f56a7e5ba015a5b4ee3bb,2019-01-24 08:46:32+00:00,"Set lower addr to avoid IP out of range

Since port creating can result an IP address in the
entire CIDR especially small subnet. And those next
N IP actions can be out of subnet IP range. This
patch gives the original test port a specific IP
addr to prevent this issue.

Closes-Bug: #1812404
Change-Id: I34cb99a518d4469c7d1ca9e2897671608b2b81ad"
4d45699f155a6aa5732c27b572d3288963638ee3,2019-01-24 23:58:56+08:00,"Not set fip to ERROR if it exists on device

The centralized floating IP can exist on the router device
due to some reasons like: uncleaned fip addr, and especially
multiple IP addr adding action: HA router _add_vip() and
Edge router add_ip_address().
This patch catches the IpAddressAlreadyExists error if fip
was already set on the device, and still process next step.

Change-Id: I324f6b96baa0520a0f7ef62a83d81864d7b27999
Closes-Bug: #1811213"
379a9faf6206039903555ce7e3fc4221e5f06a7a,2019-01-24 16:35:50+00:00,"Change duplicate OVS bridge datapath-ids

The native OVS/ofctl controllers talk to the bridges using a
datapath-id, instead of the bridge name. The datapath ID is
auto-generated based on the MAC address of the bridge's NIC.
In the case where bridges are on VLAN interfaces, they would
have the same MACs, therefore the same datapath-id, causing
flows for one physical bridge to be programmed on each other.

The datapath-id is a 64-bit field, with lower 48 bits being
the MAC. We set the upper 12 unused bits to identify each
unique physical bridge

This could also be fixed manually using ovs-vsctl set, but
it might be beneficial to automate this in the code.

ovs-vsctl set bridge <mybr> other-config:datapath-id=<datapathid>

You can change this yourself using above command.

You can view/verify current datapath-id via

ovs-vsctl get Bridge br-vlan datapath-id
""00006ea5a4b38a4a""

(please note that other-config is needed in the set, but not get)

Closes-Bug: #1697243
Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>

Change-Id: I575ddf0a66e2cfe745af3874728809cf54e37745"
4747de23d80ab32eea073846221adf94987f755b,2019-01-24 17:14:46+00:00,"Remove IPv6 addresses in dnsmasq leases file

IPv6 address format in dnsmasq leases file is incorrect (correct format
is described in bug description). This bad formatting generates the
following error when initializing dnsmasq:
  dnsmasq[20603]: failed to parse lease database, invalid line: \
    1547121093 fa:16:3e:a0:3a:9a [fd5b:1fd5:8295:5339::43] * ...

This patch removes the IPv6 addresses from the leases file, as proposed
in the bug, because the DHCP agent does not have the IAID (identity
association identifier) of each IPv6 address assigned.

In case of agent restart, dnsmasq won't have any IPv6 address in the
leases file, but the hosts file and the additional hosts file will
contain all MAC/IPv6 previous assignations. When the IPv6 client sends
a DHCPDISCOVER, dnsmasq will offer the same IPv6 address to this client.
At the same time, the client will request to the server the same address:
  DHCPDISCOVER(tap2c14823a-e6) fa:16:3e:54:c6:8e
  DHCPOFFER(tap2c14823a-e6) fd5b:1fd5:8295:5339::43 fa:16:3e:54:c6:8e
  DHCPREQUEST(tap2c14823a-e6) fd5b:1fd5:8295:5339::43 fa:16:3e:54:c6:8e
  DHCPACK(tap2c14823a-e6) fd5b:1fd5:8295:5339::43 fa:16:3e:54:c6:8e \
    host-fd5b-1fd5-8295-5339--43

Once dnsmasq updates the leases database, rewrites the leases file with the
new IPv6 address (including the IAID) and the server DUID (if not present).

Change-Id: Ib1b2f284ab81f1c4af7b08b5257b45a3f6e79c3e
Closes-Bug: #1722126"
4cbaa060316441b1d3dae58c6d0928789037213b,2019-01-25 10:50:43+08:00,"Add test cases: invalidate CIDR

Add the invalid CIDR for verifing the modified
method is valid.

Co-Authored-By: Allain Legacy <Allain.legacy@windriver.com>

Depends-On: https://review.openstack.org/623415/
Change-Id: I0f051130e4708682104bd935b23991b534fc99d2
Related-Bug: #1805991
Story: 2004567"
d50997dadb77056d38b7395deab324d9d9856c46,2019-01-25 08:47:34+00:00,"Use renamed template 'integrated-gate-py3'

'integrated-gate-py35' template is going to be
renamed to 'integrated-gate-py3' in https://review.openstack.org/#/c/626078/

Integrated jobs are running on Bionic now where python 3.6 is available.
Which means gate jobs in 'integrated-gate-py35' template are
running on python 3.6 not on 3.5 which makes this template name confusing.

depends on commit rename the 'integrated-gate-py35' to 'integrated-gate-py3'
so that it can convey that template will use available python 3 version
in used distro. For example: 3.5 in xenial and 3.6 in bionic and so on.

This commit starts using the new template name so that old
template name can be removed.

Depends-On: https://review.openstack.org/#/c/626078/
Change-Id: Id14b1f46a6d98e284d97149287245dd59ca198c4"
529f645883046aac5b0fd7e1b1851dc7f70ae93f,2019-01-25 20:00:14+09:00,"Delete virtual interface ""ovs-system"" before load openvswitch module

When openvswitch module is loaded by modprobe in [1], if  virtual
interface ""ovs-system"" exists, it causes the error "" modprobe:
FATAL: Module openvswitch is in use.""

This patch will check ""ovs-system"" exists or not, then delete it
before load openvswitch module.

[1] https://github.com/openstack/neutron/blob/master/devstack/lib/ovs#L92

Change-Id: I750bd74d1d07a73b57924b84f3d8506e6063936c"
72cf434b1661e00c36802a89aa0b01542ff7d419,2019-01-25 08:52:33-07:00,"shim remaining common exceptions

The remainder of the neutron.common.exceptions were rehomed into
neutron-lib with [1]. This patch shims them in neutron to reference
those in neutron-lib thereby allowing consumers to move over to them
at their leisure. Once everyone is over to lib's version of the
exceptions we can remove them from neutron.

[1] https://review.openstack.org/#/c/628004/

Change-Id: I6af654a9854fb09353e7aa48b96a533490da6e96"
e7a2b6d1793cd08c30b78693a4f419ab3955a437,2019-01-25 17:50:24+00:00,"Add IPWrapper.get_devices_info using PyRoute2

This function returns the attributes of a list of devices.

Change-Id: I322fc7db9c71e7c21fd03d616937d172da856428
Related-Bug: #1804274"
99f4495c940011293e3cabbb590770dc1e7b6900,2019-01-28 07:26:45+00:00,"Improve port dhcp Provisioning

Currently, the dhcp Provisioning of ports is the crucial bottleneck
of that concurrently boot multiple VM.

The root cause is that these ports will be processed one by one by dhcp
agent when they belong to the same network, And the 'Provisioning complete'
port is still blocked other port's processing in other dhcp agents. The
patch aim to optimize the dispatch strategy of the port cast to agent to
improve the Provisioning process.

In server side, I classify messages to multi levels. Especially, I classify
the port_update_end or port_create_end message to two levels, the high-level
message only cast to one agent, the low-level message cast to all agent. In
agent side I put these messages to `resource_processing_queue`, with the queue,
We can delete `_net_lock` and process these messages in order of priority.

Additonally, I modified the `resource_processing_queue` for my demand. I update
`_queue` from LIST to PriorityQueue in `ExclusiveResourceProcessor`, by this
way, we can sort all message which cached in `ExclusiveResourceProcessor` by
priority.

Related-Bug: #1760047
Change-Id: I255caa0571c42fb012fe882259ef181070beccef"
b0d758e1b4af9aed8c2da6e0bac4723d8e4f5443,2019-01-29 22:31:17+00:00,"Fix port update deferred IP allocation with host_id + new MAC

IP allocation was initially deffered due to lack of binding
information. On port update the with both `mac_address` and
`binding_host_id`` in the request 'fixed_ips: []' was
appended to the new_port data. This caused the check for
fixed_ips_requested to return True, which in turn cause
deferred_ip_allocation to evaluates False.

Only set the new_port default fixed_ips to original_ips if
the original port had fixed_ips.

Closes-Bug: #1811905
Change-Id: If98a82f8432b09a29f9d0cc6627e9649b43bc4a1"
e108ac6bdf80f646d1663ad7dd063e6988c111d3,2019-01-30 14:04:00+00:00,"Add port forwarding floating IP QoS

Port forwarding floating IPs QoS should be limited under
the binding QoS policy. So this patch extends the l3-agent
fip-qos agent extension floating IP list with the port
forwarding related IPs.

Change-Id: Iddabfabafc0803edd1e4ac0893dc188f1907234a
Closes-Bug: #1796925"
6124f6029729c3c800287f3f02329901d93ea021,2019-01-30 14:17:43+00:00,"Switch isolated metadata proxy to bind to 169.254.169.254

Currently the metadata proxy binds to default 0.0.0.0, which does not
add any advantage (metadata requests are not sent to random IP
addresses), and may allow access to cloud information from
third parties.

This changes the generated configuration to bind to METADATA_DEFAULT_IP
address instead.

This is not enabled in other metadata proxy configuration (in the L3
agent), as this would require net.ipv4.ip_nonlocal_bind everywhere
(currently only enabled for DVR) or transparent mode in haproxy (which
requires net.ipv4.ip_nonlocal_bind anyway)

Changed set_ip_nonlocal_bind_for_namespace() to support setting the
value in both the given and root namespace correctly, since it was
only used from inside the neutron codebase according to codesearch.

Change-Id: I388391cf697dade1a163d15ab568b33134f7b2d9
Co-Authored-By: Andrey Arapov <andrey.arapov@nixaid.com>
Closes-Bug: #1745618"
aa71530aaad3e4c9a7fa2e0c5aa3bff1490172db,2019-01-30 18:31:39+00:00,"Add VLAN and VXLAN link information in get_devices_info

Added VLAN parent device name and index and VXLAN link device
name and index.

Change-Id: Ib44a63c0648a7b5b07b1021b10e8994002031ce8
Related-Bug: #1804274"
f2111e035424bf714099966ad724e9a4bd604c18,2019-01-30 18:24:06-05:00,"Do not release DHCP lease when no client ID is set on port

The DHCP agent has a really strict enforcement of client ID, which
is part of the DHCP extra options. If a VM advertises a client ID,
DHCP agent will automatically release it's lease whenever *any* other
port is updated/deleted, even if no client ID is set on the port,
because it thinks the client ID has changed.

When reload_allocations() is called, the DHCP agent parses the leases
and hosts files, and gets the list of all the ports in the network from the
DB, computing 3 different sets. The set from the leases file (v4_leases)
could have a client ID, but the set from the port DB and hosts file will
have None.

As a result, the set subtraction does not filter out the entry,
and all ports that have an active lease with a client ID are released.

The Client ID should only be enforced and leases released
if it's actually set in the port DB's DHCP extra Opts.
In that case it means someone knows what they are doing,
and we want to check for a mismatch. If the client ID on a port is
empty, it should not be treated like an unused lease.

We can't expect end users that just create VMs with auto created ports
to know/care about DHCP client IDs, then manually update ports or
change app templates.

In some cases, like Windows VMs, the client ID is advertised as the MAC by default.
In fact, there is a Windows bug which prevents you from even turning this off:
https://support.microsoft.com/en-us/help/3004537/dhcp-client-always-includes-option-61-in-the-dhcp-request-in-windows-8

Linux VMs don't have this on by default, but it may be enabled
in some templates unknown to users.

Change-Id: I8021f740bd78e654915337bd3287b45b2c422e95
Closes-Bug: #1806770"
4fb8b3fe4e234472b0b0fd6e141eb4035cb0f577,2019-01-31 18:00:15+00:00,"Retrieve the device info in trunk_plumber using pyroute2

IPWrapper.get_devices_info(), implemented using pyroute2, retrieves the
device information including the VLAN tag and the parent name and index.

This patch replaces Plumber._get_vlan_children() shell 'ip' commands in
favor of this method.

Change-Id: Ib5cad35d5261ab9391f82a22440338d852894a1d
Closes-Bug: #1804274"
d471a85931d6f6495efdb8ff43bf903e3e1d639d,2019-02-01 11:04:56+01:00,"Ensure dnsmasq is down before enabling it in restart method

Dnsmasq driver used by dhcp agent has restart() method which is
calling disable() and then enable() dnsmasq process again.
What can be observed in functional tests from time to time it may
happen that start dnsmasq process will be called before old process
is really down. That leads to error that IP address to which
dnsmasq wants to bind is already in use and it fails to start.

This patch adds possibility to call disable() method with block flag
set to True. In such case driver will ensure in disable() method that
process is really not active.
This blocking disable() is used in restart() method now.

Change-Id: I419a451633badbc3d32edcee1945fca3e3d9f6be
Closes-Bug: #1811126"
98ef2ac8d6e75c56512d11377e3b9f9cadf7fe53,2019-02-04 01:21:48+00:00,"Add some create subnet negative tests

There were some edge cases that were untested that generate
500 errors instead of 401's.

Will need a neutron-lib version with
https://review.openstack.org/#/c/623498/ in order to pass.

Change-Id: I925476bc2515a1755364d92ab8d622d747a4a0fb
Related-bug: #1807394"
414bdd4c5997886c97d0e3a0b19c684dafeabb7a,2019-02-04 06:27:21+01:00,"Don't specify exactly IP in portforwarding functional test

In Port Forwarding functional tests, port is created in setUp()
method. This port had specified exactly IP address and subnet to use.
This was proposed in [1] to fix issue when new port created in same
subnet got sometimes IP address outside of subnet range.
Unfortunatelly that fix was not enough and caused other issues
as sometimes this ""fixed"" IP address used for port might be
used e.g. by router_interface port and that caused sometimes
""409 conflict"" response from Neutron sometimes.

This patch adds additional method in
neutron.tests.unit.db.test_db_base_plugin_v2 module to find first
free IP address from given subnet.
This method is now used in port forwarding tests module to choose
IP address for second created port in the subnet so there should be
no conflicts with IP addresses anymore.

[1] https://review.openstack.org/#/c/631815

Change-Id: Iee2f72acf6814a0f8f76d240862429a8b63c3b09
Closes-bug: #1813540"
8f20963c5b9e6762b6322f686bce99871bec6be9,2019-02-04 18:05:39+04:00,"OVS agent: always send start flag during initial sync

In order to avoid inaccurate agent_boot_time setting,
this patch suggests to consider agent as ""started"" only
after completion of initial sync with server.

Change-Id: Icba05288889219e8a606c3809efd88b2c234bef3
Closes-Bug: #1799178"
7fdd6adc7acf99e74fbe1c12606f8c867ae134ae,2019-02-05 21:36:05+01:00,"DHCP: fix default dns search name

If no override for dns_domain has been added by the user on the
tentant network, the default dns_domain should be used. Prior to
this fix, dns_domain got set to '' instead.

Closes-bug: #1774710
Change-Id: If206b943703eb638f7b22e59791ed8876f46f556"
1746d7e0e682eab1001bfc434b73efb1cdf5f0f4,2019-02-06 20:18:10+08:00,"Update the processing of assigned addresses when assigning addresses

1.It is best not to use 'netaddr.IPSet.add',
  because _compact_single_network in 'IPSet.add' is quite time consuming

2.When the current address pool does not have enough addresses,
  all addresses are allocated from the current pool,
  and allocations are continued from the next address pool
  until all addresses are assigned.

Change-Id: I804a95fdaa3552c785e85ffab7b8ac849c634a87
Closes-Bug: #1813253"
d7cefa56e483e87ae4a46ebbf75dd759d919620c,2019-02-07 11:12:35+00:00,"Implement add_tc_qdisc and list_tc_qdiscs using pyroute2

TcCommand.set_tbf_bw_limit() is used now to set and replace a TC TBF
filter.

Related-Bug: #1560963

Change-Id: I162dea499d16db76692dd3d6d99b6be45f44ae59"
21cddc47b446fdfb5535b347c1d7825a04e02c62,2019-02-07 15:49:59+01:00,"Fix update of ports cache in router_info class

RouterInfo class has got internal_ports cache which is updated
in _process_internal_ports() method.
There was an issue in this updates logic because it was
iterating through enumerate local variable ""internal_ports""
which represents current router ports and if such current port
was found in updated_ports list it was storred in
RouterInfo().internal_ports variable under same index as was
found in ""internal_ports"" local variable.
This sometimes leads to an issue because same port can be
stored under different index in internal_ports and
RouterInfo().internal_ports lists thus wrong port in
RouterInfo().internal_ports was overwritten.

Such issue leads to problem with generating radvd config file
because in ports cache list there was duplicate info about same port
so radvd config file contained duplicate interface definitions too.

This should be properly fixed by changing RouterInfo.internal_ports
to be a dict instead of list of ports but such patch would be much
bigger and (possibly) harded to backport to stable branches.

Change-Id: I2e38457942518c8a3e07e606091bb6720317b77e
Closes-Bug: #1813279"
6f927cc11970b683305c96412d248e63cc15c12b,2019-02-08 02:57:27+00:00,"Clear old rules that have been applied before applying new rules.

To prevent data from being out of sync in the following situations:
1. Create a policy with two rules bound to the virtual machine
2. Stop l2-agent
3. Delete/change/clear policy rule
4. Start l2-agent (the rule is still there, out-of-sync)

Change-Id: I194c918d859172c31ae5ce1af925fdbb388f9cfb
Closes-Bug: #1812576"
ade38e4034f35c036817acc664a7aaa77de957d1,2019-02-08 09:40:39-07:00,"remove string use of neutron.common.rpc

We already removed the rpc module from neutron [1], but we missed a
string reference to it in the hacking tests. This cosmetic change
uses neutron/common/util.py rather than rpc.py that's now removed.

[1] https://review.openstack.org/#/c/634790/

Change-Id: Ib432205525eeb3f5e3e64b56fef0f153d119bb95"
d8e8fe7db583d0a32b795c8be5ddfea1dc9ee97d,2019-02-12 08:29:30-05:00,"Improve invalid port ranges error message

Improve error message that is shown when
port ranges are specified for protocols that don't
support port ranges.

Change-Id: I70ad9bd01f986efaed6682928cc5579c75bd4f6e
Closes-Bug: #1815478
Signed-off-by: Andreas Karis <akaris@redhat.com>"
031a6e52468b1f31ee30f8b264a54d7486e85641,2019-02-13 09:30:20+01:00,"rally-jobs: Add FloatingIP workloads: assoc/dissoc

As discussed on the neutron-performance meeting [1] floating IP operations
should be covered in the neutron gate rally job. As I set out to write
the missing tests I discovered that some of them were already written
by rally folks. For example see [2]. Keep in mind the test code has been
relocated since to the rally-openstack repository. For example see [3].
They were later added to neutron's rally job definition [4].

Here we add a one more scenario to exercise the floating IP operations
left uncovered by the above changes: associate and dissociate.

[1] http://eavesdrop.openstack.org/meetings/neutron_performance/2018/neutron_performance.2018-10-22-16.02.log.html#l-143
[2] https://review.openstack.org/225223
[3] https://github.com/openstack/rally-openstack/blob/4e4bfc5/rally_openstack/scenarios/neutron/network.py
[4] https://review.openstack.org/620952

Change-Id: Id2e27258f2e9a35bb8123854e098d0822458b314
Depends-On: https://review.openstack.org/624036"
837c9283abd4ccb56d5b4ad0eb1ca435cd2fdf3b,2019-02-14 16:27:03+08:00,"Dynamically increase l3 router process queue green pool size

There is a race condition between nova-compute boots instance and
l3-agent processes DVR (local) router in compute node. This issue
can be seen when a large number of instances were booted to one
same host, and instances are under different DVR router. So the
l3-agent will concurrently process all these dvr routers in this
host at the same time.
For now we have a green pool for the router ResourceProcessingQueue
with 8 greenlet, but some of these routers can still be waiting, event
worse thing is that there are time-consuming actions during the router
processing procedure. For instance, installing arp entries, iptables
rules, route rules etc.
So when the VM is up, it will try to get meta via the local proxy
hosting by the dvr router. But the router is not ready yet in that
host. And finally those instances will not be able to setup some
config in the guest OS.

This patch adds a new measurement based on the router quantity to
indicate the L3 router process queue green pool size. The pool size
will be limit from 8 (original value) to 32, because we do not want
the L3 agent cost too much host resource on processing router in the
compute node.

Related-Bug: #1813787
Change-Id: I62393864a103d666d5d9d379073f5fc23ac7d114"
5b7d444b3176dd3f8bf166d332781ac93670a51d,2019-02-14 16:58:22+08:00,"Not set the HA port down at regular l3-agent restart

If l3-agent was restarted by a regular action, such as config change,
package upgrade, manually service restart etc. We should not set the
HA port down during such scenarios. Unless the physical host was
rebooted, aka the VRRP processes were all terminated.

This patch adds a new RPC call during l3 agent init, it will try to
retrieve the HA router count first. And then compare the VRRP process
(keepalived) count and 'neutron-keepalived-state-change' count
with the hosting router count. If the count matches, then that
set HA port to 'DOWN' state action will not be triggered anymore.

Closes-Bug: #1798475
Change-Id: I5e2bb64df0aaab11a640a798963372c8d91a06a8"
c0fec676723649a0516cf3d4af0dccc0fe832095,2019-02-14 11:08:19+01:00,"Add new test decorator skip_if_timeout

In some cases our db migration tests which run on MySQL are
failing with timeout and it happens due to slow VMs on which
job is running.
Sometimes it may also happen that timeout exception is raised
in the middle of some sqlalchemy operations and
sqlalchemy.InterfaceError is raised as last one.
Details about this exception can be found in [1].

To avoid many rechecks because of this reason this patch
introduces new decorator which is very similar to ""unstable_test""
but will skip test only if one of exceptions mentioned above will
be raised.
In all other cases it will fail test.

That should be a bit more safe for us because we will not miss
some other failures raised in those tests and will avoid rechecks
because of this ""well-known"" reason described in related bug.

[1] http://sqlalche.me/e/rvf5

Change-Id: Ie291fda7d23a696aaa1160d126a3cf72b08c522f
Related-Bug: #1687027"
1f104a093c1f27ddb1967e72cd452d43120b4cc2,2019-02-14 17:18:02+00:00,"Fix notification about arp entries for dvr routers

In method _generate_arp_table_and_notify_agent in neutron.db.l3_dvr_db
module notifiations about arp table was send only to one router
connected to subnet.
Now it will check if subnet is connected to more than one
dvr router and will send same notification to all such routers.

Closes-Bug: #1815913

Change-Id: I6a7d7f6645a8a7b5219788d51e17d54844d145bc"
769e9712936187b48984d7ab73bd7e6611ef4b60,2019-02-15 15:51:29+00:00,"[OVS] Exception message when retrieving bridge-id and is not present

In the OVS agent, when setting up the ancillary bridges, the parameter
external_id:bridge-id is retrieved. If this parameter is not defined
(e.g.: manually created bridges), ovsdbapp writes an error in the logs.
This information is irrelevant and can cause confusion during debugging time.

Change-Id: Ic85db65f651eb67fcb56b937ebe5850ec1e8f29f
Closes-Bug: #1815912"
e8b7e768a2545621ee98511b8dd271c5117f76bd,2019-02-16 00:17:53+08:00,"Add dependency for service plugin

Adds a required list 'required_service_plugins' to each service plugin,
then we can initialize the service plugin with required dependency.
And also adds the 'router' plugin to port forwarding service plugin
required list.

Closes-Bug: #1809238
Change-Id: I53fdaee0cd96a5315a7abc39799657d613eb3a2e"
17a7a62e84b10ae8dfcc60df85862f90cb4d4725,2019-02-15 18:21:19+00:00,"Implement delete_tc_qdisc using pyroute2

Related-Bug: #1560963

Change-Id: I79932dfc7464f9d904047df12d0f3f9cd5508a50"
4a92b0b1429cc2f823fbb32964d0519abfd1c6a1,2019-02-15 18:23:26+00:00,"Add add_tc_policy_class and list_tc_policy_classes using pyroute2

Related-Bug: #1560963

Change-Id: I01333077d4d47cf7f0d7ede4ccc5c2e2c63aa67a"
006d4d07355eb5c77baf3fb1baa5c2cd22098766,2019-02-15 18:23:44+00:00,"Add delete_tc_policy_class using pyroute2

Related-Bug: #1560963

Change-Id: Ide5b8975e00f98265da49fb3a4446e17c34af3bc"
5fff6e3b9429f8e7216e25c8e83b1f3af0661261,2019-02-15 18:28:33+00:00,"Bump pyroute2 version to 0.5.3

Bump pyroute2 version to 0.5.3 in order to retrieve the latest updates
and features.

A code refactor and reorganization was done between version 0.5.1 and
0.5.2. In order to enforce the new code structure, the version should
be bumped to the last stable one.

Change-Id: Ia75186570e7a320a3fbdf35bd01ec43dc071f6e8
Closes-Bug: #1814143"
05644f79add6ce323e45676a7137f77d746877ea,2019-02-17 20:41:58+00:00,"Retrieve devices with link not present

In ip_lib.get_devices_info(), privileged.get_link_devices() can return
devices with links not present in this namespace or not listed. In this
situation, get_devices_info() will always try to find the device to set
the parameter ""parent_name"", what will trigger an exception.

This patch solves this issue avoiding the population of ""parent_name""
if the link device is not present in the devices list.

Change-Id: Ic5c7d9008a11da5c406dc383cfdae2892a3118d8
Closes-Bug: #1815758"
01073caf525bad8a8118ed43ed653baaa91837d8,2019-02-18 10:35:51+01:00,"Consume constant from neutron-lib: DHCPV6_CLIENT_PORT

Consume the rehomed constant. Remove the constant from neutron.

Change-Id: Ia5d6ec8b66344c0c0c2d1588f8c1215c6c2b1cbe
Depends-On: https://review.openstack.org/631795
Related-Bug: #1811639"
a10281bf236aa47ee32f247e0aa79f5fdd42348b,2019-02-18 15:43:24-05:00,"Call _safe_router_removed during pool resize testing

Closes-Bug: #1816239
Change-Id: Ie93d17ff8b5825e401e342d215db4bcfd7b1cd3e"
cd31eae33d2e613c178e277af36dc6a9924d597a,2019-02-19 07:28:23+00:00,"Use pyroute2 to check vlan/vxlan in use

Now ip_lib.get_devices_info function is implemented using pyroute2,
""vlan_in_use"" and ""vxlan_in_use"" can make use of it.

Change-Id: I82a2c3ea76195b10880cf37bf2229341b995b0ae
Closes-Bug: #1815498"
7e09b25b964dde82caf5f5159d25810b6f8ebd3c,2019-02-19 13:24:01-07:00,"Modify api and rpc default number of workers

- Limit number of api workers to roughly using half of system
  RAM. Spawning a bunch, just to have the OOM killer nuke them
  regularly is not useful.
- Bump the rpc_workers default to half of the api_workers.
  A default of 1 falls behind on any reasonably sized node.

Change-Id: I8b84a359f83133014b3d4414aafc10e6b7c6a876
Closes-bug: #1815629"
a05e1369b0f440f24a76f395a27e0bdac33ecd0c,2019-02-20 19:39:18+02:00,"Add support for binding activate and deactivate

Add support for binding activate and deactivate callbacks
in SR-IOV mechanism driver agent.

this work item is required for supporting VM live-migration
with SR-IOV in nova with libvirt as hypervisor.

This commits implemets the following:
- Implement binding_activate() and binding_deactivate() methods in agent.
- Configure agent to listen on the relevant topics.
- RPC version bump on agend side.
- When processing an activated binding treat it as a newly added port.
- Deactivated binding will trigger a NO-OP as once a binding is
  deactivated it will be removed by Hypervisor.

Closes-Bug: #1815361

Change-Id: I6b7195e08ed8932cfc2785b66627de2854ead85d"
d802fad8a92625005597ebda4931b0bbe13418e9,2019-02-21 11:17:02+01:00,"Avoid loading same service plugin more than once

In patch [1] requirement that only each service plugin
can be loaded only once was removed.
Unfortunatelly it is not possible that same service plugin
will be instantiate more than once because it may reqister some
callbacks or other things which can't be duplicated.

So this patch adds mechanism which will ensure that each service
plugin class is instantiate only once and reused if necessary.

[1] https://review.openstack.org/#/c/626561/

Closes-Bug: #1816771

Change-Id: Ie6e6cc1bbbe50ff7cfad4e8033e48711569ea020"
648ab82a4bf07845b97c5cb62347fbde86cdc9d2,2019-02-21 13:45:15+01:00,"New agent attribute: resources_synced

Agents supporting the guaranteed minimum bandwidth feature need to share
their resource view with neutron-server and in turn with Placement too.
The resource information is synchronized to neutron-server via the
periodic agent heartbeat therefore transient synchronization errors are
fixed by the next heartbeat. But synchronization to Placement is not
done periodically, but on a (mostly) on demand basis. Therefore to fix
transient errors of the synchronization to Placement we must remember
the success/failure of the last synchronization attempt.

This change implements the extension 'agent-resources-synced' and
therefore extends the agent db model and object with a new attribute:
'resources_synced'. This attribute in only meant to be updated
internally. But it can be read via the API for debugging purposes.

APIImpact: The agent resource has a new attribute: resources_synced.

Change-Id: I757d659cea63c8172ca3618d1f581d10236f5e71
Depends-On: https://review.openstack.org/626210
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
4ab00d347126127758e12112e081886bb112810d,2019-02-21 14:06:26+01:00,"Class to represent Placement state and sync

Represent the desired state of the Placement DB and provide a method to
sync this state to Placement. This is unused as is. A later patch in
the same series is going to use it. But it is broken out into its own
file and patch, so the code is organized better and easier to review.

Change-Id: I3728117f90b7fad2423c2a4276db214ec86c9d8e
Depends-On: https://review.openstack.org/570847
Depends-On: https://review.openstack.org/577220
Depends-On: https://review.openstack.org/616194
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
84f8ae9d1f696b2561b634336338df0e14c37116,2019-02-21 15:11:42+00:00,"Add ""rpc_response_max_timeout"" config variable in OVS agent

The configuration variable ""rpc_response_max_timeout"" is not defined
in the OVS agent configuration. When the agent is stopped (SIGTERM),
the exception is raised. This error can be seen in the fullstack tests.

Change-Id: Ieedb6e87a4e98efef0f895566f7d4d88c3cd9336
Closes-Bug: #1815797"
facc4e94cae64b6c79cd4538e452e838436eac0f,2019-02-21 16:59:31+01:00,"Reject QoS minimum bandwidth rule updates for bound ports as NotImplemented

Updating QoS policies and rules backed by resources tracked in Placement
is a complex task, which was left out of scope for the Stein release.
Of course this is only relevant for policies/rules already in use on
bound ports. Rules of unbound ports can still be updated freely.

Please note this patch cannot catch all possible problems. There will
always be a time window between the allocation committed to Placement
and Nova sending the port binding request to Neutron. If the policy or
rule is changed in this window we cannot do anything against it.

APIImpact: Reject QoS minimum bandwidth policy/rule updates for bound
           ports as NotImplemented

Change-Id: I477edb0ae35b385ac776a58195f22382e2fce4ed
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
1d41f39ddf23b131a8960ac718ed9f8f015f3702,2019-02-21 15:44:27-07:00,"Fix slow SG api calls when limiting fields

Relating to the issue with creating rules, when reading security
groups, it is very slow. Even when limiting to id/name, it pulls
in all rules before returning just id/name.

This change looks at the fields requested, and if no ""synthetic""
fields are in the list, skips initializing those.

Co-Authored-By: Hongbin Lu<hongbin.lu@huawei.com>
Closes-Bug: #1810563
Change-Id: Id6870633e3943666e9b7fb900ad2d0894ee2715d"
c6ae4fb8a2195c5b8d4a88194a70d5aede61f647,2019-02-25 11:45:38+00:00,"Bump pbr version to 4.0.0

""tox-lower-constrains"" tests are failing because of some old
dependencies in lowest ""pbr"" version (2.0.0). Those dependencies
were removed in [1]. pbr==4.0.0 contains this commit.

[1] https://github.com/openstack-dev/pbr/commit/32c90ba598d7740e52bf21bc5e920fb5df08645a

Change-Id: I7551644ccf65fae19b34eee49151fdafacf29843
Closes-Bug: #1817541"
1ee18775a99492f445f1fb29e2d4639cbdff613d,2019-02-25 15:04:42+00:00,"DVR edge router: avoid accidental centralized floating IP remove

Need to pass centralized floating IPs as preserve_ips to
_external_gateway_added during DVR router update.
Otherwise IP addresses will be deleted from gw device in certain case.
The case is when a router with active centralized floating IPs is
being scheduled to a new dvr_snat L3 agent (rescheduled from a down one).
Please see corresponding traces in the bug description.

Change-Id: Iaeb9fbed73144df6fcd9092c665ed19986e85f4d
Closes-bug: #1817306"
cc8808d539e9b40fe8c7b9b9001f146edc663203,2019-02-26 11:05:04+00:00,"Add QoS minimum egress bandwidth rule into ovs-agent

Add minimum egress bandwidth support for Open vSwitch.

The scope of this implementation is reduced to N/S traffic.
There is no QoS applied on traffic between VMs.

The QoS rules are aplied to exit ports in bridges other than
br-int; that means all physical bridges. No tunneled traffic
will be shaped. This feature will be implemented in a following
patch.

Partial-Bug: #1560963
Change-Id: I0a2ef52b13151a39e678e9a3e6f75babb47298d0"
cc4d5a2561ae31b94131dfcb7785594dc10052c8,2019-02-26 14:30:12-07:00,"Fix regression with SG read API with empty ruleset

Used to be, we would return an empty list. Now, as of change
https://review.openstack.org/#/c/630401/, we don't return the
field at all. That's an API regression.

Go back to returning an empty list.

Change-Id: I295076155eea518152e2479f93f3cf1ea811a207"
9e8e987e6c3d2fa753701689b9ff5d1227fb3c24,2019-03-01 15:37:48+01:00,"Placement reporting service plugin

This service plugin synchronizes ML2 mechanism driver agents' resource
information to Placement. To use this service an agent must add
'resource_provider_bandwidths' to the 'configurations' field of its
RPC heartbeat. It also may add 'resource_provider_inventory_defaults'
to fine tune Placement inventory parameters. Again to use this service a
mechanism driver must implement get_standrd_device_mappings() and allocate
a UUID as mechanism driver property 'resource_provider_uuid5_namespace'.

The synchronization is triggered by:
* any new agent object in the DB
* restart of an agent (via 'start_flag' in the RPC heartbeat)
* if an agent's 'resources_synced' attribute is not True (None/False)

The latter should autoheal transient errors of the synchronization
process. That is if a sync attemp fails then we store
resources_synced=False which triggers a sync retry at each new heartbeat
message until a sync attempt finally succeeds and we can set
resources_synced=True.

Since this code functionally depends on ML2 we can also consider making
it part of ML2, but at the moment it is a service plugin for better
decoupling. Even if you load the service plugin the logic gracefully
degrades for heartbeat messages not containing resource provider info.

If needed the sync can be forced in multiple ways. First, if you restart
an agent then the RPs belonging to that agent will be re-synced. You may
also delete the agent by 'openstack network agent delete' and let the
next heartbeat message re-create the agent object. On re-creation the
RPs belonging to that agent will be re-synced. On the other hand a
neutron-server restart does not trigger a re-sync in any way. Depending
on the trade-off between the admin's needs to force re-syncs and the
performance of (not absolutely necessary) Placement updates re-sync
conditions may be further fine tuned.

Example config for neutron-server:

neutron.conf:
[DEFAULT]
service_plugins = placement

Change-Id: Ia1ff6f7559ab77913ddb9c3b134420a401b8eb43
Co-Authored-By: Lajos Katona <lajos.katona@ericsson.com>
Depends-On: https://review.openstack.org/586567
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
e6351ab11e2cfaea18ab963e32052ad110d2b899,2019-03-01 16:11:59+01:00,"[Functional] Don't assert that HA router don't have IPs configured

In functional tests of HA router, in
L3AgentTestFramework._router_lifecycle method there was assertion
that HA router at the beginning don't have IPs configured in
router's namespace.

That could lead to test failure because sometimes keepalived process
switched router from standby to master before this assertion was
done and IPs were already configured.

There is alsmost no value in doing this assertion as it's just after
router was created so it is ""normal"" that there is no IP addresses
configured yet.
Because of that this patch removes this assertion.

Change-Id: Ib509a7226eb94483a0aaf2d930f329e419b8e135
Closes-Bug: #1816489"
fe4e7724cde61a036262a392abd1be76013f699c,2019-03-01 17:56:31+00:00,"Don't disable radvd if radvd if it wasn't initialized

In some cases on dvr ha router it may happend that
RouterInfo.radvd.disable() will be called even if
radvd DaemonMonitor wasn't initialized earlier and it is
None.
To prevent exception in such case, this patch adds check
if DaemonMonitor is not None to call disable() method on
it.

Change-Id: Ib9b5f4eeae6e4cebcb958928e6521cf1d69b049c
Closes-Bug: #1817435"
61b231a9995a0fe3230302ce913ffde707393d81,2019-03-01 14:18:09-05:00,"Change process name of neutron-server to match worker role

We spawn a lot of neutron-servers, on all but the smallest systems.
It's often hard to tell which are busy/overloaded or spinning.
Add an option to set the process names to their role.

This has a small chance of breaking existing scripting, depending
how they're parsing ps output.

Sample output:
$ ps xw | grep neutron-server
 1126 pts/2    S+     0:00 grep --color=auto neutron-server
25355 ?        Ss     0:26 /usr/bin/python /usr/local/bin/neutron-server \
  --config-file /etc/neutron/neutron.conf \
  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini
25368 ?        S      0:00 neutron-server: api worker
25369 ?        S      0:00 neutron-server: api worker
25370 ?        S      0:00 neutron-server: api worker
25371 ?        S      0:00 neutron-server: api worker
25372 ?        S      0:02 neutron-server: rpc worker
25373 ?        S      0:02 neutron-server: rpc worker
25374 ?        S      0:02 neutron-server: services worker

The ""normal"" looking ps output is the main parent.

Partial-Bug: #1816485
Depends-On: https://review.openstack.org/637119
Change-Id: I0e664a5f8e792d85b8f5483fb8c6f1cd59a677cd"
798c6c731fc5872ade8b5eb1f571a2c002c8c0fb,2019-03-02 09:07:07+00:00,"[Functional tests] Change way how conntrack entries are checked

In netlink_lib functional tests module there are listed conntrack
entries and those entries are assert to some expected list.
It may happen that sometimes some additional entries from other
tests will also be in the list and that cause failures of
netlink_lib tests.

So this patch changes way how those assertions are done. For now
it will check if each of expected entries is in entries list and
in case of delete entries tests, it will also check if any of
deleted entries isn't actually in list.

Change-Id: I30c18f141a8356b060902e6493ba0657b21619ad
Closes-Bug: #1817295"
b197f7c1c4b9c0dd4c58f5c5a4b654dde5596b85,2019-03-03 12:29:50+02:00,"Delete port binding level for deleted bindings

Today, if live migration has failed after an inactive
binding was created on the destination node but before
the activation of the created binding, the port's binding level
for the destination host is not cleared during nova's API call
to neutron to delete the port binding.

This causes future attempts to perform live migration
of the instance to the same host to fail.

This change removes port binding level object during port binding
deletion.

Closes-Bug: #1815345

Change-Id: Idd55f7d24a2062c08ac8a0dc2243625632d962a5"
6ae228cc2e75504d9a8f35e3480a66707f9d7246,2019-03-03 22:37:23+00:00,"Spawn metadata proxy on dvr ha standby routers

In case when L3 agent is running in dvr_snat mode on compute node,
it is like that e.g. in some of the gate jobs, it may happen that
same router is scheduled to be in standby mode on compute node and
on same compute node there is instance connected to it.
So in such case metadata proxy needs to be spawned in router namespace
even if it is in standby mode.

Change-Id: Id646ab2c184c7a1d5ac38286a0162dd37d72df6e
Closes-Bug: #1817956
Closes-Bug: #1606741"
f08de5cbe9695700e282b9882c661353a2c36d74,2019-03-05 15:59:00+00:00,"Make ""phys_brs"" argument in OVSAgentExtensionAPI optional

In [1], a new init parameter was introduced in the class
OVSAgentExtensionAPI. This change in the extension API can break
backwards compatibility with other projects (networking_sfc and
bagpipe are affected).

Because this parameter is needed only in qos_driver extension when
calling OVSAgentExtensionAPI.request_phy_brs() (to retrieve the
physical bridges list), we can make this new parameter optional not
to break other stadium projects. When the OVS it's initialized
(in-tree agent), the extension is called with the three needed
parameters.

[1] https://review.openstack.org/#/c/406841/22/neutron/plugins/ml2/drivers/openvswitch/agent/ovs_agent_extension_api.py@43

Change-Id: I31d1a31a935fdcdd12e13e1bc58f7c5f640ca092
Closes-Bug: #1818693"
9f41850ba36fb0715f72ba961d1b019a0e5d9665,2019-03-05 09:14:50-07:00,"remove neutron.db.api references

While the initial version of this patch removed neutron.db.api, a
different duplicate patch [1] landed first.

This patch cleans up the remining references to neutron.db.api
including those in the docs and comments.

[1] https://review.openstack.org/#/c/635978/

Change-Id: I5f911f4c6a1fc582a9c1006ec5e2880853ff2909"
05b0144e8366db5c9596d49919073cfc32154b39,2019-03-07 15:22:46+01:00,"[Fullstack] Use newer openvswitch

Current version used is old and does not work on Bionic nodes. But as
Xenial kernels do not include the fix for local VXLAN tunnels
(bug/1684897), we still have to use a locally compiled version.

On Xenial nodes, the Queens UCA repository has openvswitch 2.9.0
On Bionic nodes, we have 2.9.2

So use the latest 2.9 release for fullstack testing

Change-Id: Ifb61daa1f14969a1d09379599081e96053488f9f
Closes-Bug: #1818632"
d9e0bab6acf6a608ed5bf32524c7d362f052a3ac,2019-03-07 18:11:32+00:00,"DVR-HA: Unbinding a HA router from agent does not clear HA interface

Removing an active or a standby HA router from an agent that has a
valid DVR serviceable port (such as DHCP), does not remove the
HA interface associated with the Router in the SNAT namespace.

When we try to add the HA router back to the agent, then it
adds more than one HA interface to the SNAT Namespace causing
more problems and we sometimes also see multiple active routers.

This bug might have been introduced by this patch [1].

Fix the problem by just adding the router namespaces without HA
interfaces when there is no HA and re-insert the HA interfaces
when HA router is bound to the agent into the namespace.

[1] https://review.openstack.org/#/c/522362/
Closes-Bug: #1816698

Change-Id: Ie625abcb73f8185bb2bee06dcd26a01d8af0b0d1"
22f55822aab17c758f5f723c304b1acaf3179ec1,2019-03-08 07:20:49+01:00,"Catch OVSFWTagNotFound in update_port_filter

In neutron.agent.linux.openvswitch_firewall.firewall make the method
update_port_filter catch OVSFWTagNotFound and log it to avoid
traceback in log files.

Change-Id: I584d867f0e1c47447cb8790fd715fa01ec902438
Closes-Bug: #1811405"
70fb9c64792b946fb83333561b05b603a5b17ec9,2019-03-08 11:56:44+00:00,"Mock router info functions for a functional case

In functional test environment, seems L3 agent can not handle
such 30+ routers in the test test_router_processing_pool_size.
It still meets timeout for some processing procedure.
For now, router initialize/process/delete is not our test purpose
for this case, so we just mock them.

Closes-Bug: #1816239
Change-Id: I85dc6fd9d98a6a13bbf35ee2e67ce6f69be48dde"
92f1281b696c79133609d3c04b467ac7ea9f4337,2019-03-09 15:46:59+00:00,"Add a more robust method to check OVSDB values in BaseOVSTestCase

Sometimes, when the OVSDB is too loaded (that could happen during the
functional tests), there is a delay between the OVSDB post transaction
end and when the register (new or updated) can be read. Although this is
something that should not happen (considering the OVSDB is transactional),
tests should deal with this inconvenience and provide a robust method to
retrieve a value and at the same time check the value. This new method
should provide a retrieving mechanism to read again the value in case of
discordance.

In order to solve the gate problem ASAP, another bug is fixed in this
patch: to skip the QoS removal when OVS agent is initialized during
funtional tests

When executing functional tests, several OVS QoS policies specific for
minimum bandwidth rules [1]. Because during the functional tests
execution several threads can create more than one minimum bandwidth
QoS policy (something in a production environment cannot happen), the
OVS QoS driver must skip the execution of [2] to avoid removing other
QoS created in parellel in other tests.

This patch is marking as unstable ""test_min_bw_qos_policy_rule_lifecycle""
and ""test_bw_limit_qos_port_removed"". Those tests will be investigated
once the CI gates are stable.

[1] Those QoS policies are created only to hold minimum bandwidth rules.
    Those policies are marked with:
       external_ids: {'_type'='minimum_bandwidth'}
[2] https://github.com/openstack/neutron/blob/d6fba30781c5f4e63beeda04d065226660fc92b6/neutron/plugins/ml2/drivers/openvswitch/agent/extension_drivers/qos_driver.py#L43

Closes-Bug: #1818613
Closes-Bug: #1818859
Related-Bug: #1819125

Change-Id: Ia725cc1b36bc3630d2891f86f76b13c16f6cc37c"
93d556e4344ee9ba25c51e2b72460c8ed69d9943,2019-03-09 22:01:57+00:00,"Add TC filter functions implemented with pyroute2

Added add_tc_filter_match_mac, add_tc_filter_policy and
list_tc_filters

Related-Bug: #1560963

Change-Id: I360e68b98465706aef66e00590e1063345ead6b3"
74c51a2e5390f258290ee890c9218beb5fdfd29c,2019-03-09 22:03:51+00:00,"Drive binding by placement allocation

Drive the choice of mechanism driver during binding as inferred from
the resource provider allocated by nova and as told to neutron via the
port's binding:profile.

As discussed on a neutron qos irc meeting some time ago
this patch introduces a new assumption on bind_port() implementations.
That is an implementation of bind_port() in any mech driver supporting
Guaranteed Minimum Bandwidth bind_port() must not have a non-idempotent
side effect. Because the last binding level will be redone for a 2nd
time with a narrowed down list of mechanism drivers. And if the 2nd call
does not give the same result as the first all kind of weird things can
happen.

Change-Id: I2b7573ec6795170ce45a13d5d0ad7844fb85182d
Depends-On: https://review.openstack.org/574781
Depends-On: https://review.openstack.org/635160
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
8c213e45902e21d2fe00639ef7d92b35304bde82,2019-03-09 22:04:35+00:00,"When converting sg rules to iptables, do not emit dport if not supported

Since iptables-restore doesn't support --dport with protocol vrrp,
it errors out setting the security groups on the hypervisor.

Marking this a partial fix, since we need a change to prevent
adding those incompatible rules in the first place, but this
patch will stop the bleeding.

Change-Id: If5e557a8e61c3aa364ba1e2c60be4cbe74c1ec8f
Partial-Bug: #1818385"
8c2a16796bb8a17c311ff6b34435283650976f48,2019-03-09 22:07:09+00:00,"Fix fullstack test_dscp_marking_packets test

Fullstack test test_dscp_marking_packets spawns tcpdump
process inside one fake vm's namespace and then tries to
ping this instance from second one.
After that it checks if tcdump captured any packet marked with
specific DSCP mark.

Ping was done usually only once (1 packet) because
it was done by using vm.wait_until_ping() method, so it could
happen sometimes that ping was send before tcpdump actually
started captuting traffic.
In such case test failed because there was no any packet captured.

This patch changes this by:
1. Start tcpdump async process with block=True, so it should be
   already really started before test will go to the next steps,
2. Send always 10 packets instead of (usually) only one.

In addition this patch adds logging of captured tcpdump's stdout
and stderr streams. It may help debugging issues with this test in
the future.

Change-Id: I23bbde59af0250267843623dde2c5407059d9db2
Closes-Bug: #1818335"
c2ab2626f8d4a1847ddc7d52b9449bc54c052ed7,2019-03-09 22:08:01+00:00,"Mark dvr_ha_router_failover tests as unstable

According to related bug, those tests are now failing
quite often due to reasons described in bug report.
Lets mark them as unstable for now to make our gate
more stable until we will fix those tests in proper way.

Change-Id: Id803f2d23375a73322dbcc7337480d28c33cea82
Related-Bug: #1819160"
5e0fc3d2da6fbc5154debcc4a98bb8b6419326f9,2019-03-09 17:30:14-06:00,"Allow sharing of security groups via RBAC mechanism

Neutron-lib api ref: https://review.openstack.org/#/c/635313/
Tempest tests: https://review.openstack.org/#/c/635312/
Client: https://review.openstack.org/#/c/635428/

Partial-Bug: #1817119
Depends-On: https://review.openstack.org/635313
Change-Id: I974b0a603b6ca75cf080fb7b0751c7fb87df8443"
c04b8ddd907d786c0ea2fccd31b82561f2cdb8fc,2019-03-10 04:42:48+00:00,"Join on explcit relationship paths

The join() in get_router_for_floatingip() is joining from entity
to entity without an explicit ON clause which creates an ambiguous
situation.  SQLAlchemy 1.3 guards against this now, so use the
real relationship-bound path so that the ORM does not need to guess.

Closes-bug: #1819260
Change-Id: Ia377a9d1a32a78abdaee74c79e395acd77e486ef"
18c578aa10c19a6befdf1f1510645200f173eb44,2019-03-11 09:58:39+09:00,"Fix KeyError in OVS firewall

When merging port ranges, the code never assumed the
conjunction ID might not be present in the set due to
already being removed.

In this case there were two security groups, both using
the same remote security group, but the first security
group does not define a port range and the second one does.
Or more generally, the first SG port range is a subset
of the second, as no port-range means the full range.

Change-Id: I17ab643abbd2ec21eda4ae1dfb9abf2d4b0657f2
Closes-bug: #1813007"
c1999a2b2268a4f5477247974363e31cb54e0e6b,2019-03-11 07:24:30+00:00,"Fix QoS rule update

QoS rule (QosBandwidthLimitRule and QosMinimumBandwidthRule) update now
expects to have direction field in the API request for checking for
duplicates.
This patch changes this by using the rule fetched from the policy and
the update will work on that rule object instead of a newly created
object which for minimum_bandwidth rule has no default direction, which
causes the update to fail.

Change-Id: Ib8f95bf14193a50f22102668bed9208a93d1caba
Closes-Bug: #1815618"
d3a119bbbe8a032e7ce952f57a6fd1381de7b9a7,2019-03-11 06:07:54-06:00,"consume UnorderedList from neutron-lib

The test tool class UnorderedList lives in neutron-lib.
This patch uses it from neutron-lib rather than neutron and removes
the class from neutron.

Depends-On: https://review.openstack.org/#/c/641662/
Change-Id: Ie92c2629b6e7d7af46287ef9e822786e71123439"
092c6d68511b43fd975f6fccc4a697488966ff5e,2019-03-11 13:28:15+00:00,"Agent configuration bandwidth report change

Fullstack test for checking if agent configuration field's
resource_provider_bandwidths changes after configuration file change and
agent restart.

Change-Id: I655777d27645d9a6eaf8b134d77cd2951404aef9
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
732dbdaf5e1ccf5a592131447927e66b9202e534,2019-03-12 10:06:39+01:00,"Fail placement sync if _get_rp_by_name() fails

The Placement sync process involves some input from Placement first.
That is the UUID of the compute host RP. This is a remote call just like
the Placement updates we send later and it also may fail in all the
usual ways of remote calls. We need to fail the sync procedure if this
remote call fails.

Previously I had the mistaken belief that if I set the parent_uuid to
None that will be an invalid call rejected by Placement. But no, that's
a valid call and creates a resource provider without a parent. That is
the neutron managed resource providers will be in their own resource
provider tree instead of the compute host's resource provider tree.

In this change we make sure to handle the failure of getting the compute
host RP properly. We must not continue with the updates. And we must set
the agent's resources_synced to False.

Change-Id: Ie6ad33e2170c53a16c39a31a8d7f6496170a90ce
Closes-Bug: #1818683"
1813ec74cc583dcbf7097ded938bc94495ce6fed,2019-03-12 11:24:29+00:00,"Do not rise exception if OVS Queue is not present when being deleted

In this case, there is no need to raise an exception because the
Queue is not present anymore in the OVS database. A warning message
will be logged.

Change-Id: I836e762bf0703d53f47877b73354948cba70e9c2
Closes-Bug: #1819477"
8fec1ffc833eba9b3fc5f812bf881f44b4beba0c,2019-03-12 12:29:36+01:00,"Set initial ha router state in neutron-keepalived-state-change

Sometimes in case of HA routers it may happend that
keepalived will set status of router to MASTER before
neutron-keepalived-state-change daemon will spawn ""ip monitor""
to monitor changes of IPs in router's namespace.

In such case neutron-keepalived-state-change process will never
notice that keepalived set router to be MASTER and L3 agent will
not be notified about that so router will not be configured properly.

To avoid such race condition neutron-keepalived-state-change will
now check if VIP address is already configured on ha interface
before it will spawn ""ip monitor"". If it is already configured
by keepalived, it will notify L3 agent that router is set to
MASTER.

Change-Id: Ie3fe825d65408fc969c478767b411fe0156e9fbc
Closes-Bug: #1818614"
2ac0ee0b28c9c408aeb501d311c880afe59c4fb5,2019-03-12 13:43:58+00:00,"Fix pylint E1128 (assignment-from-no-return) in l3-agent

Changed migrate_centralized_floating_ip() to return a
status in DvrLocalRouter class.  Also changed the parent
method in RouterInfo class to return FLOATINGIP_STATUS_NOCHANGE,
which will cause the agent to not send an updated status for
the floating IP.

Also changed floating_ip_added_dist() to not use an
intermediate variable and just return directly.

Change-Id: I7dc4934308da95cf00a36b4ef1020aac7cef7d99
Closes-bug: #1816874"
b3d26ab2dd51ec4dbe446564308a8ae95105f22e,2019-03-13 08:06:55+00:00,"Migrate neutron-tempest-dvr-ha-multinode-full job to zuulv3

This patch migrates definition of
neutron-tempest-dvr-ha-multinode-full job to zuul v3 syntax.

Additionally this patch sets l3_ha config option in neutron
to True to make sure that routers created in tests are HA
always.

Change-Id: I3e48c5109dddc2fca6f3b9c289f416ed4a018a41
Related-Bug: #1804844"
c3ad500df067db0bd1594e353b821c595e368372,2019-03-13 10:09:24+00:00,"[Fullstack] Don't compile ovs kernel module on Ubuntu Bionic

In fullstack tests it was required to compile ovs kernel module
for specific version from sources because we needed fix [1] for vxlan
tunnels traffic.
Now, as in Ubuntu Bionic there is at least ovs 2.9 available,
this installation from sources shouldn't be necessary anymore.

[1] https://github.com/openvswitch/ovs/commit/b1c74f35273122db4ce2728a70fd34b98f525434

Closes-Bug: #1818632

Change-Id: I83df981a4446e8f52f6f623351d1b80c224a5aff"
33110fb7e87a57cda947da20926d8dd9912c19d4,2019-03-13 11:07:38+00:00,"Migrate neutron-functional job to zuul v3 syntax

This patch migrates also neutron-functional-python27 job to
zuul v3 syntax.

Neutron's functional tests have to be run on host with
deployed minimal devstack but without running any e.g. neutron
services. Because of that new job's template inherits from
devstack-minimal job instead of devstack-tox-functional and
we need to have own run_functional_job and post_functional_job
playbooks.

It also adds ansible roles:
- configure_functional_tests
- setup_logdir
- fetch_journal_log

which are used in new neutron-functional job definition.
Those roles can be also used later e.g. for fullstack job.

Change-Id: I80bc17c8c9f43050ac0c21176fbc4be46c11ce35
Related-bug: #1804844"
25c432a05a57f794dcbb4f17ce224d914c65e071,2019-03-13 07:40:15-07:00,"Add rootwrap filters to kill state change monitor

When deleting HA routers, the keepalived state change monitor has to be
deleted. This patch adds rootwrap filters to allow deleting the state
change monitor.

Change-Id: Icfb208d9b51eaa41cf01af81f1ede7420a19cc93
Partial-Bug: #1795870
Partial-Bug: #1789434"
44382ac446d32e6300a732f968be0fbc843630e2,2019-03-13 15:54:37+00:00,"Specify tenant_id in TestRevisionPlugin objects

In order to avoid interferences between other tests, the objects
created in TestRevisionPlugin will be created for random
tenant IDs, generated during the execution of each test.

Change-Id: Ica7fe2379c7b1ce516ae7b0cd3959cff88a0b895
Closes-Bug: #1819740"
86b3993ceec0c64f4aed02a498fc747ce91eb682,2019-03-14 09:16:10+09:00,"Fix misuse of assertTrue/assertFalse

Change-Id: I247705feeb71e20ad5260b0ca1da08de7290ba6e
Closes-Bug: #1819982"
1e9086f6e269f32d1cb19a0f55eb1f5dd73ca651,2019-03-14 16:23:53-06:00,"Use dynamic lazy mode for fetching security group rules

In conjunction with the prior fix to only get a subset of fields
when needed, this makes the querying of non-rules SG objects
very very fast.

Before the two fixes, if you have about ten security groups with 2000 rules each:

list all: 14s
list all, just 'id' field: 14s
list one: 0.6s
list one, just 'id' field: 0.6s

With just the previous partial fix:

list all: 14s
list all, just 'id' field: 6s
list one: 0.6s
list one, just 'id' field: 0.2s

Now with this change:

list all: 14s
list all, just 'id' field: 0.04s
list one: 0.6s
list one, just 'id' field: 0.03s

Closes-Bug: #1810563
Change-Id: I15df276ba7dbcb3763ab20b63b26cddf2d594954"
66eb1e29f31a07573be2a5a7789fb7bfce598827,2019-03-15 14:30:23+00:00,"Enable ipv6_forwarding in HA router's namespace

When HA router is created in ""stanby"" mode, ipv6 forwarding is
disabled by default in its namespace.
But when router is transitioned to be ""master"" on node, ipv6
forwarding should be enabled. This was fine for routers with
configured gateway but we somehow missed the case when router don't
have gateway configured.
Because of that missing ipv6 forwarding setting in such case, IPv6
W-E traffic between 2 subnets was not working fine in L3 HA case.

This patch fixes it by adding configuring ipv6_forwarding on
""all"" interface in router's namespace always, even if it don't have
gateway configured.

Change-Id: I8b1b2b426f7a26a4b2407a83f9bf29dd6e9ba7b0
CLoses-Bug: #1818224"
4350ed3c3556388eaa7f8623ed05b5adc86e9c16,2019-03-15 13:54:33-04:00,"Better handle ports in security groups

After taking a closer look at bug 1818385, I found a couple
of follow-on things to fix in the security group code.

First, there are very few protocols that accept ports,
especially via iptables.  For this reason I think it's
acceptable that the API rejects them as invalid.

Second, UDPlite has some interesting support in iptables.  It
does not support using --dport directly, but does using
'-m multiport --dports 123', and also supports port ranges using
'-m multiport --dports 123:124'.  Added code for this special
case.

Change-Id: Ifb2e6bb6c7a2e2987ba95040ef5a98ed50aa36d4
Closes-Bug: #1818385"
6ef6f2b59be09baa5663126b49fbdce27c4798d6,2019-03-16 09:59:59+01:00,"Migrate fullstack job definition to zuulv3 syntax

Now, as neutron-functional job is moved to zuulv3 syntax,
the same can be easily done with fullstack job.

This patch also switches experimental neutron-fullstack-with-wsgi
job.

This patch removes also fullstack part from gate scripts
and it removes hooks for dstat and stack_base as both are not
used anywhere else.

Related-Bug: #1804844
Change-Id: Iac7583f01651410a3df3e349b2c843b109a8bb18"
252598b08827c0cd5e5c4174f84b4196c59f7493,2019-03-20 10:51:06+01:00,"Networking guide: Guaranteed Minimum Bandwidth

High-level overall and low-level neutron docs for the
Guaranteed Minimum Bandwidth feature.

Change-Id: I27224250956b3b940d6372bd46afbdd11e0ce284
Closes-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
b6550e568d9c17175a8d368959e3da3f6ce24573,2019-03-20 13:46:17+01:00,"Remove ""msg"" from tasks in ansible roles

It looks that 'msg' isn't valid attribute for a Task and
it cause problem with jobs which uses this role.

Change-Id: I43d09e645f60526d251703ce7ee91c29281f1eeb
Closes-Bug: #1820993"
7cccaf0616efe1f5b7d75d22ef0c3e1f7c649b16,2019-03-21 11:26:16+01:00,"FUP Networking guide: Guaranteed Minimum Bandwidth

Being so close to the rc1 deadline I didn't want to lose +2s of
https://review.openstack.org/640390, so review comments are fixed here.

Change-Id: Ic3353dd34bbc9fe6c1e03395d095067238fac844
Related-Bug: #1578989
Related-Change: https://review.openstack.org/640390
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
4777633e8b53bb0dd080e4d6a01d0364f8e4c766,2019-03-21 15:01:50+00:00,"Fix neutron-status upgrade check CLI tool

Some time ago commit [1] add registering of service config
options in neutron-status CLI tool.
Some time later, commit [2] changed name of list with
service options to be in uppercase and it wasn't changed
in neutron.cmd.status module.
Because of that neutron-status CLI command was broken and
this patch fixes it by changing config options list to be
proper.

[1] https://review.openstack.org/#/c/636363/
[2] https://review.openstack.org/#/c/636719/

Change-Id: Iba891f72dfaba6f09e1fc99b0e86f308db02df06"
303598289ddf56a9b4223487b4f8f382ccb350c4,2019-03-21 15:01:55+00:00,"Switch neutron-functional-with-wsgi job to zuul v3 syntax

This patch removes also legacy playbooks used before by
this experimental job and it also removes
neutron/tests/contrib/post_test_hook.sh script as it was used
only by functional and fullstack tests and it's not used anymore.

Change-Id: Ibc48ce8e80e11dcbb13da121aa86bbf01b98a3d9
Related-Bug: #1804844"
636f1b539446c27c703744159c10bc08739f8937,2019-03-21 15:06:10+00:00,"Define qos-rules-alias extension

This patch adds qos-rules-alias extension to enable users to perform
GET, PUT and DELETE operations on QoS rules as though they are first
level resources. In other words, the user doesn't have to specify the
QoS policy ID.

Change-Id: Ia7535d83e3ae874106e22652dfd97bd9250ad37b
Partial-Bug: #1777627"
a5244d6d44d2b66de27dc77efa7830fa657260be,2019-03-21 15:12:31+00:00,"More accurate agent restart state transfer

Ovs-agent can be very time-consuming in handling a large number
of ports. At this point, the ovs-agent status report may have
exceeded the set timeout value. Some flows updating operations
will not be triggerred. This results in flows loss during agent
restart, especially for hosts to hosts of vxlan tunnel flow.

This fix will let the ovs-agent explicitly, in the first rpc loop,
indicate that the status is restarted. Then l2pop will be required
to update fdb entries.

Closes-Bug: #1813703
Closes-Bug: #1813714
Closes-Bug: #1813715
Closes-Bug: #1794991
Closes-Bug: #1799178

Change-Id: I8edc2deb509216add1fb21e1893f1c17dda80961"
cd6bf8035d9a63e1803e6c763083d3aef0e9408c,2019-03-21 23:25:28+08:00,"Random IP for concurrent create pf and update_port

Port forwarding test port IP should be specified, otherwise IP
collision may happen between new port IP and router interface IP.
Or sometimes, port new IP and old IP are same.

After this patch, the port new IP will be randomly choiced from
the subset without [old_port_ips, router_interface_ips].

Partially reverts commit 414bdd4c5997886c97d0e3a0b19c684dafeabb7a.

Change-Id: I157e08288765f1716b4cb12bb2e176760db806c0
Closes-Bug: #1818334"
a77cbd926018a904212f2cac0420534a5b5d2191,2019-03-21 15:52:24+00:00,"Add test case to duplicated service plugin

Functional test case for [1] to prevent agressive on L3 provider service.
Related DB error: ProviderResourceAssociation.

[1] https://review.openstack.org/#/c/638380/

Change-Id: I95792ad6cf63d13dc790a1ec636860dde82a23c6
Related-Bug: #1816771"
aa221a3c0997a57a56306afe9874ce4638f0f2b9,2019-03-21 21:48:29+00:00,"Migrate legacy jobs to Ubuntu Bionic

We have migrated the zuulv3 job to Bionic during Dec/Jan month.
 - http://lists.openstack.org/pipermail/openstack-discuss/2018-December/000837.html
 - https://etherpad.openstack.org/p/devstack-bionic
But that effort does not move all gate job to Bionic as there are
large amount of jobs are still legacy jobs. All the legacy jobs still
use Xenial as nodeset.

As per the decided runtime for Stein, we need to test everything on openstack
CI/CD on Bionic - https://governance.openstack.org/tc/reference/runtimes/stein.html

Below patch move the legacy base jobs to bionic which will move the derived jobs
automatically to bionic. These jobs are modified with branch variant so that they will use
Bionic node from stein onwards and xenial for all other stable branches
until stable/rocky.
- https://review.openstack.org/#/c/639096

This commit remove the overridden nodeset from legacy jobs
so that it will start using the nodeset defined in parent job.

More Details:
- https://etherpad.openstack.org/p/legacy-job-bionic
- http://lists.openstack.org/pipermail/openstack-discuss/2019-March/003614.html

Depends-On: https://review.openstack.org/#/c/639096

Co-Authored-By: Ghanshyam Mann <gmann@ghanshyammann.com>

Change-Id: Idf073eaef3772aa24b60d600cec3f898e6ed022a"
7369b69e2ef5b1b3c30b237885c2648c63f1dffb,2019-03-21 21:55:04+00:00,"Dynamically increase DHCP process queue green pool size

As done for the l3-agent in 837c9283abd4ccb56d5b4ad0eb1ca435cd2fdf3b,
dynamically resize the DHCP process queue green pool.

This patch adds a new measurement based on the network quantity to
indicate the DHCP process queue green pool size. The pool size
will be limited from 8 (original value) to 32, because we do not want
to increase the DHCP agent processing cost on the node.

Change-Id: Ic0e7bc15f138273c7a6ad41f228c9f315e6c7a91
Related-Bug: #1813787"
30e901242f71f783fe06f775b20afa01da41d72f,2019-03-22 09:57:16+00:00,"Increase timeouts for OVSDB in functional tests

Increased timeouts for OVSDB connection:
  - ovsdb_timeout = 30

This patch will mitigate the intermittent timeouts the CI is
experiencing while running the functional tests.

Change-Id: I97a1d170926bb8a69dc6f7bb78a785bdea80936a
Closes-Bug: #1815142"
6ee786ab95c2797822698c16e688fd00a7a944a1,2019-03-22 13:14:24+00:00,"Add check for external_network_bridge in neutron-status

In commit [1] old config options ""external_network_bridge""
was removed.
This patch adds upgrade check which will warn operator
if any of their L3 agents is still using this config option.

[1] https://review.openstack.org/#/c/567369/

Closes-Bug: #1820763

Change-Id: I92b1e30e806dfd20d99716d31c518845fd296a3d"
157e09e6af758b7669fbe5a8cdb0b1969f04661a,2019-03-23 14:59:33+00:00,"Try to enable dnsmasq process several times

Sometimes, during restart of dnsmasq process it may happend that
after process is killed, start attempt is made too fast, before
old process really unbind from IP address on which it was listening.
That causes an issue with starting dnsmasq process again.

In patch [1] disable() method was changed that it can wait
until process is really not active (no pid for it) but that didn't
solve the problem with starting a new dnsmasq process completely and
sometimes it still happens, at least in functional tests.

So now, enable() method is changed so that it will try to enable
dnsmasq process for 1 minute, until it will really be spawned properly.

[1] https://review.openstack.org/#/c/634390/

Change-Id: I18d73b787fa3ab8803e12d5e5eb2bb7109205aba
Closes-Bug: #1811126"
d1696619c5636bc74d5238520db80b01cb81921d,2019-03-23 15:44:31+00:00,"Reject min-bw rule operations on non-physnet networks/ports

Change-Id: I54d421d0993bd9515ab5ba32f75f40d1ef46eccb
Closes-Bug: #1819029
Depends-On: https://review.openstack.org/644847"
64ea642359e8f8aee2ebe494e037ecdfe8cf1b2c,2019-03-25 02:51:20+00:00,"Change default local ovs connection timeout

Large number of flows can cause local ovs connection
timeout. Ultimately getting succeed will be better
than a retry or fullsync.

Related-Bug: #1813703
Related-Bug: #1813705
Related-Bug: #1813707
Related-Bug: #1813709

Change-Id: Ifa0608a7e131df3cad2f7727426720afce641a58"
3e008fd51b12a81c404870a7fb1d01f82363907b,2019-03-25 12:58:01+01:00,"FUP: Unit tests for https://review.openstack.org/636970

I forgot to add unit tests to the original change.
This patch adds the missing unit tests.

Change-Id: If281f9a8c33864fa18a3b8a8de854816f5773efe
Related-Bug: #1578989
Related-Change: https://review.openstack.org/636970
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
94221c60addd026dea3f2b587a736912cba89fe5,2019-03-25 07:51:23-06:00,"consume sqlalchemytypes from neutron-lib

The neutron.db.sqlalchemytypes module we rehomed into neutron-lib [1].
This patch consumes it by removing the module and unit tests from
neutron and using them from neutron-lib where applicable.

NeutronLibImpact

[1] https://review.openstack.org/#/c/639117/

Change-Id: I3ab76ca3813d550a4de454cc83156a55325f6abc"
ff70e20acc215b923e0506f3bae2c8ff9322c86f,2019-03-25 09:59:13-06:00,"use neutron-lib trunk resource names

The trunk callback resource names now live in neutron-lib [1].
This patch switches over to use those constants from lib and they
will be removed from neutron in a later patch once consumers switch
over to lib as well.

[1] https://review.openstack.org/#/c/635209/

Change-Id: I79dfe76c1b698fe634393e469157014f1914cc8e"
0db0fb71dec900f8cf92c84223a368de80d0ad1d,2019-03-25 18:21:38+00:00,"Specify physical network in QoS fullstack tests

Since [1], those ports and networks without a physical network defined,
will reject a QoS minimum bandwidth rule.

[1] https://review.openstack.org/#/c/641712/

Change-Id: If631ed20db174b988a53d311ec9e4bf9152c17c3
Related-Bug: #1819029"
cf13b2f0cc18fdb1d512ecfe9f2c65ad4bb284dd,2019-03-25 21:54:52+01:00,"Check if process' cmdline is ""space separarated""

According to proc man page process arguments in /proc/{pid}/cmdline
should be separated with '\0' char and that char was used in
neutron.agent.linux.utils.get_cmdline_from_pid function.

Recently in fullstack tests it was noticed that sometimes it may
happend that those arguments are separated with space char and this
caused failed test because async_process.AsyncProcess() was not able
to check that process is really active.

This patch adds attempt to split cmdline arguments with space in case
when split with '\0' returns only 1 element.

Change-Id: I35d4c0e2cf56fc3ff15cf307aaf11a8ad8489e1f
Closes-Bug: #1820870"
04f23958e63a5c74134fd2e9376fa8ed00eabbb2,2019-03-26 11:20:16+01:00,"Avoid iterating over all of the segment data just for counting

getting the full collection (which includes iterating over it
and populating attributes) just to gather the count of it
is wasteful. we can just use the count api.

Change-Id: I1b216cb2c8c5b612f12554454d5721a14975f138
Closes-Bug: #1821708"
f898ffd71fba4f9b8fd9f4cb851fc3976d72396a,2019-03-26 21:13:25+08:00,"Divide-and-conquer local bridge flows beasts

The dump-flows action will get a very large sets of flow information
if there are enormous ports or openflow security group rules. For now
we can meet some known exception during such action, for instance,
memory issue, timeout issue.
So after this patch, the cleanup action of the bridge stale flows
will be done one table by one table. But note, this only supports
for 'native' OpenFlow interface driver.

Related-Bug: #1813703
Related-Bug: #1813712
Related-Bug: #1813709
Related-Bug: #1813708

Change-Id: Ie06d1bebe83ffeaf7130dcbb8ca21e5e59a220fb"
434b29a2cb131d38ed151e6a1d7f1ab756408198,2019-03-27 17:59:15+00:00,"Check the namespace is ready in test_mtu_update tests

Change-Id: Ifdeac05b485a079e2288b413829bce0e39aef6fd
Closes-Bug: #1820865"
765691d1e28fe59f6981cd9e24d57e358163f499,2019-03-28 10:08:43+01:00,"Do not use subnet broadcast address in unit test

neutron.tests.unit.services.revisions.test_revision_plugin.\
    TestRevisionPlugin.test_port_ip_update_revises
occasionally fails in the gate, because it assumes that a random
IP+1 is also a valid IP. However the +1 address may be the subnet
broadcast address which is then rejected by neutron.

This change makes sure to use a free IP from the subnet instead of
the +1 address.

Change-Id: I1b27cac301cdc1acf426b0e71c037c157e93cd45
Closes-Bug: #1821948"
dcc3d3c7548eb92634b84d5376a73f78421ba23f,2019-03-28 14:45:40+00:00,"Add extra unit test for get_cmdline_from_pid function

In patch [1] get_cmdline_from_pid function was modified to be able
to parse process' cmdline files with arguments separated by space
instead of '\0' char.
This patch adds one extra UT and small refactor which was pointed
in comments to [1] but which I was not able to change there.

[1] https://review.openstack.org/#/c/647605/

Change-Id: Ibd91d0472a686eca79a1126154d9cdf4587c1a19
Related-Bug: #1820870"
0c6d76f210331c1f45ebb24c7d92a80044a15057,2019-03-28 14:45:56+00:00,"Remove conntrack rule when FIP is deleted

Change-Id: Ia2bc8a7b5b27a5d4fbbfb7813cde7f022934bd22
Closes-Bug: #1818805"
8e48ba3bd06e3faddb47d9e6858b706216b18c2f,2019-03-28 08:50:25-06:00,"consume get_random_cidr from neutron-lib

The get_random_cidr test function was rehomed into neutron-lib [1].
This patch consumes it by removing the function from neutron and using
it from neutron-lib where applicable.

NeutronLibImpact

[1] https://review.openstack.org/#/c/639117/

Change-Id: I6b2d9815a9201638fcda536b80e0aba01c663853"
97923ae4a89217f90417d2561a1366e8aacd7f25,2019-03-29 06:37:05+00:00,"Convert int to bytes for py3

The following error raised during the functional test:
""TypeError: unsupported operand type(s) for %: 'bytes' and 'int'""
This patch converts the string to bytes for py3.

Closes-Bug: #1822155
Change-Id: I3de92ef830e5f424aa83b57d8ed843a7c4349e8a"
6ac420df7eb3ed324669472c61fec41b3d9cb35b,2019-03-29 21:56:43+08:00,"Divide-and-conquer security group beasts

In one specific compute node, the security group rules
can be enormous quantity. This patch adds a step-by-step
processing method to deal with the large number of the
security group rules. And also changes or adds some LOG.

Related-Bug: #1813703
Related-Bug: #1813704
Related-Bug: #1813707

Change-Id: I57bf27ec75cf848271c5a28b22beee12b8bd5faa"
6f26f4026b528e778fa653f51baff39f889181be,2019-04-01 12:55:50+00:00,"Change provider network segmentation ID

In the ML2 plugin, allow to update the segmentation ID of a single
provider network.

A new method in the ""SimpleAgentMechanismDriverBase"" is added:
""provider_network_attribute_updates_supported"". This method returns,
if implemented in the specific agent, which network attributes can
be updated on a live network with ports bound to this network back-end.
By default, an empty list is returned.

Partial-Bug: #1806052

Change-Id: I2595335d6fbc51562b070f14eaeaadf49cf7c418"
23ca23cc792011e69e89a3d08f54072500749d75,2019-04-02 10:41:09+02:00,"postgresql compatibility for get_l3_agent routines

This commit fixes a bug caused by the sqlalchemy group_by
statement in the get_l3_agent routines when using postgresql.
All select statements need to be replicated in the group_by statement.

Change-Id: Ib938be79408d78e0973fed10a68934397341c180
Closes-Bug: #1811873"
8408af4f173a0ffde354599e26c49bf9e17e8bef,2019-04-02 22:57:11+08:00,"Do not call update_device_list in large sets

Ovs-agent can process the ports in large sets, then all
of these ports will have to update DB status or attributes.
But neutron server is centralized. It may have to do
something else, or the database processing can be also
time-consuming. Because of these, it sometimes returns
the RPC timeout exception to ovs-agent. And a fullsync
will be triggered in next rpc loop. The restart time is
becoming longer and longer.

Adds a default step to update the port to reduce
the probability of RPC timeout.

Related-Bug: #1813703
Related-Bug: #1813704
Related-Bug: #1813706
Related-Bug: #1813707

Change-Id: Ie37f4a4869969e235ce16b73cdfcbdc98626823e"
13a2f70024e9a35c0ffc3142a23d9381d7c64d10,2019-04-02 17:12:23+02:00,"Switch all grenade jobs to be non voting and non gating temporary

Until related bug will not be fixed, grenade jobs are failing quite
often. Lets make them non voting to make our life easier.

This can be reverted when related bug will be fixed.

Change-Id: Iefe8d6ab2eea3e04e40cbf4ffaf0c646b51834c4
Related-Bug: #1820892"
20743350b9b40fd7a2cff074bb2c877ea36c5914,2019-04-02 17:56:48+01:00,"Allow provider net attr in update if no change

If provider net attributes are in update request body,
do an additional check to see if the values are actually
different. Only raise exception if values are different.

Closes-Bug: #1822100
Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>

Change-Id: I4ac11299375d1d3a7d2013f1fdc1742920d884a9"
8cc480bd01d21f05296c77db231b706a7dc5b475,2019-04-03 07:20:54+00:00,"Set HA failover bridges veth pair devices UP

The test bridge veth pair devices is not up which cause the
VRRP advertisement packet can not pass to each HA port. Then
multiple master router is up. This patch just sets the veth
pair devices up.

Closes-Bug: #1819160
Change-Id: I0e0d0311d73bce83d3c7341e7a0167917818b1ff"
531fdc336b1b6b74de1b148b0dfe9eebd9e5cdc3,2019-04-03 13:10:00+00:00,"Mock OVSBrdge.clear_minimum_bandwidth_qos in fullstack tests

This function will not be executed when the OVS agent is started,
in order to keep QoS and Queue registers in OVS BD created by other
tests.

Change-Id: I054510403a4f46544ff78ee2f6babb1247726553
Closes-Bug: #1819125"
fa5e9c6fabb8e3f2e16646a87ca29c754e7f8c7a,2019-04-03 14:52:39+01:00,"Format generated MAC addresses using eui48.mac_unix_expanded

In Ml2Plugin.create_port_bulk, the MAC generated using netaddr.EUI
have the following format:
  ""XX-XX-XX-XX-XX-XX""

In order to make them more compatible with other systems, the
following format is more appropiate:
  ""00:01:23:45:67:ab""

eui48.mac_unix_expanded formater will add leading zeros if needed.

Change-Id: Ice382c0b4738a5a2576a3a4b151059715f106b40
Closes-Bug: #1822999"
dd95246fbe584c3008af32464d90b41fb2d9f888,2019-04-03 16:35:10-04:00,"Ensure that bulk port dicts have unix-style MAC addresses

The bulk port code uses the Port OVO object, which encodes MAC address
as a netaddr.EUI object.  The default string representation for a
netaddr.EUI object is the standard IEEE EUI-48 format
(""XX-XX-XX-XX-XX-XX"") [1].  Having MAC addresses in that format breaks
the midonet gate, so revert to UNIX standard mac addresses
(""xx:xx:xx:xx:xx:xx"").

[1] https://netaddr.readthedocs.io/en/latest/tutorial_02.html#formatting

Change-Id: I2d2727335c347accdeb39cbac5151722e8a3339c
Closes-Bug: #1822999"
afbbec83a2578aac6aa0f16c205c5da3a788969b,2019-04-04 14:30:35+01:00,"Don't pass None arg to neutron-keepalived-state-change

The original fix for bug 1818614 added two new cli args
when spawning neutron-keepalived-state-change but if
e.g. self.agent_conf.AGENT.root_helper_daemon is unset
then ""None"" string is passed which breaks the
neutron-keepalived-state-change daemon.

Change-Id: I4afcdbbf2f3d2dafcad241ba3fc0778b52b8fc85
Related-Bug: #1818614
Related-Bug: #1823038"
a39bc9758cc713d46092101475ac4edd404f93f5,2019-04-04 15:34:52+01:00,"Join on explcit relationship paths

The join() in get_router_for_floatingip() is joining from entity
to entity without an explicit ON clause which creates an ambiguous
situation. SQLAlchemy 1.3 guards against this now, so use the
real relationship-bound path so that the ORM does not need to guess.

This mock replicates the original query without the
""gw_port.device_owner == DEVICE_OWNER_ROUTER_GW"" filter.

Error [1] found in [2].

Based on [3].

[1] http://paste.openstack.org/show/748825
[2] https://review.openstack.org/#/c/649508
[3] https://review.openstack.org/#/c/642117

Change-Id: I7e12e2a2b6f9e8eb2233819f41d1065c95f0d552
Closes-Bug: #1823059"
fb6094fe8ddf6e201938c028c4bf29c472e4a465,2019-04-04 13:12:23-06:00,"move neutron only common constants to private module

Almost all of neutron.common.constants is rehomed into
neutron_lib.constants now and as per the discussion in [1] it seems
most folks think the remaining constants should stay in neutron as they
are only used internally within neutron.

This patch moves the neutron only neutron.common.constants into a
private neutron.common._constants. The former will be removed once we
consume the final constants from neutron-lib.

[1] https://review.openstack.org/#/c/647807/

Change-Id: I2d65f8fcfa08984ccf60c4d023f9a9d72b89d79c"
9bbe9911c41a1843b771a2dbd83b759b256f2227,2019-04-04 14:10:26-06:00,"remove neutron.common.constants

All of the externally consumed variables from neutron.common.constants
now live in neutron-lib. This patch removes neutron.common.constants
and switches all uses over to lib.

NeutronLibImpact

Depends-On: https://review.openstack.org/#/c/647836/
Change-Id: I3c2f28ecd18996a1cee1ae3af399166defe9da87"
84ba64a6a6ede880fe3d399743343236946369fb,2019-04-05 10:26:36+02:00,"Fix error 500 during segment range creation

When new network segment range is created for ""vlan"" network,
specify physical network is required.
It wasn't checked so there was ugly error 500 returned to the user
and ugly stacktrace in neutron logs.

Now it is validated and error 400 with proper description of
what is missing is returned.

Change-Id: Id3809a62f0e5d74949b34788b08af2e2aec879d8
Closes-Bug: #1823297"
8f35331c918f83381951fc4367f43b2805d556ef,2019-04-06 09:06:14+08:00,"Check master/backup router status in DVR functional tests

When two routers are created at the same time, we can't assume the
status of each one. Instead of this, the status of each router is
first checked and then compared to the other router status.

Change-Id: If20a3a414986ea29fbfd50616761c14e5b249b2c
Closes-Bug: #1819160"
c69a87405af6b632a3edd9c6fe5ee63a5bc07eb1,2019-04-06 09:08:06+08:00,"Give some HA router case specific resources

1. give each HA failover case an independent vrrp_id
2. give each HA port an independent IP address, so the
interface IPs for router HA ports will be:
    169.254.192.100 and 169.254.192.101
    169.254.192.102 and 169.254.192.103
    169.254.192.104 and 169.254.192.105
    169.254.192.106 and 169.254.192.107
VIP of each case will be:
    169.254.0.10/24
    169.254.0.11/24
    169.254.0.12/24
    169.254.0.13/24
    169.254.0.14/24

Closes-Bug: #1819160
Change-Id: I1216d96af40449ec16a852cc1f6c4f15c85f4546"
58ce96a7c296961e22a2ea9d4e71ec629bddd4fa,2019-04-07 17:09:04+00:00,"Decouple local VLAN internal management and OVS enforcement

The internal local VLAN management is now an independent function,
ready to be used in follow-up patches.

Change-Id: I83f6983c444c0426b65f56130fa027285691567b
Partial-Bug: #1806052"
c760a83a5d9111e48333e1aff5f6dd043cb9e68f,2019-04-08 11:07:27+09:00,"Fix a KeyError

Fix a KeyError introduced by the recent change. [1]
The unit tests are taken from the PS1 of the original patch. [2]

Note that super's get_network doesn't fill in provider network
attributes. The ml2 version does it by explicitly calling
self.type_manager.extend_network_dict_provider.

[1] https://review.openstack.org/#/c/648522
[2] https://review.openstack.org/#/c/648522/1

Closes-Bug: #1823294
Co-Authored-By: Harald Jensås <hjensas@redhat.com>
Change-Id: I17b4df558cc7fa370a5f930746030cead6a895d9"
ee72ded7ed1722ece8cc9d37a7df6d38ac487e99,2019-04-09 14:37:05+00:00,"Revert ""Switch all grenade jobs to be non voting and non gating temporary""

This reverts commit 13a2f70024e9a35c0ffc3142a23d9381d7c64d10.

Related bug is fixed so we can switch grenade jobs to be voting again.

Change-Id: I027208171a85ea7f2ce8b61d46121f507e826a34
Related-bug: #1820892"
6ded6d217adf61216fb10383d0150c966b92f11c,2019-04-09 15:08:32-04:00,"DVR: Correctly change MTU in fip namespace

The code that ensures the fpr/rfp veth pair exists
between the qrouter and fip namespace was only setting
the mtu of the devices if it had to create them.  Set
it all the time to support the mtu being changed.

Change-Id: I176b5f4d4f12cf09f930e2c1944e98082a09bcc6
Closes-bug: #1823798"
b7458b615972dc6ff93a12abbd0a8f32e8da55eb,2019-04-10 07:56:07+00:00,"Handle DBConnectionError in skip_if_timeout decorator

In some cases it may happen that when db test will fail due
to timeout oslo_db.exception.DBConnectionError will be raised
instead of sqlalchemy_exc.InterfaceError.
This patch adds handling such case in skip_if_timeout decorator.

Change-Id: I7350d5c884784317c94ff42f28526065ff399b40
Related-Bug: #1687027"
a8d0f557d504957aeb91f451105cca9eee2d6adb,2019-04-11 10:19:21+02:00,"Choose random value for HA routes' vr_id

HA routers are using keepalived and needs to have virtual_router_id
configured. As routers which belongs to same tenant are using same
ha network, those values have to be different for each router.

Before this patch this value was always taken as first available value
from available_vr_ids range.
In some (rare) cases, when more than one router is created in parallel
for same tenant it may happen that those routers would have same vr_id
choosen so keepalived would treat them as single application and only
one router would be ACTIVE on one of L3 agents.

This patch changes this behaviour that now random value from available
vr_ids will be chosen instead of taking first value always.
That should mittigate this rare race condition that it will be (almost)
not noticable for users.

However, proper fix should be probably done as some additional
constraint in database layer. But such solution wouldn't be possible to
backport to stable branches so I decided to propose this easy patch
first.

Change-Id: Idb0ed744e54976dca23593fb2d7317bf77442e65
Related-Bug: #1823314"
1c1f17688216f221abbcb6b2f598d0f5c0e1a877,2019-04-11 09:37:46+00:00,"Avoid fullstack QoS tests to handle other test ports

In order to isolate the concurrent execution of fullstack QoS tests,
the function QosAgentExtension._process_reset_port() is mocked to
avoid any port reset created by other test.

Change-Id: Ib78098387e90b6c315d3e969004f5786ace8696e
Closes-Bug: #1824138"
de810e04fb1d243ad4f82f6b35a7821fefe0a2cc,2019-04-11 15:57:31-04:00,"Use '-p ip' instead of '-p 0' with conntrack

The conntrack command does not allow '-p 0' as an argument,
but does allow it's equivalent '-p ip'.  Use it instead
so it doesn't generate an error.

Change-Id: Ica69eb85a6835952904a6390bb8a31e6afdecf69
Closes-bug: #1820744"
30f35e08f92e5262e7a9108684da048d11402b07,2019-04-12 10:12:04-04:00,"Packets getting lost during SNAT with too many connections

We have a problem with SNAT with too many connections using the
same source and destination on the network nodes.

In addition we can see in the conntrack table that the who
""instert_failed"" increases.

This might be a generic problem with conntrack and linux.
We suspect that we encounter the following ""limitation / bug""
in the kernel.

There seems to be a workaround to alleviate this behavior by
setting the -random-fully flag in iptables for port consumption.

This patch fixes the problem by adding the --random-fully to
the SNAT rules.

Change-Id: I246c1f56df889bad9c7e140b56c3614124d80a19
Closes-Bug: #1814002"
957eca96f4413dfbd62878f164f2eeb7af391b89,2019-04-17 11:25:41-06:00,"delete common_db_mixin

The functionality within neutron.db.common_db_mixin is available via
neutron-lib APIs. This patch removes common_db_mixin and updates any
uses of it to use neutron-lib instead.

Depends-On: https://review.openstack.org/#/c/636159/

NeutronLibImpact

Change-Id: I2388f90b37abb09408809dda8c21da551bcd94bb"
ccf76c36bb508a8cfd4e0f3a24fc1de7a77dc307,2019-04-18 01:04:16+00:00,"Add log file for neutron-keepalived-state-change

neutron-keepalived-state-change may not start but have no method
to find out why. This patch adds the log file for it.

Change-Id: I688a6e6d0ac42c00d87571484f726e0eae091675
Related-Bug: #1822155"
ba600a32a542ffcb95b84e5e413f1595c25ca7dd,2019-04-18 16:38:35+02:00,"Don't count ports with inactive bindings as serviceable dvr ports

In case of live migration, binding of port on src host is first switched
to be INACTIVE and then L3 agent should remove qrouter namespace from
compute node if that was last port connected to this router on host.
Because of bug which didn't check if port which is on host has ACTIVE
or INACTIVE binding, router namespace wasn't cleaned properly.
Now it is cleaned as only ports with ACTIVE binding are count
as serviceable ports on compute node.

Change-Id: I01173ad64a19fc05a888c601b81ec097d579a7cf
Closes-Bug: #1825205"
14c76d31814b8e696349a1c00ba65ef2919b48af,2019-04-23 07:55:22+04:00,"Move subnet postcommit out of transaction for bulk create

For auto-address IPv6 subnets postcommit has update port action
if the net already has ports. This results in
""cannot be called within a transaction"" error for bulk IPv6 subnet
create.

Closes-Bug: #1822582
Change-Id: Ia32ec4c11c0793e7df07dcce19c122b3c7f865e1"
88cca4cabef1ac6d86700f03ce4fad1c49e35070,2019-04-23 13:54:11-06:00,"use trunk constants from neutron-lib

The trunk constants now live in neutron-lib. This patch consumes them
by removing neutron.services.trunk.constants and using them from
neutron-lib instead.

Depends-On: https://review.opendev.org/#/c/650372/

NeutronLibImpact

Change-Id: I4445c44c7e321d0fc35976d4d855c148bb9a3b18"
749b33e41bc905a3bec9d356c78a477e9b8aa87d,2019-04-24 07:39:15+00:00,"Check in ""_update_segmentation_id"" that the mech_driver has an agent

In [1] it is assumed that all mechanism drivers have an agent, but the
mech driver API [2] doesn't enforce it. VIF types will be retrieved
only from those mechanism drivers with an associated agent.

[1]https://review.openstack.org/#/c/633165/20/neutron/plugins/ml2/plugin.py@814
[2]https://github.com/openstack/neutron-lib/blob/stable/stein/neutron_lib/plugins/ml2/api.py#L37

Change-Id: I5c334f31259871ed5251d5d4a2ba8cae36bd2355
Closes-Bug: #1824346"
d20c73cd2ca05240017fc14441d9fb17ef91955d,2019-04-24 10:23:26+00:00,"[Doc] Add note for port forwarding floating IP QoS

Now all floating IPs will have QoS functionality, so
adds the doc to users/operators.

Change-Id: I39c6bfe5c3ee5d0937c5b19deada0a8dcf1716df
Related-Bug: #1796925"
cfaf5cc1e19a88a9e272967d93b89279284af12c,2019-04-24 14:21:13+00:00,"Rehome provider_network_attribute_updates_supported to API definition

Rehomed provider_network_attribute_updates_supported to
plugins.ml2.api.MechanismDriver, in order to be inherited in other
mechanism drivers.

Related-Bug: #1823865

Change-Id: I9be175aa2334111a17d8fec874d2331e23923837"
b1b8a438fe3cdc422b8deb61548f47d383ee2fe8,2019-04-25 00:39:11+00:00,"Revert iptables TCP checksum-fill code

To fix bug 1722584 we inserted a checksum-fill rule for
metadata proxy replies.  Recent kernels have disabled
this support for TCP because it was invalid, and
supposedly not doing anything, so let's get ahead of
things and remove the code.

Kernel mailing list discussion is at
https://lore.kernel.org/patchwork/patch/824819/

Partially reverts ed1c3b021751273e427d47fcf544c56bdabf97bb

Change-Id: Ib7cc8f82a91972f17987fb95130edc4069d9423f
Related-bug: #1722584"
9d60716cf1d61286a684f20ef8e05c77a0df5aa3,2019-04-25 09:09:27+08:00,"Add update_id for ResourceUpdate

Add a unique id for resource update, then we can calculate
the resource processing time and track it.

Related-Bug: #1825152
Related-Bug: #1824911
Related-Bug: #1821912
Related-Bug: #1813787

Change-Id: Ib4d197c6c180c32860964440882393794aabb6ef"
5301ecf41b18e83abdc3c828cd64ce0111f9fcd1,2019-04-25 02:34:42+00:00,"Don't add arp responder for non tunnel network port

When the vlan and vxlan both exist in env, and l2population
and arp_responder are enabled, if we update a port's ip address
from vlan network, there will be arp responder related flows
added into br-tun, this will cause too many arp reply for
one arp request, and vm connections will be unnormal.

Closes-Bug: #1824504
Change-Id: I1b6154b9433a9442d3e0118dedfa01c4a9b4740b"
cf8f3326be14d30456b20e4d1a55a36762daa550,2019-04-25 18:50:15+01:00,"Get ports query: extract limit and use it only at the end.

_get_ports_query add filters after a get_collection. If limits are
passed to applied to the query, then no additional filter is allowed.
This patch extracts an eventual limit argument, to apply it only after
the additional filters.

Change-Id: I83394394860d10e27379efe0356d0fa9c567140e
Closes-Bug: #1826186"
ec875b42b6e92300093c895668532966de9e1327,2019-04-26 10:22:50+09:00,"Add router_factory to l3-agent and L3 extension API

Currently, most implementations override the L3NatAgent class itself
for their own logic since there is no proper interface to extend
RouterInfo class. This adds unnecessary complexity for developers
who just want to extend router mechanism instead of whole RPC.

Add a RouterFactory class that developer can registers RouterInfo class
and delegate it for RouterInfo creation. Seperate functions and variables
which currently used externally to abstract class from RouterInfo, so that
extension can use the basic interface.

Provide the router registration function to the l3 extension API so that
extension can extend RouterInfo itself which correspond to each features
(ha, distribtued, ha + distributed)

Depends-On: https://review.openstack.org/#/c/620348/
Closes-Bug: #1804634
Partially-Implements: blueprint openflow-based-dvr
Change-Id: I1eff726900a8e67596814ca9a5f392938f154d7b"
dbe8d330727ec3ed4822124c454e00e8e3055b7d,2019-04-26 15:03:26+00:00,"Only TC class ""htb"" is supported

In tc_lib.add_tc_policy_class [1], only ""htb"" type is supported.

[1]https://opendev.org/openstack/neutron/src/branch/stable/stein/neutron/agent/linux/tc_lib.py#L379

Change-Id: I2cb809c069c0e8cdd289b9977cb335ef3e2e3931
Closes-Bug: #1826557"
4082e280c8574708ec644f9eaa1cdb4a2169141c,2019-04-26 15:26:51+00:00,"Not process port forwarding if no snat functionality

If dvr router is processed on a 'dvr_snat' node but without snat
functionality, the port forwarding should not be processed on
this host since the snat-namespace will never be created. For
instance, the isolated DHCP node which only have the namespace
of qrouter. The l3 agent will process this router, but should
not do any port forwarding actions.

Change-Id: I6ecd86089643f4eb98865a8d8d0dec4359564026
Closes-Bug: #1825088"
2b9655a78474a8cbec862c086bece4b074ade696,2019-04-27 16:32:48+01:00,"Install doc: append provider network creation link

Creating the provider network is a necessary step for option 1. The step
is only described in a document in the general installation guide.
This patch links this document at the end of every option1 controller
installation document

Change-Id: I33713aec50e0646a3b42b9d202ac730d3a0578a5
Close-Bug: #1824788"
8f2fc1ee5ee0d5cf8f412fa510adb87f3ed5f4b2,2019-04-28 11:43:22+08:00,"List ha router count should not include dvr local router

Due to the class inheriting order the dvr local router will
be counted to the l3 agent restart query. This will cause
l3 agent run the ha port down action. This patch renames
the function to avoid that.

Closes-Bug: #1825787
Change-Id: Id965a6140ae9a06e0b6707800933cbc14bf5bf3f"
5d099f17ebb95c53c69ed1777d8077f590bd5aeb,2019-04-29 07:52:18+00:00,"Add namespace support for ""bridge"" commands

""bridge"" commands executed inside a namespace will be needed
initially to test the TC filter for VXLAN traffic. Those tests
will create two namespaces with VXLAN interfaces in order to check
the functionality of this new TC filter.

Related-Bug: #1560963
Change-Id: I3553b89fc0436c9cf83c66ab447ba4b4a6268ee1"
130dad25b67d7a0bd52fdcbda9ba24e64865f9ba,2019-04-29 09:44:54-06:00,"bump neutron-lib to 1.26.0

Bump up the required and lower constraint for neutron-lib to use the
latest release 1.26.0. Also see https://review.opendev.org/#/c/653887/

Change-Id: I55344c117793ddce91ad95401e1306d6605ee586"
3a4db946fdb0114b5c02f283b55c8679c159848e,2019-04-29 17:33:41+00:00,"""add_tc_policy_class"" must always assign a default value to ""min_kbps""

This method calls Pyroute2 library. This library needs always a defined
value for ""rate"" (minimum bandwidth). The default value assigned should
be 1 (kbps).

Change-Id: I07a8e70248892b7fb4590fdec232fa24d8a937e6
Closes-Bug: #1826565"
0dc730c7c0d3f0a49dee28d0d6e7ff9020d94443,2019-05-01 15:50:48+08:00,"Populate binding levels when concurrent ops fail

Concurrent calls to _bind_port_if_needed may lead to a missing RPC
notification which can cause a port stuck in a DOWN state. If the only
caller that succeeds in the concurrency does not specify that an RPC
notification is allowed then no RPC would be sent to the agent. The
other caller which needs to send an RPC notification will fail since the
resulting PortContext instance will not have any binding levels set.

The failure has negative effects on consumers of the L2Population
functionality because the L2Population mechanism driver will not be
triggered to publish that a port is UP on a given compute node. Manual
intervention is required in this case.

This patch proposes to handle this by populating the PortContext with
the current binding levels so that the caller can continue on and have
an RPC notification sent out.

Closes-Bug: #1755810
Story: 2003922
Change-Id: Ie2b813b2bdf181fb3c24743dbd13487ace6ee76a"
c6db2a0e40b336039d722eb4a10aa69d89f5b1d1,2019-05-02 17:17:27+00:00,"Remove deprecated SR-IOV devstack file

File [1] functionality is deprecated and not used anymore in
devstack.

Along with this file, the function ""configure_ml2"" [2] should be
removed. This function is not used anymore [3].

[1]https://opendev.org/openstack/neutron/src/branch/stable/stein/devstack/lib/ml2_drivers/sriovnicswitch
[2]https://opendev.org/openstack/neutron/src/branch/stable/stein/devstack/lib/ml2#L9
[3]http://codesearch.openstack.org/?q=configure_ml2&i=nope&files=&repos=

Change-Id: I835a30244c505876c1b686ceb8c32b340c12b460
Closes-Bug: #1827089"
252acc069465febdbd7b9662695cd11c48a07e1c,2019-05-03 12:50:16-04:00,"Update guest IPv6 information in docs

Based on some recent questions on IPv6 address generation in
guests, update the relevant section in the docs to make it
more up-to-date.

Partial-bug: #1827489

Change-Id: Ibbf4d5458293c9c0269f6a80f5519caa175994ec"
9318fb8bb930a65cb0b388fd4a40fc83183d9199,2019-05-04 19:19:53+02:00,"Fix creating policy rules from subattributes.

In case of policy rule checks for rules like e.g.
""create_port:fixed_ips:subnet"" couldn't be created to be
passed to policy enforcer because policy module could only
create rule checks for subattributes which are dict types.

With this patch checks for such rules can be created also for
attributes which are list of dicts, like e.g. fixed_ips in port
resource.

Change-Id: I02fffe77f57a513d2362df78885d327042bb8095
Closes-Bug: #1822105"
45957f12c897f6dcdf3676649a28dac866450afd,2019-05-05 10:34:09+08:00,"Keep HA ports info for HA router during entire lifecycle

Once HA port is set, it must remain this value no matter
what the server return. Because there is race condition
between l3-agent side sync router info for processing
and server side router deleting.

This patch adds a helper function for every ha_port set
action. If the ha_port is not None, it will always stay
with original value.

Closes-Bug: #1826726
Change-Id: I96a088d25048be02a9c5b12c1d087df075b36fc4"
d007f2757a04024cc6a5eecb2d49fb24b63da43e,2019-05-05 10:50:51+03:00,"Removing unused ""configure_ml2"" function leftover.

The function ""configure_ml2"" [1] was removed in [2] commit.

[1]https://opendev.org/openstack/neutron/src/branch/stable/stein/devstack/lib/ml2#L9
[2]https://review.opendev.org/#/q/I835a30244c505876c1b686ceb8c32b340c12b460

Change-Id: I00fc2d2609070a8ab27cbd0892e0b1f871f782d0"
3d99147e732ab4cdad0b8243e5fabb6a8954aa72,2019-05-07 16:33:44+08:00,"Ensure dvr ha router gateway port binding host

There are some extreme conditions which will result the unbound
router gateway port. Then all the centralized floating IPs will
not be reachable since the gateway port was set to 4095 tag.

This patch adds the HA status to the router related port
processing code path. If it is HA router, the gateway port
will go to the right HA router processing code branch.

Closes-Bug: #1827754
Change-Id: Ida1c9f3a38171ea82adc2f11cb17945d6e2434be"
039691220817db3519149b5e2fd2607365f3d8af,2019-05-07 11:31:25+02:00,"Fix handling of network:shared field in policy module

Some policy rules e.g. for create_port are using rule ""network:shared""
in which ""shared"" field is related to network resource instead of
port directly.
Because of that, ""shared"" was missing from ""target"" in policy
enforce module thus validation wasn't working properly for such rule.

This patch fixes it by adding to FieldCheck checker possibility to
get network object and use its ""shared"" field to validate policy.

Change-Id: I56c99883fce40c37a5ee26e6e661c0cc0783c42f
Closes-Bug: #1808112"
d2d57371dc7dd35b1f66eb6390d96dfc512eeca1,2019-05-10 11:24:18+00:00,"Bump Pyroute2 version to 0.5.5

Pyroute2 is modifying the default logger, adding NullHandler to it. If
the logger is not properly configured, like in any service or agent
spawn in Neutron, the only handler will be NullHandler. This prevents
from rendering the message passed, as when StreamHandler is used.

This issue is present only in version 0.5.4 and 0.5.5. Current Pyroute2
master version implements a new logger which removes this problem.

[1]https://github.com/svinota/pyroute2/blob/0.5.5/pyroute2/__init__.py#L78-L79

Change-Id: Ic89d8503e9d1a7f622f0c3a148bf78766b92ed08
Related-Bug: #1811515"
9bc45d70c6ba6e6ab02db30a843004cbb57ddc3f,2019-05-10 11:24:44+00:00,"Error in ""tc_lib._handle_from_hex_to_string"" formatting

""tc_lib._handle_from_hex_to_string"" should print major and minor values
in hex format, not in decimal format:
  0xMMMMmmmm -> ""M:m""
  0x123A456B -> ""123A:456B""

Change-Id: I91eb5d9fc58e8233c48b6aabba772cd6ff65a156
Closes-Bug: #1826570"
8db230ab08da807e4d28b0fa559d9d97db580d0e,2019-05-10 11:24:56+00:00,"FdbInterfaceTestCase interface names should be randomly generated

Change-Id: Ic97f9563ef02326780574b39395911d23d94dfcc
Closes-Bug: #1828363"
82782d37639fab97e445e4bbb4daeb85dc829fcd,2019-05-10 13:00:38+00:00,"Make sure the port still in port map when prepare_port_filter

The current code will remove the port from sg_port_map, but then it
won't be added into the map, when we resize/migrate this instance,
the related openflow won't be deleted, this will cause vm connectivity
problem.

Closes-Bug: #1825295
Change-Id: I94ddddda3c1960d43893c7a367a81279d429e469"
5c433a027daab2419d974820589205253871885e,2019-05-10 13:14:01+00:00,"[DHCP] Don't resync network if same port is alredy in cache

Sometimes when port is created on dhcp agent's side, it may happend
that same port is already in network cache.
Before this patch if port with same IP address was already in cache,
resync was rescheduled because of duplicate IPs found in cache.

Now resync will be scheduled only if duplicate IP address belongs to
port with different MAC address or different id.

Change-Id: I23afbc10725f5dc78e3c63e6e505ef89ba8dc4a5
Closes-Bug: #1824802"
dcdb6e1c8aea8fd0f425097c9db0a140a2cf6104,2019-05-10 13:20:29+00:00,"Fixes agent gw port creation

This prevents agent gw ports created in cases where the fip is not
serviced by a dvr enable router. Also, when the router is not DVR
enabled, deleting the gw port becomes a problem even after the router
attachments to the external network are deleted. This fix creates the
agent gw port only if the router associated with the fip is distributed.

Closes-Bug: #1810349
Co-Authored-By: Allain Legacy <allain.legacy@windriver.com>
Co-Authored-By: Matt Peters <Matt.Peters@windriver.com>
Co-Authored-By: Matt Welch <matt.welch@intel.com>

Change-Id: Ibcf087136e30535678c7600bac6ce4d621afe830
Signed-off-by: Enyinna Ochulor <enyinna.ochulor@intel.com>"
d83bb4f160ed7b85a6be8ae490dba1d9ec8c5561,2019-05-10 13:32:49+00:00,"Add skip_if_timeout to additional MySQL migration test

Test test_forbid_offline_migrations_starting_newton from
neutron.tests.functional.db.test_migrations.TestModelsMigrationsMysql
module can also fail because of db timeouts when are running on
overloaded test node.
To not fail job because of that, this patch adds skip_if_timeout
decorator to this additional test.

Change-Id: Ia255d331cbb24e1fdd12212580e85423da242eae
Related-Bug: #1687027"
b8a18dc22a8d3b5fa4d5915399feea88d4ceed9f,2019-05-10 15:41:29+02:00,"Add info about nf_conntrack_proto_gre when ovs fw is used

When openvswitch firewall driver is used, it is required to load
nf_conntrack_proto_gre kernel module to make GRE tunnels from VM to VM
working properly.
This patch adds such info in ovs firewall documentation as it should be
deployer decision to load or not load this module.

This patch also adds sanity check which checks if nf_conntrack_proto_gre
module is loaded or not, and can warn user when this module is not
loaded.
It also adds loading of this kernel module in neutron devstack plugin.

Change-Id: Ic97ca00c804f0a540ee0dc53d9e4e07bf8410869
Closes-Bug: #1828053"
0f471a47c073eb0cf2ed68c30482e1ae71ff6927,2019-05-10 15:37:27+00:00,"Async notify neutron-server for HA states

RPC notifier method can sometimes be time-consuming,
this will cause other parallel processing resources
fail to send notifications in time. This patch changes
the notify to asynchronous.

Closes-Bug: #1824911
Change-Id: I3f555a0c78fbc02d8214f12b62c37d140bc71da1"
8f6939b4f3651c9cd0609fd5c2960681f52dd47f,2019-05-13 12:04:25+02:00,"Change curl to osc for listing resource provider inventories

Change-Id: I4ffca16ebd1998335132747482e85dbb18be70e7
Closes-Bug: #1827418"
09ee9347864d731ce7ccf241178559815e82f57c,2019-05-13 21:43:07+00:00,"Use --bind-dynamic with dnsmasq instead of --bind-interfaces

Dnsmasq emits a warning when started in most neutron deployments:

dnsmasq[27287]: LOUD WARNING: use --bind-dynamic rather than
    --bind-interfaces to avoid DNS amplification attacks via
    these interface(s)

Since option --bind-dynamic is available since dnsmasq 2.63
(https://github.com/liquidm/dnsmasq/blob/master/FAQ#L239) and
we require 2.67, change to use this option instead.

Change-Id: Id7971bd99b04aca38180ff109f542422b1a925d5
Closes-bug: #1828473"
872dd7f48400f0ee059876b01d4034aa75f97787,2019-05-14 10:05:17+00:00,"Use created subnet in port generator in ""test_port_ip_update_revises""

We are hitting sometimes a problem in ""test_port_ip_update_revises"" [1].
This happens because the port created doesn't belong to the previously
created subnet. We need to enforce that the port is created in the
subnet specifically created in this test.

[1]http://logs.openstack.org/69/650269/12/check/openstack-tox-lower-constraints/7adf36e/testr_results.html.gz

Change-Id: I399f100fe30b6a03248cef5e6026204d4d1ffb2e
Closes-Bug: #1828865"
8addd662b5e8de5a905c9022347ab4cb2eb3fd70,2019-05-14 14:52:15+02:00,"Update sphinx requirements

Requirement check is failing on sphinx.

http://logs.openstack.org/87/658787/3/check/requirements-check/ce69c94/job-output.txt.gz#_2019-05-13_18_52_15_176388

Change-Id: I7b02523b7135b2f2977c1f5ac16cb79fd41b8ef5"
94bc403078b1e5d2cddc697fc59b7f1d2d8a6045,2019-05-15 14:19:34+01:00,"ML2 plugin: extract and postpone limit in port query

as with https://review.opendev.org/#/c/656066/ if limit is applied in
any place other than at the end of the filters, sql alchemy will return
an error, and possibily we could return less result than intended.

Change-Id: I9a54ae99d2d5dfda63cb0061bcf3d727ed7cc992
Closes-Bug: #1827363"
4353d1b06ce4c966161d5fd4aeff81b93f9e2e22,2019-05-15 13:52:59+00:00,"Revert ""Bump Pyroute2 version to 0.5.5""

This reverts commit d2d57371dc7dd35b1f66eb6390d96dfc512eeca1.

Change-Id: Ic04adae9cd27ce18324d5a2b2ec1966b38eddc2b
Closes-Bug: #1829239"
aacd11ab9f8f24291f369d23662b0cb6b3fe43e3,2019-05-15 17:22:48+00:00,"Remove rootwrap configuration from neutron-keepalived-state-change

New IP command introduced by Ie3fe825d65408fc969c478767b411fe0156e9fbc
requires only privsep initialization. This patch removes the prisep
error FailedToDropPrivileges when executed under neutron-rootwrap.

Closes-Bug: #1823038

Change-Id: I6cde3c9dae7ffdccce49e88c3c79d1c379f291cf"
2c1098b3afb4f5d7cd1d10eaa722652624e6bb74,2019-05-15 19:18:52-04:00,"Use six.viewkeys instead of dict.keys to avoid py2 to py3 problems

This change fixes an 'RuntimeError: dictionary changed size during
iteration' error that is raised because of different behaviour between
python2 and python3. We use the six library to ensure that the behavior
is compatible across versions.

Change-Id: I0723ae10825e1e2d86789627895e3286d8c97602
Resolves-Bug: #1829304"
38daf9eaae8538c74933b19c952ad0612751c027,2019-05-16 13:45:56+04:00,"Define orm relationships after db classes

This is to fix race conditions on neutron server init.
Please see bug for details.

Change-Id: I943e6397319b9a4a7fc1a5b3acb721920ddffb02
Partial-Bug: #1824299"
59e1796bd2ab04eef52bc1d5a4655edcd925bbf7,2019-05-16 13:38:59+00:00,"Retrieve statistics from TC policy classes

Those statistics will be needed initially to test the TC filter
for VXLAN traffic. Those tests will create several classes on the
same interface with only one filter applied, diverting the traffic
to only one of those classes. Once sample traffic matching the
filter is injected, only the selected class should increase the
packet/byte counters.

Related-Bug: #1560963
Change-Id: Ifc95051b67c031c0dfe209751df3d35c47d61148"
4597dfc136ec8f560ad93d68c65ae51504dbf7ac,2019-05-17 10:15:45+02:00,"Add RHEL8 platform-python to the L3 rootwrap filters

In L3 rootwrap filters we have filter to kill
neutron-keepalived-state-change process.
As this process is run under python, in commit [1] we added
KillFilter rules to allow kill various Python processes.

In RHEL8 there are ""system"" and ""user"" python versions provided.
It is called ""platform-python"" and is placed in /usr/libexec dir.
Details about it are in [2].

So this patch adds to neutron-keepalived-state-change Kill filters also
/usr/libexec/platform-python and /usr/libexec/platform-python3.6 to
allow killing this process on RHEL8 based OS.

[1] https://review.opendev.org/#/c/636710/
[2] https://developers.redhat.com/blog/2018/11/14/python-in-rhel-8/

Change-Id: Iafdaf2c1a6e5c1f5de856ff99e04c72c911c5123"
d4d2fbc30df45eadea724de8698023ec5ffbb6ba,2019-05-17 17:56:45+02:00,"Fullstack test for placement sync

Fullstack test for placement reporter service plugin. To test it in
fullstack environment a new stupid placement process is started which
answers to placement REST API requests.

Change-Id: I9dd9f6c9e8c8fcf1be1e91d49a59a00c2eb24026
Depends-On: https://review.openstack.org/638666
Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)"
540d00f68ecf1c11b0296922f965ef60d15d1a86,2019-05-17 16:08:21+00:00,"Make OVS controller inactivity_probe configurable

This parameter applies to the OVSDB Controller table when the
native openflow driver is used. There are reports that increasing
it can reduce errors on busy systems. This patch also sets the
default value to 10s which is more than the OVS default of 5s.
See the ovs-vswitchd.conf.db man page for full description.

Change-Id: If0d42919412dac75deb4d7f484c42cea630fbc59
Partial-Bug: #1817022"
6360084528e42c62648db0b8143e54043c30da22,2019-05-17 21:00:02-07:00,"Correct fwaas_v2 scenario in neutron

The neutron command line can not create fwass_v2 resources,
and so replace it with the openstack command line.

Change-Id: Iad324fa12334f53b1f36c65103a702c3a961dabc
Closes-bug: #1829357"
5f5918df8b800aeeb490f80abce790b2799a0417,2019-05-20 08:58:48+00:00,"Use openstack-python3-train-jobs template

This goal is to implement the process set out in the 2018-10-24 Python
Update Process TC resolution[1], for the Train cycle to ensure unit
testing is in place for all of the Tested Runtimes for Train[2].
In practice, this generally means adding unit tests for Python 3.7 and
dropping unit tests for Python 3.5.
For Neutron, which already runs py36 and py37 unit tests it generally
means switch to use the Zuul template openstack-python3-train-jobs
for Train.
Using this template will ensure that all projects that support Python3
will be tested against the agreed runtime versions, and make it easier
to update them in future.

[1]https://governance.openstack.org/tc/resolutions/20181024-python-update-process.html
[2]https://governance.openstack.org/tc/reference/runtimes/train.html

Change-Id: I41d232a10a40d97347566e189457d8044e3639db
Depends-On: https://review.opendev.org/#/c/641878/"
3ab7878384b2c2738baead86919dd77821b53807,2019-05-20 18:00:18+02:00,"Conntrack Helper -  OVO and db script

Implements the conntrack helper OVO and db layer code.
- New object 'ConntrackHelper'
- New db model
- migration db script

Related-Bug: #1823633
Change-Id: I0d9c039b260845b6544eccf63f5a2ffaa929120b"
1920a37a94b7a9589dcf83f6ff0765068560dbf8,2019-05-20 18:47:18+02:00,"Show all SG rules belong to SG in group's details

If security group contains rule(s) which were created by different
user (admin), owner of this security group should see such rules
even if those rules don't belong to him.

This patch changes to use admin_context to get security group rules
in get_security_group() method to achieve that.

Test to cover such case is added in neutron-tempest-plugin repo.

Change-Id: I890c81bb6eabc5caa620ed4fcc4dc88ebfa6e1b0
Closes-Bug: #1824248"
2bcc178be15dce850162be76a870e443eee84c47,2019-05-20 18:53:17+00:00,"Change provider network segmentation ID in OVS agent

Added the ability to change the segmentation ID of a network
with ports bound to OVS agent. The rules, both in the integration
bridge and the physical bridge, to convert the internal VLAN tag
and the external segmentation ID (external VLAN tag) are deleted
and created again with the new value. The traffic from the tenant
networks will be tagged then with the new segmentation ID.

Added get network details agent RPC call to retrieve the information
of the updated network.

Partial-Bug: #1806052

Change-Id: I69f6f3ef717c3ed40218099b1f389afd3d39bd62"
1916bc5c0627ca24e312ca55ea62c8df7eb8f158,2019-05-21 16:31:18+00:00,"Allow first address in an IPv6 subnet as valid unicast

When looking at the RFC [1], there's no mention that this can't be the
gateway address.  Permit it.

[1] https://tools.ietf.org/html/rfc4291#section-2.6.1

Change-Id: I3f2905c2c4fca02406dfa3c801c166c14389ba41
Fixes-Bug: #1682094"
bc073849b6aba62a39846b8be98b0da744caab84,2019-05-22 09:52:26+02:00,"Mark fullstack test_ha_router_restart_agents_no_packet_lost as unstable

This test is still failing quite often and we don't have root cause
yet.
Lets mark it as unstable for now to make our gate more stable for now.

Change-Id: Id7d14b0b399ce7efc32c1524ca0f38d0a2f85410
Related-Bug: #1798475"
079de324ab21bea96875c3d71eda268ec72430fa,2019-05-22 10:31:20+00:00,"Add documentation about OVO ""obj_make_compatible""

Adds new documentation about how to implement
""VersionedObject.obj_make_compatible"" when a new object version
is released and how to test it.

Change-Id: I055cf2ae493759562175f9d859d2a065458ca7e2
Related-Bug: #1828437"
494b65d951dbc03f4cebb3bc14970e54ff6adb5f,2019-05-22 18:35:52+08:00,"Optimize the code that fixes the race condition of DHCP agent.

https://review.opendev.org/#/c/236983/
https://review.opendev.org/#/c/606383/
The above patchs that resolve the race condition of DHCP agent will
result in neutron-server raise DhcpPortInUse ERROR log. And, the
second patch may result in old dhcp agent create a redundant port.

Closes-Bug: #1829332
Change-Id: If7a7ac2f88ce5b0e799c1104c936735a6cc860aa"
d10ba94d36da7ad7eb6ac9339bcac81ab169b93e,2019-05-22 13:15:03+02:00,"Log when the placement service plugin is used wrongly

Log explicitly when an invalid plugin combination is requested in the
config.

The placement service plugin cannot be used with non-ML2 core
plugins. neutron-server already exits when misconfigured like that
(when a plugin raises an uncaught exception in its __init__())
so I didn't change anything about that. This change only adds a more
explicit log message for this misconfiguration.

Change-Id: Ida1a3188f8b3145cf270d280bf942b3950c0779c
Related-Bug: #1578989
Related-Bug: #1818479"
62b2f2b1b1e2d8c0c2ffc1fd2ae9467eb2c1ef07,2019-05-22 13:49:55+02:00,"Wait to ipv6 accept_ra be really changed by L3 agent

In functional tests for L3 HA agent, like e.g.
L3HATestFailover.test_ha_router_failover
it may happen that L3 agent will not change ipv6 accept_ra
knob and test fails because it checks that only once just
after router state is change.

This patch fixes that race by adding wait for 60 seconds to
ipv6 accept_ra change.

Change-Id: I459ce4b791c27b1e3d977e0de9fbdb21a8a379f5
Closes-Bug: #1829889"
9f857631d8df2ae5c3d0e89d95958e1636e8e494,2019-05-22 15:30:46+02:00,"Add ""project_name"" variable to configure_functional_tests role

It will be useful when neutron-functional or neutron-fullstack
job will be used in stadium projects like e.g. in neutron-fwaas.

Change-Id: I73c446d43e44b8f06c93752ebf98684f165e6fcd
Related-Bug: #1804844"
67b1c4552e9a9c439de8162c2bdb2951864e75f7,2019-05-22 14:49:21-06:00,"use logapi constants from neutron-lib

Consume the logapi constants from neutron-lib by removing them from
neutron and using them from neutron-lib instead.

NeutronLibImpact

Depends-On: https://review.opendev.org/#/c/660826/
Change-Id: I55edf26598d38de34038f005b05ba3d2e96972aa"
26388a9952dcd186759b7d63a12d64a60a15ceef,2019-05-23 15:22:35+08:00,"Set neutron-keepalived-state-change proctitle

Then we can count the process correctly.

Related-Bug: #1798475
Change-Id: I9c6651ed192669b91a4683f5f3bd2795e8d8276a"
b4243ad3f72b3dc7ef5f291a85a3dd084d6c1c00,2019-05-23 10:54:36+03:00,"Add Smart NIC representor port to integration bridge

In case of Smart NIC vNIC type neutron should mimic nova-compute
that plug the port to the ovs bridge.

Extend the Neutron OVS mechanism driver and Neutron OVS Agent to bind
the Neutron port for the baremetal host with Smart NIC. This will allow
the Neutron OVS Agent to configure the pipeline of the OVS running on
the Smart NIC and leverage the pipeline features such as: VXLAN,
Security Groups and ARP Responder.

Story: #2003346
Closes-Bug: #1785608
Change-Id: I6d520d3bac2e9ceb30b5b6197c6eb0f958cc3659"
959af761cb1197bbeaed4ba1f0c3e5ef4aba3ee1,2019-05-23 21:42:37+02:00,"[Functional tests] Test keepalived in namespaces

Functional tests for keepalived should spawn processes in namespaces
where dummy interfaces used in keepalived.conf file exists.
Otherwise keepalived 2.0.10 (this is version used currently in RHEL 8)
fails to start and tests are failing.

On older versions of keepalived, like 1.3.9 used in Ubuntu 18.04,
keepalived is logging warning about not existing interfaces but it's
starting fine thus tests are running properly.

So this patch adds creation of namespace for each test from
neutron.tests.functional.agent.linux.test_keepalived module,
creates dummy interfaces with names used in keepalived config file
and runs keepalive process in this namespace.

Change-Id: I54f45b8c52fc1ecce811b028f0f92e0d78d3157b
Closes-Bug: #1830232"
4445b380cffaae4898359c878f3a1900d86e44d7,2019-05-24 11:34:49+02:00,"Add devstack plugin for placement service plugin

This helps running end-to-end tests in gate, see:
https://review.opendev.org/629253

Partial-Bug: #1578989
See-Also: https://review.openstack.org/502306 (nova spec)
See-Also: https://review.openstack.org/508149 (neutron spec)
Change-Id: I6732909a10114dbc004043b754d47d974c3fe1cb"
42074a67259eb4bfe70631d087fa4fc4d509ab51,2019-05-24 20:05:48-05:00,"Canonicalize IPv6 ICMP protocol name in security groups

Currently, 'icmp', 'ipv6-icmp' and 'icmpv6' can be
specified as an IPv6 ICMP protocol value.  This can
lead to duplicate entries in the DB for doing exactly
the same thing.

Change to always be 'ipv6-icmp' so this doesn't happen.

Existing rules using one of the old values will now be
returned with 'ipv6-icmp' as the protocol value.

Depends-on: https://review.opendev.org/660206
Depends-on: https://review.opendev.org/660387

Change-Id: I7cd146691dce1a690e1d2c309dfd54b4a0032f76
Partial-Bug: #1582500"
47390226f5c755a083b0f181f7a81b480069c8a9,2019-05-27 13:30:49+03:00,"OVS DPDK port representors support

Adds support for OVS DPDK port representors[1], a direct port on
a netdev datapath is considered a DPDK representor port.

get_vif_type returns OVS VIF type in case of a direct port.

[1] http://docs.openvswitch.org/en/latest/topics/dpdk/phy/#representors

Closes-Bug: #1829734
Change-Id: I3956eeda19ebc93fdb0b13c1cfb3dc64abffee9f"
afff649a3900dd75ffe699f4a599bcbdc449598c,2019-05-27 13:38:42+02:00,"Notify ironic on port status changes

This patch adds an ironic notifier that sends notifications
to ironic endpoint /v1/events. The events are triggered by
port updates and deletions. Only ports with vnic_type
baremetal are honored.

Story: 1304673
Task: 22263
Closes-Bug: #1828367
Implements: blueprint event-notifier-ironic
Authored-By: Vasyl Saienko <vsaienko@mirantis.com>
Co-Authored-By: Harald Jensås <hjensas@redhat.com>
Co-Authored-By: Julia Kreger <juliaashleykreger@gmail.com>
Change-Id: I0bb3187a88a7f20adb8c60e24945db159afb83f1"
0b3f5f429d2e495eb78d78d46186092ac735e0d5,2019-05-27 19:23:28-05:00,"Support multiple external networks in L3 agent

Change [1] removed the deprecated option external_network_bridge. Per
commit message in change [2], ""l3 agent can handle any networks by
setting the neutron parameter external_network_bridge and
gateway_external_network_id to empty"". So the consequence of [1] was to
introduce a regression whereby multiple external networks are not
supported by the L3 agent anymore.

This change proposes a new simplified rule. If
gateway_external_network_id is defined, that is the network that the L3
agent will use. If not and multiple external networks exist, the L3
agent will handle any of them.

[1] https://review.opendev.org/#/c/567369/
[2] https://review.opendev.org/#/c/59359

Change-Id: Idd766bd069eda85ab6876a78b8b050ee5ab66cf6
Closes-Bug: #1824571"
5f99c79a504264397f3784abf295ba624241b380,2019-05-28 08:27:42+00:00,"Add TC filtering for VXLAN traffic

This new function in neutron.agent.linux.tc_lib creates a TC filter in
a device depending on the VXLAN ID (VNI) and the source MAC address
(usually the VM TAP MAC address). This filter will send all the egress
tunneled traffic from the VM to a TC class in other to shape it (QoS).

Change-Id: Ic04b52bc0aca7a18fa06ea89e981c80d67f42eb1
Related-Bug: #1560963"
ed3f1087fa354a91721d3046ce134e18c86f22b3,2019-05-28 18:27:22+08:00,"Fix resource schemas and releated `get_sorts` test cases

When I'm trying to introduce a central sort-keys validation within
patch [1] to `get_sorts` method in `neutron.api.api_common` module,
I get blocked by some resource schemas and test cases. After reading
neutron API docs and some inspection, I believe there exists uses of
improper sort keys in test cases and some resource schemes need to
keep aligned with offical documents.

* Schemas of resource SecurityGroups/SG Rules/Segments don't provide
`is_sort_key` flag for their sort key properties claimed in offical
docs as neutron-lib does. See [2] for more details.

* Test cases of resource NetworkSegmentRange use unsupported sort keys,
e.g: physical_network. Replace it with `name` property. See [2] for more
details.

[1] https://review.opendev.org/#/c/653903/
[2] https://developer.openstack.org/api-ref/network/v2/index.html

Change-Id: I45a51736e4075e3dbc16827486869d70b659622d"
335ac4e2d95c164d66a3b09d9fd08e9c563edfc2,2019-05-29 17:58:51+08:00,"Fix bug: AttributeError arises while sorting with standard attributes

Common neutron resource(e.g, Port) consists of:
1. Resource Attributes, e.g: Port.mac_address, etc.
2. Standard Attributes, e.g: created_at, and are shared among all
   neutron resources.
The `sort` opt only supports limited attributes. We need to filter
attributes that are defined with `is_sort_key=True` and it's preferred
to explicitly warn CLI & API users of illegal sort keys rather than
just accept without check, pass forward and then hit a internal error
which's quite confusing.

Depends-on: https://review.opendev.org/#/c/660097/
Change-Id: I8d206f909b09f1279dfcdc25c39989a67bff93d5
Closes-Bug: #1659175"
b77c79e5e8ee8127ccfc875e6e260f554694104b,2019-05-29 12:37:46+00:00,"Stop OVS agent before starting it again

In TestOVSAgent, there are two tests where the OVS agent is
configured and started twice per test. Before the second call,
the agent should be stopped first.

Change-Id: I30c2bd4ce3715cde60bc0cd3736bd9c75edc1df3
Closes-Bug: #1830895"
52b537ca22b2d7d81a84b2f75de577d8dffee94c,2019-05-30 08:11:31+00:00,"DVR: Modify DVR flows to allow ARP requests to hit ARP Responder table

DVR does the ARP table update through the control plane, and does not
allow any ARP requests to get out of the node.

In order to address the allowed address pair VRRP IP issue with DVR,
we need to add an ARP entry into the ARP Responder table for the
allowed address pair IP ( which is taken care by the patch in [1])

This patch adds a rule in the br-int to redirect the packet
destinated to the router to the actual router-port and also moves
the arp filtering rule to the tunnel or the physical port based on the
configuration.

By adding the above rule it allows the ARP requests to reach the
ARP Responder table and filters the ARP requests before it reaches
the physical network or the tunnel.

[1] https://review.opendev.org/#/c/601336/
Related-Bug: #1774459

Change-Id: I3905ea56ca0ff35bdd96c818719e6d63a3eb5a72"
b3404d900ef142637869e6e8999d29d712185e95,2019-05-30 09:58:11+00:00,"Add debug information to AutoScheduler and BaseScheduler

These new debug lines can be helpful to resolve the mentioned bug.
Sometimes the DHCP agent does not reschedule and the log does not
contain enough information to debug the problem.

Spotted error during fullstack tests:
Traceback (most recent call last):
File ""/opt/stack/new/neutron/neutron/tests/base.py"", line 151, in func
  return f(self, *args, **kwargs)
File ""/opt/stack/new/neutron/neutron/tests/fullstack/test_dhcp_agent.py"",
  line 168, in test_reschedule_network_on_new_agent
  self._wait_until_network_rescheduled(network_dhcp_agents[0])'
File ""/opt/stack/new/neutron/neutron/tests/fullstack/test_dhcp_agent.py"",
  line 137, in _wait_until_network_rescheduled
  common_utils.wait_until_true(_agent_rescheduled)
File ""/opt/stack/new/neutron/neutron/common/utils.py"", line 646,
  in wait_until_true
  raise WaitTimeout(_(""Timed out after %d seconds"") % timeout)
  neutron.common.utils.WaitTimeout: Timed out after 60 seconds

Change-Id: I794e737c30f597519fba873e36f26b82b6f2c799
Related-Bug: #1799555"
a65ae9c81eea909133446c0be4d54ce389f6e0e1,2019-05-30 14:39:39-04:00,"Use list instead of six.viewkeys to avoid py2 to py3 problems

This change fixes an 'RuntimeError: dictionary changed size during
iteration' error that is raised because of different behaviour between
python2 and python3.  An earlier attempt [1] to use the six library did
not fix the issue.

[1] https://review.opendev.org/660427

Resolves-Bug: #1829304
Change-Id: Ic4c5790a5d66e10a606327f4f4e4c92611f161d8"
93015527f02cb54b0b2bc07c8c9c239c63878264,2019-06-03 14:39:51+02:00,"Add kill hooks for external processes

This patch adds possibility to configure kill hooks used to kill
external processes, like dnsmasq or keepalived.

Change-Id: I29dfbedfb7167982323dcff1c4554ee780cc48db
Closes-Bug: #1825943"
e71adfde060a7491bd46b621f628a52dd898de01,2019-06-04 11:30:24+08:00,"Exclude broken ironicclient versions 2.7.1

Depends-On:https://review.opendev.org/#/c/659612/
Change-Id: I832fa869ec1eee4ab616d1f205a416cbc61f816a"
ae3aa28f5a4749b4e4cb3f0ae0d009c0734db405,2019-06-04 12:22:09+02:00,"[DVR] Block ARP to dvr router's port instead of subnet's gateway

It may happen that subnet is connected to dvr router using IP address
different than subnet's gateway_ip.
So in br-tun arp to dvr router's port should be dropped instead of
dropping arp to subnet's gateway_ip (or mac in case of IPv6).

Change-Id: Ida6b7ae53f3fc76f54e389c5f7131b5a66f533ce
Closes-bug: #1831575"
00eb6f26f6165a00d647d2bf35fb7996534cfc09,2019-06-04 19:38:35+08:00,"improve dvr port update under large scale deployment

update port may takes an excessive number of seconds
to complete if dvr routers are running on more than 100
compute nodes. This patch tries to save some time by removing
unnecessary calls inside looping through hosts.

Change-Id: Ide740e0c5c43c2d2b842460a37c8ce125da12b28
Closes-Bug: #1830456"
c148c6df468b3ee1a274f191fb4317aef2e4b225,2019-06-05 18:22:48+04:00,"SRIOV agent: wait VFs initialization on embedded switch create

Check for configured and actual number of VFs to prevent
device registaration with 0 VFs.

Closes-Bug: #1831622
Change-Id: Ie699d245f8ae2fc1d16b96432d2962788d9dba57"
6ea01444dd75d2d15658c808e052143deaf66543,2019-06-05 17:22:31+00:00,"Add Timer context manager class

This class creates a context that:
* Triggers a timeout exception if the timeout is set.
* Returns the time elapsed since the context was initialized.
* Returns the time spent in the context once it's closed.

The timeout exception can be suppressed; when the time expires, the
context finishes without rising TimerTimeout.

This class can be used to execute blocking methods and finish them if
there is no return. For example, in the followup patch [1], this class
is used in the method ""neutron.agent.linux.ip_lib.ip_monitor"" to control
how much time the blocking function ""IPRSocket.get"" is being called. By
using this strategy the method ""ip_monitor"" can be finished gracefully
using an external event signal in the main loop.

[1] https://review.opendev.org/#/c/660611/

Change-Id: I1f33535b201d49b875437bcc3397fcb465118064
Related-Bug: #1680183"
a477c31a23049407b010e2eadbc93d0a2ed42e9d,2019-06-05 17:22:44+00:00,"Add ip_monitor command implemented using Pyroute2

This method allows to track any IP address change in a
namespace. In future patches, this method will replace
the current IP monitor used in the keepalived_state_change
daemon. The current implementation relays in a spawned shell,
executed in root mode, and the output of this shell,
conveniently parsed.

If the passed namespace is not None, this new method must
be executed in privileged mode (root user), but cannot use
privsep because is a blocking function and can exhaust the
number of working threads.

This function should be executed in a parallel thread, returning
the data using the eventlet queue. Pyroute does not implement yet
a non blocking method to retrieve the command output or to know if
the buffer has data. This method, spawned in a greenthread, must be
stopped by killing this thread.

An example of how to use it can be found in the functional tests
implemented in this patch.

Change-Id: I86e4487035d60e1b52e951dd3cd50d6bb54f388b
Related-Bug: #1680183"
975143fd08f38819859b2251da568af58c8f3a33,2019-06-06 09:56:58+08:00,"Add a generic coordination lock mechanism

For various synchronized scenarios, this decorator
allows flexible lock name with parameters and names
of underlying functions.
For instance:
    @synchronized('{f_name}-{resource.id}-{snap[name]}')
    def foo(self, resource, snap):

Change-Id: I4bf75be2902cd598a5a5a2c5887d4b4262f3e042
Related-Bug: #1824911"
ccef17605d1e28c418821c2235ba24c15893fff2,2019-06-06 10:56:34+02:00,"Run nova's VM boot rally scenario in the neutron gate

As discussed on the neutron_performance meeting [1] we'd like to run
a rally scenario in the neutron gate that boots a vm. Combined with
Slawek's work to integrate osprofiler with rally [2] we should start
to get some insight into neutron's vif plugging performance even if
that's not something directly exposed and measurable through the API.

[1] http://eavesdrop.openstack.org/irclogs/%23openstack-meeting/latest.log.html#t2019-06-03T16:12:17
[2] http://lists.openstack.org/pipermail/openstack-discuss/2019-May/006769.html

Change-Id: I7e2c19e8cdb62cb85046500f862e8dbd42306225"
e603d19939c98b94081bb6a3af8bcb943f7bd2ce,2019-06-06 13:07:36+00:00,"Reset MAC on unbinding direct-physical port

direct-physical ports inherit MAC address of physical device
when binding happens (VM created). When VM is deleted this
MAC has to be cleared so other ports may be bound to same device
without conflicts.

Change-Id: I9dc8562546e9a7365d18492678f7fc1cb3553622
Closes-Bug: #1830383"
af773557323580c7b07bd41dd1f524e81530c939,2019-06-06 17:43:10+02:00,"Turn CIDR in query filter into proper subnet

Use netaddr.IPNetwork to convert CIDRs in a query
into proper subnets.

When creating subnets the CIDR is converted into
a proper subnet. i.e a subnet can be created with
cidr=10.0.0.11/24 in the create request. On create
the cidr is turned into a proper subnet resulting
in a subnet with cidr=10.0.0.0/24.

This change does the same to CIDRs when used as
query filters during a list subnet request, so
that the same value that was used to create the
subnet can be used to find the subnet.

Closes-Bug: #1831811
Change-Id: I8ae478a03ceedc6c3b1ae1d40081b5e5158813e6"
26b3e6b1c4622087a2aaa542cb5ac5e477bd47b8,2019-06-06 19:23:17+00:00,"rbac: Catch correct exception for duplicated entry

RBAC network policy is uniquely identified by network ID. That means
when attempting to create such network policy, we should not retry when
such policy already exists in the database.

Before we switched in rbac to use OVO, we translated DB DBDuplicateEntry
on such ocasions into dedicated RBAC exception to avoid DB retry
mechanism (see bug/1551473). After introducing OVO layer for RBAC, the
exception was not changed to the one coming from OVO. This patch
replaces the exception from DB to the exception from OVO.

Another patch will go to neutron-tempest-plugin to limit time API needs
to reply with failure to user, when attempting to create an existing
policy.

Closes-Bug: #1831647

Change-Id: I7c65376f6fd6fc29d510ea532a684917ed95deb1"
4fd104b9dd61be9705402dd2910ab9e363f6e52b,2019-06-06 15:47:45-04:00,"Log message when legacy IPv6 ICMP protocol name used in SG rule

This way an operator can inform users of new sytax.
Follow-on from comments in https://review.opendev.org/#/c/453346

Change-Id: I5bf934c5d7168bc99df0c9c6d4d4bb851b651f54"
62f55a12b053b753616747445bc9e3aa0e5e72d9,2019-06-07 17:23:03+02:00,"Force segments to use placement 1.1

By documentation segments plugin was designed to use placement
microversion 1.1, force to use that.

Change-Id: Ibb8d6bcce7f0fe1070b9eeb2ad632dfb58a3a015
Depends-On: https://review.opendev.org/663978
Related-Bug: #1828543"
d01a1deca9a9ccc8c396da6ca88839fa0862dd65,2019-06-07 17:08:38+00:00,"Add log information in agent schedulers

Added log information about the hostable DHCP agents per network.
Added log information when an agent is declared ""down"" because the
heartbeat is too old.

Those log messages are included according to [1].

[1] https://bugs.launchpad.net/neutron/+bug/1799555/comments/8

Change-Id: I7b30499a86e5ae5de49813dfca01788fd5fce139
Related-Bug: #1799555"
054fd61223467bc65d1088ac8a724fc04b7df34f,2019-06-11 16:25:10+08:00,"Minimizing lock for port forwarding

Closes-Bug: #1824911
Change-Id: Id02b879cde8d2e6e90850b7cc389edbecd13a479"
52529bc949acff9a3454abd44925342468064b78,2019-06-11 18:34:00+04:00,"DVR: on new port only send router update on port's host

When new DVR serviceable port appears on new node we need
to update node's l3 agent with all routers which have the
port's subnets, including connected routers.
We don't need to update all nodes hosting these routers.
It costs us much as all l3 agents then go back to neutron server
and request routers info for no good reason.
This was one of the main issues with DVR at scale fixed in Mitaka.

Change-Id: I99d01d7bf29f236eff0f80d1ae8659f64ac55d39
Related-Bug: #1830456"
95023227b77b72382fdbb06bddadf832b1f20f8f,2019-06-11 16:49:31+02:00,"segments: Fix resource provider inventories update

Related-Bug: #1828543
Depends-On: https://review.opendev.org/663978
Change-Id: I4275779bd8d353fbaa80c646515819b0a34edebb"
352f5ac674dde0d76ebe92d80b2cb02638b80ade,2019-06-14 10:44:30+02:00,"Fix update of network's segmentation id

In patch [1] there was added usage of context parameter in method
get_vif_type in openvswitch mech_driver.
This exposed that previously ""wrong"" context was passed to this method
in _update_segmentation_id() method in ml2 plugin and that caused
raising AttributeError as ""Context"" object didn't have attribute
'current'.

This patch adds new method ""get_supported_vif_type"" to mechanism
drivers and this method don't need context to return what vif_types
are supported regarding agent type.

[1] https://review.opendev.org/#/c/658784/

Change-Id: Ic6c738db28208e5009f78bb52598eb3c141f639f
Related-Bug: #1832985"
3027b66c3854c183899e4e0774a92b965aa049d4,2019-06-14 18:00:03+08:00,"Fix mis-use of _dvr_to_src_mac_table_id

A simple dvr router admin-state down action can cause the
exception ""TypeError: 'int' object is not iterable"" in snat
node ovs-agent. This patch addresses that.

Closes-Bug: #1832743
Change-Id: If31de3cc831b0ee3caed9924e50d86270aeb9d7f"
618e24e241241c7323702a815542f11e91fd32a1,2019-06-14 12:57:27+02:00,"Retry trunk status updates failing with StaleDataError

This is an approximate partial fix to #1828375.

update_trunk_status and update_subport_bindings rpc messages are
processed concurrently and possibly out of order on the server side.
Therefore they may race with each other.

The status update race combined with
1) the versioning feature of sqlalchemy used in the standardattributes
   table and
2) the less than serializable isolation level of some DB backends (like
   MySQL InnoDB)
does raise StaleDataErrors and by that leaves some trunk subports in
DOWN status.

This change retries the trunk status update (to BUILD) blindly when
StaleDataError was caught. In my local testbed this practically
fixes #1828375.

However theoretically the retry may cover up other real errors (when the
cause of the StaleDataError was a different status not just a different
revision count).

To the best of my understanding a proper fix would entail guaranteeing
the in order processing of the above rpc messages - which likely won't
ever happen.

I'm not sure at all if this change is worth merging - let me know what
you think.

Change-Id: Ie581809f24f9547b55a87423dac7db933862d66a
Partial-Bug: #1828375"
7be9c10679dbc7a6426e4f0c17b86750b1d95a3b,2019-06-17 13:59:24+02:00,"Allow VM booting rally scenarios to time out

Not long ago we enabled a rally scenario booting VMs in the neutron gate
so we can collect osprofiler reports about it. The rally scenario we
re-used was only triggered by changes in the rally-openstack repo so I
could not collect data about its failure rate. Now that it's running
frequently in the neutron gate this scenario actually seems to be quite
unstable (usually timing out while waiting for the VM to get to ACTIVE):

http://logstash.openstack.org/#/dashboard/file/logstash.json?query=message:\""rally.exceptions.TimeoutException: Rally tired waiting\"" AND build_name:\""neutron-rally-task\"" AND voting:1&from=864000s

Since we only want to run this scenario for the osprofiler report
we can get rid of the gate instability by allowing a 100% failure rate
in the scenario SLA.

Change-Id: Ied354e8242274c8eeb26909e29afbe6d41662bfc
Related-Change: https://review.opendev.org/662804"
d7c5ae8a0378fa50853e91241426b6470ffe7492,2019-06-18 06:28:56+00:00,"Increase TestDhcpAgentHA.agent_down_time to 30 seconds

Currently there is a delay (around 20 seconds) between the the agent
update call and the server reply, due to the testing servers load. This
time should be higher than the agent-server communication delay but
still short enough to detect when the DHCP agent is dead during the
active wait during the DHCP agent network rescheduling.

""log_agent_heartbeats"" is activated to add information about when the
server has processed the agent report status call. This log will allow
to check the different between the server updating time and the previous
agent heartbeat timestamp.

Change-Id: Icf9a8802585c908fd4a70d0508139a81d5ac90ee
Related-Bug: #1799555"
b76321f1d8864b013d15b236b1868a21ffb8b875,2019-06-18 06:29:08+00:00,"Add agent timestamp to ""_log_heartbeat"" method

When an agent reports the state, the timestamp is sent along with the
agent status. This timestamp now is logged if ""log_agent_heartbeats"" is
activated.

Change-Id: Ifc88dfb3041aa07b197f395172b69399796ba46a
Related-Bug: #1799555"
c195352e70e39a4516d6b0dcecff6a8f2316ac9e,2019-06-18 09:23:51+02:00,"Remove mock of not existing method in L3 agent UT.

There was mock of ri._get_floatingips_bound_to_host() in
L3 test_agent unit test module. This method was removed long time
ago in [1] so this mock is not necessary anymore.

TrivialFix

[1] https://review.opendev.org/#/c/499725/

Change-Id: Ia93cab667f8154663ba62b78bc0329ee16b8202c"
a20f4c08c421da2e2d0341d03d71654a82d87a21,2019-06-18 08:39:34+00:00,"Read IP monitor changes in a parallel thread

In order to capture all IP address changes, the method reading the
netlink socket will be executed in a parallel thread. Once the
""ip_monitor"" method is stopped, this blocking thread will be killed.

A new functional test, ""test_add_multiple_ips"", is added in order to
stress test this method.

Change-Id: I8f1de4a31f97bab734a33f94c3069444defd870f
Closes-Bug: #1832307"
051b58f566dd382f22df937d2e90c06e9ca2faad,2019-06-19 14:16:38-04:00,"Update DPDK docs with note about using veth pairs

In case when ovs-dpdk is used together with ``ovs_use_veth`` config
option set to True, it cause invalid checksum on all packets send from
qdhcp namespace.
This commit adds short info about this limitation to ovs-dpdk config
guide.

Change-Id: I6237abab3d9e625440e95e75f5091d09a1ec44f0
Related-Bug: #1832021"
2ffde257cfba3db213edab047cb8f99fd60011a9,2019-06-19 22:17:03+00:00,"Add more debug information TestNeutronServer

The test cases implemented calling ""_test_restart_service_on_sighup"",
mock the service ""start"" function. This function appends a temporary
file and this file is read by the main to check the correctness of
the service and workers executing.

In case of failure waiting for the file to be created and populated,
the main function will report now:
- If the file was not created.
- The current size of the file, compared to the expected one (the number
  of times the ""start"" function was called)

The polling time to check the status of the file was increased to 1
second.

Change-Id: I68452408920ad9a1ee7252dd9012f898ddfa7e09
Related-Bug: #1833279"
8ecad3ca4b3ebb655440ad926de5029e0d2ccc1b,2019-06-21 13:57:26+00:00,"Remove some synchronization decorators from ip_lib

Removed the synchronization from the following ip_lib functions:
* create_netns
* remove_netns
* list_netns

The mentioned bug #1811515 and the corresponding patch [1], explain
the problem of Pyroute2 NetNS class and the file descriptors used
in a multithread environment. This is why, until a fix is applied to
this library, a synchronization decorator was applied to all Pyroute2
commands.

However, the listed functions do not instantiate this class. These three
methods only handle the filesystem in order to create, remove or list
the system namespaces. That means those methods are not affected by the
mentioned bug in Pyroute2 and it is safe to execute them without any
synchronization.

[1] https://review.opendev.org/#/c/631275/

Change-Id: I71521efbdaf9bb6d7cd9650f77c52bf6e02c9ced
Closes-Bug: #1833717
Related-Bug: #1811515"
dc80fc9fe7836840d25eac16c4f8013cda55acfa,2019-06-22 15:21:58+00:00,"[OVS] Network segmentation ID change not allowed if multisegments

If a network has several segments, the provider network segmentation ID
cannot be changed. This is defined in the feature spec [1].

In the case of having a multisegment network, the OVS agent RPC call
""get_network_details"" will return the following value:

  {
    ""network"": {
      ""updated_at"": ""2019-02-19T13:25:15Z"",
      ""revision_number"": 5,
      ""id"": ""ba973781-065b-4c69-9f07-a5c4f9a3b754"",
      ...
      ""segments"": [{
        ""provider:network_type"": ""vxlan"",
        ""provider:physical_network"": null,
        ""provider:segmentation_id"": 10041
      },
      {
        ""provider:network_type"": ""vxlan"",
        ""provider:physical_network"": null,
        ""provider:segmentation_id"": 10066
      }],
      ...
}

The provider network information will be contained inside the ""segments""
list, instead of being container in the parent ""network"" dictionary.

Closes-Bug: #1832745

[1]https://opendev.org/openstack/neutron-specs/src/branch/master/specs/stein/change-segmentation-id-vlan-provider-network.rst

Change-Id: I4fa37519bbf91e93ebd2f0e46e4d14edd40728fd"
d8078469a8693bfa637e607ed848b918e3048ec9,2019-06-24 10:41:46+00:00,"Disable ""of_inactivity_probe"" in fullstack tests

Disable the inactivity probe during the fullstack tests. This probe
is not tracked nor controller during these tests and usually make
them more unstable. As seen in the bug report, in loaded CI nodes,
sometimes the probe raises an error, stopping the current test:

  reconnect|ERR|tcp:127.0.0.1:56401: no response to inactivity probe
    after 5 seconds, disconnecting

Change-Id: Id27326d5deae78ebfad1012efb507fde9e6c1453
Closes-Bug: #1833386"
2e8693e3a0f6bf4b27bac312e8da0f6ab51a708f,2019-06-24 13:37:36-04:00,"Import ""Manage Networking service quotas"" admin guide

This copies the guide from openstack-manuals [1] which should
have been done with the manuals docs migration in Pike. The
only content change is a todo is added to migrate the guide
from using the deprecated neutron CLIs to the openstack CLIs.

[1] https://docs.openstack.org/ocata/admin-guide/cli-networking-advanced-quotas.html

Change-Id: Ia0cad1ea0c27067bc257c1fc8e05299052e35e1b
Closes-Bug: #1834068"
0963ce94e01028f8aec3b3af607a2c4d322ec62a,2019-06-25 14:13:10+00:00,"Add default value to agent create_or_update_agent new param

Commit Ifc88dfb3041aa07b197f395172b69399796ba46a recently added a
new agent_timestamp parameter to create_or_update_agent.
As some other projects use this api, the change should have been
backwards compatible.
Adding default to None will solve this issue.

Closes-Bug: #1833589
Change-Id: I2d17f8eaf4d74ae2081f82e3c1a09bdc80b1d701"
39c7ac3ffe0eab32e1c61428661cbdcb68f7170b,2019-06-25 08:47:48-06:00,"use AuthenticIPNetwork and AuthenticEUI from neutron-lib

This patch switches over to neutron-lib's version of the the
_AuthenticBase, AuthenticEUI and AuthenticIPNetwork classes by
deleting them from neutron and using lib's version instead.

Depends-On: https://review.opendev.org/#/c/659881/

NeutronLibImpact

Change-Id: Ia3d3db401d6abcb9c9965b945bcd4c199f8e812b"
547d694fa160033a642ccf3f060630de57a9f04d,2019-06-26 12:34:33+02:00,"Fix of_* config options help messages

In patch [1] of_interface config option was removed and now
there is only ""native"" driver available.
So there is no need to mention in description of of_* config
options that option is used only for 'native' driver. It is
used always now.

TrivialFix

[1] https://review.opendev.org/#/c/599496/

Change-Id: Ia3c261b4fccd637691ad442038fb301b0eeb8258"
d5edb080b080bc5d5221f8586fc6ffdca7ab8b67,2019-06-26 22:04:36+00:00,"Treat networks shared by RBAC in same way as shared with all tenants

In patch [1] handle of networks with ""shared"" flag set to True was
fixed and it is now possible to use ""rule:shared"" in API policy in
actions related e.g. to ports or subnets.
But network can be shared with some specific tenant only by doing it
with RBAC mechanism and in such case it didn't work with [1] only.
It was like that because context.get_admin_context() was used to get
network so this returned network had got shared=False set even if
request comes from tenant for which network was shared through RBAC.

Now network will be always get with context which have got set proper
tenant_id so ""shared"" flag will be set properly even in case if it's
shared through RBAC.

[1] https://review.opendev.org/#/c/652636/

Change-Id: I38615c0d18bb5a1f22f3e7865ce24615a540aa9a
Closes-Bug: #1833455"
06997136097152ea67611ec56b345e5867184df5,2019-06-27 10:07:52+00:00,"Implement ""ip route"" commands using Pyroute2

Commands implemented:
* Add route
* List routes

Related-Bug: #1492714

Change-Id: I5e5e9f6981024317773979d9d2d77db3f5e7ec98"
6fd1cf35a821ed0d0ef52bed812c401ebd19b563,2019-06-27 16:01:05-05:00,"BGP Documentation Updates

This change updates the documentation for neutron-dynamic-routing
to reflect recent enhancements in DVR compatibility and use of the
openstack CLI instead of the neutron CLI.

Change-Id: I5af8b5e76ca8fd2fba58d0dd987be37530836480
Closes-Bug: #1832603"
76ccdb35d4b09106aa8adc97528b02f0fd8acbcc,2019-06-28 13:31:44+02:00,"Limit max ports per rpc for dhcp_ready_on_ports()

The Neutron dhcp agents reports all ready ports to the Neutron
server via the dhcp_ready_on_ports() rpc call. When the dhcp agent
gets ports ready faster than the server can process them the amount
of ports per rpc call can grow so high (e.g. 10000 Ports) that the
neutron server never has a chance of processing the request before
the rpc timeout kills the request, leading to the dhcp agent
sending the request again, resulting in an endless loop of
dhcp_ready_on_ports() calls. This happens especially on agent startup.

To mitigate this problems we now limit the number of ports sent
per dhcp_ready_on_ports() call.

Closes-bug: #1834257
Change-Id: I407e126e760ebf6aca4c31b9c3ff58dcfa55107f"
9ea6a616658268b833ccb787c181962898863058,2019-06-28 14:07:16-04:00,"Add custom ethertype processing

The OVS Firewall blocks traffic that does not have either the IPv4 or
IPv6 ethertypes at present.  This is a behavior change compared to the
iptables_hybrid firewall, which only operates on IP packets and thus
does not address other ethertypes.

This is a lightweight change that sets a configuration option in the
neutron openvswitch agent configuration file for permitted ethertypes
and then ensures that the requested ethertypes are permitted on
initialization.  This addresses the security and usability concerns on
both master and stable branches while a full-fledged extension to the
security groups API is considered.

Change-Id: Ide78b0b90cf6d6069ce3787fc60766be52062da0
Related-Bug: #1832758"
5be70fae0110ed63d540973e20756e7a26cb8b29,2019-07-01 14:51:21+08:00,"Blacklist sphinx 2.1.0 (autodoc bug)

See https://github.com/sphinx-doc/sphinx/issues/6440 for upstream details
Depend-On: https://review.opendev.org/#/c/663060/

Change-Id: I094854a51d0bd3c0fb1893e1ebd806b737a0a16b"
dfa37b2233b2dbe6dd12ec5e2ee4f1f32a4be4ba,2019-07-01 09:45:38+02:00,"Don't match input interface in POSTROUTING table

Netfilter postrouting hooks don't provide the input interface. That
works fine in iptables implementation as the comparison simply happens
against an empty string, but cause problems with nftables which
aborts rule processing due to no data to compare against and
the rule doesn't match.
This is a problem in systems where nftables are used (e.g. RHEL 8).

This patch fixes this issue by removing input interface from
POSTROUTING rule used to prevent SNAT for router's internal traffic.

Change-Id: I79bb8054c113c77e7c96d64ec1408236d24b23b6
Closes-Bug: #1834825"
429c77c574f471bdbb4dd91debef7a72c920b1e0,2019-07-01 10:37:19+00:00,"Implement ""ip route delete"" command using Pyroute2

Change-Id: I960455d6a9bc1b633d485c42a26b3a254731558e
Related-Bug: #1492714"
66fca96e5293040d23fa76380ba3f88b4117a5d7,2019-07-01 11:11:31+00:00,"Add qos_network_policy_id to Port OVO

Added field ""qos_network_policy_id"" to Port OVO. This parameter
will be used to retrieve the QoS policy bound to the port network.
This reduces the number of calls to the database by creating a join
between the QosNetworkPolicyBinding table and the Port table, based
on the network ID.

This backref association is not persistent (marked as ""viewonly"").
This relationship is using for loading the QoS policy ID of the
port network in the Port OVO.

Related-Bug: #1834484

Change-Id: I219a925d5e269b8c73a0481daa879d72c399fd8f"
538e663f0da6f0d630fc47a7cf738b188caa660b,2019-07-01 13:50:33+02:00,"Switch to use configure_keystone_authtoken_middleware in devstack plugin

Function ""configure_auth_token_middleware"" was deprecated in devstack
in [1].
Patch [1] also introduced regression which cause failures in neutron's
neutron-tempest-plugin-designate-scenario job.

New function configure_keystone_authtoken_middleware should be used
instead.
This patch switches to use this new function to solve problem
caused by patch [1] when old function is used.

[1] https://review.opendev.org/#/c/628651/

Change-Id: I96d69bc7a1489377b5e95965e95dc3d3f2f3a933
Closes-Bug: #1834849"
7eb74d2c4aa9bf1db0f165bee64fdf856fc94a2a,2019-07-01 14:22:51+00:00,"Implement subnetpool prefix operations

This changes provides the implementation of the subnetpool prefix
operations extension. This exposes explicit API's for adding to and
removing from the prefix list of a subnetpool. Prefixes added to a
subnetpool are subject to the prefix uniqueness constraints imposed
by address scopes. Prefixes to be removed from a subnetpool must not
be allocated to an existing subnet, and the subnet using the prefix
must be deleted before the prefix can be removed from the subnetpool.

Change-Id: I76783a4edaf46e184b4dea1d572b89e594bad0ac
Related-Bug: #1792901"
00b6460df2748cbf0bfa8fccdaad6a7356c15388,2019-07-02 14:00:17+00:00,"Enforce router admin state before distributed

Enforce that a user updates the admin state of a router before modifying
the distributed state. The API currently allows setting admin state to
false concurrently with changing the distributed state.
This is fine for a transition of centralized->distributed, but the
distributed->centralized transition could leave other nodes configured
as distributed until an audit is performed.

Commit adds shim api extension which should be replaced by neutron-lib
shim extension once https://review.openstack.org/#/c/634509/ is merged.
New method 'is_admin_state_down_necessary' checks that shim extension
is loaded.

Set extension as standard by adding to _supported_extension_aliases in
neutron/services/l3_router/l3_router_plugin.py

Closes-Bug: #1811166
Co-Authored-By: Allain Legacy <allain.legacy@windriver.com>
Co-Authored-By: Enyinna Ochulor <enyinna.ochulor@intel.com>
Change-Id: Ie624aeb3f3aeb4db176d2ca0b22020208d4b408a
Signed-off-by: Matt Welch <matt.welch@intel.com>"
ab57410ec8e5fae97dec052a5940debd614e4e50,2019-07-02 23:13:29+08:00,"Minimizing L3 agent QoS extensions lock granularity

If agent is concurrently processing large set of resources,
the bottleneck lock will multiply increase processing time
of those resources which have been waiting for the lock for
a long time.

This patch moves the lock to the core cache resource, and
leverage the coordination lock to the resource prcessing
and notification thread functions.

Closes-Bug: #1824911
Change-Id: Id43829b11631727f1a46362ffea5c22d2177fd79"
426a5b2833966569da39f3ef9a38ba2f451da687,2019-07-03 04:50:45+00:00,"Adjust some HA router log

In case router is concurrently deleted, so the HA
state change LOG is not necessary. It sometimes
makes us confusing.
Also print the log for the pid of router
keepalived-state-change child process.

Change-Id: Id57dd787c254994af967db17647a3a28925714da
Related-Bug: #1798475"
8d8ce04ed6e0580e758cc9f6e89ba347e93dcee6,2019-07-03 16:04:25+02:00,"Mark fullstack test_ha_router_restart_agents_no_packet_lost as unstable

Even after we merged [1] which should fix this failing test,
it is still failing quite often and we don't have root cause yet.

Lets (again) mark it as unstable for now to make our gate more
stable for now.

[1] https://review.opendev.org/#/c/664629/

Change-Id: I8ab51afc154a4359d9667112d4563faa82f02fcd
Related-Bug: #1798475"
d9e61138ffa458d95137264b6b66a4981deeaf57,2019-07-04 07:10:05+00:00,"change from fixup_uca to fixup_ubuntu

In a recent change [0] in devstack fixup_uca (Universal Cloud Archive)
was changed to fixup_ubuntu. This change follows this in
configure_for_func_testing.sh

[0]: https://review.opendev.org/619562

Change-Id: Ibf6a85d470f179ee996dcc4e6717d433dd860752
Related-Bug: #1792936"
eaf3ff57863a7af2a33ab189910666f6c3450019,2019-07-04 12:06:11+00:00,"Ignore first local port update notification

Ovs-agent will scan and process the ports during the
first rpc_loop, and a local port update notification
will be sent out. This will cause these ports to
be processed again in the ovs-agent next (second)
rpc_loop.
This patch passes the restart flag (iteration num 0)
to the local port_update call trace. After this patch,
the local port_update notification will be ignored in
the first RPC loop.

Related-Bug: #1813703
Change-Id: Ic5bf718cfd056f805741892a91a8d45f7a6e0db3"
12e3b20736e7afe1b659fd147b3171018959c2e7,2019-07-04 12:46:11+00:00,"TC filter functions should pass ""prio"" parameter

Pyroute2 TC filter function accept ""prio"" parameter to define
the filter priority [1].

[1]https://github.com/svinota/pyroute2/blob/0.5.6/pyroute2/netlink/rtnl/tcmsg/cls_u32.py#L28

Change-Id: I4689e508ed74339903901d4c03fed7bf9547a185
Closes-Bug: #1834753"
eaf89a49fdc8774ea380133ac2da246cb93b3fe5,2019-07-04 15:12:04+00:00,"Do not use privsep context when listing the namespaces in functional

The aim of this patch is to speed up the namespace listing and
avoid overloading the privsep daemon during the functional tests.

Change-Id: Icd1de10a3a58d2c46d5400db95c2cd84809d6221
Related-Bug: #1833717
Related-Bug: #1811515"
4b8790ed2054c02bdd6765e31a7c8481fa017079,2019-07-04 10:48:57-06:00,"bump neutron-lib to 1.28.0

Bump up neutron-lib to 1.28.0 [1] in requirements and lower-constraints.

[1] https://review.opendev.org/#/c/668928/

Change-Id: I57efc19d67826698cfafbf03d735c5e8978ca745"
c02ad07c33ebaad648fd99d6202386dd39d14774,2019-07-04 17:05:12+00:00,"Add ipam.utils.check_gateway_invalid_in_subnet unit tests

Change-Id: Ie6b008c644791bebff0432169cb9d8b4051789c6
Closes-Bug: #1835448"
7d62308eaa9fb4a80683499ea40f6d0c97fa7a4d,2019-07-04 21:17:46+00:00,"Remove rootwrap filters for TC commands in Linux Bridge

All neutron.agent.linux.tc_lib TC commands, used in Linux Bridge
agent, have been implemented using Pyroute2.

Change-Id: Idcac297b204900037b22ab25a516a161f4e78224
Related-Bug: #1560963"
e6e5c1316defb2a14c00b9f3037437917e4e9b1c,2019-07-05 15:10:32+08:00,"Switch to the new canonical constraints URL on master

Reference:
1. http://lists.openstack.org/pipermail/openstack-discuss/2019-May/006478.html
2. https://github.com/openstack/nova/blob/master/tox.ini#L17

Change-Id: Ic2c23439190d30143071c38d8e3b40b3a13fa06c"
8b00349a63c65e04b3d188366245234e880b7f60,2019-07-05 08:10:01+00:00,"Refactor qos_plugin._extend_port_resource_request

In order to speed up the port collection, some DB calls
have been deleted in the extended function
""QoSPlugin._extend_port_resource_request"".

With the parent commit, the port DB/OVO object now has the
network QoS policy ID, making the network retrieval unneeded.

In this refactor the QoS policy is collected from the DB only
if a valid QoS policy ID exists, bound to the port or to the
network. This reduces the number of QoS objects collection to
one or zero.

Change-Id: Iadf704c00378da99c502dca3e3b79796c368cac7
Closes-Bug: #1834484"
b6cbc95dcb1c46fd205103892a2744e4d13a81e4,2019-07-05 08:11:00+00:00,"Use Pyroute2 ""list_tc_qdiscs"" function in l3_tc_lib

Change-Id: Ifdccd02411e3c3bae441fc28ab8ed09ff746993c
Related-Bug: #1492714"
fb7185bf3592a66d3945fa259a1536bfe973cdfd,2019-07-05 08:13:07+00:00,"Use Pyroute2 ""add_tc_qdisc"" function in l3_tc_lib

Change-Id: I67ddf9d9a6bb2d9d2e8ff0b6345a0118ec37d837
Related-Bug: #1492714"
a70f07deb155eef450d59ccd897730298f360a0a,2019-07-05 10:13:11+00:00,"Add ""connectivity"" parameter in vif_details

Added ""connectivity"" parameter to mech driver vif_details. The default
value is ""legacy"". The in-tree drivers (Linux Bridge, Open vSwitch, SR-IOV
and MacVTap) have ""l2"" connectivity.

Change-Id: I45480986fc89e0b2f475ee0ceb13d8742fb8c530
Related-Bug: #1821058"
d0c172afa6ea38e94563afb4994471420b27cddf,2019-07-05 13:50:31-04:00,"Fix bulk port binding

Bulk ports were not binding correctly when they were created.  This is
due to a few inconsistencies between the create_port code and the
create_port_bulk code, mostly a result of the use of the Port object in
the bulk code.

Change-Id: I3bcd3cec12b1b6f6a568cda4bfeb569f636efb98
Closes-Bug: #1835209"
0a5b6d32de849c81cffdd8f216b692cf9993dd5a,2019-07-05 13:50:43-04:00,"Add Python 3 Train unit tests

This is a mechanically generated patch to ensure unit testing is in place
for all of the Tested Runtimes for Train.

See the Train python3-updates goal document for details:
https://governance.openstack.org/tc/goals/train/python3-updates.html

Change-Id: I749a23bbed7074116fba2b3c06e617601e6d4620
Story: #2005924
Task: #34225"
3367e2081bfd57030a3a3427eec630aa2f483d25,2019-07-07 19:16:11+00:00,"Fix update of network's segmentation id for network with ports

Filter neutron_lib.objects.utils.NotIn, designed to work with OVO objects
was used in db query and because of that ports belong to network wasn't
filtered by vif_type thus if there were any ports in network, it was not
possible to change its segmentation id.

Change-Id: I6ad2047c310e111bffe0942af12af1f642963b18
Closes-Bug: #1832985"
a240c68022d96c8639652cbdf57e707e68fb2a88,2019-07-07 17:44:56-05:00,"Fix list security groups performance with RBAC

After change [1], if the system has a high number of security groups
with no associated RBAC entries, a non admin user owning only one
security group will experience unacceptable response times when
listing her security groups.

Change [1] added methods get_object and get_objects to class
RbacNeutronDbObjectMixin in neutron.objects.rbac_db, which retrieve with
and admin context all the objects (networks, subnets or security groups)
in the DB and then decide in memory whether the project that made the
query has access to them or not, based on their associated RBAC
policies. This change proposes to remove those methods and revert to
their counterparts in NeutronDbObject (neutron.objects.base), which use
a DB query scoped to the project to retrieve the objects based on their
associated RBAC policies by calling [2]. In this way, the potential
number of objects that are retrieved from the DB and that have to be
converted to OVOs is greatly reduced, improving significantly the
response time to the user.

[1] https://review.opendev.org/#/c/635311
[2] https://github.com/openstack/neutron-lib/blob/7a58374fde64fdc14e327940dde6bea4a8a39345/neutron_lib/db/model_query.py#L100

Change-Id: Idd303778d83089da8fbeff40e3dda2bd19008d8e
Closes-Bug: #1830679"
5e0a5d41c7e4d16ebc670d7629d72a67299a07cb,2019-07-08 13:25:46+02:00,"Rally task definition for port binding scenario

Change-Id: I112e477f95958c6235dbc42da06ebc45b236e8f6
Depends-On: https://review.opendev.org/662781
Partial-Bug: #1833674"
989c785d2f6295534dcc5f977ea347370170db49,2019-07-08 11:26:34-06:00,"use SqlFixture and StaticSqlFixture from neutron-lib

This patch uses neutron-lib's SqlFixture and StaticSqlFixture by
removing those fixtures from neutron and using them from neutron-lib
instead.

NeutronLibImpact

Depends-On: https://review.opendev.org/#/c/668000/

Change-Id: I0c28f7436a7a8797b6b226748f8b5de8f7636b7e"
45e59e3a1838c1a2069c5cb759060fedb81727c6,2019-07-09 13:28:33+02:00,"Propagate profiler info into BatchNotifier threads

While working on improving the osprofiler report in neutron I'm finding
various places where the profiling can be extended by propagating the
profiler info further then before.

This change starts to profile BatchNotifier threads (e.g. various
callbacks to nova) when the code starting the thread was already
profiled (it's not at the moment, but that will be another change).

In this change we use osprofiler.profiler.clean(). Since that has became
part of the public interface of osprofiler in version 2.3.0, we bump
osprofiler version to 2.3.0 both in lower-constraints and requirements.

Change-Id: Ibd08e097b6f8457c50f8ba9e4a63b96e7e3182bc
Partial-Bug: #1833674"
4a06e08de6c5ec18a32905b8e562526737ab2f18,2019-07-09 16:54:03+00:00,"Improve ""QoSPlugin._validate_create_port_callback""

Make use of the OVO Port new field ""qos_network_policy_id"" to avoid
a DB call.

Change-Id: I3724acfbe88ab3db1641c3edb5dd4c76bc84bc00
Related-Bug: #1834484"
12ab7c4cb149147e3e7886233f4ba99c3484f923,2019-07-10 17:20:22+02:00,"segments: fix rp inventory update

The patch https://review.opendev.org/663980 made resource provider
inventory update failing with the assumption that inventory update
expects a dict with a key of the resource class, like resource provider
inventories update.
See the placement API-ref:
https://developer.openstack.org/api-ref/placement/#update-resource-provider-inventory
https://developer.openstack.org/api-ref/placement/#update-resource-provider-inventories

Change-Id: I7de1a947b864eb5ac57ebaca895f827d2e667443
Closes-Bug: #1836037
Related-Bug: #1828543"
5754f00ea8734a894e0c7963d46244ba7dc0dbe7,2019-07-10 19:01:55+00:00,"[DHCP] Implement an aging method for deleted_ports

When a port is deleted, is added to the NetworkCache instance
as a ""deleted port"". This set of ports is used by the DHCP agent
to mark out as ""stalled"" any message received with this port
in the payload.

Eventually, each deleted port should be dropped from this set
depending on when was deleted. A timeout of 1 day has been defined
in this patch to drop any older deleted port.

A ""loopingcall.FixedIntervalLoopingCall"" executes the deleted port
cleanup, with an execution interval of 1 day too.

Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@readhat.com>
Partial-Bug: #1732458

Change-Id: I0bca03a67e8b0ff8f508cf59383340a13724e51c"
76c028063582ced23cb5bc38c81f57b422b55900,2019-07-10 19:34:25+00:00,"Remove the l2pop agent_boot_time config

It was marked as deprecated, so let's do a quick
removal.

Related-Bug: #1813714
Change-Id: Ibc039b34b826641811a7e08b0d1bff0fd21b9193"
da539da3780188f01e18ef106dde9ca180324c2a,2019-07-11 11:25:41+04:00,"Yield control to other greenthreads while processing trusted ports

process_trusted_ports() appeared to be greenthread unfriendly, so
if there are many trusted ports on a node, openvswitch agent may
""hang"" for a significant time.
This patch adds explicit yield.

Change-Id: I7c00812f877e2fc966bbac3060e1187ce1b809ca
Closes-Bug: #1836023"
0299746c72b1a5f3d0c2ca1921f8febb1fb977b3,2019-07-11 13:00:16+02:00,"ovs-agent: Trace remote methods only

Enabling osprofiler tracing on class OVSNeutronAgent decorates all of
its methods. Doing this as label ""rpc"" for locally called methods is
quite misleading.

More importantly later we want to enable tracing triggered by a vif
plug. For that profiler.init() must be called sometime in
OVSNeutronAgent.process_ports_events(). If process_ports_events() is
decorated for tracing and we call profiler.init() inside then we'll have
the end of the method call traced, but not its beginning. The unmatching
end-trace-event makes osprofiler raise.

Change-Id: I06b8643c75a30b5a5f6f78d75af9937180da645b
Partial-Bug: #1833674"
ae1d36fa9d8e2115a5241b5da2e941cdefa2c463,2019-07-12 15:58:50+00:00,"Improve ""OVSFirewallDriver.process_trusted_ports""

FirewallDriver.process_trusted_ports"" is called with many ports,
""_initialize_egress_no_port_security"" retrieves the VIF ports
(""Interface"" registers in OVS DB), one per iteration, based in the
port_id. Instead of this procedure, if the DB is called only once to
retrieve all the VIF ports, the performance increase is noticeable.
E.g.: bridge with 1000 ports and interfaces.

Retrieving 100 ports:
- Bulk operation: 0.08 secs
- Loop operation: 5.6 secs

Retrieving 1000 ports:
- Bulk operation: 0.08 secs
- Loop operation: 59 secs

Closes-Bug: #1836095
Related-Bug: #1836023

Change-Id: I5b259717c0fdb8991f1df86b1ef4fb8ad0f18e70"
9f541521bbbcf36325bfc250e3ce27a138ddef3c,2019-07-13 16:10:19+03:00,"Retry creating iptables managers and adding metering rules

This change makes the metering agent retry creating the iptables
managers for each router and applying the metering rules.
This is needed in case the metering agent starts before some or all of
the namespaces are created.

Change-Id: Ifc565feb98c7f02df5c2831a3607c3e526a2e703
Closes-Bug: #1807153"
7bb1bbba365ad1358d6e66f88a8a48b7261c024e,2019-07-15 13:03:30+02:00,"Fix race in test_keepalived_state_change_notification

In case if initial keepalived status find in
keepalived_state_change.MonitorDaemon is ""master""
this test_keepalived_state_change_notification was failing
because there was 4 calls to the mocked enqueue_state_change()
method instead of 3.

This patch changes test to wait until 3 or 4 calls to this
method will be counted and it also changes assertions of
what state should be set on which call.
Before the patch test was expecting that calls are always like:
backup, master, backup
but if there are 4 calls it is like: backup, master, master, backup.
As it doesn't matter if there was one or two calls with ""master""
state, test will now assert that the last call is always with
""backup"" state.

Change-Id: I78c30ab32ffda37176a9c71348d83e17ab2c972a
Closes-Bug: #1836565"
9c4bd4bd9a718d17973a9962397243c5a3d107b1,2019-07-15 21:34:05+08:00,"Add a common timecost wrapper

And set it to all the L3 RPC functions. Move to neutron-lib
if it will be widely used corss other projects.

Related-Bug: #1835663
Change-Id: Ie7743db097fd45df432af341470336d6a5662c6f"
dac9a062aca91e243859e8a7d5b6814cfd37d222,2019-07-15 15:27:13-04:00,"Normalize protocol number 1 to 58 for IPv6

The security group code was changed recently to always
normalize IPv6 ICMP protocol names to 'ipv6-icmp', but it
did not cover when a number is used instead. Normalize
protocol number 1 to 58 for IPv6 ICMP as well.

Change-Id: Ife8263196f3d678d8455f07834c9f6c1330acc00
Closes-bug: #1582500"
8996940b5809a91ec112840b7054289ea757d03e,2019-07-15 20:07:03+00:00,"Remove tempest-full jobs from Neutron CI

In commit [1] neutron replaced using ""integrated-gate"" template, which
provides tempest-full job with new ""integrated-gate-networking"" tempate,
which provides ""tempest-integrated-networking"" job to run only tests related
to Neutron and Nova in Neutron CI.
Unfortunatelly tempest-full and tempest-full-py3 jobs were also
configured in Neutron's zuul file separately so we ended up with running
all 3 of those jobs in our check and gate queue.

So this patch removed ""tempest-full"" and ""tempest-full-py3"" jobs from
Neutron's check and gate queue and left only new
""tempest-integrated-networking"" job to be run there.

[1] https://review.opendev.org/#/c/669815/

Change-Id: Ia74454c0986d0ef24b9a42ab1e2e0f296511cd3f"
951c46c3b749b67e5998275467c618f948646f13,2019-07-15 20:07:57+00:00,"Switch neutron tempest jobs to run only networking related tests

In commit [1] neutron replaced using ""integrated-gate"" template with
new ""integrated-gate-networking"" tempate to run only tests related
to Neutron and Nova in Neutron CI.

This patch switches tempest jobs defined in neutron directly:
* neutron-tempest-dvr
* neutron-tempest-linuxbridge
* neutron-tempest-iptables_hybrid
* neutron-tempest-with-uwsgi

to inherit from this new ""tempest-integrated-networking"" job and
run also only tests related to Neutron and Nova.

[1] https://review.opendev.org/#/c/669815/

Change-Id: I2aa60fa1aa98e79f8b2597e490c00f7410f2a93d"
7875400f9507ff89c38133b9c37c4471a595afe6,2019-07-17 18:04:11+00:00,"Check project_id when creating and updating NetworkSegmentRange

If ""shared"" is False, a ""NetworkSegmentRange"" object must have a
""project_id"".

Change-Id: Ie61117d1a81ab1d0f740ea65bcc003ec88d7af1d
Related-Bug: #1835914"
9c5f394b73812fb748695eb0834e2b1b569b7876,2019-07-18 10:16:43+00:00,"Do not use privsep context when listing the namespaces in fullstack

The aim of this patch is to speed up the namespace listing and
avoid overloading the privsep daemon during the fullstack tests.

Change-Id: I95f024684c864aa75506b08a5f904a55267d09a8
Related-Bug: #1833717
Related-Bug: #1811515"
e8caea24513e6a6b4b461ea5efb262f02075bfbc,2019-07-19 19:00:01+02:00,"Trace receipt of update_device_* rpc messages in neutron-server

Generate an osprofiler trace_point every time neutron-server receives
an update_device_* rpc message with trace_info in its context. We assume
this marks the time when ovs-agent finished processing a port.

Change-Id: I554bc45ad44931691029e0066d5b8483522a7dd2
Partial-Bug: #1833674"
c62c67f413865c4fa5a8d07fb8033d587e730a85,2019-07-23 10:55:18+03:00,"Add RPC method to get networks for L3 and DHCP agents

- Added get_networks() RPC call for DHCP agent
- Added get_networks() RPC call for L3 agent

This change is required in order to support out of tree
MultiInterfaceDriver and IPoIBInterfaceDriver interface drivers
as they require information on the network a port is being plugged
to.

These RPCs will be passed as kwargs when loading the relevant
interface driver.

get_networks() keyword args map to the keyword arguments of:
neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_networks()

Change-Id: I11d82380aad8655a4fdc9656737b912b16e2859b
Partial-Bug: #1834176"
b51ba4b28349e7a1943bec4a2f567dbd7b8a55a9,2019-07-24 10:59:47+03:00,"Add interface kind property

- Add a new property to IPDevice to allow us to identify
  the kind of the interface.

This change is required as an out of tree interface driver
which supports operations on a per-physnet basis
needs to be aware of the kind of interface an interface driver
created in order to correlate between an interface driver
and an interface created by it.

Change-Id: Icbdb011a639475f416ca1b98fdf3ce2f52482c7c
Partial-Bug: #1834176"
f4bdcb0031c155aec75aca8db5f34eabc79e2026,2019-07-24 08:40:50+00:00,"Run 'tempest-ipv6-only' job in gate

As part of Train community goal 'Support IPv6-Only Deployments and Testing'[1],
Tempest has defined the new job 'tempest-ipv6-only'(adding
in Depends-On patch) which will deploy services on IPv6 and run smoke
tests and IPv6 related tests present in Tempest.

This job will be part of Nova, Neutron, Cinder, Keystone, Glance, Swift
gate.

Verification structure will be:
- 'devstack-IPv6' deploy the service on IPv6
- 'devstack-tempest-ipv6' run will verify the IPv6-only setting and listen address
- 'tempest-ipv6-only' will run the smoke + IPv6 related test case.

This commit adds the new job 'tempest-ipv6-only' run on gate.

Story: #2005477
Task: #35908

Depends-On: https://review.opendev.org/#/c/671231/

[1] https://governance.openstack.org/tc/goals/train/ipv6-support-and-testing.html

Change-Id: I6a1d8e40a8cb606b60ebede99bac7e570f761a5a"
b63809715a0b9b8ea0f354dfd6f1b3fd7a713352,2019-07-25 12:14:23+02:00,"Don't crash ovs agent during reconfigure of phys bridges

In case when physical bridge was recreated on host, ovs agent
is trying to reconfigure it.
If there will be e.g. timeout while getting bridge's datapath_id,
RuntimeError will be raised and that caused crash of whole agent.

This patch changes that to not crash agent in such case but try to
reconfigure everything in next rpc_loop iteration once again.

Change-Id: Ic9b17a420068c0c76748e2c24d97be1ed7c460c7
Closes-Bug: #1837380"
cbe1adaee3aeef9110f209104eb1befeea5b4a1f,2019-07-25 07:50:11-06:00,"fix indentation of WarningsFixture use

This patch fixes the improper indentation when using the WarningsFixture
that was introduced in https://review.opendev.org/#/c/651370/

Change-Id: I518a592f45e1ebcbf88b4569a1abefc423d35c97"
0e80d2251e6b1cf8521418a703cff7cb149cb8e1,2019-07-30 20:21:16+03:00,"Pass get_networks() callback to interface driver

In order to support out of tree interface drivers it is required
to pass a callback to allow the drivers to query information about
the network.

- Allow passing **kwargs to interface drivers
- Pass get_networks() as `get_networks_cb` kw arg
  `get_networks_cb` has the same API as
  `neutron.neutron_plugin_base_v2.NeutronPluginBaseV2.get_networks()`
   minus the the request context which will be embeded in the callback
   itself.

The out of tree interface drivers in question are:

MultiInterfaceDriver - a per-physnet interface driver that delegates
                       operations on a per-physnet basis.
IPoIBInterfaceDriver - an interface driver for IPoIB (IP over Infiniband)
                       networks.

Those drivers are a part of networking-mlnx[1], Their implementation
is vendor agnostic so they can later be moved to a more common place
if desired.

[1] https://github.com/openstack/networking-mlnx

Change-Id: I74d9f449fb24f64548b0f6db4d5562f7447efb25
Closes-Bug: #1834176"
32bfc3edeca935fc9c16b3019aa0af3091cd19e7,2019-07-31 18:12:24-04:00,"DVR: Cleanup ml2 dvr portbindings on migration

When a DVR router is migrated from distributed to
centralized, we are unbinding the router from the
agents, but the ml2 distributed portbindings for
the router port still remains intact.

This patch will fix the issue by deleting the
binding entry for multiple hosts.

Closes-Bug: #1718345
Change-Id: If139790eb336ff13b07b094151946af30322ad3e"
7b81c1bc67d2d85e03b4c96a8c1c558a2f909836,2019-08-01 13:15:08+02:00,"[DVR] Add lock during creation of FIP agent gateway port

In case when new external network is set as gateway network for
dvr router, neutron tries to create floating IP agent gateway port.
There should be always max 1 such port per network per L3 agent but
sometimes when there are 2 requests to set external gateway for 2
different routers executed almost in same time it may happend that
there will be 2 such ports created.
That will cause error with configuration of one of routers on L3 agent
and this will cause e.g. problems with access from VMs to metadata
service.
Such issues are visible in DVR CI jobs from time to time. Please check
related bug for details.

This patch adds lock mechanism during creation of such FIP gateway port.
Such solution isn't fully solving exising race condition as if 2
requests will be processed by api workers running on 2 different nodes
than this race can still happend.
But this should mitigate the issue a bit and solve problem in U/S gates
at least.
For proper fix we should probably add some constraint on database level
to prevent creation of 2 such ports for one network and one host but
such solution will not be easy to backport to stable branches so I would
prefer first to go with this easy workaround.

Change-Id: Iabab7e4d36c7d6a876b2b74423efd7106a5f63f6
Related-Bug: #1830763"
8b7d2c8a93fdf69a828f14bd527d8f132b27bc6e,2019-08-01 17:11:04+00:00,"Refactor the L3 agent batch notifier

This patch is the first one of a series of patches improving how the L3
agents update the router HA state to the Neutron server.

This patch partially reverts the previous patch [1]. When the batch
notifier sends events, it calls the callback method passed during the
initialization, in this case AgentMixin.notify_server. The batch
notifier spawns a new thread in charge of sending the notifications and
then wait the specified ""batch_interval"" time. If the callback method is
not synchronous with the notify thread execution (what [1] implemented),
the thread can finish while the RPC client is still sending the
HA router states. If another HA state update is received, then both
updates can be executed at the same time. It is possible then that a new
router state can be overwritten with an old one still not sent or
processed.

The batch notifier is refactored, to improve what initally was
implemented [2] and then updated [3]. Currently, each new event thread
can update the ""pending_events"" list. Then, a new thread is spawned to
process this event list. This thread decouples the current execution
from the calling thread, making the event processing a non-blocking
process.

But with the current implementation, each new process will spawn a new
thread, synchronized with the previous and new ones (using a
synchronized decorator). That means, during the batch interval time, the
system can have as many threads waiting as new events received. Those
threads will end secuentially when the previous threads end the batch
interval sleep time.

Instead of this, this patch receives and enqueue each new event and
allows only one thread to be alive while processing the event list. If
at the end of the processing loop new events are stored, the thread will
process then.

[1] I3f555a0c78fbc02d8214f12b62c37d140bc71da1
[2] I2f8cf261f48bdb632ac0bd643a337290b5297fce
[3] I82f403441564955345f47877151e0c457712dd2f

Partial-Bug: #1837635

Change-Id: I20cfa1cf5281198079f5e0dbf195755abc919581"
61d149c0123997accc5c48994d7a4d1514eb49c9,2019-08-01 20:58:19+01:00,"Fix default RPC worker count

The help for the rpc_workers config option is:

    Number of RPC worker processes for service.  If not specified, the
    default is equal to half the number of API workers.

However, this does not accurately describe the current behaviour,
which is to default to half the _default_ number of API workers.  This
can make a big difference; for example on a 256-CPU machine with 256GB
of RAM which has api_workers configured to 8 but rpc_workers not
configured to anything, this will result in 64 RPC workers, which is 8
for every API worker!

Therefore tweak the default to rely on the actual value of
api_workers, which may be different than the default value.

Change-Id: I26115932ef4775f157297be1637ee26a4fca4666
Related-Bug: #1838688
Closes-Bug: #1838689"
c5e8d1123a4c42d614b3b645bbf7536917305a77,2019-08-02 13:30:49+02:00,"[DOC] Add info about new CI job to jobs list

In patches [1] and [2]  we are adding new scenario job:
""neutron-tempest-plugin-scenario-openvswitch"" and
""neutron-tempest-plugin-scenario-openvswitch-iptables_hybrid""
which will be run in check and gate queue in Neutron.

This patch adds info about those new jobs to the document with list
of CI scenario and Grenade jobs.

[1] https://review.opendev.org/#/c/670738/
[2] https://review.opendev.org/#/c/674274/

Depends-On: https://review.opendev.org/#/c/670738/
Depends-On: https://review.opendev.org/#/c/674274/

Change-Id: Ida9212f45ec5219fcd40787bbc94320056bd702a"
30a60d04f098581340f83b38b7a79104308c66bc,2019-08-05 11:18:10+02:00,"Add 3 retry attempts to initialize ovs agent

In case when TimeoutException will be raised by ovsdbapp during
initialization of neutron-ovs-agent, it will now try to create
object of agents class 3 times before agent will be terminated.

Such timeouts shouldn't happend usually but if for some reason
it happens e.g. once, e.g. in CI job, it should be better to just
retry and initialize this agent instead of left it dead on the
node.

Change-Id: I93e8d21d612e343479f26f8adc4477473579bab1
Closes-Bug: #1838563"
dd080c70b423a56a69abf7e52d1fee0cb7988c92,2019-08-06 02:30:41+00:00,"fix update port bug

when update port set body={""port"": {}}, neutron server will return 500.

In function _process_port_binding_attributes(plugins/ml2/plugin.py),
when update port body={""port"": {}}
attrs={}
vnic_type = attrs and attrs.get(portbindings.VNIC_TYPE)
vnic_type = {}
because attrs as False, will not execute attrs.get(portbindings.VNIC_TYPE)
vnic_type will be replicated as attrs.

Change-Id: I40d388543387ebdd72f26d761339c1829bef9413
Partial-bug: #1838396"
762773525234814c1c47b5d21e072a30a94ff9e6,2019-08-07 12:17:57+04:00,"Clear skb mark on encapsulating packets

Looks like by default OVS tunnels inherit skb marks from
tunneled packets. As a result Neutron IPTables marks set in
qrouter namespace are inherited by VXLAN encapsulating packets.
These marks may conflict with marks used by underlying networking
(like Calico) and lead to VXLAN tunneled packets being dropped.

This patch ensures that skb marks are cleared by OVS before entering
a tunnel to avoid conflicts with IPTables rules in default namespace.

Closes-Bug: #1839252
Change-Id: Id029be51bffe4188dd7f2155db16b21d19da1698"
330b6d6ba0fbfed92f4a785b301010e787cfdd27,2019-08-07 23:33:15+09:00,"test_l3: Be a bit more selective where to inject a failiure

Instead of blindly making the first publish() fail.

Remove assumptions about how many publish() calls are made.

These problems were exposed by the recent change. [1]

[1] https://review.opendev.org/#/c/638274/

Closes-Bug: #1839246
Change-Id: I40a8a3905435233e6c00c5439df287db5ab10ed6"
45612ca52f0a318d437904b1599095e971a831b9,2019-08-09 08:53:28+08:00,"fix update neutron resource with incorrect body key server return 500

In current neutron, when I update resource with incorrect body, neutron
server return 500 NeutronError. It should be fixed and BadRequest (400)
should be returned.
This patch fixed it.

Change-Id: I024b8ef73be69af069e4516dc501df3f5c145419
Partial-bug: #1838587"
f59b6a470620eaf53c98f4d98801789c95ed9a26,2019-08-09 11:43:57+02:00,"Fix sort issue in test_dhcp_agent_scheduler.test_filter_bindings

The test creates a list of networks, and then acts on a list of
NetworkDhcpAgentBindings obtained from get_objects() not guaranteed to
follow the original build order (based on the network_ids list)

Make sure that returned list is sorted on network_id, and network_ids
itself sorted so both lists match

Change-Id: I9b07255988f7ba6609af1961b3429c3ce12d5186
Closes-Bug: #1839595"
255fe22c432a989facde5d1f6676b5d5451ef32c,2019-08-09 13:24:44+02:00,"New extension: extraroute-atomic

Change-Id: I4e54333ac8db2ad3377c44d2dd1d0e41a90f1a76
Depends-On: https://review.opendev.org/670849
Partial-Bug: #1826396 (rfe)
Related-Change: https://review.opendev.org/655680 (spec)"
1f09cff08e8ca2e02b04e6ad4379bcd9a07f4b51,2019-08-11 03:32:31+05:18,"Removing invalid double asterics entry from the
doc file doc/source/admin/fwaas.rst

Change-Id: Ia3429c00397b7d18fac492cb2573cf2cb6569138
Closes-Bug: #1812225"
2c83e0750954798024212062a20bb5f90788ab2e,2019-08-13 17:13:09-04:00,"Fix objname error in QosPolicy

This patch fixes objname error in class QosPolicy.

Change-Id: Idc67b2d8f7cca19f59f39b9c884d8cec2c12e867
Closes-Bug: #1843368"
d41bd58f31e259fe408c8c059b31299fdfe81127,2019-08-16 13:50:49+00:00,"Initialize phys bridges before setup_rpc

Neutron-ovs-agent configures physical bridges that they works
in fail_mode=secure. This means that only packets which match some
OpenFlow rule in the bridge can be processed.
This may cause problem on hosts with only one physical NIC
where same bridge is used to provide control plane connectivity
like connection to rabbitmq and data plane connectivity for VM.
After e.g. host reboot bridge will still be in fail_mode=secure
but there will be no any OpenFlow rule on it thus there will be
no communication to rabbitmq.

With current order of actions in __init__ method of OVSNeutronAgent
class it first tries to establish connection to rabbitmq and later
configure physical bridges with some initial OpenFlow rules.
And in case described above it will fail as there is no connectivity
to rabbitmq through physical bridge.

So this patch changes order of actions in __init__ method that it first
setup physical bridges and than configure rpc connection.

Change-Id: I41c02b0164537c5b1c766feab8117cc88487bc77
Closes-Bug: #1840443"
78629e0d3780af4a8a8cc1b5b0762e0bc8a48f1f,2019-08-16 23:36:27+08:00,"Remove L3 IP QoS cache when router is down

When router admin-state is down or removed, fip-qos and gateway-ip-qos
extension should delete the router IPs' QoS rate limit cache. Then if
the router is up again the router floating IPs QoS can be reconfigured.
This patch achives these:
1. make sure floating IP or gateway IP QoS cache removed.
2. floating IP QoS can be re-configured to snat device when router
   doing admin_state down/up.

Closes-Bug: #1826695
Change-Id: I24fcecd9686ad17fa50093bb8bccab0d6c711298"
4b6c2246c09eccbb193b4a59a8dfee9e24f97bed,2019-08-19 16:32:42+00:00,"Force ""network_id"" in ""subnet"" DB registers

The ""subnet"" OVO does not allow to have an empty (None) ""network_id"" but
the DB ""subnet"" table allows to have this parameter empty (NULL) in the
database. In order to avoid any problem like the one described in the
bug, this patch ensures the database ""subnet"" register does always have
a ""network_id"" value and if a ""network"" register is being deleted, all
related ""subnet"" registers are checked first.

Change-Id: Iad210f0585b4201fdb87187b44a9b42267b58db4
Closes-Bug: #1839658"
8f057fb49ac637bd0dbf60ca07b89f0e4a59c7b7,2019-08-21 05:35:19+00:00,"DVR: Ignore DHCP port during DVR host query

For large scale deployment, the dvr router will be installed to
the scheduled DHCP host. This will definitely increase the l3
agent service pressure, especially in large number of concurrent
updates, creation, or agent restart.

This patch adds a config ``host_dvr_for_dhcp`` for the DHCP port
device_owner filter during DVR host query. Then if we set
``host_dvr_for_dhcp = False``, L3-agent will not host the DVR router
namespace in its connected networks' DHCP agent hosts.

Closes-Bug: #1609217
Change-Id: I53e20be9b306bf9d3b34ec6a31e3afabd5a0fd6f"
be7bb4d0f584a05d3e2725f1179ffaed6e8f449d,2019-08-21 09:03:54+00:00,"Kill all processes running in a namespace before deletion

In ""NamespaceFixture"", before deleting the namespace, this patch
introduces a check to first kill all processes running on it.

Closes-Bug: #1838793

Change-Id: I27f3db33f2e7ab685523fd2d6922177d7c9cb71b"
e8653f28dee5044b943c4ca1ee0329e0bd7b34d2,2019-08-21 16:09:09-04:00,"doc: remove deprecated [neutron]/url from compute install guide

The nova [neutron]/url config option was deprecated in Queens [1]
and is being removed in Train [2]. The neutron install guide
sections about configuring compute to work with neutron were still
using the url option so this change removes them. There are a few
things to note here:

1. The url option functionality is replaced with the endpoint_override
   option from keystoneauth1 but we don't really want users using that
   unless there is a real need. One of the main reasons for moving the
   nova configuration to use keystoneauth1 was so that the network
   service endpoint can be looked up via KSA dynamically based on the
   configurable interfaces (public, internal, private) and service types
   authority so the endpoint URL will just be pulled from the service
   catalog. That means not having to hard-code the endpoint URL in nova
   config which makes deployment and config management simpler. As such,
   the url option removed in the install guide here is not replaced with
   the endpoint_override option.

2. Following on #1, the install guide portion about the nova/neutron config
   is updated with a link back to the nova config guide for the full set
   of options in case an operator needs to tweak the config, e.g. to set
   valid_interfaces or endpoint_override because the KSA defaults don't work
   for their deployment.

3. With the old url option, if region_name was not specified, nova would
   default to 'RegionOne'. That is not the case if not using the url option
   so we leave the region_one config in the install guide example, otherwise
   region_name would default to None.

[1] I41724a612a5f3eabd504f3eaa9d2f9d141ca3f69
[2] I6c068a84c4c0bd88f088f9328d7897bfc1f843f1

Change-Id: I30445edeb8509330571db28c7d61dd63886e9e61
Closes-Bug: #1840930"
8033ad13c53b7c8122a9ef6fb6ac48ae96b68cb9,2019-08-22 08:30:47+02:00,"Remove eventlet import from docs conf.py

It is not needed and create problems when trying to create the
documentation from an sdist tarball when git is installed (see [0] how
the problem will be solved in openstackdocstheme).

[0] https://review.opendev.org/#/c/677868/
Change-Id: Iff0c9a4e99ecc16e495fb6283479839595037bc0"
0250b86dff47321bea771eec57bad73feb79bbef,2019-08-23 15:50:14+00:00,"Avoid ""utcnow"" call clash in ""test_update_timpestamp""

The function ""uctnow"" can be called during the execution of the test
""test_update_timpestamp"". To avoid counting other tests calls to this
function, a retesting method is implemented for each check done.

Closes-Bug: #1841183

Change-Id: I2b75bb69feb65ca15fa448362baf2cc47fd42126"
d3359a2bc6c8fd6dbb068bf7f373cbc2922f1173,2019-08-23 17:33:59+00:00,"Force deletion of interfaces to create in ""FdbInterfaceTestCase""

In the no-namespace test cases, sometimes the interfaces to be created
exist in the kernel namespace. To avoid this possible problem, we first
force the deletion of those interfaces.

Change-Id: I9eba21d872263665481303fbab1ee3ec9bdaa044
Closes-Bug: #1841253"
dd96f3775939dc0209396b4bd73038c1962e6a7e,2019-08-25 01:24:03+08:00,"Optimize DVR related port DB query

Save order by in port query when not require fixed_ips,
and save some useless query for dvr subnet mac.

Closes-Bug: #1834308
Change-Id: I6836840edcaa5a21fd2ba9f65ffd24f7e5038fa3"
fb859966f79fc0f4fbb2c2ea3c0e6b4c17a9704f,2019-08-26 15:24:01-04:00,"OVS flows for custom ethertypes must be on EGRESS

Some traffic does not work if the OVS flows to permit custom ethertypes
are not set on the base egress table.  If the rule is added to the base
egress table then both ingress and egress work properly.  Also move
initialization code to the function to initialize egress.

Related-Bug: #1832758
Change-Id: Ia312fe75df58723bf41804eec4bd918d223bd60c"
aa58542e823d23d233524cd5639c7ec4bb757769,2019-08-27 23:43:52+08:00,"Add VLAN type conntrack direct flow

For vlan type network, we add a segment match flow
to the openflow security group ingress table. Then
the packets will be recorded in conntrack table, and
the reply packets can be processed properly.

Change-Id: Ieded0654d0ad16235ec923b822dcd842bd7735e5
Closes-Bug: #1831534"
560c56e603c1c2c4e1d54bdcc85dbd478a5e3c5b,2019-08-27 16:20:38+00:00,"Handle already created objects in ""test_update_timpestamp""

In [1], if the waiting loop is executed more than once, the previously
created objects should be deleted first to avoid the problem related in
[2].

[1] https://review.opendev.org/#/c/678262
[2] https://bugs.launchpad.net/neutron/+bug/1841183/comments/3

Change-Id: I86cd17be6a776e4598abaeeb63de2eecbf0a64f9
Related-Bug: #1841183"
3f022a193f66fde3bfd945af1119a60dfe91cb91,2019-08-27 16:47:00+00:00,"Delay HA router transition from ""backup"" to ""master""

As described in the bug, when a HA router transitions from ""master"" to
""backup"", ""keepalived"" processes will set the virtual IP in all other
HA routers. Each HA router will then advert it and ""keepalived"" will
decide, according to a trivial algorithm (higher interface IP), which
one should be ""master"". At this point, the other ""keepalived"" processes
running in the other servers, will remove the HA router virtual IP
assigned an instant before

To avoid transitioning some routers form ""backup"" to ""master"" and then
to ""backup"" in a very short period, this patch delays the ""backup"" to
""master"" transition, waiting for a possible new ""backup"" state. If
during the waiting period (set to the HA VRRP advert time, 2 seconds
default) to set the HA state to ""master"", the L3 agent receives a new
""backup"" HA state, the L3 agent does nothing.

Closes-Bug: #1837635

Change-Id: I70037da9cdd0f8448e0af8dd96b4e3f5de5728ad"
d1f8888843c53c1c4b95c2fd22b2b6ee97feb238,2019-08-28 17:57:09+00:00,"Increase number of retries in _process_trunk_subport_bindings

In patch [1] as partial fix for bug 1828375 retries mechanism
was proposed.
We noticed that sometimes in have loaded environments 3 retries
defined in [1] can be not enough.
So this patch switches to use neutron_lib.db.api.MAX_RETRIES constant
as number of retries when processing trunk subport bindings.
This MAX_RETRIES constant is set to 20 and in our cases it ""fixed""
problem.

[1] https://review.opendev.org/#/c/662236/

Change-Id: I016ef3d7ccbb89b68d4a3d509162b3046a9c2f98
Related-Bug: #1828375"
16679e9700b68b1bc64072751dd3b38b38492546,2019-08-29 10:41:04+02:00,"Conntrack Helper - Plugin

Implements Conntrack Helper service plugin for conntrack
helper resources. Supports create, update and delete
conntrack helper for l3 routers.

A new configuration option:
  [l3-conntrack-helpers]/allowed_conntrack_helpers
introduced to allow the operator to configure CT
helpers, and the helper protocol constraints.

Related-Bug: #1823633
Depends-On: https://review.opendev.org/663446
Change-Id: I58193955261f50b18b1946261fe662da6b20f0f5"
b8576b7be207c1e11aa243c4aa7ba1601f6e12bc,2019-08-29 10:41:13+02:00,"Agent - Conntrack Helper

Implements the L3 agent conntrack helper extension.

Closes: #1823633
Change-Id: I21cc5683839bbb3fb8a649908080919c1557811d"
69b3762dda47272513e02340e7942d5a39f825c5,2019-08-29 12:52:07+04:00,"Add binding_index to NetworkDhcpAgentBinding

The patch proposes adding a new binding_index to the
NetworkDhcpAgentBinding table, with an additional Unique
Constraint that enforces a single <network_id, binding_index>
per network.

1. When a network is triggered to be auto-scheduled to DHCP
agents, the number of DHCP agents is constrained by
dhcp_agents_per_network in neutron.conf. This prevents
too many DHCP agents from being scheduled in the first place.

2. If users manually schedule a network to specific DHCP
agents, the binding_index increments to show the number of
DHCP agents hosting this network.

Co-Authored-By: Oleg Bondarev <obondarev@mirantis.com>
Change-Id: I1bc3f8b69c337f7c1cf7375509a0da61def9baf1
Closes-Bug: #1535554"
f01f3ae5dd0dd7dd9aa513a1b50e04e20a08b97b,2019-08-30 22:32:19+02:00,"Fix creation of vlan network with segmentation_id set to 0

In case when vlan network was created with segmentation_id=0 and without
physical_network given, it was passing validation of provider segment
and first available segmentation_id was choosen for network.
Problem was that in such case all available segmentation ids where
allocated and no other vlan network could be created later.

This patch fixes validation of segmentation_id when it is set to value 0.

Change-Id: Ic768deb84d544db832367f9a4b84a92729eee620
Closes-bug: #1840895"
f1e1716d0694b3aae8ac719c0fdf1e3be0dac055,2019-09-04 15:25:34+00:00,"Fix OVS build issue on Fedora

No longer build the OVS kernel modules when installing from
source. This was added when OVS didn't support conntrack,
which hasn't been the case for a while.

This is breaking one of the networking-ovn repos periodic jobs.

Depends-on: https://review.opendev.org/#/c/680066/
Change-Id: Ia9cc8f3ee11802f51317eb0e7c82fadd1c15c4b4
Closes-bug: #1830248"
cb75ecb72939d300bbcd29b98f50a69d93110af6,2019-09-04 18:29:16+00:00,"Remove references to FWaaS v1

There are still references to FWaaS v1 in the Neutron documentation.
Remove them as the code was deleted in the Stein cycle.

Closes-bug: #1833122
Change-Id: I8673d94d0f70e046a6fd7b45572773e7e3df73d0"
bacc7abf83f18825a49af2c14cebbeb312615c1d,2019-09-06 07:44:29+00:00,"Make Neutron gate great again

This is combined patch to fix couple of issues which
we recently had in gate.

1. [Functional tests] Fix SIGHUP handling tests

Tests in neutron.functional.test_server module are testing how
PluginWorker, WSGIWorker and RPCWorker are handling SIGHUP signal.

Recently this was changed in Oslo.service with [1] and our tests
were failing because they were still expecting that after sending
SIGHUP to the process, stop() and than start() method will be called.

But as our services uses ""mutate"" as restart method, since [1] such
process don't executes stop() and start() after SIGHUP. It now executes
only reset() method.
This patch reflects that change in Neutron functional tests.

2. Veth pair ""IFLA_LINK"" populated since kernel 4.15.0-60-generic

Since kernel_version=4.15.0-60-generic, ""iproute2"" provides the veth
pair index, even if the pair interface is in other namespace. In
previous versions, the parameter 'IFLA_LINK' was not present. We need
to handle both cases

[1] https://review.opendev.org/#/c/641907/

Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>

Change-Id: I7a3f20a795c89ab1ab037d046a1101cd5c0287d6
Closes-Bug: #1842659
Closes-Bug: #1842482"
14095154691d62e3c661bc7dc9c3d2ce7c3d92d4,2019-09-07 09:29:44+00:00,"Add ""Port"" to ""RouterPort"" foreign_keys

This foreign key is present in the DB model definition [1]. The OVO
definition should reflect it.

Trivial-Fix

[1]https://github.com/openstack/neutron/blob/25d0ad61976933df5ac388dcfb5dc8ba337d5fce/neutron/db/models/l3.py#L29-L33

Change-Id: Ib47d4ade934e1a631bddc19f4a78c237da822994"
8e73de8bc42067c0a6796df3cca9938d25ae754e,2019-09-07 09:41:20+00:00,"Change ovs-agent iteration log level to INFO

Operators may want to see how long it takes in the port
processing procedure since DEBUG log does not enable
basically in the production envrionment.

Related-Bug: #1813703
Related-Bug: #1813707
Related-Bug: #1813706
Related-Bug: #1813709

Change-Id: I43733546abf5421d0e3f4cd5a959d279e1b89d1e"
fea2d9091f71a2ec88318121ed9a22180e1ae96f,2019-09-10 05:46:26+00:00,"Create _mech_context before delete to avoid race

When a network is deleted, precommit handlers are notified prior to the
deletion of the network from the database. One handler exists in the ML2
plugin - _network_delete_precommit_handler. This handler queries the
database for the current state of the network and uses it to create a
NetworkContext which it saves under context._mech_context. When the
postcommit handler _network_delete_after_delete_handler is triggered
later, it passess the saved context._mech_context to mechanism drivers.

A problem can occur with provider networks since the segments service
also registers a precommit handler - _delete_segments_for_network. Both
precommit handlers use the default priority, so the order in which they
are called is random, and determined by dict ordering. If the segment
precommit handler executes first, it will delete the segments associated
with the network. When the ML2 plugin precommit handler runs it then
sees no segments for the network and sets the provider attributes of the
network in the NetworkContext to None.

A mechanism driver that is passed a NetworkContext without provider
attributes in its delete_network_postcommit method will not have the
information to perform the necessary actions.  In the case of the
networking-generic-switch mechanism driver where this was observed, this
resulted in the driver ignoring the event, because the network did not
look like a VLAN.

This change uses a priority of zero for ML2 network delete precommit
handler, to ensure they query the network and store the NetworkContext
before the segments service has a chance to delete segments.

A similar change has been made for subnets, both to keep the pattern
consistent and avoid any similar issues.

Change-Id: I6482223ed2a479de4f5ef4cef056c311c0281408
Closes-Bug: #1841967
Depends-On: https://review.opendev.org/680001"
49a66dba31f23d54972e962beef66c39307904df,2019-09-10 05:47:24+00:00,"Fix py3 compatibility

In fetch_and_sync_all_routers method is used python's range function.
Range function accepts integers.

This patch is fixing divide behaviour in py3 where result number is float,
by retyping float to int as it is represented in py2.

Change-Id: Ifffdee0d4a3226d4871cfabd0bdbf13d7058a83e
Closes-Bug: #1824334"
f5bcca87d13c0bbf7dfdda1371cd19856dfbcb99,2019-09-10 12:46:47+02:00,"Temporary switch broken CI jobs to non-voting

Let's unblock Neutron gate until issues with:

1. rally, rally-openstack and jsonschema versions,
   see https://bugs.launchpad.net/neutron/+bug/1843282
   for details,

2. neutron-tempest-iptables_hybrid-fedora,
   see https://bugs.launchpad.net/neutron/+bug/1843413
   for details

will be fixed.

Change-Id: I275a7caac2e791b5fa2b90121d222d109ed96153
Related-Bug: #1843282
Related-Bug: #1843413"
88c7be55c221a87b4326a915580657f34d1ff582,2019-09-11 02:31:42+00:00,"Fix bulk port functioning with requested security groups

When bulk ports are created with a security group supplied, the
resulting port(s) should only have that security group assigned. But the
resulting ports are getting both the requested security group as well as
the tenant default security group assigned.  This fixes that condition.

In order to ensure that bulk port creation results in the proper
assignment of security groups, add some testing.

Change-Id: I65aca7cd14447cc988e4bc4ab62bc7b9279e7522
Fixes-Bug: #1842666"
380825fcf8e5bdba10c3b2758dfb772e28f9461e,2019-09-11 07:05:54+00:00,"Check mech driver connectivity during port binding

In [1] the concept of ""connectivity"" was introduced for the ML2 drivers.
This parameter defines the mech driver connectivity type (layer 2, layer
3 only or legacy - not defined).

The spec defined in the blueprint allows to spawn a VM with ports
without IP addresses. As commented in the Nova spec [2], those ports can
be bound only to ""l2"" drivers.

[1] https://review.opendev.org/#/c/645645/
[2] https://review.opendev.org/#/c/641670/

bp boot-vm-with-unaddressed-port
Related-Bug: #1821058

Change-Id: I438cbab43b45b5f7afc820b77fcf5a0e823d0eff"
b0a93df47637958fc3fc172f15e8593d6e9b181a,2019-09-11 07:06:40+00:00,"Update DHCP port information during setup

When setting up the DHCP agent of a network, the DHCP namespace external
port is configured. If this port already exists and the fixed IP
addresses are correctly configured (in the DHCP subnets range), the port
is used as is.

Sometimes, because of 1627480 or 1841636, the port information is not
correctly retrieved. This patch does not solve it but mitigates the
process of resynchronizing the network DHCP. If the stored DHCP port
does not have the correct information, the agent calls the RPC plugin to
retrieve from the server the DHCP port updated information, including
the fixed IP address and the subnets.

Change-Id: Iff40e7bba645ee12c2001d7ce735a36e0ddc81e9
Related-Bug: #1627480
Related-Bug: #1841636"
085e9d8b3de44a6edd71f2de7e9c2acde053b331,2019-09-11 07:07:01+00:00,"Implement ""list_ns_pids"" inside Neutron

Instead of using Pyroute2.netns.ns_pids() [1], while [2] is not
solved, a method to list a namespace PIDs is implemented in this
patch.

This implementation is based on the Pyroute2 method.

[1]https://github.com/svinota/pyroute2/blob/80f6e7fcdd4136933a7f164ba2cee25f134dc85c/pyroute2/netns/__init__.py#L163
[2]https://github.com/svinota/pyroute2/issues/633

Change-Id: Ic00c02035a0dabf1a1efd1995c84692649c6ad27
Related-Bug: #1841753"
791dc24960f2b5e7b4ebd7d27ec8b8a1e3924e8a,2019-09-11 07:08:07+00:00,"Log when FIP is associated/disassociated

Add a log entry when a floating IP is associated/disassociated from a
port, reporting the external IP, the internal IP, the fixed port ID and
the FIP ID.

The log level is set to INFO; this security information will be
registered regardless of the logging level.

Change-Id: I9124399f680e4123c4dc14e8be666f9c4c5385a0
Closes-Bug: #1842327"
ab07b91b1adf9c7fe3d94a67aeb689788dfee09a,2019-09-11 13:58:47+02:00,"Implement extension: extraroute-atomic

I avoided changing the pre-existing extraroute implementation to
also avoid any breakage of legacy behavior. Alternatively we can
refactor the extraroute code to better fit both APIs:
  * the old: updates to the 'routes' attribute and
  * the new: actions 'add_extraroutes' / 'remove_extraroutes'.

Change-Id: Ia78e0e02de4a42a056e3ff654d8b6976a4e52616
Closes-Bug: #1826396 (rfe)
Depends-On: https://review.opendev.org/679259
Related-Change: https://review.opendev.org/655680 (spec)"
ccc7f4e248a13a0b36774f4b61123ba0c5dbbbc3,2019-09-11 12:06:44+00:00,"Document the incompatibility of trunk ports with iptables_hybrid fw

We seem to have forgot to properly document this limitation and this
is popping up in bug reports.

Change-Id: I3c1d79017349be13ebb2f4a924c065e041ccbf5a
Partial-Bug: #1843285"
63715ea361ea94fb48842c83deef1e5850bcc44d,2019-09-12 10:50:07+00:00,"Re execute a test case if fixtures.TimeoutException is thrown

Since [1] was introduced, it's very frequent to have
""fixtures._fixtures.timeout.TimeoutException"" exceptions during the
execution of UTs and FTs. Because the privsep includes the synchronized
decorator, the synchronization wait is done inside the privsep context.
This is prone to timeouts if the wait is too long.

Until we can reorder the decorators of ip_lib [2] or we can remove the
sync decorators [3], this patch can mitigate the errors in the CI.

[1]https://review.opendev.org/#/c/631275/
[2]https://review.opendev.org/#/c/666853/
[3]https://review.opendev.org/#/c/657608/

Closes-Bug: #1843478

Change-Id: If865c4683645f9bd11f5e1b528bade0547505bfd"
484446984295d3122ead42e93288222d8b4e3ccb,2019-09-13 14:59:49+03:00,"Windows: Fix local adapter ipv6 check

ip_lib.IPDevice.device_has_ip doesn't include ipv6 addresses when
checking if a local adapter is configured to use a certain address.

This change fixes this issue, which will also allow using ipv6
tunnel endpoints.

Co-authored-by: Alin Serdean <aserdean@cloudbasesolutions.com>
Change-Id: Iff3d25a5701b96df9da75cf398fd19d29e5cfeda
Closes-Bug: #1843889"
ab4320edb4661f74465ec49166f8d35b8216035f,2019-09-13 19:54:56+00:00,"Only notify nova of port status changes if configured

Although notify_nova_on_port_status_changes defaults to true, it
could be to false, making the nova_notifier attribute unsafe to
use without checking.

This patch checks both the config option and that the attribute
exists, since the config could be changed after the plugin is
already initialized without the nova_notifier attribute being set.

Change-Id: Ide0f93275e60dffda10b7da59f6d81c5582c3849
Closes-bug: #1843269"
1947fd65d22bad286ffee987181d0c93772d1a85,2019-09-15 16:23:26+00:00,"Implement Floating IP association logic only once

Implement the Floating IP association logic only in one single place,
L3_NAT_dbonly_mixin._update_fip_assoc(). The dictionary returned will
include a new key, ""association_event"", with values:
- None: there is no association event. The internal port does not
  change.
- True: a new internal port is added to the FIP register. An
  association event can imply a disassociation event if the FIP register
  had an existing internal port.
- False: the previous internal port is removed and no one is added.

Change-Id: I775aee178cf56f842b3c0a375eda01577840e227
Related-Bug: #1842327"
2c095811afa8a66b30fa8cf34831b83fcb873fe6,2019-09-16 09:10:23+00:00,"L3 Conntrack Helper - Release Note

The releasenote for the L3 Conntrack helper extension.

Related-Bug: #1823633
Change-Id: I4fe429f7fd938f428fa80d2d51deb755c9c59c91"
6c99bf195200422d6db4e8307f5a2e61c2242dc1,2019-09-16 12:23:35+00:00,"Add l3 conntrack helper to devstack plugin

This commit adds possibility to configure L3 conntrack_helper
service plugin and l3 extension with devstack plugin.

Related-Bug: #1823633
Change-Id: Ie96ff80f1c296c40ec2cd82c8d917a8bb262b12e"
ab75405708ffdbe2d7630166c13744d4848909c0,2019-09-16 16:53:34-04:00,"Initialize nova_notifier for only port data changes

If notify_nova_on_port_status_changes is False, but
notify_nova_on_port_data_changes is True, the nova_notifier
object in the plugin will not be initialized correctly.
This was never noticed because these two options are
typically configured identically.

Change-Id: I3b0ca77b677fe335161b9a649b4ac397e64eacaa
Related-bug: #1843269"
1df7e4bc466a03aae6566354839fe2e1fde4aea2,2019-09-17 22:19:19+09:00,"doc: Remove stale references to external_network_bridge

This is a leftover of https://review.opendev.org/#/c/395568/ .

Closes-Bug: #1844171
Change-Id: I99e45b78a5b56601f02c9e3c09b621c4d3b67de3"
def8e95aad1e4588c369d537ee66234245eefdf6,2019-09-18 11:07:44+02:00,"fixed_configured=True when Add/Remove port IPs

When updating a port with the fixed_ips request the
fixed_configured argument should be set to true when
calling _ipam_get_subnets() so that all subnets are
returned if host is not set.

Otherwise the ip allocation will be deffered and an
empty list of possible subnets for the port is
returned. Which in turn led to raising an error that
the network requires subnets to allocate an IP
address.

Closes-Bug: #1844124
Change-Id: I2e690ea0cf5fa0614e39be2b0e83afad3daa7f48"
0528068a35b8ffecaf69d1cffb325604b97d30ed,2019-09-18 14:01:27+02:00,"switch to the newly created opensuse-15 nodeset

opensuse-150 nodeset is referring to openSUSE 15.0, which is still in
maintenance but openSUSE 15.1 has been released already. ""opensuse-15""
is going to refer to the ""latest openSUSE 15.x"" build released and
working for OpenStack going forward, so add this nodeset and use
it by default going forward.

This is the remaining work to be done after https://review.opendev.org/#/c/667539
got merged earlier

Change-Id: I6b3881a77de0419e0c3612661bf60cc2e55da0a7
Depends-On: https://review.opendev.org/#/c/682843"
0550c0e1f66b26e7e947958fdddb60d8f309e76f,2019-09-19 19:41:00+08:00,"Avoid unnecessary operation of ovsdb and flows

Type of lvm.vlan is int and other_config.get('tag') is a string,
they can never be equal. We should do type conversion before
comparing to avoid unnecessary operation of ovsdb and flows.

Change-Id: Ib84da6296ddf3c95be9e9f370eb574bf92ceec15
Closes-Bug: #1843425"
d1d0a04c37740aefe26d553df1f1fbeaf631151b,2019-09-20 07:46:06+00:00,"Remove Neutron LBaaS

Neutron-LBaaS has now been retired and there will be no Train
release[1]. This patch removes neutron-lbaas references from
neutron.

[1] https://review.opendev.org/658494

Closes-Bug: #1833125
Change-Id: I0fe3fbaf4adf7fb104632fd94cd093e701e12289"
2a7030a6b7ae2ab2e24648727bbde91b05de82cc,2019-09-20 08:35:24+00:00,"Change ip_lib decorators order

Change the execution order of:
- @privileged.default.entrypoint
- @lockutils.synchronized(""privileged-ip-lib"")

""synchronized"" decorator holds the execution of the function until
the lock is released. Using the current decorator ordering, this
active wait is done inside the privsep context. This can exhaust
the number of execution threads reserved for the privsep daemon.

Closes-Bug: #1833721

Change-Id: Ifcce954003e360f620f9131a36a08ab84cbe6193"
f51e5ce9241c9bbd0e2ed786f41dc11ed0146b88,2019-09-20 13:31:32+00:00,"Remove get_external_network_id for router

L3 agent supports multiple external networks from a long
time ago, so remove this RPC call since it is not used.
According to codesearch of [1] and [2], we just remove
neutron built-in L3 agent RPC. For neutron server side
or RPC callback classes, the function is still remained.

[1] http://codesearch.openstack.org/?q=get_external_network_id
[2] http://codesearch.openstack.org/?q=L3RpcCallback

Change-Id: I764423e175d6e82729a647e415a9f267f495916f
Closes-Bug: #1844168"
c952b5960001faf98186b630fde75deafe5a7b8f,2019-09-20 16:17:41+00:00,"Handle ports assigned to routers without routerports

In the case of having a port attached to a router but the routerport
register is missing (as seen in the bug reported), this patch retrieves
the full list of ports attached to a router, filtering by router ID
and network ID or port ID. In case of having a port attached to this
router with missing routerport register, a warning message is logged.

Closes-Bug: #1842937

Change-Id: I93f35eade6aa081160902d9d47278123815c04d1"
4a8e7374415f5503e9aff9bfd02f03b4743a7739,2019-09-20 16:35:27+00:00,"Revert ""Temporary switch broken CI jobs to non-voting""

This reverts commit f5bcca87d13c0bbf7dfdda1371cd19856dfbcb99.

1. rally: the problem was fixed in [1] and it's included
   in version 2.0.0 [2].

2. neutron-tempest-iptables_hybrid-fedora: now devstack
   points to Fedora 29 [3].

[1] https://review.opendev.org/#/c/681001/
[2] https://review.opendev.org/#/c/682162/
[3] https://review.opendev.org/#/c/662529/

Change-Id: Ie900ec00c116c740aca972fb88ed5bcfe05e81b5
Related-Bug: #1843282
Related-Bug: #1843413"
2bb241b7a28834db0f8b9eff7a3f79c05e316a00,2019-09-23 09:58:36+00:00,"Log the IPTables rules if ""debug_iptables_rules""

If the configuration flag ""debug_iptables_rules"" is enabled, the
IPTables rules applied will be logged.

Similar to [1], when the IPTables firewall is enabled, it checks the
status of the following sysctl knobs:

* net.bridge.bridge-nf-call-arptables
* net.bridge.bridge-nf-call-ip6tables
* net.bridge.bridge-nf-call-iptables

In this case, the firewall is not enabling them but just checking the
status and logging it, to make easier the debugging process.

[1] https://review.opendev.org/#/c/371523/

Change-Id: I2ec953228d1d45e1d4c493c0b261901e6dbec0f7
Related-Bug: #1843259"
f9a750fcaf82afc2f610ad4742c4778da660aac9,2019-09-23 14:59:41+03:00,"Prevent providing privsep-helper paths outside /etc

This commit aligns privsep filters with other projects
e.g nova[1], cinder[2] to prevent a malicious user from
invoking privsep-helper with an arbitrary configuration file
in case it took control over an unprivileged neutron process.

[1]https://github.com/openstack/nova/blob/4f261f98e19d28fa29ff6a4d62a6a3a8a4114575/etc/nova/rootwrap.d/compute.filters#L23
[2]https://github.com/openstack/cinder/blob/f5feb87ab8ee88a368be41557ba702a0c7816e47/etc/cinder/rootwrap.d/volume.filters#L41

Change-Id: I0b4e8cdee0cbbc46547599e176efb4420ee1b318"
d8eb42f1eaaa3747691cbb91db49292c66732073,2019-09-24 14:03:37+00:00,"Configure keepalived interfaces according to config file

""keepalived"" process stops running if it does not find any of the
tracked interfaces correctly configured. To prevent this in
""KeepalivedManagerTestCase"" test cases, ""eth0"" is set up and an IP
address is assigned.

Change-Id: Ibd4ef7b0db5b6830383fffcac685b9c709aae350
Closes-Bug: #1845150
Related-Bug: #1830232"
b3eda71638973836c68dca90da9e017b285a642c,2019-09-24 16:35:48+02:00,"Release note for API extension: extraroute-atomic

Change-Id: Idb1be0ed3ca65aecb0d59d0b8644213774959807
Partial-Bug: #1826396 (rfe)
Related-Change: https://review.opendev.org/655680 (spec)"
ffe5943e657ef32bf4c509a8965cf03a4703be1d,2019-09-24 21:16:53+00:00,"Make port list by mac case insesitive

This fix removes the case sensitivity when performing
port list by mac address criteria.

Closes-Bug: #1843428
Change-Id: I7ab6934ea333467d2efc5da0471b1af82ebb44b8"
94f69ab407d081ce49fa5a93946c4cd41bf6ee89,2019-09-25 12:42:13+00:00,"Randomize BaseFullStackTestCase._find_available_ips

Instead of retrieving an IP address of the CIDR network in
ascending order, this patch randomizes the IP address selection.

Change-Id: I5971d078bd68c3c0b104eea0d443511e741540c4
Related-Bug: #1808595"
6b241bb13c400f28401605e05d66facf661460fb,2019-09-25 09:09:10-04:00,"Always make sure openvswitch kernel module is loaded

In change https://review.opendev.org/#/c/661065/ we stopped
compiling openvswitch from source, which was always doing
a reload of the kernel module.  We've seen in some cases
the module isn't loaded, so change to always load the
module unconditionally to avoid this.

Change-Id: I2ac2aa4cc84d6f5ac62bc8c7aec67ac17d89c614
Closes-bug: #1845324"
761b91fd221914ce06ded381264740abc29fe066,2019-09-25 16:23:31+00:00,"Randomize VNI in FdbInterfaceTestCase

Randomize VNI in FdbInterfaceTestCase to avoid clashes if several test
cases are creating VXLAN interfaces in the kernel namespace at the
same time.

Change-Id: Ic90fa31aa15723eab7f518a42762a7f1c80ee736
Closes-Bug: #1845354"
db3001a7a2fe038704f1f74667f0019f833ba867,2019-09-27 12:06:07+00:00,"Remove QoS related objects unneeded compatibility conversions

Last changes affecting to object compatibility, done in those OVOs:
* QoSPolicy: https://review.opendev.org/#/c/428304/, 2y 4m ago.
* QosBandwidthLimitRule: https://review.opendev.org/#/c/449831/,
  2y 5m ago
* QosDscpMarkingRule: https://review.opendev.org/#/c/300501/,
  3y 3m ago
* QosMinimumBandwidthRule: https://review.opendev.org/#/c/344145/,
  3y ago
* QosRuleType: https://review.opendev.org/#/c/475260/, 2y 3m ago

Change-Id: I5fd394c2deb4446e21e092ea490791cc5bbc5669
Related-Bug: #1828437"
654c1f06d583965c4b5a2ae721a7b1f3786dc76a,2019-09-30 01:18:03+00:00,"Fix designate driver not being fully region aware

The admin part of the designate implementation, never
passes the region or url to client. This means that it
may fail in multi-region situations.

We fix this by always passing the endpoint
override to the client every-time it's instantiated.

We also add an alternative uri for devstack
when a designate-api port isn't set.

Closes-Bug: #1845891
Change-Id: Ia86c3177f1c0a1909a35e55e63b60aec5167124d"
040b550a861ce321c87ac33e92836a502d9531d3,2019-10-07 14:47:19-04:00,"Use admin context when updating router gateway

When a router gateway is updated and the subnet changes,
we need to use the admin context in order for the operation
to succeed.  Since the target network has already been
verified to be external, this is OK. The other operations
in this area such as create and delete already do the
same thing.

Added a fullstack test that moves a gateway between subnets
and verifies it's reachable afterwards.

Change-Id: Iead87ba6182d633f0f808032166e02e767fcffae
Closes-bug: #1812118"
451c21571f40ca83eb3189e5c924b03c0561f853,2019-10-08 10:57:42+03:00,"ovsdb monitor: handle modified ports

This patch ensures that the ovsdb monitor propagates the events
received for modified ports.

We'll use a new list for the modified ports, which the neutron ovs
agent can handle.

In particular, this will cover the situation in which the ofport
changes. When using recent OVS Windows versions, VM ofports change
to -1 (invalid) when the VMs are shut down, receiving a valid
ofport when the VMs are powered back on (different than the initial
one). With this patch applied, ""modify"" events will be propagated
to the ovs agent, which will then update the OpenFlow rules.
The old rules are cleaned up by ""update_stale_ofport_rules""
once the invalid ofport is detected.

Closes-Bug: #1843870
Co-authored-by: Alin Serdean <aserdean@cloudbasesolutions.com>

Change-Id: I0c3a570cbb3fbb03b4224744b32e034e9e255f8e"
12760c94c89f654885d0432a4da37110c112be1a,2019-10-08 12:12:43-05:00,"Adding LOG statements to debug 1838449

Adding LOG statements to debug 1838449

Change-Id: I6f9cbe2e6b4ea0f122f5f8318dbbc31fce6b61f4
Related-Bug: #1838449"
ac0a426017e92d5d73e97c26ef18a888e02da104,2019-10-11 00:36:30+09:00,"Add policy config for get_flavor_service_profile operation

Policy for this API call was commented out but it is needed
for DELETE flavor_service_profile operation as Neutron's policy
module looks for ability for SHOW command when DELETE is rejected
to ensure what error message should be returned to the user.

This patch will fix Patrole test failure, see related bug description
for details.

Change-Id: I4a0e97845a40888f7f2c7267d9adb7be663ee380
Closes-Bug: #1843290"
6a5a75d5a6d4af08310774cef1b091d2ce2551d4,2019-10-14 13:01:30+00:00,"Add radvd_user config option

In some deployments, the ""neutron"" user does not have the permissions
to modify the kernel interfaces. In those cases the radvd user should
be defined. This patch introduces a new config option: ""radvd_user"".

This config option is the username passed to radvd, used to drop root
privileges and change user ID to username and group ID to the primary
group of username. If no user specified (by default is an empty string),
the user executing the L3 agent will be passed. If ""root"" specified,
because radvd is spawned as root, no ""username"" parameter will be
passed.

Change-Id: Ie9a6fbf04d453a3c1c0bddf9ecaa3d4d6467e8ff
Closes-Bug: #1844688"
dce7af902c4207dcaa062eef7a21da2017fb37c7,2019-10-15 10:36:49+02:00,"Mock openstacksdk raise_from_response in ironic unit test

Mocking the openstacksdk exception method raise_from_response
to prevent random error messages even in succeded unit
tests.
An example:
https://zuul.opendev.org/t/openstack/build/943c3f89519c44a58e0b5c86ad4efff8/log/job-output.txt#23782-23789

Change-Id: I3d9128d6712b4094c0b2ad7e12db9e5a915e3d91
Closes-Bug: #1848147"
592b44629905d68b39ec92604b882627f4844908,2019-10-15 17:25:03+00:00,"Convert Pyroute2 byte results to strings

Pyroute2 can return information structures with values as bytes
instead of strings. In order to unify the output, those byte
parameters will be converted to string. This is needed in case of
having dictionaries with keys as bytes instead of strings.

Change-Id: Ic665b2c5e28d06e21190f06d9f3f8e8f8c3c792d
Closes-Bug: #1846360"
e801159003978f7c5c67eb3e9fe36fa690656d77,2019-10-21 15:44:18+04:00,"Handle OVSFWPortNotFound and OVSFWTagNotFound in ovs firewall

This will prevent ovs agent from endless fail loop when dealing
with unbound port: like when port was created in neutron before
agent become alive, then agent gets online and and starts processing
devices.
This patch adds exception handling to prepare_port_filter() -
same as done in update_port_filter().

Change-Id: I1137eb18efaf51c67fab145e645f58cbd3772e40
Closes-Bug: #1849098"
bdc1bc73f3f118901295b247c9c7ce96511907ac,2019-10-21 16:05:04+00:00,"Fix mismatch of tags in dnsmasq options

In some cases (I don't know exactly how) it may happend that
when new subnet, e.g. IPv6 is added to the network, subnets
can change their order based on uuid.
As before this patch we were using in dnsmasq options tags like
""tagN"" for subnets (where N was just number based on position of
the subnet in the sorted list) it could happend sometimes that
dnsmasq ended up with mismatch of tags configured in ""dhcp-range""
cmd option and set in ""opts"" file. That caused problem with serving
proper DHCP options to the vms.

This patch fixes this issue by using tags with format:
""subnet-<uuid>"" where uuid is id of the subnet. That was it's not
based on order of subnets in the list and will always match with tag
configured in opts file for specific subnet.

As we was currently using port id as tag for ""per port"" DHCP options,
this patch changes that to use tags like ""port-<uuid>"" to make it
consistent with options configured ""per subnet"" and to make it easier
to debug from where each option comes.

Change-Id: Idaea33d62fa31edd7149ec916ec314438375724a
Partial-Bug: #1848738"
471dc98707795a770114de7fc0d0e2ee704b682d,2019-10-22 16:11:19+00:00,"Temporary disable CI job neutron-functional-python27

Due to the high rate of TIME_OUT errors in the CI and the gate.

Change-Id: I2f584542efc4bac743e34d6ee28a94aa87c3c4f6
Related-Bug: #1848944"
48730d9449c0e425637f0f1182d81f60a3d259ac,2019-10-23 18:36:59+00:00,"Use threads insted of greethreads in IP monitor

IP monitor is a method that is going to be executed in a separate
process, to monitor the IP addresses changes in a namespace.

This method spawns a thread to read from a socket opened by Pyroute2.
The read function is a blocking method that will end only when the
socket is closed. To avoid thread starvation that can happen using
greenthreads, IP monitor will use kernel threads.

This will increase the resources used but will ensure that no message
is lost when reading the monitor socket.

Reduced the number of IPs generated in ""test_add_and_remove_multiple_ips""
to shrink the testing time used.

Change-Id: I3fbba2854d40ab0f683443aa30c2a95752345d2e
Closes-Bug: #1849547"
51dd91a73d4812953702a421449f1ae45f166df1,2019-10-23 22:46:51-04:00,"Update bug contacts

When we updated the list of lieutenants [0] we did not
update the list of bug contacts, do it now based on that
same information.

[0] https://review.opendev.org/#/c/687482/

Change-Id: If69c2dfd2019a41eea2fedc6199ab08757444f5f"
1a686fb401eca1843b81292fc88c13a2e6fd274d,2019-10-25 08:51:19+02:00,"Switch to use cast method in dhcp_ready_on_ports method

When DHCP agent reports to the neutron-server which ports are
ready, it was using call() method from rpc client.
That caused blocking dhcp agent's dhcp_ready_ports_loop thread which
blocks to send info about other ready ports if there are any.

Method call() should be used when RPC caller returns a value to the
caller but that's not the case here. On neutron server side this
RPC method is only calling provisioning_complete() method to
finish provisioning of ports. And is not returning anything.

So to make sending dhcp ready ports to neutron-server much faster
this patch switch to use cast() method from rpc client.
This method don't block to wait for return value from RPC caller.

Change-Id: Ie119693854aa283b863a1eac2bdae3330c2b6a9d
Closes-Bug: #1850864"
4f59db2fab33e39f3d101885263e5f6483ad2b94,2019-10-25 08:27:54+00:00,"Reset timeout exception in DietTestCase when retrying

In case of fixtures.TimeoutException, DietTestCase retries the
execution of the test case (introduced in [1]). But the timeout
fixture was not reset. This can lead to a general execution timeout
if a test do not exit in a proper time.

[1] If865c4683645f9bd11f5e1b528bade0547505bfd

Related-Bug: #1843478
Partial-Bug: #1848944
Change-Id: Ib6ef58b5259ea4bf151e866f6244ff87b195b139"
ecef65b9b51fc1bd684ca9eb72a024ee44ca9347,2019-10-25 16:28:37+00:00,"Do not use exceptions in get_link_id() to control the code flow

Instead of using exceptions as control flow, check the Pyroute2 command
result and only raise the Neutron exception if needed. This will also
reduce the traceback log in case of raising NetworkInterfaceNotFound.

Although in Python the use of exception for this is common, this is
usually considered an antipattern.

Change-Id: I0e8bb3b0f6a46f2bac75e38c6ac6cdd094247f89
Closes-Bug: #1849449"
7c5ce50a0c9e09d2729ae1ce79d2623ccafca9ee,2019-10-25 13:30:30-04:00,"Check dnsmasq process is active when spawned

After spawning the ""dnsmasq"" process in the method
""Dnsmasq._spawn_or_reload_process"", we need to check that the ""dnsmasq""
process is running and could be detected by the ProcessManager instance
controlling it.

ProcessManager determines if a process is ""active"":
- If the network ID is in the cmdline used to execute the process.
- If the process is detected by psutil.Process(pid), returning the
  cmdline needed in the first condition.
- If the PID file exists; this is written by the dnsmasq process
  once is started and is needed in the second condition.

To make this feature available for any other process using
ProcessManager, the implementation is done in this class.

Change-Id: I51dc9d342c613afcbcfdc50a1d2811502748f170
Closes-Bug: #1849502"
1d55a4508febe2954955798ca0dd012ae44b591f,2019-10-26 16:42:33+00:00,"Clean-up ssl packages from bindep.txt

tempest was removed from test-requirements.txt in [0]
but it's requirements in bindep.txt were not.  Clean
them up.

[0] https://review.opendev.org/#/c/506672/

Change-Id: I47d160823d1b93f79bdef88200835419cd9d84d1"
48ea7da6c52ee14f0e9cc244fbc834283a8e74a7,2019-10-26 19:40:44-05:00,"Router synch shouldn't return unrelated routers

[0] introduced the concept of connected routers: routers that are
connected to the same subnets. When a L3 agent is synching a router
with connected routers, the data of the entire set should be returned
to the agent by the Neutron server.

However, if an agent tries to synch a router with
no connected routers when the same agent has other routers that are
connected among them, the Neutron server returns the former and the
latter. For details of how this bug can manifest itself, please see [1].

This change prevents this situation: only the synched router is
returned.

[0] https://review.opendev.org/#/c/597567
[1] https://bugs.launchpad.net/neutron/+bug/1838449/comments/15

Change-Id: Ibbf35d0f4a0bf9281f0bc8c411e8527eed75361d
Closes-Bug: #1838449"
68625686a40b3eb75502c8116f23d2297e288ca1,2019-10-28 03:32:50+00:00,"Make the MTU attribute not nullable

This patch sets the MTU attribute to non-nullable, the code
that get the MTU and update the network in some methods can
be removed. If the MTU is empty before the pike version, it
is set to the default value of 1500.

Change-Id: Id4d738dde7fa4b7caccabad0aac542b82b4d7af1
Closes-Bug: #1842261"
4379310846078c45df140071688f740cd900c1d6,2019-10-28 09:26:20+00:00,"Remove Floating IP DNS record upon associated port deletion

Port deletion triggers disassociate_floatingips. This patch ensures
that method not only clears the port association for a Floating IP,
but also removes any DNS record associated with it.

Change-Id: Ia6202610c09811f240af35e2523126447bf02ca5
Closes-Bug: #1812168"
4d52b903eb0745296c4e71eebd3db13d17aeede7,2019-10-29 15:10:25+00:00,"Adding check for IPv6 address in setup_controllers

If it is IPv6 then adding [] to it before
creating the connection string.

Change-Id: Idd108cbef944cdd89808bb1ad5c8ab1db202d31a
Closes-Bug: #1846494"
5537a81fbbc6848aabe6ed9f43a82d421684600e,2019-10-30 10:14:26+01:00,"Remove info about ""ovsdb_interface"" from config description

Config option ""ovsdb_interface"" was removed from neutron with [1]
but some small leftovers were still in description of other config
options.
So this patch cleans them.

TrivialFix

[1] https://review.opendev.org/#/c/570259/

Change-Id: I82b91153e697cd78bf7d7212bb842ea733d0ca66"
aedc09917680bc77501f4b57142e73768e3d06ad,2019-10-30 15:06:11+00:00,"Increase timeout when waiting for dnsmasq enablement

In the reported bug, a regression was introduced in [1] when limiting
the time to have a ""dnsmasq"" process enabled. It has been reported, as
documented in the bug, that in older versions (Queens), using Python 2
[2] and older versions of ""ip_lib"" (not implementing most of the
commands using Pyroute2), that the time needed to spawn a ""dnsmasq""
process exceeds the default 60 seconds defined in
""common_utils.wait_until_true"".

This patch increases this time by a reasonable 300 seconds.

[1] https://review.opendev.org/#/c/643732
[2] https://bugs.python.org/issue35757

Change-Id: I2d8693145da72825876b951f2d10afe9ca28ff6e
Closes-Bug: #1849676"
cc3886fd784a91cb42f0add60efb8da9f96328d8,2019-10-30 17:44:45-04:00,"PSExtDriverTestCase: initialize variable in case of exception

Avoid the following when test_create_net_port_security_default
hits an exception before variable network is set:

UnboundLocalError: local variable 'network' referenced before assignment

Related changes:
 - https://review.opendev.org/#/c/188209/
 - https://review.opendev.org/#/c/679399/

Change-Id: I494916567a4df2bef410e8dc54505c289bd55a61"
721887305038fe4449083eb6c33f355232c73555,2019-10-31 11:42:47+00:00,"Set rootwrap daemon timeout for fullstack and functional tests

Set a big timeout for rootwrap daemon in functional and fullstack
tests. The value defined in 7800, the same as the Zuul jobs
timeout.

This timeout increase will prevent the daemon to close when
executing a test root command, as described in the bug. An
unexpected rootwrap daemon closure is not considered as a normal
event during the test execution.

The default value set in the configuration file is 600 seconds, the
same as daemon default value. This timeout is increased only when
OS_SUDO_TESTING=1, that means functional and fullstack tests, when
using the script ""tools/deploy_rootwrap.sh"".

Change-Id: I691300a4e9a7cccd8887bc8f95ba9cea32988bac
Closes-Bug: #1850558"
26b8026cee1b83923744f1ca486a94d513f65964,2019-10-31 14:48:47+00:00,"Update security group rule if port range is all ports

A security group rule where port_range_min:port_range_max
is 1:65535 is specifying all ports, but it is not optimal
for backends to try and implement this potentially large
rule.

Since it is essentially the entire port range, change
min:max to be None, making the rule specify the entire
protocol instead.

Change-Id: Iff22e2fc84d679e20a5a04b8516750c6ea949078
Closes-bug: #1848213"
02be7c13b373cbfd894847be3c3e720e91bdbc53,2019-11-01 18:59:37+00:00,"Remove deprecated agent_type option

This config option was added by [1] and deprecated to
be removed in Mitaka cycle. As we are now in Ussuri, it's
time to finally get rid of it.

[1] https://review.opendev.org/#/c/197210/

Change-Id: Ibd16a0587c88e2dbee1b7938e52140f68821eec6"
5b341150e29137e3dab671453a9a6c0908e74585,2019-11-02 13:46:13+01:00,"Add ""igmp_snooping_enable"" config option for OVS agent

Neutron-ovs-agent can now enable IGMP snooping in integration bridge
if config option ""igmp_snooping_enable"" in OVS section in config will
be set to True.
It will also set mcast-snooping-disable-flood-unregistered=true
so flooding of multicast packets to all unregistered ports will be
disabled also.
Both changes are applied on integration bridge.

Change-Id: I12f4030a35d10d1715d3b4bfb3ed5efb9aa28f2b
Closes-Bug: #1840136"
59b37701e9e0f07583e92c69537b78e696360997,2019-11-04 14:20:31+00:00,"TestMinBwQoSOvs must call the correct methods

Minimum bandwidth rules and policies set in OVS can be found using
the methods:
  - OVSBridge._find_qos()
  - OVSBridge._find_queue(port_id)

The methods currently used are incorrect and are not testing correctly
the real status of the OVS DB.

Change-Id: Ibf2b06439a3cf6a40fec0435b4305a93a5629fd8
Closes-Bug: #1848220"
0a3c53e411769141adc44b14af5efb854359af1a,2019-11-04 17:44:44+00:00,"Move migration to proper dir and fix objects tests

This is an alternative to revert patch:
https://review.opendev.org/#/c/691710/

Change-Id: I72082226e6b3930efb537cab9d979e5770211f72
Closes-Bug: #1849976"
9ad03dcf96b9b2fbe43dede8b59c99542bda237a,2019-11-05 15:21:30+00:00,"Catch FileNotFoundError when listing namespace PIDs

During the namespace PID listing, if a process is stopped, it will
disappear from ""/proc/<pid>"". When ""os.stat(path)"" is executed on
an unexistent path, returns ""FileNotFoundError"". This exception
should be catched and ignored.

Change-Id: Icde5e15bd97578f5ec8273f22ef8384502be1850
Related-Bug: #1841753"
d15ad2e481b9b888079d55ba46d73ca5b7253285,2019-11-05 18:48:22+00:00,"Increase waiting time for network rescheduling

Increate waiting time in ""test_reschedule_network_on_new_agent"", when
the network is being rescheduled from a dead DHCP agent to an running
one.

According to [1], 120 seconds could be a convervative and enough value
to wait for this transition.

[1] https://bugs.launchpad.net/neutron/+bug/1799555/comments/23

Change-Id: I2fec6015b56fd1b5d21b75f7432c40b2110fe6bc
Related-Bug: #1799555"
7a9d6d26419defa148764166600bc4ac6b50c109,2019-11-07 06:42:08+00:00,"Do not initialize snat-ns twice

If the DVR+HA router has external gateway, the snat-namespace will be
initialized twice during agent restart. And that ns initialization
function will run many external resource processing actions which will
definitely increase the starting time of L3 agent. This patch addresses
this issue.

Change-Id: I7719491275fa1ebfa7e881366e5cb066e3d4185c
Closes-Bug: #1850779"
ab286bcdaccb788ab9df3186e0605e93a9b10bbc,2019-11-08 15:34:17+04:00,"Set DB retry for quota_enforcement pecan_wsgi hook

The hook starts a DB transaction and should be covered with
DB retry decorator.

Closes-Bug: #1777965
Closes-Bug: #1771293
Change-Id: I044980a98845edc7b0a02e3323a1e62eb54c10c7"
76de8a715d0f48b24fccc06459e9413b96a0449c,2019-11-11 17:13:00+02:00,"SR-IOV: macvtap assigned vf check using sysfs

This reverts commits:
 9a022e7d7b85b7c21cf26698fe59c818c4577194
 d7604169988726d121cdc9727accfeb6e29f4aed

As the issue is relevant only for old kernels and almost 4 years
have passed since this fix was introduced, it is safe to undo the
workaround to use ip link show command for determining whether or not
a VF is assigned with macvtap(and followup patch that fixed excessive
use of ip link show commans).

reverting this commit will benefit the agent by reducing the amount of
ip link calls.

While it is possible to perform a revert-per-commit, this change should
really go in as one commit for clarity and avoid introducing a
performance degradation in case one is merged without the other.

 Conflicts:
	neutron/plugins/ml2/drivers/mech_sriov/agent/eswitch_manager.py
	neutron/plugins/ml2/drivers/mech_sriov/agent/pci_lib.py
	neutron/tests/unit/plugins/ml2/drivers/mech_sriov/agent/test_eswitch_manager.py
	neutron/tests/unit/plugins/ml2/drivers/mech_sriov/agent/test_pci_lib.py

 Conflicts details:
   In eswitch_manager: merge tool was unable to properly revert
                       is_assigned_vf() due to changes in later patches.
   In pci_lib: conflicts with later changes to is_macvtap_assigned()
               and link_show() that are no longer required and revert
               of IPCommandDeviceError definition.
   In unit tests: conflicts due to newly added tests and reverting the
                  IPCommandDeviceError exception definition.
                  Sorting out mocks as link_show() method was removed

Related-bug: #1523083

Change-Id: I04ea8eb63de07a6e1e51c2790c5920b086b8542c"
cae66a4d8d13deda74db806d733c2ac39ea2e849,2019-11-12 07:17:29+08:00,"Revise log when create port failed

Log network_id passed from api rather than subnet['network_id']

Change-Id: Ia36635014e827b4a321dbdce22f605c76cc88390
Closes-Bug: #1844607"
3c9b0a5fac2e3a1321eadc272c8ed46aa61efd3e,2019-11-12 14:56:34+01:00,"[fullstack] find ip based on allocation_pool

_find_available_ips tried to find available ips based on the given
subnet's cidr field, which can be misleading if random selection goes
out-of allocation-pool. This patch changes this behaviour to use
cidr's allocation_pool field.

Closes-Bug: #1850292
Change-Id: Ied2ffb5ed58007789b0f5157731687dc2e0b9bb1"
458fd224db8cb263b8872ae8d0b7c893e9fd8de2,2019-11-15 11:26:27+01:00,"[Fullstack] Fix waiting for packet with DSCP mark in test

In test_dscp_marking_packets, sender vm is sending ICMP packets to the
receiver_vm.
Before this patch even if first ICMP packet wasn't send properly, test
failed due to exception raised in execute method.

It can happend sometimes that first packet will fail to be send as there
can be e.g. some configuration on agent's side not done yet. So we
should try to ping receiver_vm for 60 seconds instead of failing on
first attempt.
This patch changes that behaviour in test.

Change-Id: Ic84e1ef507f017516d47a6b66e646e7e7b5ded8d
Closes-Bug: #1852724"
4afba466e04fb74c8915f9f1b40686008b2503fb,2019-11-17 20:24:39-05:00,"Make network support read and write separation

When 'slave_connection' is configured in neutron.conf, executing
the 'neutron port-show' command will read the port information from
the slave database nodes, but the network will not be able to read
the information from the slave database nodes.

Change-Id: I572cecace1016740584757e5f926d246ead2d9a0
Closes-Bug: #1840638"
0041860e97cbf34fd652224b3355818bf4a681f3,2019-11-18 14:09:32+01:00,"HA race condition test for DHCP scheduling

Add fullstack testcase for DHCP HA scheduling with fake scheduler
that selects new agent with some extra sleep for every scheduling.

Change-Id: I1045992ce9a18b37dd7dcdb46063698fad983932
Related-Bug: #1535554"
728d8ee4b1b9fd6a99ebbd66a0e30e81a078a5b5,2019-11-20 17:47:17+00:00,"NetcatTester.stop_processes skip ""No such process"" exception

If any of the processes, client or server, spawned by NetcatTester is
not present during the stop command (kill signal sent), by default the
method will not raise an exception.

Change-Id: If8cf47a01dc353734ad07ca6cd4db7bec6c90fb6
Closes-Bug: #1852869"
cdadaef53abadfd0176fc2ffffe334a721e11156,2019-11-20 18:00:13+00:00,"OpenFlow monitor

This OF monitor will track the changes in the OF list in a OVS bridge.
The events (ADDED, MODIFIED, DELETED) are stored internally in the
instance and can be retrieved using the property ""of_events"". Once
the stored events are read, the buffer is deleted.

Change-Id: I9fd571881bdd899d0ad0f5105dc48ddd123b86f6
Closes-Bug: #1848500"
ea85e39660abaa224c159c42214fdb7042302bea,2019-11-25 16:33:15-05:00,"Force arp_responder to True when DVR and tunneling enabled

After [1] and [2], the ARP responder needs to be enabled
if DVR and tunneling are enabled or ARP will not work. If
it is False we will log a message and force it to True.

[1] https://review.opendev.org/#/c/651905/
[2] https://review.opendev.org/#/c/653883/

Change-Id: I934062c970effe5194056b0786f84f3246850701
Related-bug: #1774459"
139b496ef957364caee6861fd16676cdfb76a38b,2019-11-26 01:55:03+00:00,"Dont schedule Network, respecting network_auto_schedule config

Currently, if dhcp mapping from a network is removed, it is reassigned
to the network. This is because of the Network Scheduler's schedule
function, which considers balancing the networks with the agents, whether
enable_dhcp is set on its subnets or not. It does not take into account
the network_auto_schedule config option. This is particularly disturbing
when considering backends which have their provide their own DHCP.

With this patch, if network_auto_schedule is set to False, networks wont
be automatically scheduled to DHCP Agents. If DHCP is to be mapped to a
network, it can be mapped using the CLI itself.

While it may seem that this change is breaking what is already working,
but as mentioned earlier, if there are network backends which provide DHCP
support themselves, they wont need the automatic mapping, which the term
""network_auto_schedule"" actually stands for.

Closes-Bug: #1647421
Change-Id: If1a6a2a174d0f737415efa2abce518722316a77b"
b898d2e3c08b50e576ee849fbe8614c66f360c62,2019-11-27 15:45:09+01:00,"List SG rules which belongs to tenant's SG

In case when user's security group contains rules created e.g.
by admin, and such rules has got admin's tenant as tenant_id,
owner of security group should be able to see those rules.
Some time ago this was addressed for request:

GET /v2.0/security-groups/<sec_group_id>

But it is also required to behave in same way for

GET /v2.0/security-group-rules

So this patch fixes this behaviour for listing of security
group rules.
To achieve that this patch also adds new policy rule:
ADMIN_OWNER_OR_SG_OWNER which is similar to already existing
ADMIN_OWNER_OR_NETWORK_OWNER used e.g. for listing or creating
ports.

Change-Id: I09114712582d2d38d14cf1683b87a8ce3a8e8c3c
Closes-Bug: #1824248"
5cb0ff418a0794d060001a7313561c4cfb584d0e,2019-11-29 11:13:20+08:00,"Add more condition to check sg member exist

Only check sg object is not enough, we should also
check sg'ports is {} or not. Otherwise the old conjunction
will still exist.

Change-Id: I10588e73a9da7fdd43677f9247c176811dd68c62
Closes-Bug: #1854131"
22d2bb94f71d81116046dcf56d8e51e66b6548b6,2019-11-29 14:27:10+00:00,"Revert ""Revise log when create port failed""

After this patch, during delete subnets with fixed ip, there are high
chances a subnet can't be found(because it just deleted) while
deleting another subnet and Raise BadRequest instead of Notfound.
The behavior change led to heat gate failure, since Heat expect to
see NotFound exception instead of BadRequest. 
Also the error message is really confusing while delete subnets
(you can check out more detail in
https://storyboard.openstack.org/#!/story/2006962)

hence, I think to revert this patch will make sense to maintain the
behavior before a proper solution comes out. 

Story: 2006962
Task: 37652
This reverts commit cae66a4d8d13deda74db806d733c2ac39ea2e849.

Change-Id: I9fc200de376668b662cd8c2bfba01483dc9bb677"
151dab39dcb377ffc4a422f28368416d696ef54a,2019-11-29 15:55:17+01:00,"Remove grenade-py3 job from Neutron CI

We have run neutron-grenade-multinode in both check and gate queues
already. This job is almost the same as grenade-py3. The only difference
from Neutron pov is that neutron-grenade-multinode is multinode job and
grenade-py3 is single node job.
So we agreed on last Neutron CI meeting [1], that there is no need to
run both of those jobs.

As grenade-py3 is part of integrated-gate-networking template together
with tempest-integrated-networking job this patch removes also
integrated-gate-networking template from neutron's zuul config and adds
only tempest-integrated-networking to both check and gate queues.

[1] http://eavesdrop.openstack.org/meetings/neutron_ci/2019/neutron_ci.2019-11-19-16.00.log.html#l-179

Change-Id: Ic2e7ca04929dc89a2e408465eb34ef3feec2e328"
4b3baeb15a8015e8ed9075e465cf97800189eef2,2019-11-29 18:12:07+00:00,"Do not inherit from built-in ""dict""

This is not recommended because some type methods are implemented not
in Python but in C [1][2] and should not be overridden. Subclassing
the built-in types directly, will yield non-obvious errors that are
hard to debug, and identify at first glance [3].

[1] http://www.kr41.net/2016/03-23-dont_inherit_python_builtin_dict_type.html
[2] https://treyhunner.com/2019/04/why-you-shouldnt-inherit-from-list-and-dict-in-python/
[3] https://medium.com/bynder-tech/using-collections-in-python-36129737b5a1

Closes-Bug: #1849980

Change-Id: I08c712ff1b093370cda2ce66b93e2a0709094fe1"
a8b5afa41ec8ccda1ace6ebb85bf94c8a9ea829a,2019-12-01 11:58:16+02:00,"Add upgrade check for NIC Switch agent

This commit adds an upgrade check for NIC switch agent
alerting operators to ensure relevant hosts have kernel >= 3.13.

This check is introduced due to recent cleanup in NIC switch
agent code.

As of U release, Supported CentOS major was updated to 8 so it
is not expected that any deployment will have hosts running
kernel < 3.13. This check is added as an extra precaution.

This check should be removed in 1-2 cycles. A TODO was added to
reflect that.

Change-Id: I34003b3c2f0ac23185d036c9e47dc1c8662d6ce7
Related-bug: #1841067"
b01e0c2aa98866df9c25e20a66c02fccccdc7885,2019-12-02 12:22:50+01:00,"[OVS FW] Clean port rules if port not found in ovsdb

During e.g. migration or shelve of VM it may happend that
port update event will be send to the ovs agent and in the almost
the same time, port will be removed from br-int.
In such case during update_port_filter method openvswitch firewall
driver will not find port in br-int, and it will do nothing with it.
That will lead to leftover rules for this port in br-int.

So this patch adds calling remove_port_filter() method if port was
not found in br-int. Just to be sure that there is no any leftovers
from the port in br-int anymore.

Change-Id: I06036ce5fe15d91aa440dc340a70dd27ae078c53
Closes-Bug: #1850557"
397eb2a2febd234ba7246f40f950c3ed4202a3d5,2019-12-02 17:19:03+00:00,"Serialize subnet creating depending on the network ID

Add a new DB table ""network_subnet_lock"". The primary key will be the
network_id. When a subnet is created, inside the write context during
the ""subnet"" object creation, a register in the mentioned table is
created or updated. This will enforce the serialization of the ""subnet""
registers belonging to the same network, due to the write lock in the
DB.

This will solve the problem of attending several ""subnet"" creation
requests, described in the related bug. If several subnets with the
same CIDR are processed in parallel, the implemented logic won't reject
them because any of them will not contain the information of each other.

This DB lock will also work in case of distributed servers because the
lock is not enforced in the server logic but in the DB backend.

Change-Id: Iecbb096e0b7e080a3e0299ea340f8b03e87ddfd2
Closes-Bug: #1852777"
b59fdaa9aa71f61230305a8f23e41c9c7c80e7b7,2019-12-03 10:10:27+01:00,"Log exact error during getting value from file

Before this patch function get_value_from_file() was only
logging something like ""Unable to access {filename}"" but it
would be useful sometimes to check what was exact reason of
IOError so lets log this info also.

TrivialFix

Related-bug: #1853652

Change-Id: I28b1753a8d5767babbb6f06a581ffe1fc4ad75d3"
b81155ee27d918ba934ee7f08cb70d76715a2163,2019-12-05 12:08:21+00:00,"Migrate from ofctl to native QoS DSCP

Neutron migrated from using ofctl from the command line in Pike.
This patch refactors DSCPs OvS backend to use native rather than
ofctl and deprecates the run_ofctl function in ovs_lib.OVSBridge.

Change-Id: Id9ab0eaf92b6ec6d5c9197bee60d324ffcb192a8
Related-Bug: #1853171"
50ffa5173db03b0fd0fe7264e4b2a905753f86ec,2019-12-05 17:39:55+00:00,"[OVS] Handle added/removed ports in the same polling iteration

The OVS agent processes the port events in a polling loop. It could
happen (and more frequently in a loaded OVS agent) that the ""removed""
and ""added"" events can happen in the same polling iteration. Because
of this, the same port is detected as ""removed"" and ""added"".

When the virtual machine is restarted, the port event sequence is
""removed"" and then ""added"". When both events are captured in the same
iteration, the port is already present in the bridge and the port is
discharted from the ""removed"" list.

Because the port was removed first and the added, the QoS policies do
not apply anymore (QoS and Queue registers, OF rules). If the QoS
policy does not change, the QoS agent driver will detect it and won't
call the QoS driver methods (based on the OVS agent QoS cache, storing
port and QoS rules). This will lead to an unconfigured port.

This patch solves this issue by detecting this double event and
registering it as ""removed_and_added"". When the ""added"" port is
handled, the QoS deletion method is called first (if needed) to remove
the unneded artifacts (OVS registers, OF rules) and remove the QoS
cache (port/QoS policy). Then the QoS policy is applied again on the
port.

NOTE: this is going to be quite difficult to be tested in a fullstack test.

Change-Id: I51eef168fa8c18a3e4cee57c9ff86046ea9203fd
Closes-Bug: #1845161"
8cc2765b5fdd229c9f6f19b83ad9e1ba030040ae,2019-12-06 10:28:24+00:00,"Avoid raising NetworkInterfaceNotFound exception in DHCP agent logs

In ""ip_lib.ensure_device_is_ready"", before retrieving the interface
attributes, a check is done to know if the interface exists. In case
it does not exist, the exception ""NetworkInterfaceNotFound"" will not
be raised and written in the logs.

Change-Id: I4b9fd0885d850601717274a5058e042871211bbb
Closes-Bug: #1854723"
ec171b06f0963249f9e8a18b9973a2afb2886e29,2019-12-06 19:34:28+08:00,"doc: fixed word 'neutron-serer' spelling error

there is a spelling error in the document, the 'neutron-server'
was wrongly written as 'neutron-serer'.

Change-Id: I5e6995f46474570289dfb76caaad86a3494a2bbd
Related-Bug: #1854687"
3437572906e38ec05caf141e634025941d887c50,2019-12-08 22:38:45+00:00,"Replace ""ip monitor"" command with Pyroute2 implementation

Use the ""ip monitor"" tool implemented with Pyroute2 library in
the neutron-keepalived-state-change monitor.

Change-Id: I932b62a8e0fa1a2f51bbde44134272f0b31b5c76
Related-Bug: #1680183"
af8a8122407331c70e11b0fe02ad0178fa5181f6,2019-12-09 16:13:10+00:00,"Load the glibc library only once for Pyroute2

Load the glibc library only once, needed in the Pyroute2 methods to
create and delete a network namespace.

Change-Id: I95b7b7008f4788a98ef871c4b7aecea839ff2310
Closes-Bug: #1854462"
258eebea71b1cac37badf429a90d5cf57e4c455c,2019-12-10 10:21:53+01:00,"Locate RP-tree parent by hypervisor name

Previously we assumed that we can look up the resource provider (created
by nova) to be used as the parent of the agent and physical NIC resource
provider tree by the name set in the config option DEFAULT.host. This
assumption was wrong.

While nova-compute's DEFAULT.host and neutron-agent's DEFAULT.host
must match for port binding to work, the root resource provider created
by nova does not belong to the compute host (where nova-compute runs)
but it belongs to the compute nodes (i.e. hypervisors). Actually there
may be multiple compute nodes managed by a single nova-compute (think
of ironic). Plus the value of DEFAULT.host and the compute node's ID
may be different even when nova-compute manages a hypervisor on the
same host because of various deployment considerations. For example
when tripleo does not manage the undercloud (so a libvirt hypervisor
returns the plain hostname), but the same tripleo enforces it's host
naming conventions in nova's and neutron's DEFAULT.host settings.

This change enables neutron to use the hypervisor name to locate the
root of the resource provider tree.

We introduce a new configuration option for

(1) ovs-agent: resource_provider_hypervisors, for example:

[ovs]
bridge_mappings = physnet0:br-physnet0,...
resource_provider_bandwidths = br-physnet0:10000000:10000000,...
resource_provider_hypervisors = br-physnet0:hypervisor0,...

(2) sriov-agent: resource_provider_hypervisors, for example:

[sriov_nic]
bridge_mappings = physnet1:ens5,...
resource_provider_bandwidths = ens5:10000000:10000000,...
resource_provider_hypervisors = ens5:hypervisor1,...

For both agents 'resource_provider_hypervisors' values default to
socket.gethostname() for each key in resource_provider_bandwidths.

We try to not block later developments in which one neutron
agent may manage devices on multiple hosts. That's why we allow
the each physdev to be associated with a different hypervisor.

But here we do not try to solve the problem that the natural physdev
identifiers may not be unique accross multiple hosts. We leave solving
this problem to whoever wants to implement an agent handling devices of
multiple hosts.

(3) We extend report_state message's configurations field alike:

{
'bridge_mappings': {'physnet0': 'br-physnet0'},
'resource_provider_bandwidths': {
    'br-physnet0': {'egress': 10000000, 'ingress': 10000000}},
'resource_provider_hypervisors': {'br-physnet0': 'hypervisor0'},
...
}

(4) In neutron-server we use
report_state.configurations.resource_provider_hypervisors.PHYSDEV
when selecting parent resource provider for agent and physdev
RP-tree. When not available in the message we fall back to using
report_state.host as before.

Since we only changed the free-format configurations field of the
report_state message rpc version is not bumped and we expect this
change to be backported to stein and train.

Change-Id: I9b08a3a9c20b702b745b41d4885fb5120fd665ce
Closes-Bug: #1853840"
07be7934359aa121761396ba47128904f19cb2e4,2019-12-12 11:14:10+01:00,"Use constraints for docs tox target

In Stein the docs target started to fail when new release of
neutron-lib appeared. This is because tox installs neutron and its
requirements without any constraints. To fix this both the upper
constraints and neutron requirements needs to be added to dependencies
of docs target.

Closes-Bug: #1856156
Change-Id: Iea61238f37fdf24c0264f96d104ee0b3b6aec8e2"
b99765df8f1d1d6d3ceee3d481d1e6ee1b2200e7,2019-12-12 10:30:58+00:00,"Use ""via"" in gateway dictionary in Linux Bridge agent

The gateway IP address in the gateway dictionary returned by
""ip_lib.list_ip_routes"" is stored in ""via"".

""priority"" parameter is changed to ""metric"", to match input and
output parameters.

Change-Id: I67ae473dca8d706f963c3b55b9410f9a79d7f32b
Closes-Bug: #1855759"
ade35a233edb5c9489cc3a68ae00672fb328f63d,2019-12-12 12:35:01+01:00,"Add retries to update trunk port

In [1] retry of trunk update was added to avoid StaleDataError
exceptions to fail to set trunk port or subports to ACTIVE state.
But it was only partial fix for the issue descibed in related bug
and from [2] we know that it still can happen on high load systems
from time to time.
So I was checking this issue and reported bug again and I found out
that retry was added only in _process_trunk_subport_bindings()
method. But StaleDataError can be raised also in other cases where
the same trunk is updated, e.g. in update_trunk_status() method.

So this commit adds same retry mechanism to all trunk.update() actions
in services.trunk.rpc.server module.

[1] https://review.opendev.org/#/c/662236/
[2] https://bugzilla.redhat.com/show_bug.cgi?id=1733197

Change-Id: I10e3619d5f3600ea97ed695321bb691dece3181f
Partial-Bug: #1828375"
a75ec08ddb6a672ba685a11ba3f7df1569497723,2019-12-13 20:03:17+02:00,"don't clear skb mark when ovs is hw-offload enabled

skb mark is not supported when using ovs hw-offload and using it
breaks the vxlan offload.

This patch clear skb mark only if ovs hw-offload is disabled.
This should be fine as ovs with hw-offload runs on the
compute node (DVR is not supported), so clear the skb mark for
the qrouter is not needed.

Closes-Bug: #1855888

Change-Id: I71f45fcd9b7e7bdacaafc7fa96c775e88333ab48"
f711090ed3d9b6c449a4fbc8ffe2eac7df6da193,2019-12-16 15:04:47+00:00,"Check mtu on network update

When creating a network the mtu of the network is
checked against the maximum mtu value.
This should also be done on network update.

Change-Id: Ie7ea79cb753f360bb0bca7df8484710b5d32ccf7
Closes-Bug: #1848152"
566351761318aa1f33650ba4d78b55cc6a4f8f7b,2019-12-16 17:01:31-05:00,"Support L3 agent cleanup on shutdown

Add an option to delete all routers on agent shutdown.

Closes-Bug: #1851609
Change-Id: I7a4056680d8453b2ef2dcc853437a0ec4b3e8044"
0166a1f286051aff8e203c364b5283e8dffd41e5,2019-12-17 18:54:36+00:00,"Remove the neutron-grenade job definition

All the user of neutron-grenade from Ussuri gate
onwards has been switched to grenade-py3 job (except
neutron which is running neutron-grenade-multinode).

We can remove the job definition also now and all
stable gate using this job will find the job definition
from neutron stable branches.

Depends-On: https://review.opendev.org/#/c/694234/
Change-Id: I631f0bfbe7e4ee2df89e2eca2060331796e7a0b2"
480b04ce04f98bae6ff4ab13cec9e01b34204134,2019-12-19 09:45:44+08:00,"Unnecessary routers should not be created

We observe an excessive amount of routers created on
compute node on which some virtual machines got a fixed
ip on floating network.

Rpc servers should filter out those unnecessary routers
during syncing.

Change-Id: I299031a505f05cd0469e2476b867b9dbca59c5bf
Partial-Bug: #1840579"
52787dd4a40d2dbc04f4df6e8683376a8aed74c1,2019-12-19 06:50:49+00:00,"Move tripleo standalone job to ostempest

Since validate-tempest is deprecated in favor of ostempest
unified ansible role. All the tripleo jobs are already moved
to that, having a unified job will help to get consistent
result and avoid issues.

Depends-On: https://review.opendev.org/#/c/698589/

Change-Id: I472d2f07f27e9162089d08d416fb02ae8b5544e7
Signed-off-by: Chandan Kumar (raukadah) <chkumar@redhat.com>"
3faba7cae0c5f0b8ac93c025ca057e2f533445cf,2019-12-19 16:12:09+01:00,"[L3] Switch order of processing added and removed router ports

It may happend that one router's port is going to be
removed and another one (same IP but new subnet) is going to be added
to the router in short time.
That can lead to the problem that IP which is allocated to the new
port is not added to keepalived's vips list because same IP address
is already in this list (this exising IP address belongs to old port).
But few seconds later old port is removed and finally router ends
up with new port configured without IP address.

To avoid such case, this patch switches order of processing new
and deleted ports in _process_internal_ports() method in RouterInfo
class.
So now first old ports will be removed and than new ports will be
configured so there will be no case when IP address is already added
to VIPs list when it is going to be removed in few seconds.

Change-Id: I72dc4a06a806731ec5124fa11c9f69c7dd6cbbb0
Closes-Bug: #1857021"
474bff078c9c9e736f86b7394320661bde70eaf4,2019-12-19 09:18:36-06:00,"Work around potential double row.delete() call

The update_acls code can potentially iterate over the same ACL
twice. This temporary workaround silently ignores an attempt to
delete the same row twice in the same transaction, since that
should be safe. Ultimately, refactoring the ACL code to use sets
and possibly handle the fact that an ACL could be referenced from
multiple rows should be done.

Change-Id: I895eaf4006583fedc2657a4eb527df1ff992c5bc
Related-bug: #1857016"
e54b64f7258b95940369c21c0027947971aaa1f9,2019-12-19 17:43:04+00:00,"OVSInterfaceDriver.plug_new should catch correct exceptions

Now that ""IPWrapper.add_device_to_namespace"" is implemented with
Pyroute2, the function should catch the correct exceptions:
- NetlinkError in case of duplicated interface
- OSError in case of corrupted namespace

Change-Id: I12b5710dc3bfdcc4c6b1e96bbfbfab9e59684065
Closes-Bug: #1856853"
4075db5fd066715fd143201590092a1cf0bdf08a,2019-12-20 09:14:34+00:00,"Improve ovs cleanup utility help

Fixed a couple of things for ovs_all_ports=False.
First state that it also cleans up ports created by Nova.
Second since [1] it only cleans up the integration bridge.

[1] https://opendev.org/openstack/neutron/commit/b09b4460

Change-Id: I41dda554e8cb4b4ca36515d64f17ad5bf52f3b49
Closes-Bug: #1853582"
0b3cff33c1904b82146701b521749cff01f44e9a,2019-12-23 10:13:23+00:00,"Subnet gateway should be a valid IP

When a subnet is created and allocated, the gateway IP is created
based on the subnet CIDR. In case of IPv6 prefix delegation, this
CIDR is a temporary one. In this case the gateway IP cannot be
assigned yet and the value stored in the DB should be ""None"".

IpamBackendMixin._gateway_ip_str must read properly the IP version
stored in the ""subnet"" variable, under the key ""ip_version""
instead of ""version"".

Closes-Bug: #1856726
Closes-Bug: #1856675

Change-Id: I9313c880cc458f08dc3a1b0ff13187b764ba7042"
5f2758bb800c0376efd3e0526f808d73b9ad1bc0,2020-01-04 15:48:11+08:00,"Move arp device check out of loop

This could be time-consuming if there are lots of ports
under the router. So this patch moves the same device
check out of the loop.

Closes-Bug: #1856839
Change-Id: I2da856712aaafb77878628c52d19e0a5c7cdee0f"
08bfbed4c35e0aab95d44619dd7975d969d8acba,2020-01-06 13:05:21-05:00,"Remove the condition that the mtu is nullable

The mtu is already non-nullable, it no longer needs to
judge the mtu when updating the network.
Related-Bug: #1842261

Change-Id: Ic097bc2ae50198a3bda45e4a8161c22190ef1964"
83d7eb961dc8a5d4e815bc3f110f8523a532caeb,2020-01-07 14:40:28+00:00,"Add OVS QoS driver cache for minimum bandwidth rules

1. Add OVS QoS driver cache
Added minimum bandwidth rules cache in the OVS QoS driver. If a new
port is detected in the integration bridge, managed by the OVS agent
driver, the QoS extension is applied (if configured).

If this new port does not have a QoS rule, by default the QoS
configuration is reset in this port. Because this port has no Queue
related, the call ""QosOVSAgentDriver.delete_minimum_bandwidth"" should
not execute the rule cleanup.

This QoS rule cache implementation per porti is currently used in the
OVS QoS driver for the DSCP and the bandwitdh limit rules.

2. If a Queue cannot be deleted, log the QoS registers using it
If a Queue is still used in a QoS register in the OVSDB, it cannot
be deleted. With the current design, only one QoS rule is created in
the database and several Queues are assigned to it.

If something external to the OVS agent is handling the Queues and by
mistake a Queue is assigned to other QoS registers, this error is now
logged before raising the exception.

Closes-Bug: #1845176
Change-Id: Ia9077fc20e4ca360819a2e368c8c1f9250e5a6d8"
6f7b88d0808bee36b9d089ce8d3c0f98ae0b2dea,2020-01-07 17:22:21+02:00,"Use effective MAC address for macvtap assigned VFs

This commit modifies the way sriov agent retrieves mac
addresses for macvtap assigned VFs to use the effective
mac taken from the macvtap net device instead of the
administrative mac set on the PF.

This commit rids sriov agent from depending on hypervisor/nova
to set both administrative and effective mac for macvtap ports.

Related-Bug: #1841067

Change-Id: Id499bcc49d27f13f7f03481922a3383b4a255da1"
af274fa826fc97c15f9fe9b51a966caa8c5cf2eb,2020-01-07 20:24:14-05:00,"Switch to reader context

Since the mtu is already non-nullable, the writer context
can be switched to a reader context. In addition, the redundant
reader context can be removed.

Change-Id: I482a3892dee8ee94ab70142cf734f71e766178ed
Closes-Bug: #1859258"
f758bc998096a8aa20201c95da7da74e07a60bb1,2020-01-08 09:26:43+00:00,"DhcpLocalProcess._enable should not call DhcpLocalProcess.restart

""DhcpLocalProcess._enable"", instead of calling
""DhcpLocalProcess.restart"", should only stop the server and continue
the method. This will avoid getting into a second active wait context.

Change-Id: Id321430c344723363786ab48584b1b48ba69f679
Closes-Bug: #1854940"
93e9dc5426764b791ac69e62c6d60be7591c16ab,2020-01-09 14:18:43+00:00,"ovs agent: signal to plugin if tunnel refresh needed

Currently the ovs agent calls update_device_list with the
agent_restarted flag set only on the first loop iteration. Then the
server knows to send the l2pop flooding entries for the network to
the agent. But when a compute node with many instances on many
networks reboots, it takes time to readd all the active devices and
some may be readded after the first loop iteration. Then the server
can fail to send the flooding entries which means there will be no
flood_to_tuns flow and broadcasts like dhcp will fail.

This patch fixes that by renaming the agent_restarted flag to
refresh_tunnels and setting it if the agent has not received the
flooding entries for the network.

Change-Id: I607aa8fa399e72b037fd068ad4f02b6210e57e91
Closes-Bug: #1853613"
a022301b509defff7369da12b3f708fcb2043517,2020-01-09 14:23:28+00:00,"Set binding profile directly from OVNTrunkDriver (redo cont.)

This is a tweak to changes done to fix bug 1834637. Specifically,
this change addresses scaling. The previous gerrit change had
modifications to all OVN sub-ports performed as a single
transaction. That did not account for race-condition on neutron
DB queries, which leads to timeouts under heavy loads.

Another cleanup done by this change is to fold an additional
update on neutron db into ovn trunk driver. That saves
update from doing another database transaction, thus making
it faster. The no longer needed function in mech_driver was
called _update_subport_host_if_needed

By breaking the iteration into multiple transactions, the
change in time is marginal:

  Service-level agreement
  NeutronTrunks :: neutron.create_trunk

  from 34.2 sec to 35.6 for 50%ile
  from 35.6 sec to 36.1 for 95%ile

This patch is a cherry pick from networking-ovn stable/train [1], that
is now part of networking-ovn migration to neutron repo.

[1]: https://review.opendev.org/#/c/698863/

Change-Id: I118f93cdd34a1d25327a0dc61367720ac6559001
Closes-Bug: #1834637
Co-authored-by: Maciej Józefczyk <mjozefcz@redhat.com>
(cherry picked from commit c418dd720b9be9047d779f32407c474e90cb0002)"
efa8dd08957b5b6b1a05f0ed412ff00462a9f216,2020-01-10 22:50:02+08:00,"Add accepted egress direct flow

Do not flood the packets to bridge, since we have the
bridge port list, we can add a simple direct flow to
the right port only.

Closes-Bug: #1732067
Related-Bug: #1841622
Change-Id: I14fefe289a19b718b247bf0740ca9bc47f8903f4"
b20669fa6ec88445ccf4b3fa8cb38aa05b5b3efb,2020-01-12 20:39:07+00:00,"IPv6 accepts first address only for routers

Neutron considers the network address a valid IPv6 address if the
owner is a router or is not defined yet [1][2]. If not, the IPv6
address is discharded.

[1] https://tools.ietf.org/html/rfc4291#section-2.6.1
[2] https://review.opendev.org/#/c/647484/

Change-Id: I1ddee94bd34182960de8e5261fbc99edc10b6654
Closes-Bug: #1859163"
7e0c44e21fa387f8fa681e257bf8abebfdc29177,2020-01-14 09:03:26+00:00,"Remove references to unittest2 library

Library ""unittest2"" has not released a new version since
Jun 30 2015 [1]. Neutron should remove the references to
this library and point to ""unittest"" instead.

[1] https://pypi.org/project/unittest2/#history

Change-Id: I7d55adc262280c0c2f13b9b81ecc582e1729afa0
Closes-Bug: #1859190"
03ad5bf19c916d50b04dbcfb552ddbf96e243b54,2020-01-14 11:11:28+01:00,"Fix bug number in release note

I mixed up the bug number and the gerrit change number in a previous
release note.

TrivialChange

Change-Id: I7599be8b7459c44db8e34d0de536154dccb19134
Related-Bug: #1853840"
a0fbb3da9bb53a675705f4a04b760017684ca37b,2020-01-14 10:16:53+00:00,"Modify exception string to have more information

The original exception string was ""Didn't spawn expected number
of processes"" and it's not enough to understand why the test
failed.

Improve test_cleanup_network_namespaces_cleans_dhcp_and_l3_namespaces()
error message for timeout.

The improved error message now has expected process number, spawned
process number and process information.

Change-Id: Ie0c27316f0e26b3770724a8bc97e46adf7e32d4c
Closes-Bug: #1857035"
03b87ad963d5d8165a92e5c7c284c1517333dd00,2020-01-15 15:29:31+00:00,"[OVN] Set 'unknown' address properly when port sec is disabled

Previous to this patch, the 'unknown' address was added to the
OVN Logical_Switch_Port row. However, the '<ip> <mac1> <macN>'
was still there so the port security was not really disabled.

The correct behavior is to set the 'addresses' field to 'unknown'
and remove everything else.

Change-Id: I0b84f41865e3fdea49cf169df5431249c35f5ff8
Closes-Bug: #1728886
Signed-off-by: Daniel Alvarez <dalvarez@redhat.com>"
1986865bd5587d303f79f54ff525b38b0bf98bb6,2020-01-16 10:05:36+00:00,"Add MariaDB 10.3 repository for Ubuntu Bionic

In order to execute the periodic job ""neutron-tempest-mariadb-full"",
using Ubuntu Bionic and MariaDB, a newer version is needed than the
default package version distributed (10.1).

Devstack gates are tested with MySQL 5.7. Current Neutron DB schema
is not working with the reported version 10.1.

Change-Id: Ie2b5f85a9c0fc26676d44074424cf5a699303805
Related-Bug: #1855912
Related-Bug: #1841907"
12089a526e25cfe5ccb8b4da86b653970d75f14a,2020-01-16 11:50:02+00:00,"Add support for direct ports with QoS in OVS

Today OVS mechanism driver can bind Direct port see [1] for OVS hardware
offloads.
OVS was extended with tc-offload to support rate limit see [2].
The OVS QoS driver [3] is limited to work only with Normal Ports, so we
can't put QoS rules on direct port.
This patch proposes to add support in OVS QoS driver for direct ports.
The mechanism to enforce such policies is the same with normal and
hardware offloaded direct ports.

[1] - https://github.com/openvswitch/ovs/commit/e7f6ba220e10c0b560da097185514b6e33e2dc71
[2] - https://github.com/openstack/neutron/blob/3b074128ca91ba335bd8ef9db8dfe00fda51a63d/neutron/plugins/ml2/drivers/openvswitch/mech_driver/mech_openvswitch.py#L83
[3] - https://github.com/openstack/neutron/blob/3b074128ca91ba335bd8ef9db8dfe00fda51a63d/neutron/services/qos/drivers/openvswitch/driver.py#L56

Change-Id: I24b5cd6c022e479080fc84e4c445c9cddfc88e38
Closes-Bug: #1843165"
0643ab44d8204cde78fb7e8713fdd46dad0d87df,2020-01-16 22:13:22+00:00,"Set OpenFlow 1.0, 1.3 and 1.4 by default on bridges

There is a bug in OVS 2.12 where it's impossible to change protocol on
a bridge. This patch should be reverted once OVS is fixed. More
information about the bug at [1].

[1] https://bugzilla.redhat.com/show_bug.cgi?id=1782834

Related-Bug: #1852221

Change-Id: I1ead1eee48a0c56193f20797ab35be36a0458270"
f2b52b5e8f2579cac2e9cd3844ed3e75d18cd06d,2020-01-17 17:57:11+00:00,"Add ""qos_network_policy_id"" to port definition

Added ""qos_network_policy_id"" key to port dictionary.

Change-Id: I75713e0e3924ad4c9177e7c9b04c58882e292dc0
Closes-Bug: #1851362"
89f138fa41ad2e5ca8c702b41cdf9cca0b1f1445,2020-01-19 18:35:39+00:00,"Remove ""update_device_up"" parameter from port notification

The parameter ""update_device_up"" was introduced in [1] to be used in
method ""_notify_l3_agent_new_port"", but this parameter was deprecated
in [2].

[1] https://review.opendev.org/#/c/153775/
[2] https://review.opendev.org/#/c/270462/

Trivial-Fix

Change-Id: Ib6bd10544cda2cad6a60fd7bdd31dfc39185746e"
6d1d4cd6baa61dd487e9d73578463b3dcba3ee90,2020-01-19 19:48:41+00:00,"""_create_security_group_precommit"" additional arguments are kwargs

""OVNMechanismDriver._create_security_group_precommit"" receives the
notification from [1]. The aditional arguments passed are kwargs
and the position is not guaranteed.

[1]https://github.com/openstack/neutron/blob/79cb971251b0f37b97284e08916c137f1f101e2c/neutron/db/securitygroups_db.py#L137-L140

Change-Id: I049523ac302fda227fe2f340d3deb6a15ffdb0fc
Related-Blueprint: neutron-ovn-merge"
e395322fbffe5464980ef716c333e088631d4dd5,2020-01-20 09:56:29+00:00,"[OVN] Re-enable test_port_security_macspoofing_port

This patch is re-enabling test_port_security_macspoofing_port as the
referrenced bug should be fixed already.

Change-Id: I138d16055f460e20678bb8f76d5c64e6565063ea
Related-bug: #1728886
Signed-off-by: Daniel Alvarez <dalvarez@redhat.com>"
d6fccd247f70abc84c8a480138e135717836c7b3,2020-01-20 11:48:27+01:00,"Allow to kill keepalived state change monitor process

Usually Neutron stops neutron-keepalived-state-change-monitor process
gracefully with SIGTERM.
But in case if this will not stop process for some time, Neutron will
try to kill this process with SIGKILL (-9).
That was causing problem with rootwrap as kill filters for this process
allowed to send only ""-15"" to it.
Now it is possible to kill this process with ""-9"" too.

Change-Id: Id019fa7649bd1158f9d56e63f8dad108d0ca8c1f
Closes-bug: #1860326"
45ae9dfb7d5acacc72fcf9f071a9db1beb0ca972,2020-01-20 15:29:26+00:00,"[OVN] Delete NAT entry first on any FIP update

For now while updating FIP  check if port or logical_ip
has changed and only then we deleted the NAT entry.

Unfortunately each time when FIP update occurs the
method _create_or_update_floatingip() is used. It first deletes
LSP pointed by FIP and adds it again along with new NAT entries.
Based on author comment this actions are required.

So if we don't update FIP with logical_ip or new port_id,
like update a description, the NAT entries gets duplicated.

Since all is wrapped withing a transaction and to not wait for
proper fix (this code need sa refactor based on commments with NAT
external_id column) I think thats safe just to delete the NAT entry
in such situation like described above.

Change-Id: Iea532e2a02b7992305d1b90aa040e064901c340c
Related-Bug: #1859977"
37521cee8d3058af835fb4dd9db94af1deff17b8,2020-01-22 08:25:10+00:00,"Assign local variable before being referred

Assign local variable ""interface_name"" before being referred in
""TestL3Agent._router_fip_qos_after_admin_state_down_up""

Change-Id: I5135f5c7c02b25728d2d8843889b9e8aef1265cd
Closes-Bug: #1860209"
4f94c55ed3c8e68721e7089c9fbae496c852f9e4,2020-01-22 11:04:13+00:00,"Increase tox-py3{6,7} and lower-constraints timeout to 3600 seconds

As seen in the reported bug, in heavy loaded CI systems, the Neutron
openstack-tox-py3{6,7} and openstack-tox-lower-constraints jobs tend
to timeout.

Change-Id: I3f7aff297e8c1797eb23adac7b29dc65619c1e8a
Closes-Bug: #1860332"
06e43dd95d39af5c77f60bf7c89fee762c1afa13,2020-01-22 11:19:55-03:00,"Add description field to portforwarding NAT rules

Add the `description` field to `PortForwardings`
using the standard attributes like in the
`FloatingIPs`.

Depends-On: https://review.opendev.org/#/c/692580/
Depends-On: https://review.opendev.org/#/c/698662/
Implements: blueprint portforwarding-description
Closes-Bug: #1850818
Change-Id: Ibac91d24da2b82cdce72165d1295fa5d4475ffd3
Signed-off-by: Pedro Martins <phpm13@gmail.com>"
c6a5b284b54d59273a387aaf7723391e9100bf3c,2020-01-23 21:55:26+00:00,"Ensure we don't pass empty addresses to lsp_set_addresses

If we somehow have an empty set of addresses, lsp_set_addresses
will fail. This instead calls db_clear() on the addresses field if
we are trying to set it to empty.

Closes-bug: #1860560

Change-Id: Ied92eb85b74e63a7317d50970b5131fb49e3e4b0"
bc0b38b2820b305753120c4f677b2e4bd565d16f,2020-01-23 18:50:44-05:00,"Use distutils.version to check dnsmasq supported version

Change-Id: If74487a5e437531826437d91b148065eec2bc20c
Closes-Bug: #1859962"
fc507c701c08f76be02c20a6143475f9676e3de0,2020-01-23 19:05:56-05:00,"Define new ipv6-only job for OVN

As part of Train community goal 'Support IPv6-Only Deployments and Testing'[1],
Tempest has defined the base job 'devstack-tempest-ipv6' (adding
in Depends-On patch) which will deploy services on IPv6.

This commit adds the new job 'neutron-ovn-tempest-ovs-release-ipv6-only'
run on check queue which is derived from 'devstack-tempest-ipv6'.
A future change can make this voting in the gate.

Verification structure will be:
- 'devstack-IPv6' deploy the service on IPv6
- 'devstack-tempest-ipv6' run will verify the IPv6-only setting and listen
  address
- 'networking-ovn-tempest-ovs-release-ipv6-only' will run the tests.

Story: #2005477
Task: #35908

Based on https://review.opendev.org/#/c/673488/ from networking-ovn.

[1] https://governance.openstack.org/tc/goals/train/ipv6-support-and-testing.html

Depends-on: https://review.opendev.org/#/c/703685/
Change-Id: Ia0dcf47ead268aa4b265904c9e1ae1e38d77456a"
9283738843ba05b1dd56006112eda5231fd136fd,2020-01-24 15:07:36-05:00,"[OVN] Bump ovsdbapp requirements to 1.0.0

Contains fixes for functional tests needed after the networking-ovn has
moved to Neutron and OVN splitting from the OVS repository upstream.

Depends-On: https://review.opendev.org/#/c/704176/

Change-Id: If3d6a04bf47f7e308530a3e1abb20ebfc184451f
Related-Blueprint: neutron-ovn-merge"
2e316157edd412d747e8533746c0974cab7dfde0,2020-01-26 12:25:43-06:00,"Pass result dict to extensions by create port bulk

The create ports in bulk code in the ML2 plugin is passing to the
extension drivers a DB object for each port created. Per the ML2
extension drivers API definition in [0], what should be passed instead
is the result dictionary of each created port. This change fixes the
mismatch.

[0] https://github.com/openstack/neutron-lib/blob/478502b3dfb8c3ff66318169377251826563a398/neutron_lib/plugins/ml2/api.py#L1142

Change-Id: I6abecfbde525279fbfd4b9e27e0d1803311a7f96"
303937f3aec1e53d7ba49078ff399186c8cbabd0,2020-01-26 20:19:43+00:00,"[OVN] scripts for networking-ovn code migration

In an effort to help on migrating changes from neutron to networking-ovn,
these 3 scripts are being introduced under tools.

Also adding documentation about these under OVN folder.

1) files_in_patch.py
Use this to show files that are changed in a patch file.

   $ # Make a patch to use as example
   $ git show > /tmp/commit.patch

   $ ./tools/files_in_patch.py /tmp/commit.patch | grep .py
   tools/download_gerrit_change.py
   tools/files_in_patch.py
   tools/migrate_names.py

2) download_gerrit_change.py
Given a gerrit change id, it will fetch the latest patchset of the change
from review.opendev.org as a patch file.

   $ ./tools/download_gerrit_change.py --help
   Usage: download_gerrit_change.py [OPTIONS] GERRIT_CHANGE

   Options:
     -o, --output_patch TEXT  Output patch file  [default: stdout]
     -g, --gerrit_url TEXT    The url to Gerrit server  [default:
                              https://review.opendev.org/]
     -t, --timeout INTEGER    Timeout, in seconds  [default: 10]
     --help                   Show this message and exit.

   $ ./tools/download_gerrit_change.py 698863 -o /tmp/change.patch
   $ ./tools/files_in_patch.py /tmp/change.patch
   networking_ovn/ml2/mech_driver.py
   networking_ovn/ml2/trunk_driver.py
   networking_ovn/tests/unit/ml2/test_mech_driver.py
   networking_ovn/tests/unit/ml2/test_trunk_driver.py

3) migrate_names.py
Use this tool to modify the name of the files in a patchfile so it can
be converted to/from the legacy networking-ovn and neutron repositories.

   $ ./tools/migrate_names.py --help
   Usage: migrate_names.py [OPTIONS]

   Options:
     -i, --input_patch TEXT    input_patch patch file or gerrit change
     -o, --output_patch TEXT   Output patch file. Default: stdout
     -m, --mapfile PATH        Data file that specifies mapping to be applied to
                               input  [default: /home/user/openstack/neutron.git
                               /tools/migrate_names.txt]
     --reverse / --no-reverse  Map filenames from networking-ovn to Neutron repo
     --help                    Show this message and exit.
   $ ./tools/migrate_names.py -i 701646 > /tmp/ovn_change.patch
   $ ./tools/migrate_names.py -o /tmp/reverse.patch -i /tmp/ovn_change.patch --reverse
   $ diff /tmp/reverse.patch /tmp/ovn_change.patch | grep .py
   < --- a/neutron/plugins/ml2/drivers/ovn/mech_driver/mech_driver.py
   < +++ b/neutron/plugins/ml2/drivers/ovn/mech_driver/mech_driver.py
   > --- a/networking_ovn/ml2/mech_driver.py
   > +++ b/networking_ovn/ml2/mech_driver.py
   <... snip ...>

   $ ./tools/files_in_patch.py /tmp/ovn_change.patch
   networking_ovn/ml2/mech_driver.py
   networking_ovn/ml2/trunk_driver.py
   networking_ovn/tests/unit/ml2/test_mech_driver.py
   networking_ovn/tests/unit/ml2/test_trunk_driver.py

Change-Id: I17904c996e1357f7292d25aab4d448edb052f44c
Related-Blueprint: neutron-ovn-merge"
f8a3b2c589727acc828ac0348c4fffeb818fbe50,2020-01-28 11:07:40+01:00,"Stop configuring install_command in tox.

Currently, we are overriding 'install_command' to use 'pip'. This is
considered poor behavior and 'python -m pip' should be used instead:

https://snarky.ca/why-you-should-use-python-m-pip/

It turns out that this is the the default value provided by tox:

https://tox.readthedocs.io/en/latest/config.html#conf-install_command

So we can remove the line and simply use the default value.
This change showed we needed a newer version of debtcollector in lower
constraints, aliging with the version required by os-vif. This change
showed we needed also a newer version of cffi and keystoneauth1 in lower
constraints. Update also the requirements file for debtcollector and
keystoneauth1.

Change-Id: I5e190c3db8bed0a264b911cdf425aa4c9b51f768"
936bd67aa42b2e06241d309315b895c9c9c49dcc,2020-01-28 12:02:52+00:00,"Check ""security_group_rule"" quota during security group creation

The tracked resources quota check is done at the beginning of an API
call to the Neutron server. The API call contains a resource and an
action over the resource. In case of creation, the server checks if
the number of items requested fits in the existing quota.

In case of security group creation, the tracked resource checked is
""security_group"". But ""SecurityGroupDbMixin.create_security_group""
method also creates several default rules for the new group and the
quota for ""security_group_rule"" is not enforced.

This patch checks the number of security group rules being created
(""delta"") and checks in the plugin method (not in the API method) if
there is enough room for those new rules (tracked resource
""security_group_rule"").

Change-Id: I0a9b91b09d6260ff96fdba2f0a455de53bbc1f00
Closes-Bug: #1858680"
647b7f63f9dafedfa9fb6e09e3d92d66fb512f0b,2020-01-28 14:28:38+00:00,"[OVN] Add an interval between agents health checks

This patch adds a minimum interval between each agent health checks.

The way OVN checks for the agents liveness is by increasing a value in
the NB DB and waiting for it to be propagated to the SB DB but, this can
be costy if done many times too quickly. Therefore, a minimum interval
between each check is being added.

Closes-Bug: #1861092
Change-Id: If1f2d97e3a3a17f6744d546b3e8903bde55e83b9
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
7fa564ba2cc9e894c742f18efdce8715de4f1088,2020-01-28 18:26:39-05:00,"Fix OVN agent devstack script to support IPv6

There are variables in devstack that should be used
for services listening endpoints which change depending
on what SERVICE_IP_VERSION is set to, 4 or 6. Use them
in the ovn_agent script to support IPv6.

Change ovsdb-server to listen on [$SERVICE_LOCAL_HOST]
if IPv6, else 127.0.0.1 if IPv4.

Change ovn-northd to listen on 0.0.0.0 instead of
$SERVICE_LISTEN_ADDRESS.

Un-quote the metadata host address if it is IPv6, i.e.
2001:db8::1, not [2001:db8::1].

Closes-bug: #1860612
Change-Id: I5e9b6b70b502caf9dd6ec78f293f9d4b5b45e360"
e22a191f47fe0d1a05cd707a0ad6a1ca637f69d1,2020-01-28 18:23:37-06:00,"Implement tagging during bulk port creation

This change proposes a ML2 plugin extension to implement tagging during
bulk port creation.

Change-Id: Ic70f7d282db478c69016ab1c317c5cae786401ce
Related-Bug: #1815933"
c471c7330c6c7a642e11ceae5fd604177059a3e8,2020-01-29 09:40:20+00:00,"[OVN] Remove VLAN check when setting external_mac

This patch reverts [0].

The code wasn't accounting for VLAN provider networks, as stated in the
bug #1842988, DVR won't work if the provider network (where the FIP is
created) is VLAN.

There was also an incosistency in how the external_mac was set for the
VLAN networks. Upon creating the FIP the code was checking for the
network type and not setting the external_mac attribute in case the
network was VLAN type. But, if the port went down and up again (e.g if
you reboot the VM) the event handler that set/unset the external_mac [1]
wasn't check for the type. This is how people worked around the DVR
problem (as stated in bug #1842988).

For more information see bug #1842988.

[0]
https://github.com/openstack/networking-ovn/commit/c5aef51edc9843db605303ec8bd8610b6c55e9c2
[1]
https://github.com/openstack/networking-ovn/blob/eda5d7f80d877601170631c5f5485370ea701f42/networking_ovn/ml2/mech_driver.py#L794-L800

Change-Id: Ifb795626dc9c2ac4f0104f491dd38c9b4cc902c9
Closes-Bug: #1842988
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
b3a42cddc5c8716091d2b403831fb406d9dfcc75,2020-01-29 12:02:08+00:00,"DVR: Remove control plane arp updates for DVR

This patch will remove all the control plane
arp updates for DVR routers. Based on the recent
patch that merged[1], DVR routers will no longer
require the control plane ARP update but will
depend on the ARP Responder for ARP updates.

[1] https://review.opendev.org/#/c/651905/

Change-Id: I538aa6d68fbb5ff8431f82ba76601ee34c1bb181"
cf36bd4ca52bec4a707c35df261b8a2630850e68,2020-01-29 17:11:44+00:00,"Enable ovsdb debug messages in functional and fullstack

Enable the configuration flag ""ovsdb_debug"" for functional and
fullstack tests. If enable, NeutronOvsdbIdl won't define any log
level when setting up the logger; if not ""max_level"" is defined,
all messages are logged.

Change-Id: I1185c1ca2556e2aed27051efd98a1d141f5298c9
Related-Bug: #1802640"
b7dc0ac63a215047080a8ea057cb56d8e5b4fba6,2020-01-29 17:23:24+00:00,"Increase tox-cover timeout to 4800 seconds

Change-Id: I2200329c9c5402562b84794f669177728794a5cd
Related-Bug: #1860332"
740741864adc142b9bb037e92fd563cae124046a,2020-01-30 15:34:45+00:00,"Remove sleep command when retrieving OVS dp

OVS agent is a single thread module executed on a os-ken AppManager
context. os-ken uses, by default (and no other implementation is
available today [1]), ""eventlet"" threads. Those threads are scheduled
manually by the code itself; the context switch is done through
yielding. The easiest way to do this is by executing:
  eventlet.sleep()

If the assigned thread is not ready to take the GIL and do not yield
back the executor, other threads will starve and eventually will
timeout.

This patch removes the ""sleep"" command during the DP retrieval. This
will keep the executor on the current thread and will prevent the
execution timeouts, as seen in the bug related.

[1]https://opendev.org/openstack/os-ken/src/commit/1f751b2d7d385a75d4255934694177d6fd6f012f/os_ken/lib/hub.py

Closes-Bug: #1861269

Change-Id: I19e1af1bda788ed970d30ab251e895f7daa11e39"
97773eaea6407eb12a0f1a2b8dbac24a71f3b7c6,2020-01-30 16:58:12+00:00,"Increase log information when a RootHelperProcess fails

If a RootHelperProcess does not start, add more information to the
exception raised: the command return code, the stdout and the stderr.

Change-Id: I229e926341c5e6c8b06f59950e3ae09864d0f1f6
Closes-Bug: #1861221"
938581d9bd2ff46165c247d7c42d9492459522a8,2020-01-31 09:12:47+00:00,"Increate tox-py38 timeout to 3600 seconds

Days after [1] was merged, [2] was merged too, adding a new CI job:
py38. This patch amends [1] increasing the timeout for this new job.

[1] https://review.opendev.org/#/c/703751
[2] https://review.opendev.org/#/c/693401

Change-Id: I128f3c4621d2354ac6b0d07ccf34b84862efe7de
Closes-Bug: #1860332"
4e60c047d27a67f69624c6bd042e4c1521bd8989,2020-01-31 11:07:59+00:00,"Permit OVS build can be set

Commit 00a74d1137abe78a0f34a73144ee7e2ccc486a32 change the OVS
package compile from source, this makes some neutron staduim
projects func gate has no permission accessing the ""ovs"" dir.

This patch adds a BUILD_OVS_FROM_SOURCE environment variables,
let it can be override by gate_hook.

Change-Id: Ib33fffbaaea6abfbd9719e0712918d4ae65b3ee2
Partial-Bug: #1861469"
2cd75e073aa7d949f8842db8d4adbc4d7d2c36ac,2020-02-03 10:56:39-06:00,"OVN Metadata agent gets OVSDB updates for only its Chassis

The metadata agent registers the Chassis table with ovsdb-server
and therefor gets database updates every time *any* Chassis is
updated--even if the update is just a liveness check that updates
nb_cfg.

This patch adds a condition so that metadata agent only gets updates
for the Chassis that it is running on.

Change-Id: I452b7de09312ecea621c4b448cc63f037cad9675
Related-bug: #1861092"
5b12d808aa3255a595bc2f8ee01411819b5b72f3,2020-02-05 10:12:49+00:00,"Disable neutron-ovn-tempest-ovs-release temporarily

Until LP 1861876 is solved.

Change-Id: I344b413fa70cab79738684f4315ba7d0886edce8
Related-Bug: #1861876"
dcec852b7f091c67a378db96c4841c3eec0d496a,2020-02-06 10:54:26+08:00,"[OVN] Update QoS related code from networking-ovn

In terms of [1], patch [0] has import the lasted code of ovn_client.py, but not
""/networking_ovn/ml2/qos_driver.py"", so this patch will update it.

[0] https://review.opendev.org/#/c/697316/
[1] https://review.opendev.org/#/c/692084/

Change-Id: Iefff6cdf070d234c4ea9c8e1d5fdfe4542eb7fa3
Closes-Bug: #1813551"
18d8d3973a532a36120c2c58136683e834a5e405,2020-02-07 08:32:20+00:00,"Revert ""[DVR] Add lock during creation of FIP agent gateway port""

This reverts commit 7b81c1bc67d2d85e03b4c96a8c1c558a2f909836.

It isn't needed anymore with new solution with lock ""on db level""
which is introduced in follow-up patch.

Change-Id: Ibf15ee1969f902e8a266825934d9ac963353f0a0
Related-Bug: #1830763"
93d9d6bbba083ede727aa233903edc3456c5dbeb,2020-02-07 08:32:33+00:00,"Ensure there is always at most 1 dvr fip gw port per agent and network

In patch [1] there was introduced simple lock for creation of
DVR agent's floating IP gateway ports for network to avoid races
and creation of duplicated ports for one agent and one network.

This fix from [1] works in simple examples with only one neutron-server,
so it helped e.g. in CI but it wasn't proper fix for production
deployments which are much bigger and have more neutron server api
workers.

So this patch introduces constraint on database level so this works even
across cluster with multiple neutron-server api workers.

[1] https://review.opendev.org/#/c/673331/

Change-Id: Id55b8a21d6ecf5e029d1ca267b2cbd2ed91cca4c
Closes-Bug: #1830763"
13aa00026f768642f385259ba7ccddcfdad3c75f,2020-02-07 14:51:06+01:00,"Re-use existing ProcessLauncher from wsgi in RPC workers

If both are run under the same process, and api_workers >= 2, the server
process will instantiate two oslo_service.ProcessLauncher instances

This should be avoided [0], and indeed causes issues on subprocess and
signal handling: killed RPC workers not respawning, SIGHUP on master
process leading to unresponsive server, signal not properly sent to all
child processes, ...

To avoid this, use the wsgi ProcessLauncher instance if it exists

[0] https://docs.openstack.org/oslo.service/latest/user/usage.html#launchers

Change-Id: Ic821f8ca84add9c8137ef712031afb43e491591c
Closes-Bug: #1780139"
99105848e5499a1c25baefec78a5c0581a79a449,2020-02-10 10:40:56+00:00,"Revert ""Disable neutron-ovn-tempest-ovs-release temporarily""

This reverts commit 5b12d808aa3255a595bc2f8ee01411819b5b72f3.

Fixes for this issue on nova's side [1] and [2] are already
merged so let's make neutron-ovn job voting again.

[1] https://review.opendev.org/#/c/705760
[2] https://review.opendev.org/#/c/706213/

Change-Id: I1117a8195af5a5b3eb2faa7a920e9d66747846dc"
6971404bb957eca217d2a9e10df279112689e583,2020-02-10 12:44:00+01:00,"Add ovn-octavia-provider tag as official tag

As we now have new stadium project OVN-Octavia-provider [1] lets
add official tag which will be used for tracking bugs related to
it in Launchpad.

[1] https://review.opendev.org/#/c/697095/

Change-Id: Iaf99b75a79e1823742d7bd195f675f6ea42deb51"
a0bb5763b277d7360554fd64813fdce01244d2fa,2020-02-11 12:25:41+04:00,"dhcp-agent: equalize port create_low/update/delete priority

Low port delete priority may lead to duplicate entries in network
cache if IPs are reused frequently.
Also can't find a strict reason why it should be of lower priority.

Change-Id: I55f858d50e636eb9091570b256380330b9ce9cb3
Related-bug: #1862315
Related-bug: #1828423"
37fafeb6781504b506e6e399354d808ec8c0e31d,2020-02-11 09:32:22+00:00,"Add SR-IOV agent resource provider information

When the SR-IOV agent starts, print information about the Placement
resource providers: bandwidth, inventory default configuration and
hypervisor names.

Change-Id: Ib34f7a4f850301b2a8bf739c9d8d5e73bcc1bc48
Related-Bug: #1578989"
b85c273639f30cbffd95bfb92564adc8fb586465,2020-02-11 10:12:22+00:00,"[OVN] Reduce the number of watched tables in MetadataProxyHandler

This patch changes the SB IDL from the MetadataProxyHandler class to
only watch the two required tables for it to function.

The more tables it monitors, the bigger the burden is on the OVSDB to
keep all the in-memory replicas updated. In special, the Chassis table
can generate a lot of events due to the agents health check mechanism
in the OVN driver so, removing it will prevent many events from being
sent across the fabric.

Closes-Bug: #1862648
Change-Id: Ib4fb9b445ed7fe4bce7bc05ae1b8dca264324718
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
d8349033e9ac925402a46cfd85cba113a3ca896f,2020-02-11 11:45:51+00:00,"Enforce ""qos_max_rate"" and ""qos_burst"" in OVN QoS options

If QoS rule is QosBandwidthLimitRule, then the generated options in
the QoS OVN driver of the QoS service should contain those two
parameters: ""qos_max_rate"" and ""qos_burst"".

According to [1], the units used are:
- qos_max_rate: kbps, the one used in Neutron
- qos_burst: kilobits, the one used in Neutron

A ""rule.max_kbps"" value should be always present in the rule, but not
""rule.max_burst_kbps"". This value can be None in
OvnNbApiIdlImpl.QoSAddCommand.

[1]http://www.openvswitch.org/support/dist-docs/ovn-nbctl.8.html

Change-Id: Ie1598be7d21f33df6b1a66fa71ba6783d2433dca
Closes-Bug: #1861680"
cc4c382fd5c480642768d76fa0d4ccfa86f8b35f,2020-02-11 14:03:07+01:00,"Add NEUTRON_PATH to configure_for_func_testing.sh

https://review.opendev.org/705154 introduced NEUTRON_PATH but let it
empty by default, this patch adds default value to NEUTRON_PATH.

Partial-Bug: #1861469
Change-Id: Id5aab7f14e23ae8d7d1fc7ac4d23c67964bdb674"
c9a3d49513f863be144e0df31530861938b95979,2020-02-11 15:09:24+01:00,"Enhance agent's resources_synced check

The fullstack test TestPlacementBandwidthReport.
test_configurations_are_synced_towards_placement sporadically failing
and one possible reason is that multiple agents are visible to the
server after restart of the agent (perhaps due to parallel execution).

Partial-Bug: #1862177
Change-Id: I79aa2cb9bcd69fc0cb35e0fd351a373e00feb062"
50025935fec858138becf00640dc3ee1de508812,2020-02-11 15:54:27+00:00,"Add 'fip-port-details' to OVN ML2 supported extensions

This extension will add information about the attached port in the
floating IP dictionary.

This extension is not mandatory but very handy because sometime this
extra information avoids to make a second call to Neutron.

Related-Bug: #1861876

Change-Id: I0175a2d00256e6d904cbcf25ad4a08aa825a9e18"
016e7826f165e69c3956375fc3aa8b8d642c9dc9,2020-02-11 18:26:25+00:00,"Improve VLAN allocations synchronization

In order to reduce the number of elements retrieved from the DB, this
patch, before processing the VLAN allocations per physical network,
deleted those registers belonging to any unconfigured physical network.

The VLAN registers per physical network are deleted using a bulk delete
operation, to speed up the process.

Those missing VLAN registers per network are now created using a bulk
insert operation, available in the ORM. This bulk operation speeds up
the sync process.

Change-Id: I8568e2277e157754aaff87a059a40e34e6a43e2b
Partial-Bug: #1862178"
efec8fc153e143068dff6ef3ac02ef722677b045,2020-02-12 10:14:51+00:00,"Reduce the VLAN/tunneled ranges in fullstack tests

Reduce the number of VLAN and tunneled network ranges (GRE, VXLAN)
to 30 tags, in fullstack tests. This will reduce the amount of time
spent, during the Neutron server start, in the VLAN and tunnel
drivers initialization.

Partial-Bug: #1862178

Change-Id: I7ae82d163c46bbc3ee7430293555c66fbda17b08"
0ef4233d891f8fa42a073901051bf0310f61eebb,2020-02-12 11:43:27+00:00,"Add ""ncat"" rootwrap filter for debug

In [1], new tests to check ""ncat"" tool were added. The missing piece
of this patch was to add a new rootwrap filter to allow to execute
""ncat"" binary as root and inside a namespace.

Closes-Bug: #1862927

[1]https://review.opendev.org/#/q/If8cf47a01dc353734ad07ca6cd4db7bec6c90fb6

Change-Id: I8e8e5cd8c4027cce58c7073002120d14f251463d"
cc3b9df4268ac339d0b7316595a4148ba4c69836,2020-02-13 11:58:01+00:00,"""ping""/""ping6"" command support in rootwrap filters

To have correct support in rootwrap, ""ping""/""ping6"" command should
have the correct filters in rootwrap.

Because ""ping"" command is harmless, ""CommandFilter"" is used to allow
any binary call, regardless of the parameters used and the order.

Nevertheless, this patch also proposes to use ""ping""/""ping6"" with
the same parameters and a specific order, to help in the debug
process:
- ping[6] -W <timeout> <address>
- ping[6] -W <timeout> -c <count> <address>
- ping[6] -W <timeout> -c <count> -i <interval> <address>

Those commands could be called from inside a namespace. The needed
filter is also added in this patch.

Change-Id: Ie5cbc0dcc76672b26cd2605f08cfd17a30b4c905
Closes-Bug: #1863006"
2dd62221984d39be355a4fdfe667053153aa60d4,2020-02-13 17:10:53+00:00,"Set an absolute path in rootwrap filters_path

If a relative path is set in rootwrap filters_path, the rootwrap
command must be executed from the neutron root directory. Some
commands, like those execute by RootHelperProcess, do not have
a defined working directory. To avoid the problems present in the
related bug, an absolute path is set in the rootwrap configuration.

Related-Bug: #1862927

Change-Id: I02ce4d6b84242c42ec26954eeb9b776cb779bff4"
22ce84ab4d5b12348a58fd82828c4eacb04fd578,2020-02-14 10:11:27+00:00,"Revert ""Add ""ncat"" rootwrap filter for debug""

This reverts commit 0ef4233d891f8fa42a073901051bf0310f61eebb.

This patch is introducing a redundant filter already present in
""testing.filters"". The problem described in the related bug should
be solved in https://review.opendev.org/#/c/707697/.

Related-Bug: #1862927
Related-Bug: #1863213

Change-Id: I4de37364a6fb0184230a9742daced40e4edbfb30"
e2ab1636b07cafe0552dcadc71244c17ac59c355,2020-02-14 12:53:35+00:00,"Centralize traffic when LB and member has FIP

When Load Balancer and its member has FIP assigned
and environment is configured to use DVR the member
FIP needs to be centralized. It is current core OVN
limitation, that should be solved in [1].

This patch adds this mechanism to OVN Client and
OVN Octavia provider driver.

It covers cases:

1) FIP association on port that is a member of
   some LB - make it centralized.
2) FIP association on LB VIP - find a members
   FIPs and centralized them.
3) Add a member to LB that has FIP already
   configured - checks if a member has FIP
   and centralize it.
4) The reverse of each of the above cases.

In addition I needed to extend OVN LB member external_id
entry to add an information about member subnet_id
in order to easly track member port from mechanism OVN
driver.
That means I needed also to support both old and new
conventions. This patch adds also this code.

Old convention:
member_`member_id`_`ip_address`:`port`

New convention:
member_`member_id`_`ip_address`:`port`_`subnet_id`

[1] https://bugzilla.redhat.com/show_bug.cgi?id=1793897

(Cherry-picked from networking-ovn 57ac38921efa6bbf0bc4a22950355256cc3ebe6d)

Related-Bug: #1860662

Change-Id: I254f0ac28f7585b699a8238e01ffb37dd70282ef"
98266664c85a1f403153e9a72786cec436a7754a,2020-02-14 14:08:52+00:00,"Mark NetcatTesterTestCase tests as unstable

As commented in the bug, sometimes rootwrap does not find the filter
files defined in ""filters_path"" configuration option. This leads to
an error during the execution of the bash command.

Change-Id: I1df041e050fe4de37476e13031f697334b82a967
Related-Bug: #1862927"
33fb446add87a3427a246444b03befc46adb385d,2020-02-17 11:02:16+00:00,"Deprecate config option ""ovs_integration_bridge""

Remove this duplicated option and rely only in OVS.integration_bridge.

NOTE: other projects are still using it; first we need to deprecate it
      in those projects.

Change-Id: I4e826c8b9fa764b1820adacc3427934dc393c0bc
Related-Bug: #1856152"
3053caaa02adaadfffa53fb1070aaa60f49419e8,2020-02-17 12:09:50+00:00,"Workaround in NetworkSegmentRange OVO until ""project_id"" migration

The ""network_segment_range"" service plugin API does not have
""tenant_id"" as parameter. However, because the migration from
""tenant_id"" to ""project_id"" did not finish, every OVO with
""project_id"" will also have ""tenant_id"" as an extra field. This
extra field will be populated with the same value as the
""project_id"" field.

If the Neutron API WSGI is used and ""tenant_id"" is not present in
the API (defined in neutron-lib), both ""tenant_id"" and ""project_id""
parameters will be removed from the response.

This patch introduces a workaround for this OVO until the migration
is over.

More information about this patch can be found in the bug c#4.

Change-Id: I85a02d8b59e8a758826c110e00df84672fa93676
Closes-Bug: #1828205"
7593f95a741aec62d9956175ce6d3ce1b1abb9a0,2020-02-17 15:09:00+00:00,"Set a default IP route metric in ip_lib.list_ip_routes

By default, if no metric is defined, the kernel interprets the
highest value (0).

The current implementation, using pyroute2, is a translation from
the CLI command ""ip route"". This command uses the netlink API to
communicate with the kernel. In IPv6, when the metric value is not
set is translated as 1024 as default [1].

[1]https://access.redhat.com/solutions/3659171

Change-Id: I0c5f9e320bbbf314a2d6a22c515bf903de84cdaf
Related-Bug: #1855759"
0d43372f14d11b8d800439965d7e8aa07b0b3feb,2020-02-17 16:03:17+00:00,"Add ""project_id"" filter when changing the network segmentation ID

When the segmentation ID of a network is updated, first the provider
network segment is validated and then reserved. If service plugin
""network_segment_range"" is enabled, the Neutron server retrieves the
network segment ranges with shared=True or those ones with the same
project_id as the network.

This patch adds the ""project_id"" information to the filters when
reserving the network provider segment. This change will allow to
retrieve those private networks segments belonging to the same
project.

Change-Id: I21bd60af000276779f56b3a6d45b4a6c1836bed1
Closes-Bug: #1863619"
f5c5755100c235b16c86cec782add8fe5b618598,2020-02-17 17:49:49+00:00,"[Fullstack] Wait until min QoS and Queue registers are set in DB

Wait until the minimum bandwidth Qos and Queue registers are set in
the OVS DB. In case of error, log the QoS and Queue registers present
at this moment.

Change-Id: Ifb2f731d7d04e237d4e47ba486169348684c8b78
Related-Bug: #1737892"
6dbba8d5ce18805a6f104782510c055017267435,2020-02-17 23:50:19-08:00,"Check SG members instead of ports to skip flow update

Security group can have a state of empty ports but non-empty members. So
we need skip the flow update only when members dict is empty.

Change-Id: I429edb3d2dea5fa97441909b4d2c776f97f0516f
Closes-Bug: #1862703
Related-Bug: #1854131"
03203cc4c8ad9c87c14ba816016a886ee4518dce,2020-02-18 13:33:52+00:00,"[OVN] Add OVN functional tests - part 1

This patch adds functional tests for:
  * base
  * ovn metadata agent
  * ovn mechanism driver
  * impl_idl
  * maintenance task
and needed resources to run the tests.

Previous paths in networking-ovn tree:
./networking_ovn/tests/functional/base.py ->
  ./neutron/tests/functional/base.py
./networking_ovn/tests/functional/resources ->
  ./neutron/tests/functional/resources
./networking_ovn/tests/functional/test_metadata_agent.py ->
  ./neutron/tests/functional/agent/ovn/metadata/test_metadata_agent.py
./networking_ovn/tests/functional/test_mech_driver.py ->
  ./neutron/tests/functional/plugins/ml2/drivers/ovn/mech_driver/test_mech_driver.py
./networking_ovn/tests/functional/test_impl_idl.py ->
  ./neutron/tests/functional/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_impl_idl.py
./networking_ovn/tests/functional/test_maintenance.py ->
  ./neutron/tests/functional/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_maintenance.py

Co-Authored-By: Amitabha Biswas <abiswas@us.ibm.com>
Co-Authored-By: Andrew Austin <aaustin@redhat.com>
Co-Authored-By: Armando Migliaccio <armamig@gmail.com>
Co-Authored-By: Boden R <bodenvmw@gmail.com>
Co-Authored-By: Brian Haley <bhaley@redhat.com>
Co-Authored-By: Cao Xuan Hoang <hoangcx@vn.fujitsu.com>
Co-Authored-By: Daniel Alvarez <dalvarez@redhat.com>
Co-Authored-By: Dong Jun <dongj@dtdream.com>
Co-Authored-By: Doug Wiegley <dougw@a10networks.com>
Co-Authored-By: Flavio Fernandes <flaviof@redhat.com>
Co-Authored-By: Gary Kotton <gkotton@vmware.com>
Co-Authored-By: Guoshuai Li <ligs@dtdream.com>
Co-Authored-By: Hong Hui Xiao <honghui_xiao@yeah.net>
Co-Authored-By: Ihar Hrachyshka <ihrachys@redhat.com>
Co-Authored-By: Jakub Libosvar <libosvar@redhat.com>
Co-Authored-By: Kamil Sambor <ksambor@redhat.com>
Co-Authored-By: Lucas Alvares Gomes <lucasagomes@gmail.com>
Co-Authored-By: Numan Siddique <nusiddiq@redhat.com>
Co-Authored-By: Reedip <rbanerje@redhat.com>
Co-Authored-By: Richard Theis <rtheis@us.ibm.com>
Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>
Co-Authored-By: Terry Wilson <twilson@redhat.com>
Co-Authored-By: bailinzhang <zhang.bailin@zte.com.cn>
Co-Authored-By: reedip <rbanerje@redhat.com>
Co-Authored-By: venkata anil <anilvenkata@redhat.com>

Depends-On: https://review.opendev.org/#/c/703883/

Change-Id: Ic45ab26c28fdb757d1ee8a9e0c774a1543fb4bff
Related-Blueprint: neutron-ovn-merge"
d874c46bff7045ba25f5dd6e790f7ddb209cb224,2020-02-20 10:07:18+00:00,"Filter by owner SGs when retrieving the SG rules

Retrieving the SG rules now is used the admin context. This allows to
get all possible rules, independently of the user calling. The filters
passed and the RBAC policies filter those results, returning only:
- The SG rules belonging to the user.
- The SG rules belonging to a SG owned by the user.

However, if the SG list is too long, the query can take a lot of time.
Instead of this, the filtering is done in the DB query. If no filters
are passed to ""get_security_group_rules"" and the context is not the
admin context, only the rules specified in the first paragraph will
be retrieved.

Because overwriting the method ""get_objects"" is too complex, an
intermediate query is done to retrieve the SG rule IDs. Those IDs
will be used as a filter in the ""get_objects"" call.

Closes-Bug: #1863201

Change-Id: I25d3da929f8d0b6ee15d7b90ec59b9d58a4ae6a5"
caa34c279756164357bbcb9900aee36d0501d73f,2020-02-21 13:21:20+02:00,"Drop invalid rootwrap filters

A recent change introduced a couple of rootwrap filters that are
supposed to allow running ping within a network namespace.

Those filters will actually replace the ""ip"" command with ""ping"",
which leads to an invalid command.

Since those two filters are now superfluous, we're going to drop
them.

Change-Id: I57869c68e858503ed8d6b86506c79c289f2820e1
Closes-Bug: #1864186"
321afc8f897c8132ddc6edd2b59285111d0d73e0,2020-02-21 15:00:23+01:00,"Move rejection of min-bw rule on non-physnet port to the ovs qos driver

The ovs qos driver only supports the min-bw rule on physnet ports.
However other (future) qos drivers may support the min-bw rule on
non-physnet ports too, therefore implementing the rejection of the
unsupported combination in the qos plugin was a bug.

This change moves the rejection from the qos plugin to the ovs qos
driver.

Change-Id: I02d77a03c411dc8ab303a7d7b53d7ea93cc9f4c6
Closes-Bug: #1861442
Depends-On: https://review.opendev.org/705694
Related-Bug: #1819029"
4d5817003cc2766839f7629234d7a72697821ae9,2020-02-25 17:03:12+01:00,"Blacklist test_multiple_ports_portrange_remote for OVN

We recently merged this test and it its very unstable.
We need to figure out whats wrong. For now lets blacklist
it to not block the gate.

Change-Id: I406ad7f839758414903bb66d7480f4ac9975e740
Related-Bug: #1864620"
e4de8d0dd3fed2145a309cf2ca7a487f73545af3,2020-02-26 10:33:46-05:00,"Improve log message on exception for invalid tunnel type

When a tunnel with an invalid or unsupported type is to be created an
exception is raised but does not contain info for the offending host.
Add the host info and tunnel ip address to the exception error message
for better debugging

Change-Id: Id989f20043c252ff61ab9a6ee227e8c9c7c5029b
Closes-Bug: #1863888"
5600163e9b4fb89b1525e9e415b1fedbe9526501,2020-02-27 15:44:51+07:00,"[OvS] Handle re_added multi ports

Multiple ports are located in ports_re_added. Assume we have port_one
and port_two. It will loop through the ports. Port_one is iterated
first, events ['re_added'] is assigned port_one, events ['removed']
is assigned port_two. In the second loop, events ['re_added'] is set
to port_two instead of adding port_two to list. So after the loop,
only port_two is left in events ['re_added'].

Change-Id: If8edd29dd741f1688ffcac341fd58173539ba000
Closes-Bug: #1864630"
d340f6be570a59166bd262322a82a60d58e6aa61,2020-02-27 19:19:49+00:00,"Add functional test for metadata agent monitoring

This adds the functional test for https://review.opendev.org/#/c/705295/

Change-Id: Ie2bd745ed3e9c2b0c618c2833bfbecf44c019965
Related-bug: #1861092"
483cc047fa8d99e4093b425a87b95bdd81c0a029,2020-02-28 10:53:29+00:00,"Remove leftovers of get_external_network_id for router

Some time ago in patch [1] deprecated option
'gateway_external_network_id' was removed.
After that commit [2] removed rpc function ""get_external_network_id""
but there still left some leftovers from this.
This patch removes them completly.

[1] https://review.opendev.org/#/c/666409/
[2] https://review.opendev.org/#/c/682418/

Depends-On: https://review.opendev.org/710429

Change-Id: Ie58ea7f021db051b68be80a1d98f5985ff19fe23"
43e150e690538a509be8177353269787790ee143,2020-02-28 12:31:39+00:00,"Ensure netlink.nla_slot tuple key is a string

Ensure Pyroute2 netlink.nla_slot first element (""name""), is properly
converted to a string value. E.g.:
  In:  (b'IFA_ADDRESS', '192.168.30.20')
  Out: ('IFA_ADDRESS', '192.168.30.20')

Python2 compatibility checks are removed from ip_lib.make_serializable.

Change-Id: I87efe6cf8734bae6523106944e99fbd7db9ef4d5
Related-Bug: #1846360"
046672247de56bad950e8267a57bd26205f354a0,2020-02-28 12:34:13+00:00,"Fix queries to retrieve allocations with network_segment_range

Fixed the queries to retrieve the segment ID allocations when service
plugin network_segment_range is enabled. With the previous
implementation, a project user was able to allocate a segment ID
belonging to other project segment range.

The solution implemented was discussed in [1]:
- A project user will retrieve segments from the project ranges.
- When depleted, the segment IDs will be retrieved from the shared
  range, never using another project segment ID.

[1]http://lists.openstack.org/pipermail/openstack-discuss/2020-February/012736.html

Change-Id: I953062d9ee8ee5ee9a9f07aff4a8222ac63ed525
Closes-Bug: #1863423"
b46dbce21922d1b2e8bedbdf00ffee1f83913fd8,2020-02-28 09:49:29-05:00,"Fix logging call in the segment plugin

Arguments should be separate, not a tuple, else we'll
get a traceback.

Change-Id: I142fa1119c15076708a64991adfe30cb8ce38ea3
Closes-bug: #1865098"
25817782646a52b622cd732a43bffb123bcbf6f9,2020-02-29 12:16:57+00:00,"[OVN] Remove SG dependency on original port dict

The 'port_object' needs to be removed, so the current security group
dependency on it needs to be resolved first. The 'security_group_ids'
has been stored in the 'external_ids' of the logical switch port. When
updating or deleting a port, the security groups can be obtained directly
from 'ovn_port'.

Change-Id: I764f3426fe0e38094b77b69f4cb752d042f4d701
Partial-Bug: #1863987"
4739a4febb8c77e5a0ca48bc77ae4dccd9f8a81e,2020-03-01 11:25:58+01:00,"Ensure that default SG exists during list of SG rules API call

During processing of security group rule list API call Neutron will
now ensure that default security group for project given in the filters
or in the context exists.
It is similar to what is done for list of security groups or creation of
new network/port in the project.

Change-Id: Id6fee5a752968b356b884d939b708a420016c9bc
Closes-Bug: #1864171"
8c103739f6af40226c5ead22fa6f8657d51405ef,2020-03-02 09:41:48+08:00,"[OVN] Always update router static route

- This change fixed an issue where the update_router_routes method
would not execute when all static routes were removed

Closes-Bug: #1860273

Change-Id: I33559947f63ab4259ec99f093350e8e6eeb83d7d
Signed-off-by: zhangyuhe <1073258077@qq.com>"
5af046fd4e6387cdbf8bf65ea4c2039a4019b64b,2020-03-02 11:20:25-05:00,"Remove extra header fields in proxied metadata requests

If a user specifies a header in their request for metadata,
it could override what the proxy would have inserted on their
behalf. Make sure to remove any headers we don't want, and
override something that might be present in the request.
If the agent somehow gets a request with both headers it will
silently drop it.

Change-Id: Id6c103b7bcebe441c27c6049d349d84ba7fd15a6
Closes-bug: #1865036"
42fc820ded7bf312413eaf819e248122acac60db,2020-03-02 17:58:40+00:00,"Increase log information in ""TestMonitorDaemon""

When reading the 'neutron-keepalived-state-change' log, if an error
occurs, provide in the error log the namespace devices and addresses.

Change-Id: Ia324b2cf40cb72d28efdc8826c673ec9395d3a24
Closes-Bug: #1865557"
2baeae75199405d46927c073daf772b2a4144294,2020-03-02 19:42:59+01:00,"Clean dvr fip gateway entry when fip agent gw port is deleted

In [1] there was introduced new db table which stored information about
which DVR L3 agent has got already floating ip gateway port. It was to
avoid race conditions and ensure that there is always only one such port
per network and per agent (host).
Unfortunately in [1] there was no added removal of correct record from
this db table so it was causing problems when such port had to be
recreated after it was already on the host and was deleted.

This patch adds removal of such entry from db when needed.

Closes-Bug: #1866336

[1] https://review.opendev.org/#/c/702547/

Change-Id: I56efd1b9f09c0449ce531a185fcf4db353f99fe1"
36656ca31871dec7467d0523ae937d890e9b364b,2020-03-03 04:43:26+01:00,"[Community goal] Add contributor and PTL guide

This patch also changes CONTRIBUTING.rst file in root directory
of the repo to fit with new cookiecutter template proposed in
the community goal description.

Change-Id: I190afcff68c4a20f42aec34cb299bd862e7c7efd
Story: #2007236
Task: #38540"
592c2f8d91c3172c75cc5a2464350891b0a303f1,2020-03-03 11:03:36+01:00,"DHCPv6 - Use addr6_list in dnsmasq

Adds a new bool option dnsmasq_enable_addr6_list, when
enabled configuration for dnsmasq will be created with a
single dhcp-host entry specifying a list of ip addresses
allocated for a port.

Previously the dnsmasq dhcp-agent driver would write a
separate dhcp-host entry for each fixed-ip of a port in
the dnsmasq hosts file. The result of the previous
behaviour is that dnsmasq will only use one of the config
entries, i.e the first one matching the mac identifier.

The trade-off is that only a single dns_assignment will
be used for IPv6 addresses within the same subnet. (But
in practice, this was always the case since only the
first config entry would be used by dnsmasq.)

Why is this neccecary:
  This is done to enable ironic provisioning over IPv6
  using DHCPv6-stateful. For background info, please
  read dnsmasq-discuss thread:
http://lists.thekelleys.org.uk/pipermail/dnsmasq-discuss/2020q1/thread.html#13671

Closes-Bug: #1861032
Change-Id: I833840e7daed2efa7efaece27cfd1ba28e0feb90"
02a7e9674337d622c3cbcc9b82c7c9b417576a87,2020-03-03 14:43:01+01:00,"Rename devstack service neutron-ovn-metadata-agent

... to q-ovn-metadata-agent.

To the best of my understanding we decided to keep using the
neutron-legacy devstack module since it is the one used in the gate:

http://lists.openstack.org/pipermail/openstack-discuss/2019-December/thread.html#11544

And we merge new features like the ovn migration only working with
neutron-legacy:

https://review.opendev.org/696592

It seems to me we were a bit inconsistent in naming devstack service
'neutron-ovn-metadata-agent' since legacy style devstack service
names start with 'q-'.

For example this sample config is broken:

https://opendev.org/openstack/neutron/src/branch/master/devstack/ovn-compute-local.conf.sample#L31-L35

stack.sh dies with:

lib/neutron: line 368: neutron_plugin_create_nova_conf: command not found

Because not having a single 'q-' service in that enabled service list
we trip up devstack's 'is_neutron_legacy_enabled' check:

https://opendev.org/openstack/devstack/src/commit/e51cbf0ea9469e193473972fa5dd5b0de72d9a0e/lib/neutron#L127-L135

This change renames devstack service neutron-ovn-metadata-agent
to q-ovn-metadata-agent.

I'm not proud to propose this change in 2020 (circa 5 years after
the rename from Quantum to Neutron) so let me know if you see a better
way. :-)

Change-Id: I507a3426e2b63bff49891bd5a51fa9d9999a0ffa"
8456240e7da79f0409259597d796b7d6cab3298d,2020-03-03 15:18:18+01:00,"Run fullstack security group test always serially

Security groups are based on iptables in many cases and can interfere
between other tests. So it means that if some other test will manipulate
with iptables on host during SG related test is run, this SG related
test may fail without any obvious reason.
So lets try to run those test serially to be sure that no other agents
will manipulate iptables/openflow rules in same time.

Change-Id: I4d19f2a457e004306fdf40980a943073f1b8704a
Closes-Bug: #1779328"
1e69279817b4fe978e905987db90dfca9b636b0b,2020-03-04 10:33:20+00:00,"Check tc_lib.add_tc_policy_class input parameters

All input rate parameters (ceil, burst and rate) are mandatory in
Pyroute ""tc"" class [1]. ""tc_lib.add_tc_policy"" should provide them.

max_kbps: Now ""max_kbps"" is mandatory.

burst_kb: In case this parameter does not exist, the library uses the
method previously defined in Neutron, consisting of asigning the 80%
of ""max_kbps"".

min_kbps: In Pyroute2 [2], the value of ""burst"" depends on the ""rate""
value. If the ""rate"" value is too small, the ""burst"" value will exceed
the 2^32 limit defined in the iproute2 structure. In order to avoid
the error described in c#4 of the related bug, the method checks if
the provided ""rate"" value is greater than the minimum possible value.
If not, the minimum value is set and a warning message is logged.

[1]https://github.com/openstack/neutron/blob/fb2453c999f1757cc9085f4533bb2fd56d6b2245/neutron/privileged/agent/linux/tc_lib.py#L107-L108
[2]https://github.com/svinota/pyroute2/blob/943502a95cbbbac48218d2bde9d92af462682f96/pyroute2/netlink/rtnl/tcmsg/sched_htb.py#L88-L91

Change-Id: If60f4ea9793b0872e348a6319f2c24127e93f540
Related-Bug: #1826565"
cc281afeecc58e48f0d5bf3a5d6588e96e1fd33f,2020-03-06 11:29:46+01:00,"Register DNSMASQ_OPTS in functional sanity tests

test_dnsmasq_version() is sometimes triggering a traceback
because the new dnsmasq_enable_addr6_list config option isn't
being found. Register the option in the test class.

Change-Id: Ie441f831bcd0835ae8e1cd082005640b65b7393a
Closes-bug: #1866129"
03ef29b1f0cf848253d1d5e36662dc0e24a2b4f8,2020-03-09 08:43:43+01:00,"[OVN] Default to TLS for OVN-enabled tests

OVN makes use of TLS for authorization and authentication of its
peers and it does not really make sense to deploy without it.

Let's reflect this fact in the functional tests.

Change-Id: Ibaec2043a45c52cffba0a5ca376eaa453e62df5a
Related-Bug: #1847032
Related-Bug: #1850160"
4824a714bfe36fb95e0881d61d8ae56e3422ddc1,2020-03-09 16:07:49+00:00,"[OVN] Add support for external ports

This patch is adding support for a new port type called ""external"" in
core OVN.

Prior to this work, when a VM had a SR-IOV port attached to it, OVN itself
wasn't able to reply to things such as DHCP requests packets since the
OVS port was skipped. Core OVN then introduced the concept of ""external""
ports which are ports deployed on a different node than the one that the
VM is running and is able to reply to such requests on behalf of the VM.

With this patch, when a port with the VNIC type ""direct"" and no
""switchdev"" capability is created, ovn driver will then create a
logical port with the type ""external"" for it and add it to a default
HA Chassis Group. The port will then get bound to the ""master"" (higher
priority) chassis of that group.

Please note that, as a first step, this patch is creating only one HA
Chassis Group which *all* external ports will belong to. That means that
all external ports will be *scheduled onto the same node* (but it's
HA nevertheless). In the future we should enhance this behavior.

Change-Id: Ic6c4bb6c584682169f3ebd73105a847b05dddc76
Closes-Bug: #1841154
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
9e416224b04d7d4094e5719afa4ef5bccbe48ce7,2020-03-09 16:10:02+00:00,"[OVN] OVN DB schema update aware maintenance tasks

This patch introduces a new mechanism to allow rerunning maintenance
tasks upon an OVN database schema change to avoid a service restart.

As an example, the ""migrate_to_port_groups"" maintenance task will run
again when the database schema is updated. In case of a migration from
an OVN version without port groups support to a version that supports
it, the OVN driver will migrate the code automatically without the need
of a service restart.

Closes-Bug: #1864641
Change-Id: I520a3de105b4c6924908e099a3b8d60c3280f499
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
8108db2c6fd38ca10c8061dc005d9d794756dfa6,2020-03-10 14:14:15+00:00,"Bump neutron-lib to 2.2.0

Depends-On: https://review.opendev.org/#/c/711600/
Change-Id: I2d4bf3ad409d5fc2d4a01868ba9622f40a35f0a3"
d92e71c297d84f767dfb9b2485e64853decce873,2020-03-11 02:44:50+00:00,"Use OVN mech driver OVSDB connections for l3 plugin

It is possible to re-use the mech driver ovsdb connections in the
ovn l3 plugin, saving the overhead of two db connections/in-memory
copies of the db per process.

Closes-Bug: #1864548
Change-Id: I022dea485f42cf76c4cec67ee43eed9a3770ec9c"
2b56e60140dd07f24fd8f1adf08ae8b213cea4ca,2020-03-11 12:39:46+00:00,"Unblock security group update with same stateful data

Closes-Bug: #1866160
Blueprint: stateless-security-groups

Change-Id: I46d80a2a4f114a6775827ab3caa61dee9f5f1361"
4912d11b34e5f48ecb200947bbc3859145410c11,2020-03-11 14:10:13+00:00,"Add fip_pf_description extension to be supported by service plugin

In [1] new api extension ""fip_pf_description"" was introduced but it
wasn't added to the list of supported extensions by port_forwarding
service plugin.
Because of that ""description"" attribute was unknown for the
port_forwarding resource.
Now this new api extension is added and supported by pf plugin.

[1] https://review.opendev.org/#/c/670930/

Closes-Bug: #1866560
Partially-implements: bp/fip-pf-description

Depends-On: https://review.opendev.org/#/c/711856/
Change-Id: Ibf42a4d276d0141d66ae6e88aa9fbc291eaa4f82"
7e09e72661b0b3a0f898c20d451e204aa7a17194,2020-03-13 22:51:36+00:00,"Filter subnets on fixed_ips segment

For v6_stateless IP addresses for all stateless
subnets within a network are implicitly included.

When using segments implicitly allocating addresses
across subnets on different segments is incorrect.
IPs from subnets on differnt segments was allocated
when no host binding information was available
but a subnet_id in fixed_ips request was present.

This change adds filtering based on segment_id when
fixed_ips are used. If fixed_ips are not all on the
same segment exception FixedIpsSubnetsNotOnSameSegment
is raised.

Related: rhbz#1803989
Related-Bug: #1864333
Related-Bug: #1865138
Closes-Bug: #1864225
Change-Id: I336ae76283f29dd226344fb454aaa0e4aac030ea"
807a99f3ab4409b36ae23730b4f438cf3b852122,2020-03-16 13:47:55+01:00,"[fullstack] Add option for custom apipaste.ini

networking-bagpipe's fullstack envrionment has several issues, one of
them is that neutron.tests.common.helpers.find_sample_file searches in
neutron root dir, and in case neutron is just installed in a virtenv,
like in case of bagpipe fullstack environment api-paste.ini is not in
place.

Related-Bug: #1859861
Change-Id: I2ba9e35998bbce45e76abb795ed6c242752c7f99"
8ebc635a18fd23fd6595551a703961a4d4392948,2020-03-16 16:27:30-04:00,"Subcribe trunk & subport events to set subport id

Introduce a callback function in trunk plugin to receive after_create
and after_delete events for the trunk and subport resources This
function will set the subport device_id to trunk_id to prevent nova and
neutron from reusing it.

Closes-Bug: #1700428
Co-Authored-By: Nate Johnston <nate.johnston@redhat.com>
Change-Id: I97fe59752f9ef2cbe0376cd6ee0739660f5937ad"
3d3dc60408148cf16bc19cccb76b8652f980fa1c,2020-03-17 21:58:07+01:00,"subnet create - segment aware auto-addr allocation

When creating additional subnets with ipv6 auto-addressing
ip allocation was added to existing ports without filtering
on current allocation's segment.

This adds fitering to only add auto-address allocation when
the new subnet is on the same segment as the ports current
ipam allocations.

Related: rhbz#1803989
Related-Bug: #1864225
Related-Bug: #1865138
Closes-Bug: #1864333
Change-Id: I75ae14c64db076434ca9897ba9a6d97702e233ad"
f987486febb9fbe88232bb9139508981b92147f1,2020-03-17 22:02:33+01:00,"Deny delete last slaac subnet with allocation on segment

When a port has only one IP allocation on auto-allocation
subnet which is associated with a segment, do not allow
the delete of the subnet. Raise SubnetInUse exception instead.

Related: rhbz#1803989
Related-Bug: #1864225
Related-Bug: #1864333
Closes-Bug: #1865138
Change-Id: I9fb0f05ede42afa1a349635b1936028edf540a1f"
ee73b5061813b49bf0cd6aa782848796acbf484b,2020-03-18 15:56:38+00:00,"[OVN] Call OVNClient methods with context when possible

The OVN maintenance code was not always calling into
the OVNClient class methods with the correct number of
arguments, leading to exceptions.

After a deeper review, there were a number of places
where this was happening, so changed most methods to
take a 'context' argument since it's usually available
in the caller.

Change-Id: I1bcb0ca68747e4c32523e41307dc132291c55f6d
Closes-bug: #1861502"
512d8abb4b063bbfcdb0711b18e0157b668617f6,2020-03-19 09:27:13+00:00,"Neutron ovs agent: Removing SmartNIC OVS representor port on instance tear down and resync

The current flow where a port is unbound from an agent running on
smartnic was not implemented causing representor ports to remain
connected to the integration bridge.
This change solves this issue in two cases:
  * When deleting the instance and so deleting SmartNic port,
    it will remove the unbound ports from integration bridge
  * When resync SmartNic ports on Neutron OVS agent restart,
    it will remove the port from integration bridge not mapped to
    neutron SmartNic ports.

Closes-Bug: #1855260
Change-Id: I7077577cca54329fbcb77fbde730389835ab6497"
e1804e6f5f6b12c93cfa79d933c3de6cf71378e4,2020-03-19 09:34:27+00:00,"Use ""datetime.datetime.isoformat"" instead of ""timeutils.isotime""

oslo-utils ""isotime"" is deprecated [1]. ""datetime.datetime.isoformat""
should be used instead.

[1]https://github.com/openstack/oslo.utils/blob/382370781bef900fae16687cc83d5e72d6769193/oslo_utils/timeutils.py#L45-L49

Change-Id: Iaaab299298c6528ea56e4b212674f492dfe517b7"
ceb27f2c7d9d91526e9062bfaad71d2a270318bf,2020-03-19 12:15:02+00:00,"Mark TestVirtualPorts tests as unstable

Based on debug performed in [1] the TestVirtualPorts
are unstable. At lease one of tests per 20
retries of functional job fail in various
places.
We don't think it is worth to spend more
time on debugging those tests, because there is
a possible easier solution: set virtual port
type based on DEVICE_TYPE, and do not rely
on allowed address pairs.

[1] https://review.opendev.org/#/c/712888/

Related-Bug: #1865453

Change-Id: Iffef8ceb9ca458820a7b3e604a53281f7e93b810"
eb6104c0ac61216234ea958f2fd322e70b8e4bec,2020-03-19 16:51:39+02:00,"Allow sharing of address scopes via RBAC mechanism

Neutron-lib api ref: https://review.opendev.org/#/c/707407/
Client: https://review.opendev.org/#/c/709124/
Tempest tests: https://review.opendev.org/#/c/711610/

Change-Id: I74bedae4de4eb25e5427ecb129543885a020a0a8
Depends-On: https://review.opendev.org/712633
Partial-Bug: #1862968
Closes-Bug: #1697925"
06fde66b0b05dc987a4280275813f0cf4bf54c88,2020-03-19 18:08:16+00:00,"[ovn] Stricter matching on metadata port binding event

Previously the Port Binding event spawned haproxy process even if the
change wasn't done in chassis column, it attempted to spawn haproxy on
all port bindings changes.

This patch spawns haproxy only if new chassis is the one managed by the
agent and old chassis was empty. Similarly it destroys haproxy if new
chassis is empty and old chassis was the one managed by the agent.

Closes-bug: #1868125

Co-Authored-By: Daniel Alvarez <dalvarez@redhat.com>
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>
Change-Id: I5b87726eafa71d717ae22f48d1c9c6343b680c7f"
42ad50db1e51207f24532822fac170a57c79e0b3,2020-03-19 18:08:43-04:00,"Add known gaps between ML2/OVS and OVN

These were listed in the spec, but let's add them to the
documentation so they are easier to find.

Change-Id: I48a38460cf6e74dffa7ecb780d2f90b4403c62bd
Related-bug: #1861032"
c8f2a309836e152c4f08cc8e5735409f992177af,2020-03-19 23:40:33+00:00,"Reno only - Make stateless allocation segment aware

This add's a releasenote for changes:
 * https://review.opendev.org/709444
 * https://review.opendev.org/710546
 * https://review.opendev.org/710547

Related-Bug: #1864225
Related-Bug: #1864333
Related-Bug: #1865138
Change-Id: Idc7819340b37bee8ae7841d14d0143fb18ac362a"
49809951765775c32041c09af8b47dc7a2f53b76,2020-03-20 06:00:56+00:00,"Revert ""Remove native openflow driver 'deferred' code""

This reverts commit d954cd4fea64fff3714d7bd1a609dea850c7f056.

Some flow installations [1] still need 'deferred' to improve the flow install performance, for instance openflow firewall.

[1] https://github.com/openstack/neutron/blob/master/neutron/agent/common/ovs_lib.py#L422-L475

Change-Id: Ie2d26f3820269271e7280b19f3206dd11aa99037"
79af9e786d6feb19b8f282f0c69afa1516c4b929,2020-03-20 12:20:44+00:00,"Add usage note in utils.Timer class

This class, when a timeout is defined, cannot be used in other
than the main thread. When a timeout is defined, an alarm signal is
set. Only the main thread is allowed to set a signal handler and the
signal handlers are always executed in this main thread [1].

[1] https://docs.python.org/3/library/signal.html#signals-and-threads

Change-Id: I9ffdde96873fa3a557e4a4ddeeb9abdf89d3045a
Related-Bug: #1832925"
f31ae53dd5cee1ebaec26dc563e8a3562f897b49,2020-03-20 19:22:11+00:00,"Revert ""Switch to use cast method in dhcp_ready_on_ports method""

This reverts commit 1a686fb401eca1843b81292fc88c13a2e6fd274d.

With https://review.opendev.org/#/c/709824/ and this reverted, we
have seen things work better in our large scale environment. Although
cast() will return immediately, it can overwhelm the server by sending
a lot of messages quickly, and won't necessarily prioritize the ""new""
ones, which are typically more important to mark as provisioned first. 

Change-Id: Ie61b222eec87c5613efc6a33553844c64a655a57
Related-bug: #1864675"
00298fe6e84cd7610b39af50e9517885a182f47c,2020-03-21 17:54:34+08:00,"[Security] fix allowed-address-pair 0.0.0.0/0 issue

When add allowed-address-pair 0.0.0.0/0 to one port, it will
unexpectedly open all others' protocol under same security
group. IPv6 has the same problem.

The root cause is the openflow rules calculation of the
security group, it will unexpectedly allow all IP(4&6)
traffic to get through.

For openvswitch openflow firewall, this patch adds a source
mac address match for the allowed-address-pair which has
prefix lenght 0, that means all ethernet packets from this
mac will be accepted. It exactly will meet the request of
accepting any IP address from the configured VM.

Test result shows that the remote security group and
allowed address pair works:
1. Port has 0.0.0.0/0 allowed-address-pair clould send any
   IP (src) packet out.
2. Port has x.x.x.x/y allowed-address-pair could be accepted
   for those VMs under same security group.
3. Ports under same network can reach each other (remote
   security group).
4. Protocol port number could be accessed only when there
   has related rule.

Closes-bug: #1867119
Change-Id: I2e3aa7c400d7bb17cc117b65faaa160b41013dde"
07b015d7897d6cea48eec1fdd02c9e19d4990973,2020-03-24 14:10:38-04:00,"Use dict .get() to avoid a KeyError in the segment plugin

On subnet delete, the supplied subnet in the post hook
could contain a subnet without certain items, leading to
a KeyError in the segment plugin.  Fix a number of these
occurences so this cannot happen.

Also fixed similar code in the segment tests.

Change-Id: I645610febde446b78ed6edd868e699673648a4de
Closes-bug: #1868724"
c52029c39aa824a67095fbbf9e59eff769d92587,2020-03-25 16:09:42+08:00,"Do not link up HA router gateway in backup node

L3 router will set its devices link up by default.
For HA routers, the gateway device will be pluged
in all scheduled hosts. When the gateway deivce is
up in backup node, it will send out IPv6 related
packets (MLDv2) according to some kernal config.
This will cause the physical fabric think that the
gateway MAC is now working in the backup node. And
finally the master node L3 traffic will be broken.

This patch sets the backup gateway device link down
by default. When the VRRP sets the master state in
one host, the L3 agent state change procedure will
do link up action for the gateway device.

Closes-Bug: #1859832
Change-Id: I8dca2c1a2f8cb467cfb44420f0eea54ca0932b05"
d7f925249a598aba88ecd58bb4759fc1767954e5,2020-03-25 11:34:40-04:00,"Mark security group fullstack tests as stable

It has been some time since we marked the security group tests in
fullstack as unstable.  Now that mark is impeding the fullstack tests
for stateless security groups.

Based on testing it appears that the unstable tests are specific to the
linuxbridge driver, which is not really very much supported these days.
Testing for that driver is dropped, since it is better to at least test
for the other scenarios than nothing at all.

Change-Id: Ib1ef0763496aa536ba80f1c34c64d8a6c313fd0b
Needed-By: https://review.opendev.org/710252
Related-bug: #1779328"
113dfac6083c2bda36f5186e123e4e5c82fa8097,2020-03-25 13:15:31-04:00,"Prioritize port create and update ready messages

The DHCP agent prioritizes RPC messages based on the
priority field send from neutron-server, but then groups
them all in the same dhcp_ready_ports set when sending
them back to the server to clear the provisioning block(s).

Priority should be given to new and changed ports, since
those are most likely to be associated with new instances
which can fail to boot if they are not handled quickly when
the agent is very busy, for example, right after it was
restarted.

Change-Id: Ib5074abadd7189bb4bdd5e46c677f1bfb071221e
Closes-bug: #1864675"
79e8230e39c5ba30ace3afe3d9f1cc15463ea9ad,2020-03-26 08:53:04+00:00,"Filter subnet by segment ID or None

In ""_query_filter_by_fixed_ips_segment"", the subnet query should be
filtered by segment ID if exists, or None otherwise.

The ""segment_id"" field (from the ""subnet"" DB register) is a string.
As reported in the related bug, PostgreSQL does not accept to compare
this field with a boolean value (""false""). This patch avoids the
previous situation where the DB WHERE statement was trying to compare
a string and a boolean:

  operator does not exist: character varying = boolean
  LINE 5: WHERE anon_1.subnets_segment_id = false
  No operator matches the given name and argument type(s). You might \
    need to add explicit type casts.

Change-Id: I1ff29eb45c6663885c2b8a126a3669e75b920c98
Closes-Bug: #1869034"
e37722c0f5f0b746135200db6f654674dc0f6f12,2020-03-26 14:00:24-04:00,"Wait before deleting trunk bridges for DPDK vhu

DPDK vhostuser mode (DPDK/vhu) means that when an instance is powered
off the port is deleted, and when an instance is powered on a port is
created.  This means a reboot is functionally a super fast
delete-then-create.  Neutron trunking mode in combination with DPDK/vhu
implements a trunk bridge for each tenant, and the ports for the
instances are created as subports of that bridge.  The standard way a
trunk bridge works is that when all the subports are deleted, a thread
is spawned to delete the trunk bridge, because that is an expensive and
time-consuming operation.  That means that if the port in question is
the only port on the trunk on that compute node, this happens:

1. The port is deleted
2. A thread is spawned to delete the trunk
3. The port is recreated

If the trunk is deleted after #3 happens then the instance has no
networking and is inaccessible; this is the scenario that was dealt with
in a previous change [1].  But there continue to be issues with errors
""RowNotFound: Cannot find Bridge with name=tbr-XXXXXXXX-X"".  What is
happening in this case is that the trunk is being deleted in the middle
of the execution of #3, so that it stops existing in the middle of the
port creation logic but before the port is actually recreated.

Since this is a timing issue between two different threads it's
difficult to stamp out entirely, but I think the best way to do it is to
add a slight delay in the trunk deletion thread, just a second or two.
That will give the port time to come back online and avoid the trunk
deletion entirely.

[1] https://review.opendev.org/623275

Related-Bug: #1869244
Change-Id: I36a98fe5da85da1f3a0315dd1a470f062de6f38b"
ba00b06ae446f25d09b350b08f95a06f569b3758,2020-03-27 09:59:33+00:00,"mech_driver.OVNMechanismDriver ""_ovn_client"" is a read-only property

mech_driver.OVNMechanismDriver ""_ovn_client"" is not a class member but
a read-only property and can't be assigned.

Change-Id: I6fdd9d929e75a6092e0a874b8ffcf283c64b076a
Closes-Bug: #1869342"
ea999564a5b80dcf13c0c43f107165f0754210b7,2020-03-27 15:52:13+00:00,"[OVN] HA Chassis Group: Ignore UPDATES when external_ids hasn't changed

The ""old"" parameter passed to the handle_ha_chassis_group_changes()
method is a delta object and sometimes it does not contain the
""external_ids"" column (because it hasn't changed).

The absence of that column was misleading that method into believe that
the ""old"" object was no longer a gateway chassis and that triggered some
changes in the HA group. Changing the HA group resulted in the SRIOV
(external in OVN) ports to start flapping between the gateway chassis.

This patch is adding a check to verify that the ""external_ids"" column
has changed before acting on it, otherwise just ignore the update and
return.

Closes-Bug: #1869389
Change-Id: I3f7de633e5546dc78c3546b9c34ea81d0a0524d3
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
6d619ea7c13e89ec575295f04c63ae316759c50a,2020-03-30 22:10:05+02:00,"Fix name of ""subnet_dns_publish_fixed_ip"" extension in docs

Correct name of the extension is ""subnet_dns_publish_fixed_ip"" but
in the Neutron docs it was ""subnet_dns_publish_fixed_ips"".

Change-Id: I52e313766d08879b8163b36f41515ce4afd5c470
Closes-Bug: #1869057"
3d3b61f8792277b303e10bce51512d9a73ef187e,2020-03-31 07:36:07+00:00,"Revert ""[OVN] Set 'unknown' address properly when port sec is disabled""

We can now revert this patch, because main cause has been already
fixed in Core OVN [1]. With this fix the ARP responder flows are not
installed on LS pipeline, when LSP has port security disabled, and 
an 'unknown' address is set in addresses column.
This makes MAC spoofing possible.


[1] https://patchwork.ozlabs.org/patch/1258152/


This reverts commit 03b87ad963d5d8165a92e5c7c284c1517333dd00.



Change-Id: Ie4c87d325b671348e133d62818d99af147d50ca2
Closes-Bug: #1864027"
27c8391458e37c244dfa983b020a55dca90ea754,2020-03-31 11:17:47+00:00,"Fix neutron debug probe to use integration_bridge

The debug probe stopped working after
https://review.opendev.org/#/c/698783/

Change-Id: I70deb83a1b52d2a34c92f32fb163c931aa0ff76a"
eb775458c6da57426703289c7b969caddb83d677,2020-03-31 19:33:44+02:00,"[DVR] Don't populate unbound ports in router's ARP cache

When user is using keepalived on their instances, he often creates
additional port in Neutron to allocate some IP address which will
be then used as VIP in keepalived and will be configured in
allowed_address_pair of other ports plugged to instances with
keepalived.
This is e.g. Octavia's use case.

This together with DVR caused problems with connectivity to such VIP
as it was populated in router's arp cache with MAC address from
Neutron db.

As this port isn't bound, it is only Neutron db entry so there is no
need to set it in arp cache of the router.
This patch is doing exactly that to filter such ""unbound"" and
""binding_failed"" ports from the list.

Change-Id: Ia885ce00dbb5f2968859e8d0850bc511016f0846
Closes-Bug: #1869887"
d0a16522272bce64bceca1ccdb8d98a38d953cf5,2020-03-31 20:39:13+02:00,"Add trunk subports to be one of dvr serviced device owners

When ""trunk:subport"" wasn't added to the list of device owners which
are supported by dvr, there was no proper config in br-int's openflow
rules for such port, e.g. there was no dvr_to_src_mac rule in table 1
added and traffic from such port was never going through br-int.

Trunk ports should be added to this dvr serviced device owners list and
that patch is adding it there.

Change-Id: Ic21089adfa32dbf5d0e29a89713e6e2bf28f0f05
Closes-Bug: #1870114"
a90654ae5a8f4cc8588f0f595af091f8cd986441,2020-04-01 14:06:40+02:00,"Revert ""Subcribe trunk & subport events to set subport id""

This reverts commit 8ebc635a18fd23fd6595551a703961a4d4392948.

The reverted commit does mass update on all subports of a trunk.
This is not in line with the original design since it causes huge
api-side performance effects.

I think that's the reason why we started seeing gate failures of
rally_openstack.task.scenarios.neutron.trunk.CreateAndListTrunks
in neutron-rally-task.

Change-Id: I6f0fd91c62985207af8dbf29aae463b2b478d5d2
Closes-Bug: #1870110
Related-Bug: #1700428"
306280813f34f8bbe384ae5bea67f0f66e316b61,2020-04-02 13:59:29+00:00,"Replace ctype.CDLL by ctypes.PyDLL in linux.ip_lib

Some linux.ip_lib functions make use of ""ctype.CDLL"" methods
(create_netns, remove_netns). Those methods are called inside a
""privsep"" context; that means the function reference and the
arguments are passed to a privileged context that will execute
the method.

""privsep"" library makes use of eventlet to implement multitasking.
If the method executed returns the GIL, nothing guarantees that
the ""eventlet"" executor will return it again to this task. This
could lead to timeouts during the execution of those methods.

From https://docs.python.org/3.6/library/ctypes.html#ctypes.PyDLL:
  ""Instances of this class behave like CDLL instances, except that
   the Python GIL is not released during the function call, and
   after the function execution the Python error flag is checked.""

Change-Id: I36ef9bf59e9c93f50464457a5d9a968738844079
Closes-Bug: #1870352"
21935365f29cce3fa95f032d9778786519461521,2020-04-03 09:04:24+00:00,"""keepalived_state_change"" needs to use threading to send arping

""keepalived_state_change"" monitor does not use eventlet but normal
Python threads. When ""send_ip_addr_adv_notif"" is called from inside
the monitor, the arping command is never sent because the eventlet
thread does not start. In order to be able to be called from this
process, this method should also have an alternative implementation
using ""threading"".

""TestMonitorDaemon.test_new_fip_sends_garp"" is also modified to
actually test the GARP sent. The test was originally implemented with
only one interface in the monitored namespace.
""keepalived_state_change"" sends a GARP when a new IP address is added
in a interface other than the monitored one. That's why this patch
creates a new interface and sets it as the monitor interface. When
a new IP address is added to the other interface, the monitor populates
it by sending a GARP through the modified interface [1].

[1] https://github.com/openstack/neutron/blob/8ee34655b8757086c03feecfda100333f47ed810/neutron/agent/l3/keepalived_state_change.py#L90

Change-Id: Ib69e21b4645cef71db07595019fac9af77fefaa1
Closes-Bug: #1870313"
a1735c46d8aa3a3df50818ce176e0632592924a7,2020-04-03 12:24:02+00:00,"Don't reschedule hosts unless we need to

Only reschedule gateways/update segments when things have changed
that would require those actions.

Co-Authored-By: Terry Wilson <twilson@redhat.com>

Change-Id: I62f53dbd862c0f38af4a1434d453e97c18777eb4
Closes-bug: #1861510
Closes-bug: #1861509"
02a74c3d2ac3febff3b458bbfb6c16f71e0cb3fb,2020-04-03 20:14:32+00:00,"Enable back mac spoofing and disabled port security tests

We can enable back the mac spoofing test because
[1] has been merged [2]. Because of [1] we can now
rollback [3] to make port security tests with
disabled security works.

[1] https://bugzilla.redhat.com/show_bug.cgi?id=1805709
[2] https://patchwork.ozlabs.org/patch/1258152
[3] https://review.opendev.org/#/c/708852/

Change-Id: I008f3ce08346520b415f6db41419a69d472350a9"
2e6aa290a38798f0eef04231d8424237daf3b2d4,2020-04-07 19:29:28+00:00,"Default (shared) network segment range is not mandatory

When ""network_segment_range"" service extension is enabled, the default
(shared) network segment range could not exist. In this case, when
retrieving the segmentation IDs, the existance of this range should be
checked first.

Change-Id: Iaff891a48adc811ab114fb03b24ab3da9311eec3
Closes-Bug: #1870569"
56b971bb42c69ea6865bed9b5fbc4ff372af0027,2020-04-09 19:02:47+03:00,"Allow sharing of subnet pools via RBAC mechanism

Neutron-lib api ref: https://review.opendev.org/705998/
Client: https://review.opendev.org/#/c/712705/
Tempest tests: https://review.opendev.org/#/c/711656/

Change-Id: I1d6125513cd8cb088b84c92497866f78955019a9
Partial-Bug: #1862032
Depends-On: https://review.opendev.org/709122"
b098239d72d79469677bdc1e45daf7454b2eeb47,2020-04-10 13:11:00+00:00,"Refactor OVN client QoS extension

The QoS OVN client extension is moved to the ML2 driver. This
extension is called from the OVN driver in the events of:
- create port
- update port
- delete port
- update network

The QoS OVN client extension now can accept several rules per policy
as documented in the SUPPORTED_RULES. The QoS OVN client extension
can write one OVN QoS rule per flow direction and each OVN QoS rule
register can hold both a bandwidth limit rule and a DSCP marking rule.

The ""update_policy"" method is called from the OVN QoS driver, when
a QoS policy or its rules are updated.

The QoS OVN client extension updates the QoS OVN registers
exclusively, based on the related events.

Closes-Bug: #1863852

Change-Id: I4833ed0c9a2741bdd007d4ebb3e8c1cb4c30d4c7"
ac5094daa660a98aa4b2d616312b4bbacc98d524,2020-04-14 08:57:55+00:00,"Wait until agent metadata is in SB chassis register

Change-Id: I685c86e19fc1acc29fe048e8f7810006e0bb16a9
Closes-Bug: #1871340"
c92950b0eea55b8f16ae4ecea9366dba4419545a,2020-04-14 11:35:44+00:00,"[Fullstack] Handle properly BrokenPipeError exception

NetcatTester class should handle BrokenPipeError exception
and not raise it to fail test immediately if nc process wasn't
yet started when it tries first time to read/write something to
it.

Change-Id: Ica953cc2038b24c4b3985447b393763912aa6abd
Closes-Bug: #1871908"
2ccddef913e7a0eee4e304dea27b6aa0f58c1c3c,2020-04-14 12:50:49+00:00,"Improve port retrieval when validating auto address

Improve port retrieval in method
""_validate_auto_address_subnet_delete"". Instead of requesting each
port individually, a single DB query is executed to retrieve all
the ports with IP allocation in a in a subnet.

Change-Id: I7875142ebecd17663e17847fb14997200d7ae5c8
Related-Bug: #1865138"
8d85b356293d2a5f702523dfc0d21039abdd84fc,2020-04-15 17:29:04+00:00,"Add ""rbac-address-scope"" to OVN supported extensions

Change-Id: I938f9bca3e0477819a07cdb600facd2ebbae40be
Related-Bug: #1862968"
2273499155a8cd83150aa4b4f8ba08ecbbdc9306,2020-04-16 20:10:28+00:00,"Add rootwrap filter rule for radvd-kill script

In patch [1] support for custom kill scripts was added.
We also added rootwrap filter rules for such scripts to
kill dnsmasq, haproxy, dibbler and keepalived processes.
But we missed to add rule for radvd-kill so this patch
adds it (better late than never ;))

[1] https://review.opendev.org/#/c/661760/

Closes-Bug: #1873240

Change-Id: I8fa7176d1d9667c6b5cc95af0e31210d0f1c3662"
d84088135993e218d9ae852a200ff3f1c7c4a81b,2020-04-17 07:27:37+00:00,"Additions to ovn-db-local.conf.sample

To run ovn-northd on a host the sample file is not enough as it is now.

Change-Id: I20e61249cc91a5ea2c9652f99b6dac287462b305
Related-Bug: #1871730"
7718cc0a6f6f20bd9b40ef2565cb7a5be37eb8d8,2020-04-17 07:28:58+00:00,"Start ovs if ovn-northd is enabled

There are usecases where ovn-northd is running standalone with ovs, the
suggested local.conf is among the sample files (see: [0]). The service
however doesn't start as it needs OVS to run. This patch makes OVS
installed and started by ovn devstack plugin if ovn-northd is enabled in
local.conf.

[0]: https://opendev.org/openstack/neutron/src/branch/master/devstack/ovn-db-local.conf.sample

Change-Id: Ib12a076e50f010464735c6779d0e67bb218b66be
Closes-Bug: #1871730"
3a6a8c334a65acd658072c2f681b35dac9ca3fcd,2020-04-21 08:39:49+08:00,"Provide correct fip cidr when deleting port forwarding

The second parameter of fip_id_cidrs requires a cidr, but now is address. this
causes function `_sync_and_remove_fip` fail to remove vip as expected.

if current is ha router, in function _sync_and_remove_fip will call
`ri._remove_vip(fip_id_cidr[1])`. the final parameter is passed to
KeepalivedInstance.remove_vip_by_ip_address and compare with attribute vips.
the values of vips are of type CIDR.

if not ha, the following process processing use netaddr.IPNetwork and can be
performed as expected.

Closes-bug: #1873708

Change-Id: I2ae2ade29700a56dc340256389bf8b0efd697ba4"
269734184645e7e168a7a6de9352ef79aae8b6f4,2020-04-21 15:32:05+01:00,"[OVN] External ports: Account for VNIC_DIRECT_PHYSICAL / VNIC_MACVTAP

Prior to this patch, the OVN driver wasn't account for the VNIC types
VNIC_DIRECT_PHYSICAL and VNIC_MACVTAP. These types should work the same
way as the VNIC_DIRECT type in the OVN driver perspective.

Closes-Bug: #1874065
Change-Id: Idb596b5a80a3155bc9cdee1e082506701e730f00
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
dc9084a8ec9db08d7ea947e0b73581b748be5819,2020-04-22 15:05:13+02:00,"[L3 HA] Add ""no_track"" option to VIPs in keepalived config

Patch [1] introduced new mechanism which only brings UP interfaces
on master node of HA router. It works fine with keepalived 1.x
but it is broken when keepalived 2.x was used (e.g. on Centos 8) as
in this new version of keepalived by default all interfaces of VIPs
and routes are tracked, and if one of them is DOWN, keepalived is
going to FAULT state. Because of that router will never be
transitioned to MASTER on any node.

This patch fixes it by adding ""no_track"" option to all VIPs
and routes in keepalived's config file.

This ""no_track"" option isn't added to ha interface so this one
is still tracked by keepalived.

[1] https://review.opendev.org/#/c/707406/

Closes-bug: #1874211

Change-Id: Ic16cf83fe1d1576d91047adb2d4f9e07d57185b6"
a8a2bd7e074bfa952ebf0803d006c3e29c8468b4,2020-04-23 16:43:19+00:00,"Lock subnets during port creation and subnet deletion

The field ""in_use"" is added to ""subnet"" DB definition. This DB
register column is a flag used to mark a register as in use
by other transaction. When a write DB transaction writes any
value on this field, the register is locked for any other
concurrent transaction. If two DB transactions try to set this
column at the same time, one of them will fail.

This DB lock is implemented in ""subnet"" and is used during the
subnet deletion and the port IP assignation, where all the port
network subnets are retrieved to provide an IP address on the subnet
CIDR.

As reported in the related bug, it was possible to assign an IP
to a port and, before the port creation command finished, delete the
subnet where the IP belonged. This patch introduces this subnet lock
during the IP assignation and at the beginning of the subnet deletion
process. At the end of both transactions, the DB engine checks if the
lock operation (write ""in_use"" column) is possible or the subnet
register was already requested by other DB transaction.

Change-Id: I45a724917389814e83400f5854ada175dfce2b7b
Closes-Bug: #1865891"
12b9149e20665d80c11f1ef3d2283e1fa6f3b693,2020-04-24 17:44:27-04:00,"Not remove the running router when MQ is unreachable

When the L3 agent get a router update notification, it will try to
retrieve the router info from neutron server. But at this time, if
the message queue is down/unreachable. It will get exceptions related
message queue. The resync actions will be run then. Sometimes, rabbitMQ
cluster is not so much easy to recover. Then Long time MQ recover time
will cause the router info sync RPC never get successful until it meets
the max retry time. Then the bad thing happens, L3 agent is trying to
remove the router now. It basically shutdown all the existing L3 traffic
of this router.

This patch directly removes the final router removal action, let the
router run as it is.

Closes-Bug: #1871850
Change-Id: I9062638366b45a7a930f31185cd6e23901a43957"
ef2260441d56036b42fc71b0f03b70a4a02fd954,2020-04-27 11:58:43+01:00,"[OVN] Do not delete port's revision on RowNotFound

The delete_port() method from OVNClient has a potential problem of
leaving stale ports when RowNotFound is raised from the process to
delete the port from the OVN database. Since the exception is not
granular enough, the RowNotFound could be raised from other objects that
are part of the same transaction (such as ACLs, DNS entries, etc...)
resulting in the revision for the port being deleted even tho the port
is still in the database.

Instead of giving a pass on the RowNotFound exception, this patch is
logging the error and re-raising it without deleting the revision.

Change-Id: I25b93b7c080403fc38365b638e4e03298b447d0f
Partial-Bug: #1874733
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
8ec41570a97e137b77748582f78bfd063155b0e7,2020-04-27 16:26:26+01:00,"[OVN] Enable test_multicast_between_vms_on_same_network

This patch is adding support on DevStack and zuul job to enable the
test_multicast_between_vms_on_same_network test in the upstream gate.

Depends-On: https://review.opendev.org/#/c/721262
Change-Id: I0ee5c3daceb34b6810165c1e8a20aa3d5f21c74b
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
4fb505891ee32ae41247f1d7a48b7455b342840e,2020-04-28 14:03:21-04:00,"Updates for python3.8

With the move to the Victoria job template in
https://review.opendev.org/#/c/722681/, the py37 jobs no
longer get run, so the check and gate job entries can
be removed.

Added a keepalived py38 KillFilter line to match the py36
and py37 ones.

Also updated TESTING.rst to use py38 in all examples.

Change-Id: Ief793b54d53c3239cfb24278e88e4f4189bbc2c2"
76fa308ca9c45405657432c2ade83009dcbc9aa1,2020-04-29 17:57:41+08:00,"ensure default security group exists when filter by project_id

now filter security groups by tenant_id, will auto ensure default security
group, but project_id not. tenant_id is deprecated, we are used to filtering
by project_id.

Closes-bug: #1875849

Change-Id: I3f1a2698768e2d66811bb290a892a1b089dff4ed"
e07b6d81080be49e49ca143ed16316eeede7d5e5,2020-04-29 18:02:31+08:00,"Revising log with wrong network_id when create port failed

Log network_id passed from api rather than subnet['network_id']

Change-Id: I8151253be1ca42bbf4b49f904751565783723769
Closes-Bug: #1844607"
76a2f8b33e3f673b96feeb2724ae55567a3b6520,2020-04-29 13:14:15+00:00,"[ovn] Add PortBinding delete event for external ports

The ports are unbound from chassis before they get deleted after VM with
normal VIF ports is deleted. In case of SRIOV, we do not unbound the
external SRIOV port but we delete it right away with chassis column set.

This patch adds DELETE event type support to the event that tears down
the metadata datapath. Also a warning is added if bound port that is not
external is being removed.

Change-Id: I17b71933b8c3a7609fcc5027c246f5b03d493ee2
Closes-Bug: #1875865
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
01b9e1106dffae1532887e918b9433096f06a560,2020-04-30 11:15:10+00:00,"Install ""wmi"" library in ""win32"" systems

Change-Id: Ifb2af895e0d0f1935c63950fcae4480c090d1356
Closes-Bug: #1872713"
d7c23431ad3959eb5fd74e42ea95d446e4e7566d,2020-05-01 10:34:27-05:00,"[ovn]: Create neutron_pg_drop Port Group on init

The patch adds a short living connection in pre-fork routine that
creates neutron_pg_drop Port Group. Later after workers are spawned,
each worker also creates a short living connection and waits for an
event that the Port Group was created.

The short living IDLs limit its tables only for relevant tables so it
doesn't fetch the whole OVS DB to the local copy.

Closes-bug: #1866068

Change-Id: I1f5af36b8c3d5650f890edfed3c33dc206869824
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
ec7a5aa5161f438736c5a1dcf10f5d0e48f329cd,2020-05-01 16:05:16-04:00,"Monkey patch original current_thread _active

Monkey patch the original current_thread to use the up-to-date _active
global variable. This solution is based on that documented at:
https://github.com/eventlet/eventlet/issues/592

Change-Id: I49bfd9673abc7602b27dc48b8b490daaded2882c
Closes-Bug: #1863021"
6b360d2343cc2858dcf01fa649fea7b107afa787,2020-05-05 12:55:49+02:00,"Report L3 extensions enabled in the L3 agent's config

Change-Id: I187ab3bf04d19c07c3f04ffb2161399a7dfd7ff3
Closes-Bug: #1876898"
f1cc1bb2813acc5b361bd92823e778a5b6dbea52,2020-05-05 06:56:20-04:00,"[ovn]: Fix l3_plugin.add_router_interface to comply with RouterPluginBase

OVNL3RouterPlugin inherits from L3_NAT_dbonly_mixin, which inherits
from neutron.extensions.l3.RouterPluginBase

As maintenance task expects OVNL3RouterPlugin to behave as
RouterPluginBase, the add_router_interface should have the signature:

  add_router_interface(self, context, router_id, interface_info)

Note: With this change, the default behavior of OVNL3RouterPlugin's
_add_neutron_router_interface becomes idem-potent: multiple calls to add
the same interface will not fail. Because of that, the unit test
test_router_add_interface_dup_port no longer makes sense and is being
removed.

Closes-Bug: #1876148
Change-Id: I8010113b4d8c66ecbccf3126f322a8836d92e7ba
Signed-off-by: Flavio Fernandes <flaviof@redhat.com>"
18dd0d4e5503b280d34700cad7ea109001ae55b5,2020-05-05 15:32:22+00:00,"Fix ovn-db-sync-util after removing l3 ovsdb connection

As a result of d92e71c2 the sync util can fail because it tries to
look up the ovsdb connection from the mechanism_manager under 'ovn'
but the sync util registers under 'ovn-sync'.

Change-Id: I6998b08672761a501e427aab5d581064d9425dde
Closes-Bug: #1876752"
8b234d8786072c9bc83d19e0cde3927fc5ccf8f8,2020-05-06 12:02:15+01:00,"[OVN]: Make _delete_port() more error-resilent

This patch is making the transaction from the _delete_port() method in
OVNClient more resilient to errors where elements from that transaction
have already been deleted by another change in the database.

Prior to this patch, a few places could potentially raise RowNotFound
which would abort the whole transaction and would leave the a stable
port for being cleaned up after by the maintenance thread. This patch
tries to catch those exceptions that could potentially fail the
transaction.

Change-Id: I8fd1d1485269d23529a19085bd4aa4c6c74f5f91
Partial-Bug: #1874733
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
f951871430ba59a148b8cb88e0d1b9e517c0a52e,2020-05-07 01:38:14+02:00,"Use dhcp-host tag support when supported

In dnsmasq 2.81 there is a regression (see [1] for details).
Prior versions of dnsmasq would select a host record where:
a) no address is present in the host record.
b) an address matching address family of the client request
   is present in the host record.

dnsmasq 2.81 will also use a host record where a only an address
not matching the address family of the client request is present.

The same issue is also backported to the dnsmasq-2.79-11.el8.x86_64
which is e.g. in RHEL 8.2 and Centos 8.

dnsmasq version 2.81 also adds support for using tag's on host
records. When a dhcpv6 request is received, dnsmasq automatically
sets the tag 'dhcpv6'.

This change adds a runtime check, testing for dnsmasq host entry
tag support. And adds 'tag:dhcpv6' to all IPv6 host records when
dnsmasq supports this.

Adding the tag makes dnsmasq prefer the tagged host for dhcpv6
requests, i.e it's a workaround fix for the regression issue.

[1] http://lists.thekelleys.org.uk/pipermail/dnsmasq-discuss/2020q2/014051.html

Closes-Bug: #1876094
Change-Id: Ie654c84137914226bdc3e31e16219345c2efaac9"
ba16d2fc742bbb9c80f1aec2cbb6de8033d051e5,2020-05-07 09:55:36-04:00,"[ovn] devstack needs to support openflow15

OVN has been changed to use Openflow15 [1].

Instead of creating br-int and setting the openflow version
via ovn_agent script, it is better to delegate the bridge
creation to the ovn-controller. Thus, having ovn-controller
creating br-int addresses the potential version mismatch.

[1]: https://github.com/ovn-org/ovn/commit/6ec0b82038052866533f12823fe410308b3e457a

Change-Id: I62e4e98556c71312a7cf85b6246ddbecbc59a039
Related-Bug: #1871239
Closes-Bug: #1877195"
102c442bcfa39074787e3292818880ecf238ac61,2020-05-07 18:10:20-04:00,"port_forwarding: extend support for OVN usage

This commit adds possibility to configure fip port_forwarding
service plugin and l3 extension with devstack plugin for OVN.

Since OVN uses API workers, this change also introduces the
callbacks necessary in pf_plugin, so events related to port
forwarding are sent using neutron_lib callbacks registry.

Related-Bug: #1877447
Change-Id: I8124fac13bf4d802d232e8b3976e6a2cebc72106"
11838a2bc50caa40e776bce211f5f2d1d16a14af,2020-05-08 10:19:07-05:00,"Workaround for TCP checksum issue with ovs-dpdk and  veth pair

The need for this change stems from following issues:
1) When ovs_use_veth = False with ovs-dpdk issue with ovs
was observed - after vswitch restart interface is not comming up.
Meaning ovs-dpdk uses ovs internal ports and it is not able to bring
them up on restart.
2) When ovs_use_veth = True and ovs-dpkd is used, packets sent with
incorrect checksum due to the fact that ovs-dpdk does not do checksum
calculations for veth interface.

This commit allows to use second option and resolve checksum issue by
disabling checksum offload.

Closes-Bug: #1832021
Related-Bug: #1831935

Change-Id: Iecce8d2c6c2c46718cc1020c6e8f914cd4560e4b"
8cfe41fa6bea0901e4b2d41cc47d745195e9953b,2020-05-11 11:29:30+00:00,"Add ""qos_policy_id"" field to ""FloatingIP"" OVO

This new synthetic field is linked to a ""QosPolicyFloatingIPBinding""
register. This binding register will bind a QoS policy and a
floating IP.

Now is possible to provide this field in the create/update input
parameters. If provided, the ""FloatingIP"" OVO will create/delete the
""QosPolicyFloatingIPBinding"" register.

The OVO takes this parameter from the DB object. When the DB object
is retrieved, the QoS policy binding register is retrieved too due
to a backref link in the ""QosFIPPolicyBinding"" DB model to the
""FloatingIP"" DB model.

Change-Id: Ideb042a71336b110bbe0f9e81ed8e0c21434fc42
Closes-Bug: #1877404
Related-Bug: #1877408"
0ba08d7eb488f1b7bd66448514f468c30f402a15,2020-05-12 17:51:26+00:00,"Skip OVS module compilation for kernels newer than 5.5

For now OVS doesn't support compilation of kernel module
for kernels newer than 5.5 [1].
Recently Fedora 31 upgraded the kernel to 5.6.8 and that is
why the periodic jobs started to fail [2].
By default we enabled OVS module compilation because Ubuntu
Bionic one doesn't have support for Openflow Meter actions.

In case flag OVN_BUILD_MODULES is set to True and kernel is
newer than 5.5 lets skip the module compilation with proper log.

Closes-Bug: #1877377

[1] https://zuul.openstack.org/builds?job_name=neutron-ovn-tempest-ovs-master-fedora
[2] https://github.com/openvswitch/ovs/commit/59e994426645358a271a0c9f485e9defafffd474

Change-Id: I63b2f198468c9e30af8284c8033fa31f2af2518a"
52e3fee5ef5217eed5efcb2289b6171b5d26fef3,2020-05-12 16:58:41-04:00,"Switch to hacking 3.0.1

In hacking 2.0 or later, local-check-factory was removed as it is not
compatible with flake8 3.x and it is advised to use flake8's local
plugins [1]. neutron-lib provided a factory to register common hacking
rules, but it no longer works with hacking 2, so we need to define rules
defined in neutron-lib as flake8 local check plugin [2] explicitly.
This needs to be done in each neutron related project, so it is the
downside of the migration to hacking 2.x (I explored a way to continue
to use the factory but failed to find a good way to achieve this) but
I believe it is good to migrate the newer libraries.

* flake8ext decorator in neutron/hacking/checks.py is also replaced with
  hacking.core.flake8ext to avoid the copy-and-paste code.
* neutron-lib dependency is updated as neutron-lib 2.3 added hacking 3 support.
* Python modules related to coding style checks (listed in blacklist.txt in
  openstack/requirements repo) are dropped from lower-constraints.txt
  as they are not actually used in tests (other than pep8).
* HackingDocTestCase is now converted into normal test cases.
  HackingDocTestCase depends on the internal of hacking and pycodestyle
  so it looks better to use normal style of writing tests.

[1] https://docs.openstack.org/releasenotes/hacking/unreleased.html#relnotes-2-0-0
[2] https://flake8.pycqa.org/en/3.7.0/user/configuration.html#using-local-plugins

Change-Id: I92cf50a84bb587a0649a7cffee15cce4ce37d086"
9ae865a5b5b6cf56307b01d5e64a99a0b0ffe078,2020-05-13 02:30:01+00:00,"Add Rocky milestone tag for alembic migration revisions

Add lacking alembic migration revisions for Rocky.

Change-Id: I287d7aea1ffa1a380ba627eb1c9addd794a8059c
Closes-Bug: #1878314"
4d5b9a62b97dfa7245efc92cadda4e4c7d0e406a,2020-05-13 09:45:07+02:00,"ovn-migration: Stop ml2/ovs agents before installing OVN resources

TripleO used to uninstall services if the resources were set to None. It
was not intentional and TripleO no longer does that. This patch manually
removes dhcp, l3, metadata and ovs agents from controller and compute
nodes, including its systemd service files.

Closes-Bug: #1878358
Change-Id: I140ae0c476bf9e19b4429ce388ddc7cc3f4cd421
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
1f018514d71daab6ff3d4bd508318ce8ed8d1045,2020-05-13 16:44:15+00:00,"Optimize QoS bound objects queries

Optimize the following methods:
- get_bound_networks
- get_bound_ports
- get_bound_floatingips
- get_bound_routers

Those methods, using the ""QosPolicy_XXXX_Binding"" OVO interface, were
retrieving all objects with a certain policy ID and then returning
only the ID of the _XXXX_ object. That means to retrieve a full
register list from the DB, then converted them to OVOs and extract
only the _XXXX_ ID.

This patch retrieves only the _XXXX_ object IDs from the DB and
returns the list, without the OVO conversion.

Change-Id: I891eba93b3b4abaec8ada13a032b5440cbb0548d
Closes-Bug: #1877560"
63c45b37666efc7fb33fc154fa828050b3dc7945,2020-05-13 23:10:41+02:00,"Ensure that stale flows are cleaned from phys_bridges

In case when neutron-ovs-agent will notice that any of physical
bridges was ""re-created"", we should also ensure that stale Open
Flow rules (with old cookie id) are cleaned.
This patch is doing exactly that.

Change-Id: I7c7c8a4c371d6f4afdaab51ed50950e2b20db30f
Related-Bug: #1864822"
740ab628f4d060f7caa33d9c3dc1e189255468c1,2020-05-14 23:55:59+02:00,"Remove usage of the ""firewall_driver"" in the neutron server

Back in Newton, patch [1] added to the agents possibility to report in
the heartbeat messages if hybrid plug of the ports is required or not.
Usage of ""firewall_driver"" option by mechanism drivers (so on the
server's side) was kept just for backward compatibility.
But as we are now about 4 years from the [1] I think it should be safe
to do small cleaning, remove usage of this option in the neutron server
and not confuse users where this config option has to be set and why.

[1] https://review.opendev.org/#/c/311814/

Change-Id: I2ccc4c8784c64858acaa3c3431cf9a3d13e5e154"
ccb0cddd4af6ceb4ed4e8a2612d6c705d16a8e64,2020-05-14 22:33:50+00:00,"Fix mock.patch.stopall issue with ovsdbapp

After I876919dfc1fa0ae36bd99e3d760e38d207ee6ef3, two test classes
that inherit from both neutron's oslotest-based base classes and
ovsdbapp's unittest-based base class would fail due to
mock.patch.stopall being called twice. This appears to be because
of some special handling in oslotest addCleanup that checks a
private _cleanups variable before adding a cleanup to stopall.
Changing the order of the imports so that neutron can register its
cleanups first seems to fix the issue.

Closes-Bug: #1878708
Change-Id: I5b3812a9765a37b3e66d6c8ca0cb42ee1b7a2b9a"
21405378f03d570834adf395c751f69075f128b2,2020-05-19 14:11:05+00:00,"Fix neutron-ovn-db-sync-util issues

Two places needed to pass the _plugin_context like the mech driver
already does since PortContext has no session. There was also a
place where a port object was passed instead of a port id.

Closes-Bug: #1879502
Change-Id: I19ee7b0cf4f8ab187e0a9025eece1ad3525e58e4"
30d573d5abeb4a5251d08dc5384f5c0ff372eff8,2020-05-20 00:32:49+00:00,"Allow usage of legacy 3rd-party interface drivers

In the patch [1] we changed definition of the abstract method
""plug"" in the LinuxInterfaceDriver class.
That broke e.g. 3rd-party drivers which still don't accept this
new parameter called ""link_up"" in the plug_new method.

So this patch fixes this to make such legacy drivers to be still working
with the new base interface driver class.

This commit also marks such definition of the plug_new method as
deprecated. Possibility of using it without accepting link_up parameter
will be removed in the ""W"" release of the OpenStack.

[1] https://review.opendev.org/#/c/707406/

Change-Id: Icd555987a1a57ca0b31fa7e4e830583d6c69c861
Closes-Bug: #1879307"
162c5572df9a60ba257e4f97db610f6805e43ab1,2020-05-20 16:04:21+00:00,"Fix broken unit tests related to ovsdbapp indexing

The periodic job running ovsdbapp master started failing after the
ovsdbapp custom indexing patch merged. There were just some things
that needed to be mocked out.

Closes-Bug: #1879717
Change-Id: I37d4c655662dd9d55b6096f2dc4fc861894706d2"
2d1cd99311844457a88f9b0581d3dcc0ecac9d86,2020-05-21 12:32:24+02:00,"[OVN][DOC] Update path to L3RouterPlugin

The path was old pointing not existing networking-ovn path.

Fixed also first paragraph about OVS/OVN installation.

Change-Id: Iee77443c0ac8cb83d4e380c53db8405eca642b2b
Closes-Bug: #1879747"
f5c391077139b9ca61349b59e1e5270b42125cd2,2020-05-21 15:18:39+00:00,"ovn: Override clean_hash_ring for sync util

ML2 OVN Mechanism driver wipes all the nodes from ovn_hash_ring table on
initialization. The DB sync untility inherits from the mechanism driver
calling the cleanup whenever sync util is executed. This leads to nodes
being deleted while neutron-server is typically running, causing serious
issues to neutron-server until it is restarted.

This patch overrides the clean method to no-op.

Change-Id: I5ea8278c0387009ff429572662d64e7664f493e7
Closes-Bug: #1879950
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
e748e01656e6d2db1510d85e4c25e21ff394c971,2020-05-25 10:32:07+02:00,"[Fullstack] Mark security groups test as unstable

It's still failing from time to time and we don't know the root
cause of that failure. So lets mark it as unstable for now until we
will finally find out what's going on in this test and until we will
finally fix it.

Change-Id: I2b6b50fb14856997d886daed5cf7bb4898d57130
Related-bug: #1742401"
7f40e626d6de5ec895343453b032b747c02e59f5,2020-05-25 09:10:41+00:00,"Delete segment RPs when network is deleted

When a network is deleted, only one Placement call per segment
is done to remove the associated (if existing) resource provider.

Before this patch, each time a subnet was deleted, the segment
resource provider was updated. When no subnets were present in the
related segment, the associated resource provider was deleted.

This optimization improves the network deletion time (see Launchpad
bug). E.g.: a network with two segments and ten subnets, the Neutron
server processing time dropped from 8.2 seconds to 4.4 seconds (note
that the poor performance was due to the modest testing environment).

Along with the segment RP optimization during the network deletion,
this patch also skips the router subnet update. Because all subnets
in the network are going to be deleted, there is no need to update
them during the network deletion process.

Change-Id: Ifd50027911a9ca3508e80e0de9a6cc45b67006cf
Closes-Bug: #1878916"
f6010f60429347485464107b3a838065f2f7ff7d,2020-05-25 11:23:02+01:00,"[OVN] Enhance port's extra DHCP options support

Prior to this patch OVN did not validate any extra DHCP option passed
to the port leading to confusion because the user of the API could just
input any value and OVN would accept it (returning 200) but ignoring the
option internally.

This patch now adds such validations on port creation and update.

This patch also sync with the latest supported DHCP options from OVN and
create a map between the different names and option codes to their OVN
counterpart.

Closes-bug: #1874282
Change-Id: I99799e54e941cdd8da2614feecad1ef6299703fc
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
bd5c98e25b40ed4be749fd0880027407c4468d1e,2020-05-26 10:29:45+00:00,"Mock command execution in ""test_iptables.TestHelper"" UTs

Change-Id: I112e0a1cb45259c5af3bcbf09ae9f515f90723d0
Closes-Bug: #1880676"
91f0bf3c8511bf3b0cc63746f767d8d4dce601bd,2020-05-26 13:14:27+02:00,"[DVR] Reconfigure re-created physical bridges for dvr routers

In case when physical bridge is removed and created again it
is initialized by neutron-ovs-agent.
But if agent has enabled distributed routing, dvr related
flows wasn't configured again and that lead to connectivity issues
in case of DVR routers.

This patch fixes it by adding configuration of dvr related flows
if distributed routing is enabled in agent's configuration.

It also adds reset list of phys_brs in dvr_agent. Without that there
were different objects used in ovs agent and dvr_agent classes thus
e.g. 2 various cookie ids were set on flows in physical bridge.
This was also the same issue in case when openvswitch was restarted and
all bridges were reconfigured.
Now in such case there is correctly new cookie_id configured for all
flows.

Change-Id: I710f00f0f542bcf7fa2fc60800797b90f9f77e14
Closes-Bug: #1864822"
45482e300aab781064281b3e06a17ae488831151,2020-05-26 13:16:08+02:00,"Don't check if any bridges were recrected when OVS was restarted

In case when openvswitch was restarted, full sync of all bridges will
be always triggered by neutron-ovs-agent so there is no need to check
in same rpc_loop iteration if bridges were recreated.

Change-Id: I3cc1f1b7dc480d54a7cee369e4638f9fd597c759
Related-bug: #1864822"
2a1694445315d1a75c58dd8ccf8c9b80abb3b720,2020-05-26 16:00:11+00:00,"Mock command execution in ""test_hybrid_plug_flag_based_on_firewall"" UT

Change-Id: Ibafbacb7a1471c06b7456878f530e92419447123
Related-Bug: #1880676"
c5d8fd6329e405d1d584f4fedd7d0ede7da278da,2020-05-27 16:58:02+00:00,"Use pyroute2 for SRIOV VF commands

Recent changes in some versions of iproute2 CLI output (v4.18),
have invalidated the regular expression used to parse the
""ip link"" output.

To solve this problem and avoid future ones, pyroute2 is used to
retrieve the virtual functions information and set the VF attributes
(spoofcheck, min_tx_rate, max_tx_rate and link_state).

pyroute2 extended the ""ip link"" support to retrieve this information,
adding ""ext_mask=1"" in the get command. If no virtual functions are
present in this particular network interface, the added method,
""get_link_vfs"",  will return an empty list.

The set commands can return a ""InterfaceOperationNotSupported"" in
case the operation is not supported. For min_tx_rate, if the driver
does not support to set a minimum bandwidth, an ""InvalidArgument""
(from a pyroute2.NetlinkError(22)) exception will be raised.

Change-Id: I680da4f64bd114f1caecaaeedbf8a4b1915a0849
Closes-Bug: #1878042"
a32464464da7c398a6e4b31f354d0361afd77ed0,2020-05-28 10:47:35+00:00,"[OVN] Blacklist test_port_security_macspoofing_port test

The test_port_security_macspoofing_port should be blacklisted
back, because of the change [1] that switched OVN_BRANCH/OVS_BRANCH
configuration to the latest stable releases and the
fix [2] that solved [3] is not yet present in latest release.

In addition. We will have discussion during next PTG around if we
should/could run only jobs with OVN release or we can enable also
master jobs. Then we need to explicitely define from which branch
given job runs to prevent such situations like this one in future.

[1] https://review.opendev.org/#/c/726168/
[2] https://patchwork.ozlabs.org/project/openvswitch/patch/20200319122641.473776-1-numans@ovn.org/
[3] https://bugs.launchpad.net/tempest/+bug/1728886

Related-Bug: #1728886

Change-Id: Ic8952e9ffb031ff4becb6ee2f6f5325a55e19dfe"
0402337c151d6db3b6e04569df3735e0dc44125f,2020-05-29 19:27:29+00:00,"Fix ssh to nodes during ML2/OVS to ML2/OVN migration

Migration ansible playbooks are not able to connect to overcloud
nodes using ssh due to bad settings in the generated ansible
inventory file. Ctlplane subnet ip addresses should be used by
ansible in order to be able to establish connection successfully.

Closes-bug: #1881029
Change-Id: I1588b88279ba1e25706cc74f4a888901e5aadcb6"
edfe7daf047cbae3bc9d6a0a37ace091f6375e51,2020-06-01 15:25:20+00:00,"No rpc_response_max_timeout in LB-agent

Adds support for rpc_response_max_timeout in LB-agent.
Change-Id: I1c5dcd1642019cb8c327722819f753b2b5b7137c
Closes-Bug: #1880934"
1a3811448d0a108e8e16bb32810e4f59db226a4b,2020-06-02 15:26:15-04:00,"Bump oslo.log to version 4.1.2

Versions of oslo.log >= 4.1.2 require a second argument when
initializing the OSJournalHandler class. While I've started
a review to fix that regression [0], bump oslo.log to a later
version that requires this new flag and pass it to fix the
gate.

Also had to blacklist the OVN tempest IPv6 hotplug test
since it is failing too much to pass the check jobs.

[0] https://review.opendev.org/732457

Change-Id: Ic9bbb43aa832ad6cc45d57328b40afe4468ddfca
Related-bug: #1871840
Related-bug: #1881558"
d57735ae0f01a4c0ae8c81dbdda62e07314face1,2020-06-02 19:28:25+00:00,"Fix Traceback when running neutron-ipset-cleanup tool

Some of the tools dependencies expect the AGENT group to be
present in the configuration, and at present it is not initialized,
this patch addresses that.

Change-Id: I1a50e77749aaecc3966c9d238f91a1968ed454ef
Signed-off-by: Frode Nordahl <frode.nordahl@canonical.com>
Closes-Bug: #1881771"
178227c8b6636433fcdab4dfd342468335b76aa6,2020-06-03 10:50:33+00:00,"Make NeutronOvsdbIdl singleton

""NeutronOvsdbIdl"" should be a singleton class; only one instance
should be shared everywhere is called. Currently the connection
and the ""OvsIdlMonitor"" instances are global; those instances are
used to declare the ""NeutronOvsdbIdl"" instance.

As commented in the related bug, this singleton will ensure that
the OvsIdl indexes are created just once.

Change-Id: I639cf673a983b7b1be810495d8a8c2d89919a9b6
Related-Bug: #1881424"
e6023ecb482ee0dc7e29739b94e009c275cc24a1,2020-06-03 11:00:18+00:00,"[OVN] Don't set virtual port type on ports with similar addresses

Because of broken check why one port has similar address to the other
one, the first one by mistake could be set as virtual.
Example:
 port_1: 10.11.1.100
 port_2: 10.11.1.10

On create of port_2 it is set as 'virtual', but shouldn't.

This patch fixes that bug by using common function
utils.get_ovn_port_addresses().

Change-Id: Ia4b986146c77edf0616015380359e37233df80fc
Closes-Bug: #1881759"
d8eac6fa50f237b94739522bc527a7a5ca93c328,2020-06-03 16:29:22+00:00,"Fix iptables rules comments

In case when value of port['device'] don't starts with ""tap_"",
in comments to the conntrack or stateless rules in the iptables there
should be full port['device'] written. It will make things easier to
debug for the operators e.g. when using iptables_hybrid driver.

Change-Id: I427321fbb87865931b2b28abf7687d37e8d01a53
Closes-bug: #1880691"
dc655cabcb9c21637029f864887901a3d85ce0f1,2020-06-03 17:15:31+00:00,"Remove OVO unneeded compatibility conversions

OVOs and commit introducing the removed conversion:
- PortDNS:
  * https://review.opendev.org/#/c/457035/: included in Pike
- Port:
  * https://review.opendev.org/#/c/465423/: included in Pike
- Trunk:
  * https://review.opendev.org/#/c/382659/: included in Ocata
- QosRuleType:
  * https://review.opendev.org/#/c/475260/: included in Pike

Change-Id: I9353fa1b660212f244abf74921ebc90f0a2333b7
Related-Bug: #1828437"
559ae06bdf1f11ca861234a92434771a26ec27d8,2020-06-04 14:11:15+02:00,"[OVN] Override notify_nova config in neutron-ovn-db-sync-util

If either ``notify_nova_on_port_status_changes`` or
``notify_nova_on_port_data_changes`` is set in the neutron
configuration provided to the ``neutron-ovn-db-sync-util`` tool it
will stop with a Traceback.

We are already overriding other parts of the ML2 Notification code
as we do not want it executing while syncing, so let's override
these configuration options if set as well.

Change-Id: I62765a14d376664ccc2ca3009bb9e970c9f25c03
Closes-Bug: #1882020"
795aa6b9fa792ec31c211cb690cae905c067dcf5,2020-06-05 10:04:52+00:00,"Limit ml2_vlan_allocations.vlan_id value in DB backend

Limit ""ml2_vlan_allocations.vlan_id"" values stored in the DB by
adding a check constraint in the DB engine. This check will
verify that vlan_id is in the interval [1, 4094].

Change-Id: Ie6453cb7a2ef0c43baf540c49a03079f4c8d3818
Closes-Bug: #1870400"
4be0baa8cd1e994973adf1d53a9929c855a5d918,2020-06-05 14:45:55-04:00,"Bump oslo.log to version 4.2.1

There were a couple of versions of oslo.log that were
not backwards-compatible. Now that a fixed version was
released, bump lower-constraints to require it and
remove the temporary workaround.

Change-Id: If38105ceaa48a0520ae8243982b736d0bc99ec3a
Related-bug: #1871840"
cd721a7dcb9073eca2671ffdc9dc7ed9819163ed,2020-06-08 12:13:22+00:00,"Make DVR router support FLAT network for ovs-agent

Currently codes only support assocate tunnel network and vlan network
to DVR router. This patch add codes that make the flat network assocate
to DVR router and make it work fine.

The patch also remove two unused constant entries: 'FLAT_VLAN_ID' and
'LOCAL_VLAN_ID'

Change-Id: I7d792ce288d96548298f169748565266a130bd86
Closes-Bug: #1876092"
eb46081150a4ca4e2007cabfcadd134cbc85435e,2020-06-08 18:58:47-04:00,"port_forwarding: extend support for OVN usage (cont.)

This is a follow up from commit 102c442bcfa39074787e3292818880ecf238ac61

The call to resources_rpc.ResourcesPushRpcApi() will fail in situations
where RPC is not available. That is the case for neutron_ovn_db_sync_util.

The changes here will only set push_api if any of the configured service
plugins need it. This is a behavior similar to what is done for the QOS
plugin.

Related-Bug: #1877447
Change-Id: I3f2e18fabf4556cd708c6e544b5aaf37f72b44df"
e332054d63cfc6a2f8f65b1b9de192ae0df9ebb3,2020-06-09 09:11:31+00:00,"Migrate ""dhcp_release"" to oslo.privsep

Story: #2007686
Task: #39976
Change-Id: I3414d06b9c6dfe549e79aab5fbe52c8f3ffd63f7"
998b22b38353c6296529e7abf9bb1184aa838868,2020-06-09 13:48:41+00:00,"Implement ""RouterInfo.update_routing_table"" with Pyroute2

Change-Id: I715172e6bd64fcdd34ce10956fd4fdc20887a70a
Related-Bug: #1492714"
96f3b37b4322a817acc3550820a40c22f205d996,2020-06-10 16:43:39+00:00,"Make neutron functional uwsgi jobs usable by other projects.

neutron-fullstack-with-uwsgi and neutron-functional-with-uwsgi
jobs are run in devstack gate[1] also. On devstack side these jobs
are broken when migrated to zuulv3 and start using neutron defined
tox env. neutron gate is no issue as job find the tox env in neutron's
tox.ini but devstack does not.

We need to define the working dir to neutron so that any where
they are run they always look for the neutron's tox.ini for used
tox env.

Failure: https://review.opendev.org/#/c/577779/

[1] https://opendev.org/openstack/devstack/src/commit/c3b58f5335fb3545bf49b5d542ef9ed702de43c8/.zuul.yaml#L717

Change-Id: I0cadebb45864a83dfba7b54c9f161d11611164db"
26f6b90930509314cece4c237e4280b60bae278f,2020-06-15 20:27:46+01:00,"[OVN] OVN driver to adapt to enable_distributed_floating_ip changes

Prior to this patch, if the [ovn]/enable_distributed_floating_ip
configuration option changed in an existing environment the OVN
driver wouldn't adapt to it requiring administrators to clear up the
""external_mac"" column from the NAT table manually for the existing
floating ips.

With this patch, OVN will automatically correct existing NAT entries for
floating ips whenever this option changes.

To make the code simpler when handling the port up/down event this patch
always set the logical_port and the neutron:fip_external_mac key in the
external_ids column of the NAT entry when creating the floating ip.

Note that we are not using the maintenance task for this either, we are
re-using the event that set/unset the ""external_mac"" column for this
because, whenenver the service is restarted (after the configuration is
changed, we need to restart for it to take effect) the IDL will re-trigger
those events.

Closes-Bug: #1883559
Change-Id: I6a85fdde2558d781bf2853c5d11c5c964bbab81f
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
954f2f28da5fd1248a9dbc4dcc2d7311bcbffb51,2020-06-16 17:39:58+00:00,"Configure privsep in SR-IOV agent

With the introduction in [1] of commands executed under a privsep
context, privsep should be initialized first.

[1]https://review.opendev.org/#/q/6f7b88d0808bee36b9d089ce8d3c0f98ae0b2dea

Change-Id: Ifdb8ad910ff6ffb31668ebb1e97d885ee924b470
Closes-Bug: #1883757"
8c3441e856407292fa0f0ae2afdbf6eb3a076cb6,2020-06-17 16:07:33+00:00,"Change service_plugins documentation in QoS to steevedore entries

Change the service_plugin references in QoS admin document to use
only the steevedore names, to be consistent throughout the document.

Change-Id: Iebb28e0a68ce580d03851b083add70c79204da1c
Closes-Bug: #1882072"
90212b12cdf62e92d811997ebba699cab431d696,2020-06-18 20:50:24+08:00,"Do not block connection between br-int and br-phys on startup

Block traffic between br-int and br-physical is over kill
and will at least

1. interrupt vlan flow during startup, and is particularly
so if dvr enabled
2. if let's rabbitmq is not stable, it is possible data plane
will be affected and vlan will never work.

Using openstack on k8s particularly amplifies the problem
because pod could be killed pretty easily by liveness
probes.

Change-Id: I51050c600ba7090fea71213687d94340bac0674a
Closes-Bug: #1869808"
8eb4955bb62ec02b7a5cb725067c6193c37f9b0e,2020-06-18 17:50:04+00:00,"Fixes dnsmasq host file parsing with ""addr6_list""

This patch fixes:
- The IPv6 tag added in the ""host"" file if is supported in
  dnsmasq. That shifts all other parameters in the register.
- IPv6 registers can have more than one IP address; in this
  case, the method ""_read_hosts_file_leases"" should return a
  tuple per IP address.

Change-Id: I4d0bc1eb9448366d8f1b2dacc9c5c2e4e6958253
Closes-Bug: #1884105"
d0860588957730b97fe3ebbefa77c6421da45adc,2020-06-19 15:57:28+02:00,"ovn: Use newer OVS

OVS tag v2.13.0 is not compatible with current used kernel on upstream
Bionic Ubuntu kernel 4.15.0. This patch sticks to commit hash to unblock
the gate. We can either change to newer 2.13 tag once released or better
stop compiling OVS and use one packaged by Ubuntu.

Run functional/fullstack tests with selected OVN and OVS versions

Previously for functional tests OVS version was hardcoded - v2.12.0,
and OVN was installed from OVS repository.

After we merged OVN driver to Neutron tree we run both
Neutron/OVS and Neutron/OVN functional tests in one job.

This patch adds possibility to specify from which tag/branch OVS and OVN
should be checkout.

Change-Id: I83688031951b97bfe64f3aaa761ad7afc1d5ea55
Closes-Bug: #1883601
Closes-Bug: #1878160"
2592fdb5844e14c352824081511d728345d40641,2020-06-19 14:04:23+00:00,"Move ""get_cdll"" to a common place in privileged.agent.linux

That method could be used outside the library where currently is
implemented. This patch relocates it in a common place for all
privileged.agent.linux libraries.

Change-Id: I5a6124eca3b57ee36479c106b62d101f538c12eb
Story: #2007686
Task: #40047"
0c1818fbb02b5ff6a9a5157d4bbb58314242c806,2020-06-19 14:59:11+00:00,"Migrate ""netstat"" to oslo.privsep

Change-Id: If9e4c1513553c4bd10fd3b91c28c4d3f806ed816
Story: #2007686
Task: #40047"
e09d4d6dd0f6570400d28531e56d2166141357cb,2020-06-19 21:03:15+00:00,"[OVN] Avoid unnecessary DB writes during agent liveness check

As stated in the bug description, there are many writes of the
agent liveness external_ids into the Chassis table. There was a
protection to avoid bumping nb_cfg too frequently.

The same protection is reused to avoid writing into the Chassis
external_ids.

This patch reduces the number of transactions to the SB database
and, therefore, the recomputations that it causes to ovn-controller
in all nodes.

Change-Id: I5db90fde8e7394772ec23c6384c711096c246621
Closes-Bug: #1883554
Signed-off-by: Daniel Alvarez <dalvarez@redhat.com>"
5fdfd4cbfc56425c56b4a5702d92a97da56ab6e8,2020-06-20 03:09:12+00:00,"[L3] Check agent gateway port robustly

In patch [1] it introduced a binding of DB uniq constraint for L3
agent gateway. In some extreme case the DvrFipGatewayPortAgentBinding
is in DB while the gateway port not. The current code path only checks
the binding existence which will pass a ""None"" port to the following
code path that results an AttributeError. This patch adds a simple check
for that gateway port, if it is not created, new one.

[1] https://review.opendev.org/#/c/702547/

Closes-Bug: #1883089
Change-Id: Ia90f2ee435b0a3476dbea028d3200cefe11e35e4"
94d6e38fa08f8a52b6f18077c2a05a05b89b42b5,2020-06-20 19:38:30+00:00,"Fix the wrong value for QoS rate conversion to bytes/s

The rate value is converted to bytes per second before being
sent to Pyroute2, but it used the wrong value for the calculations.
This resulted in incorrect rates.
It should be multiplied by 1000 (kbit), not 1024 (Kibit).
The same applies to the burst value (kb).

Change-Id: I70cb1fe651a50b2f6495d7a365a6beb2ba111c6d
Closes-Bug: #1884273"
7019c5cf50bc4ad97b302220664a26efaf81a7fd,2020-06-22 09:20:15+00:00,"Make _ensure_default_security_group method atomic

Method _ensure_default_security_group wasn't atomic as it first tries to get
default SG and if that not exists in DB, it tries to create it.

It may happend, like e.g. in Calico plugin that between
get_default_sg_id method and create_security_group method, this default
SG will be created by other neutron worker. And in such case there will
be Duplicate entry exception raised.

So this patch is adding handling of such exception.

Change-Id: I515c310f221e7d9ae3be59a26260538d1bc591c2
Closes-Bug: #1883730"
e2d1c2869a2c8883157d29cf47d7a5236e63dbc1,2020-06-22 09:47:51+00:00,"[OVS] Make QoS OVS agent deletion operations more resilient

When a Port is deleted, the QoS extension will reset any rule (QoS
and Queue registers) applied on this port or will reset the
related Interface policing parameters.

If the Port and the related Interface are deleted during the QoS
extension operation, those commands will fail. This patch makes those
operations more resiliant by not checking the errors when writing on
the Port or the Interface register.

Change-Id: I2cc4cdf5be25fab6adbc64acabb3fffebb693fa6
Closes-Bug: #1884512"
ed56429548dd8d08de10a7d451680a43e34c865c,2020-06-23 13:38:25+00:00,"DhcpFilter should always return a valid index if ""force_scheduling""

WHen retrieving a vacant DHCP agent binding index, if
""force_scheduling"" is set, the method should return a valid binding
index. If the existing binding indexes are sequentially aligned,
the method will return a new one on top; if there is a gap in the
binding indexes list, the first free index will be returned.

Change-Id: Ib4cbeb7c9f0c1e959ad53570320610925ff3d88f
Closes-Bug: #1883513"
d669dff1dcf0fbc2dc7ea0d2e0c88f244a1add4b,2020-06-24 09:15:01+01:00,"[OVN] Add support for router availability zones

This patch is adding support for the router_availability_zone extension
for Neutron.

The OVN driver will now read from the router's availability_zone_hints
field and schedule the router ports onto OVN chassis belonging to those
AZs.

Since the OVN driver does not rely on the L3 agent, this patch does not
re-use the configuration option for the agent to configure the
availability zone that a Chassis belongs to (even because there's no
configuration file in nodes such as networker nodes). Instead, this
patch reuses the ""ovn-cms-options"" field from the local OVSDB to
configure the Chassis. The follow syntax has been used:

$ ovs-vsctl set Open_VSwitch .
external-ids:ovn-cms-options=""enable-chassis-as-gw,availability-zones=az0:az1""

In the example above, the Chassis has been configured to belong to two
AZs: ""az0"" and ""az1"".

This patch also implements listing the availability zones:
$ openstack availability zone list

As well as validating the router's availability zone hints:
$ openstack router create --availability-zone-hint az0
--availability-zone-hint az1 test_router

The above command would fail if there's no ""az0"" and ""az1"" configured in
any OVN chassis.

Documentation for this feature is being written and will be submitted
in a separated patch.

Partial-Bug: #1881095
Change-Id: I4567f3d541d382b6432c1ab3d35276d81ce71d82
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
a42d0d03016a3101d64271ad02d3733102b92f16,2020-06-24 12:00:46+02:00,"Trivial: Change Health-check from filter to app_factory

[1] added healthcheck url to neutron API, but in review it was noted
that the used filter_factory is deprecated and app_factory is the
suggested instead, as Akihiro commented in [1], in [2] filter is marked
for removal.

[1]: https://review.opendev.org/724676
[2]: https://opendev.org/openstack/oslo.middleware/src/branch/master/oslo_middleware/healthcheck/__init__.py#L409

Change-Id: I28c26d3357c21483b7642958564d675cd5feaa31"
1e9a3bffd2cf565568ac479710104cd3a4cdae53,2020-06-24 12:32:14+02:00,"[Fullstack] SG test - first wait until all vms can ping each other

In fullstack security group test, after fake VMs are created there
check if connectivity to some custom port is working fine with port
security disabled.
After that there is called ""block_until_ping"" method for each vms.

This patch changes that to first wait if we can ping vms and later do
netcat tests.
Even if that will not solve problems with failures of this test, we
may know more if the issue is caused by netcat or it's just no
ICMP connectivity between VMs at all.

Change-Id: Ie9e2170c761c9a10f3daa991c3fb77f304bb07e2
Related-Bug: #1742401"
fb44416c05efb5b0d23679c5897b6624689fbf78,2020-06-24 13:09:32+00:00,"Deprecate use_veth_interconnection config option

This was proposed to be deprecated long time ago already.
We have patch ports in Openvswitch to connect bridges together.

Change-Id: Ie343f83a886bb8c366873fd5e076bb7096e1a6ed
Related-bug: #1587296"
f14a1b332d829289e9dff96f94b49491fbde9ec4,2020-06-24 15:06:12+00:00,"[OVN] Add router availability zones documentation

This patch is adding documentation about the router availability zones
feature in the OVN driver.

Change-Id: I6c8267100e1ee82c8b563528467b50b91f7700f6
Related-Bug: #1881095
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
2bb514f2d73a64b6f954990a2ff12f5baa3a97cd,2020-06-24 15:37:23+00:00,"L3 agent scheduler should return a valid index if manual scheduling

When retrieving a vacant L3 agent binding index, if
""is_manual_scheduling"" is set, the method ""get_vacant_binding_index""
should always return a valid binding index. If the existing binding
indexes are sequentially aligned, the method will return a new one
on top; if there is a gap in the binding indexes list, the first
free index will be returned.

Closes-Bug: #1884906

Change-Id: I0a89bca0734d3e735fb357e488f85589e81d709f"
e661a6b6412a7c7f15f28d99db71ff9ad476c98b,2020-06-25 08:49:53+00:00,"[OVN] rename get_port_groups to get_sg_port_groups

OVN's API called get_port_groups is poorly named and has misleading docstring.
It returns only the OVN port groups that map to the security group in Neutron.
Therefore, it should be called get_sg_port_groups.

Closes-Bug: #1883716
Related-Bug: #1881316
Change-Id: Iae3f413dd1c4b0813b05d9bfd593c9e709540370
Signed-off-by: Flavio Fernandes <flaviof@redhat.com>"
58d1d0dbddd3299537f67b0fdee906918fd4bb6f,2020-06-26 09:31:22+02:00,"[OVN] Fix db-sync-util Traceback when port security not enabled

Change-Id: Id1ed2922a908148b2b271bd28cc974ef424530d5
Closes-Bug: #1882061"
72d95d40d467fa43a53a48bbc93f6efb3a43fca6,2020-06-29 08:45:56+00:00,"Provide integer number to arping ""-w"" parameter

Some arping versions only accept an integer number for the
""deadline"" (-w) parameter.

Change-Id: Icf5e2a73b15407419d5c922e236181af85aad0dc
Closes-Bug: #1885169"
e94511cd251299cee84b8b67d404972988ae28d3,2020-06-29 22:07:46-04:00,"Add config option ``http_retries``

This option allows to configure Number of times nova or ironic client
should retry on any failed http call.
Default value for this new option is ""3"".

Change-Id: I795ee7ca729646be0411a1232bf218015c65010f
Closes-Bug: #1883712"
598e0376c6497929a5abc1aa7c7ea1dada5de589,2020-06-30 09:55:53+00:00,"[OVN] Wait for WaitForDataPathBindingCreateEvent event in functional tests

There is a bug in OVN functional tests, where it looks for datapath binding
of just created network.
In rare conditions datapath binding entry could not be in place in time,
because it is a ovn-northd responsibility to create it and we don't lock
this process in neutron api.

Change-Id: Ice115623491ad5b50397a0338f0a7780dc05d24c
Closes-Bug: #1884986"
206ce246768d6fb04b6bd92e189188f6702c74a7,2020-07-01 08:57:33+02:00,"[OVN] Allow use of ovn-sync mechanism driver

The ``neutron-ovn-db-sync-util`` replaces the ``ovn`` mechanism
driver with the ``ovn-sync`` mechanism driver. Subsequently it
makes calls into the OVN L3 service plugin.

At present the OVN L3 service plugin assumes the ``ovn`` mechanism
driver to be present and produces a Traceback when it is not.

This patch fixes that by testing for both of the supported
mechanism drivers.

Change-Id: I1ac685a12f49119f5ef1428cbc504b639d783803
Closes-Bug: #1882202
Signed-off-by: Frode Nordahl <frode.nordahl@canonical.com>"
0ffaac1db23d916c7a73437b13fab56bb9f6b6da,2020-07-01 12:28:25+02:00,"Use the correct value for the DHCP client port number

Version 2.4.0 of neutron-lib has the DHCP port numbers
correct, so start using them.

Also updated other code in linux/dhcp.py to use the
constants as well, instead of re-defining them.

Closes-bug: #1882588

Change-Id: I5dc1d8e7bcc94efd1fab68d980d60e3130d5e5bc"
5ce0595803e72157a82f086b520f454786100872,2020-07-01 12:28:29+02:00,"Set process name for agents

Now that we use setproctitle for neutron-server workers (and
neutron-keepalived-state-change), this has the side effect of changing
the process name for agents, impacting some monitoring systems. More
details in launchpad bug.

This patch fixes it by setting the name with setproctitle to:
agent name (original process name).

Also use the newly introduced name constants to replace existing
hardcoded uses.

Change-Id: I74c3a4d3e9f833752571a75f196560cd45529385
Closes-Bug: #1881297"
8dee0d9a4eb4282b989f2c77a79e55aa89554788,2020-07-01 23:55:06+08:00,"[L3] Delete DvrFipGatewayPortAgentBindings after no gw ports

This is the code behavior aligning for dvr related logical. The
L3 dvr DB will remove all related FIP agent gateway port after there
is no real use of it. But the DvrFipGatewayPortAgentBindings remain,
it will cause the issue of new floating IP failed to bind. This
patch adds the binding deleting action.

Related-bug: #1883089
Change-Id: I62c29e172bc8705dade11d37bb347241ef8ad5f8"
aa6491a9d91bb5aab6bfaba81cf3a82279a551f7,2020-07-02 11:19:16+01:00,"migration: Use ansible-inventory to parse tripleo inventory

Instead of adapting to changes to the tripleo inventory structure let
ansible parse it for us using ansible-inventory.

Change-Id: I34ad0fd5feed65dd1266993a77f6ebc69fecfdfb
Closes-bug: #1884764"
528e0d382e712035355e7b9914828c1b8013dcb2,2020-07-02 13:54:37+01:00,"[OVN] Fix devstack module for OpenSuse

The default path for the OVS tools is /usr/local/bin [0] but, by default
this location is not included in the $PATH for some distros (e.g
OpenSuse).

This patch includes the $OVS_BINDIR to the $PATH variable for deploying
DevStack.

[0]
https://github.com/openvswitch/ovs/blob/0fc38297ba3830631e4a6ad3f9fbbe364e8a3b6b/python/ovs/dirs.py#L23

Change-Id: If7d68212cadb8eb8a12fa3271023c9e86b2d411e
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
24b379ad4d6230d65c1cb044a66937e3e7c11465,2020-07-06 11:01:21+00:00,"Implement ""BridgeDevice"" with Pyroute2

Change-Id: I9e64a4d4b931a132d25434eaeb9dcec6ebf0e6f8
Story: #2007686
Task: #39975"
f43f5dc64f13ac95657bf5abb96abd6fa7ce3079,2020-07-06 11:07:42+00:00,"Use network.external DB model parameter when creating a floating IP

When a floating IP is being created, the network provided should be
external. Instead of quering the DB to find out if the
""externalnetworks"" DB register exists, the ""network"" register is
retrieved and the ""external"" parameter is used (loaded using a
back reference relationship). This will avoid one DB access.

Change-Id: Iead245da166ee2ae691227bb18ae377fe0af4c04
Related-Bug: #1880969"
38286dbd2e35f1f94bf06b5f1cfa9227e5d402c6,2020-07-07 15:27:15+02:00,"[DVR] Related routers should be included if are requested

In case when related dvr router is configured by L3 agent, it is first
added to the tasks queue and then processed as any other router hosted
on the L3 agent.
But if L3 agent will ask neutron server about details of such router,
it wasn't returned back as this router wasn't really scheduled to the
compute node which was asking for it. It was ""only"" related to some
other router scheduled to this compute node. Because of that router's
info wasn't found in reply from the neutron-server and L3 agent was
removing it from the compute node.

Now _get_router_ids_for_agent method from the l3_dvrscheduler_db module
will check router serviceable ports for each dvr router hosted on the
compute node and will then find all routers related to it. Thanks to
that it will return routers which are on the compute node only because
of other related routers scheduled to this host and such router will not
be deleted anymore.

Change-Id: I689d5135b7194475c846731d846ccf6b25b80b4a
Closes-Bug: #1884527"
b52e2e6f16015a63e710d00d9743d07cab18cb3e,2020-07-07 17:45:54+00:00,"Migrate ""ethtool"" to oslo.privsep

Story: #2007686
Task: #40290

Change-Id: I78cc06c635e806b50ca2cc631732d55e430dd2f1"
fb2806f8088dccafd6616a68f5b296914d192150,2020-07-07 22:05:59+00:00,"[OVN] Unify OVN/OVS compilation

There were duplicated methods doing almost the same in terms
of OVS/OVN compilation.

This change:
 * move of OVS related compilation code to devstack/lib/ovs
 * delete of OVS related compilation code from devstack/lib/ovn_agent
 * source unified functions in devstack/lib/ovn_agent from
   devstack/lib/ovs
 * Unify NEUTRON_PATH variable to NEUTRON_DIR

Closes-Bug: #1877377

Change-Id: Ia012a8e116a276a6674f86366c803e0e2d8ff704"
193df8279dbca4af6cb12fe25b79de4c1716f663,2020-07-07 22:06:20+00:00,"[OVN] Stop using neutron_tempest_plugin in OVN singlenode job

In patch [1] we moved neutron_tempest_plugin test executions to
neutron-tempest-plugin repository.
That moves us forward with unifying the way of executing tests
after OVN merge.

[1] https://review.opendev.org/#/c/734832/

Change-Id: Iecca2649fc5e066fabe7f4b4746094506b595f0b"
db6ebd22e1d296fc5e6c687384fe6696f4f14af5,2020-07-07 22:06:39+00:00,"Update cirros image to cirros-0.5.1-x86_64 globally

New cirros with recent fixes for metadata service
has been released. Lets update the image version on gate.

Also stop using different images for OVN. Lets use default
settings from devstack.

First we need to merge [2].

[1] https://github.com/cirros-dev/cirros/pull/11/commits/e40bcd2964aa496a9d03e1aaf95cf7a86938f129
[2] https://review.opendev.org/#/c/711492/

Change-Id: Idc614f9f25188bd1a1e1d5424274acf04ba99328"
a3ecaf6a1078ae1e1edbe72db0fd612e826539ad,2020-07-08 08:56:11-04:00,"Better document router requirements for IPv6

In order for IPv6 to function correctly for instances, a router
must be created and added to a subnet. Update the documentation
to better highlight this as it wasn't clear a router was
required on an isolated subnet such that Router Advertisements
messages would be sent.

Change-Id: I4aca67c98ae77bbc4c130764af5a92515b95443a
Closes-bug: #1886116"
da45bbbff4e10e3d924ac3d85c9f382623708b11,2020-07-08 15:15:08+02:00,"Auto-delete dhcp ports on segment delete

Subnet delete triggers dhcp port deletion but asynchronously,
therefore in the condition described in the bug report we may
get a conflict when deleting the segment too fast after the subnet.

Here we follow the example of how we auto-delete ports in net delete.

Please also find a fullstack test in Related-Change below.

Change-Id: Iba02f5a2211b18c2deb9097daad6be5e7d21faf8
Closes-Bug: #1878632
Related-Change: https://review.opendev.org/728904"
622714b63e08feaba4e81d218541319d2ffada30,2020-07-09 09:37:05+02:00,"Optionally use admin powers when deleting DNS records

This resolves a bug that causes stale records to be kept in place when
an admin deletes a port, server or floating IP that was created in some
project other than the admin project.

Change-Id: I7cbb0e87a7e87f23ccf5d8750835b4785693473a
Closes-Bug: #1875981"
554b5c226750ec75e99ebce241df8b7a700ff016,2020-07-09 09:11:28+00:00,"Support gateway which is not in subnet CIDR in ha_router

There is case that gateway is not in subnet CIDR.
We can set 2 routes as follows to support this:
ip route add 172.16.0.1/32 dev eth0
ip route add default via 172.16.0.1 dev eth0

Closes-bug: #1861674
Change-Id: I69356e926b15de7f1f99540e7cb98671c634e8a9"
7a56b8f3bc5187846ce9f62dd9347ab5ffefcb5c,2020-07-14 09:01:27+00:00,"String to byte conversion should provide the encoding type

Change-Id: Id988cab87d32d5721cd91152df194fbb6fa703c5
Closes-Bug: #1887385"
c1a77ef8b74bb9b5abbc5cb03fb3201383122eb8,2020-07-14 09:26:48+00:00,"Ensure drop flows on br-int at agent startup for DVR too

Commit 90212b12 changed the OVS agent so adding vital drop flows on
br-int (table 0 priority 2) for packets from physical bridges was
deferred until DVR initialization later on. But if br-int has no flows
from a previous run (eg after host reboot), then these packets will hit
the NORMAL flow in table 60. And if there is more than one physical
bridge, then the physical interfaces from the different bridges are now
essentially connected at layer 2 and a network loop is possible in the
time before the flows are added by DVR. Also the DVR code won't add them
until after RPC calls to the server, so a loop is more likely if the
server is not available.

This patch restores adding these flows to when the physical bridges are
first configured. Also updated a comment that was no longer correct and
updated the unit test.

Change-Id: I42c33fefaae6a7bee134779c840f35632823472e
Closes-Bug: #1887148
Related-Bug: #1869808"
61bf68de3185c48363a6c6c9187773368152ffdd,2020-07-14 11:40:05-04:00,"[ovn]: port forwarding -- extend support for OVN usage (cont.)

This is a follow up from commit eb46081150a4ca4e2007cabfcadd134cbc85435e

In order to be used by functional tests -- or anything that does not use
stevedore that can map from ""ovn-router"" value -- pf_plugin also needs to
recognize ""neutron.services.ovn_l3.plugin.OVNL3RouterPlugin"" as a way for
specifying the OVN L3 service plugin.

Change-Id: I4227cc3ceb2a17f40df86dadd71d99198b6b26e9
Related-Bug: #1877447"
e7df43395c60c700c25171d131255ae5ae0b716d,2020-07-16 09:45:36+01:00,"[OVN] DevStack: Make the transition of DevStack module easier

This patch intends to make the transition of the OVN DevStack module
easier by allowing both copies of it to exist at the same time, the one
in Neutron repository and the one in the DevStack repository [0].

1) Make create_public_bridge idempotent

If we call this function more than once the second call and on will fail
with the following error:

2020-07-13 09:12:53.885633 | controller | ++
/opt/stack/neutron/devstack/lib/ovn_agent:create_public_bridge:263 :
sudo ip addr add 172.24.5.1/24 dev br-ex
2020-07-13 09:12:53.894247 | controller | RTNETLINK answers: File exists

During the transiton of moving the OVN DevStack from the Neutron
repository to the DevStack repository [0] this method is being invoked
twice in the ovn job in the DevStack gate because it will be cause as
part of the plugin being enabled and the normal code execution.

This patch makes the method idempotent by calling ""addr replace"" instead
of ""addr add"" to avoid the ""RTNETLINK answers: File exists"" error.

2) Move the setup of the tcpdump on br-ex to ""extra"" to it can start
after the create_public_bridge is called.

[0] https://review.opendev.org/#/c/734621/

Change-Id: I74b05ef245a343c7531fa45aeadb90060b2fd22e
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
de4c10882fc31f91c58f341d1e25cc769edac5af,2020-07-16 15:56:27+00:00,"Set OVS manager command timeout and inactiviy probe

When creating the OVS manager, define the command timeout
(CONF.OVS.ovsdb_timeout) and inactivity probe time
(CONF.OVS.of_inactivity_probe)

NOTE: CONF.OVS.of_inactivity_probe is defined in seconds but the
parameter should be passed to ovs-vsctl in milliseconds [1].

[1]http://www.openvswitch.org/support/dist-docs/ovs-vswitchd.conf.db.5.txt

Depends-On: https://review.opendev.org/#/c/720785

Change-Id: I8ed1fc85c2f78710bf6589ba3deca518471339b8
Closes-Bug: #1868686"
f3797403486ba43100ff9ec8917d38c8723e12b2,2020-07-19 09:28:16-04:00,"port_forwarding: validate args before invoking db update

Add validator to update_floatingip_port_forwarding so codepath does not
attempt performing invalid database operation. With that, operation fails
right away, with a hint on the offending argument(s).

Change-Id: I8284b22c5d691bfd9eadeb8590c3d4b27d261b04
Closes-Bug: #1878299"
0eebd002ccda66dc6d9f9e5a254815109225e299,2020-07-20 08:45:46+00:00,"[OVS][FW] Remote SG IDs left behind when a SG is removed

When any port in the OVS agent is using a security groups (SG) and
this SG is removed, is marked to be deleted. This deletion process
is done in [1].

The SG deletion process consists on removing any reference of this SG
from the firewall and the SG port map. The firewall removes this SG in
[2].

The information of a SG is stored in:
* ConjIPFlowManager.conj_id_map = ConjIdMap(). This class stores the
  conjunction IDS (conj_ids) in a dictionary using the following keys:

    ConjIdMap.id_map[(sg_id, remote_sg_id, direction, ethertype,
      conj_ids)] = conj_id_XXX

* ConjIPFlowManager.conj_ids is a nested dictionary, built in the
  following way:

    self.conj_ids[vlan_tag][(direction, ethertype)][remote_sg_id] = \
      set([conj_id_1, conj_id_2, ...])

This patch stores all conjuntion IDs generated and assigned to the
tuple (sg_id, remote_sg_id, direction, ethertype). When a SG is
removed, the deletion method will look for this SG in the new storage
variable created, ConjIdMap.id_map_group, and will mark all the
conjuntion IDs related to be removed. That will cleanup those rules
left in the OVS matching:
  action=conjunction(conj_id, 1/2)

[1]https://github.com/openstack/neutron/blob/118930f03d31f157f8c7a9e6c57122ecea8982b9/neutron/agent/linux/openvswitch_firewall/firewall.py#L731
[2]https://github.com/openstack/neutron/blob/118930f03d31f157f8c7a9e6c57122ecea8982b9/neutron/agent/linux/openvswitch_firewall/firewall.py#L399

Change-Id: I63e446a30cf10e7bcd34a6f0d6ba1711301efcbe
Related-Bug: #1881157"
bc99e56515537210a35988d3fbdec0669469d0b3,2020-07-20 15:55:46+00:00,"Import ""oslo_config.cfg"" before ""eventlet""

Eventlet will patch the ""os"" library and how it works.

If ""oslo_config.cfg"" is called after ""eventlet"":
- ""oslo_config.cfg"" imports ""stevedore""
- ""stevedore"" imports ""importlib_metadata""
- this library will try to use ""os.open"" library, but patched
- ""eventlet"" imports ""oslo_service""
- ""oslo_service"" imports ""oslo_logging""
- ""oslo_logging"" imports ""oslo_config.cfg"", but at this point,
  the instance cfg.CONF does not exist yet

If ""oslo_config.cfg"" is imported before calling eventlet,
""oslo_logging"" is not called and there is no circular import.

Closes-Bug: #1888213

[1]I8b08f289d446f4775eac1e1a91997fa96f25f641

Change-Id: Idcc04f46b2a01e24dfd56cef8121694439e0339e"
c6574321bae262d2eb8ed2ad12ebf6c420ea5bf8,2020-07-21 21:57:54+02:00,"ovn-migration-mtu: Support providing project/user domain by name

The domain name environment variables `OS_USER_DOMAIN_NAME` and
`OS_PROJECT_DOMAIN_NAME` will be consumed when present.

Otherwise the current behaviour of using *_DOMAIN_ID environment
variables with fall back to the domain with literal ID of
`default` is retained.

Change-Id: I926a160914c16792d7911810cfded41d29fcf282
Closes-Bug: #1887778"
a418d55bc282990847626a2dcb09a8c97604582a,2020-07-21 22:01:42+02:00,"ovn-migration-mtu: Support migrating MTU of GRE networks

Add support for adjusting MTU on GRE networks the same way the
tool already supports adjusting MTU on VXLAN networks.

Change-Id: I3f62b91a21ac7e708fb04154194f45a6ff1b6a76
Closes-Bug: #1887781"
ccbebfeaccf657caf8bcf8d635e3032e4c51c658,2020-07-22 06:14:21+00:00,"[OVN] Fix logic issue while deleting port with QoS

While port has QoS policy configured the policy wasn't deleted
because of logic issue.

Change-Id: I3d7e70a4a110c68a89d6c575abf121cd9b97e439
Closes-Bug: #1886962"
294720fcd28485326e62eb38de5d6ba9683120a2,2020-07-22 07:15:45+00:00,"Fix neutron-ovn-tempest-ovs-master-fedora job

The job should use OVN_BRANCH = master and OVS_BRANCH = master,
because based on its definition, it should use master code.

Change-Id: I0a708ae63d6a2c8933324157a4bbbd229fc43073
Related-Bug: #1877377"
8d1512afb07a9a77958c44f2e7f5d47865c8a475,2020-07-22 07:38:49+00:00,"[OVN] Allow IP allocation with different segments for OVN service ports

OVN creates localport [1] for each network that has metadata
and allocate IP address from subnet within this network that has
DHCP enabled. The traffic from this port will never go outside
the chassis.

While using multiple segments with subnet linked to each segment
OVN needs to create an allocation of IP address for each of those
subnets [2] in order to generate data for OVN NBDB IPv4 DHCP Options.

The change [3] started to validate that condition, while multiple
IP addresses from different segments are tried to be allocated on
one port. We can skip this for OVN Metadata port, because there
is no reason to prevent those kind of allocation for OVN.

[1] http://www.openvswitch.org/support/dist-docs/ovn-architecture.7.html
[2] https://github.com/openstack/neutron/blob/5f42488a9a6a7a3afa55a56f53e2f5ef09365115/neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py#L2279
[3] https://review.opendev.org/#/c/709444/

Change-Id: Ib51cde89ed873f48db4daebc27a0980da9cc0f19
Closes-Bug: 1871608"
8c4b23f8128fa396164293d74837fa3b391e9974,2020-07-24 10:30:03+01:00,"[OVN] Extra DHCP options validation: Log invalid options

By raising an exception when an option is invalid we broke the Ironic +
OVN + Neutron DHCP agent combination that enabled deploying baremetal
machines.

This patch is changing the approach to just log the invalid options
instead of failing the request so that the OVN driver can still be used
with Ironic.

Change-Id: I5e98297acefb62f9a9c1200ccfaac0672eeeed2c
Closes-Bug: #1888649
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
fe440bdd6be190588ec4310ef9630285c0acfec6,2020-07-24 09:38:11+00:00,"[ovn]: gracefully handle logical switch ports with tag set to None

AddLSwitchPortCommand takes kwargs as columns and tag is one of them.
It is possible that tag is provided with the value None and that is
not valid. The proposed change gracefully handles such cases so the
transaction is not aborted.

Change-Id: I0f3cb6f534072e166610b417059acbe89302473a
Closes-Bug: #1888736"
6da99368141e9be53be9d013de9180a527bcbd90,2020-07-27 10:47:16+00:00,"Remove ""vf_management"" and ""vf_extended_management"" checks

Since [1], the SR-IOV commands are executed using Pyroute2. The
support to execute those commands is guaranteed by the requested
minimum version of this library.

[1]https://review.opendev.org/#/c/727811/

Change-Id: I53372524c9cdc75c4b24e1f3c973f8f87a73a8f9
Closes-Bug: #1888920"
597bb0d1877f92f9300d7d337bb9920ac82cab9a,2020-07-27 22:15:05-04:00,"[ovn]: port forwarding -- IDL changes

This is a subset of the changes for implementing the floating IP
port forwarding feature in neutron, using OVN as the backend.

This changeset covers the additions to northbound api needed for
handling load balancer entries created on behalf of port forwarding.

Depends-On: https://review.opendev.org/#/c/729354/
Change-Id: I7d0aa51468dbd2c298395c3dccd8f222e87032d8
Partially-implements: ovn/port_forwarding
Partial-Bug: #1877447"
fc5a8ee1b893a85b7cb3d9fac010c28714e9c50e,2020-07-28 16:09:18+00:00,"Use ""replace"" to remove a section of a string

From ""strip"" documentation:
  Return a copy of the string with leading whitespace removed.
  If chars is given and not None, remove characters in chars instead.

Change-Id: Ia1bf0a98b327b4deaa4ff87da79b70d27314434a
Closes-Bug: #1888828"
2207b885449667a7bc377f427b9123165223dbde,2020-07-28 18:48:52+02:00,"Flush ebtables arp protect chains before deleting them

When a port is removed, the linuxbridge agent cleans up the chains
neutronARP-* and neutronMAC-*, but in some cases this chains still
contains rules and ebtables fails with `CHAIN_USER_DEL failed (Device or
resource busy)`. Flushing the chains before deleting them, fixes that
issue.

Change-Id: Icfcf8c5406cfdc47fabf012e82ed56c345a73af8
Closes-Bug: #1887281"
e2060a2f0b317aadc41443accfbdc5cafae44f44,2020-07-28 13:57:13-04:00,"[ovn]: port forwarding -- documentation

This is a subset of the changes for implementing the floating IP
port forwarding feature in neutron, using OVN as the backend.

This changeset covers the documentation updates for the feature,
as well as a high-level description of how OVN implements it.

Partially-implements: ovn/port_forwarding
Partially-implements: blueprint portforwarding-description
Partial-Bug: #1877447

Change-Id: I2059a011f650dd7070a74dc6107aab2b15ca7104"
17f2ba3afbbbb929155c2ac3fa396784badd981b,2020-07-28 23:17:33+02:00,"[ovn] Use normalized remote prefix IPs in OVN driver

OVN firewall driver can't silently normalize CIRDs given in
the security group rule's ""remote_ip_prefix"".
Because of that if user created rule with not normalized CIDR, it
wasn't applied by the OVN driver.
Now OVN driver will normalize such rules before applying them.

The OVN driver will now also check if SG rules with same normalized
and same direction, port range, protocol and ethertype already exists in
the SG. If so, it will not add or remove rule in the OVN.
Rule will be added or removed only if there is no other same rules in
the SG.

Change-Id: I0d9295545384844e81b0ffe3aa7483324f9a9ae5
Related-Bug: #1869129"
0c55ab9c78df028e9e321a3f8dea59ede217fef8,2020-07-29 09:42:06+00:00,"[Functional] Add logging to the check test file function

In the functional tests module which is testing WSGI Server, there
is used function to assert that file created by the WSGI service is
created and has got correct size.
This function wasn't logging anything so in case of test failure
there was no way to check why it really failed.

This patch adds some log messages to the check so it will be clear
if file wasn't created at all or if size was not as expected.

Change-Id: Ib610b8513b4ea888a540873b26c3f205ac575b17
Related-Bug: #1886956"
68e5e1b8fe87b0b4938236f8f8570d92ae044e20,2020-07-29 12:28:46+00:00,"Specify C shared library in Pyroute2 namespace context

Since [1], it's possible to specify the shared library to be used
when creating a Pyroute2 namespace context.

As commented in [2], ""privsep"" library makes use of eventlet to
implement multitasking. If the method executed returns the GIL,
nothing guarantees that the ""eventlet"" executor will return it
again to this task. This could lead to timeouts during the
execution of those methods.

From https://docs.python.org/3.6/library/ctypes.html#ctypes.PyDLL:
  ""Instances of this class behave like CDLL instances, except that
   the Python GIL is not released during the function call, and
   after the function execution the Python error flag is checked.""

[1]https://github.com/svinota/pyroute2/issues/702
[2]https://review.opendev.org/#/c/717017/

Change-Id: I6c9f9adba8b4433cc96704bb69dd4e0d4b154ebd
Related-Bug: #1870352"
605de6d96854767edd6ed5a1512e3e46b7b0c311,2020-07-31 10:26:58+00:00,"[ovn]: port forwarding -- Functional test for IDL changes

This is a subset of the changes for implementing the floating IP
port forwarding feature in neutron, using OVN as the backend.

This changeset introduces functional tests for the IDL functions
added to the NB API for supporting port forwarding.

Depends-On: https://review.opendev.org/#/c/741000/
Change-Id: I01f54ea4a21eb635f0bf87a15694929ed1f3a643
Partially-implements: ovn/port_forwarding
Partial-Bug: #1877447"
38c7fd7cef42e8c1e6430feb5ac01396c65560c2,2020-07-31 12:50:16+02:00,"Fix validation of IPv6 subnets with external RAs

In case when such subnet is added directly to the router, there was
validation and subnet which is expected to get RA messages from the
external router couldn't be added to the Neutron router.

But in case when port was first created manually and then plugged to the
router, there wasn't such validation. This patch fixes it by adding same
validation to adding router interface by port.

Change-Id: I054296c790b697198550acbeae29546758b422c2
Closes-Bug: #1889619"
c9242f9a889f4d69653de4d21bec6060f549ee7b,2020-07-31 10:46:31-05:00,"Allow RBAC on Neutron quotas

This patch adds the support to allow role based access control
on quota of resources.

Change-Id: I6544d4a0794944abb3e1c2ff89134bf313cf35e8
Closes-Bug: #1671448"
ce1eebbf5720c5a861022e25f5783f82040e7043,2020-08-04 10:45:19+00:00,"Bump oslo.privsep to 2.3.0

This new version contains [1]. The aim of this patch is to remove
any eventlet patch in the root daemon, trying to avoid the recurrent
evenlet timeout we detect in the CI jobs (mainly functional and
fullstack ones).

[1]https://review.opendev.org/#/c/740970/

Change-Id: Ide2081e8de032752c3aae940ed7d2a8380dd4b3d"
31a95c085fc1a5ce8a57ff834386b022ae087e24,2020-08-04 10:57:37+00:00,"Use ebtables-legacy on Ubuntu Focal

On Ubuntu 20.04 there is by default ebtables-nft used. The problem with
that is that nftables don't supports syntax for source and destination
ipv4 address in arp tables right now.
So to workaround/fix this problem at least in our gate jobs we have to
switch to ebtables-legacy for now.
And that's exactly what this patch is doing.

Change-Id: I0aca119f1feca1d8f31a0104dde40d5d52c1b25c
Closes-Bug: #1889779"
e5ce19318921c44f2f5ed4568b31b04d82a17fd4,2020-08-05 17:36:01+00:00,"Support pyroute2 0.5.13

Since [1], pyroute2 0.5.13 is supported.

In this new version, ""link_lookup"" do not raise a NetlinkError
exception if the device does not exist; instead returns an empty
list.

This patch handles both implementations.

[1]https://review.opendev.org/#/c/743277/

Change-Id: I77ef374ecb776966ea13499755777e2d763d884b
Closes-Bug: #1890353"
4ad21fd23ae648536c4f07f980e9e156b5c41421,2020-08-06 14:48:51+02:00,"migration: Restart OVS after setting protocols

This patch is a workaround for bug in OVS [1]. The OVS is restarted
after setting protocols for the integration bridge. This will cause
a data plane disruption. We can remove the workaround once
the bug [1] is fixed.

Closes-bug: #1890596

[1] https://bugzilla.redhat.com/show_bug.cgi?id=1782834

Change-Id: Ia635f705fa03036a9e9c1c14eab59038ec39bda3
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
cebdd77af8ed19c2f733f06274052736c2dd5a9c,2020-08-06 16:00:30+02:00,"Bump pylint version to support python 3.8

As spotted in Focal testing patch [0], pep8 test fails with many
C0321 false-positives, reported in pylint as current version does not
support python 3.8 [1]

Use a newer version of pylint and astroid, fixing or disabling some of
the new checks: no-else-*, unnecessary-comprehension, import-outside-toplevel

[0] https://review.opendev.org/#/c/738163/
[1] https://github.com/PyCQA/pylint/issues/2737

Change-Id: Ie646b7093aa8634fd950c136a0eba9adcf56591c"
5f9b5dd86161608599696a78e033ab0c212c4615,2020-08-10 14:00:06+00:00,"port_forwarding: validate args before invoking db update (cont.)

This is a follow up for https://review.opendev.org/#/c/738145/

During backporting review, it became clear that unit test had a
flaw. It assumed that order of items in dictionary that make up
the exception message did not change. That is not true, based
on the python version used.

This follow up also includes a review feedback that did not make
into the original change: rename function that raises exception
to have ""raise"" in its name (raise_port_forwarding_update_failed).

Change-Id: I6fcd64e205e584017e6c9022f82a5497ea1cc576
Closes-Bug: #1878299"
cc54a1c38e0b537883de43fecda781034c80daf3,2020-08-10 10:58:30-04:00,"Fix port can not be created with the sg of other project

This patch adds the verification of whether admin context when
verifying the valid security groups of port.

Change-Id: I2674bdc448d9a091b9fe8c68f0866fd19141c6be
Closes-Bug: #1890539"
e92193d246c8ea30d42a064297bb7a1955c62a98,2020-08-11 14:45:07+00:00,"Updating the pecan version requirement

There's a fix in pecan 1.4 to handle accept headers that have
extra parameters included.

Closes-Bug: #1829042
Change-Id: Id7d78d77da8dfd1620936e437d862c1d60e8eb25"
d74f409c82fb73601b859cd6b243bbbc97b49153,2020-08-11 14:54:05-04:00,"[ovn]: port forwarding -- core changes

This is a subset of the changes for implementing the floating IP
port forwarding feature in neutron, using OVN as the backend.

This changeset covers the core implementation for portforwarding/drivers/ovn,
mech_driver, ovn-router as well as a subset of tests.

Port forwarding support in ovn_db_sync is not included here to facilitate review.
That, as well as all other supporting changes, are under the ovn/port_forwarding topic:
https://review.opendev.org/#/q/topic:ovn/port_forwarding+(status:open+OR+status:merged)

Depends-On: https://review.opendev.org/#/c/726478/
Partially-implements: ovn/port_forwarding
Partial-Bug: #1877447

Change-Id: I019fe11ac1ddcf2304f3f144c62d52667fc11dce"
7f551db9be861c531d913aa428dd8498e290eaaf,2020-08-12 13:08:41+00:00,"[OVN] Update sample local.conf to support segments

This change updates sample OVN local.conf file in order
to enable neutron-segments service.

Related-Bug: #1871608
Closes-Bug: #1891243
Change-Id: Iac6227093b0e851716a76e38145508d6724c650a"
361b4853180b84b1d8ba38a6967de4c254aacb0c,2020-08-12 12:06:54-04:00,"[ovn]: port forwarding -- feature support under ovn_db_sync

This is a subset of the changes for implementing the floating IP
port forwarding feature in neutron, using OVN as the backend.

This changeset updates ovn_db_sync utility and its tests to
ensure that floating ip port forwarding can be repaired.

Depends-On: https://review.opendev.org/#/c/741303/
Change-Id: I7a158173252e73e081914f242133634c41de7999
Partially-implements: ovn/port_forwarding
Partial-Bug: #1877447"
7abe0ee34c367b4abf84820048b4aed643fc1162,2020-08-13 17:15:29+02:00,"Add 'keepalived_use_no_track' config option

Patch [1] added option ""no_track"" to the keepalived's config file which
is generated by L3 agent in HA mode.
This was added to handle properly keepalived 2.x and interfaces which
are in DOWN state in the backup nodes.
But this ""no_track"" option is not compatible with keepalived 1.x series
which is available e.g. on Ubuntu 18.04.

As there is no easy way to check automatically if keepalived supports or
not this config flag, this patch introduces new config option
""keepalived_use_no_track"".
If this config option will be set to False, neutron L3 agent will not
add ""no_track"" to the keepalived's config.

As master branch is moving to gate on Ubuntu 20.04 where keepalived 2.x
is already available, this new config option default value is set to
True.

[1] https://review.opendev.org/#/c/721799/

Change-Id: I2dfdb9f56de28d56ca0f240ff34fa7c3a12e339b
Closes-Bug: #1890400"
6a9fce39d6cf0051c6ea0f3bf5d57b9a7a03c3b8,2020-08-18 09:25:39-04:00,"""round"" may bump 1 second to 2 if sleep takes more than 1.49 sec

Use less than 2 as a way to account for test on slower systems.
This is a follow up to: https://review.opendev.org/#/c/691883/

Trivial-Fix

Change-Id: Ia313b9c4028f0242cb0da8764b9921c5c30c465a
Fixes-Bug: #1891517"
5eca44bfa850e6e75c9974ae7711b87764628253,2020-08-18 20:39:10+01:00,"Ensure fip ip rules deleted when fip removed

The information needed to delete ip rules associated
with fips is held in memory between add and remove so
a restart of the l3-agent results in any fips that
existed before the restart having their ip rules
persist after the fips are removed. This patch
enures that an agent restart reloads this information
so that ip rules associated with a fip are correctly
removed when the fip is removed.

Change-Id: If656a703c996ccc7719b1b09d793c5bbdfd6f3c1
Closes-Bug: #1891673"
ee50f7cfcf3b06ca599cb0e12ca33d9f15f22b0c,2020-08-19 15:27:44+02:00,"Raise minimal greenlet version

As seen in Ubuntu Focal test patches like [1], lower-constraints fails
on greenlet compilation. 0.4.13 added python 3.7 support with additional
fixes coming in .14 so bumping to this version.

[1] https://review.opendev.org/#/c/734304/

Change-Id: I0739458ac31307d651376a33a835336285d2c7dd"
b0c6cb35e72fdd7535452430c7619a2c0c8ab5fc,2020-08-19 10:29:00-03:00,"Announce deprecation of `remote_ip_prefix` in metering label rules

As proposed in the RFE and then approved in the spec, we are adding to
the neutron metering rules two new parameters. The source IP prefix, and
destination IP prefix. Moreover, with that new spec implementation, we
deprecate the use of `remote_ip_prefix`.

This patch introduces a log message to inform people to migrate to the new API usage.

Change-Id: I5e81d8b27c6126f10011f2d1b4d8f8697e987f13
Partially-Implements: https://bugs.launchpad.net/neutron/+bug/1889431
RFE: https://bugs.launchpad.net/neutron/+bug/1889431
Depends-On: https://review.opendev.org/#/c/744702/
Depends-On: https://review.opendev.org/#/c/743828/
Depends-On: https://review.opendev.org/#/c/746142/"
13b894288e9354b9eb0833a635fe4a624bb068a9,2020-08-20 22:10:21-04:00,"Fix deletion of subnet_id from pd_subnets

In the RouterInfo._process_internal_ports() method when it process
old ports and port belongs to the subnet with CIDR assigned by
Prefix Delegation it will try to remove subnet_id key from the
pd_subnets dict.
However it seems that in some case it may happen that such subnet_id key
is not added to the pd_subnets dict and processing of ports fails.

We shouldn't fail in such case, if there is no subnet_id key in this
dict we should be good as we want to delete it simply. So this patch
changes that to not raise KeyError in such case.

Change-Id: I6e6d890c196716c0ef4bcc2922f1ec4c142a6e79
Closes-Bug: #1892364"
1dddbbfc92b115bfd62e15081134a5cadbc15212,2020-08-21 10:14:28+01:00,"[OVN] Use the Chassis_Private table for agents healthcheck

The core OVN team has introduced a new table called Chassis_Private to
avoid nb_cfg flooding when checking for the Chassis' status. The OVN
driver does rely on that mechanism for the agent liveness mechanism.

This patch makes use of this new table but it's also backward
compatible.

For more information, check the core OVN changes at:
https://patchwork.ozlabs.org/patch/1254394.

Closes-Bug: #1892477
Change-Id: Iea4263b852d1e3f81eb2557918ea3cbb7adb8016
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
81d375d39ab1affe4b0a29437eaabc387fb1c570,2020-08-21 13:18:14+02:00,"Handle properly existing LLA address during l3 agent restart

In case when L3 agent is hosting routers which have got subnets
with Prefix Delegation enabled, agent couldn't properly handle
IpAddressAlreadyExists exception raised when pd module tries to
configure link local IPv6 addresses.

Now this is fixed and L3 agent can restart without problems in such
case.

Change-Id: Icc995f7b2b465921e41342711d17539f16ead0ce
Closes-Bug: #1892362"
a4e04a7f8be95295324a59c34e6a79c7973af1ee,2020-08-21 15:11:24+02:00,"Fix get_ipv6_llas method in the interface driver

This method is using ip_lib.get_devices_with_ip function to get
IP addresses with scope ""link"".
Unfortunatelly this method wasn't translating scope names to the pyrout2
values and due to that wasn't returning correct IP addresses.

Now this is fixed and correctl link local IPv6 addresses are returned.

Change-Id: Ia41c1bc627ad2ce89d658ff1fdedee802f6dfa15
Closes-Bug: #1892489"
7fd2725cb14b81f442eb57a38755829270ff2c43,2020-08-24 12:54:08+00:00,"Do not skip ports with ofport unset or invalid

This change removes the ""_check_ofport"" function and its use form
the ovs_lib.py file.

By skipping ports without a unique ofport in the ""get_vifs_by_ids""
and ""get_vifs_by_id"" functions, the OVS agent incorrectly treated
newly added port with an ofport of -1 as removed ports in the
""treat_devices_added_or_updated"" function.

Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>

Change-Id: I79158baafbb99bee99a1d687039313eb454d3a9b
Partial-Bug: #1734320
Partial-Bug: #1815989"
a08893368a9f323d41f490ee043ef7bd50c4f1fa,2020-08-25 15:06:04+02:00,"Don't raise FileNotFoundError during disabling keepalived

In case when keepalived's config is not existing already, there is no
need to raise any exception while L3 agent is trying to clean this
config.

Change-Id: I9ec81ad0c10379294d3145c5902e8b81b65c0221
Closes-Bug: #1892866"
68ec29abf0f47402a71d547bdc932291d26fca28,2020-08-26 10:09:28+01:00,"[OVN] Use the OVN DevStack module

The DevStack module for OVN has now been moved to the DevStack repository,
this patch is deletes it from the Neutron repository.

Depends-On: https://review.opendev.org/#/c/748140/
Change-Id: I2c30b8130525380234d767a7cb46f9bcca2a0d6b
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
513c3652b4ba6b35bb8d457b3630956174a9894f,2020-08-26 16:05:30+02:00,"Update IPv6 Prefix Delegation docs

This patch removes part about neutron-pd-agent from the PD docs.
This agent was retired many cycles ago with [1] so we shouldn't mention
about that in our docs.

[1] https://review.opendev.org/#/c/388919/

Change-Id: I546d04373b475deef3a3c7fb2694da5a4fecaa26"
671c3978a1e9e96a9e204ba68809f064f67e7327,2020-08-27 09:27:45+02:00,"Bump some lower constraints for Focal migration

As seen in focal testing failure [1], lower constraints fail on
some packages (fixing one, another may appear). This bumps a series of
packages after local testing to pass on Focal.

Also sync requirements on these new versions

[1] https://review.opendev.org/#/c/734304/

Change-Id: I3abf86d90ed5cb1c4434746860b53c676eecbfd3"
3ae3c080db1bf84dbca77f72e4382de7f0e90ddf,2020-08-28 09:40:39+00:00,"Disable ""no-value-for-parameter"" pep8 error in DictModel

This pep8 error ocurrs sporadically, as reported in related bug.
The creation of a new DictModel class empty object during the
deepcopy process only needs the class type only.

Change-Id: Iba4f2ea700f01fd153104741614eec4855d0f387
Closes-Bug: #1893316"
e1582e39a1ba7f620e9cea7e5c531dc03e881ced,2020-08-28 14:17:06+00:00,"Don't directly access the in-memory DB for NB_Global row

Directly accessing the in-memory OVSDB via 'tables' outside of a
Command object isn't safe. For example, if we lose connection to
the OVSDB and reconnect, the in-memory copy will be replaced by
the Connection thread. If we get a call to get_agents() that is
handled by the main thread and we look up the value from there,
the value we expect may be missing.

The dependent patch in ovsdbapp adds some locking to help with
this some API commands like lookup() that are heavily used and
with ReadOnlyCommands which also aren't processed like normal
Command objects inside the connection thread.

There will be many more changes in the ml2/ovn code similar to
this one, as we directly access the in-memory copy a lot.

Depends-On: https://review.opendev.org/#/c/745746/
Change-Id: I328391c88af1ef2f6b1af3787c63d8591fb317b5
Closes-Bug: #1888878"
827c5878d3cca5807e72d90f3fb8b4a92d513426,2020-08-28 18:15:19+00:00,"Simplify OVN Agent API implementation

This is a small enhancement to https://review.opendev.org/#/c/737106/
that breaks apart the ControllerAgent and ControllerGatewayAgent.

Change-Id: I34c9e9621e84112dc950e1d274e867093f3d12e4"
a0b18d553d75977fa48c6a64904b19c8fcd1b6de,2020-08-31 13:02:39+02:00,"metadata-ipv6: DHCP namespace

Send IPv6 metadata traffic (dst=fe80::a9fe:a9fe) to the metadata-agent.

When running on IPv6 enabled system bind haproxy (i.e. the
metadata-proxy) to 169.254.169.254 and to fe80::a9fe:a9fe also.

We do not introduce new config options. The usual config options
(enable_isolated_metadata, force_metadata, enable_metadata_proxy)
now control the metadata service over both IPv4 and IPv6.

This change series only affects the guests' access to the metadata
service (over tenant networks). They change nothing about how the
metadata-agent talks to Nova's metadata service.

Metadata access over IPv6 is supposed to work both on dual-stack and
v6-only networks.

In order to enable the metadata service on pre-existing isolated
networks during an upgrade, this change makes each dhcp-agent restart
trigger a quick restart of dhcp-agent-controlled metadata-proxies,
so they can pick up their new config making them also bind to
fe80::a9fe:a9fe.

Change-Id: If35f00d1fc9e4ab7e232660362410ce7320c45ba
Partial-Bug: #1460177"
a1f4ee3ade0e694b6b9c1de5389924467b7fd943,2020-08-31 13:02:49+02:00,"metadata-ipv6: Router namespace

We push a v6 host route to make the guest send its metadata requests
in the direction of our router. We redirect it to haproxy which
mangles the headers and sends the request along to metadata-agent.

Apparently the supported list of dhcp options for dhcpv6 is quite
short in dnsmasq (cf. dnsmasq --help dhcp6) - not including anything
like classless-static-route for dhcpv4. So we must rely solely on
radvd to push host routes to the guest.

Metadata access over IPv6 is supposed to work both on dual-stack and
v6-only networks.

The following v6 subnet modes are supposed to work:

--ipv6-ra-mode slaac --ipv6-address-mode slaac
--ipv6-ra-mode dhcpv6-stateless --ipv6-address-mode dhcpv6-stateless
--ipv6-ra-mode dhcpv6-stateful --ipv6-address-mode dhcpv6-stateful

Change-Id: I28f2914b1b67659af2db7240eae730ac43daccd2
Partial-Bug: #1460177"
a818c41c25c33a3491254c74f33b7d273fb16f1b,2020-08-31 13:02:49+02:00,"metadata-ipv6: Accept link local address in X-Forwarded-For

In the spec we said:
""""""
When the metadata proxy processes a request, it gathers the L2 addresses
of a VM, and the source interface, and passes it to the metadata service.

The Metadata service, instead of using the VM IP, uses the ""VM MAC"" and
""Gateway MAC"" to identify the instance.
""""""

But since we switched from the home-grown metadata-ns-proxy to haproxy
we no longer control some of the headers included, like X-Forwarded-For.
haproxy allows us to turn X-Forwarded-For on or off, but it cannot
give us an X-Forwarded-For-MAC header.

Instead it seems we have to rely on the source address being the IPv6
link local address generated from the NIC's MAC address as specified
in RFC 4291:
https://tools.ietf.org/html/rfc4291#section-2.5.6
https://tools.ietf.org/html/rfc4291#appendix-A

Note that means you cannot use IPv6 Privacy Extensions:
https://tools.ietf.org/html/rfc4941

Change-Id: Ife592fcfc69e26f61ec1f45c06821cb025cc7cf2
Closes-Bug: #1460177"
e7e71b2ca67169e6de4cdad71f2c82059132325d,2020-09-01 07:27:48+00:00,"[OVN] Implement floating IP QoS in OVN backend

This patch implements in the OVN backend the existing floating
IP QoS extension.

The OVN client, using the existing QoS extension, will retrieve
the QoS rules attached to each floating IP, the router where the
floating IP lives and the router gateway port. The QoS rules
will be applied on the router gateway port.

The OVN NB QoS rules for floating IP addresses have a ""match""
field containing a tuple of parameters:
- The direction of the flow:
    'inport == ""src""' or
    'outport == ""dst""'
- The IP address to match:
    'ip4.src == 1.2.3.4' or
    'ip4.dst == 1.2.3.4'
- The chassis where the port is located:
    'is_chassis_resident(""chassis"")'

Closes-Bug: #1877408
Related-Bug: #1596611
Depends-On: https://review.opendev.org/#/c/727847/

Change-Id: Ib65d8edcb0a415f6d698c952334d3b4bb0d9fff6"
72b3fc57456568b463593795a4907b9d4bac131e,2020-09-01 16:50:40+02:00,"Move pylint disable comment to an effective place

Bug #1893316 still occurs, e.g.:
https://zuul.opendev.org/t/openstack/build/94dc9db2fee049b38926827e97bbec09

after the attempted fix:
https://review.opendev.org/748594

I believe the attempted fix was basically good, but in order to disable
the pylint warning for the whole method the comment must be placed
in the method body, not on the signature line.

Change-Id: I55c6daf976c62252aca403358b824d4d3aaa495c
Closes-Bug: #1893316
Related-Change: Iba4f2ea700f01fd153104741614eec4855d0f387"
5f6e37f966a627670480429d153a21631e170c20,2020-09-01 17:19:38+00:00,"Filter ML2Plugin mech driver supported extensions

Each mechanism driver loaded in the ML2Plugin can provide what
extensions are supported. By default, any mech driver can support
all extensions.

This extension filtering is done during the plugin initialization.
If any requested extension is not supported, it will be silently
removed from the loaded extensions.

Depends-On: https://review.opendev.org/#/c/743519
Related-Bug: #1888829

Change-Id: Id4809d4f3c4e13a93f9160df3618f8602b57437c"
6fc24afd9a7bf0156cdc94330823cb35a03e2602,2020-09-02 15:42:03+00:00,"Use MagicMock for Connection object

After https://review.opendev.org/#/c/745746/ there are new calls to
'with self.lock' which fail in unit tests that only use a Mock object
for the Connection that is passed to an API impl object. Switching to
MagicMock fixes it.

Closes-Bug: #1893965

Change-Id: Icbcb5e004dfa777877d1865a5018262344c7e415"
7f494fa3ae5f456a66bd4ec2a9d9f67c60df2d86,2020-09-02 19:37:52-07:00,"Show cmd detail when execute linux command failed

For neutron-l3-agent, after the execution of the linux command fails,
display which command failed to execute

Change-Id: Ia237e1b18e02c9da3ae9ee94e4244828e5c207b2
Closes-Bug: #1893627"
0deec6621e6485e0a7c219953850fd14b83a7c41,2020-09-03 15:37:35+00:00,"[ovn]: port forwarding -- functional tests for maintenance task

This is a subset of the changes for implementing the floating IP
port forwarding feature in neutron, using OVN as the backend.

This changeset adds functional tests in maintenance task to ensure
that floating ips as well as port forwarding are properly handled.

Depends-On: https://review.opendev.org/#/c/741303/
Change-Id: I0671ed8d73ca8c0e3ba4aded81f395e20957d598
Partially-implements: ovn/port_forwarding
Partial-Bug: #1877447"
bd1467b47c3c55f098722fca79a12dfc57ea6e18,2020-09-04 09:20:54-03:00,"Granular metering data in neutron-metering-agent

Extend neutron metering agent to generate Granular metering data.
The rationale here is to have data (bytes and packets) not just in
a label basis, but also in tenant, router, and router-label, and tenant-label
basis. This allows operators to develop more complex network monitoring
solutions.

Moreover, I added documentation to explain what is the neutron metering agent,
its configs, and different message formats.

Change-Id: I7b6172f88efd4df89d7bed9a0af52f80c61acbe0
Implements: https://blueprints.launchpad.net/neutron/+spec/granular-metering-data
Closes-Bug: #1886949"
3f30727c0a8ef792b0c9e6a4739c9e0af61d9bd8,2020-09-04 15:08:30+00:00,"Use metadata constants from n-lib

Change-Id: I8045d1670045a68c955b0bf95077137ea07fd72e
Partial-Bug: #1460177"
d4ae3f75a542112c92130828f992eec17d5bf0ba,2020-09-07 15:52:52+00:00,"Change ""propagate_uplink_status"" default value to True

When ""uplink-status-propagation"" extension is enabled, new ports
created will default the value of ""propagate_uplink_status"" to True.

Closes-Bug: #1888487

Change-Id: If1e533a61aeebbb4761d669c516fe86a4381765c"
db4ff00175ff450006a8d29b4d26ddeed6b3ec67,2020-09-08 17:41:01+02:00,"Bump eventlet/oslo.messaging requirements

With older versions, lower-constraints job fails on Focal as seen in DNM
patch https://review.opendev.org/#/c/738163/

Change-Id: I05e0f3a3ad0abc02f97a89d63af9f58d5fa00549
Closes-Bug: #1894857"
a84462f698f91b10e332e3403ecc9a68c3e6a884,2020-09-08 12:09:48-04:00,"ovn: Always use UTC for Hash ring timestamps

When a node is created in ovn_hash_ring table, it used to use timestamp
depending on the system or mysql timezone. This caused troubles for
machines using western timezones when getting active nodes before the
first liveness check, becaus the time difference between UTC and local
time was always in hours and the limit is 30 seconds.

This patch configures OVN Hash Ring model to always use UTC when
creating a node so the times are always compared to UTC, regardless of
the used timezone. Note that the created_at and updated_at are not user
facing columns.

Change-Id: I9172254ce9b1880833128bdcaacacb93821933dd
Closes-bug: #1894117
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
f3a8e1547d444a1139d29faef3e81a8addb99769,2020-09-09 09:39:13+01:00,"[OVN][OVS] Different metadata_workers default based on driver

Both drivers have different approaches when it comes to the metatada
agent, for one the metadata agent for ML2/OVN runs on the compute nodes
(it's distributed) instead of the controller nodes.

The previous default of ""<# of CPUs> / 2"" did not make sense for ML2/OVN
and if left unchanged could result in scalation problems because of the
number of connections to the OVSDB Southbound database, as seeing in
this email thread for example [0].

This patch puts a placeholder value (None) on the default field of
the ""metadata_workers"" config by not setting it immediately and then
conditionally set the default value based on each driver:

* ML2/OVS defaults to <# CPUs> // 2, as before.
* ML2/OVN defaults to 2, as suggested in the bug description and also
  what's default in TripleO for the OVN driver.

[0]
http://lists.openstack.org/pipermail/openstack-discuss/2020-September/016960.html

Change-Id: I60d5dfef38dc130b47668604c04299b9d23b59b6
Closes-Bug: #1893656
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
4b30dc2330423fd9fe68a70f7b2e0c6f925ecda4,2020-09-10 11:46:50+02:00,"ovn migration: Fix neutron server container name

Previously docker command used grep to search for neutron server
container. It used image name instead of container name. With the switch
to podman, it stopped working. This patch fixes the container name.

Change-Id: Id650c2e7ac427dd53ebaab4e6d95d54efc657e3f
Closes-bug: #1895108
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
7e116fe70eb5c9fa01804ffb17b0c21103171bb5,2020-09-15 16:40:17+02:00,"Revert ""Updating the pecan version requirement""

This reverts commit e92193d246c8ea30d42a064297bb7a1955c62a98.

With pecan 1.4.0 aodh and ceilometer has issues, so for now better to
revert this change.
Closes-Bug: #1894864

Change-Id: I32b667b9fcc8bd6909d58c8fb60797f961ab9b44"
f2643f27fb617a517be95138246331d8556c0cc3,2020-09-15 16:43:24+01:00,"[OVN] Fix test_add_interface_in_use negative test

While fixing https://bugs.launchpad.net/neutron/+bug/1876148 we've made
the add_router_interface method idempotent and it no longer raised a
Conflict if the same interface was added twice, this broke the
test_add_interface_in_use from neutron-tempest-pluign.

Change-Id: I76d46a4c3c8af166e022894a5693d5c78555ea50
Closes-Bug: #1895671
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
84d4fe177b75569628aec96e43b709b8e29b9e05,2020-09-16 00:34:38+00:00,"[L3] Add missing address scope mark for IPv6 traffic

Any IPv6 traffic wants to go in/out directly on the DVR compute node
will be dropped by the mis-configured scope mark iptables rule. This
patch addresses this issue.

Closes-Bug: #1895401
Change-Id: Iee045e963e05f83d497e73bb39bb64c522f19543"
0a785e90c32a8e96e61ad6353fdc75b04e97e357,2020-09-16 10:49:32-05:00,"[OVN] Fix get/update/delete of non-OVN agents

At some point, KeyError stopped being raised by get_agent and
instead the AgentNotFound exception. This meant that the patched
plugin methods would not be called for {get,update,delete}_agent
calls for non-OVN agents.

Change-Id: Id755a9eec08414d7a77e67a426d7796fae693ac7
Closes-Bug: #1895033"
e10c0dedf43673554eff2670c259e8234b0c65fd,2020-09-23 16:14:32+02:00,"ovn: Use new OVS commit hash

We have to pick OVS patches compatible with kernel 4.15.0-118
after switching to it.

Change-Id: I1ff47fc3398760d5b631bf89e6cfcc7ae339f0e3
Related-bug: #1883601
Closes-bug: #1896766"
b1f1c8aa50012d09b7a81abfb99d02e0c457fc8c,2020-09-23 16:35:45+00:00,"Reduce log level in ""ensure_device_is_ready""

If the device is not ready, the method should inform about this
event. The code calling this method, if needed, can write a higher
log message.

Change-Id: Ib7c5ba736f6e4ccc88df665faeef304c176a24e7
Closes-Bug: #1896920"
2864957ca53a346418f89cc945bba5cdcf204799,2020-09-24 12:01:12+12:00,"Fix dhcp_release when client_id is specified

Appending a string to a list results in each character being appended
as list items, this results in an invalid release command.

This change appends the client_id string to the list instead.

Change-Id: I71a114308e3b68f6daf6e1a202a47b6a453bb81a
Closes-Bug: #1896850"
87e5131432f181459bde78b31b59204c8e5077e2,2020-09-24 06:18:38+00:00,"Allow replacing the QoS policy of bound port

Change-Id: Iebdfd2b303f47ff9f049cf583ea754b35ca26f78
Related-Bug: #1882804
Depends-On: https://review.opendev.org/748279"
e77f6312573e69b6ff1b671a3b8e5fc836bd5398,2020-09-28 11:39:54+00:00,"Migrate tempest jobs to Focal

Update nodetype for neutron-tempest-dvr-ha-multinode-full job
Stop compiling OVS modules in OVN jobs

Etherpad tracker:
https://etherpad.opendev.org/p/neutron-victoria-switch_to_focal

Depends-On: https://review.opendev.org/734700/
Depends-On: https://review.opendev.org/748367/

Change-Id: I18498ad7f8e4e4dc6d91a98bd917798420e57aeb
Story: #2007865
Task: #40199"
be3669258cb6f8a6c43b2f016a344185075fa544,2020-09-29 09:11:03+00:00,"[OVN] update_port should not remove values from external_ids

Prior to this patch, the OVNClient implementation for neutron's
update_port was setting the external_ids of the affected logical
switch port to a hard-coded dictionary. This meant that any key
value pairs that were not listed there would simply get removed.
This would make it impossible for any other users of the
external_id to have a reliable way of storing its data. One of
such users could be the ovn-octavia-provider.

Closes-Bug: #1896827
Change-Id: Ie580534e4d91f1ca2e1dc8331632d49d4720e7ba"
10091f9346004d330925a5e0ab5425cda6256326,2020-09-29 09:06:03-03:00,"Add source_ip_prefix and destination_ip_prefix to metering label rules

As proposed in the RFE and then approved in the spec, we are adding to
the neutron metering rules two new parameters. The source IP prefix, and
destination IP prefix.

Partially-Implements: https://bugs.launchpad.net/neutron/+bug/1889431
RFE: https://bugs.launchpad.net/neutron/+bug/1889431

Depends-On: https://review.opendev.org/#/c/746203/
Depends-On: https://review.opendev.org/#/c/744702/
Depends-On: https://review.opendev.org/#/c/743828/
Depends-On: https://review.opendev.org/#/c/746142/

Change-Id: I38991de2b4937becd0f1f14f3a32dc39c590e0d9"
959d8b6d73e2a6ab1a45c9a7b0b05ae163e650fc,2020-09-30 00:49:36+00:00,"Local mac direct flow for non-openflow firewall

When there is no openflow firewall, aka the ovs agent security group
is disabled or Noop/HybridIptable, this patch will introduce a different
ingress pipeline for bridge ports which will avoid ingress flood:
(1) table=0,  in_port=patch_bridge,dl_vlan=physical_vlan action=mod_vlan:local_vlan,goto:60 (original)
(2) table=60, in_port=patch_bridge                       action=goto:61                     (new)
(3) table=61, dl_dst=local_port_mac,dl_vlan=local_vlan,  action=strip_vlan,output:<ofport>  (changes)

And changes the local ports pipeline:
(1) table=0,  in_port=local_ofport                       action=goto:25                  (original)
(2) table=25, in_port=local_ofport,dl_src=local_port_mac action=goto:60                  (original)
(3) table=60, in_port=local_ofport,dl_src=local_port_mac action=local_vlan->reg6,goto:61 (changes)
(4) table=61, dl_dst=local_port_mac,reg6=local_vlan,     action=output:<ofport>          (changes)

Closes-Bug: #1884708
Closes-Bug: #1881070
Related-Bug: #1732067
Related-Bug: #1866445
Related-Bug: #1883321

Change-Id: Iecf9cffaf02616342f1727ad7db85545d8adbec2"
c8a819aff4db62e58192af0a272a7f1ce7923146,2020-09-30 11:33:24+00:00,"Filter out port with invalid ofport in OVS firewall

Since [1], ""get_vif_port_by_id"" is also returning ports with an
invalid ofport. OVS firewall cannot set an OpenFlow rule for a port
without a valid ofport. ""get_ovs_port"" should filter out those ports.

Related-Bug: #1815989
Related-Bug: #1734320

[1]https://review.opendev.org/#/c/640258/

Change-Id: Id12486b3127ab4ac8ad9ef2b3641da1b79a25a50"
7da5854f7206e509042c3e635210b097e846b7d1,2020-10-01 09:30:25+02:00,"Use the 'all' tox env instead of 'all-plugin'

As the 'all-plugin' tox env is deprecated it is recommended to use
'all' tox env instead.

[1] https://review.opendev.org/#/c/543974/

Change-Id: Iceccc81ca7c888c1035fd64dc07b9a922e05869f
Related-Bug: #1862240"
ac08e89124bd7aad532e86b12a1e67b9550387ef,2020-10-01 08:28:40+00:00,"Change reference to OvnDbNotifyHandler._watched_events

Since [1], RowEventHandler._watched_events do not use name mangling.
OvnDbNotifyHandler, inheriting from RowEventHandler, can access to
this variable.

[1]https://review.opendev.org/#/c/752797/

Change-Id: I545c31977799c4ea51e037b631a49306da9c4a3b
Partial-Bug: #1897928"
704576e54e041340ed9c2964b110815e074239a6,2020-10-01 09:16:01-04:00,"Default dnsmasq --conf-file to /dev/null

Passing --conf-file= with no value has no effect on the dnsmasq
process. Intended effect here is for the default system dnsmasq.conf
file not to be read and included in configuring the process. For
that to happen some value has to be passed to --conf-file. Passing
/dev/null will invoke the desired outcome to skip the system
default conf file.

Closes-Bug: #1896945
Change-Id: I22570a44f84d14a792633747c04d7426ab231009"
be7882be27237e7803c0b8411335f66594729175,2020-10-01 15:46:19+00:00,"Do not update agents ""alive"" state in TestAgentApi

During the execution of FT TestAgentApi, we should not update the
chassis agents ""alive"" state; during the FT execution, some of the
agents returned by ""agents_from_chassis"" do not really exist (not
relevant for the test case).

Change-Id: Ied5bdca2a3b3832f11d42614d609d0849111ae1a
Closes-Bug: #1897921"
a8ceb09f98e3386d9c84ce8fcb862042aea190bb,2020-10-02 17:10:00+02:00,"Use ebtables-legacy also in ovn multinode jobs

For other jobs which inherits from neutron-tempest-base it
was changed some time ago.
But ovn multinode jobs don't inherits from that base job
so this patch fixes it for those jobs as well by adding same
configure_ebtables.yaml playbook to pre-run in the
neutron-ovn-multinode-base job.

Change-Id: Icb4fd80133ee10ad6c40e160013b4ab91d2c5a6b
Closes-Bug: #1898211"
9c0d502b19073ba5f4d849ea58706143d4cb64da,2020-10-03 21:58:20+10:00,"include python36-devel in bindep, for tests

as of https://review.opendev.org/#/c/751112/
py36 tests fail w/
  psutil/_psutil_common.c:9:10: fatal error: Python.h: No such file or directory
  #include <Python.h>
           ^~~~~~~~~~
  compilation terminated.
  error: command 'gcc' failed with exit status 1

Change-Id: I84c5e7c64cb418f73ce84ea603e6d7025ff5c36f"
00f1d325bd30dd6bfd9e1dde94c5df6acda51549,2020-10-04 14:53:22+00:00,"Do not retrieve again the Floating IP object during creation

Floating IP OVO instance contains a reference to the DB object.
During a DB transaction (inside a session context), this reference
is always updated. There is no need to retrieve again the OVO
to read the updated version of the DB object.

For example, if a QoS policy is assigned to this Floating IP, the
DB object will update the ""qos_policy_binding"" reference.

Change-Id: Iec2552362f6c52842f12e20798324d4180d993e5
Related-Bug: #1880969"
f57b59a1791d5d5bf2b7a7d292fc36cfa1cec9c9,2020-10-05 22:43:56+02:00,"[Doc] Add section about diffs between ovs and iptables fw drivers

And add note about different handling of packets marked as INVALID
by both those drivers.

Change-Id: I3d436289073e95312e5f5077acabd136266b9e8a
Closes-Bug: #1896587"
996aa45e1363fca4b9ffec6bb3ab9c07e42ffc8e,2020-10-06 13:39:41+00:00,"Capture timeout exception when deleting NamespaceFixture

Until the related bug is fixed, if the namespace created in a
NamespaceFixture cannot be deleted due to a timeout exception,
the exception will be dismissed and a warning message logged.

The leftover namespace will not affect other test cases.

Change-Id: Idb262024ca74aaa924525150e610642f493c5dc4
Related-Bug: #1838793"
b8be1a05facff2ba8b484902494ce1663e0aae7c,2020-10-06 14:21:38+00:00,"Process ingress multicast traffic for 224.0.0.X separately

By default, if any multicast traffic sent to 224.0.0.X is allowed
in the OVS firewall (that means there is a specific egress rule),
this traffic is sent, in table 73 (ACCEPT_OR_INGRESS_TABLE), to
a rule with action NORMAL.

As commented in the related bug, https://tools.ietf.org/html/rfc4541,
chapter 2.1.2, section (2):
  ""Packets with a destination IP (DIP) address in the 224.0.0.X range
   which are not IGMP must be forwarded on all ports.""

That means those packets will be forwarded to all ports regardless of
any ingress rule. This patch process this traffic separately, sending
those packets to table 102 (MCAST_RULES_INGRESS_TABLE). In this table
the ingress rules that have a defined protocol, will have an Open Flow
rule to output the traffic directly to those ports associated to this
rule.

For example, in the problem reported in the related bug, the VRRP
protocol (112), will be sent only to those ports that have this
ingress rule.

Change-Id: Ie271de144f78e364d938731ec9f5297e1a9d73f9
Closes-Bug: #1889631"
d13efc631465937542ea5e590a5c1590a5bfb253,2020-10-07 13:38:11+00:00,"[L3] Let agent extension do delete router first

For some agent extension implementation, it may need the router_info
to do some clean up work. So this patch just moves the extension
delete action forward.

Closes-Bug: #1897423
Change-Id: I3434ec7c0942229b99e67de7500090dedb37b13f"
24cd8598dcbedf51838fc737938d5d764ba14147,2020-10-07 21:09:35-04:00,"Fix formatting error in agent/linux/external_process.py

Formatting error causes exception in certain circumstances; fix is
trivial.

Co-Authored-By:  captainmish@gmail.com
Change-Id: I2bd7f2f3d798228fee6ba26d0e1a32e3033e9fc1
Closes-Bug: #1898789"
7e31f2ae41b4512afd2b3dd4fb72fcd16ef0a373,2020-10-08 13:12:12+00:00,"Do not load ""qos-fip"" if ""qos"" plugin is not loaded

If QoS service plugin is not loaded, the L3 QoS extension in the OVN
L3 plugin should not be loaded neither.

Prior to this patch, the extension drivers were checked to find the
QoS extension. Although it is a misconfiguration to have the QoS
extension without loading the QoS driver, that is handled correctly
by the Neutron server, disabling the extension silently.

Closes-Bug: #1898842
Related-Bug: #1877408

Change-Id: Iea5ff76fe652ab1c04e23850b9259547c1d54365"
a6a99bc9a06585e7cf68a8e66085488e9c089062,2020-10-08 14:45:51+00:00,"Match created_at and updated_at timestamp in TestHashRing

When a ""ovn_hash_ring"" record is created in the database,
there is a small difference between ""created_at"" and
""updated_at"", assigned during the Python OVO creation.

This patch equates both values during testing if the
difference between both is less than 10ms.

Related-Bug: #1894117

Change-Id: Ib3b405104d746255f869a94898d4ba14ac600909"
3605e9f82de73e0c9d3b6c8a6a99cda05bea8f4e,2020-10-08 19:49:07+02:00,"QoS policy update with placement: handle missing key

Closes-Bug: #1898994
Change-Id: Ibb826346117cd5cc824fff55d123497a19370f5c"
ebb866310b48cbad2ae772e0551aaf994858a51e,2020-10-09 18:23:23+00:00,"Filter supported extension for OVN mech driver

OVN mechanism driver has support for  a defined set of ML2 API
extensions. When the ML2Plugin is loaded, the OVN mechanism driver
will return, from the loaded plugin extensions, only the supported
subset.

Change-Id: Id23aa1c107504d47b08007752159b07f089c3090
Related-Bug: #1888829"
2325ad1950412d3eef0cde848c56bb94fbbb7495,2020-10-11 19:40:20+00:00,"Add locks for methods which sets nat rules in router

Router_info class and port_forwarding L3 extensions are using same
instance of the iptables manager class and it could happend that
method which sets address scope rules and method which sets
port forwarding nat rules where run in almost same time and
one of them was adding rules which wasn't expected to be added.
Because of that port forwarding rules wasn't configured properly.

This patch fixed that by adding lock for methods which are changing
rules in iptables_manager's nat table in both router_info and
port_forwarding extension.

Change-Id: Ic1d5f893a81b7b841745da82f38b7583e47e468d
Closes-Bug: #1896735"
526693ed3cea0db0f5d882d8935794b43e853bdc,2020-10-12 12:15:58+03:00,"Remove ML2OVS-specific templates before migration to OVN

When running migration from ML2OVS to ML2OVN using infrared plugin
some ML2OVS-specific templates remain in 'overcloud deploy' command.
This is not correct and can cause issues.

Change-Id: I41c81cd42ab85395cb5fc56f339d14f2e939ebbc
Closes-bug: #1896470"
d2f8a2bea8eab491b626a66a847883fe8ac871e6,2020-10-13 10:57:57+00:00,"Rehome api tests for propagate_uplink_status

Since [0] was merged propagate_uplink_status value is True,
tempest (and neutron-tempest-plugin) is branchless, so
test_create_port_without_propagate_uplink_status and
test_create_port_with_propagate_uplink_status can be moved to
fullstack tests to keep the coverage.

[0]: https://review.opendev.org/744208

Change-Id: I8dfe76e75aa932e587d91f475317b7bac1f02ed9
Related-Bug: #1890842"
df2c7baa23b814ccd118fb69d16427b2bf59cecc,2020-10-13 15:55:47+00:00,"Make test_agent_show only look for its own agents

Since plugin agents are a global resource, relying just on the
'type' field for test_agent_show may end up finding an agent that
we don't know about, and that agent could be deleted by another
test. This reworks test_agent_show to sepecifically look for its
own OVN controller agent and test agent.

This also adds the 'id' field to the returned agent_status from
create_or_update_agent() to make it possible to look for the agent
that was just created.

Change-Id: Ib840e7c51f7b918b5e17ce9deff9ceafacf063cc
Closes-Bug: #1899004"
9d38c069809cffb35e4236e41b9442514e9f42c5,2020-10-14 15:16:30+02:00,"Disable dstat service temporary in ovn scenario jobs

Multinode OVN jobs are failing very often due to bug [1] so
lets disable dstat service in those jobs for now as workaround
of the problem.

[1] https://bugs.launchpad.net/ubuntu/+source/dstat/+bug/1866619

Change-Id: Id9bb16d9e3e649e1538bc33bd1b7e8eab7e74048
Closes-Bug: #1898863"
0705699e6072f0862cee7749de7f7633ecc9dcfd,2020-10-15 15:49:05+00:00,"""scope"" conversion only just before pyroute2 method call

In ""IpAddrCommand.list"" method, the ""scope"" parameter is a string
(""link"", ""site"", ""global"" or ""host""). This method will retrieve all
devices with an IP address calling ""ip_lib.get_devices_with_ip"".

Since [1], ""ip_lib.get_devices_with_ip"" makes the conversion of
""scope"" string parameter to pyroute2 format (see
""pyroute2.netlink.rtnl.rtscopes""). The list command should skip then
the previous conversion.

Closes-Bug: #1899141

[1]https://review.opendev.org/#/c/747406/

Change-Id: I55a0f4341b328af52ea3bd758a72f633fbe3abcb"
8fc80b7e132031d18c787b5be582c146d262de74,2020-10-15 16:35:24+00:00,"ovs firewall: fix mac learning on the ingress rule table when ovs offload enabled

In RULES_INGRESS_TABLE table 82 there is a rule for allow established and
related connections. The current rule sends the packet directly to the dest
port without doing a mac learning. This is causing ovs to age out the dest mac
of the remote VM and causing the rule to be changed in flood rule. For the normal
case it fine as they try to avoid high cpu. ovs hardware offload reduce cpu usage
by moving some of the packet processing to nic and flood rule is not offloaded,
therefore it prefre to use the NORMAL action to avoid the flood rule.
We also keep the same logic as today when using explicitly_egress_direct=True
which avoid NORMAL action in the entire pipeline.

Closes-Bug: #1897637

Change-Id: I9b611d62be5d0529e8b35e3d8280baa5be54bc2b"
4dca7fae87d9bea01e01f786465fdb4d8231dc69,2020-10-15 19:56:49+02:00,"Keepalived version check

[0] introduced keepalived_use_no_track config option which defaults to
True.
Here I add and extra runtime check to check keepalived version, and
only if that version is bigger than 2.0.0 add the no_track option to
the keepalived config file.

[0] https://review.opendev.org/745641

Change-Id: I16dce5b3faf62ce02535170a1b0e1ad22ee8ac30
Closes-Bug: #1896506"
4937928652e91e8e14c2c96d3ed8a46201068ac4,2020-10-15 17:20:15-05:00,"Server-side push notifications for address groups

Adds server side code to enable the ML2 plugin to push notifications for
address groups. A follow up patch adds the corresponding code for the
OVS agent to process the notifications.

Change-Id: I49fc6e41a69f849a14da2ae67d1e4bff561dd4ec
Related-Bug: #1592028"
2ece1002d258e3388607e7df7677a0afae98d2cd,2020-10-16 15:16:51+03:00,"Fix ovs agent, avoiding import error

A recent change[1] added a ""iptables_firewall"" import to the
ovs agent, which isn't importable on Windows[2]. This prevents
the neutron ovs agent from starting on Windows.

This patch updates the security group driver check, avoiding the
unsupported import.

[1] Iecf9cffaf02616342f1727ad7db85545d8adbec2
[2] http://paste.openstack.org/raw/799030/

Closes-Bug: #1899775

Change-Id: I8877dbf4b0b9cd185ae0b8715b7e8e6d87e0afcc"
b4211c8c540b861c45bdcfe9f62d45ec515a09c2,2020-10-19 10:20:15+00:00,"Implement ""find_parent_pid"" natively

Use Python native libraries instead of shell calls.

Closes-Bug: #1900268

Change-Id: Iaad9e2b3374b5c81f83c780d306685773af719ed"
aa2f05870106d0402f4bd4c3f425c62ed11a2e7a,2020-10-19 10:21:54+00:00,"Implement ""get_process_count_by_name"" natively

Use Python native libraries instead of shell calls.

Closes-Bug: #1900269

Change-Id: If6eafb7f5f26ab127ab5432ce85096d052a20b0c"
71e08b88135419f80b1972b68f6cff3248059969,2020-10-22 12:48:23+00:00,"Treat Forbidden as NotFound in Designate

this is a followup to I7cbb0e87a7e87f23ccf5d8750835b4785693473a

In case the zone was deleted out of band, or was not there in the first
place, keep the behavior of retry with ""all projects"" designate client
the same as before (just log exception and proceed)
by treating Forbidden from Designate as DNSDomainNotFound.

Change-Id: Ia42c1f86a4182b446455e9a1d794d3f57afefbda
Related-Bug: #1875981"
14a1ad7009fb20f21bf58accbd339264bebed3b9,2020-10-24 08:27:38+00:00,"Revert ""Process ingress multicast traffic for 224.0.0.X separately""

This reverts commit b8be1a05facff2ba8b484902494ce1663e0aae7c.

As was reported in bug [1] this patch broke multicast traffic send
from ports with disabled port security. And that broke L3HA routers
as keepalived processes couldn't talk to each other.
During attempt to fix that issue with keepalived we found out another
corner cases which we may break and in fact to fix them, we would
effectively revert this change and allow multicast traffic for all
ports in e.g. networks with ports which have port security and ports
which don't have port security and are on same node.
As we also don't really know what other corner cases we may hit going
further with that, lets revert this patch.
As a follow up patch I will propose new patch which will document
differences in handling multicast traffic between iptables and
openvswitch based firewall drivers.

[1] https://bugs.launchpad.net/neutron/+bug/1899967

Change-Id: I37a8b33cf8e16d5bb5dc1966fc2dca6bb619026c
Closes-Bug: #1899967"
2f66cb8182f6c1f07018584b7a4d721c03b5711a,2020-10-26 11:07:45+01:00,"Deprecate config option ""keepalived_use_no_track""

Change-Id: I448365bad076e67b32198277101f188fbfc3dece
Related-Bug: #1896506"
d60febb2d3e141d03f033ac81136ba71922613a0,2020-10-28 12:57:15+01:00,"Remove deprecated use_veth_interconnection option

Using veth to interconnect openvswitch bridges was deprecated
in Victoria cycle. Now it's time to remove it from the code.

In neutron-ovs-agent code, there is still kept piece of code which
migrates from the veth to the patch ports for bridges interconnection.
We will be able to remove that piece of code in X release.

Change-Id: I94545c3c3d9be46ac2062691f69663e5e59cd648
Closes-Bug: #1587296"
d842d0dbf0e1870595eb9d1bf168691832cec1aa,2020-10-29 10:59:46+00:00,"[Docs] Add info about how multicast is treated by fw drivers

This patch adds info about how multicast traffic is treated by
openvswitch and iptables based firewall drivers.
Patch [1] was trying to fix behaviour of OVS based driver to make
it similar to how iptables drivers works but it introduced bug [2]
which we wasn't able to fix without basically disabling what [1] did
for some ports on the compute nodes.
So based on that we decided to revert [1] - it is done in [3] and to
document different behaviour between those 2 firewall drivers which is
done by this patch.

[1] https://review.opendev.org/#/c/748719/
[2] https://bugs.launchpad.net/neutron/+bug/1899967
[3] https://review.opendev.org/#/c/759555/

Change-Id: If8a56579c62f58befdc57f5916a5763e9fb99531
Related-Bug: #1899967
Related-Bug: #1889631"
e392fb68c508e9bcd1390245879a28d34b1fa381,2020-11-04 08:54:19+00:00,"Don't fail if FIP is not in port forwarding cache during cleaning

Lets use set's discard() method instead of remove() to not raise
an exception when port forwarding or FIP is removed from port forwarding cache,
and FIP is not in cache actually.

Change-Id: Idf91002dc8ad4b16218c6a332a93c744218be73a
Related-Bug: #1896735"
b207f05ba718ccbb3c3404b531ac7bc5605c5580,2020-11-04 09:36:25+00:00,"Log dissasociation event when a FIP is deleted

If a floating IP has an associated port, when the floating IP is
deleted, a disassociation message is logged.

This is related to LP#1842327. Neutron does not consider the floating
IP deletion as a disassociation event thus is not logged. This patch
completes the original implementation [1].

[1]https://review.opendev.org/#/c/679667/

Change-Id: I3a01d967be09cca4db060057948d087d17e0791b
Related-Bug: #1842327"
2df49fa879eda377c6f7489cfbe0659be29d2366,2020-11-04 11:29:35+00:00,"Check project_id/tenant_id in API call

When project_id/tenant_id is present in an API call, Neutron
checks first if this project exists. If not, a HTTPNotFound
will be thrown.

This patch is tested in neutron-tempest-plugin:
https://review.opendev.org/#/c/754390/

Closes-Bug: #1896588

Change-Id: I6276490d4df69ec0f2c9a1492b9b03d1130c7c05"
ad0605f9c3cced115c829c57dbeb0ee96b5ad8bb,2020-11-06 09:17:52+00:00,"Add process name to AsyncProcess

Since [1], Neutron sets the name of some processes (Neutron agents).
The ""ps"" output is modified consequently according to the defined
string:
  ""<process name> (<process command>)""

""AsyncProcess"" class should use the process name to parse the ""ps""
output correctly.

Closes-Bug: #1902678

[1]https://review.opendev.org/#/c/735125/

Change-Id: If33c49c0f3e1e6696f5d2aa4008b287dc3f76c61"
7842344a774b9cd098d07b65e410440e91cc8f3c,2020-11-06 11:17:26+00:00,"Add property ""noopfirewall_or_firewall_disabled""

Added new property to ""SecurityGroupAgentRpc"" class,
""noopfirewall_or_firewall_disabled"". If the security group API is not
enabled or the firewall configured is ""NoopFirewallDriver"", the property
will return ""True"".

Related-Bug: #1732067

Change-Id: I64db2f259462570e4c1d8df7396d188519071431"
b97a8eb488aec0ee9afed0ceeb3d45caeb37ffdb,2020-11-09 14:05:03+04:00,"Auto-remove floating agent gw ports on net/subnet delete

fip agent gw ports may be left in DB after router removal due to
race condition between l3 agent and server: when server processes
""router delete"" - l3 agent is still processing ""router add"" and creates
fip agent gw port after server already removed the router.

The patch also adds handling of external network delete event
to cleanup fip namespaces left on agents due to same race condition.

Change-Id: Ib2f3aca08946e584156d092c37e1ea5ed5ca81a6
Closes-Bug: #1902998"
531d337db5fec668437beba48f65134d44b255db,2020-11-09 12:48:53+00:00,"Remove left over code for admin_state_down_before_update

The extension in neutron-lib was released in 1.29.0 so it is time to
use the extension from neutron-lib.

Change-Id: Id2bd872646feede7179affe8c7d124b4530afc9d
Related-Bug: #1811166"
25a694c0984a472cab988e34062a0bce92100a60,2020-11-09 21:23:47+00:00,"Agent side push notifications for address groups

Adds agent side code to enable the OVS agent to receive address groups
from the push notifications cache.

Change-Id: I1f27eccb2a69c553631fdc12d34e9025925844c5
Partial-Bug: #1592028"
dcf7acf2c6b12208cc41dde7f02ea5642d6c471c,2020-11-11 08:59:31+00:00,"SimpleInterfaceMonitor filter events by bridge name

Add a filter in SimpleInterfaceMonitor. If provided, the Interface
events received will be filtered by port. For each Interface event
received, the bridge name will be retrieved and compared with the
list of bridge names given.

If no names are provided, the monitor won't filter any event
(current behavior).

This filter is meant to be used in Fullstack test only. This filtering
add an extra overload (two OVS DB queries per event) that should not
be needed in a production environment.

Closes-Bug: #1885547

Change-Id: Ie1fc8cf7d29c71eb358e593726b446787d8022c2"
a217a5d29094bd68196bff54f8055defdc9ffe13,2020-11-13 15:49:34+00:00,"Add port NUMA affinity policy

Added a new port extension: NUMA affinity policy. This extension adds
the ""numa_affinity_policy"" parameter to the ""port"" API and specifies
the NUMA affinity policy per port.

This parameter is passed to Nova when a virtual machine is created.
Nova will use this information to schedule the virtual machine.

For backwards compatibility, this parameter will be ""None"" by default.

Depends-On: https://review.opendev.org/#/c/740058/
Closes-Bug: #1886798

Change-Id: Ie3d68c098ddb727ab8333aa1de4064e67a4f00a7"
b5eadca521ec6169c36345e6f79e1aa52b37dbf4,2020-11-14 17:17:52+00:00,"Implement ""find_child_pids"" natively

Use Python native libraries instead of shell calls.

Closes-Bug: #1900270

Change-Id: I3602cbe33183a8476eb332c85fcf399b211dda07"
323781d9f0992dc3691620ca0a366afae4ed34ee,2020-11-16 11:23:01+01:00,"[ovn] Add 'net-mtu-writable' to supported extensions

This patch is adding the 'net-mtu-writable' extension to the
supported extensions list of the OVN plugin.

Without it, network creation with an MTU different from the
default (1500) will fail. Right now, devstack is working
because this extension gets loaded as a side effect of loading
'logger' but we should enable it by default.

Closes-Bug: #1901534

Depends-On: https://review.opendev.org/760446
Change-Id: I9ff47d8f678c95a6d6594f47ebca6175fdcc5453
Signed-off-by: Daniel Alvarez <dalvarez@redhat.com>"
78858e6719f621544748adb63a80f87c61ff460b,2020-11-16 13:56:39+00:00,"Add ""standard_attr_id"" to some OVO dictionaries

Included standard attributes ID in some OVO dictionaries to improve
the OVN revision numbers operation. Having this ID, there is no need
to retrieve it from the database.

The following OVOs have been updated:
- port
- network
- subnet
- security group
- security group rule
- router

Closes-Bug: #1904188

Change-Id: Ia16335a2fc8f9324b9489692c76a73e4ef5bef96"
489e0ead7297e3b17ca2bf8c4bea9701ad14a939,2020-11-16 21:56:30+01:00,"Fix migration from the HA to non-HA routers

In case if during switching HA router to be down, there will be any
failure, router_info will be stored in L3 agent's cache as HaRouter.
In case when next update on the router is migration to non-HA router
this is wrong class and it causes other issues, e.g. with
remove_vip_by_ip_address() which is correct only for HA routers.

This patch fixes that issue by adding check of the router's ha and
distributed flags and update local cache with new router_info class
in case if at least one of those flags don't match.

Change-Id: Ib0d3a501f88c149baea7d715c7cfe5811bc85e4f
Closes-Bug: #1892846"
b495f4abbbbd871d5289ff10bbefb795c02fbe94,2020-11-17 14:58:22+00:00,"[OVN] Make OVN IPv6 job voting again

This job neutron-ovn-tempest-ovs-release-ipv6-only was
broken due to a os-vif misconfiguration which is now fixed by
https://review.opendev.org/#/c/753575.

Change-Id: I7c89659e0de130f0c4b720ee7489d895a308f69d
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
7cf52bb5325ac73b7afa3212cb84d29831e3724a,2020-11-18 10:25:00+01:00,"Fix migration failed due TypeError of new_vlan_tag

There could be a situation, when there are ports
with port_tags None created in OS infra.

Under normal circumstances, it would take some error
to the log and go further.
But only because there is a ""new_vlan_tags must be string""
in that log, it is throwing out typeError and dropping
the execution of code and the migration is ending by code 500.

And this is all done without a message from
the log, which is extremely bad.

This patch is fixing this behaviour, and flow
goes on.

Change-Id: Id4ba8d32e6b2301f25c12f83a0708b62aa5b9d6d
Closes-Bug: #1903989"
e009ba0f620d3c98a8582978b24cc65414882c6f,2020-11-18 19:27:24+01:00,"Remove left over code for availability_zone_filter

The extension in neutron-lib was released in 1.17.0 so it is time to
use the extension from neutron-lib.

Change-Id: Ia414c4c6870897ac6f3dfdc8e33c355eba7f34ff
Related-Bug: #1733362"
fd335b40373c4b5e7f9ddac3e02dcd9a9917118a,2020-11-19 10:17:24+00:00,"Import packaging.version explicitly

""packaging.version"" should be imported explicitly to avoid the
following error:
  >>> import packaging
  >>> packaging.version
  Traceback (most recent call last):
    File ""<stdin>"", line 1, in <module>
  AttributeError: module 'packaging' has no attribute 'version'

This patch also inclues ""packaging"" in the requirements file.

Change-Id: Ibd277e2fcc152fcf7c81ef7470e3beb0c668575c
Closes-Bug: #1904854"
4cde6fb5adeea884a04f03cea53def823a6cdaaa,2020-11-19 10:50:29+00:00,"Remove neutron-tempest-{iptables_hybrid,linuxbridge} jobs from CI

This patch removes jobs:
neutron-tempest-linuxbridge
neutron-tempest-iptables_hybrid
from the Neutron check and gate queues.

Most of the test run there are not backend dependent and they are run in
the neutron-tempest-multinode-full-py3 job too.
Some tests which may be impacted by different backend/firewall driver
are added to the neutron-tempest-plugin-scenario jobs now.

Additionally this patch removes also
neutron-tempest-plugin-dvr-multinode-scenario from the docs summary as
this job is not run in the check queue for some time now (it's moved to
the experimental queue).

Depends-On: https://review.opendev.org/#/c/761410/
Change-Id: Ica669e05f719568dad74c4e8bd69ddceadccea7e"
3c0d57c884d574485ac6fb4cad52caec5f220df4,2020-11-19 09:14:28-03:00,"Set metering iptables chain not found LOG level to WARNING

When routers are migrated from one Neutron agent to the other, the metering IPtables
rules are removed, which can cause some exceptions that can be ignored. The metering
agent already handled this situation. However, it logs the message as an ERROR, which
can triggers alarms. Therefore, we propose here to change the LOG message from error
to warning.

Closes-Bug: #1904874
Change-Id: I1805a07cef7fc7d7b041e582a4d79fb1a805df71"
d2187e8aa232e89d268bb6e36b814be2cfadf141,2020-11-19 17:41:07+01:00,"Add irrelevant-files for tripleo standalone jobs

Now that these job depend on tripleo-ci-centos-8-content-provider job to
run, they should have the same list. Else, these jobs will try to run
while the parent one did not, generating zuul errors as seen for example
in [1]

[1] https://review.opendev.org/#/c/763218/

Change-Id: I2bf2d25f6a6f651a740578e92720676975f8283f"
b4795abef9c0208ec47dd56e292d12cee1b29516,2020-11-20 14:05:39+08:00,"Adds a unique index to quotas

now table quotas not set unique index in project_id and resource,
when set quota concurrently, there may be multiple quota limit
records for the same resource.

Closes-bug: #1893314

Change-Id: I78d2a5accd81a58cf4d6f3be26942a4780f5d43f"
0b98de07732a0abe5d03300ce5ac8ce835fa40a4,2020-11-23 12:36:10+00:00,"[OVS] Remove sleep during polling cycle

OVS agent is a single threaded process with several eventlet threads
listening to RPC messages. During the polling cycle, the green thread
executing this code should not return or give the execution token to
other thread. Any other thread attending to RPC messages or OVSDB
events will be attended but should be processed at the end of the
cycle.

This patch removes a sleep introduced in the middle of a OF creation
and forces to have a sleep (even with time 0) at the end of the
polling cycle.

Related-Bug: #1905271

Change-Id: I14a9a212074a450d0e9ffd72dc05906d592542c5"
55f5c78053ac21e0e7fdcec063b80efe4494c845,2020-11-23 16:23:36+00:00,"Remove ""ovs-vsctl"" support from rootwrap

This command is executed from scripts and in sanity checks, but not
from any Neutron service.

Change-Id: If82e89bf7b233559513ab44eadebb445648f0684
Story: #2007686
Task: #41282"
ab6c59b57e732def62e3817a80d081b8392d669a,2020-11-25 14:40:33+00:00,"Fix calling of add_tunnel_port method from sanity checks module

Sanity checks functions which are checking if vxlan and geneve tunnels
are available in openvswitch are now passing all mandatory parameters
to the ovs_lib.OVSBridge.add_tunnel_port method.
Previously port_name was missing.

Closes-Bug: #1905568
Change-Id: Iae86705f1d30c89dc5482261d852b45787bd8782"
9dc8bca7401106313cb227cb85d07eba7d987cb5,2020-11-25 16:47:57+00:00,"[OVN] Fix inconsistent IGMP configuration

Prior to this patch the IGMP configuration for ML2/OVN was inconsistent
with the configuration option description and also the ML2/OVS driver
because it was flooding traffic to unregistered VMs [0].

The ""igmp_snooping_enable"" configuration option says:

""Setting this option to True will also enable Open vSwitch
mcast-snooping-disable-flood-unregistered flag. This option will disable
flooding of unregistered multicast packets to all ports.""

But, in ML2/OVN that behavior was inconsistent prior to this patch
because it allowed traffic to flood to unregistered VMs. This patch
fixes it.

[0]
https://opendev.org/openstack/neutron/src/branch/master/neutron/conf/agent/ovs_conf.py#L36-L47

Change-Id: I5cbe09e26120905b29351d61bbadb30b5dd14938
Closes-Bug: #1904399
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
5783e952887b2fe5e8aaa32b3077e8dcdefa7252,2020-11-25 19:55:32+00:00,"Ensure ovsdb_probe_interval set before connect()

Setting the ovsdb_probe_interval after Connection.start() is
called means that the probe interval is not changed from
python-ovs's default of 5s until after the initial copy of the
database is retrieved. On busy systems, this can time out and
cause infinite reconnects.

This patch passes the probe_interval argument to the ovs.db.Idl
class so that it can be set as part of creating the jsonrpc
Session.

Some unit tests were removed and replaced with a functional test
which ensures not just that set_probe_interval is called, but that
the value is actually set before the connection is established.

Closes-bug: #1905611
Change-Id: I8c940ac8f7632c69607dea7220146ef59d55ed56"
fc1fe016aa4e77c982da8ea0e6c7b88d7c1dad68,2020-11-26 09:55:13+00:00,"Neutron ovs agent: set mtu of smartnic port

The smartnic port's MTU should be set according to the network's MTU
which the port belongs to.

Closes-Bug: #1899864
Change-Id: Ibcc29c998065da521b35e5845727794a68782db0
Signed-off-by: Xiaoyu Min <jackmin@nvidia.com>"
8ebd54d1bcb6d4437cf9501f1c5993177747fac2,2020-11-26 12:10:55+00:00,"Improve the CIDRs overlap check method for router add interface

If an external network have multiple subnets, the router whose
external gateway at the network will have all routes about those
subnets. So, when a internal subnet was added to the router, all
subnets of the the network which the router's external gateway
belong to need to be joined to check whether the CIDRs is
overlapped.

Also, this patch revert the patch [1]
[1] https://review.opendev.org/#/c/473356/

Change-Id: Id5d8ac09a38c656619f88a6f87b8f384fe4c55a8
Closes-Bug: #1903433
Depends-On: https://review.opendev.org/763621
Depends-On: https://review.opendev.org/763626"
4852dbd37639478aa06aba524cfc1bf421c0453a,2020-11-26 16:38:02+01:00,"Remove left over code for filter_validation

This extension in neutron-lib was released in 1.18.0 so it is time to
use the extension from neutron-lib.

Change-Id: I992b37fed0cf4898a730f19e49690050017ec0a7
Related-Bug: #1749820"
9c236db3bf18854aef5a29a37dd83bff8bda2f7d,2020-11-27 08:58:17+01:00,"[OVN] ovn-metadata-agent: Retry registering Chassis at startup

This patch adds a retry mechanism on the register_metadata_agent()
method from the OVN metadata agent to make it more tolerable to the
start up order of the services.

Change-Id: If0e5a64e5f692c781fb5e6a68b948b611c694ab0
Closes-Bug: #1905700
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
8ae10de297c1f8dac421540aa69244a6d9db26a8,2020-11-28 05:08:16+00:00,"Add OpenFlow10 protocol in OVSAgentBridge.setup_controllers()

Some (custom) OVS bridges could be created by nova/os-vif when
plugging VM interface. For such bridges neutron does not call create(),
only setup_controllers() - as a result such bridges support only
OpenFlow13 and ovs-ofctl command fails.
Please see bug for details.

Change-Id: I86dc7d5dd0cd7b19a042498d35785510fecc7446
Closes-Bug: #1905538"
510089bc5fc08b81df24e67923000e5c56dfda66,2020-11-30 09:54:25+08:00,"Upgrade RPC version of SecurityGroup*Rpc

A partial upgrading of neutron cluster, neutron-server
has a newer version while neutron-agents not, does not
run well after a RPC data structure upgrading. This
patch upgrades the security group related RPC version
between neutron-server and agents. A partial upgrading
neutron cluster will explicitly raise error. The RPC
version should be aligned.

Closes-bug: #1903531
Related-bug: #1867119
Change-Id: I6cb2ba05fa3337be46eb01f2d9f869efa41e4db6"
62729d4e74f615fff36ba7be6662fa7dda562ef2,2020-11-30 10:21:57+01:00,"Replace assertItemsEqual with assertCountEqual

assertItemsEqual was removed from Python's unittest.TestCase in
Python 3.3 [1][2]. We have been able to use them since then, because
testtools required unittest2, which still included it. With testtools
removing Python 2.7 support [3][4], we will lose support for
assertItemsEqual, so we should switch to use assertCountEqual.

NOTE(dmllr): added hacking check

[1] - https://bugs.python.org/issue17866
[2] - https://hg.python.org/cpython/rev/d9921cb6e3cd
[3] - testing-cabal/testtools#286
[4] - testing-cabal/testtools#277

Change-Id: I7c20fec08e5dc9f67b34100c925ea6724bbd25f0"
002874e5a8db2ecede315f9dd2f221ae28856c53,2020-12-01 17:51:21+08:00,"Fix TypeError for port_binding

The function get_binding_levels can return None if the binding
host is None. But the patch [1] did not handle such case. When
the code hit the max retry limit, it will raise a TypeError.
This patch adds a data check condition before the loop.

[1] https://review.opendev.org/c/openstack/neutron/+/606827

Closes-Bug: #1906381
Change-Id: Ifd68bf3f6bd61ae8f38e9e92d736f62f4f4f48cc"
533e93816d5d0ee4cc5243ad81952a3a52cc2eae,2020-12-02 11:38:44+01:00,"[ovn] Add 'security-groups-remote-address-group' extension to OVN

The extension was added in [1] but it was not added to the list of
supported extension in OVN plugin so it fails in non-devstack
environments when using OVN.

This patch is adding the extension to the list of extensions in OVN
plugin.

[1] https://review.opendev.org/c/openstack/neutron/+/751110

Closes-Bug: #1906500
Change-Id: I6b89e8f58ee09959e656874f29c645c5bc8daedc"
80e6781bc2d2b39e547e80996743d29ec090c816,2020-12-03 13:06:58+01:00,"[GRE] Add possibility to create GRE tunnels over IPv6

In case when IPv6 addresses are used for GRE tunnels, tunnel
type set for the openvswitch interface should be ""ip6gre"" instead of
""gre"" which was set so far.
This patch changes that so now Neutron configures correct GRE tunnel
types.

Change-Id: I557af0bcafac4583ad9726c9bf707cf1fb92ffc5
Closes-Bug: #1904564"
8d6c301301e33697fd4eb4d6de53f680b909a04d,2020-12-09 13:17:51+01:00,"Update requirements for recent pip failures

Bump astroid test requirement to 2.4.0
Older versions trigger an error on wrapt dependency:
https://github.com/PyCQA/astroid/issues/755

Bump pylint accordingly to new astroid

Fix some new PEP8 warnings appearing with new versions, and filter out
the larget I202 ""Additional newline in a group of imports"" one for now

Drop psutil from functional requirements, it indicated an old version
and we have it in common requirements now

Bump a series of lower-constraints and requirements to work with new pip
resolver, testing with steps outlined at:
http://lists.openstack.org/pipermail/openstack-discuss/2020-December/019285.html
This includes eventlet 0.22.1, previous versions triggered a hard to
track error on enum34
Cap cryptography in lower-constraints to prevent discovery failure in
relevant job (other jobs have it capped via upper-constraints)

Change-Id: Ie74ea517a403e6e2a7a4e0a245dd20e5281339e8
Closes-Bug: #1907242"
a6dbf97242caa3be646e8eb6b1502b5e59e123fd,2020-12-09 20:15:39+00:00,"Deprecate XenAPI support

The configuration options are now marked as deprecated for
removal in X release.

Any related code is deleted. Neutron does not support XenAPI,
same as Nova [1][2].

[1]https://review.opendev.org/#/c/749304/
[2]https://review.opendev.org/#/c/749309/

Change-Id: Ifdb2200a5dac3508fdf8907bdd1f4547dff35341
Story: #2007686
Task: #41269"
7c95150c84d77f3eae69def5b1328243ccec248a,2020-12-10 10:07:46+00:00,"Temporary blacklist test_reboot_server_hard in OVN IPv6 job

It's blacklisted due to related bug. When the bug will be fixed we
should restore this test to be run in the gate.

Change-Id: I67df1820bfd681de44b8568b46cbc95dd940c024
Related-Bug: #1906490"
0aa7f5b5117945499a8511987668d6c59fc680e5,2020-12-10 10:08:08+00:00,"Add some wait time between stopping and starting again ovsdb monitor

In functional tests of the ovsdb_monitor, sometimes during high load
of the host where tests are run, ""error"" message from the killed process
can be received by neutron's async_process after new process was
already spawned.
And that causes failure of the test as new ovsdb_monitor will not
receive events which are expected.

To workaround that issue this patch adds sleep for few seconds between
stopping old and starting new ovsdb_monitor process.

Closes-Bug: #1907068
Change-Id: Ib37a52a623943ae4b6a4ec829c5d12a74514e86c"
e70e3ab4558a2e7c448bac475041d436d7348816,2020-12-10 10:09:29+00:00,"Disable dns-integration API extension if it's not enabled in ML2

In case when dns-integration ML2 extension driver isn't enabled,
ovn_l 3 service plugin will now not load ""dns-integration""
API extension to list it as supported.

Closes-bug: #1906311
Change-Id: I6a7ff14057d80196feb5fd9d47a6a73b29bc768d"
f63dc09206a41c85edc92117c3e9cf3a3d49b820,2020-12-10 10:10:01+00:00,"Limit usage of resources in the fullstack tests job

To limit usage of resources (mostly memory) in the fullstack job and
to avoid oom killer to kill e.g. mysqld service, this patch:

* Makes number of API workers changeable by tests, as a parameter to
  EnvironmentDescription and defaults its value to 1. As neutron server
  is spawned separately for each test and is used only to process just
  few API requests during that single test so this should be still
  enough there, and where more API workers are needed (like some dhcp HA
  tests: TestDhcpAgentHARaceCondition) it can be changed,
* reduces number of test run workers from 4 to 3 - job will run slower
  but hopefully more stable,
* in the functional and fullstack tests job definition disable etcd3
  service - this will not save us a lot of memory but still it's not
  needed at all so why to run it there.

Change-Id: If19803ab6db144e2d17d6805d379c1c76d8fa343
Closes-Bug: #1906366"
26a30a3b78bfaf6d3f8ce6271b1a7415440c602c,2020-12-10 17:18:50+00:00,"[OVN] Ensure metadata checksum

Ensure the TCP traffic leaving the OVN metadata namespace has
the checksum correctly populated. This is necessary when the
OVS datapath is ""netdev"".

Because the overhead added is minimal and only applies to the
metadata traffic inside the metadata namespace, this rule is
always set.

Change-Id: I7e39f40b325a6974a46ed34641cec5226c9e5a3f
Closes-Bug: #1904871"
0a0f647ea05d3de3820e9dab26ded8c528eee835,2020-12-13 21:50:31+00:00,"Delete HA metadata proxy PID and config with elevated privileges

Both files cannot be deleted with the default permissions because
those files are created by the ""root"" user.

Change-Id: I73dd37b3104fac8d3172f520f71cffd85d040c4b
Closes-Bug: #1907695"
5a058d5019ae652615a765822a1a04f0b1ec8d61,2020-12-13 22:44:11+00:00,"[OVN] Skip maintenance IGMP snoop check if not LS name

In case a logical switch has no name, skip the maintenance IGMP
snoop check.

NOTE: Neutron defines the logical switch name with the pattern
""neutron-<network_id>"". This logical switch does not belong to
Neutron.

Change-Id: I1ccdadf8e90e0bbce13294cc329ed43e90fa0259
Closes-Bug: #1896203"
91eb3d8346a8964aa046d1e016d571056de868de,2020-12-14 00:56:54+00:00,"Handle router HA port concurrently deleting

Router HA port may be deleted concurrently while the plugin
is trying to update. This patch catches the known exceptions.
Should not `plugin.update_port_statuses` use because:
1. plugin.update_port_statuses will hide all exception
   no matter the port exists.
2. The code just needs to catch the port not found error,
   but let all other exception raised if port still exists.

Closes-Bug: #1906375
Change-Id: Id5d9c99be3bd6854568d2b1baa86c25c0cfd4756"
b4070c975274f53a4a2caaabeb5af55683232d3d,2020-12-15 23:39:08+01:00,"Fix multicast traffic with IGMP snooping enabled

In the ML2/OVS when igmp_snooping is enabled but there is no
external querier multicast traffic will stop working after few minutes
as packets will not be flooded to tunnel/external bridges.

So this patch sets ""mcast-snooping-disable-flood-unregistered"" option
of the br-int to False (default value) even when igmp_snooping is
enabled in the neutron-ovs-agent's config file.

Additionally it configures ""mcast-snooping-flood-reports"" and
""mcast-snooping-flood"" on patch ports in br-int to True.

That way we can provide best effort snooping: multicast isolation where
IGMP queriers are available and flood everywhere else?

Closes-Bug: #1884723
Change-Id: Iefa0044dba9e92592295a79448e5d57d9e14a40b"
329ea19f8b881421b9b5ae2fcc855f96af72a9f5,2020-12-16 10:57:22+05:18,"Fix removal of dvr-src mac flows when non-gateway port on router is deleted

Removal of non-gateway port on DVR router deletes all the DVR to
SRC mac flows for the instances of same subnet on that compute node.
The instances are not reachable from any other network.

This patch checks if the DVR router port is gateway for the subnet
or not. And deletes the DVR-SRC mac flows only if it is gateway port.
The DVR-SRC mac flows are deleted if the gateway is not set for the subnet.

Change-Id: Iadc1671c862f8c01e5761e92b82a04849d4bb411
Closes-Bug: #1892405"
2618acff516e5cfd2437dabf550cc3c3c7972b9f,2020-12-16 16:33:01+00:00,"Ensure ""keepalived"" is correcly disabled

To stop a ""keepalived"" process, a SIGTERM signal is sent. This patch
checks if the process is not present in the system. If the instance
is still running after a short time, a SIGKILL signal is sent.

Change-Id: I2e784ea7e00c145135288bf309bb34ce311ac15c
Closes-Bug: #1908057"
c6034bf7f421541bad3f1a7e120e0f6bfa71cabc,2020-12-17 11:54:08+01:00,"New fullstack test for subnet port delete race condition

Segment delete can fail if the subnet related to the segment is deleted.

Related-Bug: #1878632
Depends-On: https://review.opendev.org/727796

Change-Id: I9a656cee769d2ba515d00d2acbd28a3c2f641ff7"
c613ede9fa79eeabeb23002a6eb9ba9a9b2ac15f,2020-12-17 14:21:30+01:00,"Floating IP for routed networks: network:routed API

This change is needed for enabling floating IP's on routed networks.
To be able to create a subnet that spans all segments of a routed network,
a special subnet service type of 'network:routed' is used to denote a
network that can span all segments of a routed network.

To create floating IP's on a routed network, the subnet must be created
with a service_type of 'network:routed'. After the subnet has been
created, floating IP's can be allocated and associated as before.
See the design spec https://review.opendev.org/#/c/486450/ for
reference.

One caveat for this approach is that it requires the underlying
infrastructure to be aware of and able to route /32 host routes
for the floating IP. This implies that in practice, use of the
'network:routed' service type should be done in conjunction with
one or both of the following:

1. Third-party SDN backend that handles this service type in its
   own way
2. neutron-dynamic-routing and the BGP service plugin for announcing
   the appropriate next-hops for floating IP's. This is compatible
   with DVR and non-DVR environments.

Depends-On: Ibde33bdacba6bd1e9c41cc69d0054bf55e1e6454
Change-Id: I9ae9d193b885364d5a4d90538880d8e9fbc8df74
Co-Author: Thomas Goirand <zigo@debian.org>
Partial-Bug: #1667329"
93225e016b4957e9c5635985fe9685269fa2556e,2020-12-18 10:05:11+00:00,"[OVN] Update metadata port ony for requested subnet

When a subnet is updated or created, the metadata port is updated too,
to add the fixed IP address of the new subnet. In this case, the port
should update only the IP address of this specific subnet.

Change-Id: I05394e49077a72199bbc80c8cb622ec2b17f2fa7
Closes-Bug: #1890432"
715f5f51c4847f46270353c3efceaa8f56c46635,2020-12-18 14:26:46+00:00,"Check router interface not in use properly

_confirm_router_interface_not_in_use uses subnet cidr
and does not account for other subnets with same cidr.
Need first check that router actually has interface from this
subnet.
Also _confirm_router_interface_not_in_use is more expensive
than check for router ports, so its better to perform it after
confirming router has interface from this subnet.

Closes-Bug: #1906508
Change-Id: I406703209cdd720f6fea1a1f15711dc527e1cdb0"
9f158922b67cd5a3085a06818dd56b3f115a1b98,2020-12-21 17:45:55+08:00,"Refactor the Neutron OSKenApp class

Move the duplicated code to a base class BaseNeutronAgentOSKenApp.

Authored-By: Swaminathan Vasudevan <SVasudevan@suse.com>
Co-Authored-By: Slawek Kaplonski <skaplons@redhat.com>

Related-Bug: #1774459
Change-Id: I10c64c318cf04692c30eff6cb718450ea174caf0"
c4007b0833111a25d24f597161d39ee9ccd37189,2020-12-21 09:32:15-05:00,"Rely on worker count for HashRing caching

The current code looks at a hash ring node's created_at/updated_at
fields and tries to determine whether the node has been updated
based on whether updated_at - created_at > 1 second (due to the
method that initially fills them being different by microseconds).
Unfortunately, due to the notify() method being called which calls
the hash ring node's touch_node(), a node can be updated in under
a second, meaning we will prevent caching for much longer than
we intend.

When using sqlite in-memory db, this continually re-creating the
Hash Ring objects for every event that is processed is exposing an
issue where rows that should be in the db just *aren't*.

This patch instead limits the hash ring nodes to api workers and
prevents caching only until the number of nodes == number of api
workers on the host. The switch from spawning hash ring nodes
where !is_maintenance to is_api_worker is primarily because it
seems to be difficult to get a list of *all* workers from which to
subtract the maintenance worker so that _wait_startup_before_caching
can wait for that specific number of workers. In practice, this
means that RpcWorker and ServiceWorker workers would not process
HashRing events.

A note on bug 1903008: While this change will greatly reduce the
likelihood of this issue taking place, we still have some work to
do in order to fully understand why it rubs the database backend
in the wrong way. Thus, we will make this change 'related to'
instead of closing the bug.

Related-Bug: #1894117
Related-Bug: #1903008
Change-Id: Ia198d45f49bddda549a0e70a3374b8339f88887b"
d0c5c4764d3863460f7ed1bff753d213c06c1d44,2020-12-22 16:48:12-05:00,"[ovn]: fix usage of lrp_set_options api to use **options

set_gateway_mtu() in ovn_client was passing in options dictionary
to ovsdbapp's nb idl lrp_set_options [1] improperly: it needed it to
be expanded.

[1]: https://github.com/openstack/ovsdbapp/blob/e36f3270e67d899848341e205ec2f95addd48899/ovsdbapp/schema/ovn_northbound/api.py#L559

Closes-Bug: #1909038
Change-Id: Ib3c8ee48873f3c63c9dc24e4641b392fe7883699"
b9e725ed72ed09c6815fc7c4c901c70bf2bbab24,2020-12-24 16:27:13+00:00,"Change the logic of ""catch_exceptions""

Changed the logic of decorator ""catch_exceptions"" to provide a
Pythonic output: if succeeds, returns True; if fails, returns False.

Change-Id: Idbf2ffb4ef403f343973bde3b3599f9cd3aaddf2
Story: #2007686
Task: #39975"
3df21ee4727d9e9c43fa11670637c5f697b2c0c3,2020-12-24 17:00:06+00:00,"Implement ""FdbInterface"" with Pyroute2

Change-Id: I4b03151ed10b1c5af36fd803e96e9d2f95e88247
Story: #2007686
Task: #41494"
2340ad217b198735b6bdcddf86d40d0f8c79f7bf,2021-01-05 09:40:15+00:00,"ovn: Support live migration to DPDK nodes

Previously, the vif-plugged event was emitted only when port VIF type
was set to normal. In DPDK case, the type is vhostuser. This patch
matches the type too and emits the notification to Nova.

Closes-bug: #1910213

Co-Authored-By: Flavio Fernandes <flaviof@redhat.com>

Change-Id: I7b12a469ae7197028cf3695520084597f4256480"
0e0c7fa07ef378c580a9a79a9f71b7c15273044a,2021-01-07 12:23:59+01:00,"Add normalized_cidr column to SG rules

New API extension was added in [1] to extend security group rules with
""normalized_cidr"" read only attribute.
This patch implements this API extension in Neutron ML2 plugin and
extends security group rules with ""normalized_cidr"" value.

[1] https://review.opendev.org/#/c/743630/

Related-Bug: #1869129

Change-Id: I65584817a22f952da8da979ab68cd6cfaa2143be"
6b0ae48381061ceded39bfbb6f942e58570fc819,2021-01-08 08:31:26+00:00,"Check the revision number only once

When an OVO revision number transaction constraint is requested
in the HTTP header, the OVO standard attributes revision number
should be checked only once, because:
- The revision number constrain refers to a single resource; only
  a single check is needed.
- Some backends (OVN), execute more than one DB transaction.
  As reported in the related LP bug, the second time the OVO is
  checked during the second DB transaction, the revision number of
  the OVO has been bumped and does not match with the original
  number requested.

Closes-Bug: #1909008

Change-Id: I25c36b1604e5855a22960f1b504a79f740c134bb"
6ad1527ff88615add80f7f68f0c74340bfed7836,2021-01-08 09:51:02+00:00,"Match Linux and Windows ""execute"" signature method

Remove ""do_decode"" input parameter from ""utils.execute"" method
signature. This input parameter is no longer used.

Despite there is no common API definition for both OS methods
implementations, the methods are imported depending on the running OS.
That means the signature of the implementations should match.

Change-Id: I23c7856efa3968b53608233c05a8ff2491fe68a3
Story: #2007686
Task: #41558"
ab6d4afd954d3afb0c07287915077b96121dd0fe,2021-01-10 05:13:34+00:00,"Avoid race condition when processing RowEvents

In https://review.opendev.org/#/c/753824/ ovsdbapp adds the ability
to pass a ""frozen"" object to the RowEventHandler so that if a
transaction is started from the main thread that changes the row,
it won't step on the values that the Event is trying to process.

This patch switches to using the ovs_idl backend-specific
RowEventHandler which converts the row to a frozen_row.

Change-Id: I87489596e2ff224431f7e83f43a1725172ee0953
Related-Bug: #1896816"
82ddc5ee1ecfd92c998787cf62ac2a099ee08a61,2021-01-10 16:40:53+00:00,"Randomize port name in ""BaseOVSTestCase""

Randomize the port name creation in ""BaseOVSTestCase"". Also check the
execution error when an OVS port is created.

Change-Id: I989b6b1903e3296d20e4ef6a7770aa7b78f58b46
Related-Bug: #1910717"
75e030dfbdcf3c76fbc75d7cebf84b0a2ec5e026,2021-01-11 08:28:32+08:00,"neutron-server api worker process should be named to their role

The function of class ""ProcessLauncher"" is to fork multiple processes.
the function of ""WorkerService.start"" is provider api service and set
process title according to the parameter desc. when multiple API
processes need to be launched, use ""ProcessLauncher"" (in module
oslo_service.service) manage. call ""ProcessLauncher.launch_service""
with the num of processes and service instance to real launch. when the
""ProcessLauncher"" launch the service, it calls the ""start"" method of
the service directly without passing any parameters.

Starting API processes, the service object passed in is WorkerService
(in module neutron.wsgi) object. In the current design, pass the ""desc""
in call ""WorkerService.start"", therefore, the desc cannot be set.

This patch add the ""desc"" parameter to the initialization, when call
""start"" method, if set ""desc"", it will be used first. if not, ""desc""
passed in initialization are used. this design solves the problem and
keeps compatibility.

Closes-bug: #1910623

Change-Id: Ia37182e572ac4e9ae83cd03d7008aa42c7ea36c8"
e0f15c59828bc95c7de56475f036b8867f85d3f6,2021-01-11 17:00:27+00:00,"Add WaitForPortCreateEvent in BaseOVSTestCase

When a port is created, the test case will wait until the IDL event
is raised and the port is effectively created and the local DB
cache is updated.

Change-Id: I660baccde67a040731538276fc6dff05a10efb68
Related-Bug: #1910717"
e007349d47812f2307e8951ed44f3c392089bb3b,2021-01-12 07:33:06+00:00,"Optimize get_ports with trunk extension

Use case: many trunk ports (300+) each with many subports.
Issue: get_ports takes much time.
Solution: apply trunk resource extend func for a full list of ports,
not for each port individually, thus avoiding a DB query for each
trunk port.

The approach will be extended for other resource extenders, like QoS,
and probably for other resources as well.
QoS: https://review.opendev.org/c/openstack/neutron/+/764454

Change-Id: Ic08e4049f6156c0700ca3c7aee251b6eb0eb97da
Closes-Bug: #1905268"
a37dc71ad6032ee21ccda52a9b1150ecd8e9dfc4,2021-01-12 19:55:37+08:00,"create or delete port forwarding, update the floating ip status

create port forwarding, should set floating ip status running, delete all port
forwarding, the floating ip status should be down.

Closes-Bug: #1910334

Change-Id: I8b3e4bf6b3cac3a95ea76b85dd4882ddafc962c8"
64598ed51aee9d42af22275b226bf661ae58fa96,2021-01-12 12:02:40+00:00,"[FT] Remove unneeded DB migration tests

The following test classes are not needed anymore because the tested
case is not considered in the OpenStack release roadmap [1]. The DB
migrations considered on these test cases are currently not supported.
Any deployment should have a DB schema newer than the scenarios
tested and therefore those tests are not needed.

Although in most cases the test cases are not revisited, those ones in
particular are quite slow (""test_walk_versions"" takes more than one
minute in a testing environment) and have a particular history of
problems [2][3][4].

List of removed classes:
- TestHARouterPortMigration*: added 4 years ago.
  https://review.opendev.org/c/openstack/neutron/+/364278
- TestMigrationToPluggableIpam*: added 4 years ago.
  https://review.opendev.org/c/openstack/neutron/+/181023
- TestNetworkSegmentNameDesc*: added 4 years ago.
  https://review.opendev.org/c/openstack/neutron/+/367690
- TestHARouterPortMigration*: added 4 years ago.
  https://review.opendev.org/c/openstack/neutron/+/343936
- TestQosStandardAttr*: added 4 years ago.
  https://review.opendev.org/c/openstack/neutron/+/357228

[1]https://releases.openstack.org/
[2]https://review.opendev.org/c/openstack/neutron/+/610003
[3]https://review.opendev.org/c/openstack/neutron/+/612505
[4]https://review.opendev.org/c/openstack/neutron/+/636892

Change-Id: Ib7e89cf76ccc5c4318fde8e21d20833f6f99e80d
Related-Bug: #1911153"
d4ae574fd3cfac631ad46a437b0d81f7f60e0c38,2021-01-12 13:56:06+00:00,"[FT] Add the datapath binding wait event to the watched list

In other to wait for a OVN DB event, the WaitEvent subclass must be
added to the DB notification handler.

Change-Id: If4476725f72bde110f9ce1a1507c672d428d52e5
Related-Bug: #1884986"
24393a6e99adb0c8d4136135a420f801e7d96c5d,2021-01-12 17:59:39+00:00,"Add debug information for TestMinBwQoSOvs

In case QoS rule is not applied correctly, the list of OVS QoS and
queue registers will be printed in the log.

Change-Id: Ie77f70652af54d1d6bccb3c93a70f39e37f840a1
Related-Bug: #1909234"
5d8f3fd614e4149dfd6ab67749f64ee0ef62afc7,2021-01-13 16:17:14+08:00,"Do not report ovs agent state if ovs is dead

Do not report ovs agent state when ovs is dead,
and let neutron-server mark service as down. So
cluster admin could determine there is a problem
of the given ovs agent

Change-Id: Ib4b06c7877a7343f4204d4f4f5863931717ff507
Closes-Bug: #1910946"
f8a22c7d4aa654eaad3b683073849c873ea3beff,2021-01-13 11:13:41+00:00,"[OVS] Fix live-migration connection disruption

The goal of this patch is to avoid the connection disruption during
the live-migration using OVS. Since [1], when a port is migrated,
both the source and the destination hosts are added to the profile
binding information. Initially, the source host binding is activated
and the destination is deactivated.

When the port is created in the destination host (created by Nova),
the port was not configured because the binding was not activated.
The binding (that means, all the OpenFlow rules) was done when Nova
sent the port activation. That happend when the VM was already
running in the destination host. If the OVS agent was loaded, the
port was bound seconds later to the port activation.

Instead, this patch enables the OpenFlow rule creation in the
destination host when the port is created.

Another problem are the ""neutron-vif-plugged"" events sent by Neutron
to Nova to inform about the port binding. Nova is expecting one single
event informing about the destination port binding. At this moment,
Nova considers the port is bound and ready to transmit data.

Several triggers were firing expectedly this event:
- When the port binding was updated, the port is set to down and then
  up again, forcing this event.
- When the port binding was updated, first the binding is deleted and
  then updated with the new information. That triggers in the source
  host to set the port down and the up again, sending the event.

This patch removes those events, sending the ""neutron-vif-plugged""
event only when the port is bound to the destination host (and as
commented before, this is happening now regardless of the binding
activation status).

This feature depends on [2]. If this Nova patch is not in place, Nova
will never plug the port in the destination host and Neutron won't be
able to send the vif-plugged event to Nova to finish the
live-migration process.

Because from Neutron cannot query Nova to know if this patch is in
place, a new temporary configuration option has been created to enable
this feature. The default value will be ""False""; that means Neutron
will behave as before.

[1]https://bugs.launchpad.net/neutron/+bug/1580880
[2]https://review.opendev.org/c/openstack/nova/+/767368

Closes-Bug: #1901707

Change-Id: Iee323943ac66e566e5a5e92de1861832e86fc7fc"
7a204f63e92b570d0ff872e3cb47555abd6174b2,2021-01-13 16:40:41+00:00,"[fullstack] Be able to delete port when fake VM is destroyed

When a VM fixture is destroyed, the port now can be deleted instead
of unbinding it. That will update the ML2 plugin cache. When the port
is actually deleted from the system, the ML2 agent should detect it
and trigger the deletion process.

Change-Id: I0ecbaf6f6e0b5b6b538956f2b47e7f11ce21341b
Closes-Bug: #1909234"
19b137aeed77a05a2107e63d4566323351668f00,2021-01-15 15:57:17+00:00,"[FT] Do not fail when decoding the JSON from ip_monitor

When reading the JSON blob from the file written by ""ip_monitor"",
do not fail if the JSON blob is decoded incorrectly.

Change-Id: I0b3a3cf94b1d0ae721d5446c8abcf74bd29883c7
Closes-Bug: #1911927"
eac107a0d4c665651318a076f9c40de75ba181bf,2021-01-16 00:06:49+00:00,"In OVO PortForwarding, retrieve FIP info from db_obj

In OVO PortForwarding, the synthetic fields 'floating_ip_address'
and 'router_id' are retrieved from the floating IP related to this
port forwarding.

PortForwarding contains, in the db_obj, the floating IP DB object too.
Instead of retrieving the OVO FloatingIP for each field, the db_obj
is read instead.

In a testing environment with 300 port forwarding registers per
floating IP, the retrieving time for a list query goes from 35 seconds
to less than one second.
  $ openstack floating ip port forwarding list $fip

Change-Id: Ib2361fe4353ca571363e9a363e08537a3402513f
Closes-Bug: #1911462"
66e045360cc23ff1533ad5df866e7a0574eabcbe,2021-01-16 06:46:38+00:00,"[FT] Wait for the ""neutron-keepalived-state-change"" init message

When the process ""neutron-keepalived-state-change"" is started, wait for
the initialization message ""Initial status of router"", printed in the
logs, before starting any other operation.

Change-Id: Ifff470c00eae0be1f4a5a882d3b03fd5ccae9d8e
Closes-Bug: #1911925"
c84ae9762c2bae84a3f5f20cfb01b8ef00f46118,2021-01-18 11:03:56+00:00,"[FT] Reduce ""test_walk_versions"" upgrade executions

""_TestWalkMigrations.test_walk_versions"" is inherited in other classes
to check a specific DB revision upgrade. The goal is to, from the
previous DB revision, create a testing condition and then upgrade to
the related DB revision. If the upgrade is correct, the test should
pass.

This patch reduces the number of Neutron DB upgrade operations to
just three:
- Upgrade the DB to the previous DB revision to check.
- Upgrade the DB to the related DB revision, after setting the testing
  conditions.
- A final upgrade up to the latest DB revision.

In a testing deployment, this reduces the execution time from 60 seconds
to 35 seconds, without reducing the testing scope.

Change-Id: Iffdc0373ed72aea1320155ea8bec93dce797f27c
Related-Bug: #1911153"
a7e02cdb17350de6948af37a8304c1962cb70392,2021-01-18 11:13:43+00:00,"[QoS] Get only min bw rules when extending port dict

Only min bw rules are required hence no need to fetch
all rules of QoS policy.
Also no need to get qos policy from DB

Partial-Bug: #1905726
Change-Id: Iad29cb34825adaa8c766d01b192a6bbe9992148b"
1bbb31f46c19d29afb3fd223532d729de54e3639,2021-01-18 12:53:46+01:00,"[fullstack] Use delete_port attribute of destroy VM

test_subnet_delete_race_condition fullstack test deleted port as a test
step, but now destroy can do that.

Change-Id: If54d7349f629585106151794f52c16c3d5b3c26f
Related-bug: #1909234"
67f856e1e5b32951f39b88a2aeec4b99f77a7922,2021-01-18 11:57:39+00:00,"Provide object tagging using the tag plugin

Provide ""tag"" information to QoS policy, Trunk and Network Segment
Range objects using the tag plugin extension. This is the Neutron
defined way to extend an object dictionary using the standard
attributes.

Change-Id: I7bf4986a4d2628d0fa69e57199d59bd6ca4eafdc
Closes-Bug: #1704137"
9676c28f9c6fd3e2eff34a6f621368a2d4c8d783,2021-01-19 13:43:58+01:00,"Fix stopping timer in TestTimer

Fixes broken functional tests where NamespaceFixture is used and
the TestTimer raises TestTimerTimeout even if the namespace was cleaned
up in time.

The fix makes sure that the alarm is cancelled in __exit__ if there
was no alarm before TestTimer's __enter__ (if self._old_timer is 0).
It also makes sure to reset the signal handler if the old one was
Handler.SIG_DFL (which is treated as false, no we need to check for
""is not None"" instead).

Closes-Bug: #1912320
Change-Id: I9efad8eb5fe6e794235280f8a9a026800513d969"
4c12d10a248d44c14cda43f500db8b5b41c96628,2021-01-19 16:38:20+00:00,"[FT] Add lrp port binding wait event failure message

In case a lrp port binding event fails, report the lrp ID to help
the debugging process.

Change-Id: Ib53d39b317aae36bbb746d260442b7a132355425
Related-Bug: #1912369"
9c2029c2c81fe32a41a39bf7e1265bf1d90f61ea,2021-01-21 15:26:32+00:00,"Improve DHCP agent's debug messages

When new port is created dhcp agent checks if IP addresses which are
assigned to that port aren't already associated with different ports
which are in agent's cache.
When it finds such duplicate IPs, resync of the network is scheduled.

The problem is that debug message which informs about such duplicate
IPs isn't very ""verbose"".
With this patch it will log new and cached port ids as well as ip
addresses on both of those ports. That should make easier to understand
why such duplicates are in the cache.

This patch also adds logging when methods like
_{network|subnet|port}_{create|update|delete} are called and with what
arguments exactly. This should help investigation what exactly happens
with some specific port in the dhcp agent.

Related-bug: #1828423

Change-Id: I964a3d843aeedef424a4466932bf702ea1b4320e"
8912ea55755f61a85cf3406d9fab5f0af502d09d,2021-01-22 16:17:30+00:00,"Add port device profile extension

Added a new port extension: device profile (``port_device_profile``).
This extension adds the ""device_profile"" parameter to the ""port"" API
and specifies the device profile per port. This parameter is a
string.

This parameter is passed to Nova and Nova retrieves the requested
device profile from Cyborg. Reference:
  https://docs.openstack.org/api-ref/accelerator/v2/index.html#
    device-profiles

For backwards compatibility, this parameter will be ""None"" by
default.

Closes-Bug: #1906602
Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/767586

Change-Id: I1202a8388e64ae4270ef4ca118993504ae7c1731"
278978bb42aca99fb7b1fea45b44a752cfff6a7d,2021-01-24 17:18:55+02:00,"Add OVN migration OSP 16.2 option

In order to support OVN migration to OSP 16.2 we need to include
this option into OVN migraiton plugin spec file.

Change-Id: Ib52052d9a178a9246a83963cfa8e2c297ee0d94f
Closes-bug: #1912948"
2a6fd9d44d8ab1eed038ad1348ed767bd6a6e61a,2021-01-25 08:21:39+00:00,"Optimize get_ports with QoS extension

Apply qos resource extend func for a full list of ports,
not for each port individually, thus avoiding DB queries for each
individual port.
This should drastically improve port list time in case of many
ports/network with QoS policies assigned.

Change-Id: I1d0b3975ae6e92e34e9da20a0e26ce024422d332
Closes-Bug: #1905726"
088bfc79c40f56498526c76bdf6575bce42528e2,2021-01-26 11:41:13+01:00,"Fix mock of the _is_keepalived_use_no_track_supported

In some of the UT for keepalived module, this check function wasn't
mocked so tests were failing on node where keepalived was actually
installed and was supporting ""no_track"" option.

Closes-Bug: #1913280
Change-Id: I0d20186a69d884b0b7912838f28d401ce4610d29"
ffafc5f31e1d594da9c2b61b18ba144049c360b0,2021-01-26 09:52:21-05:00,"[ovn] Metadata agent: fix checking datapath type

This patch is fixing the code which retrieves the datapath type of
the integration bridge. The query to the OVS IDL was never executed
and the comparison was wrong, hence failing to determine when
to apply the iptables rules on DPDK scenarios introduced by [0].

[0] https://opendev.org/openstack/neutron/commit/26a30a3b78bfaf6d3f8ce6271b1a7415440c602c

Related-Bug: #1904871
Signed-off-by: Daniel Alvarez Sanchez <dalvarez@redhat.com>
Change-Id: I25147f676a5f22536888e72f21deee23c13063b6"
bfb8ef01990fc8a5ee0a32c6207e61b4eb11d526,2021-01-29 11:51:14+00:00,"Fix typo in ""DhcpAgent.enable_isolated_metadata_proxy""

Change-Id: Iecf1b9ce1472ae73dee9642e949e3fd14d69ed68
Related-Bug: #1460177"
9651c635b7ab412074b9366633a8bd20589ef91e,2021-02-01 09:11:12+01:00,"Temporary make rally job non-voting

We need to fix bug [1] and then make this job voting again.
But for now lets unblock the gate by making it non-voting
temporary.

[1] https://bugs.launchpad.net/neutron/+bug/1913718

Change-Id: I1129132967895cd59b0576db82a2ff659c778493
Related-Bug: #1913718"
7be2dc976a98e377ce05237eefaf79524904e5cd,2021-02-03 13:06:34+08:00,"Change ARP reply MAC to router interface

In some scenario, dvr router interface will try to ARP some device
which is not hosted in the same host. When the ARP request send
out, the ethernet source MAC will be changed to dvr_host_mac. Then
thoses devices will reply ARP with the dvr_host_mac in ethernet dest
MAC. So finally the dvr router interface will drop this, and the ARP
get failed.

This patch adds one flow for this, it will match the dest MAC, ARP
op-code=2 and arp_tha address, then change the dest MAC to the right
router interface's MAC address.

Closes-Bug: #1913646
Related-Bug: #1859638
Change-Id: Ibc7f01450a3da026ca5c4fb667dada912cf472e3"
412160b97fc398f105c3f7386b928eeec2d9e60a,2021-02-03 09:27:32-05:00,"Fix losses of ovs flows when ovs is restarted

Reinitialize conj_ip_manager when OVS is restarted.

Closes-Bug: #1912651
Change-Id: I5b5cf563f0c3d6ea352303f76323177cffc57c6e"
d2073d655694f8b7e9b4c4440a81e31a4b582c81,2021-02-04 17:04:43+08:00,"Remove flows for ARP reply MAC change

When router interface is removing, delete the related ARP reply
MAC change flow.

This is a follow-up of:
https://review.opendev.org/c/openstack/neutron/+/773597

Closes-Bug: #1913646
Related-Bug: #1859638
Change-Id: Ieb8886f68a80ac213fa08013ea73099d29597395"
f3c229b9cc5c293b4d512f269d5ddb3708fd303a,2021-02-04 15:39:10+00:00,"Process DHCP events in order if related

When processing port events (create, update, delete), the port
provisioning (port creation) has priority over the other events [1].
As reported in the related bug, if a port deletion with an IP
address and another port creation with the same IP address arrive
to the DHCP agent, those events can be processed in the same queue.

Because of the creation event priority, even when this event arrived
after the deletion event, it will be processed first. That will
clash with the DHCP agent cache, that contains a port (not deleted
yet) with the same IP address. That will trigger an unwanted resync.

This patch implements a specific logic to store the events in
""ResourceProcessingQueue"" (that uses ""PriorityQueue"" [2]). When
a port event arrives, the event comparison method checks the
(subnet, fixed_ips) tuple set of both elements. If there is a
coincidence, that means those ports are the same or are using
the same IP addreses (the race condition explained in the bug).
In this case, the priority is defined only by the timestamp;
that means the events are processed in order of arrival.

Because the Neutron server do not allow to have two ports in the
same subnet with the same IP address, the order of the events is
guaranteed. In the case explained in the bug, the deletion event
will be processed first.

[1]https://review.opendev.org/c/openstack/neutron/+/626830
[2]https://docs.python.org/3/library/queue.html#queue.PriorityQueue

Closes-Bug: #1913723

Change-Id: I89438feae3c0244f6da5e6a2a035d45b956ac247"
257a51769bb070600ca3d6bc169cf530bd33f1a3,2021-02-05 10:14:41+00:00,"Drop meaningless translation marker

The translation marker _(..) wrapping a variable is meaningless
as no string is extracted and there is no way to translate them.
Only rare exception is the same string is defined in somewhere else
but I've never seen such situations so far.

In addition, we now only support translations in user-visible messages
used in API, so we can safely drop translation markers in exceptions
in the agent side.

Change-Id: Ie1d837d17bf50a4675bec4fe48ab13dde22ebdc2
Related-Bug: #1600788"
e05101c8ac953cc2823b35aaed3d499afc101988,2021-02-05 15:32:02+01:00,"Fix update of trunk subports during live migration

During the live migration trunk subports where updated only based
on the ""host_id"" field. But when rpc message to update subports
is send trunk's port is still bound to the old host and has
""migrating_to"" field in binding:profile set to the new host.
Because of that binding:host_id for the subport's port wasn't updated
proberly and port was set to DOWN on the new host.
That could even cause connectivity break if L2population is used in the
cloud.

This patch fixes that by updating subport's binding:host_id field based
on the migrating_to field if that is available and not empty.

Closes-Bug: #1914747
Change-Id: I98e55242d381ada642ca0729e9aefdea7628c945"
013c183d7c1a16d07f5acae9e29b157b0ffd8fae,2021-02-05 16:07:39+01:00,"Don't try to create default SG when security groups are disabled

If security group API is disabled, there is no point to create default
security group for tenant when e.g. network is created.

Closes-Bug: #1913297
Change-Id: Ib73babdd563e3e8c21ce6f63456cc87af414c5aa"
27255fce30f570b549b026346fb10b7d0dca9039,2021-02-05 18:59:44+00:00,"Convert OvnDbNotifyHandler rows to frozen rows

In I87489596e2ff224431f7e83f43a1725172ee0953, the intent was to
make sure all event rows were converted to ""frozen"" rows to avoid
race conditions. Since OnvDbNotifyHandler.notify() does not call
super(), then it is necessary to do this conversion ourselves.

Related-Bug: #1896816
Change-Id: Ic281dec74a46c95024a6df1db3b1f9ee7d7d1227"
d452e7868756935b074cc2026262e588e9523413,2021-02-05 19:07:53+00:00,"add_fake_chassis() may need to create a Chassis_Private

If the Chassis_Private table exists in the schema, add_fake_chassis
will need to create it since we aren't running ovn-controller.

Closes-Bug: #1914754
Change-Id: Ie36cb025540c158fbbed4126be5d654888715300"
e9e4395d578e40bb59272b409c7ca3617ec1e6e3,2021-02-06 02:40:02+00:00,"Fix incorrect exception catch when update floating ip port forwarding

Closes-Bug: #1912596
Change-Id: Ib1a95dd41d25f39f3378a6728d752a6589b9b61c"
c89c1f53db288143ef95362971d8db86b8f978ff,2021-02-06 16:22:43+00:00,"Remove rootwrap execution (1)

Replace rootwrap execution with privsep context execution.
This series of patches will progressively replace any
rootwrap call.

This patch replaces some ""IpNetnsCommand"" command execution
methods.

Change-Id: Ic5fdf221a2a2cd0951539b0e040d2a941feee287
Story: #2007686
Task: #41558"
7928b0d755714418fe1837748eb73a44adf4c1fd,2021-02-06 16:23:03+00:00,"Remove rootwrap execution (2)

Replace rootwrap execution with privsep context execution.
This series of patches will progressively replace any
rootwrap call.

Change-Id: Id3db4fbba44dd5644563481b6767ad0acbdcfb3e
Story: #2007686
Task: #41558"
a7bedd7428ffb5516a897475552fe928a9abc57f,2021-02-06 16:26:20+00:00,"Remove rootwrap execution (3)

Replace rootwrap execution with privsep context execution.
This series of patches will progressively replace any
rootwrap call.

This patch migrates the execution of ""ebtables"" command to
privsep.

Story: #2007686
Task: #41558

Change-Id: I05deec2f021e1b146fa3f6f7f9b37084df06d59d"
bf14c725bbb6ce710a45c55d1dd00eee2fb53f62,2021-02-06 17:24:38+00:00,"Stop metadata proxy gracefully

HAProxy supports hard stop [1] via SIGTERM signal. From the
documentation:

  """"""
  ... when the SIGTERM signal is sent to the haproxy process,
  it immediately quits and all established connections are
  closed.
  """"""

In case the process does not finish, the SIGKILL signal is sent.
The PID file created by the process is deleted.

[1]https://cbonte.github.io/haproxy-dconv/2.0/management.html#4

Closes-Bug: #1910691

Change-Id: Ifa3734e8eb4e52b1a132c3351ecc2e15463298bb"
27da92d634168960e15aa9faf3776bcf357d46dd,2021-02-08 09:18:45+00:00,"[FT] Reset ""AgentCache"" singleton in functional tests

Reset ""AgentCache"" singleton instance after each functional test
execution. That will remove any stored information from the previous
tests.

Related-Bug: #1914754

Change-Id: Ibd8897ec04843a5d6eb8639cc0c6ef0e2b9d2a3b"
6c75316ca0a7ee2f6513bb6bc0797678ef419d24,2021-02-08 10:05:51+00:00,"Remove rootwrap execution (4)

Replace rootwrap execution with privsep context execution.
This series of patches will progressively replace any
rootwrap call.

This patch migrates any ""iptables"" and ""ipset"" command related
to privsep.

Change-Id: I4a1e137b2b414067504ad7c799d68f482bf3d36c
Story: #2007686
Task: #41558"
b618d98541599ad0ef73be41a3edd83d1fc75a56,2021-02-08 12:17:17+00:00,"[OVN] Fix RowNotFound exception while waiting for metadata networks

In the set_port_status_up() the OVN driver waits for the metadata to be
provisioned (15 seconds) [0] prior to sending the event to Nova notifying
that the provisioning of the port is done (network-vif-plugged). But
there could be a race condition while trying to get that information
which results in a RowNotFound being raise in the waiting loop.

Once that happens, the exception is bubbled up and the OVN driver end up
not sending the event to Nova and the instance will fail to deploy (it
will be stuck in BUILD state until it times out).

This patch changes the logic of the method looking for the metadata
network information to not raise RowNotFound so that the waiting loop
can iteract again [0] until the information is available.

[0]
https://github.com/openstack/neutron/blob/cbd72e2f4846ec64ff6e6ef24099a8e90ddebf31/neutron/plugins/ml2/drivers/ovn/mech_driver/mech_driver.py#L1124

Change-Id: I3c106ace74b5c6e4ed0cb7e827baf5d6595ec5d0
Closes-Bug: #1914394
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
f06268a8ffb5a0cb3d234c7c13a6808b9cce8263,2021-02-08 18:40:36+00:00,"Don't update AgentCache when Chassis_Private.chassis == []

When we delete a Chassis object when deleting an agent, the
corresponding value in Chassis_Private.chassis is automatically
set to []. Even though we use frozen rows, since we listen for
updates to Chassis_Private, we will replace the row in the
AgentCache with this new ""chassis-less"" entry, which will break
things since Chassis_Private.chassis is used to display information
which is only stored there like 'hostname'.

This patch avoids updating the AgentCache when Chassis_Private
has an empty Chassis field.

Related-Bug: #1914757
Change-Id: Iad01db7f33d6c61b29c552d2dc8893e2946a369a"
bfd6243fbf4968b357b48773d392522f3ab9a95f,2021-02-09 10:46:04+00:00,"policy: Allow deepcopying of 'FieldCheck'

This resolves an issue with oslo.policy 3.6.2. Previously, we couldn't
deepcopy these objects since they store a regex object which is not
deepcopy'able before Python 3.7. From the release notes [1]:

  Compiled regular expression and match objects can now be copied using
  copy.copy() and copy.deepcopy(). (Contributed by Serhiy Storchaka in
  bpo-10076.)

[1] https://docs.python.org/3/whatsnew/3.7.html#re

Change-Id: Ic2c66f304e300521c71828d3e811f18b43718d7e
Signed-off-by: Stephen Finucane <sfinucan@redhat.com>
Related-Bug: #1914095"
da8e6559637bc08cecb1c9b743327b20a904755d,2021-02-09 12:38:33+00:00,"Use agent chassis table based on schema

The patch determines a table that should be used for the agent API
in the runtime, based on the current available schema. It means OVN
database can be updated or downgraded while neutron-server is running
and agents will always report its liveness based on currently available
tables.

Change-Id: I679945b68acf391901c8602fb1828c46cd1eec55
Closes-bug: #1901527
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
8ee73b1a5d4590855ceeafd9decbb79f4d741898,2021-02-12 10:53:26+01:00,"Fix deepcopy of the OwnerCheck objects under uwsgi

Patch [1] workarounded problem with deepcopy of the FieldCheck objects
when running with Python 3.6 or older.
But it seems that we have yet another problem with oslo_policy 3.6.2.
This time it is issue with doing deepcopy of the instances of OwnerCheck
class when Neutron runs under mod_uwsgi.
This patch fixes/workarounds that by adding same implementation of the
__deepcopy__ method to the OwnerCheck class as [1] added to FieldCheck.

[1] https://review.opendev.org/c/openstack/neutron/+/774621

Closes-Bug: #1915494
Change-Id: Idf1dcdeaa94ae76cf057c4c04982dc1ee0478f86"
3c409561664ff33f2ececb78c5c852458525ba36,2021-02-15 11:02:26+00:00,"Move router gateway deletion out of transaction

Router gateway delete includes callback notification with
AFTER_DELETE event.
Callback manager does not expect it to be called inside transaction
and suppresses retriable DB errors. As a result it may return with
inactive DB session.

Router gw deletion was out of transaction before new engine facade
switch. IMO gw absence is still a valid state for a router that
eventually failed to be deleted for some reason.

Change-Id: Iba868be4d6da4d5ed12effd6705771e9a798a677
Closes-Bug: #1915271"
ba56843d51e1d01c398020c89d320571fb510c11,2021-02-15 14:59:07+01:00,"Change BaseLoggingTestCase setup for logging

96eae957b06e84dce45159faf1008de9a69a26e0 changed initialization for base
tests but logging configuration gets lost after super().setUp()

Revert this part as it is not needed in the end for tests to pass
properly

Change-Id: I4a8ca76920b0f174b37171c09653b6755a2dda5c
Closes-Bug: #1915272"
9079bba00a1ff5bebac1cdc8474121eb5c853de4,2021-02-15 14:25:40+00:00,"[OVN][QOS] QoS for distributed floating IP

When floating IP is distributed in OVN, the NAT is done locally
in the same host as the private IP port (same chassis). The QoS
rule match should have a local chassis port to apply the rule;
in this case, the mentioned private IP port UUID will match the
condition ""is_chassis_resident(port_id)"".

In the case the floating IP is not distributed, the current behaviour
is valid.

Change-Id: Ica5eae22bc989965e8a7e7595bc7be02d9f65640
Closes-Bug: #1915723"
ae22fe4495f90b69b5d753376d55e6150508ec5b,2021-02-17 08:37:12+00:00,"Add support for VNIC type vDPA to ML2/OVS and ML2/OVN

This change adds VNIC type vDPA (""vdpa"") to the list of
supported VNIC types for the OVS and OVN mech drivers.

Depends-On: https://review.opendev.org/#/c/760043/
Change-Id: If22aedc147f7e2256f8f8ad3bebb80b6bb2f6d3d"
393d484e07e53496ff068d14047c97d28febd03a,2021-02-17 15:50:44+05:18,"Fix deletion of rfp interfaces when router is re-enabled

1. When dvr router is disabled and enabled back, the rfp
interfaces are deleted on the nodes without snat-* namespace.
This is due to creation of snat namespace during router
initialization stage on all the nodes. At later stages, since
the gw_port_host is not bounded on this node, external gateway
is removed which triggers removal of rfp interfaces and snat
namespace.
Create snat namespace only on the nodes where gw_port_host is
bounded.

2. In case of DVR SNAT, when the l3 agent is rescheduled to
another node, the rfp interfaces on qrouter-* namespace are
removed. Instead of calling external_gateway_removed() which
further deletes the rfp interfaces, the qg-, sg- interfaces
need to be unplugged and snat namespace need to be deleted.

Closes-Bug: #1894843
Change-Id: Ic35c2f9bceacec8eeba67a2b1ea0cd0b0ffc72fe"
ce8361a66744539bebdae6b750c4fa437f203ca0,2021-02-18 08:55:08+01:00,"[L3HA] Bind metadata haproxy to IPv6 address if IPv6 is enabled

Patch [1] added possibility that haproxy spawned as metadata proxy in
the router's namespace can be bound to IPv6 address.
We misssed to add the same for the HA router, so when router was
switched to be active on the node, L3 agent starts haproxy for that
router but it was always bound to IPv4 address only.
That patch fixes it by adding check if IPv6 is enabled on host, and if
yes, it adds same config to the haproxy like it is in non-ha mode.

[1] https://review.opendev.org/c/openstack/neutron/+/715483

Closes-Bug: #1915495
Change-Id: Ie97cfe9fe0020929d9a1736d55ad92a5bd643072"
1e220d7136965acbfe50215d982cac0bd3dcf9c3,2021-02-18 09:14:23+01:00,"[OVS FW] Clean conntrack entries with mark == CT_MARK_INVALID

In case when security group is removed from port, connections
established to/from port which were hitting some of the removed SG
rules will be marked with CT_MARK_INVALID in the conntrack table.
Due to that such existing connections will be stopped.
But then if SG will be added again to the port, those conntrack entries
marked as invalid will not be removed and those hang connections will
not be revived.
To fix that, this patch adds deletion of the conntrack entries marked
with CT_MARK_INVALID and related to the port of which SG are
updated/added.

Closes-Bug: #1915530
Change-Id: I84718b8ac4d8d6e39426e1c4485c2d7fe28185dd"
9641b6dfeb6dadf104606016a1a791bebcd7ce87,2021-02-18 17:24:48+08:00,"Update doc for upgrading to openvswitch firewall

Change-Id: I5a8451370646d8d149c03283a2180e325a2d7b1c
Closes-bug: #1914522"
e4bbeee2060058d079885339e99ef7e6e366de16,2021-02-18 13:18:12+01:00,"Don't configure dnsmasq entries for ""network"" ports

Ports with device_owner like:
* floating_ip,
* DHCP,
* some types of router ports, like: HA interface interface,
* distributed ports,
don't need to be configured in the dnsmasq file.
So there is no need to reload dnsmasq every time when such port is
added/updated to the network.

This patch adds skip in such case which should improve load on the
Neutron DHCP agent.

Closes-Bug: #1913269
Change-Id: I63221507713b941c261cdf88781133149da8ab8d"
26f3de0f781b8cc48c4294d0cb36596c26777f70,2021-02-19 11:26:40+03:00,"Add minimum bw qos rule validation for network

Minimum bandwidth QoS rule is only applicable for the network which is
backed by physical networks.
It will raise exception when you want to set Minimum bandwidth QoS rule
or update rule on network without ports.

Closes-Bug: #1913180
Change-Id: I6ab945086b13730ad60957760bbc2eb5c321aca2"
5a419cbc84e26b4a3b1d0dbe5166c1ab83cc825b,2021-02-19 08:47:17+00:00,"Remove rootwrap execution (5)

Replace rootwrap execution with privsep context execution.
This series of patches will progressively replace any
rootwrap call.

This patch migrates some missing execution methods present in
the code and removes unneeded rootwrap filters.

Story: #2007686
Task: #41558

Change-Id: I1542dc4cf98658fc9a40018192498c7a5cd1c3fe"
4b5bcff64c4725b37f094dfd2613ec58f723d304,2021-02-19 11:43:56+01:00,"[OVS FW] Allow egress ICMPv6 only for know addresses

Before that patch it was possible to send ICMPv6 packets like e.g.
    neutron_lib.constants.ICMPV6_TYPE_MLD_QUERY,
    neutron_lib.constants.ICMPV6_TYPE_RS,
    neutron_lib.constants.ICMPV6_TYPE_NS,
    neutron_lib.constants.ICMPV6_TYPE_NA

And that could cause some security issues as instance could advertise
that it owns IPv6 address which really don't belong to it.

Now rules in table=71 which allows that traffic are ""per mac/ipaddress""
and are allowed only for fixed ips allocated to port and port's
allowed_address_pairs.

Closes-Bug: #1902917
Change-Id: I4749fdc6a6cabd253b971bf4010ff76f5593c59c"
591715b86e086bc42065a9bae1690927414100ad,2021-02-19 14:17:34+00:00,"Implement ""ip neigh flush"" with Pyroute2

Story: #2007686
Task: #41558

Change-Id: I00c676e234fd9f771d716def7e4388bf33004118"
f416060d41de0705b631eb3164c984543aecff99,2021-02-19 15:16:57+00:00,"[OVN] Set OVN mech driver ""resource_provider_uuid5_namespace""

Set a UUID v5 namespace for the OVN mechanism driver, that will
be used to deterministically generate Placement Resource Provider
UUIDs.

Partial-Bug: #1578989

Change-Id: I762b62cd38077a013d46eaf296614e102470f47a"
2bfe143d838193ccdc547f60c1e69ebac3cbd4fb,2021-02-22 23:14:50+01:00,"Use normalized_cidr of the SG in the backen drivers

Patch [1] introduced new, read only field ""normalized_cidr"" in
the security groups' rules.
With this patch this new field is send as source or
destination_ip_prefix field in the rule's dict in case if
remote_ip_prefix and normalized_cidr are set in the rule.

[1] https://review.opendev.org/c/openstack/neutron/+/749158

Related-Bug: #1869129
Change-Id: Icebe0255ce11eae859c05a273335b027da3f1545"
3398e6abc098a0dd8d0b441a729201adb9d96eca,2021-02-23 08:21:55+00:00,"[OVN][QoS] Remove OVN QoS rule when FIP is dissasociated

When an floating IP is dissasociated from an internal port, the QoS
rule in the OVN database should be removed too. This patch adds a
QoS extension call to delete the QoS rules in OVN in this case.

Change-Id: I00794e9c6403bbe528ea398b981e54d41d53b5a5
Closes-Bug: #1916470"
b168232e03825ae1d85ce57b870ae5897a1eb9cb,2021-02-23 17:19:39+08:00,"Make test_throttler happy

neutron.tests.unit.common.test_utils.TestThrottler.test_throttler
is failing with ""AssertionError: 1 not greater than 1"", change the
assert to assertGreaterEqual.

Change-Id: Iba29ab0b1141e731cc811e8bee076dd5726248b5
Closes-Bug: #1916572"
0d8ae1576724b196580c9af3782fd3c9e9072bef,2021-02-23 14:58:29+00:00,"Remove update_initial_state() method from the HA router

This method was intended to check state of the HA router on the
node and update it in the neutron server.
Patch [1] added check of the initial status to the
neutron_keepalived_state_change_monitor process.
It also could cause some race conditions and event which is setting
correct state of the router will be not processed thus router may endup
with two nodes with ""primary"" state in the Neutron's DB.

Neutron_keepalived_state_change_monitor was notifying agent about
router's initial state only if this state was 'primary'.
Now it will notify agent always to let agent set router's state as
'backup' if needed (that was previously done by this removed
update_initial_state() method).

[1] https://review.opendev.org/c/openstack/neutron/+/642295

Change-Id: I2cc58c30cf844ee0ecf0611ecdec430086464790
Closes-Bug: #1916022"
bdf1416958f79e8076397fcbf2fbbc920f964b37,2021-02-24 16:32:41+04:00,"Remove redundant _ensure_default_security_group

_ensure_default_security_group() is done in
_ensure_default_security_group_handler [1] on each port BEFORE_CREATE
event. No need to ensure once again right after sending this event.

[1] https://github.com/openstack/neutron/blob/084fa99874e882649aa6895941fa913b2b852868/neutron/db/securitygroups_db.py#L894

TrivialFix

Change-Id: I1bfe2a50b52502b5ab3631c016a617f7a9756cc6"
f0f6d6189a6f8d17b411e82337a97ec7cddd999a,2021-02-25 10:03:11+00:00,"[OVN] Fix RowNotFound: Cannot find Logical_Router

The execute() method in ovsdbapp has the log_error parameter set to True
by default; this was causing the RowNotFound error to be logged as part
of get_lrouter() even tho that exception was being handled correct (it's
part of the logic of that method to return None if the lrouter does not
exist).

This patch sets log_error to False in the execute() call. Note that,
check_error is still True, so any exception other than RowNotFound would
still bubble up from that method because it's not handled, that means
that we won't miss any other exception with log_error being False.

Change-Id: If96384030ef6ee8e92f684b839ab0ef7d2381d88
Closes-Bug: #1911132
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
303d24ab8a9f4e337cc76a837082888a976f99be,2021-02-27 10:06:35+00:00,"Allow to manually define the gateway IP when using subnet pools

Now is possible to define a gateway IP when creating a subnet using a
subnet pool. The IPAM subnet generator retrieves the available IP
ranges in the subnet pool and generates a list of candidate subnets
with the prefix lenght defined. If the gateway IP can be allocated in
one of those candidate subnets, the IPAM returns a valid IpamSubnet
that will be used to create a Neutron subnet.

Closes-Bug: #1904436

Change-Id: Ib1d1f591c4d0f59ebff3ddcb3be7b10b0b5e67dc"
a6cdf273c06a3bba713d7b8d0ef3a9b71b0ffc57,2021-02-27 10:07:03+00:00,"Improve ""get_devices_with_ip"" performance

As reported in LP#1896734, there is a limit in the size of information
that can be transmitted in one single message between an application
and the privsep daemon. The read socket buffer is limited in size;
a message exceeding this size will generate an exception.

In order to limit the amount of information to be sent, this patch
improves the performance of ""get_devices_with_ip"". In the previous
implementation, the whole list of network devices from a namespace
was retrieved. In some environments, the list of devices could be
so big that the list returned by ""privileged.get_link_devices"" can
exceed the read buffer size (as reported in the LP bug when the
OVS agent tries to retrieve the list of IP addresses in the system).

Now the function calls ""privileged.get_ip_addresses"", that returns
a much smaller list. This patch is also reducing the number of system
calls to just one; the previous implementation was retrieving first
the devices link information list (that method was returning a much
bigger blob) and then, per device, retrieving the IP address
information.

Change-Id: I97ada62484023b9833ed12afd68eb4c8d337fd1f
Related-Bug: #1896734"
0a4dcb18bbc96b347f14d98a959a238c008bf5fe,2021-03-01 12:15:40+00:00,"Remove ""IpCommandBase"" base class

""IpCommandBase"" class was implemented to provide a common interface
for all ""ip"" command subclasses. This base class provided a COMMAND
class variable, to define the ""ip"" shell command subparameter and
a two execution methods, ""_run"" and ""_as_root"".

Now all ""ip"" command classes have been migrated to Pyroute2, this
basic interface is not needed anymore.

Story: #2007686
Task: #41558

Change-Id: Ib7d30b954bef3bc3551f1ca206873df354d1ab23"
952c84779571a27777348aea80532b471e8ad01a,2021-03-01 23:31:09+01:00,"[Functional] Mock classes from the ovn maintenance module

Classes MaintenanceThread and HashRingHealthCheckPeriodics
are now mocked in the TestOVNFunctionalBase.

Closes-Bug: #1917370
Change-Id: Ie91a6a50fbda806f0c6ccafa9d3b38083715df65"
d9542b6a0164cbe0c0fd32b15d0d5db652d47a2f,2021-03-02 09:47:08+01:00,"Reduce number of the workers in fullstack gate job

Fullstack job is using different tox env in the gate
(dsvm-fullstack-gate). To reduce memory usage in that job, some
time ago, in patch [1] we reduced number of test workers from 4
to 3. But it was done for ""dsvm-fullstack"" tox env, not for
""dsvm-fullstack-gate"" thus it had no effect on our CI runs.
Now it is changed also in the CI job's tox env.

[1] https://review.opendev.org/c/openstack/neutron/+/764907

Change-Id: Iec949922be0779a00bf405c2f1d5646c588d323c
Related-Bug: #1906366"
662f483120972a373e19bde52f16392e2ccb9c82,2021-03-02 10:45:50+00:00,"[L3][HA] Retry when setting HA router GW status.

When a HA router instance changes the state (active, backup), the
GW interface is set to up or down. As reported in the bug, while
keepalived is configuring the interface, the interface disappears
and appears again from the kernel namespace, as seen in the udev
messages.

This patch is a workaround until the real issue is addressed (if
possible), retrying the interface configuration for a small period
of time.

Related-Bug: #1916024

Change-Id: I8ced69f4f8e7d7c73da130a57e89e9d66590390b"
1dbe389392bbfadebe8c12b06171cf04a24d32ff,2021-03-02 13:01:39+01:00,"Fix wrong packet_type set for IPv6 GRE tunnels in OVS

In patch [1] it was by mistake set to ""legacy"" but it should be
""legacy_l2"".
This patch fixes that mistake.

Closes-bug: #1917448

[1] https://review.opendev.org/c/openstack/neutron/+/763204

Change-Id: Idb743bbfd5454b8d245c4dd4b8c3d7021e90d238"
43c60d6216623b49b3096f4865d89f4705345ed7,2021-03-02 15:18:40+00:00,"Syncing neutron db with ovn does not provide external_ids for static routes

This change adds external_ids to the static routes in case the route is of
type gateway_ip during ovn_db_sync.

Change-Id: I17795b9986aa8655f5467dca0fb4e3cd5cb82252
Closes-Bug: #1902888"
058214670820be6f40e8ab05c0e1dbe8dc389abc,2021-03-03 15:21:23+08:00,"Clean port forwarding cache when router is DOWN

Port forwarding L3 agent extension needs to clean cache when
router is DOWN, otherwise the port forwarding extension will
skip all objects processing when router is UP again, because
the cache is hitting.

This patch addresses this issue.

Change-Id: Idd65f1eda020ada9a76c39904efa8d55680d9e6b
Closes-bug: #1917393"
6cf71cbd6a71b4849470874379877c7ca2a8fc25,2021-03-03 13:48:25+01:00,"Trivial: check if ipv6 is available for IptablesManager

Change-Id: I3caf131041a852671a556b064c641fe34f8f5ed0
Closes-Bug: #1915480"
8e3a83c21304c28054bb0134add1688e9f3a9140,2021-03-05 14:35:29+08:00,"Config option to disable the DHCP functions

This patch adds a new config option ``enable_traditional_dhcp``,
if set False, neutron-server will disable:
* DHCP provisioning block
* DHCP scheduler API extension
* Network scheduling mechanism
* DHCP RPC/notification

Partially-Implements: bp/distributed-dhcp-for-ml2-ovs
Related-Bug: #1900934

Change-Id: Icfbfc9691c5cf837406ff4291b3e3ed4970b26ee"
ee00bddce7cd78bd89134cc6bc08a4c1feb2203a,2021-03-05 10:03:22+00:00,"Remove rootwrap execution (6)

Replace rootwrap execution with privsep context execution.
This series of patches will progressively replace any
rootwrap call.

This patch migrates the ""kill_process"" method to privsep and
removes the unneeded rootwrap filters.

Change-Id: I48461be8b08cbc21c8af371f551b944343ba37bf
Story: #2007686
Task: #41558"
eb567478516897fadac1b7d205bef5c86284eace,2021-03-05 12:39:49+00:00,"Implement namespace creation method

Since [1], Pyroute forks the namespace creation to avoid calling
destructive routine ""libc.unshare(CLONE_NEWNET)"" from the main
process. This implementation uses sockets between both processes
to return any error feedback sent from the child process.

This patch implements the same fork without any communication. If
the child process raises an exception other than ""OSError(EEXIST)"",
the child process returns 1 that is read by the the main process,
that raises a ""RuntimeError"" exception.

Related-Bug: #1917487

[1]https://github.com/svinota/pyroute2/commit/81db2c98a1dda1c575ae087519cb08aa6ffdb39e

Change-Id: I0294586335a71d0757803843f675124bfb450967"
5c931f29132c3c5c01127f089f7d5909d2a19e4d,2021-03-05 16:03:49+00:00,"Schedule networks to new segments if needed

In case when subnet in segment X was created before hosts from
that segment was mapped in the Neutron DB, network wasn't scheduled
to the DHCP agents in that new segment.
Now DHCP scheduler is triggered in such case.

Closes-bug: #1917811
Change-Id: Ic9e64aa4ecdc3d56f00c26204ad931b810db7599"
02c8c037f82f810074c6f552eb697054563b6731,2021-03-08 13:24:58+00:00,"Add constant for bagpipe flooding table

The patch adds constant for bagpipe table used to flood traffic
into EVPN tunnel and standard tunnels to gateway nodes.

Change-Id: I276319e7efcbe18aa9bdf1ace2572b786e6321bd
Related-Bug: #1915522"
b04d64b90f2822222f96ddd726d379a2f19b539e,2021-03-09 09:14:46+00:00,"[OVN] Set mcast_flood_reports on LSPs

This patch enables the ""mcast_flood_reports"" and ""mcast_flood"" (on provnet
ports only) options in the Logical Switch Ports in the OVN driver. Without
these options, the ovn-controller will consume the IGMP queries and won't
send it to the LSP ports, meaning that external IGMP queries will never
arrive to the VMs.

In talks to the core OVN team, it was suggested [0] to enable the
""mcast_flood_reports"" option by default in the OVN driver (at least until
fixed in core OVN) as a workaround to this problem. And, to avoid having
to update all ports (which can be many) based on the igmp_snooping_enable
configuration option, we are always setting ""mcast_flood_reports"" to
""true"" in the LSPs. This won't cause any harm (also confirmed by core
OVN developers [0]) since it will be ignored if multicast snoop is
disabled.

[0] https://bugzilla.redhat.com/show_bug.cgi?id=1933990#c3

Closes-Bug: #1918108
Change-Id: I99a60b9af94b8208b5818b035e189822981bb269
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
2e20188441648ff9096b70058ef45e6b6fa6a694,2021-03-09 10:53:37+00:00,"Mech driver Resource Provider UUID5 namespaces should be different

Each mechanism driver Resource Provider namespace should be different.
Despite the Resource Provider UUID will be generated randomly, based
on this namespace, the hostname and the interface name, we should
provide a different namespace UUID per mech driver.

Partial-Bug: #1578989

Change-Id: Icea46cc3056185cec720e11e4d0f3a2e292cb952"
c33f0588cb0fdb52cf279fea68f827ce993658b8,2021-03-09 14:32:52+00:00,"[SR-IOV] Add support for ACCELERATOR_DIRECT VNIC type

Add support in SR-IOV mechanism driver for VNIC type
""accelerator-direct"".

This VNIC type refers to any device that supports hardware
acceleration of any kind and is provided by Cyborg [1].

NOTE: ""accelerator-direct-physical"" is not supported yet.

[1]https://wiki.openstack.org/wiki/Cyborg

Change-Id: I529e6a2a445a140dca7686976efeefcd13d333f0
Closes-Bug: #1909100"
4f009a8ab20e79335cc5a25f81a1a1f42582c593,2021-03-09 16:21:50+01:00,"Disable TLS proxy for periodic Fedora job

In this job (and this OS), deployment fails as ovsdb-server can not read
the tls certificates (it runs as openvswitch user and files are
user-readable only, owned by stack user). Disable tls-proxy service for
it, not needed anayway as it focuses on Neutron testing and not OVS.

Change-Id: Ibea391d503658ec738a60e34e19bdd6d809c845c
Closes-Bug: #1911128"
50242af1b3632804c991e834786c0a88b1042b7c,2021-03-10 10:33:39+08:00,"Add the base class DHCPResponder

This patch adds the base class for DHCPv4 and DHCPv6
responder. It centralized some common functions.

Partially-Implements: bp/distributed-dhcp-for-ml2-ovs
Related-Bug: #1900934

Change-Id: Ic4be066dfbc33d0fd99fec50fd54d4866232d286"
4bb3c92917cdf19b18c7481786050241218e8df7,2021-03-10 11:06:29+04:00,"Check for existence instead of fetching the whole net object

There is no need to fetch the whole net object
(which leads to several heavy DB requests according
to OSProfiler stats) when only need to check net existence

This speeds up port creation up to 15%

Closes-Bug: #1917866
Change-Id: I75db7c713a17a0f1b1b5aecc6eec93e636a71827"
7727fc07e682daa9a91230d2d17d0b8234af0c39,2021-03-10 17:03:12+01:00,"Allow to parse keywords in dns labels

Co-Authored-By: Slawek Kaplonski <skaplons@redhat.com>

Related-Bug: #1843218
Change-Id: Ie8b6eb88e046c172d99212f966bdee327f42ed37"
3a9e81bbb8e5a56bd69a1edf1d2922276841157b,2021-03-11 09:46:03+00:00,"[SR-IOV] Do not fail if ip-link vf ""min_tx_rate"" is not supported

Some NICs do not support ip-link vf ""min_tx_rate"" parameter. This is
not an API issue (ip-link or Pyroute2); the parameter is already
supported. The error is returned by the specific NIC driver.

A sanity check is implemented, reading the SR-IOV configured devices
(""physical_device_mappings"") and the excluded VFs (""exclude_devices"").

Change-Id: If70de0a7112777ac4011ad42af0ac98969765011
Closes-Bug: #1918464"
652f011cf3e13292b8f17342225c25e04a900417,2021-03-15 09:13:20+01:00,"Use normalized_cidr of the SG in the OVN driver

Patch [1] introduced new, read only field ""normalized_cidr"" in
the security groups' rules.
With this patch this new field is send as source or
destination_ip_prefix field in the rule's dict in case if
remote_ip_prefix and normalized_cidr are set in the rule.

[1] https://review.opendev.org/c/openstack/neutron/+/749158

Related-Bug: #1869129
Change-Id: Ib4be5790c8fee9d5b045389b41a377ebbf7e270f"
202fa1f4a20ca0d573701626f2bc2f07213e6820,2021-03-15 10:10:17+00:00,"[OVN][Doc] Update docs for Routed Provider Networks

Add documentation for Routed Provider Networks.

Co-Authored-By: Lucas Alvares Gomes <lucasagomes@gmail.com>
Closes-Bug: #1865889
Change-Id: Ie9b7ba52b5b9e93480f22d6863038bea23a19123"
32193267f5bf5434ec628f3b2ce410492b5b86f1,2021-03-15 16:05:28+00:00,"Replace ""ip route"" command in ""dvr_local_router""

This is a leftover of the ""ip route"" command migration to Pyroute2.

A new paremeter, ""proto"", is added to the IP route add and list
commands. The default protocol used is ""static"".

Story: #2007686
Task: #41284
Related-Bug: #1492714

Change-Id: I319fd0611d3e8a3a09d6d4e077a17a622f74f51c"
9ed17cec2d4ce0bd27e37c2877a413f5b302f4cd,2021-03-15 19:24:49+00:00,"Fix invalid JSON generated by quota details

The value fetched by Quotasv2_detail.get_resources() is ultimately
returned by Reservation.get_total_reservations_map. The total_reserved
value is returned by a sqlalchemy sum(), and is of a type defined by
the database driver in use. PyMySQL returns a Decimal here, which
the api layer serialises to JSON as a string.

Note that if a resource has no reservations then its value will be
defaulted in DbQuotaDriver.get_detailed_tenant_quotas to the integer
value 0. This means that the value is an integer if zero, or a string
otherwise. This causes parsing difficulties for client libraries which
do strict type checking.

Testing note:
This method is already covered by the unit test
TestQuotaDbApi.test_get_reservations_for_resource, which also already
tests the return value and, implicitly, its type. However, it does not
currently fail because the unit tests run with SQLite rather than MySQL.
SQLite returns an int where MySQL returns a Decimal, which does not
trigger the bug.

TestQuotaDbApi.test_get_reservations_for_resource is sufficient to
demonstrate that the patch doesn't regress SQLite. We were not able to
think of a deterministic way to write a Tempest test for this, which
would cover MySQL. Ideally we would have the ability to run the DB test
suites under MySQL and PostreSQL in addition to SQLite using oslo.db's
OpportunisticDbFixture, but the scope of that is larger than this
change.

Closes-Bug: #1918565
Change-Id: Icda0d63f2f5ea72bde423296c76aa46646fa98a8"
f62890527974e1fea286373ba47b463671360947,2021-03-16 15:43:33+00:00,"Fix VLAN driver tests

Since [1], the physical network VLAN ranges parser populates the
ranges for those entries without a defined range, allowing all
valid VLAN ranges ([1, 4094]).

Some VLAN driver tests, relying on the previous implementation,
considered that the physical network without a defined VLAN
range does not have segments to allocated (those segments
are created on the fly by
""SegmentTypeDriverallocate_fully_specified_segment).

Since [1], all physical network segments are stored in the
""ml2_vlan_allocations"" table and set as non allocated.

This patch also reverts [2]. When the physical networks are defined
in ""network_vlan_ranges"", there is no distinction between tenant
and provided networks; the physical network segments are assigned
by the user. It is possible to create a provider network without
defining the segmentation ID, it will be provided by the Neutron
VLAN driver, if there are free segments for the required physical
network.

[1]https://review.opendev.org/c/openstack/neutron-lib/+/779515
[2]1376df7873c2ac77c256ab2fed928de41a2c1d58

Closes-Bug: #1919280
Related-Bug: #1918274
Related-Bug: #1649750

Change-Id: I191e020ddb97dcf8fb41139d35bfd699e125379b"
759027a37644b750ef0c0fda854d8a6b0dd976a6,2021-03-18 08:51:00+01:00,"Always perform policy checks if enforce_new_defaults == true

When new policy default rules are enforced in the config, we shouldn't
be checking if context.is_admin is true and stop performing checks if
that is True.
As Neutron's policy rules are going to understand and use new
personas like system-admin, project-admin and e.g. reader roles, it
needs to be aware of those and simply checking if

    context.is_admin == True

in the neutron.policy.check() and neutron.policy.enforce() functions is
not enough. We need to perform all checks in such cases as well to e.g.
avoid giving list of the system resources to the user who has
project's admin role.

Such change will require a lot of changes in the code (e.g. unit tests)
and as we are close to the release point, this patch left that
context.is_admin check logic in case when
CONF.oslo_policy.enforce_new_defaults option is set to False.
In next release we need to get rid of that check if context.is_admin ==
True completly and adjust all required places in code as well.

Related-blueprint: #secure-rbac-roles
Change-Id: I403ca661dceee17aff9295caf8721c4a237a58cf"
60b08896ab596be272e83c97be80ad62a3e2cbe4,2021-03-18 09:47:58+00:00,"Test SQL cast in ""get_total_reservations_map""

This patch implements the tests for [1]. Instead of using the usual
OVO SQL unit test, based in SQLite, this patch implements a similar
testing but using the functional testing framework, that provides
SQL opportunistic testing drivers for MySQL and PostgreSQL backends.

[1]https://review.opendev.org/c/openstack/neutron/+/779878

Related-Bug: #1918565

Change-Id: I9284a6830ea103cb51a775fff720973852076770"
92a4db01fefb3fe224be920abf372436b8e02c8e,2021-03-18 10:17:56+00:00,"[OVN][FT] Mech driver stop accessing DB at exit

""OVNMechanismDriver._clean_hash_ring"" is called at exit. Because the
SQL connection is already closed, an exception is logged. This patch
mocks this method and avoids the OVN FTs to log this message.

Closes-Bug: #1919352

Change-Id: I6c68d15d0af644ab00467bea8e0cd3ca816f5cc5"
1f68336b79b0432308cdee42ea39ede49707dfa3,2021-03-18 10:19:15+00:00,"[OVN] Set send_periodic to False on provider networks

This patch adds a check prior to setting the send_periodic configuration
option for the LRP's ipv6_ra_configs to see if the network the LRP is
connected to is a provider network and the port is a gateway port.

In case it is a provider network and the port is a gateway port,
send_periodic should be set to False to avoid leaking the RAs generated
by ovn-controller to the tenant networks onto the provider network.

Closes-Bug: #1919347
Change-Id: I4e1ffb3a1eea147a750def245f869aca9e036b88
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
062336e59bb3d427bf4094779dc8e93d92c078d5,2021-03-19 12:05:56+01:00,"Set system_scope='all' in elevated context

In case when enforce_new_defaults is set to True and new policy rules
are used, context.is_admin flag isn't really working as it was with old
rules.
But in case when elevated context is needed, it means that we need
context which has full rights to the system. So we should also set
""system_scope"" parameter to ""all"" to be sure that system scope queries
can be done with such elevated context always.

It is needed e.g. when elevated context is used to get some data from
db. In such case we need to have db query which will not be scoped to
the single project_id and with new defaults to achieve that system_scope
has to be set to ""all"".

Proper fix for that should be done in neutron-lib and it is proposed
in [1] already but as we are have frozen neutron-lib version for
stable/wallaby already this patch for neutron is temporary fix for that
issue.
We can revert that patch as soon as we will be in Xena development cycle
and [1] will be merged and released.

[1] https://review.opendev.org/c/openstack/neutron-lib/+/781625

Related-Bug: #1920001
Change-Id: I0068c1de09f5c6fae5bb5cd0d6f26f451e701939"
4b21111eb11c98b544252d501f33077c7417daa0,2021-03-22 08:58:20+00:00,"Implement ""kill"" method using os.kill()

Implement the ""kill"" method (send a signal to a process) using the
Python native library ""os"".

In functional tests, ""RootHelperProcess.kill"" method should not fail if
the process does not exist.

Closes-Bug: #1843446
Closes-Bug: #1843418

Change-Id: Iee97a83779dd3e20eb3a223fb8557a94b8f15dc0"
2bb52d49bec299f070a513fee6f9f7ae5d53118b,2021-03-22 17:24:11+08:00,"Call install_ingress_direct_goto_flows() when ovs restarts

When ovs restarts and needs to regenerate flows, some flows will be
missing in br-int, as follows:
 * table=60,priority=4,in_port=""int-br-floating"" actions=resubmit(,61)
 * table=60,priority=4,in_port=""patch-tun"" actions=resubmit(,61)
 * table=61,priority=0 actions=resubmit(,62)
Call install_ingress_direct_goto_flows() again in the
_handle_ovs_restart() to ensure generate these flows.

Change-Id: I240a78879db757592df138a53b2c22d7f5a9ae13
Closes-Bug: #1920700"
04e5a42f70605b0d1e5a3cc33bf4ee09a0da1052,2021-03-22 16:09:06+01:00,"Switch neutron-grenade-dvr-multinode to be non voting temporary

This job is very unstable due to related bug. As we are just before
releasing new stable release, lets unblock our gate for now quickly by
making it non-voting and removing it from the gate queue temporary.

Change-Id: I971be39b50d521ea51090633ba465116a2118506
Related-Bug: #1920778"
7f5711f77b79fdaffd91f6ef299783b058d18ace,2021-03-23 18:08:44+09:00,"Provide the rpc_response_max_timeout parameter to metadata-agent

The rpc_response_max_timeout parameter is used in comminucation over
messaging queue, thus should be available for metadata-agent which
communicate with neutron-server over messaging queue.

Change-Id: I4826edf16bbdf338af6e050b15b4ecce9f8ca6ae
Closes-Bug: #1920842"
828765412789a15a5f375060cfab7628c65e9d5d,2021-03-23 17:03:55+00:00,"ovn: Do not set reside-on-redirect-chassis on distributed FIP

Since [1] and [2] OVN supports DVR on VLAN networks with usage of
external-ids:ovn-chassis-mac-mappings, but reside-on-redirect-chassis
needs to be unset when distributed floating IP is enabled.

[1]: https://github.com/ovn-org/ovn/commit/1fed74cfc1a1e3b29cf86eab2e96048813019b57
[2]: https://github.com/ovn-org/ovn/commit/522911269f1422e1274cbfbe53035a3bb8f573eb

Closes-Bug: #1920976
Change-Id: I68b9a586d1d7ec75820fedcb8e51d1c49ae871ae"
ae07a9d9f61f9ae5539bfb074dcb24f618c495bb,2021-03-24 10:59:58+01:00,"[CI] Enable debugging iptables rule in the L3 agent

It should helps us understand why in some (rare) cases rule to redirect
packets send 169.254.169.254:80 to port 9697 isn't installed in the
qrouter namespace.

Change-Id: I644ea3d6767db36bfe7f4122ec2c2afe9888dd07
Related-Bug: #1920778"
36b8c684b1c42a0733d0820bcd2e1fe217f23797,2021-03-24 13:46:37+00:00,"[OVN] Make delete_router_port() less error prone

This commit makes the delete_router_port() method from OVNClient more
resilient to NotFound errors. Apart from the L3 plugin, this method is
also invoked by the maintenance task to fix stale/not-up-to-date objects
in the OVN database, and since the maintenance task runs every 5 minutes
only it could happen that some objects fetched by delete_router_port()
are gone by the moment that method is invoked.

Change-Id: I0d78278797beb2af42ec38462e2b2edc8e2a4ae6
Closes-Bug: #1920968
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
6eaa6d83d7c7f07fd4bf04879c91582de504eff4,2021-03-24 13:56:09+00:00,"Randomize segmentation ID assignation

If plugin ""network_segment_range"" is not enabled and a new segment
is required, if no segmentation ID is provided in the request, the
segmentation ID assigned is randomly retrieved from the non
allocated segmentation IDs.

The goal is to improve the concurrent network (and segment) creation.
If several segments are created in parallel, this random query
will return a different segmentation ID to each one, avoiding the
database retry request.

Closes-Bug: #1920923

Change-Id: Id3f71611a00e69c4f22340ca4d05d95e4373cf69"
d4147072f8779403fd310a3eb10aa0209acb0d74,2021-03-25 08:39:33+00:00,"Modify create address scope policy rule and add UT for that API

This patch changes create_address_scope policy to allow it for
SYSTEM_ADMIN too. Before this patch it was available only for
PROJECT_MEMBER so anyone with project scope could create it but system
admin couldn't.
Now it's fixed.

This patch additionally adds unit tests to cover new, secure rbac API
policies for address scope API.

Related-blueprint: #secure-rbac-roles
Change-Id: Ib4dadc2619fb1c0d0729a5e01c2db16ebb776940"
24dcbcbe09a76c46b80685d7e4d02b8385d2a34d,2021-03-26 10:16:07+01:00,"Block metadata requests to not go out from the router

Packets send from instances to the metadata service which is running in
the router's namespace should never go out from the router.
Even if e.g. nat rule to redirect it to port 9697 isn't installed in
iptables for some reason, in worst case such requests should be dropped.

Before that patch we had in mangle table rules to mark such packets with
specific mark. But we didn't block such packets later.
This patch adds rule to DROP such packets in the ""scope"" chain in the
filter table.

Co-authored-by: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>

Related-Bug: #1920778
Change-Id: I6e9eec8fe9606d21fbce3699b4262e0783f667ec"
7f35e4e857f7c6e83c635125ce9b42df6e10a510,2021-03-26 15:52:18+01:00,"Physical NIC RP should be child of agent RP

In the fix for #1853840 I made a mistake and since then we created
the physical NIC resource providers as a child of the hypervisor
resource provider instead of the agent resource provider. Here:

https://review.opendev.org/c/openstack/neutron/+/696600/3/neutron/agent/common/placement_report.py#159

This *did not* break the minimum bandwidth aware scheduling.
But still there are multiple problems:

1) If you created your physical NIC RPs before the fix for #1853840
   but upgraded to after the fix for #1853840, then resource syncs
   will throw an error in neutron-server at each physical NIC RP
   update. That pollutes the logs and wastes some resources since
   the prohibited update will be forever retried.

2) If you created your physical NIC RPs after the fix for #1853840
   then your physical NIC RPs have the wrong parent. Which again
   does not break minimum bandwidth aware scheduling. But it may pose
   problems for later features wanting to build on the originally
   planned RP tree structure.

3) Cleanup of decommissioned RPs is a bit different than expected.
   This cleanup was always left to the admin, so it only affects a
   manual process.

The proper RP structure was and should be the following:

The hypervisor RP(s) must be the root(s).
As a child of each hypervisor RP, there should be an agent RP.
The physical NIC RPs should be the children of the agent RPs.

Unfortunately at the moment the Placement API generically prohibits
update of the parent resource provider id in a PUT request:

https://docs.openstack.org/api-ref/placement/?expanded=update-resource-provider-detail#update-resource-provider

Therefore without a later Placement change we cannot fix the RPs
already created with the wrong parent. However we can fix the RPs
to be created later. We do that here. We also fix a bug in the unit
tests that allowed the wrong parent to pass unnoticed. Plus we
add an extra log message to direct the user seeing the pollution
in the logs to the proper bug report.

There may be a follow up patch later, because not all RP re-parenting
operations are problematic, therefore we are thinking of relaxing
this blanket prohibition in Placement. When Placement allows updates
to the parent id we can fix RPs already created with the wrong parent
too.

Change-Id: I7caa8827d22103600ca685a58294640fc831dbd9
Closes-Bug: #1921150
Co-Authored-By: ""Balazs Gibizer"" <balazs.gibizer@est.tech>
Related-Bug: #1853840"
5c744b23f02e50e539f160cd700e6c05d9fd9c36,2021-03-30 08:31:45+00:00,"Mark ""test_keepalived_spawns_conflicting_pid_*"" tests as unstable

Change-Id: I403e439e3a48d35f8e076e104f2bbba547cf9657
Related-Bug: #1921154"
35c7999ebd25af4d8f0d6c82455bcf93c6538c15,2021-03-30 10:44:39+02:00,"Allow 255 character strings in tags

In TripleO we are moving to a model where heat is not
used to manage neutron resources. This work relies on
using tags, and we are hitting the 60 characther limit.

This change bumps the tag elements to 255 characters.

Closes-Bug: #1921713
Change-Id: Ie69526acb94b62fd5d8db1dbddc1f24072df7a5e"
b0022c51fed2c824ab85c0ec8f5dc2b9f5a13c59,2021-03-30 17:25:59+08:00,"Add the DHCPReponder for IPv4

This patch implements the responder for DHCPv4. The main
work of the responder is to assemble the DHCP packet with
its protocol required options based on the information of
neutron Port/Subnet/Network.

Partially-Implements: bp/distributed-dhcp-for-ml2-ovs
Related-Bug: #1900934

Change-Id: I8b0466263388085bb1949ea37f4788579c46093a"
c1ade52fda59163510dd0959ab72c442d1d07027,2021-03-30 16:47:34+00:00,"Read keepalived initial state in parallel to interface monitoring

The initial router state method is now a thread that is executed
in parallel with the ""ip monitor"" thread. If by any circumstance
this thread does not read the interface IP addresses on time, the
state of the router will be defined as ""backup"".

Related-Bug: #1917793

Change-Id: If76c6ee1734f544abdd4196431351d4328ad26fd"
af3c1b84427cbe4c9d3dce8fc901ad0b099c5917,2021-03-31 10:02:16+00:00,"Add locks for setting iptables rules in l3 and metadata agents

Router_info class and metadata agent's driver are using same
instance of the iptables manager class and it could happend that
sometimes e.g. nat rule which packets send to 169.254.169.254:80
redirects to the port 9697 so haproxy can process them, can be missed as
they will be overwritten by the Router_info class manipulating other
rules in the same 'nat' rules list.

This patch fixed that by adding lock for methods which are changing
rules in iptables_manager's nat table in both router_info and
the metadata agent's driver.

Closes-Bug: #1920778
Change-Id: Ic3a324c0e608c7afc4b15dbc8becd33b75ee78f6"
f700660b6b11118fa80129a4ef20c3e091da988b,2021-03-31 10:35:46+00:00,"[OVN] External ports (SR-IOV) QoS is handled by SR-IOV agent

OVN QoS extension do not manage the external type ports (SR-IOV);
the port QoS policy of those ports is handled by the SR-IOV agent
QoS extension.

Change-Id: Ibd1caf34a5f707f5ae9ff5973860d4e8338ef224
Closes-Bug: #1918702"
f6682b6b55bc8aa8e12605d849a0ce374b736067,2021-03-31 15:25:34+02:00,"Unit tests for auto_allocated_topology API policies

This patch adds unit tests for new API policies for
auto_allocated_topology.

Co-Authored-By: Lance Bragstad <lbragstad@gmail.com>

Related-blueprint: #secure-rbac-roles
Change-Id: Id32c5a706aabb2c12078ab3469c80eb3def753d6"
becb42b92e0b838d085a05e68ace71b864c71b24,2021-03-31 16:44:30+00:00,"Migrate ""ovs-ofctl"" to oslo.privsep

Story: #2007686
Task: #42184

Change-Id: Ifc7ec227d4084331948c42cd99d96ad10c09a6f1"
be6ee6f397124dbf076cbad9f93b6ac5cb67facf,2021-04-02 10:49:07+00:00,"Remove not needed rootwrap filters

This patch moves all remaining filters to a single file. Since [1],
the number of processes executed using rootwrap have been reduced to
a small set.

[1]https://storyboard.openstack.org/#!/story/2007686

Story: #2007686
Task: #41284

Change-Id: Ic7eb717b9ee18068d7a6d7acb11302dd1fde60c6"
48bce78d1a07ff0e7726941d6e8e4aec8a92a77f,2021-04-05 16:37:03+00:00,"Remove class ""Timer""

Class ""Timer"" is not being used and the related unit tests
are failing quite often in py38 CI job.

Change-Id: Ib1d8f2f4adeadbd59c3dccc7be1546baedc4b978
Related-Bug: #1922563"
8522628f2f6f59344c04568b31c444f7a290562d,2021-04-06 08:27:16+00:00,"Remove FT ""test_has_offline_migrations_*"" tests

""test_has_offline_migrations_pending_contract_scripts"" is testing a
non supported branch, ""Kilo"". The usefulness expired when this branch
was declared EOL.

""test_has_offline_migrations_all_heads_upgraded"" is tested in
""test_forbid_offline_migrations_starting_newton"". Since ""Newton"",
no more DB contract migrations are allowed. Both tests are checking
the same behavior.

Due to the time extension and the lack of value of those tests, this
patch removes both.

  test_forbid_offline_migrations_starting_newton [683.133807s]
  test_has_offline_migrations_pending_contract_scripts [123.091853s]

Change-Id: I4846ecdd8312fa2ff915c4461da07a607c7a8f8c
Related-Bug: #1687027"
cca2b8de2c07e17b0917f982a006db598f6e4048,2021-04-06 12:54:26+00:00,"Fix ""_get_sg_members"" method

Since [1], the RPC method ""security_group_info_for_devices"" returns
not only the IP address but a list with the IP and the MAC addresses.
The returned blob is like this:
  {sg_id: {'IPv4': [[ip1, mac1], [ip2, mac2], 'IPv6': [...]}, ...}

The method ""_get_sg_members"" only needs the IP address, the MAC
address should be discarded.

NOTE: this bug was detected when testing
""neutron-tempest-plugin-scenario-linuxbridge"" CI job with
""enable_ipset"" set to False. By default, this value is set to
True (it is more efficient). In order to properly test this
patch, I pushed [2], creating a CI job disabling this option.

To avoid overpopulating the Neutron CI, this job is not going
to be added to the check gate (maybe to the periodic CI tasks).

[1]https://review.opendev.org/q/I6cb2ba05fa3337be46eb01f2d9f869efa41e4db6
[2]https://review.opendev.org/c/openstack/neutron/+/783103

Change-Id: Ia5e899a4133a0952be8f607a61282e71fb0545d1
Closes-Bug: #1922127"
ecaa7a1b48cf2dd9edef38cd5dfd18c3363437c5,2021-04-08 05:57:12+00:00,"Check there are no min BW QoS in ""BaseOVSTestCase""

This patche adds a check in ""BaseOVSTestCase"" setUp method. Each
time a test is executed, the test case checks there are no
minimum bandwidth QoS/queues related to this OVS instance. The OVS
instance generates a random ""_min_bw_qos_id"" in the initialization.
This ID is assigned to the OVS QoS registers, in ""external_ids:id"".

Related-Bug: #1922919

Change-Id: I6955aadc51bfc9181ec84f7d54a219ffa3fd9115"
6533337716e5776567e0c9e9a8a20e2ad704e258,2021-04-08 11:37:52+02:00,"[Functional] Fix mocks of the create_dhcp_port method

In dhcp agent functional tests
test_force_metadata_for_subnet_create_delete and
test_enable_isolated_metadata_for_subnet_create_delete it may happen
that it will hit xlock error from iptables-restore command.
Normally it is handled properly and DeviceManager.setup() method is then
called again.
But in those functional tests there was no mock of the create_dhcp_port
but there was mock for get_dhcp_port and update_dhcp_port instead.
Because of that when during first call of setup() method iptables
exception was raised, during the second call of the setup() method wrong
object was put in the network.ports and test was failing due to that.

Workflow of that test is like below:
1. Call DeviceManager.setup() method
2. This method as one of the first steps will call _update_dhcp_port
which will replace dhcp port prepared for test with some other mock,
3. During first run ""port"" variable in DeviceManager.setup() method is
correct so all will work fine but if we hit iptables xlock error,
setup() method will be called again and
4. Now ""port"" local variable is already update by _update_dhcp_port
method thus test setup() method will fail as interface_name is now
wrong.

To avoid such issue this patch changed dhcp_port_mock to be ""proper""
DictModel() object instead of mock.Mock() and ensures that this will be
set in network.ports even after ""create_dhcp_port"" will be called.

Closes-Bug: #1922684
Change-Id: I3f7dfdcbb3a54252bb1b3d2fa50eebcac3d00cba"
960b810eacd71dd265a02c2825ccead8357082c0,2021-04-09 08:23:03+00:00,"Document Linux Bridge compatibility with ""nftables""

Until the migration to the new native ""nftables"" API is completed,
Neutron Linux Bridge mechanism driver can work with:
- The legacy binaries (""iptables"", ""ip6tables"", ""arptables"" and
  "" ebtables"").
- The ""nftables"" legacy API tools. ""ipset"" tool is not compatible
  with ""nftables"" and must be disabled.

Closes-Bug: #1915341
Related-Bug: #1508155
Related-Bug: #1922892

Change-Id: I10ef4e9124ba8f243680acde506eebc586c2f9a7"
7326fd622f2c3cb36681136d79e39e4efdda5411,2021-04-09 09:52:11+00:00,"Group execution of SQL functional tests

Functional SQL tests (MySQL and PostgreSQL) use the DB installed
backend. To avoid overloading the DB engine, the test cases are
grouped [1] together and executed by the same worker process. That
will ensure those tests are not executed in parallel, interfering
each other.

Classes that are grouped:
- TestModelsMigrationsMysql
- TestModelsMigrationsPsql

[1]https://stestr.readthedocs.io/en/latest/MANUAL.html#group-regex

Related-Bug: #1687027

Change-Id: If04e360c01cdb16e956d16357e2181db55445137"
130655cdb98f493d0ceda72e2c3a0649c3d9024d,2021-04-09 13:33:43+03:00,"DHCP notification optimization

DHCP notification is done after each create/update/delete for
network, subnet and port.
This notification currently has to retrieve network from DB almost
every time, which is a quite heavy DB request and hence affects
performance of port and subnet CRUD.

This patch suggests 2 optimizations:
- do not fetch network if not needed (only fetch when schedule needed)
- for port and subnet AFTER_CREATE event pass network dict from plugin

According to Rally tests these changes improve performance:
- port create ~20%
- port update ~20%
- subnet create ~15%
- port delete and subnet update/delete - not tested

Closes-Bug: #1923161
Change-Id: I0ab836ac09225f4f3ad435e9ceaf315018855d52"
e5ccfee6cfb503c3ba7cce816fae331dd017f3ce,2021-04-09 15:28:41+02:00,"Always use absolute path for custom kill-scripts

When rootwrap was used to run custom kill-scripts, it worked fine with
the executable name without full path as path was in the rootwrap's
exec_dirs config option thus rootwrap was able to find it.

But as we migrated to privsep it don't works like that anymore.
It's better to use absolute path of the kill-script always and that
patch changes to do it like that.

Change-Id: I66d70304530935e2add3345aba6aa3c549a0a2df
Closes-Bug: #1923198"
0a931391d8990f3e654b4bfda24ae4119c609bbf,2021-04-09 13:30:39+00:00,"Make ARP protection commands compatible with ""ebtables-nft""

""nftables"" compatible binary, ""ebtables-nft"", is not 100% compatible
with the legacy API, as reported in LP#1922892.

This patch fixes the following issues when using ""ebtables-nft"" (while
keeping compatibility with legacy binary):
- When a new chain is created, a default DROP rule is added at the end
  of the chain (append). This will prevent the error code 4 when the
  chain is listed.
- The chain rules are added at the begining of the chain (insert),
  before the default DROP rule. This will prioritize the port rules.
- The MAC rules are cleaned before the new ones are added. That will
  prevent the deletion of any new needed rule, now added after the
  deletion.
- The ""ebtables"" command will retry on error code 4. This is the
  error returned when the chains are listed and no rule is present
  in a new created chain (reporeted in LP#1922892).

This code is backwards compatible, that means it works with the legacy
""ebtables"" binary; this is currently installed in the Neutron CI [1].
In order to test with the new binary, ""ebtables-nft"", two new CI jobs
are added to the periodic queue [2].

[1]https://github.com/openstack/neutron/blob/1ad9ca56b07ffdc9f7e0bc6a62af61961b9128eb/roles/legacy_ebtables/tasks/main.yaml
[2]https://review.opendev.org/c/openstack/neutron/+/785144

Closes-Bug: #1922892
Related-Bug: #1508155

Change-Id: I9463b000f6f63e65aaf91d60b30f6c92c01e3baf"
f946773d1fff55aa1379fdca3a175df6c249e4a5,2021-04-09 17:01:20+02:00,"Configure branch on which tripleo jobs should be run

Those jobs are run in the periodic queue and it seems that they are
using neutron from the last stable release instead of master.
So this patch sets explicitly master branch to be used.

Change-Id: Ibef0c6f33f68394797d623ced709e079fe6e22e0
Closes-Bug: #1923201"
3cee5f7201a1715edd46ea6edb60c311eb2b89f2,2021-04-09 15:24:22+00:00,"Implement namespace operations privsep context

This context has only ""CAP_SYS_ADMIN"" capability.

Change-Id: I5e17f1b567e09397de58b2b934d3cf2bc7589b6c
Story: #2007686
Task: #42240"
f616f84e956b47d503bb93d3846aae76514f389f,2021-04-09 15:36:03+00:00,"Implement conntrack command privsep context

This context has only ""CAP_NET_ADMIN"" capability.

Story: #2007686
Task: #42240

Change-Id: I8522c9c1e2243ea471d51fa50d04db476655e6d0"
109faeac7e2e37da3bb7d5014a37ef18ed8cb80a,2021-04-12 10:48:09+02:00,"trivial: Make driver_controller's _attrs_to_driver py3 compatible

In python3 dict.values() doesn't return list but instead dict_values,
it must be converted to list to ""enjoy"" list operations like insert.
Add unit tests to be sure.

Closes-Bug: #1923423
Change-Id: Ie270ac2ee65c02bdb099d11af7f1d2fb62ad0f61"
f7d2c3608d1fa6cbc8c562f9121ec0f0d80c3962,2021-04-12 09:48:11+00:00,"Add periodic jobs to test ""nftables"" binaries

In order to check how the ""nftables"" binaries work with Neutron, two
new jobs have been added to the periodic queue:
- neutron-tempest-plugin-scenario-linuxbridge-nftables
- neutron-tempest-plugin-scenario-openvswitch-iptables_hybrid-nftables

In those two jobs, the binaries for ""iptables"", ""ip6tables"",
""arptables"" and ""ebtables"" are replaced with the ""nftables""
counterparts; by default, newer operating systems use the ""nftables""
versions, providing the legacy API to the user but executing the
new packet handling in Netfilter.

Change-Id: Idec6d480886298f6d71b1dd649c9255ee6b7bebb
Related-Bug: #1508155
Related-Bug: #1922892"
44670f88dd15c5eb2ea98956b0b5881df67ca666,2021-04-12 15:24:42+00:00,"Revert ""Cache default security group IDs in memory""

This reverts commit 433deed0b72d3e7dbee5fc9e241f7d6c46bbfa96.

Reason for revert: https://bugs.launchpad.net/neutron/+bug/1923470

Change-Id: I7d6d884936916602fb21a6f268250c823d415e6b
Closes-Bug: #1923470"
ba3d78099f47c3819af0f6eb2083a1df7f67c38d,2021-04-13 09:21:16+00:00,"Remove unused method _ensure_vr_id_and_network()

Method _ensure_vr_id_and_network is not used in l3_hamode_db.py,
hence method and related tests can be removed.

Closes-Bug: #1715371
Change-Id: I9a64e683f060573195a88b3c4ee34abbd941fa44"
ca7822e2108c151bda992ef8a6d454ec2c6d890e,2021-04-13 15:15:41+02:00,"[ovs fw] Restrict IPv6 NA and DHCP(v6) IP and MAC source addresses

Neighbor Advertisments are used to inform other machines of the MAC
address to use to reach an IPv6. This commits prevents VMs from
pretending they are assigned IPv6 they should not use.

It also prevents sending UDP packets with spoofed IP or MAC even using
DHCP(v6) request ports.

Co-authored-by: David Sinquin <david.sinquin@gandi.net>

Closes-bug: #1902917

Change-Id: Iffb6643359562487414460f5a7e19a7fae9f935c"
1dfbf5b3455391c849dc5ab7b61df86f6e0c8c16,2021-04-14 11:48:01-04:00,"Initialize privsep library for neutron-ovs-cleanup

Closes-Bug: #1923453
Change-Id: Ie91ab1c359955a2911e558ab5a4bc8b0ff28bada"
088f1298f26ac04da0ebea2a905378690677ff70,2021-04-14 16:38:44+00:00,"Initialize privsep library in Neutron commands

Since the migration to privsep, some Neutron commands execute methods
under a privsep context. The privsep library must be initialized first.

Change-Id: Icd69bca23d781bace580b3937bc8bd25b586e852
Closes-Bug: #1923870"
1483b63ffaf933903abf7317b03a99195a71c98a,2021-04-15 17:36:17+03:00,"Add enable_dhcp filter in get_network_info rpc

Add enable_dhcp, to make a filter to avoid unnecessary
net_info data transfer through rpc.

Change-Id: Ibcef366f5b1f4b7da4f47f1f538a17111da0faa1
Closes-Bug: #1552614"
662cd600753476a4f64df64361a0d31ecf54a1ec,2021-04-16 15:40:41+02:00,"[OVN] Fix FDB table not registered in OvnSbIdl

With MAC learning a new table FDB has been added to OVN [0]. It needs to
be registered into OvnSbIdl so that it is recognized.

[0] https://github.com/ovn-org/ovn/commit/6ec3b12590f9193659d549e30d96b1a22bbb1288

Related-Bug: #1904412
Change-Id: If815965f538b764cca4cc31b83ef5f4d4a50fc20
Signed-off-by: Elvira García <egarciar@redhat.com>"
947e8a041c22c97bf342b1498b837a5c3f553d95,2021-04-22 10:36:44+02:00,"Remove SRIOV attach limitation from the doc

Since I67504a37b0fe2ae5da3cba2f3122d9d0e18b9481 Nova supports attaching
neutron ports backed by PCI devices. So the limitation can be removed
from the doc.

Closes-Bug: #1925433
Change-Id: I44e573bd55e3631901d782d6d65987a58ca3e4fb"
32e938e698f260af6896f6179a5ffc0838677124,2021-04-22 15:23:43+02:00,"[OVN] Only account for bound ports in metadata agent

Due to bug #1922934 there might be situations with stale ports
in the OVN database. When instances request metadata, the agent
will try to fetch all ports for that particular network with the
same IP address and there should be only one.

However, when there are stale ports in OVN database but not in
Neutron, those ports may have the same IP address and the result
is that metadata won't work. As the stale ports will never be
bound to any hypervisor, this patch is accounting only for
bound ports so that those ports don't interfere until they
eventually get fixed by the maintenance task.

Related-Bug: #1922934
Signed-off-by: Daniel Alvarez Sanchez <dalvarez@redhat.com>
Change-Id: I708904b982d243359f2eeda809beae0321f1a7db"
1a3fa2206db3c9485db84ade3d5cc179bc1c22ce,2021-04-22 15:28:21+00:00,"ovn: Add functional tests for get_network_port_bindings_by_ip

The change I708904b982d243359f2eeda809beae0321f1a7db lacked tests for
unbounds port with the same IP. This patch adds simple test that creates
2 LSPs on the same LS with the same IP and one is unbound. Such setup
should return only the bound port.

Related-bug: #1922934
Change-Id: I71659a1c846852f9cb9bedba23c946438357b079
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
43c10aae867c6ccd6ed76b4c68ef58c9aa8a0726,2021-04-23 08:09:01+00:00,"[OVN] External network ports (SR-IOV) QoS is handled by SR-IOV agent

This commit is similar to [1]. The OVN QoS extension does not manage
the external type ports (SR-IOV); the port QoS policy of those ports
is handled by the SR-IOV agent QoS extension.

When a network is updated, the OVN QoS extension should check the type
of port bound. In case of having an ""external"" port (SR-IOV), the QoS
extension should not handle it.

[1]https://review.opendev.org/c/openstack/neutron/+/780054

Closes-Bug: #1925218

Change-Id: Idf85e304897c9d1073091c6cabb86be39640f332"
ce2c0010b93680bdcb6619940a84f8602769b837,2021-04-23 17:32:07+01:00,"[OVN] MetadataProxyHandler to conditionally monitor both Chassis's tables

If both Chassis and Chassis_Private tables are passed to the
MetadataProxyHandler class we should conditionally monitor both of them.

Change-Id: Iffd1deb977e92b9a600ab2603408ddf2eb387e18
Co-Authored-By: Terry Wilson <twilson@redhat.com>
Closes-Bug: #1925836
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
4d61903bb8bc4917475d35d88c6de3e6ca0b9873,2021-04-26 10:53:22+00:00,"[OVN] Add ""filter-validation"" extension to supported list

Change-Id: Ib26296d5a0e3a1f25b14d90f66fd53ad87ffe93c
Closes-Bug: #1926149"
8b39060ddf1b8fbecd1a1b71d543b5de8990a909,2021-04-26 16:06:16+00:00,"Fix SQLAlchemy backref warnings for viewonly columns

Fixed backref warning for two view only relationship defined in the
ORM, ""QosNetworkPolicyBinding.port"" and ""Tag.standard_attr"".

Change-Id: I7fcb1268f4fc637e7f39eae4fcde33f82cb9772c
Closes-Bug: #1925841"
c16f88d1481f59e8547c406ac24b670723a3b1da,2021-04-27 09:43:34+02:00,"Report ExternalDNSOverQuota exception for recordset quota error

When floating IP or port with DNS records are created and the recordset
quota value of the external dns service (e.g. designate) exceeds limit,
the recordset creation fails. Report the exact reason of failure i.e.
ExternalDNSOverQuota instead of HttpException.

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/786174

Closes-Bug: #1923700
Change-Id: Ie1dd5c26ec0eb1875d2a6a176838598117678f4a"
28cd6c82e9a0dbf908eb4ece54085a975c2fe5d4,2021-04-27 15:05:00+00:00,"Added common config and SR-IOV agent config to sanity check

Added common config and SR-IOV agent config parameters to the sanity
check script, to add the following missing configuration parameters:
- default.notify_nova_on_port_status_changes
- default.notify_nova_on_port_data_changes
- sriov_nic.physical_device_mappings

Change-Id: I2a5e1fe3dbc6f2f342feaec92f4c122cfccce6d1
Closes-Bug: #1926170"
97e34498f75fb8b5414490858ff9a3a37e6b2716,2021-04-27 15:56:43+00:00,"Fix ""nftables"" ansible role

Fixed ""iptables"" restore tasks:
- Using the ""ipvX_rules_file.stat.exists"" flag
- Retrieving the correct path name from the stored variable.

Change-Id: I61a07b9b0c0fd3c0906ed8efe0b09bf0988ccdfb
Closes-Bug: #1926313"
9911d414c6a03cbdcc5f46a9ed7cfc59d70a5168,2021-04-28 07:50:56+00:00,"Improve ""objects.db.api.count"" method

Two improvements are implemented in this method:
- Add a query limit number parameter. This parameter is used by
  ""NeutronDbObject.objects_exist"" to limit the number of registers
  retrieved to 1.
- Add a query field parameter. This is the name (string) of the
  ""obj_cls.fields"" list. That will reduce the columns to be
  retrieved to only one. To check the existence of a DB register,
  there is not need to retrieve the full DB model including the back
  references.
  In case of not passing any value, the first ""obj_cls.primary_keys""
  value will be used instead.

Closes-Bug: #1925528

Change-Id: I9fd5e306e293102c366d89c01bbe8b13721d59b0"
de295f036df2cedec9de4c25f344ebb770f66e0a,2021-04-28 10:43:52+00:00,"Do not include dynamically loaded values into OVO testing

Those OVO values loaded dynamically (for example [1]) should not be
added to the tested object. A dynamic column in a DB register is a
``sqlalchemy.orm.AppenderQuery`` object that represents the needed
query to retrieve this value.

These OVO fields, mapped from the DB object, should be considered as
synthetic fields and not be included in
``_BaseObjectTestCase.obj_fields``.

[1]https://github.com/openstack/neutron/blob/ff2464bf33f1c84bd8525eca68c5774f5e14f1f1/neutron/db/models/securitygroup.py#L103-L106

Closes-Bug: #1926399

Change-Id: I4b59dbc71316eede52b22c0788de5fd682fbff30"
ddc8e625f714aebd65a454f23fedc6d9a9320e89,2021-04-28 13:41:15+01:00,"[OVN] Fix: Disabling snat after it was enabled

This patch removes a conditional check in the update_router() method
which was verifying if snat was enabled in order to update the nat
rules. This check does not make sense in the update method as if snat
was disabled we should still call update_nat_rules() which will then
remove the NAT entry from the OVN NB DB.

Change-Id: Ice20d22365acaf33ee211b1e38b7d0bc151c1ba8
Closes-Bug: #1922089
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
2cf431455395c6c87e174073eac3557f4820eb0f,2021-04-30 08:34:48+00:00,"Implement multipath routing in route commands

Related-Bug: #1926476

Change-Id: I598da266905a5645b744d7ffcc47b417ff64a5e7"
c511964d70324c6974740eed245044f0fe77841e,2021-05-01 17:39:42+00:00,"Replace ""get_routing_table"" with ""list_ip_routes""

""get_routing_table"" uses ""pyroute2.IPDB"" that has been deprecated.
""list_ip_routes"" has been improved to be able to read multipath
routes.

Closes-Bug: #1926476

Change-Id: I0299fa11a7afefbd2999f81cd4ed3beed572009c"
317407fe61b76b8f0c250ce6fb18d93dd0b667d0,2021-05-04 11:33:20+01:00,"[OVN] Check for lock in check_for_mcast_flood_reports

The maintenance method check_for_mcast_flood_reports() was not checking
if that instance of the maintenance task has a valid lock before trying
to execute a transaction.

This patch adds such check so instances of the maintenance task without
a valid lock will just return.

Change-Id: I791026058b37f06d1a19b5fb6823b9dbb2a3eca5
Closes-Bug: #1927077
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
2321339ee64c68c6647b0c9d7482712440e1e6a0,2021-05-07 17:31:33+00:00,"Fix SQLAlchemy warnings with view only relationships

The view only relatinships must be specified in the DB model.
The following are fixed:
- QosNetworkPolicyBinding.port: ""port"" DB object will have a view only
  copy of the ""network"" QoS policy.
- Subnet.rbac_entries: ""subnet"" DB object will have a view only copy
  of the ""network"" RBAC policies.

Change-Id: I2396c0a23b00439d46faf4b29a082b3819528d89
Closes-Bug: #1927763"
adfd853267ca529816f4c17a145d9e70e8abfac5,2021-05-11 12:08:42+09:00,"Deprecate [designate] admin_* parameters

The admin_* parameters are implementing the same functionality as
keystoneauth parameters alghouth these don't provide all parameters for
Keystone v3 identity but are still based on Keystone v2 identity.
This change deprecates these parameters so that we can remove
such redundant and outdated definitions in a future release.

Closes-Bug: #1927494
Change-Id: I6294098008fbebb2e64922b3aaa085c1361d48a2"
f192153b449877e00c57c2b2a1b8ce89c9c733da,2021-05-16 04:49:01-04:00,"HA-non-DVR router don't need manually add static route

When a router set as HA mode, The keepalived process will take over
the route entry's generation. So, the codes that add static route
is redundant.

But, for DVR-HA router, in dvr_snat node the keepalived process run
in snat-namespace and don't take over qrouter-namespace, so the
manually add static route codes still need be called.

Closes-Bug: #1927849
Change-Id: Id09de6c43c0fab4009336e253c88f54219398053"
fa7c7282f019d3e0dd4d492f5ff2c47bd45b0ce7,2021-05-16 09:10:59+00:00,"Make phynet paramter also is optional when network_segment_range enabled

When network_segment_range plugin is not enabled, we can create a provider
network without physical_network parameter. In order to compatibility,
We should support to not provide physical_network parameter when create
provider network with network_segment_range plugin enabled.

Closes-Bug: #1914842
Change-Id: If19a6a9b0f2910baefba9d7ea9955b1f0ad7d252"
ddf0fef28b7095724c8ba27f3275d0dad2252251,2021-05-16 21:55:55+09:00,"Add a single option to override the default hypervisor name

Currently neutron uses socket.gethostname() to determine hypervisor
names, but this implementation is not fully compatible with libvirt
driver which uses canonical name for hypervisor name.
This incompatibility causes an issue with root resource provider
detection if a deployment uses FQDNs as canonicanl names.

This change introduces the resource_provider_default_hypervisor option,
so that users can override the hypervisor name by the single option(*1)
instead of setting two list options(*2). This is especially useful if
the deployment has multiple bridges or interfaces.

(*1)
[OVS]
resource_provider_bandwidths=br-data1:1024:1024,br-data2:1024:1024,\
br-data3:1024,1024,br-data4,1024:1024
resource_provider_default_hypervisor=compute0.mydomain

(*2)
[OVS]
resource_provider_bandwidths=br-data1:1024:1024,br-data2:1024:1024,\
br-data3:1024,1024,br-data4,1024:1024
resource_provider_hypervisors=br-data1:compute0.mydomain,br-data2:\
compute0.mydomain,br-data3:compute0.mydomain,br-data4:compute0.mydomain

Related-Bug: #1926693
Change-Id: I692219200535df3af1265248e88c96947e4d8f9d"
f9bda4b1e439b5e761b445ce6686166eb41a0e45,2021-05-17 07:46:02+00:00,"Set the default ``Backend.lookup`` timeout to 2 seconds

In order to broadly cover the issue described in the referred bug,
this patch sets a default timeout of 2 seconds in the
``ovs_idl.Backend.lookup`` method.

This timeout should cover most of the situations where the IDL local
cache update is delayed. This patch does not change the default
behavior, except it will not fail if the DB cache is synchronized
within 2 seconds.

If we don't pass the notify handler or the backend does not implement
one, in case of not finding the requested register, the method will
raise like before.

ovsdbapp library is bumped to version 1.10.0 to receive the change
that introduces the active wait in ``Backend.lookup`` and adds the
timeout parameter to the method signature.

Change-Id: Ib40eabd6a8e9d59896e0e20383d8061eb4b5c710
Related-Bug: #1922934"
7b59b5069b1402730602b430416a15b1609253ea,2021-05-18 12:58:23+02:00,"[DVR] Send allowed address pairs info to the L3 agents

When new dvr router is going to be created on the node, L3 agent
asks server for list of ports plugged to the subnets, to populate
arp entries for all fixed IPs from those ports.
There was missing info about allowed address pairs there, so those
IPs were not populated in the qrouter namespace.
Now it's added and L3 agent can add those arp entries to the qrouter
namespaces too.

Closes-Bug: #1928466
Change-Id: I5d6c72c271ff450d9e43b3e33a99dd59d727882d"
2a4074918c248adf84b0afa404d30c18710da4b2,2021-05-18 14:13:31+00:00,"Remove call to ""fixup_ubuntu""

Since [1] this method is not in Devstack repository. Bionic is no
longer supported.

[1]https://review.opendev.org/c/openstack/devstack/+/788754

Change-Id: Ied3442289864656654d3745d3ea7841a5aae713c
Closes-Bug: #1928805"
9e6b7a2284a39ae74d2092083165e3fdf4cb8f33,2021-05-19 14:31:31+00:00,"Install ""pyroute2"" as a doc job depedency

By adding this library to the doc requirements file, tox will install
it limiting the upper version according to
""requirements/upper-constraints.txt"".

""pyroute2"" is called in tox doc job as mentioned in [1]. Since version
0.6.0, the library structure changed. To keep backwards compatibility,
all modules are imported from the main namespace. As reported in the
referred bug, the library ""mitogen"" must be installed first.

In stable releases that use older ""pyroute2"" versions, this library is
not needed but this patch should enforce the upper library version.

Related-Bug: #1928913

[1]https://github.com/openstack/neutron/blob/2a4074918c248adf84b0afa404d30c18710da4b2/doc/source/conf.py#L33-L40

Change-Id: I0cf458f4532d313e593a943653e8310b93ac1e9c"
e135a8221dba3beac4047ca9351bdfe600fcf01a,2021-05-20 07:55:59+00:00,"New Quota driver ``DbQuotaNoLockDriver``

This new quota driver, ``DbQuotaNoLockDriver``, does not create a lock
per (resource, project_id) but retrieves the instant (resource,
project_id) usage and the current (resource, project_id) reservations.
If the requested number of resources fit the available quota, a new
``Reservation`` register is created with the amount of units requested.

All those operations are done inside a DB transaction context. That
means the amount of resources and reservations is guaranteed inside
this transaction (depending on the DB backend isolation level defined)
and the new reservation created will not clash with other DB transation.
That will guarantee the number of resources and instant reservations
never exceed the quota limits defined for this (resource, project_id).

NOTES:
- This change tries to be as unobtrusive as possible. The new driver
  uses the same ``DbQuotaDriver`` dabatase tables (except for
  ``QuotaUsage``) and the same Quota engine API, located in
  ``neutron.quota``. However, the Quota engine resources implements some
  particular API actions like ""dirty"", that are not used in the new
  driver.
- The Pecan Quota enforcement hooks,
  ``neutron.pecan_wgsi.hooks.quota_enforcement``, execute actions like
  ""resync"", ""mark_resources_dirty"" or ""set_resources_dirty"", that has
  no meaning in the new driver.
- The isolation between the Quota engine and the Pecan hook, and the
  driver itself is not clearly defined. A refactor of the Quota engine,
  Quota service, Quota drivers and a common API between the driver and
  the engine is needed.
- If ``DbQuotaDriver`` is deprecated, ``CountableResource`` and
  ``TrackedResource`` will be joined in a single class. This resource
  class will have a count method (countable) or a hard dependency on a
  database table (tracked resource). The only difference will be the
  ""count"" method implementation.

Closes-Bug: #1926787

Change-Id: I4f98c6fcd781459fd7150aff426d19c7fdfa98c1"
54420d04dd2abc2bdeb78b9490032e1b1ebd3fac,2021-05-20 07:56:29+00:00,"Skip ""test_keepalived_spawns_conflicting_*"" tests

SIGHUP signal command to stop those processes does not return and
the test (and eventually the whole testsuit) timeouts.

Until a proper fix is implemented, these tests will be skipped
temporarily.

Change-Id: I592d8b7bb2afe5cd93cbb0d0ea7062f1b724ff2a
Related-Bug: #1921154"
a75fc891bc17fd49b9194d2aed4678d623ec8caf,2021-05-20 09:00:40-04:00,"Add mitogen to the docs requirements

Mitogen is dependency of the pyroute2 and was added link to it
the docs in pyroute2 0.6.1. Due to the missing mitogen in our
docs venv, docs job was failing.
So let's install mitogen as docs env requirement, at least for now
to unblock our gate.
Later we can think about better solution as e.g. adding it properly to
the requirements or report and fix the issue in the pyroute2.

Change-Id: Iba37581916842bb5fc9f42f7f483d3431747bf8d
Closes-Bug: #1928913"
ab0895fdf490fe2c058752819f84a311e5322e0a,2021-05-21 08:06:40+00:00,"Change minversion of tox to 3.18.0

The patch bumps min version of tox to 3.18.0 in order to
replace whitelist_externals with allowlist_externals option.
https://github.com/tox-dev/tox/blob/master/docs/changelog.rst#v3180-2020-07-23

Signed-off-by: Takashi Natsume <takanattie@gmail.com>
Change-Id: If304d7c277850470448ca9bcd0f0bfd250ec001d"
444ef49bea913cd7fec664f56ad460e8e3e68b66,2021-05-24 07:11:58+00:00,"Add test cases for concurrently Object delete

Verify if concurrently delete neutron DB records will
encounter the StaleDataError which suggest us to add
""confirm_deleted_rows=False"" to mapper configuration.

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/777581

Change-Id: Ia8935d5dd87402bedfd7aa9df9dfcb0ce06f8e39
Related-Bug: #1916889"
edc3852c83980d722a09eab17ca3c2214c79ee64,2021-05-27 13:32:37+00:00,"Fix phys network lost after reconfigure

This patch moves phys_brs and 'self' associated attributes from
setup_physical_bridges to __init__. Otherwise, bridges from bridge_mapping
could be lost, e.g. when setup_physical_bridges is called with only
reconfigured bridges from _do_reconfigure_physical_bridges.

Closes-Bug: #1929438
Signed-off-by: Anton Kurbatov <Anton.Kurbatov@acronis.com>
Change-Id: Ieadb801e48898e8b654153ad37be80dd9c865413"
b141aed51296fd6564ccce18f907dc1913a4bc5b,2021-05-31 11:41:04+00:00,"Remove leading zeroes from an IP address

In python3.9, ipaddress.IPv4Interface does not support defining an
IP address with leading zeroes. E.g.:

>>> ipaddress.IPv4Interface('00.0.0.0/0')
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/usr/lib/python3.9/ipaddress.py"", line 1390, in __init__
    IPv4Address.__init__(self, addr)
  File ""/usr/lib/python3.9/ipaddress.py"", line 1307, in __init__
    self._ip = self._ip_int_from_string(addr_str)
  File ""/usr/lib/python3.9/ipaddress.py"", line 1199, in
_ip_int_from_string
    raise AddressValueError(""%s in %r"" % (exc, ip_str)) from None
ipaddress.AddressValueError: Leading zeros are not permitted in '00' in
'00.0.0.0'

Change-Id: I29137b22c158e979e81be9e41464948aa99f5498
Closes-Bug: #1930222"
4de350a54a3e3e59371391a7a022447b49ae508e,2021-06-02 17:19:54+00:00,"Switch neutron-rally-task job to ML2/OVS and skip ""test_models_sync""

After switch of the default Neutron backend to the ML2/OVN
in the Devstack we had 2 rally jobs running actually with the
same Neutron backend.

This patch configures explicitly ML2/OVS as a backend in the
'neutron-rally-task' job so it is like it was before the change in
the Devstack repo.

In order to fix the CI, this patch also skips ""test_models_sync"" test
cases. Once [1] is fixed and released, we'll be able to create SQL
tables specifying the ""_constraints_included"" flag. When creating a
table, this flag should be set to ""False"" in order to be able to set
the ""index"" and ""unique"" parameters for each column in the table
definition, as we do now.

""test_update_router_admin_state"" is excluded from
""neutron-ovn-tempest-slow"" until LP#1890445 is fixed.

Set ""test_restart_wsgi_on_sighup_multiple_workers"" as unstable.

CI job ""neutron-ovn-tempest-slow"" has been set to non-voting until
LP#1930402 is fixed.

Related-Bug: #1929518
Related-Bug: #1890445
Related-Bug: #1930402
Related-Bug: #1930367

[1]https://github.com/sqlalchemy/alembic/issues/848

Change-Id: I38ed7931169434fecbbefa3762f51a522ef3c509"
a98fe51b83440693f8acf17b157c38a944ef65ef,2021-06-03 15:51:46+00:00,"Set ""floatingip.fixed_port"" as viewonly

Set ""floatingip.fixed_port"" attribute as
viewonly. According to [1], ""the originating relationship for a
particular state change will not produce state changes within the
viewonly relationship"". That means any change on any of those ports
won't change the backref and won't affect ""floatingip"" object.

Closes-Bug: #1930294

[1]https://docs.sqlalchemy.org/en/14/orm/relationship_api.html

Change-Id: I202a12f82f70b1094cdb986ba404f396d5e0e427"
f450886ff93a201c6520d84088c3a97330814140,2021-06-03 15:58:26+00:00,"Allow the use of legacy routers within RPN segments

This patch adds to legacy routers (no HA nor DVR) to be connected
to a router provider network segment through the gateway interface.
The router will be connected to one single segment of the RPN; that
means the router will have L2 connectivity to one single subnet.
The gateway router port will have an IP address on the subnet CIDR;
that will provide connectivity to the broadcast domain of this CIDR
(as usual, that doesn't change).

The router, in other scenarios, adds the other subnet CIDRs to the
router namespace routing table. That allows to SNAT any packet to
those CIDRs through the gateway port.

In the RPN case those routes are not added because there is no
broadcast connectivity with the other subnets. Any packet that needs
to reach these other subents, should go through the local segment
gateway IP address. This default route is added always into the
router namespace.

Closes-Bug: #1923592

Change-Id: Ib66b1d7b60eb0ac0a9e3dfd08aae29cb03abde34"
2244af771f6aec1b67770522645ca5ce023950a9,2021-06-03 15:58:41+00:00,"Add ""filter-validation"" support for ""OVNL3RouterPlugin""

Change-Id: Ia044a0f1f0086d3313b01b03cbc498551c6a8e9d
Closes-Bug: #1929658"
d0b16473d843bde923d74837d4e24911cba14642,2021-06-03 16:00:04+00:00,"[FT] Remove skip guard from SQL tests

Since [1], TestModelsMigrations* tests execution time was reduced
significantly. The test skip guard in case of timeout is not needed
anymore.

Related-Bug: #1687027

[1]https://review.opendev.org/c/openstack/neutron/+/786029

Change-Id: I19a800a475692bc6e64f98d2eaaaae035e4fbfb6"
05ce5a1f9409d9fdd4ef92133f38d7ec9084b1c5,2021-06-03 16:01:39+00:00,"VLAN ""allocate_partially_specified_segment"" can return any physnet

When allocating a partially defined segment with VLAN type driver, any
physical network can be returned. The method will select randomly any
VLAN segment available, independently of the physnet configured order.

Change-Id: I4d344f5ca6673b70b69a03503ec0f267bf0cadf7
Closes-Bug: #1929190"
77ac42d2ee664263dd1dfd391dac4d8e062875e0,2021-06-03 16:02:18+00:00,"SR-IOV agent can handle ports with same MAC addresses

SR-IOV agent can handle ports with same MAC address (located in
different networks). The agent can retrieve, from the system, the
MAC address and the PCI slot; because the PCI slot is unique per
port in the same host, this parameter is used to match with the
Neutron port ID stored in the database (published via RPC).

RPC API bumped to version 1.9.

Closes-Bug: #1791159

Change-Id: Id8c3e0485bebc55c778ecaadaabca1c28ec56205"
074c131b570adb60150ea25d7cec2367ee963ac2,2021-06-03 20:06:44+00:00,"Disable pep8 import check for pyroute2 library

Since version 0.6.2, pyroute2 library dynamically imports the needed
modules when loaded. A static analysis will fail when checking the
import references.

Change-Id: I5aaf9494a2d5c2533199e6b92d4df8fe785f83a3
Closes-Bug: #1930750"
383f209b502493ca6b059394e2644def754b2de1,2021-06-04 12:09:07+03:00,"[DHCP] Fix cleanup_deleted_ports method

Assume that only one port is deleted within 24 hours, in method
cleanup_deleted_ports the port removes from deleted_ports but not
removes from deleted_ports_ts
In this fix ports older than 1 day will be dropped from
deleted_ports and deleted_ports_ts properly

Closes-Bug: #1930838
Change-Id: I1af32e72abb9f101f9729aa6d1354c33a95c98ee"
96b2926671d66e7a1b32cdfec645aa9dd143aa48,2021-06-04 11:18:53+00:00,"Add CONTEXT_READER to ""get_reservations_for_resources""

The method executes DB operations outside a DB context and with an
inactive session.

Change-Id: Ifd1c7b99421768dfa9462237e2b1b14af0e68f41
Closes-Bug: #1930876"
65cce351d74a9a637fdb2a9d5e0e63445dda9ea9,2021-06-04 19:49:02+00:00,"Use TCP keepalives for ovsdb connections

When failing over OVN DB servers from one server to another, the
server which originally hosted the VIP doesn't notice the connection
is gone and doesn't reconnect. Ultimately, this is something that
needs to be fixed in python-ovs, but setting the SO_KEEPALIVE socket
option avoids the issue. This also has the benefit that the client
doesn't need to send 'echo' requests, which can time out on an
overloaded ovsdb-server, which causes a disconnection which then
adds even more load on the ovsdb-server as it has to send the entire
db contents over the wire after the connection.

Closes-Bug: #1930926
Change-Id: Ie0205785cab307c132fbe409588739685cade7c0"
7d8a5eb5a76ce5df8688db8b792a6dd4d839d677,2021-06-05 11:02:29+00:00,"[OVN] Add availability zone to the ML2_SUPPORTED_API_EXTENSIONS list

Currently in the ML2_SUPPORTED_API_EXTENSIONS which is list of
extensions supported by OVN mech driver there was
network_availability_zone extension. But that extension requires
availability_zone extension which was added only in
ML2_SUPPORTED_API_EXTENSIONS_OVN_L3 which is list of extensions
supported by the OVN L3 plugin.
To fix that, this patch adds availability_zone extension to the
ML2_SUPPORTED_API_EXTENSIONS list also.

Related-Bug: #1929676
Change-Id: If815cff18f83962233f3d6a535b18070690ce948"
6fb2f513da3e7f5b258726f187f14fbfec71c427,2021-06-05 13:03:10+02:00,"[OVN] Add 'port-mac-address-regenerate' to the supported extensions

In fact this API extension is independent of the mech driver and should
be listed as supported by the OVN mech driver to not be filtered out
from the list of actually available extensions.

Related-Bug: #1929676
Change-Id: Ie2d5c52ce09b1b366717830f0af53f26366ee4b8"
be43141a5ff6875a146746cb75f927445328c871,2021-06-06 23:56:14+09:00,"Provide the rpc_response_max_timeout parameter to sriov-agent

The rpc_response_max_timeout parameter is used in comminucation over
messaging queue, thus should be available for sriov-agent which
communicate with neutron-server over messaging queue.

Change-Id: Ie6ae31e40488fd8f3d43e83b25e536a7dd9d938c
Closes-Bug: #1930996"
c915b93e7690f6d8accf95417284600df9aa5a90,2021-06-07 08:23:18+00:00,"Bump alembic to 1.6.5

This version fixes the problem reported in LP#1929518 as described
in [1].

[1]https://github.com/sqlalchemy/alembic/commit/acc82bff397be712a7e4f5e2069e7bfbf93ff5a9

Change-Id: I894eb3524681a3abaca5eeca0aa47028e7f1ff44
Closes-Bug: #1929518"
6afdff8494422744549c74a948d1190e760c2fbf,2021-06-07 12:38:27+00:00,"Bump lower version of evenlet to 0.25.1

That fixes the lower-constraints job with pyroute >=0.6.2.

Change-Id: I849d777903b10a809947f0564205deb73e668c3c
Closes-Bug: #1931098"
a660f77d388682fd464ba3a624c9fe5599dbd938,2021-06-07 12:39:28+00:00,"Remove ""mitogen"" library installation from ""docs"" job

Since pyroute 0.6.2, this dependency is not needed anymore. The
pyroute version is bumped both in requirements and doc/requirements.

This patch bumps the pyroute2 version to 0.6.4 (newest version
provided in upper-requirements).

Change-Id: I627e902e32fe59c6829c3bc92af19abff4b70f9a
Related-Bug: #1928913"
13994d2327d02977faa638422b579912cf3dda7f,2021-06-08 05:01:28+00:00,"Mark fullstack test_l2_agent_restart as unstable

With linuxbridge agent the connectivity test fails often after l2 agent
restart, so mark it as unstable until the root cause is found.

Change-Id: Ida3193acac2fa22bbfd4b18ef3a3bceafe46d3ec
Related-Bug: #1928764"
95656a5893063a237f8941f6e63e233e9171a018,2021-06-08 12:18:44+03:00,"Update handler for PORT AFTER_CREATE

Updated handler for PORT AFTER_CREATE events
to handle_payload_event method. Once we move over
to payloads for all callbacks the shims will be
removed.

Closes-Bug: #1931220
Change-Id: I0adaed888d8c23e0d3a79380db70e8c709324a6d"
07337f9e99cdcfb1af3546a537d5595330e8bded,2021-06-08 15:15:08+03:00,"Use 2 dhcp agents in TestLegacyL3Agent

This is a workaround for privsep hanging issue described in bug 1930401.
Proper fix is developed in
https://review.opendev.org/c/openstack/neutron/+/794994
- this fix will revert current change to reproduce and verify
privsep issue is fixed.

Related-Bug: #1930401
Change-Id: I143cd55612118f243c0e502fb77a611d1ee48761"
437a311eca27bde5799b04d6a27d8e0e2aaf1c1f,2021-06-09 07:35:54+00:00,"Using 31-Bit and 32-Bit prefixes for IPv4 reasonably

When needing to create a point to point connection via a subnet,
generally and /31 is the recommended cidr. Neutron supports /31
disabling dhcp and gateway on a subnet. /32 is also supported in
openstack.

Closes-Bug: #1580927
Change-Id: I3bfa3efb9fb8076656b16c89d2f35d74efde12b7"
a1ca4980dada08fa9119ddefe439d616f4405fd1,2021-06-09 13:24:06+00:00,"Remove timeout skip guard for LP#1687027

Since [1], SQL tests do not fail because of a timeout.

Closes-Bug: #1687027

[1]https://review.opendev.org/c/openstack/neutron/+/785568

Change-Id: If8386dd40aa86a0a9a25d859cc66b7ac1fa03ba6"
c0846c6518811c02435ba32cabd32592cea0018f,2021-06-09 15:37:48+00:00,"Fix ""config-routed-networks"" document errors

Fixed ""config-routed-networks"" document errors reported in [1].

Related-Bug: #1923592

[1]https://review.opendev.org/c/openstack/neutron/+/791178

Change-Id: I3a0e83c1ca273582233fb7788c81e4ba298bc6d0"
cc3dc7c8508a142b614ee9cfe3f4a6766f62d8b8,2021-06-09 17:01:33+00:00,"Add CONTEXT_READER decorator to ""get_ha_router_port_bindings""

This method, when called from outside an active session, must create
a new one, given the context.

This patch also changes the L3HARouterAgentPortBinding.port and
L3HARouterAgentPortBinding.agent relationships to be ""joined"". That
will retrieve the port and the agent DB registers in the main query
and the returned object won't need to make subqueries to retrieve
them. The SQL query looks like
http://paste.openstack.org/show/806275/.

Change-Id: I7870b869a755054ef1989f86ebdd3470ec5cf435
Closes-Bug: #1930397"
a292bea168941acfce5c2b058c2f178e8ff5c1ae,2021-06-10 09:11:30+08:00,"Add the DHCPReponder for IPv6

This patch implements the responder for DHCPv6. Same as
the IPv4, this is to assemble the DHCPv6 packet with
its related options based on the information of
neutron Port/Subnet/Network.

Partially-Implements: bp/distributed-dhcp-for-ml2-ovs
Related-Bug: #1900934

Change-Id: If3e96e667b31b039dd1f55b978321f96facfc3e1"
da760973be09a98a1fc07c519e74a11899cb4aa5,2021-06-10 08:54:35+00:00,"Use ""multiprocessing.Queue"" for ""TestNeutronServer"" related tests

Instead of using a file to log the processes status and actions,
""TestNeutronServer"" now uses a ""multiprocessing.Queue"" that is
safer than writting a single file accross multiple processes.

Change-Id: I6d04df180cd9b2d593bb99c8d22a60a3534f22a0
Closes-Bug: #1930367"
48af145d95dcc50897b504a8bbff44c3906a112b,2021-06-10 12:48:44+00:00,"Add ""nova:live_migration_events"" flag to subnode in multinode CI job

Added ""nova:live_migration_events"" flag to subnode neutron.conf file in
""neutron-tempest-multinode-full-py3"" CI job. That flag was missing in
the patch implementing this feature [1].

[1]https://review.opendev.org/c/openstack/neutron/+/766277

Change-Id: Idc938a1dc9de3ad77f558df4f4fb4ae5c3de3d21
Related-Bug: #1901707"
e3bb98c7e7ea0dab4a81dd3dbf50e4d50ddc66ee,2021-06-10 14:45:58+00:00,"Bump os-ken to 2.0.0

That will avoid problems with eventlet 0.31.0 version, as seen during
the requirements upgrade.

Change-Id: I9a6798a6b0438149af8190dc90c70f79735bb01d
Closes-Bug: #1930195"
6ada9124143f42311951a75b5d586bbab4451ce6,2021-06-11 09:18:41+02:00,"Set trunk sub-port when bind profile is created

Closes-Bug: #1931583
Change-Id: Ief14ef053023a088716fa49e13d832b7e8faef31"
817d807e9dd6e7b0d1da46342e12f6392d9372ce,2021-06-11 13:26:53+00:00,"Load Linux Bridge Trunk extension if service plugin configured

Load the Linux Driver Trunk agent extension driver only if the service
plugin is enabled. If the service plugin is not enabled, the agent
extension will not subscribe to the port events.

Change-Id: I883abb5ef122ac7f8fb029d0334fa2d68893f8aa
Closes-Bug: #1930443"
577217c52d677ba35ca78b87c06302d506f66ff9,2021-06-15 09:39:03+09:00,"Make default hypervisor hostname compatible with libvirt

This change ensures that neutron relies on the same logic as libvirt
to generate hypervisor hostname, to fix imcompatible hostname format
used in Nova and Neutron for resource provider name in some
configuration pattens like the one generated by TripleO.

Closes-Bug: #1926693
Change-Id: Iea2533f4c52935b4ecda9ec22fb619c131febfa1"
d7371e13e4516622a411cf463324505da52e4935,2021-06-15 10:29:20+02:00,"Revert ""Set system_scope='all' in elevated context""

This reverts commit 062336e59bb3d427bf4094779dc8e93d92c078d5.

Now, we have proper fix for the system_scope='all' in elevated context
in the neutron-lib so we can revert temporary fix made at the end of the
Wallaby cycle.

Related-Bug: #1920001

Conflicts:
    neutron/api/rpc/agentnotifiers/dhcp_rpc_agent_api.py
    neutron/common/utils.py
    neutron/db/address_group_db.py
    neutron/services/segments/db.py

Change-Id: Ife9b647b403bdd76a8a99984ea8858bf95c96bc3"
fe41bc03309d41f0f608ddc8013256a64444a52b,2021-06-15 08:45:55+00:00,"Merge ""Remove timeout skip guard for LP#1687027"""
8f656aab7ca338a2bec405f548de535eab0a897f,2021-06-15 15:28:31+03:00,"Fix QoS dscp rule permissions in documentation

Closes bug: #1932016

Change-Id: I1d60c9c694a6d6821f3ab5a8ab96cbee9c3244c1"
c7e1de09e1fd221ab9d5880165baaa3f34678c35,2021-06-16 14:03:33+02:00,"[Docs] Add info about vlan transparent networks' MTU

MTU configured inside instances which are connected to the networks
with enabled transparent vlan needs to have MTU set to 4 bytes less
than it is provided by DHCP to make space for additional vlan
header.
This is required only if instance will have some vlan tagged interfaces
configured.

Closes-bug: #1906318
Change-Id: Ia6691cbe35a1e874857ec94660ac4b1850586305"
95d80a2757e23b6e8cdb44576f3913eedb400810,2021-06-17 08:30:51+05:18,"[OVN] neutron-ovn-metadat-agent add retry logic for sb_idl

Add retry logic to retrieve OvsdbSb IDL object.
Add port fork event in MetadataProxyHandler to wait for the
OvsdbSb IDL object.

Closes-Bug: #1928031
Change-Id: Idce1ec4e160c5a7f8532b57f577b9518a06b0dd0"
976cba61331702e1a8e4781af478fa4676afd13d,2021-06-18 08:34:00+00:00,"Force to close http connection after notify about HA router status

Neutron-keepalived-state-change-monitor process is using HTTP to notify
L3 agent that state of the HA router was changed. It is done through
unix socket.
With HTTP 1.1 connection isn't closed properly and if
router's state was changed more than once in short time, it could happen
that wsgi worker on the L3 agent's side didn't process second request at
all. That caused problem with transitioning router to master state after
creation.
Request to close connection should be explicitly defined in the header
[1] and this patch adds ""connection: close"" header to the headers send in
such request to do exactly that.

[1] https://www.geeksforgeeks.org/http-headers-connection/

Closes-Bug: #1923633
Change-Id: Ic08ca5b167db4884efa07112cf9a6c3637e1b827"
5b5bc483aeadecd12e7f7ef81eae523910ff5716,2021-06-18 17:26:42+02:00,"Fix devstack path in plugin.sh

devstack is not necessarily cloned to ""$DEST/devstack""
(""/opt/stack/devstack""), it can be run from any other directory.
$TOP_DIR [1] should be used when referring to the devstack working dir.

[1] https://opendev.org/openstack/devstack/src/commit/\
6af3cb9eb273c127c20bc07f65c9a5d7f8ba95cd/stack.sh#L73

Change-Id: Ibf4890985b6d07077d04f989eab833ae5b057200"
8cc7c0cf7a5196103b097fae67eccbd5dc3980ac,2021-06-21 11:42:45+02:00,"Remove FIP agent's gw port when L3 agent is deleted

Floating IP agent gateway ports are created for each external network
for each node where DVR L3 agent is running and where there is some FIP
from the ext_net.
But even, if L3 agent is removed (e.g. when scaling down the cluster),
such floating IP gateway port is never removed so it consumes IP address
from the external network.

With this patch when the DVR L3 agent is deleted, all such fip gateway
ports owned by that agent will be deleted.
When new L3 agent is created (registered in the DB), Neutron will check
if there are any floating IPs on that host and will recreate such FIP
gateway ports for it.

Closes-Bug: #1891360
Change-Id: If6ef990baf039c556d7420962ac4c54608711f06"
b74a272bba5fafcad5847b2b100dc81b088ea3aa,2021-06-21 12:50:43+02:00,"Add CONTEXT_WRITER decorator to delete_floatingip_agent_gateway_port

Closes-Bug: #1932483

Change-Id: I50a7585441bfb28f47ad2f587eec4e6954838e9f"
ac1597d00911fefdd5dec388052cb8fc76f30965,2021-06-22 01:41:28+00:00,"[L3] Add some logs for router processing

In order to dig the real action of a ResourceUpdate, add logs for:
1. add/update router
2. delete router
3. delete namespace
4. agent extension router add/delete/update actions

Change-Id: I5c0ff485cd0c966afe535f8063deca6e410e012d
Related-bug: #1881995"
2ea7d66216f96705d7a50d39a30046193bba17f1,2021-06-22 09:43:04+08:00,"Bump neutron-lib to 2.12.0

Related-bug: #1912460
Change-Id: If86e42c7c56bb0fc571d68818febf54a29a31aa2"
66ac943b6435901c163c3050ad41dfcaf36ac11d,2021-06-22 10:33:11+02:00,"Config option to enable OVN IDL on other workers

Add a configuration option to ovn group:
additional_worker_classes_with_ovn_idl
to optionally enable OVN IDL connections on additional workers.
By default the IDL connections are only initialized on API and
maintenance workers as other worker types normally don't need them.
But some plugins or extensions might still require IDL connections on
other workers and now may enable them via configuration, by adding the
worker class (or its alias from neutron.worker_classes) to
additional_worker_classes_with_ovn_idl.

Closes-Bug: #1927977
Change-Id: Ia0d882220cd281e3c91648e3f32a842d61a5f57d"
953eb92a4f1d686a45d91100c8b02f9fe0771ed9,2021-06-22 10:54:13+01:00,"[OVN] Disable mcast_flood on localnet ports

The mcast_flood option will unconditionally forward multicast traffic
for that port, this behavior is not desired and results in duplicated
traffic being sent to the same port. This patch disables that behavior
by setting the mcast_flood option for the localnet ports to False.

Note that, a similar option called ""mcast_flood_reports"" is still
enabled because we do want to have the multicast reports being sent but
not normal traffic.

Change-Id: I8033e12f5b30e3ecc9143431543266a890fe4073
Closes-Bug: #1933207
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
0cd01edc9c0788ba9c63b34e78e347042eb5792d,2021-06-23 09:42:30+02:00,"[OVN] Add subnet-service-types as supported by OVN mech driver

This API extension is supported by ML2 plugin and is database only
thing. So there is no need to filter it out when OVN backend is used.

Related-Bug: #1933115
Change-Id: Ica4490d3ec36e227301e3f3a7b093750b2e18b83"
dbfa1b5d9298dc146ff5eb6e560fea42600cf64f,2021-06-23 13:10:40+02:00,"Remove tox_install_siblings=False from the functional job's definition

It is set to true by default in base jobs. Also e.g. in
functional job for neutron-dynamic-routing it is set to True so
it should be fine to use default value in the neutron-functional job as
well.

Related-bug: #1932483
Change-Id: I2c8392628dd63ca612c6d8428daab66724e88c20"
56e8498a4dac9e4db6185cc5d97612d824c6e8d5,2021-06-24 08:38:38+08:00,"Add agent extension 'dhcp' for ovs agent

Add a new ovs agent extension to support distributed DHCP for
VMs in compute nodes directly. For large scale deployment, this
can be used to reduce the number of neutron agents. Large scale
cloud can benefit from it.

From the perspective of virtual machine, this will reduce the
probability of DHCP request failure. The VMs will get a higher
level availability for DHCP R/R, no single point of failure
permanently. If one host goes down, VMs in other hosts will not
be influnced by it.

For the perspective of network performance, after using this
extension, the DHCP broadcasting packages will be limited
to the host locally.

Partially-Implements: bp/distributed-dhcp-for-ml2-ovs
Closes-Bug: #1900934
Change-Id: Id8a4c501daad7c2185e6d69441182666ef987e61"
5fb5653ffe700a8f9fb0949d16ecbf0978b61fb6,2021-06-24 11:54:17+00:00,"Check router routes connectivity when GW port is updated

When the router GW interface is updated or deleted, the routes should
be checked in other to prove all of them have connectivity to any of
the router interface subnets.

In a router, all routes nexthops must have connectivity with one
interface subnet. If not, this route cannot send the packets to this
route gateway; therefore this route becomes invalid.

Closes-Bug: #1925368

Change-Id: I7ce93b863b0dc0d4a2376fcfd602d2facb6fb2d0"
6bc1c00d66ced82dd142739790222e8408684696,2021-06-24 22:42:09+02:00,"Copy existing IPv6 leases to generated lease file

Because the DHCP agent does not know the IAID (identity association
identifier) of assigned IPv6 addresses it's not possible to generate the
lease file including IPv6 leases. Because of this IPv6 addresses are
excluded when generating the lease file in case of DHCP agent restarts.
This causes DHCPv6 clients to fail to RENEW their lease and to go
through a full address discovery cycle with possible short connectivity
disruption.

This commit copies the existing IPv6 leaes from an already existing
lease file if present. While this does not allow for DHCP agent
failover, this is still better than just skipping the IPv6 addresses.

A lease file without the IPv6 addresses is still generated if an agent
is migrated to a different host.

This commit complements the fix implemented in
Ib1b2f284ab81f1c4af7b08b5257b45a3f6e79c3e which just skips the IPv6
leases as otherwise the lease file would be invalid and all leases would
be lost. It does not change the behavior for still valid IPv4 leases.

With this issue fixed an additional fix is required to not loose DHCPv6
leases when the agent restarts dnsmasq. Currently the DHCP agent
regenerates all configuration files on restart. This means that DHCPv6
leases are lost as they can't be regenerated. This changes the agent to
only delete the config files if the agent's ports are also removed.

Closes-Bug: #1722126
Related-Change: Ib1b2f284ab81f1c4af7b08b5257b45a3f6e79c3e

Change-Id: I40761b30563749251b9d74731bbe7a80a124da89"
bc82a664b637c72b49fd585a41350164103d6aaa,2021-06-25 07:40:41+00:00,"Move dns-integration extension to the ML2_SUPPORTED_API_EXTENSIONS list

dns-integration extension is actually implemented as ML2 extension
driver, so has nothing to do with the L3 plugin.
In OVN it was listed in the ML2_SUPPORTED_API_EXTENSIONS_OVN_L3 but it
should be in ML2_SUPPORTED_API_EXTENSIONS. This patch moves it to the
correct list.
This patch also removes disable_dns_extension_by_extension_drivers
method from the OVN L3 plugin class as there is no need to disable this
extension by L3 agent.

Related-Bug: #1929676
Change-Id: I456afcc9054627e74b18460d169052f262451c22"
db2207f32d2b88772966e4e2a4f10e2ad66fcf49,2021-06-25 07:41:11+00:00,"[ML2] Change way how list of supported API extensions is made

Previously if extension was not supported by one of the mech drivers,
but it wasn't filtered out by next mech driver, it was available finally
in the list.
Now, this patch changes that so if extension is disabled by one of the
drivers it isn't available on the list at all.
This will work better e.g. with discoverability of what is available
e.g. when OVN backend is used by Neutron.

Closes-Bug: #1929676
Change-Id: I6a4ff42f47f7ee90365516d37472c09ac87773e5"
b189b0f32284ca5209a9b116953053448ca4a49b,2021-06-25 08:54:32+00:00,"Use OVS backend for testing os-ken library

Only OVS agent uses os-ken library, makes sense that the CI job
testing it uses this backend.

Closes-Bug: #1933626
Change-Id: I8b2eb11dfae5bc67ee9c3629f609e4b461e0ad7c"
4b22eea4be54015c6b517257013597edbe725806,2021-06-28 17:27:47+08:00,"Add fullstack test case for OVS DHCP extension

This patch will create two fake VMs to verify the DHCP R/R
for its NIC. Ping 4/6 will be run after the interface request
and config the IP address via DHCPv4/6 by using dhclient.

For fullstack test fake environment, setting enable_traditional_dhcp
to False means enable DHCP extension for OVS agent automatically.

Partially-Implements: bp/distributed-dhcp-for-ml2-ovs
Closes-Bug: #1900934
Change-Id: I40d6464953fbc4d4ca2c05a6051eba43cd05fedd"
9ae22b1fefabe8bf18d5dd26f49821b673bd39d4,2021-06-28 18:32:31+02:00,"Fix ObjectChangeHandler thread usage

Instead of spawning new thread for each OVO change,
keep one long running thread fetching changes
from queue.

Closes-Bug: #1926417
Change-Id: I390cabeaf6ebbc1c6206fe2cc226ef437462c7fd"
1a99adb530343d594aeed0de1abf361cb58009b4,2021-06-29 08:46:54+08:00,"Refactor DHCP common config options

Align the config with DHCP agent options `dhcp_renewal_time`
and `dhcp_rebinding_time` for ovs-agent dhcp extension.

Partially-Implements: bp/distributed-dhcp-for-ml2-ovs
Related-Bug: #1900934

Change-Id: I671f23fcb763b847b1dc2b1d2de0567569aba892"
cde0f68f9e579a27d7aaf7c40e667616358ad396,2021-06-29 12:10:39+02:00,"[OVN] Add binding-extended to the ML2_SUPPORTED_API_EXTENSIONS

This extension should be enabled with ML2/OVN backend also but
recent changes in how supported extensions are calculated ([1])
it was filtered out.

[1] https://review.opendev.org/c/openstack/neutron/+/793141

Closes-Bug: #1933954
Change-Id: Ic8ab322683e72101a8f797b108bf23bc169092cb"
5c9a7fe1b400c3549ee1cdd8ffd53895d6db1e86,2021-06-29 13:48:59+02:00,"Add extra logs to the network update callback in L3 agent

It may be useful during debugging some L3 and events related issues.

Related-bug: #1933234
Change-Id: I4bcba0ae82d99fac962d758b48b1727f344ec7bb"
6a74cd76fd006d7c88575fc7ae39a3b499ac7d54,2021-06-29 16:48:26+00:00,"[OVN] Do not fail when processing SG rule deletion

When a security group rule deletion command is issued, before executing
the database operations, a ""BEFORE_DELETE"" event is raised.

The OVN handler attending to this event should not fail if the security
group rule does not exist; the database transaction [1]  will in case of
not finding it, raising the correct exception and HTTP 404 error:

  Jun 29 16:58:28 dev20 neutron-server[8820]: INFO neutron.wsgi [None \
    req-1821ec9f-2439-420b-80eb-1138896de865 demo admin] 192.168.10.70 \
    ""GET /v2.0/security-group-rules/missing_sg_rule_example HTTP/1.1"" \
    status: 404 len: 348 time: 0.0352871

[1]https://github.com/openstack/neutron/blob/6196c0873b4af9abd9055bf92478ff05ae090104/neutron/db/securitygroups_db.py#L858-L868

Change-Id: I58f6e5b309e089f6681d2c4bbff4ff7fda96435f
Closes-Bug: #1933638"
f6c3747caeac08df9d865312686be8eccb7f0472,2021-06-30 11:37:45+02:00,"Use elevated context to get default SG from database

With new system/project scopes it may happen that project admin
will try to list security groups for different project and during
that call Neutron will ensure that default security group is created.

In such case elevated context needs to be used to get SG object from
the database otherwise, SG will not be found and error 500 will be
returned through the API.

Use of elevated context is fine here as if user don't have access to
the SG, it will be filtered out by policy mechanism and it will not
be returned through API.

Closes-Bug: #1934115
Change-Id: I0ca07d1a1aaf05c1992aea9e29575580d7933324"
be7d0bb6abc893e53dfc864c52506928b1d38fa3,2021-07-02 16:54:43+05:18,"Update arp entry of snat port on qrouter ns

In some cases, the arp entry of snat port is not updated
in qrouter namespace. l3-agent calls get_ports_by_subnet()
while setting arps for the subnet. And the snat port is
not returned if it is still unbound. One of the scenario
this is observed is when router is created, external
gateway set and internal subnet attached to router in
quick succession.

This patch retrieves snat port details from router info
as well and updates arp entry for snat port.

Closes-Bug: #1933092
Change-Id: I7ee797b4b930306cf6360922d855f8b24f1b813d"
3b46df48476fdfd5a479ad537d190474f39e395b,2021-07-05 19:05:12+08:00,"Change fullstack dhclient lease file to tmp folder

Each cases are sharing the common lease path for dhclient,
for instance, in CentOS it is: /var/lib/dhclient/dhclient.leases.
That means all fullstack cases will use this file to store
fake VM's NIC DHCP lease information.

After run several times of fullstack cases, the dhclient will
get failed to set the test fake VM port's IP due to the mess
settings in this file.

This patch sets each fake VM's NIC lease file path to the
tmp folder with it's port id.

This may fix some cases that cannot set the IP addr to the test
device properly via DHCP.

Closes-Bug: #1934646
Change-Id: Ia87fa7c08df473acbcf1600035d99a83ed4b4375"
ec550f5f52c5377f57499eeadd7e0d665dcdb73d,2021-07-05 21:06:09+05:18,"Add fake_project_id middleware for noauth

This adds a middleware for noauth that would inject a fake
project_id for create requests. This would ensure that api
consumers don't have to provide a fake project_id in requests.

Closes-Bug: #1934039
Change-Id: I5e1de571034be41f1147c130fce66e6cf70b1369"
f637a1f60e4f38c519184cc9ce7a0dea857a95b0,2021-07-06 08:10:09+00:00,"Remove SG RPC ""use_enhanced_rpc"" check.

It's been a long time since [1] was implemented. Enhanced RPC is now
supported by default.

Closes-Bug: #1934512

[1]https://review.opendev.org/c/openstack/neutron/+/111876

Change-Id: I80c3076b9545be55b11858c4422402dd5ae1a68e"
ca15099cde582e9049360238c75803f022499eb1,2021-07-07 08:53:34+08:00,"Add devstack local.conf sample for ML2 OVS

Since devstack had set OVN as the default backend for Neutron.
Then the minimum local.conf [1] for ML2 ovs will not work at
all. For some local testing of ML2 OVS, it is not right deployment
for users to test the ML2 OVS related cases.

This patch adds a sample local.conf for ml2 ovs to install a small
all in one environment for Neutron testing.

Sample tested OS:
1. CentOS Stream 8
2. CentOS Linux 8

[1] https://docs.openstack.org/devstack/latest/#create-a-local-conf

Closes-Bug: #1934466
Change-Id: Ie7bac1d2819c332a94a0ff308a300638c17f1b1f"
1f3762b0fb8258e2f77b600df8ab96f20d65f5b8,2021-07-07 10:39:47+08:00,"[OVN] ""ControllerAgent"" should accept Chassis and Chassis_Private

Because we support OVN version with and without Chassis_Private,
""ControllerAgent"" should accept both type of registers. In Chassis, the
""external_ids"" are stored as a main attribute while in Chassis_Private
are stored on the chassis reference list.

Closes-bug: #1933401

Change-Id: I4575ca06ccba3537a8fd2347b837231e0643e64c"
26b06d246a345029ca9eb2137c1be14338f0dcae,2021-07-07 09:33:54+02:00,"Use os-resource-classes lib for resource classes names

The os-resource-classes lib is the official source of the standard
placement resource classes. Currently, the neutron-lib contains a copy
of those constants. However, they are already marked as deprecated and
are going to be removed with next major release.

Related-Bug: #1934256
Change-Id: I33ecd6f32410f9b7ab1e87a6640201ea157bc383"
6ce48c30bdc153e75c4b9b409203f472b065c11b,2021-07-08 17:03:43+02:00,"[L3] Use processing queue for network update events

Router_info's _process_internal_ports() method is the one which is
manipulating router_info.internal_ports cache and network_update()
method from the L3 agent is relying on that Router_info's cache to
check if updated network is connected to the router or not.
So they shouldn't be run together as that may cause some race conditions
and unexpected issues, like e.g. described in the related bug.

Until now, network_update event was the only one which was processed
without using queue of events. And because of that such race condition
as described above were possible.
To fix that, this patch changes network_update method in the way that it
now adds update events for each router hosted by agent to the queue.
Those events for single routers are then processed, checks if network is
actually connected to the router and if yes, schedules router update to
be processed.

Closes-Bug: #1933234
Change-Id: I2efe66a7415f7a18fb85bd2536a1901e751d6203"
a03c240ef4ea1d4b874b618dbd0163a3a2f7024c,2021-07-08 15:40:08+00:00,"Populate self.floating_ips_dict using ""ip rule"" information

When the L3 agent starts, reads the floating IP rule priority from
a state file created by ""FipRulePriorityAllocator"". In case of not
having all floating IPs registers in this file, the method:
- Creates a new priority for this floating IP.
- Creates the ""ip rule"" in the namespace.
- Adds a new entry in ""self.floating_ips_dict"".

All ""ip rules"" present in the namespace that do not match the
registered fixed IP address (""from"") and the priority assigned
are deleted.

Closes-Bug: #1891673
Closes-Bug: #1929821

Change-Id: Ia3fbde3304ab5f3c309dc62dbf58274afbcf4614"
827cca2ed75b159c3a1a2e5f193150fe32491b1b,2021-07-08 16:46:55+00:00,"Sanitize MAC addresses

This patch sanitizes the MAC address coming from a user input:
- The ""base_mac"" address configuration parameter.
- The ""port.mac_address"" stored in the database, if the script
  provided is not executed.

This patch relays on [1], that will sanitize any input coming from
the server API.

This patch adds a new script to sanitize all ""port.mac_address""
registers stored in the dabatabase.

[1]https://review.opendev.org/c/openstack/neutron-lib/+/788300

Related-Bug: #1926273

Change-Id: I8572906cc435feda1f82263fd94dda47fc1526e1"
e0ea4a51ba36e227130c3b2a29d4eadc84615a6b,2021-07-13 08:23:01+08:00,"[L2] no provisioning block for internal service port

Provisioning Blocks [1] was introduced to manage composite
object status. Port object is the one Neutron sets provisioning
block during the port processing life cycle. Here is the compute
port (VM's NIC port) processing procedure:
1. nova creates port
2. the 'openvswitch' mechinism driver inserts provisioning block
   for this port
3. nova calls related interface to plug the device
4. L2-agent sets the flows (or rules/devices) for the port and
   call update_device_list to neutron-server
5. neutron-server try to set port status to ACTIVE
6. neutron-server notify nova that ""vif-plugged"" success

This works fine for VM with its ports. But for neutron service port,
like router_gateway, router_interface and dhcp, it is unnecessary.
Because there is no dependency among neutron resources. Neutron
just knows that the ports had been set properly. And another thing
is, for most of these internal service port, there is no need of
DHCP, security group or port security.

So for neutron internal service ports, the procesure can be:
1. neutron L3/DHCP/X related service plugin creates port
2. no provisioning_block
3. L3/DHCP/X related agent plug the port
4. L2-agent sets the flows (or rules/devices) for the port and
   call update_device_list to neutron-server
5. neutron-server sets port status to ACTIVE directly, then done!

This patch will set neutron *AgentMechanismDrver (including built-in
drivers: linuxbridge, macvtap, sriov, openvswitch) to skip inserting
the provisioning_block for Neutron internal service ports.

[1] https://docs.openstack.org/neutron/latest/contributor/internals/provisioning_blocks.html

Closes-Bug: #1930432
Change-Id: Iaf7788bf0cba19a693cbf456f98e50d7b5de9e41"
9b2983743bacf6feb95a60d1b6fbc46e2427df88,2021-07-13 15:13:29+08:00,"L3 router support ECMP

This patch changes the policy for updating routes to support ECMP,
and will now add ECMP routes to the Neutron router namespace when
there are multiple routes pointing to the same destination address.

Change-Id: I842c1408ee0235bc54441e9ed69c8b87ea30651b
Related-Bug: #1880532"
90980f496cfa3cc5df1c93cf834a44f33d3f1f6f,2021-07-13 09:23:14-05:00,"Add wait for the post-fork event to nb/sb objects

It is possible for events from the nb/sb to fire before the opposite
db connection is made. These events can call back into driver code
which tries to access the other db before it is connected.

Closes-Bug: #1929197
Closes-Bug: #1928794
Closes-Bug: #1929633
Change-Id: If947581b90ced42981c4611c32de8f428a052c69"
28f3017a90ecec6208aef9696cd7947972ec17d8,2021-07-13 17:27:02+00:00,"[OVN] Set NB/SB ""connection"" inactivity probe

For each NB/SB databases, set the inactivity probe timeout value on
the Neutron configured connection register.

Neutron connects to the NB/SB databases with the value defined in
""ovn_nb_connection""/""ovn_sb_connection"" config parameters, with the
format:
- tcp:IP:PORT
- ssl:IP:PORT
- unix:socket_file

The connection register ""target"" column has the following format:
- ptcp:PORT:IP
- pssl:PORT:IP
- punix:socket_file

Closes-Bug: #1935842
Change-Id: If82ff2c92b8bec18ae3e895ce19a65cfeed9c90d"
1eabf046f3f6d25c8cf380a0c5e219f4f905b8e7,2021-07-14 07:29:50+00:00,"Remove ""_protect_original_resources"" workaround

Fix in neutron-lib was merged in [1]. We can now remove the
workaround implemented.

Related-Bug: #1577571

[1]https://review.opendev.org/c/openstack/neutron-lib/+/311858

Change-Id: I3092659882b966745839611c848523171697bc9a"
e5f19a29dcfb70ea08fa39267bc4aecd44bec2eb,2021-07-14 16:50:16+01:00,"[OVN] Fix ML2/OVN + Neutron DHCP agent use case

In an attempt to minimize the number of connections to the OVSDBs the
ML2/OVN driver stopped connecting to the OVN dbs if the Neutron worker
was a RpcWorker but, that introduced a regression for those using
ML2/OVN + Neutron DHCP agent (for baremetal provisioning).

Because the RpcWorker didn't have a connection to the OVN database the
Neutron DHCP agent wasn't able to create the DHCP port and failed with:

2021-07-13 13:36:18.116 17 ERROR neutron.plugins.ml2.managers if not
self._sb_ovn.chassis_exists(host):
2021-07-13 13:36:18.116 17 ERROR neutron.plugins.ml2.managers
AttributeError: 'NoneType' object has no attribute 'chassis_exists'

This patch adds the RpcWorker back to the list of workers that should
connect to the OVN databases.

Change-Id: I454f3b52376a02f6cc9ca9124083295631bd03d5
Closes-Bug: #1929633
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
e961c6d4734ec2336ba807e4c7aa77bdc354e2d3,2021-07-16 15:43:39+00:00,"Import ABC classes from collection.abc

ABC classes should be imported from ""collections.abc"", not
""collections"".

Closes-Bug: #1936667
Change-Id: I863f21b310fdf39030b13e2926e947b16043851a"
923284fc3791949d93d7ded9820a44f98fc734b8,2021-07-19 13:27:41+00:00,"Use explicit select condition in SQL query in ""_port_filter_hook""

Instead of executing a subquery inside a select, use a proper filter
condition instead.

Closes-Bug: #1936675
Change-Id: I97e9ca244c0716510fcd4ec81d54046be9c5f8f8"
df5cb28737453e2dfee17e177160fa6d7a59b7e0,2021-07-19 15:25:57+00:00,"[OVN][Placement] Add a SB Chassis event to track changes in BW config

Added a new OVN Client extension: OVNClientPlacementExtension. This
extension is in charge of handling the bandwidth information stored
in the OVN database, in the ""Chassis"" registers on the
""ovn-cms-options"" dictionary.

Three new keys are created to store the resource provider information
needed to parameterize the network backend bandwidth information,
following the implementation done in OVS and SR-IOV:
- resource_provider_bandwidths
- resource_provider_inventory_defaults
- resource_provider_hypervisors

When the OVN Client is started, the Placement extension will check if
the ""placement"" extension is loaded. It will also create an event to
check any configuration change done in any ""Chassis"" register.

The Placement extension will read the initial configuration stored
in the OVN database and will populate it to Placement API, creating
the needed resource providers, traits and inventories.

NOTE: This patch belongs to a series of patches to implement
minimum bandwidth scheduling blueprint in OVN backend. The next
patch will make OVN backend scheduling aware using the information
stored in Placement API and the port information passed by Nova when
a VM is created.

Partial-Bug: #1578989

Change-Id: I8ba38b8ace8852009fba8712aafa9f88c2b93ccb"
f8ca735e5f3dfb1a6cff4f23de7a554447aa7f30,2021-07-19 15:26:13+00:00,"Move mech driver VNIC validation to SimpleAgentMechanismDriverBase

The mechanism driver support VNIC types validation is done now in the
""SimpleAgentMechanismDriverBase"" class __init__ method. If a subclass
needs to administratively prohibit any VNIC type supported by default,
""vnic_type_prohibit_list"" must be passed to the base class __init__
call.

Related-Bug: #1578989

Change-Id: Ic25a8a7c716b4980ad2542b44519f77c6fdad309"
c3b99a64fc117a3dc8f6d0ff92272183753fcf3e,2021-07-20 23:38:09+00:00,"Revert ""[OVN][Placement] Add a SB Chassis event to track changes in BW config""

This reverts commit df5cb28737453e2dfee17e177160fa6d7a59b7e0.

The reverted commit triggers the failure of tempest-slow-py3 job.
tempest-slow-py3 is equal to non-voting neutron-ovn-tempest-slow job
in the neutron CI. It is a non-voting job so the error was not detected
before merging it. To recover the tempest job in OpenStack wide,
this commit reverts it.

See http://lists.openstack.org/pipermail/openstack-discuss/2021-July/023764.html

Closes-Bug: #1936983
Change-Id: Id8cdd9c69e4fef2d9c335447b498958add8b7816"
02c0b47d2267ee3c48d9991e5da7fd53dcf56556,2021-07-21 08:57:43+00:00,"Promote neutron-ovn-tempest-slow job to be voting and gating

This jobs is almost the same as tempest-slow-py3 since we switched
OVN to be default backend in Neutron. And that tempest-slow-py3 job
is used by many projects. So to avoid potential breaks of the gate for
other projects (like we did recently, see related bug for details)
let's make this job voting and gating.
As it is really used in many different projects as voting and gating
job already I don't think there is any issue with doing the same in
the Neutron gate.

Related-bug: #1936983
Related-bug: #1930402

Change-Id: I85d3830e9cc65162db846e4858871e1db547a04b"
45a33dcb0a5e58c3f4f9e51fdfae01fae6dd6709,2021-07-21 14:02:37+02:00,"doc: Do not use dvr_snat on computes

Change-Id: I1194d9995c16c1e178026986d9465aa09c1529c8
Closes-Bug: #1934666"
8261b67b6e6248c5cc1a4426544188e5bd9bfa03,2021-07-21 14:08:23+02:00,"bw-limit: Pass int parameters to Open vSwitch

Make sure we pass integer values to ovs when configuring bandwidth
limit. This was likely working properly with Python2, and we may have
missed this when migrating to Python3:

https://www.python.org/dev/peps/pep-0238/

Change-Id: I2f8d974d6644657aea95302d94ca0095d70a7e62
Closes-Bug: #1936839
Co-Authored-By: Tamás Trásy <tamas.trasy@ericsson.com>"
8e30639452312019de17f3e1e8364f579752944e,2021-07-22 09:53:38+08:00,"[QoS] Add rule type packet per second (pps)

This patch adds new API extension to QoS service plugin
to allow CURD actions for packet rate limit (packet per
second) rule in Neutron server side.

NOTE: This patch will NOT implement the real functionality
in L2/L3 backend to limit the pps.

Co-Authored-By:  NANALI <lin203@chinaunicom.cn>

Closes-bug: #1912460
Change-Id: Icc88accb88d9cec40c960c56f032c3c27317b42e"
ad31c58d60142cffcdea86d0257dc10277b53ff0,2021-07-26 15:00:32+00:00,"Remove ``ConfDriver`` code

The quota driver ``ConfDriver`` was deprecated in Liberty release.

``NullQuotaDriver`` is created for testing although it could be used
in production if no quota enforcement is needed. However, because
the Quota engine is not plugable (is an extension always loaded), it
could be interesting to make it plugable as any other plugin.

This patch also creates a Quota engine driver API class that should be
used in any Quota engine driver. Currently it is used in the three
in-tree drivers implemented: ``NullQuotaDriver``, ``DbQuotaDriver``
and ``DbQuotaNoLockDriver``.

Change-Id: Ib4af80e18fac52b9f68f26c84a215415e63c2822
Closes-Bug: #1928211"
2e6f6c9ec30259d03363479e72e36129b08563b1,2021-07-27 14:47:28-05:00,"Ensure only one worker creates neturon_pg_drop

Use an OVSDB lock to ensure that only one worker tries to create
the neutron_pg_drop port group. This also waits pre_fork so that if
getting the port group fails, neutron exits instead of continuing
on without the port group being created.

It was previously possible that a server could create the port
group and we wouldn't get the update before trying to create it
ourselves and checking for its existence.

This also modifies the get_port_group method to use the built-in
lookup() which searches by name or uuid and can take advantage of
both indexing and newly added ovsdbapp wait for sync functionality.

Closes-Bug: #1934930
Change-Id: Id870f746ff8e9741a7c211aebdcf13597d31465b"
cbef6cda98f2100a4080465dc99b1e82530e2f01,2021-07-28 11:26:27+00:00,"Add ""network_id"" to ""_after_router_interface_deleted"" payload

This parameter, sent by the DHCP agent, is needed to remove the
workaround method ""_get_network_lock_id"".

The removal of this method will be done in [1] in Y release.

Related-Bug: #1732456

[1]https://review.opendev.org/c/openstack/neutron/+/800967

Change-Id: Ibd7fed33d314e901c69da33f42029f8ea67df98d"
a27bb19e74d0508520d8e827788c2710e97880a6,2021-07-29 15:45:38+00:00,"Reduce the fullstack concurrency to 2

In order to mitigate the OOM problems in the CI, this patch reduces
the fullstack concurrency to 2. That should reduce the memory
consumption and will avoid those nasty OOM exceptions.

Closes-Bug: #1938455
Change-Id: I4de4b089e615353b7fde82bd54e0abefa244c8ab"
fafcabdbe0dccf2747884a35f3a094486c806fa6,2021-07-29 15:49:50+00:00,"Wait until workers have been launched

In ""test_restart_rpc_on_sighup_multiple_workers"", the test needs to
wait until the RPC workers have been properly launched by
``oslo_service.service.ProcessLauncher.launch_service``. Once this
method returns, it is guaranteed that the child worker processes
are running and the signal process handlers are attending the
SIGHUP signal that will reset them.

Closes-Bug: #1938428
Change-Id: I1dc56092d099223accc3aefa8e303310c4f6787e"
d4b1b4a0729c187551e1fa2b2855db136456d496,2021-07-30 17:05:40+02:00,"Fix typo in OVN SUPPORTED_DHCP_OPTS_MAPPING dictionary (ia-addr)

Closes-Bug: #1938569

Change-Id: I10e0834594f68e06244c393c00d0b3d840c45fc5"
2356f0eb874b01d4bab696e49e0286de51554f35,2021-08-02 10:59:32+02:00,"Bump oslo.log to version 4.5.0

In this version versionutils were updated for Xena release.

Related-bug: #1922237
Change-Id: I89f52929cec067bbe55b183f5dcdbc64a92805de"
63a2a65bbe9ab2ec054f47f581b505dfeb441307,2021-08-03 13:51:32+03:00,"Skip DVR binding for ports with invalid OFPORT

Invalid OFPORT (-1) causes ofctl errors and timeouts if set
it as output in a flow rule.

Closes-Bug: #1938685
Change-Id: Ib8be66c3068309832e08066af4e0b75c30e8163a"
ca2885889f5244d7bef037654551d66909091908,2021-08-04 16:51:08+02:00,"Add devstack plugin to enable ovs distributed dhcp service

Partially-Implements: bp/distributed-dhcp-for-ml2-ovs
Related-Bug: #1900934
Change-Id: I5617a72fcd4ec0de9aa7d1444d515e713029fa76"
e6c3686cd8f863c49b363504dacdb7641604a102,2021-08-04 17:02:14+02:00,"Use elevated context when getting default SG for tenant

With new scopes, when e.g. project admin context is used to ensure
default SG for different tenant, elevated context needs to be used
to make db query. Otherwise default SG will not be found and attempt to
create it in DB may fail with DuplicateDbEntry error.

Closes-Bug: #1938910
Change-Id: Ib884be6aa12bd0d3faf83f3e753f8e7aad503b68"
8ac9e2fe6d37ba4608cf141c78017524a5cae1de,2021-08-06 15:21:27+01:00,"[OVN] Fix Router Availability Zones for segmented networks

This patch changes the get_candidates_for_scheduling() method to also
consider all gateway chassis as potential candidates (limited by
Availability Zones) in case physnet parameter is empty (as for the
segmented networks case).

This patch is a simpler/backportable fix for the segmented networks +
Router AZs use case. In the future we should consider refactoring the
code responsible for scheduling the gateway router ports, a more detailed
explanation of what is happening/needed can be found at LP #1939144.

Change-Id: I8dc5336c6e2acd0b0a2cad0e80eee91280b9f945
Closes-Bug: #1939144
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
82fd968011b481f11cfec6a1ec767e095d3f41db,2021-08-12 16:48:57+02:00,"[L3HA] Add extra logs to the process of ha state changes

Some extra debug logs may be useful to understand exactly what happens
during ha states transitions and e.g. to understand failures like
described in the related bug.

Related-bug: #1939507
Change-Id: Id708b2c7a602df8d4ba1b32e58d4b152b5c58ba6"
9e0c075bf169ed6f3d768cf23be6f47aeae0f98e,2021-08-12 15:23:42+00:00,"ovn: Don't fail db-sync if port binding changes

During migration from OVS to OVN it can happen that gateway ports are
scheduled to a different gateway chassis when Neutron is running. This
patch doesn't fail in such case. The migration procedure runs the db
sync twice in a row so it should be good to not perform any action when
this happens and let the next migration handle that.

Change-Id: I28a4a5fef20d5049f4887d43006947b434de3d78
Closes-Bug: #1939704
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
7988ab5df0eb0799811d50eb90f0b292d008f700,2021-08-16 00:14:49+00:00,"""default_availability_zones"" need to be considered when validate az

If not set availability_zone_hits when create router, should use
configuration parameter default_availability_zones.
At present, only the creation parameters are validate, and the default
availability zones not validate.
Creating a network is the same as creating a route.

Closes-bug: #1938261

Change-Id: I1c7f50b69a31d725b762e3061f09a0bd5b077a58"
c75df16e5021e28aaa9961ed0977f30fa278a1dc,2021-08-16 17:46:01+09:00,"Add missing options to generated neutron.conf

This change adds missing oslo.config.opts endpoints to the config file
to generated neutron.conf, so that the following options are included
in the neutron.conf generated by the oslo-config-generator command.

1) Some options of the oslo.service library, related to periodic tasks
   and base service implementation

2) Options of the oslo.reports library

3) Options of the healthcheck middleware from oslo.middleware

Closes-Bug: #1940009
Change-Id: I9f4763efc02e5cacca3a00e9f101f83d3f3fb1e7"
b488fb8e223498703eed158e741c72d7ce03fe16,2021-08-16 10:48:29+02:00,"Use payloads for FloatingIP AFTER callbacks

Change FloatingIP AFTER_ notifications in l3_db to use publish calls.
Move association_event field into Payload metadata.

Closes-Bug: #1933502
Change-Id: Ie4c0f4a63a87c32026c49b03068e5f461deb38b6"
a17724973174082a76e387817576e71201318104,2021-08-16 10:50:07+02:00,"Improve content of FloatingIP AFTER callbacks

Use same FIP field names for all notifications.
Move association_event field into Payload metadata.

Closes-Bug: #1933502
Change-Id: Ia462ca4b340cd3d9a27341632b24926c3290a4b2"
db7887cafd39f3f4d2d634a8ea3732bf4f9bb7dc,2021-08-19 10:36:54+02:00,"Add limitation about QoS min bw for PF less SRIOV platforms

Related-Bug: #1915255
Change-Id: I2bd386e9aaa4d1cf994943b59f82bc24f6424199"
3640ffa0c6968a2f802a9809e4f318fb229dad7d,2021-08-19 23:19:47+08:00,"Handle all portbinding attrs in case of bulk port creation

Bulk port creation should honor binding:vnic_type
and binding:profile attributes from request.

Closes-Bug: #1940074
Change-Id: I99d27d568f66c6330f6373843d096c6ee1b4ec54"
344fc0c8d2ce7d942606c834a54cb81f0b47aa37,2021-08-20 12:26:42+01:00,"Revert ""[L3][HA] Retry when setting HA router GW status.""

In short this patch can cause the privsep reader thread to
die resulting in the l3 agent getting stuck and e.g. not
processing any router updates. See related LP bug for full
explanation.

Closes-Bug: #1927868

This reverts commit 662f483120972a373e19bde52f16392e2ccb9c82.

Change-Id: Ide7e9771d08eb623dd75941e425813d9b857b4c6"
d6b1dd4a9396d011b2f5fea5bbea4daf3614f7c5,2021-08-23 11:54:12+09:00,"Include oslo.cache options in neutron.conf

Neutorn uses oslo.cache library for caching. This change ensures that
options of the library are included in neutron.conf generated by
oslo-config-generator.
This change also removes cache_utils module from neutron.opts because
the module is not used in that file.

Closes-Bug: #1940790
Change-Id: I9ccd145d5ea1a1e0033eb43b609cc6428ea95f23"
31c09cd3b76d43a485002011df596a45d066eeb4,2021-08-24 11:00:22+02:00,"Bump os-resource-classes lib to 1.1.0

Newer version provides access to packet rate related resource classes:

* NET_PACKET_RATE_KILOPACKET_PER_SEC
* NET_PACKET_RATE_EGR_KILOPACKET_PER_SEC
* NET_PACKET_RATE_IGR_KILOPACKET_PER_SEC

Related-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: I505911412fd903d351f39ebb733ef8e872cb16fb"
668b1cc652f076e555ef1fc1289684367159186a,2021-08-25 13:06:28+00:00,"Do not fail if the agent load is not bumped

When a new network and its first subnet is created, the DHCP agent
bumps the ""load"" parameter to reflect the number of networks handled.
This ""load"" parameter is modified when:
- As commented, when the first subnet of a network is created. The
  ""load"" value is bumped.
- When periodically the DHCP agent sends the status, informing about
  the current number of networks handled.

If during the subnet creation this ""load"" value is not updated, it will
be in the next periodic update of the agent.

This ""load"" value is used by the scheduler to equally distribute the
objects to be managed by any agent type (DHCP agents manage networks).

The bug refers to DHCP but is valid for any other agent.

Change-Id: Ief402048d99d40b64d81fcf58eb2e39b1ba7ebbb
Closes-Bug: #1939432"
1146a4d09176a214d0751c3dda899bdb033998ad,2021-08-25 13:18:17+00:00,"Do not fail when releasing a quota reservation

The quota reservation release (deletion) is done at the end of a
server call to create a new resource (or resources). The quota
drivers implemented have mechanisms to clean up the expired
reservations when calculating the resource quota.

If a reservation deletion fails, the API call should not be retried.
Instead of this, the reservation should be left and collected by
the quota driver clean up mechanisms.

This patch also adds a timeout delay for expired reservations in
``DbQuotaNoLockDriver``. Now this driver deletes any existing
reservation created ``RESERVATION_EXPIRATION_TIMEOUT = 20`` (seconds)
before. It is assumed that any reservation should be released before
this time (regardless if the resource is created or not).

Closes-Bug: #1940311

Change-Id: I155c401ec5e2fe6e3af6390855852764ee983cf5"
19375b3e78ad6b635793b716e5ecabd53dc73a76,2021-08-26 19:08:56+00:00,"[DVR] Set arp entries only for single IPs given as allowed addr pair

In allowed address pairs of the port there can be given not single IP
address but whole CIDR. In such case ARP entries for IPs from such
cidr will not be added in the DVR router namespace.

Closes-Bug: #1934912
Change-Id: I7bdefea943379125f93b116bb899446b874d9505"
903e66e8e73600fcc251fb5e8ad85d88171bf95b,2021-08-27 17:11:54+02:00,"ovn: Consider all router ports in is_lsp_router_port()

The function considered only device owners known to OVN. On migrated
environments the device owner could be different. The codebase contains
a constant tuple containing all router port device owners. This patch
uses the constant instead.

Change-Id: I026ac8ea9c35a425470a2eaede35b3bfeba259c3
Closes-bug: #1941902
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
b5dd6efdca0aa6e7405a55d66c7042a49ec72214,2021-08-30 16:49:01+02:00,"[DVR] Fix update of the MTU in the SNAT namespace

When network's MTU is changed, Neutron sends notification about it
to the L3 agents. In case of DVR (and DVR HA) MTU is then changed in
the qrouter- namespace but should be also changed on snat interfaces
in the snat namespace. And that part was missing.

This patch adds special implementation of the internal_network_updated()
method in the DvrEdgeRouter class so it can configure MTU also for
in the snat namespace.

This patch also removed passing attributes ""interface_name"",
""ip_cidrs"" and ""mtu"" to the internal_network_updated() method and adds
""port"" dict to be passed there. It is consistent with what is already
done in e.g. internal_network_added() method and ""port"" dict is actually
necessary to configure properly snat internal interface in the snat
namespace.

This patch adds also functional test of update network mtu for all types
of routers as there was no such test at all.

There is additional issue with DVR-HA which isn't fixed with that patch
and for which follow up will be proposed. Because of that this patch is
marked as partial fix for the related bug.

Related-Bug: #1933273
Change-Id: I200acfcaaae7f056ea9a563fead9ff2de8464971"
df891f0593d234e01f27d7c0376d9702e178ecfb,2021-08-31 15:43:11+02:00,"Remove dhcp_extra_opt value after first newline character

Passing newline to the dnsmasq may cause security issues, especially
that in case of Neutron that dhcp options' values are controlled by
cloud users.
This patch removes everything what is after first newline character
in the dhcp_extra_opt's values before passing them to dnsmasq.

Closes-Bug: #1939733
Change-Id: Ifeaf258f0b5ea86f25620ac4116d618980a7272e"
9cffd7b3223c2e8c88129c79aa62c255350c55d4,2021-08-31 16:43:14+02:00,"[OVN] Change ControllerAgent type dinamically

The ControllerAgent class now changes in Openstack when changing the
type of an agent in its ovsdb table. This is possible thanks to adding a
new condition to the event that triggered the update of the AgentCache.
If the right external_ids changed, a new agent with the correct class
will replace the old one in the AgentCache. Also adds functional
tests to check this.

Closes-Bug: #1934420

Signed-off-by: Elvira García <egarciar@redhat.com>
Change-Id: I75380c455864aa055e8049a6beff8619687b52ce"
b0bb49a8f8a845f6f9cf88e10541f50815383eb3,2021-09-01 02:08:42+05:18,"[doc]Correcting broken link

The link ""QoS rule types"" in neutron documentation [1]
reports 404 Not Found, so this patch fix it.

[1] https://docs.openstack.org/neutron/latest/admin/config-qos.html#supported-qos-rule-types

Change-Id: Icfc4b704e826ae8b74d90241288e6aeab1d62f2f"
76ee64f4a8095ba207872d5de9613f93f208fdd4,2021-09-01 14:26:16+00:00,"Fix neutron_pg_drop-related startup issues

There is a python-ovs bug that allows transactions to be executed
before it has started monitoring the db for changes. This breaks
ovsdbapp's AddCommand behavior, which looks up a row in memory
post-commit to return it to the caller, because we process the
reply from ovsdb-server that has the UUID in it, but when we try to
look it up in memory, it isn't there since that is handled via the
monitor notifications.

Since we don't care about the return value, we can just ignore the
KeyError. In addition, the request to Idl.cond_change() to monitor
only the neutron_pg_drop table was failing for a similar reason--
it is called before the initial monitor request is sent, so
directly setting table.condition will allow the condition to be
added to the initial monitor request.

Closes-Bug: #1938766
Change-Id: I78af15970a86923fb810e903d38634b6e60a8fe4"
3c305bf6ae37bd26cda8545bb1a76302dc830dee,2021-09-01 17:56:43+03:00,"Skip FIP check if VALIDATE_MIGRATION is not True

OVN migration script fails when VALIDATE_MIGRATION is not set to
True. oc_check_public_network should return successfully in case
VALIDATE_MIGRATION is set to False.

Closes bug: #1942344

Change-Id: Ibd0aea5b4e6bf44803d5d0100cacc17d401b03cc"
e08b571f04059d8cab973743bf1c926e6070e9da,2021-09-01 17:57:35+00:00,"Use ""objects_exist"" in PortForwardingPlugin

This is a small optimization in
""PortForwardingPlugin._check_floatingip_request"". To check the existence
of any OVO, ""objects_exist"" is the fastest method.

Closes-Bug: #1942358
Change-Id: I5097dbdda5a17d15152c5a6c1a56f5b5037d1f70"
dc4a57d96661fcb56ff916cafbbbdc683653e9c4,2021-09-02 08:41:19+00:00,"Make OVN driver validate Geneve max_header_size

Also updates the docs to be clearer on OVN-Geneve relation topics.

Co-Authored-By: Elvira García Ruiz <egarciar@redhat.com>
Change-Id: Ia253cc4d85261ce1535f4d27b3da91275d879903
Closes-bug: #1868137"
c178a37615bba7cefee0886d095416eca7ae2aa1,2021-09-02 10:34:43+00:00,"Add port status to information dictionary in agent RPC

Added parameter ""status"" to port dictionary information returned from
the agent RPC.

Change-Id: I34383aa02c7515b3bcd2faa8b4617e730ce3e6c9
Closes-Bug: #1942234"
82f72896db12c18798b0691ba3d507c324177cc5,2021-09-02 16:51:08+02:00,"Add pagging and sorting support for ""network_ip_availability""

Added pagging and sorting support for the extension
""network_ip_availability"".

Closes-Bug: #1940518

Change-Id: Ic520ceb060c4a914d72ef66f58eeaa667382c53b"
27edf6b6d311d7d334090c89c4cee54d63162a55,2021-09-03 10:32:52+03:00,"Ensure net dict has provider info on precommit delete

Commit 80eddc40390e63c9c1102b827997054708f2618b optimized
net delete by including net info into notification payload,
however ML2 plugin needs provider info as well.

Closes-Bug: #1942469
Change-Id: I9f753be0ce5ae7870afb9b3cb74f89be8482356e"
e610a5eb9e71aa2549fb11e2139370d227787da2,2021-09-04 09:25:19+00:00,"Don't use singleton in routes.middleware.RoutesMiddleware

It seems that using default singleton=True in the
routes.middleware.RoutesMiddleware which is leading to use thread-local
RequestConfig singleton object is not working well with eventlet
monkeypatching of threading library which we are doing in Neutron.
As a result it leaks memory in neutron-api workers every time when API
request to not existing API endpoint is made by user.

To avoid that memory leak, let's use singletone=False in that
RoutesMiddleware object, at least until problem with thread-local
singleton and eventlet monkey patching will be solved.

Closes-Bug: #1942179
Change-Id: Id3a529248d3984506f0166bdc32e334127a01b7b"
34acbd6ff8573e5e2ce149150bae566f987f0ded,2021-09-05 01:01:35+09:00,"Replace deprecated assertDictContainsSubset

The method is deprecated since Python 3.2[1] and shows the following
DeprecationWarning.

/usr/lib/python3.9/unittest/case.py:1134: DeprecationWarning:
assertDictContainsSubset is deprecated
  warnings.warn('assertDictContainsSubset is deprecated',

[1] https://docs.python.org/3/whatsnew/3.2.html#unittest

Closes-Bug: #1938103
Change-Id: Iab60f52ffbfb3668e9509ce86e105917c616b8a9"
48f4e05b6e57846d04b0f575a7768686e7bc8a84,2021-09-06 12:16:47+02:00,"[Policy] Set scope_types for BaseCheck rules

To be able to do policy checks for e.g. subattriutes, Neutron is
creating rule objects which are subclasses of the oslo_policy.BaseCheck
objects but we didn't set scope_types in that newly created rules.

As we are now moving to the new secure RBAC rules, which allows us to
enforce scope checks, we need to set those scope types for such objects
to let oslo.policy to enforce it when needed.

Related-Bug: #1923503
Change-Id: Ie9b4b908621a0e2ca7c9f7d8a3057c95e28f0dbd"
7f063223553a18345891bf42e88989edb67038e7,2021-09-06 15:03:54+00:00,"Delete SG log entries when SG is deleted

When security group is deleted, log entries configured for that SG
weren't removed and stayed in the DB as orphaned entries.
That patch fixes that by subscribe logapi service plugin to the
AFTER_DELETE security group events.

Closes-bug: #1939558
Change-Id: Ibffbbd3b529c31372715d9a064f7cb6bada8c424"
101ccbaeb3c48d9757c276716098ee6e17e12fb8,2021-09-09 21:04:21+08:00,"update subport status when trunk/subport create/delete is triggerred

When trunk or subport is created or deleted, notifications are sent. In
the meanwhile, subport status is not updated accordingly.

device_id device_owner and binding:host_id should be updated when
notifications are received.

In this patch, notifications are listened and subport status should be
updated when trunk/subport is created and subport is already added to
trunk:

    device_id: <trunk_id>
    device_owner: trunk:subport
    binding:host_id: <parent port host_id>

When trunk/subport is deleted or subport is removed from trunk, subport
status should be updated:

    device_id: None
    device_owner: None
    binding:host_id: None

Closes-Bug: #1942413
Change-Id: I0bdc5aabae0125926253b530fd0c6e79ba7bcbb9"
b8ef8e722af761dd394064ab70e159aa05639e56,2021-09-09 15:10:40+02:00,"[Functional] Wait for the initial state of ha router before test

In functional tests of the HA and DVR HA routers, when e.g.
failover is tested, we should always wait for routers to be in the
expected initial state (primary or backup) before router failover
will actually be done.
Without that, we may hit race condition when initial router's state
is enqueued but not processed yet and then state will be changed thus
no any action will be performed by L3 agent and test may fail.

Closes-Bug: #1939507
Change-Id: Ibd8f78fc822b04965c6a79b57b13be364934f64f"
421dc2195c7e47c8793e25a2d26e15e0b982f35e,2021-09-09 16:14:51+00:00,"Redefine ""neutron-ovn-tempest-ovs-master-fedora"" CI job

The CI job ""neutron-ovn-tempest-ovs-master-fedora"" should be the same
as ""neutron-ovn-tempest-ovs-master"" but executed in the Fedora nodeset.

Related-Bug: #1942913
Change-Id: I89700030dedab33c28baf95993206cf5cdd1e6d6"
1762ed883447fefbf08e11c309fc1f098374ea53,2021-09-09 16:56:44+00:00,"[OVN][FT] Check UNIX socket file before using it

When stopping ""OvnNorthd"", first check if the UNIX socket file is
still present before calling ""ovs-appctl"" command.

Closes-Bug: #1943029
Change-Id: Id70df8d28a258108acf88f36b2fb59b5df3a0857"
0634dcc6d0f08c18c69a2c360a2c5c0581ec7bb6,2021-09-10 10:17:22+00:00,"[OVS][FW] Initialize ConjIdMap._max_id depending on the current OFs

The OVS Firewall has a singleton class that manages the conjuction IDs
to used in the OF rules. Those conjuntions are used to group rules
related to remote security group IDs.

Now each time the OVS agent is started, the OVS Firewall initial
conjunction ID is calculated based on the present OF rules. This value
and the next one used won't clash with any present rule in the
integration bridge during the initial transient period.

Related-Bug: #1934917

Change-Id: Ie2e4441f766947a2164dec2d1555c7049428903f"
f8f50397ca1e4ab7f5f31b19dde255ab70b4ccaf,2021-09-15 15:47:35+02:00,"Rollback db session in case of error during releasing quota reservation

Patch [1] changed to not fail if DBError will happend when releasing
quota reservation. That may lead to the errors while commiting db
transaction in the neutron/api/v2/base.py module when in same
transaction Neutron commits reservation (which removes reservation from
db) and then set resources dirty. In case if DB error happens in the
commit_reservation() and we will simply pass this error and move on,
transaction can't be commited without rollback.

This patch adds handle of such DBErrors in the remove_reservation
function so transaction can be rolled back in case of DB error happens.

[1] https://review.opendev.org/c/openstack/neutron/+/805031

Closes-Bug: #1943714
Change-Id: I295a4f0eb1eaf0286f0e34b96db29c8f08340b84"
f546c11b331b5c5827648c35f6a63f69537a6ebd,2021-09-17 10:48:09+02:00,"doc: Change availability of QoS policy change

[1] allowed to change QoS policy of a bound port, but finally got only
merged during Wallaby cycle. The documentation (see [2]) says that it is
available from Victoria.
Fix this to avoid misunderstandings.

[1]: https://review.opendev.org/c/openstack/neutron/+/747774
[2]: https://docs.openstack.org/neutron/xena/admin/config-qos-min-bw.html#limitations

Change-Id: If313ec090919206e7de7492c7b82c44be3eceff0"
0234aa61571c80f8d5fa7f78ae90780d848fd610,2021-09-17 11:20:31+02:00,"Fix _create_dvr_floating_gw_port missing payload field

Change Ia462ca4b340cd3d9a27341632b24926c3290a4b2 modified some
notification payload field names.
Because of that _create_dvr_floating_gw_port fails with missing
'fixed_port_id' field since it's now 'port_id'.

Closes-Bug: #1943846
Change-Id: I37d8722c74dfc122030175f54404703780c4d8b2"
a383afa10f2068a28ef767296e32cec4cc96ed6b,2021-09-17 15:33:23+02:00,"[Docs] Add info about how to use shared SG with VMs

This patch adds info about workaround how to spawn VM using Security
Groups shared through RBAC mechanism in Neutron.
Proper fix for that issue will require changes in the Neutron API and in
Nova so will not be possible to backport.

Related-bug: #1942615
Change-Id: Iadb3fe0ca8fa9c14ec2912016bd3912e5dcee5ff"
5abd1fb61018e497b369712a0952bb1a18022142,2021-09-20 09:12:09+00:00,"Remove dhcp_extra_opt name after first newline character

Passing newline as extra dhcp option name to the DHCP agent causes
issues with configuration of the dnsmasq process for the network.
This patch removes everything what is after first newline character
in the dhcp_extra_opt's name before building dnsmasq's config.

Closes-bug: #1943930
Change-Id: Iab2832e750ff5ef09c5dcacae4dbff4f9e62bc2d"
57629dc05122b01a9ba76606b8d75cce9da40776,2021-09-23 12:46:59+00:00,"Add retry when executing OF commands if ""InvalidDatapath""

When using the OF API (currently Neutron only uses native
implementation via ""os-ken"" librarr), retry the command in case of
""InvalidDatapath"" exception.

As commented in the related bug, some operations could restart the
OF controller (set the OF procols, set the bridge fail mode). During
the controller restart, a command can return a ""InvalidDatapath""
exception.

Closes-Bug: #1944201
Change-Id: Ia8d202f8a38362272e9519c1cbd9d6ba9359e0a1"
42fda206e9de45a4beda8688b06e1ba29a685722,2021-09-23 13:41:50+00:00,"Replace ""Inspector.from_engine()"" with ""sqlalchemy.inspect()""

Since SQLAlchemy 1.4, the method ""Inspector.from_engine()"" is
deprecated.

Error message:
""The from_engine() method on Inspector is deprecated and will be removed
in a future release.  Please use the sqlalchemy.inspect() function on an
Engine or Connection in order to acquire an Inspector. (deprecated
since: 1.4)""

Minimum version of SQLAlchemy required is bumped to 1.4.23.

Change-Id: I6cf5944ccb3a0532cbf123ddc0d7df6b6de80af1
Closes-Bug: #1943155"
b0e01c7df3a8f73f0997fc6125de2b2c78a45862,2021-09-23 14:28:53+00:00,"Revert ""update subport status when trunk/subport create/delete is triggerred""

This reverts commit 101ccbaeb3c48d9757c276716098ee6e17e12fb8.

Reason for revert: This commit is probably reason of some race condition
which causes random failures in the test_trunk_subport_lifecycle scenario
test.

Change-Id: Ia042384e0ac333f30235b76e50fdc8748fc2b29a
Closes-Bug: #1943708"
771fdc0b0716cbbbe41db3835def3eb9b423c66a,2021-09-24 09:51:30+00:00,"[DVR] Set arp entries only for IPs from the correct subnet

When dvr router is processing internal ports it is checking all
ports connected to the subnet and adding permanent arp entries for
all fixed IPs and allowed address pairs from those ports in the qrouter
namespace.
But port can have fixed IPs from different subnets, e.g. from IPv4 and
IPv6 subnet and until now Neutron wasn't checking subnet_id of the
fixed_ip address nor ip version of the allowed address pair's IP
address. That resulted in adding arp entries for all IPs through all
interfaces, e.g. IPv4 address was added as it's reachable through
interface connected to the IPv6 subnet.

This patch adds checking of the subnet_id for fixed_ips and ip version
for the allowed address pairs configured on the port to avoid that
problem.

Closes-Bug: #1936980
Change-Id: Id5afad7af74d69f8b4159163d23807a1cf032733"
21d25617abf00a225c2ab7b2a94a6663d5dbe0e5,2021-09-28 09:33:09+02:00,"Change to publish for security-group db tests

Change-Id: I871654a15036db5fe7c8c0912b38acd7beb6402b
Closes-Bug: #1945285"
459f63439beb81a33e5e65d0c54c61832186f42e,2021-09-28 10:51:51+02:00,"Replace cirros 0.4.0 by 0.5.2 in ovn migration create-resources.sh.j2

Some VMs are created before the ovn mgiration process starts in order to
verify they are healthy after the migration
Sometimes these VMs are not accessible via ssh due to an issue in cirros
0.4.0 that was fixed in a later release [1]

Closes-Bug: #1945299
[1] https://github.com/cirros-dev/cirros/pull/11

Change-Id: Ib133b5e1bed19aeac8514e3c6690ca768991bbd4"
56044db26d97c65c7baec1a16623eff3a1614949,2021-09-29 12:27:30+02:00,"Add API extension for QoS minimum pps rule

This patch implements support for CRUD operations for QoS minimum
packet rate, for example:

DELETE /qos/policies/$POLICY_ID/minimum_packet_rate_rules/$RULE_ID

Placement or dataplane enforcement is not implemented yet.

Partial-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: Ie994bdab62bab33737f25287e568519c782dea9a"
1ea26616b41335b24b9c162062740ee3de78372d,2021-09-29 12:27:45+02:00,"ovs-agent: Report pkt processing info in heartbeat

OVS agent configuration is extended to support new configuration
options:
  - 'resource_provider_packet_processing_without_direction'
  - 'resource_provider_packet_processing_with_direction'
  - 'resource_provider_packet_processing_inventory_defaults'

OVS agent RPC hearthbeat now reports this information to neutron
server in 'configuration' field .

Example config:

ml2_conf.ini:
[ovs]
resource_provider_packet_processing_with_direction = :1000:1000

Partial-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: Ief554bc445dfd93ea6995bb42b4d010674c7a091"
84b6db3b0528a39450f48297d289cd9c618e3beb,2021-09-29 13:26:36+02:00,"[OVN] Allow IP allocation with different segments for OVN service ports

Allow IP allocation with different segments also for IPv6
auto allocation for OVN service ports.

See change: Ib51cde89ed873f48db4daebc27a0980da9cc0f19

Change-Id: Ic6db2f66be596756b1fed9ffeffc7b049f6e957f
Closes-Bug: #1944948"
f18edfdf450179f6bc8a47f3b143f2701bd93e0e,2021-09-30 08:57:35+00:00,"[DVR] Check if SNAT iptables manager is initialized

Check if SNAT iptables manager is initialized before processing the
IP NAT rules. If the router never had an external GW port, the DVR
GW in the SNAT namespace has not been created and the SNAT iptables
manager has not been initialized.

In this case, the IP NAT rules for centralized FIPs (to be applied
on the SNAT namespace) cannot be set.

Closes-Bug: #1945215
Change-Id: I426602514805d728f8cd78e42f2b0979b2101089"
f8c879ddbf7628e9a873d6a213e4905097455a46,2021-09-30 12:55:02+00:00,"Add new indexes to RBAC DB models

Added two new indexes to all RBAC DB models: ""target_tenant"" and
""action"".

The DB models affected are ""networkrbacs"", ""qospolicyrbacs"",
""securitygrouprbacs"", ""addressscoperbacs"", ""subnetpoolrbacs"" and
""addressgrouprbacs"".

The goal of this patch is to speed up the model query if RBAC apply to
this object. If the object query scope is a project, [1] will be added
to the DB query. If ""action"" and ""target_tenant"" are indexed, the exact
match filtering will be faster.

[1]https://github.com/openstack/neutron-lib/blob/890d62a3df3f35bb18bf1a11e79a9e97e7dd2d2c/neutron_lib/db/model_query.py#L123-L131

Change-Id: I0a70a1a500fad52ca55006d6e2ebc1044aef0fc8
Closes-Bug: #1918145"
603abeb977d4018963beade5c858b53f990ef32a,2021-09-30 13:53:23+00:00,"Execute the quota reservation removal in an isolated DB txn

The goal of [1] is to, in case of failing when removing the quota
reservation, continue the operation. Any expired reservation will
be removed automatically in any driver.

If the DB transaction fails, it should affect only to the reservation
trying to be deleted. This is why this patch isolates the
""remove_reservation"" method and guarantees it is called outside an
active DB session. That guarantees, in case of failure, no other DB
operation will be affected.

This patch also partially reverts [2] but still checks the security
group rule quota when a new security group is created. Instead of
creating and releasing a quota reservation for the security group
rules created, now only the available quota limit is checked before
creating them. That won't prevent another operation to create security
group rules in parallel, exceeding the available quota. However, this
is not even guaranteed with the current quota driver.

[1]https://review.opendev.org/c/openstack/neutron/+/805031
[2]https://review.opendev.org/c/openstack/neutron/+/701565

Closes-Bug: #1943714

Change-Id: Id73368576a948f78a043d7cf0be16661a65626a9"
5e32dddc11c6ec73afc83d2bfc7c4beaa252de0c,2021-10-01 08:44:29+00:00,"Fix ""_sync_metadata_ports"" with no DHCP subnets

When a subnet does not have DHCP configured, the metadata port does
not have an IP address on this CIDR. The method
""OvnNbSynchronizer.sync_networks_ports_and_dhcp_opts"", was always
setting an IP address for the metadata ports, regardless of the subnet
configuration (with or without DHCP).

The method ""_sync_metadata_ports"", in charge of synchronizing the
metadata ports, now filters the subnets by the parameter ""enable_dhcp"".

In case of having a subnet with DHCP enabled, if the metadata port is
missing the subnet IP addresses, the method adds them.

In case of having a subnet without DHCP enabled, if the metadata port
has an IP address on the subnet, the method removes it.

Closes-Bug: #1939726
Change-Id: I09cc14dff6933aae63cbd43a29f9221f405ecede"
c20f2e5136fd241f4be5c37403ab1ed54cdaefb5,2021-10-04 14:28:22+00:00,"[HA] Do not add initial state change delay in HA router

The initial state (""primary"", ""backup"") should be set immediately.
in [1], a transition delay to ""primary"" was introduced. This delay
is unnecesary when the first state happens.

Closes-Bug: #1945512

[1]https://review.opendev.org/q/I70037da9cdd0f8448e0af8dd96b4e3f5de5728ad

Change-Id: Ibe9178c4126977f1321e414676d67f28e5ec9b57"
dfcbb4cce0f206bbf824a1062de028223a27388f,2021-10-05 11:12:20+00:00,"Execute ""migrate_neutron_database_to_ovn"" inside the same DB ctx

All DB commands executed in ""migrate_neutron_database_to_ovn""
should be executed inside the same write context. That will prevent
the DB transaction errors reported in the BZ. When a OVO object is
retrieved and updated, both DB commands should be executed in the
same DB transaction to ensure the DB object stored in the OVO
(that is a stateful representation of the requested columns) is
fresh and not modified by other transaction.

Related-Bug: #1939704
Change-Id: I754e2f9ad5b896fcc14ff30bd2901ccec2471907"
41f78c678bcc164cd77ed7302bacf086d24ab28c,2021-10-05 16:27:13+00:00,"Delete log entries when SG or port is deleted

NOTE: this patch is an ammend of [1].

When a SG or a port is deleted, the related log entry should be
too. A log entry has the following fields:
- log.resource_id = SG ID
- log.target_id = port ID

[1] was deleting all log entries, related or not with the SG ID
deleted. This is because ""get_logs_bound_sg"" returned all log entries,
including those ones without any ""resource_id"" or ""target_id"".

Now this method can return only the log entries related to a port or
a SG, excluding those ones without those two parameters populated.

Closes-Bug: #1939558

[1]https://review.opendev.org/c/openstack/neutron/+/804237

Change-Id: Icb92327a06486e168ce064532d819347e6031cc1"
18c959bd24d8cdec5e55edeb61603834f3f00179,2021-10-06 16:07:42+00:00,"Remove ""_get_network_lock_id"" compatibility method

This method was introduced in [1] because not all the object
payloads (port, network and subnet) had the ""network_id"" parameter.
This parameter is now delivered in all payloads and this method
is not needed anymore.

Note: This patch must be merged in X+, not before.

[1]https://review.opendev.org/c/openstack/neutron/+/524711

Related-Bug: #1732456

Change-Id: I92f1bb97552dd7af99dcda71919ed137a99202a2"
98c269e5a60e9497175b9b8a31a6c8824975a065,2021-10-07 08:51:37+00:00,"Remove trunk related functions from neutron devstack plugin

As was discussed on the neutron team meeting [1] this will be now
part of the Devstack repo so it's not needed in the neutron devstack
plugin anymore.

[1] https://meetings.opendev.org/meetings/networking/2021/networking.2021-10-05-14.00.log.html#l-156

Depends-On: https://review.opendev.org/c/openstack/devstack/+/812657

Change-Id: I04dacb43f244d71e1c5b74deb63b234b803033c9"
b993ebb407208bf04a7957a3d15c9ac482a1dd5c,2021-10-07 13:20:04+02:00,"Fix dynamic segment allocation race condition

When two segments are concurrently created this could have resulted in
both threads creating a segment, thus resulting in two segments with
different segmentation ids. To prevent this we now introduce a new
unique constraint onto the networksegments table, which requires
(network_id, network_type, physical_network) to be unique, which allows
only a single segment with a single segmentation id to exist per
combination of these three values.

With the constraint in place a DB error will be thrown, which will cause
allocate_dynamic_segment() to be executed again and this time it will
find the already existing segment. To make sure that no additional DB
objects are created when segment creation failed we need to put all of
the allocation code into a DB transaction.

Change-Id: I407ae88d69ed971bf8d9a9b79120366f33bb56fd
Closes-Bug: #1791233"
bd0ded15ca21161c0f20679477445f4e31128267,2021-10-07 14:07:28+00:00,"[OVN] Update the DHCP options when the metadata port is modified

Always update the DHCP options when the metadata port is created,
updated or deleted. If the metadata port IP addresses are updated,
the DHCP options register should be too, modifying the static routes
defined in ""DHCP_Options.options.classless_static_route"".

These static routes will be injected in the VM in the DHCP request.
The IP address of the metadata port should match with the static
route redirecting the traffic to the metadata IP address
""169.254.169.254/32"":

  $ ip r
  default via 10.0.0.1 dev eth0
  10.0.0.0/28 dev eth0 scope link  src 10.0.0.7
  169.254.169.254 via 10.0.0.2 dev eth0  # 10.0.0.2 is the metadata
                                         # port IP address

Closes-Bug: #1942794
Change-Id: Id5d4909caa521a899b97d83bdc1963b010e97dac"
ec89cd23d18a6ec2324e36c62991f1f749d5637f,2021-10-07 21:47:49+02:00,"[Fullstack] Mark TestHAL3Agent fip_qos test as unstable

Mark TestHAL3Agent.test_router_fip_qos_after_admin_state_down_up
from the fullstack tests as unstable. It is hitting us a lot
in the gate recently so lets unblock the gate and buy some time
to investigate what is the root cause of that issue.

Related-Bug: #1946186
Change-Id: I8f250fdb8c0c25378fc3c164b74d78a6f420f5f5"
4bd1c82213e063f2e6a39e36d828bd800fd81ac6,2021-10-07 14:49:19-05:00,"Add shared field to SG API response and filter

Add the shared field to security group API responses and support
using shared as a query filter.

A follow-up patch will remove the temporary api def once it is merged
and released in neutron-lib.

Related-Bug: #1942615
Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/812617
Change-Id: Ic04be8f0b7097c8aed19365f06089aa7af333eb9"
416b7fe2f77e8d0025327f53c6743d6eba0af439,2021-10-08 12:27:20+02:00,"[Fullstack] Don't use dhcp in L3 agent tests

It's not really needed and it is causing failures due to bug [1].
We can revert that patch and use dhcp again when [1] will be fixed
on the privsep's side.

[1] https://review.opendev.org/c/openstack/neutron/+/794994

Closes-Bug: #1946186
Change-Id: I7f888fa0737a1e52cee758afee6b790ca6a80a32"
b57fdf7038727a488bd73bfb05858347a9ebcc09,2021-10-08 10:27:49+00:00,"Revert ""Use 2 dhcp agents in TestLegacyL3Agent""

This reverts commit 07337f9e99cdcfb1af3546a537d5595330e8bded.

Now we don't use dhcp in the L3 agent tests at all so this isn't
needed anymore.

Related-Bug: #1930401
Related-Bug: #1946186
Change-Id: If3a48251770c3e669ac5a9d6a44085d295809240"
43bd3fa2461b1cadcce9351747dc45c29c1013b7,2021-10-08 13:17:13-04:00,"Fix OVN driver validating Geneve max_header_size

Driver was accessing config groups that were not loaded.
Related commit: dc4a57d96661fcb56ff916cafbbbdc683653e9c4
Closes-bug: #1946510

Change-Id: Ib53219c9f6efff828b5bbf7553c356ee2cd4546d"
5092f3fb98b4c6bf8334de0e71548ddd073f6234,2021-10-08 19:32:44+02:00,"[OVN Migration] Remove qr and dhcp ports from the nodes

After migration from ML2/OVS to ML2/OVN tap ports which were created
by the DHCP agents and router ports (like e.g. qr- or qg-) which were
created by the L3 agents aren't needed at all and should be deleted.
Previously those ports were set to be DOWN only. With this patch
all such ports will be simply deleted from the openvswitch.

Related-bug: #1946479
Change-Id: I74cd5820389c86819c6884d3d61c9b2f7907cc88"
bf6831e0d2ad33ff751f06d568abe6cedff4d717,2021-10-08 19:33:55+02:00,"[OVN Migration] Remove trunk's subports from the nodes

After migration from ML2/OVS to ML2/OVN trunk subports which were created
by the neutron-ovs-agent to connect br-int with trunk bridges (tbr-)
aren't needed anymore and should be deleted.

Closes-Bug: #1946479
Change-Id: Ib1e3b78597ebdde1aa9d2b242e2005a05a7db89f"
76a99f9a1458b4691a94f9508f56d4f05f500df9,2021-10-11 15:16:52+02:00,"Report CUSTOM_VNIC_TYPE_ traits on Neutron agent RP

Create a resource inventory on Neutron agent RP and report the same
'CUSTOM_VNIC_TYPE_' traits on it, as the ones reported on the bridge
RPs. These are the vnic types this agent configured to support.

Partial-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: I8ae6d2714474d0ca32441d07d7b4dc84571d14a6"
c2bc676183a202743fa80f9cb0271af818958441,2021-10-11 15:16:52+02:00,"Report pkt processing capacity on Neutron agent RP

Report the packet processing capacity on the Neutron agent resource
provider to Placement as the new 'NET_PACKET_RATE_KILOPACKET_PER_SEC'
or 'NET_PACKET_RATE_[E|I]GR_KILOPACKET_PER_SEC' resource inventory.
This is similar to how the bandwidth resource is reported today.

Partial-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: I8deefbeed4b4b51dd20062df62c8891fee3ebf9d"
f6c35527698119ee6f73a6a3613c9beebb563840,2021-10-11 23:52:40+02:00,"[ovn] Stop monitoring the SB MAC_Binding table to reduce mem footprint

The MAC_Binding table in the SB database may grow indefinitely (due
to a lack of an aging mechanism of its entries) and eventually
lead to OOM killers for neutron-server which maintains an in-memory
copy of the database.

In order to stop monitoring this table, this patch is invoking
the ovsdb-client tool to remove the entries associated to
Floating IPs that have just been detached. The execution of this
tool is really fast as it will just invoke a JSON-RPC transact command
which doesn't require downloading the database contents.

In a scale test, the memory consumption of neutron-server dropped
from 75GB to 7GB with this patch.

Closes-Bug: #1946318

Signed-off-by: Daniel Alvarez Sanchez <dalvarez@redhat.com>
Change-Id: Id84bf17953527c415d611bfc198038fb6f811de3"
5665fc437b42bc732515f1920105fd0910558796,2021-10-12 17:53:16+02:00,"Bump os-ken to 2.2.0

Related-Bug: #1944201
Change-Id: Ib699fd096cf7e7d5df83ee4942e287eecf5a0b8f"
21eabbcf03cb29be9899adbd6eaea207892cf07b,2021-10-13 14:33:19+02:00,"[DVR] Fix update of the MTU in the DVR HA routers

This is follow up of the patch [1] which fixed updating MTU in the
snat namespace for the DVR routers.
In case of DVR-HA routers there was additional issue with that as
L3 agent tried to update MTU for the qr- interface in the
self.ha_namespace which, for DVR-HA routers is snat namespace.

This patch fixes that issue by setting MTU on the qr- interface in
qrouter namespace and also setting MTU on the snat interface in snat
namespace.

[1] https://review.opendev.org/c/openstack/neutron/+/799226

Closes-bug: #1933273
Change-Id: I409bc674b65e4f495ebd42d03e97a09d51482339"
5d94a10a1507625a861585bc83a295fb9442704e,2021-10-14 09:07:28+00:00,"[OVN] Check if OVN NB supports ""Port_Group""

Added a check for OVN NB schema, looking for ""Port_Group"" table
(added in OVN NB schema 5.11).

This patch removes the code to support OVN without ""Port_Group""
table. It is assumed that this table is always present.

Closes-Bug: #1946023

Change-Id: If193ff5bc6e1421f4fa9db3779872a82a36c8b69"
c32c0af9afc3e08727f7129a93bf78bacb789201,2021-10-14 09:10:04+00:00,"[OVN] Metadata ports device_owner is ""network:distributed"" only

Metadata ports are OVN distributed ports (localports) [1]. The
""device_owner"" is set to ""network:distributed"". Before that,
the ""device_owner"" was ""network:dhcp"" but those ports didn't belong
to the DHCP server.

Since Wallaby, only ""network:distributed"" will be assigned to those
ports.

[1]https://www.ovn.org/support/dist-docs/ovn-nb.5.txt

Closes-Bug: #1942866
Change-Id: I39045276b6e083c77e6d03dc4eaa5047538c5bea"
a278c5ba789c014ec777a75fc9538179d6707202,2021-10-14 14:47:34+01:00,"[OVN] Tune OVN routers to reduce the mem footprint for ML2/OVN

In order to avoid having a MAC_Binding table explosion and helping
lowering the memory footprint when using ML2/OVN this patch is setting
two options to the OVN routers:

* always_learn_from_arp_request: By setting this to False we
  avoid learning from ARP replies observed in the network. Only the
  ARP requests sent by OVN will generate a MAC_Binding entry in the
  OVSDB database. For larger broadcasts domains this avoids having a
  MAC_Binding table explosion, reduce the DB size and memory footprint
  of ML2/OVN.

* dynamic_neigh_routers: By setting this to True we avoid
  pre-populating flows for router to router communication, reduding
  the number of flows, DB size and memory footprint of ML2/OVN.

For more information on these option for core OVN please refer to:
https://www.ovn.org/support/dist-docs/ovn-nb.5.html

This patch also includes a new maintenance task to include these options
to existing routers in the system.

Related-Bug: #1946318
Change-Id: I056acdec9b6ee2341d2bc4f7bd9a678f3bf91972
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
501faef2bce269ab8146f6923b4866d3c7f46efc,2021-10-15 10:29:39+08:00,"[ovn]Get network availability_zones from Logical_Switch

Ovn driver is not support availability_zones earlier because ovn
distribute dhcp server.
Through this patch [1], neutron already support for Network Availability
Zones in ML2/OVN. But network's availability_zones is also empty.
neutron net-show ce361094-dcfa-42e7-a4b9-b4adf2223341 -c
availability_zone_hints -c availability_zones

[1]https://review.opendev.org/c/openstack/neutron/+/762550/

Closes-Bug: #1946713
Change-Id: I5e94080a2ece4dff4c4c52f52d9d341ea5798bc3"
d49ce1652d31fb884285ed30e39ec10ef40c864d,2021-10-18 09:23:08+03:00,"Fix OVN migration workload creation order

Currently workload VMs start before subnet is connected to router.
When DVR is enabled this causes sometimes that one of the VMs is not
able to get metadata.

Closes bug: #1947547

Change-Id: Ifd686d7ff452abd1226fbbc97f499e05102e4596"
d4d90fb6d725f9c4d5974945d02b8eb96c236848,2021-10-18 07:56:13+00:00,"Improve ""get_collection_count"" calls

Reduce the object retrieval to one single field to improve the
collection count.

Bumped neutron-lib to 2.16.0. This version contains [1], needed for
this patch.

[1]https://review.opendev.org/c/openstack/neutron-lib/+/807686

Related-Bug: #1942863

Change-Id: I160e8084e97b23a2bacb49ceb40efbac2d0715be"
042de7e6bbb3a187e8e12462eb35e6740448b2be,2021-10-21 10:56:33+00:00,"Deprecate 'allow_overlapping_ips' config option

Config option allow_overlapping_ips is deprecated to removal now and
will be removed in the Z cycle.
Default value for that option is now set to True as this is supported by
IPAM module in Neutron.

Related-Bug: #1942294
Change-Id: I17bf5e4483025e9cc4ee04dd3e7c925f7bddc3db"
8db15cb2f3dec37441103df15ff28c7e72de682c,2021-10-21 14:30:07+02:00,"Add port-resource-request-groups extension

port-resource-request-groups extension provides support for the
new format of resource_request. The new format allows to request
multiple groups of resources and traits from the same RP subtree.

Closes-Bug: #1943724
Partial-Bug: #1922237
Depends-On: https://review.opendev.org/c/openstack/tempest/+/809168/
See-Also: https://review.opendev.org/785236
Change-Id: I99a49b107b1872ddf83d1d8497a26a8d728feb07"
d699a955cd55a6401a787630d37f04c5691eea78,2021-10-21 15:17:24+02:00,"Sanitize profile column of ml2_port_bindings table in the DB

With the introduction of port-resource-request-groups extension,
format of binding-profile.allocation has changed. Since the DB,
may contain port bindings that were created before the introduction
of the new format, it's necessary to perform upgrade check and
sanitize those rows that are still using an older format.

Partial-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: I95e9e1bc553ac499d75c9280e45dfea61d135279"
aada855f6dc4e0e8a6d087b47382fc4e30ac5dc5,2021-10-21 15:17:24+02:00,"Enable QoS minimum packet rate rule for OVS backend

This patch does *not* implement dataplane enforcement.

QoS minimum packet rate rule is enabled in OVS backend driver and
create/delete/update empty methods are added to enable placement
enforcement.

Partial-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: Ie283ad3a4ec433c88ac23f798908cd143159394b"
8127221479834350465251839ab88056f4f64fb4,2021-10-25 09:59:32+00:00,"Check a namespace existence by checking only its own directory

To check the existance of a namespace, instead of listing the
namespaces directory (by default ""/var/run/netns""), this patch
directly checks the existence of the namespace directory, using
""os.path.exists"".

This check is faster than listing the whole directory and avoids
timeout problems as reported in the related bug.

Closes-Bug: #1947974
Change-Id: I558d50d28378beb3710d98a2113ff9549c82ae17"
95c2801da855cada741693b0dc31192e7baa111c,2021-10-25 11:17:17+00:00,"Check subnet in ""_remove_subnet_dhcp_options""

Since [1], ""get_subnet_dhcp_options"" returns always a dictionary
in ""subnet"" instead of None. This patch checks not only that ""subnet""
is None but also the dictionary is not empty.

[1]https://review.opendev.org/c/openstack/neutron/+/807692

Closes-Bug: #1948466

Change-Id: Ie93cf3e47e09b3e5051be1ffad512251775b0492"
bbdba95f408aeaf6603327883ff6795cc8d7a5ce,2021-10-25 12:10:58+00:00,"Revert ""[Fullstack] Mark TestHAL3Agent fip_qos test as unstable""

This reverts commit ec89cd23d18a6ec2324e36c62991f1f749d5637f.

Reason for revert: as https://review.opendev.org/c/openstack/neutron/+/813128
is merged we don't use DHCP agent in those L3 agent tests at all so
those tests should be stable now.

Change-Id: I6ded877b2b40929a4f4151a68a0de82ddfca0b71
Related-Bug: #1946186"
0194856da19f0ce96b613968ab415821037f18d0,2021-10-26 09:41:58+00:00,"[OVS] Workaround when OpenFlow controller restarts

When a new OF controller is added or when new OF protocols are added to
a bridge, the OF controller is restarted. When that happens, the os-ken
``OfctlService`` instance removes the OF controller datapath and waits
for an update event that will add a new one. During this time no OF
controllers (datapaths) will be registered and any request will be
rejected with a ``InvalidDatapath`` exception.

This patch is a temporary workaround that prevents any command from
being executed just after those two described operations, providing
time to OVS to send the OF updates.

Related-Bug: #1948642
Change-Id: I03878a2e650d5f0d0167e0f7daa351b12bae8725"
11d166be683d36ba51e3f85ddea45cb0a1fcf8db,2021-10-27 09:12:58+02:00,"Don't setup bridge controller if it is already set

Setting new controller for bridge every time when neutron-ovs-agent
is restarted or is doing full-sync may cause some short data plane
connectivity loss and is not needed if same controller is already
configured for the bridge.
With this patch neutron-ovs-agent will first check if controller is
configured for the bridge and if it's the same as what should be
configured, it will skip setting it up.

With this patch also protocols added to the bridge will be first checked
if they aren't already there and only missing ones will be added if
necessary.

Setting of the connectivity mode and inactivity probe is
always performed as this don't cause connectivity issues and is cheap
so we can always ensure that those parameters are configured properly.

Closes-Bug: #1948642
Change-Id: Idfa763df8c60d8ae46cd6351d1b6dc7d950b4c67"
7d552848c272b4fbfdafdc552e54cefd25b6d46a,2021-10-27 11:28:49+00:00,"Set RPC timeout in PluginReportStateAPI to report_interval

See more details on why this is need in the referenced
bug #1948676

Change-Id: I8a95e80ca74edc8f8f394cefc749c4065a8e0575
Closes-Bug: #1948676"
5a7a8db0d87c2027287e8fb074ee0f681e6369bb,2021-10-27 12:33:18+00:00,"Check quota limits

When ""check_limit"" parameter is passed in a quota update request,
the Neutron server checks the current resource usage before updating
the quota limit. If the new quota limit is below the resource usage,
an exception is raised.

This parameter was added in [1][2].

[1]https://review.opendev.org/c/openstack/openstacksdk/+/806254
[2]https://review.opendev.org/c/openstack/python-openstackclient/+/806016

Closes-Bug: #1936408

Change-Id: I5a6fb65694498dd7d8f403ea04dc1fe72b8c938d"
a6f975ac035ca7c67d0d126b76eb280e1b9d1829,2021-10-27 14:55:20+00:00,"[OVN][Placement] Add a SB Chassis event to track changes in BW config

Added a new OVN Client extension: OVNClientPlacementExtension. This
extension is in charge of handling the bandwidth information stored
in the OVN database, in the ""Chassis"" registers on the
""ovn-cms-options"" dictionary.

Three new keys are created to store the resource provider information
needed to parameterize the network backend bandwidth information,
following the implementation done in OVS and SR-IOV:
- resource_provider_bandwidths
- resource_provider_inventory_defaults
- resource_provider_hypervisors

When the OVN Client is started, the Placement extension will check if
the ""placement"" extension is loaded. It will also create an event to
check any configuration change done in any ""Chassis"" register.

The Placement extension will read the initial configuration stored
in the OVN database and will populate it to Placement API, creating
the needed resource providers, traits and inventories.

NOTE: This patch belongs to a series of patches to implement
minimum bandwidth scheduling blueprint in OVN backend. The next
patch will make OVN backend scheduling aware using the information
stored in Placement API and the port information passed by Nova when
a VM is created.

NOTE: this patch improves [1], fixing the error [2] reported in [3].

[1]https://review.opendev.org/c/openstack/neutron/+/776701
[2]https://paste.opendev.org/show/807614/
[3]https://launchpad.net/bugs/1936983

Partial-Bug: #1578989
Change-Id: I63e81aebce2621226ff2cfe91f16c97913c137e8"
77b3a1a7749341ff4cd8b809edf84459f95fe276,2021-10-29 14:47:57+02:00,"Networking guide: Add Guaranteed Minimum Packet Rate

Add Neutron doc for the Guaranteed Minimum Packet Rate feature.

Co-Authored-By: Balazs Gibizer <balazs.gibizer@est.tech>
Co-Authored-By: Bence Romsics <bence.romsics@est.tech>

Partial-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: I8bbd503488ae0997c0e5f33e0ef7709841c310b5"
0e09bf8ce108f3b4689a57fcbe75865eb6aff0ac,2021-11-04 10:10:41+00:00,"Don't enforce scopes in the API policies UT temporary

There is bug in oslo_policy [1] that caused issues with enforcing
scopes properly for rules which inherits from the oslo_policy.BaseCheck
class (many of Neutron rules are done like that).
Now when fix [2] will be merged in oslo_policy we will need to change
expected exception type in some of the policies UT from
PolicyNotAuthorized to InvalidScope.
For now, to make it working with both old and new oslo_policy, let's
disable enforcing scopes in those UT. It will be enabled again when new
oslo_policy will be fixed and we will us it in Neutron.

[1] https://launchpad.net/bugs/1923503
[2] https://review.opendev.org/c/openstack/oslo.policy/+/804980

Related-Bug: #1923503
Change-Id: I5c64eb9315b37379b0899c9d35f2f0d96f9c1579"
d9f31f5047f7de8a74b169770e2342136234b344,2021-11-04 15:56:37+01:00,"Do not set project_id for floating ip ports

Floating IP ports should not have a project_id assigned to them as they
are not managed by the owner of a project, but by OpenStack itself. With
a project_id assigned they also count towards the port quota of said
project, which they should not. Therefore, we do not set a project_id
anymore on Floating IP creation for the Floating IP port. This is in
line with the behaviour we currently have for gateway interfaces of
routers.

Change-Id: I053d48166141e5cdbd39a1235a43b06d64478bc1
Closes-Bug: #1949767"
753693d315a79c84eabd3fd21f2b6f3f5bcef23f,2021-11-04 16:46:03+00:00,"Bump OVN version for functional job to 21.06

This is needed to validate allow-stateless with the job.

Related-Bug: #1949451
Change-Id: I2e3d389552aeb4f454b01fe69198d759c8b2a039"
32c1762c363d2b55b76135a7d962f03dfe2bbea4,2021-11-05 13:56:53+00:00,"Create Keystone admin endpoint for Rally job

CI job ""neutron-ovs-rally-task"" needs an admin endpoint. Since
[1] devstack does not create it by default. This patch enables it
in this job now.

[1]https://review.opendev.org/c/openstack/devstack/+/777345

Closes-Bug: #1949945
Change-Id: Ia88d70dd142c919eebc982c82ca583d220d96ac4"
4eada8932c535df3fb59b3bcae397fc1f8e3f4a9,2021-11-08 09:06:55+00:00,"Increase the timeout for arm64 jobs

The original timeout is 3660 for both openstack-tox-py38-arm64 and
openstack-tox-py39-arm64, change it to 4800.

Related-Bug: #1949476
Related-Bug: #1949704
Change-Id: I2b0d2c8b60af0ab7398f38151ff0f62e451e7e3e"
2bb54a9c46fc5ed06b0cb19b415f67dfc7d994dc,2021-11-08 13:41:19+01:00,"Document the effects of admin_state_up

Change-Id: Iae946d0194ab82e8b9aeaa005532c8540a20a0a4
Related-bug: #1949202"
41159bd9a4178a5f8a4fdc90b034c48fa9880cac,2021-11-08 16:42:08+01:00,"Cleanup router for which processing added router failed

In the _process_added_router() method of the L3 agent, if processing
router will fail, router_info should be cleaned to e.g. be removed from
the router cache so it will not be treated as updated router in next
iteration of the agent.

Closes-Bug: #1947993
Change-Id: Ic0bc3d951d32efadc116708bfe518a711730429d"
5627c8713723c6f25ac836f4a03a00741eb809fd,2021-11-08 16:19:37+00:00,"[OVS][QOS] Dataplane enforcement is limited to min-bw egress direction

OVS QoS extension only enforces dataplane traffic shapping for minimum
bandwidth rules with egress direction.

Change-Id: I57b274387505f42778f1d9d3ec2aa9feb5ae929d
Closes-Bug: #1949607"
1248b36ddc90df186e16a3a85336f332330f835c,2021-11-08 18:17:11+00:00,"[OVN][Placement] Add support for minimum bandwidth QoS rules

In order to be able to schedule a port bound to OVN backend and a
minimum bandwidth rule, this type of QoS rule should be supported
in the mechanism QoS driver ``OVNQosDriver``.

This new QoS rule has no driver enforcement; it is used only for
Placement scheduling.

Partial-Bug: #1578989

Change-Id: Ia10aae1820f13bb28956d9ef45eced2dba71be98"
4f95794d2298d4872ec1ebb1380537d09b47ea91,2021-11-10 15:36:48+00:00,"Increase openstack-tox-py38 and openstack-tox-py39 timeouts

Increased openstack-tox-py38 timeout in gate CI up to 1 hour.

Increased openstack-tox-py39 timeout in check CI up to 1 hour.

Closes-Bug: #1949704
Closes-Bug: #1949476

Change-Id: I415c1d67757354243855ac44862f245eb08887c8"
cd1d96863ec8f428f03cc10741e1d876b830a5df,2021-11-11 10:08:23+03:00,"Add Local IP Extension and DB

This adds Local IP API extension, DB and OVO models, DB mixin,
migration and service plugin.

Partial-Bug: #1930200
Change-Id: I0ab7c5e9bc918f7fad282673ac6e32e1b01985c5"
662045f519a164ae683a37f5cf1c4b30369a3386,2021-11-11 07:11:47+00:00,"[OVN] Execute OVN migration transactions independently

Instead of executing all Neutron DB changes in one single
transaction, in order to avoid clashes with other DB operations
each element will be treated independently.

For the ""PortBinding"" registers update, each element will be updated
in an independent transaction.

For the ""Trunk"" registers update, all subports ""PortBinding""
registers belonging to this trunk will be updated in an independent
transaction.

Closes-Bug: #1939704
Change-Id: I6f78750af34001b3707f1a6ee3a0882b427a5dcc"
1222962767bf2b9a3620c9e4681f155146701765,2021-11-11 10:25:27+03:00,"Add Local IP L2 extension skeleton

OVS agent part of Local IP feature was divided into
2 parts to make it easier for reviewers:

1. This patch adds agent extension skeleton and sets
server <-> agent RPC communication mechanism via
push notifications of LocalIPAssociation objects
create/delete. It also shows how the extension would
treat those changes. It may be called extension ""frontend"".

2. Agent extension flows patch (next one) - deals with OVS
flows and can be called extension ""backend"".

Partial-Bug: #1930200
Change-Id: I31cb4062b6a21b71c739ab202c60aa7002e4d36e"
7874c576013928c036dca4d9c0a38e5b8ae06bb4,2021-11-11 07:48:32+00:00,"[ovn] Add timeout option to ovsdb-client command

Today, we invoke ovsdb-client to cleanup the MAC_Binding entries
without specifying any timeout. This can lead to workers blocking
forever if there's an issue with the connection to the server.

This patch is adding a timeout parameter to the command line to
prevent this condition.

Closes-Bug: #1948891
Related-Bug: #1946318

Signed-off-by: Daniel Alvarez Sanchez <dalvarez@redhat.com>
Change-Id: Id393cbec31dd64a795e85d756b7b843c9dfc59f3"
7e2f73350ffdc90f7b340788db36edc439f96f6e,2021-11-11 13:18:49-05:00,"[OVN] Fix deadlock in neutron_ovn_db_sync_util.py

A feature to synchronize OVN DB connections when handling events
introduced in 90980f496cfa3cc5df1c93cf834a44f33d3f1f6f is not applicable
to the offline sync process executed by this utility.

Closes-bug: #1950679
Change-Id: Iac4eb364bfc1c44f5d4526bae71967bede29cc36"
4511290b726f605384285228a28ad7b32a4b8c43,2021-11-12 23:01:06+07:00,"[OVN] Fix port disable security dead when run neutron-ovn-db-sync-util

Port disable security should not have been in acl neutron_pg_drop, but
when run neutron-ovn-db-sync-util, port disable security still added
to ACL neutron_pg_drop. It because port disable security is not
trusted port.

Co-authored-by: archiephan <chungphan7819@gmail.com>

Closes-Bug: #1939723
Change-Id: Iebce0929e3e68ac5be0acaf5cdac4f5833cb9f2f"
ebc4766990c9f7021f60240de00370bd81bfa1e6,2021-11-15 08:58:11+00:00,"Check interface presence in new namespace

When an interface is moved to a new namespace, specially with OVS
internal ports, the interface first dissapears from any network
namespace and then is added again. ovs-vswitchd service detects
this interface change as reported in [1]. This delay is the cause
of the related bug, where some interfaces are not present when
the L3 agent needs to manipulate them.

[1]https://bugs.launchpad.net/neutron/+bug/1948832/comments/3

Closes-Bug: #1948832
Change-Id: I3af4d0afa784899689ccb595ce6ba64495431eb9"
6ead2ce5b74e8592c89dba5342bb3723fc958137,2021-11-15 12:57:13+00:00,"Disable ""TestObjectVersions.test_versions"".

Disabled ""TestObjectVersions.test_versions"" until n-lib 2.17.0 is
released and the OVO ""QosRuleType"" hash is updated.

Change-Id: I5b850314297e40b57d7d8152aaf9c60c81d353e8
Related-Bug: #1950977"
6c9bf1efbd13807d831d7dcb1bd21bfff906a13c,2021-11-17 08:41:33+00:00,"Remove functions to enable Neutron's placement integration

Those functions were part of the neutron devstack plugin but we
discussed it during last PTG [1] and decided to move to the Devstack
repo as plugins which are used by e.g. CI jobs which are defined outside
of the neutron repository.
Placement integration is used e.g. in the tempest-slow job which is
defined in tempest and used by many different OpenStack projects.

[1] https://etherpad.opendev.org/p/neutron-yoga-ptg#L142

Depends-On: https://review.opendev.org/c/openstack/devstack/+/815682
Change-Id: I72e2c4c55a3c40e2a3c491fe66c05b659b76e349"
4909c8c18dc13a19d7760ec27c4c61de508a188a,2021-11-17 10:09:14+00:00,"Bump neutron-lib to 2.17.0

Remove the QoS constants from Neutron code. QoS constants are now
located in ``neutron_lib.services.qos.constants``.

This patch also reverts [1]. This patch was merged in order to
allow a newer neutron-lib release in ""requirements"". This test
was failing because the element order of the ""VALID_RULE_TYPES""
list was different between Neutron and neutron-lib. That was
modifying the ""QosRuleType"" OVO hash.

[1]https://review.opendev.org/c/openstack/neutron/+/817940

Closes-Bug: #1950977
Related-Bug: #1922237
Change-Id: I31edea3cc0f4a284a773a35302997ca6069efc95"
23b99e2f127731c85f63c88c7144aa0a111c4abf,2021-11-17 20:49:25+00:00,"ovn: Filter ACL columns when syncing the DB

The patch filters columns from OVN DB only to those that are used by the
ovn mechanism driver. It means generated ACLs from Neutron DB and ACLs
obtained from the OVN DB will always have the same columns. This is
useful for db sync script when comparing if given security group rule
has corresponding ACL in the OVN DB.

Closes-Bug: #1951296
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>
Change-Id: I39e3b987b8546fd970a933b846ed23c8a2588258"
b7ae945e334642227e7913fe0c8cd8d74c6dcea0,2021-11-22 10:50:13+01:00,"Ignore warnings in the policies UT

Currently we are not enforcing scopes in the policy checks in unit
tests to avoid issues after [1] will be merged.
But still scope configured in the test contexts and in the rules don't
match so oslo.policy produces a lot of warnings and it seems in the
results of [1] that this may be too much for stestr and UT job is
timing out there.
So to avoid that, let's ignore python warnings in the policy related
unit tests.

[1] https://review.opendev.org/c/openstack/oslo.policy/+/804980

Related-Bug: #1923503
Change-Id: I3264f0708c7899bf886c6b2c14d8f80dae337e8d"
d02fb560aa35c4931d40000e8ca4c0e4105299b7,2021-11-22 15:04:39+00:00,"[OVN] Update check_for_mcast_flood_reports() to check for mcast_flood

The patch [0] changed the value of the ""mcast_flood"" option for the
localnet ports in OVN to ""false"" to avoid multicast packet duplication
but, the maintenance task check_for_mcast_flood_reports() was never
updated to account for that change.

So, localnet ports created prior to [0] would continue to have the
""mcast_flood"" value as ""true"" and new ports would have it as ""false"".
This patch fixes the maintenance task.

[0] https://review.opendev.org/c/openstack/neutron/+/797418

Change-Id: Ib90704a85c9ed659d71ac8ed42b1b542bd2496a2
Closes-Bug: #1949081
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
770b64b90e0ada90a40538830002fc447a8dee9c,2021-11-23 20:40:01+05:18,"Fix tunnel_types in ml2 ovs sample config

Without this port binding fails with below error:-

Network <nw> is type of vxlan but agent <host> or mechanism
driver only support ['gre', 'local', 'flat', 'vlan'].

Also fix permissions of /opt/stack/devstack in ml2 ovs testing
documentation and added these files to irrelevant-files to skip
running functional jobs as these files are not used in those jobs.

Related-Bug: #1934466
Change-Id: I3ca2ea19bf5e316e580669caab4c607447034a11"
c8427c82dae38154df70400f7d2fe69f0d6c3354,2021-11-23 16:21:37+00:00,"[OVN] Check new added segments in OVN mech driver

Check new segments added to OVN mechanism driver. This mechanism
driver does not inherit from ``SimpleAgentMechanismDriverBase``
because OVN has no agents (NOTE 1). However OVN mechanism driver
requires an OVN controller service in each deployed chassis. This
is how OVN driver knows the hosts using this backend.

The segments, attached to an external network (connected to a
physical network), can be mapped to a host if ther is a chassis (OVN
controller agent) in this host.

NOTE 1: OVN provides agent API compatibility, presenting the
controller and the metadata services as agents. But OVN mechanism
driver has no control or provides any information (via RPC) to
those services.

Closes-Bug: #1949967
Change-Id: I570b2251da8a4a25d155ba838346b24afafd727f"
74aa86a976c5bcf42b2779e5c557d7f7f4fdac9b,2021-11-24 03:54:03+00:00,"Properly clean up ovn-northd in functional tests

ovn-northd.ctl is a socket, so os.path.isfile() returns false and
ovn-northd is not properly killed. Use os.path.exists() instead.

Closes-Bug: #1952023
Change-Id: I00fba2dc4395c0a8cd4631d4c2c71d9c3dc429e9"
42cfa055c278b1daa2c486a277e71c674836fb51,2021-11-24 09:01:09+00:00,"Add network QoS inheritance to floating IP

Added information of the floating IP network QoS policy to the
``FloatingIP`` OVO. The view-only parameter added allows to check
the network QoS policy in the floating IP object.

This patch does not implement any change in the L3 code (OVS or
OVN). This patch does not change any existing behaviour.

NOTE: bump neutron-lib version

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/817936

Partial-Bug: #1950454
Change-Id: I9d7bb54b14fb983161fdf51c96b6fda107db4fe6"
d7178927fdea70c2200ec409b4c3a94a8819a029,2021-11-24 12:44:23+00:00,"Add upgrade check for floating IP QoS inheritance from network

This new upgrade check will inform to the user what external networks
have at least one floating IP address and a bound QoS policy. That
could affect to the L3 QoS applied on the floating IP.

Partial-Bug: #1950454
Change-Id: I751b8baeda00ce890722d96199b19a91818b2ca0"
0725533a6fa6a42d361e518b027f69da8e1e1ec5,2021-11-24 17:08:58+01:00,"[OVN] Fix gateway_mtu option should not always be set

OVN Driver currently fixes gateway_mtu MTU to the provider MTU value
without considering if the private networks in the associated router
have greater MTU values than the provider. This is unnecesary and
adds extra actions for each packet. This patch fixes that, as now
gateway_mtu is only set in case the provider MTU is smaller than the
private MTU.

The changes in create_router_port and delete_router_port were necessary
as there could be a use case when the user first sets the gateway
router and later adds subnets from networks with greater MTU, so this
parameter needs to be checked after adding a subnet.

Closes-Bug: #1951559

Signed-off-by: Elvira García <egarciar@redhat.com>
Change-Id: If56f1a3dcdc8c57303d5641df79ea919ba7c170d"
cf8fa0d42dac20d65b7f8b897d00ac4a2a9186b7,2021-11-24 22:24:42+01:00,"Remove functions which enable Neutron's QoS service

Those functions were part of the neutron devstack plugin but we
discussed it during last PTG [1] and decided to move to the Devstack
repo plugins which are used by e.g. CI jobs which are defined outside
of the neutron repository.
QoS service is used e.g. in the tempest-slow job which is
defined in tempest and used by many different OpenStack projects.

[1] https://etherpad.opendev.org/p/neutron-yoga-ptg#L142

Depends-On: https://review.opendev.org/c/openstack/devstack/+/815686
Depends-On: https://review.opendev.org/c/openstack/devstack/+/818355
Change-Id: I7b70d6281d551a88080c6e727e2485079ba5c061"
e68a2832114739264dbbd42766b4991afa2e0d0d,2021-11-25 08:27:05+01:00,"Update placement allocation of bound ports when network QoS policy is changed

When QoS policy is changed on a network, placement allocation of bound
ports in that network has to be updated. This applies only to ports
that do not overwrite network QoS policy.

To detect network resource change, a new callback is registered for
AFTER_UPDATE event.

Closes-Bug: #1915898
Change-Id: Ibc71d26cbb0dce99ea6dad9e5ccd0966e72f3f20"
a4ffd1a2f98cea425d2e1c887bcaecd655fcd473,2021-11-25 13:20:23+05:18,"Set report_interval to 0 for ovs agent unit tests

Unit tests are taking longer than usual since [1] and
causing timeouts in unit tests jobs intermittently. Set
report_interval(as this is now used to set RPC timeout)
to 0 so report_state responds immediately.

[1] https://review.opendev.org/q/I8a95e80ca74edc8f8f394cefc749c4065a8e0575

Related-Bug: #1948676
Change-Id: I653c907a4323e19d5bc381cd3716d42c45a75e15"
4dfbad7dcdaff3bfe6ada621614af080d7e8ffe3,2021-11-26 07:41:08+00:00,"Move ARM64 jobs to the corresponding zuul queue

Related-Bug: #1949476
Related-Bug: #1949704
Depends-On: https://review.opendev.org/c/openstack/devstack/+/819402
Change-Id: Ie62685e1b09deb380a9cce031d8739ebd3fa6f8e"
42f52a663b7107670ad94697ebdd9d20bfc38d6b,2021-11-26 09:50:26+00:00,"Add ""quota-check-limit"" extension to OVN extension list

Added ""quota-check-limit"" extension to the OVN ML2 extension list.
This extension is also added to the NETWORK_API_EXTENSIONS list.

Related-Bug: #1936408
Change-Id: Ifbe49146555c8103efe9cd3979a120697a167d9d"
d3990468b9ffd2a5c780ed9801fe1f7428475990,2021-11-26 10:31:38+00:00,"Change signature of ""sqlalchemy.events.ConnectionEvents.before_execute""

New method signature is:
  def before_execute(conn, clauseelement, multiparams, params,
                     execution_options)

Closes-Bug: #1952409
Change-Id: I817c04ffe97ff03f60ff63d38471e48d7c63ceb7"
b51d6958f3c93e72a720fcef77ff55e0d5d10277,2021-11-26 15:47:34+03:00,"Add Local IP L2 extension flows

- setup local ARP responder
- setup local ip translation flows (nat via conntrack)
- setup local gARP blocker to prevent undesired Local IP ARP updates
  from other nodes (including real IP address owner)

2 new OF tables added for br-int:

- LOCAL_EGRESS_TABLE - to save local ports vlans
- LOCAL_IP_TABLE - for local ip handling

Partial-Bug: #1930200
Change-Id: I49923958d1d602e3af4e02fadbec1b17798c49c8"
c686a2b555a15de6f8c1759dfa6d7ff589792975,2021-11-29 08:43:51+00:00,"Improve DHCP RPC handler

Remove unnecessary DB retrieval operations from ""get_network_info""
method.

Partial-Bug: #1950662
Change-Id: If4b33c8437dba411fed913e7e1c7f06d899c08f7"
68f3e21034461ffa1525d2680b20ba2ecbb53dd4,2021-11-29 12:52:32+00:00,"[OVN] Chassis name (OVS system-id) must be a UUID formatted string

The OVS system-id must be a UUID formated string. If not, the OVN
metadata agent will log the error and exit.

Closes-Bug: #1952550
Change-Id: Iad2b07f6e40dcbf690889d3b69bc00bb2ed0c05c"
278af8512374dcc75bb4884bd364ac20f2bb9e69,2021-11-29 17:52:35+00:00,"ovn: update ACL actions on stateful field change

When SG 'stateful' field changes its value, all 'allow-related' /
'allow-stateless' ACLs that belong to the group should flip their
action value in OVN nbdb accordingly.

Closes-Bug: #1952653
Reported-At: https://bugzilla.redhat.com/show_bug.cgi?id=2017048
Change-Id: Ic4621dfaedb83287845e3336ba846b054230f087"
c95ccf0a43f8f40ed6988d88fae01b225b68b43e,2021-11-29 18:35:35+00:00,"ovn: enable stateless-security-group api

The feature is long implemented but the list of extensions was not
updated accordingly. Because of missing tempest test cases for the
field, it was not caught before.

Closes-Bug: #1949451
Change-Id: I85f7749e7e6186b9e3a7534bce6c306b18702333"
b871dabdf433d2393551de6597d43774ed6cf1e4,2021-11-30 10:03:27+00:00,"[OVN] Add the VIF details ""connectivity"" parameter

In [1], the parameter was included in the mech driver ""vif_details""
member, instead of adding it in each defined VIF type, ""ovs"" and
""vhostuser"".

[1]https://review.opendev.org/c/openstack/networking-ovn/+/678599

Closes-Bug: #1947378

Change-Id: Ie9676fb2869cbf5b5cba9a7b27f2bfbbe0eab458"
0152b43ee112acebbe2f6773fce9561fc25116f6,2021-12-01 11:57:44+01:00,"Allow modification of max retries in OVSNeutronAgent

Use class variable instead of module constant to
allow modification of max_device_retries in classes inheriting
from OVSNeutronAgent.

Closes-Bug: #1952898
Change-Id: I952491ca89466540d39d78f963b581302c0d8a17"
ef7f673098c2a4574365f6f4ed20734f29309f08,2021-12-01 12:39:17+00:00,"Do no use ""--strict"" for OF deletion in TRANSIENT_TABLE

There are two types of OF rules in TRANSIENT_TABLE:
- With priority 100: these rules match by ""in_port"", that is a
  unique identifier.
- With priority 90: these rules match by MAC address and VLAN ID.
  This combination (MAC, VLAN) is unique.

That means when a deleting an OF rule in TRANSIENT_TABLE, it is
enough to specify the ""in_port"" or the (MAC, VLAN) tuple. The
""--strict"" parameter, added to also define the priority, is not
needed.

By removing the ""--strict"" parameter, these deletion commands can
be executed synchronously at the end of the OVS deferred context,
when all the OF rule commands (addition or deletion), are executed
at the same time. That removes the small window, detected in the
related bug, when the OF rule set for a port is not complete.

Closes-Bug: #1952770
Change-Id: I9f5bd8a1404dde3a0aa163ce72aef2961f537676"
b1ecde9122b34b52e1976b3bce22b81dc5b282d5,2021-12-02 09:42:09+00:00,"Add ""update_network"" implementation to ""L3AgentExtension"" child classes

Added ""update_network"" method implementation to all ""L3AgentExtension""
child classes. This new method will be added as a new abstract method
in future neutron-lib releases.

Needed-By: https://review.opendev.org/c/openstack/neutron-lib/+/818536
Related-Bug: #1950454
Change-Id: Ib50d37d57c3d6a69a68876ae04f468325516d4eb"
fa2179278f064f75e057f7020e4f0c34f358de1b,2021-12-02 14:33:29+01:00,"[OVN] Prevent deleting the only IP of a router port

Neutron allows deleting the only IP of a router port but
the OVN NB DB doesn't, since it expects that the
network value of a port is greater than 0. This should
not be possible since it causes that the DB are not
perfectly sync.

It is needed to check BEFORE_UPDATE if the port
that will be updated is of type router owned and
if it will have an IP after the update. If not
an error needs to be raised.

Closes-Bug: #1948457
Change-Id: I206c31201470f178efdde8839622be7900c6ae3e"
176503e610aee16cb5799a77466579bc55129450,2021-12-02 15:03:15+01:00,"Avoid writing segments to the DB repeatedly

When:
* the segments service plugin is enabled and
* we have multiple rpc worker processes (as in the sum of rpc_workers
  and rpc_state_report_workers, since both kind processes agent
  state_reports) and
* many ovs-agents report physnets,
then rabbitmq dispatches the state_report messages between the workers
in a round robin fashion, therefore eventually the state_reports of the
same agent will hit all rpc workers.

Unfortunately all worker processes have a 'reported_hosts' set to
remember from which host it has seen agent reports already. But right
after a server start when that set is still empty, each worker will
unconditionally write the received physnet-segment information into
the db. This means we multiply the load on the db and rpc workers by
a factor of the rpc worker count.

This patch tries to reduce the load on the db by adding another early
return before the unconditional db write.

Change-Id: I935186b6ee95f0cae8dc05869d9742c8fb3353c3
Closes-Bug: #1952730"
4e395c5d2ba4215989962f5448530ddf8a6e7eeb,2021-12-02 20:00:34+05:18,"Fix links for Source code references

These are leftover from opendev migration and
without this fix the links results into Not Found.

Mainly need to use ""src"" in place of ""tree"" to
get these links working with opendev.org.

Also used git tags where line references are used
as branched references do not persist. And for line
references use #L in place of #n as that's where it
get's redirected.

Also update references for zuul and use of
devstack-vm-gate-wrap.sh in neutron functional jobs.

Change-Id: I92d11c99a17dab80d4b91da49f341f9ba202bcfe"
e4c168b1fcc3bd79e7708c63533e3caf83ba7f1b,2021-12-05 04:36:36+00:00,"Improve Router callback system's publish events

When I writing 'ndp_proxy' service plugin, I found I couldn't get enough
informations about router from the callback system (Such as: the origin
request body of user send). So, for write service plugin that related
router plugin more concisely I commit this patch.

This patch proposal two changes about router callback publish events:
1. Add 'request_body' parameter to some event's payload
2. add 'BEFORE_UPDATE' event for router gateway

Related-bug: #1877301
Change-Id: I5f6a4e6f0b7c5feb794ddb7efbd07d01bad91af8"
6288dc7259a9032ef528c364f419b1a079a19cd9,2021-12-07 10:52:38+01:00,"Keep binding:profile keys during placement allocation change

[1] overwrites the port's binding:profile with the  allocation dict,but
that dict can contain other fields also.

[1]: https://review.opendev.org/c/openstack/neutron/+/805637#617

Change-Id: I687686a673979cd9b95bac7282e836a6435f0521
Partial-Bug: #1922237"
8a9b9211d15a5f2ffe2b0ed42ccfc6fe8764753a,2021-12-09 09:21:19+00:00,"Quota engine to accept --force parameter in limit update

Neutron quota engine now accepts ""--force"" parameter in quota limit
update command. This is currently the default behaviour: the quota
engine does not check the resource usage before updating the quota
limit.

However, this is an intermediate step before changing the quota engine
behaviour. In Z+ (the exact release is not defined yet), the quota
engine will requiere ""--force"" parameter to set a quota limit regarless
of the resource usage. By default, the engine will check it.

Partial-Bug: #1953170
Change-Id: Ic1132a731f02109233fb80937791cbe7bc3ca0c5"
ef162fcf8ed288ddab5c0e38eeb31f09106673eb,2021-12-09 09:44:01+00:00,"Provide a ""priority"" value to the OVN events

Since [1], the OVN events are sorted by a ""priority"" value. In
""TestOvnDbNotifyHandler"" tests, because several events are added to
the watch list, this ""priority"" value should be given.

The workaround [2] is removed as is unnecessary now.

NOTE: this patch will work with newer ovsdbapp versions (still not
released) and current one. CI testing master branch of ovsdbapp could
be found in ""openstack-tox-py36-with-ovsdbapp-master"".

[1]https://review.opendev.org/c/openstack/ovsdbapp/+/819116
[2]https://review.opendev.org/c/openstack/neutron/+/755335

Closes-Bug: #1953481
Change-Id: If76cf263a2c13eb278a5e22743b5962919c2ad98"
abfbe5d54d9d3992638efbb49d5a4145fe99ff7a,2021-12-10 12:28:59+01:00,"Do not block qos for direct-physical ports

Today the sriov qos service plugin blindly blocks creating ports
with minimum bandwidth qos and with direct_physical vnic_type. This was
originally added when only dataplane enforcement was the scope of the
qos service plugin. However in the last many releases we created
placement enforcement for this qos rule regardless of the vnic_type.
So now blindly blocking the port creation is now preventing using the
placement enforcement for this rule for direct_physical ports.

This patch removes this limitation by marking minimum bandwidth as
supported rule for the sriov qos service plugin. The limitation that
data plane enforcement is not supported for this rule remains. The agent
will not even try to apply any kind of rules to these ports as port
binding is not forwarded for the sriov agent at all.

The documentation is extended to explain that placement enforcement now
works while data plane enforcement still not supported.

This is somewhat similar to the case when the support for egress
direction is added to the minimum bandwidth rule, while the sriov data
plane enforcement was not (could not) been implemented for this
direction in the sriov agent. Today the sriov agent simply ignores the
egress direction rules in the minimum bandwidth qos rule during applying
the data plane enforcement.

Closes-Bug: #1949877

Change-Id: I20ad32eac414ff90b551bff940d92cbcfa848101"
16a793af19a2dc13e3d121b36db52d6b9ec25278,2021-12-10 12:15:18+00:00,"When creating a VXLAN interface, a device is mandatory

""IPWrapper.add_vxlan"" method must have ""dev"" parameter as possitional
argument. A VXLAN interface must be always created on top of an existing
network device:
  https://www.kernel.org/doc/Documentation/networking/vxlan.txt

Closes-Bug: #1954316
Change-Id: Ia082f8531ffcc1599206124774599dcdb500274a"
569bafbbd5f90a458d781f1e49f099f96c363683,2021-12-13 15:34:32+00:00,"[OVN] Keep ""connectivity"" VIF details parameter in migration

During the OVS to OVN migration, the port bindings ""vif_details""
dictionary should keep the ""connectivity"" key (""l2"" in both mech
drivers).

Closes-Bug: #1947366
Change-Id: Ia9b02847db5c2e0e3da9386cc6cd68dcca55e439"
1af63e881261ac3a160e9e6d2bea89ac65856cea,2021-12-13 16:38:39+00:00,"Add Chassis creation wait event in ""TestAgentMonitor""

Added a wait event in ""TestAgentMonitor"" setUp method, in order to wait
for the Chassis register creation event. This patch also adds an active
wait to check the number of ""AgentCache"" agents present in the local
cache, before starting the tests.

Closes-Bug: #1952508
Change-Id: I75c759ce94e027790b18411617e08ae5bb46bcef"
2e0e5d2698fc704c277ec9e27a9016417808f9b7,2021-12-14 11:24:39+01:00,"Add logs for port_bound_to_host

Change-Id: I4594a622339335a8f304ff4827c71cb63729faf3
Related-bug: #1799790"
2dd3ffa271d68b4e042ff64fcc2657af6990e95f,2021-12-14 15:09:31+00:00,"Remove the expired reservations in a separate DB transaction

In ""DbQuotaNoLockDriver"", when a new reservation is being made,
first the expired reservations are removed. That guarantees the
freshness of the existing reservations.

In systems with high concurrency of operations, the
""DbQuotaNoLockDriver.make_reservation"" method will be called in
parallel. The expired reservations removal implies a deletion
on the ""reservation"" table that could be executed by several
workers at the same time (in the same controller or not). That
could lead to a ""DBDeadlock"" exception if multiple workers want
to delete the same registers.

In case an API worker receives this exception, it should continue
as the expired reservations have been deleted by other worker. It
should not retry this operation.

If the reservations are not deleted, the quota engine will filter
out those expired reservations when counting the current number of
reservations [1][2][3]. That means even if in a particular request
the expired reservations are not deleted, these won't count in the
resource quota calculation.

The default reservation expiration timeout is set to 120 seconds
(as it should have been initially set) that is the default
expiration delta for a reservation since 2015.

[1]https://github.com/openstack/neutron/blob/e99d9a9d0697a21ba7ec84465f415f60041f3767/neutron/quota/resource.py#L340
[2]https://github.com/openstack/neutron/blob/e99d9a9d0697a21ba7ec84465f415f60041f3767/neutron/db/quota/api.py#L226
[3]https://github.com/openstack/neutron/blob/e99d9a9d0697a21ba7ec84465f415f60041f3767/neutron/objects/quota.py#L100-L101

Closes-Bug: #1954662
Change-Id: I8af6565d2537db7f0df2e8e567ea046a0a6e003a"
385b0ad203da40a2c0110948c0f46feb78ead2be,2021-12-16 10:48:53+08:00,"Add wait event for metadataagent sb_idl

resolve bug:'MetadataAgent' object has no attribute 'sb_idl'

Closes-Bug: #1953295
Change-Id: Id83bee82e5c476395ff422dcaf89c0095e74a8ec"
f929488ce40b33c7f5fc8cff1f95b81ea0032515,2021-12-16 11:01:15+00:00,"Amend ""network_vlan_ranges"" configuration option help text

Since [1], included in Wallaby, when a physical network is specified
in ""network_vlan_ranges"" without a VLAN network range, the configuration
parse assigns to this physical network the whole valid VLAN ID set [1,
4094]. This is needed for the VLAN type driver to create the VLAN ID
allocation registers.

[1]https://review.opendev.org/c/openstack/neutron-lib/+/779515

Related-Bug: #1954384
Change-Id: I38b7f34c001fa7a3481574f2961edf4f09ca9a81"
7b61adbb4a0e3147e08e511cdf40a4073c00d099,2021-12-16 16:19:44+05:18,"List ports when attempt to delete network with ports

When there is attempt to delete network with ports,
a general error message is displayed that one or more
ports are in use on the network. This patch proposes
to also return the ports which are in use as part of
the message.

Also modify test_delete_network_if_port_exists unit
test to check for port id and network id in Error
message.

Also bump required version of neutron-lib to 2.18.0
as that's needed for custom message in NetworkInUse
Exception.

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/821806

Closes-Bug: #1953716
Change-Id: Ib0b40402746c6a487a226b238907142384608d3c"
a416f8b0ab810f34ea274183df590a73d150a137,2021-12-16 13:20:29+00:00,"Do not announce any DNS resolver if ""0.0.0.0"" or ""::"" provided

The DHCP server should not announce any DNS resolver at all on the
subnet if ""0.0.0.0"" (IPv4) or ""::"" (IPv6) are configured as DNS
name servers in any subnet.

https://docs.openstack.org/neutron/latest/admin/config-dns-res.html

Closes-Bug: #1950686
Change-Id: I78dd012764c7bd7a29aeb8d97c00b627d7723aeb"
0ae8eba7e73e050369478ba095c03371ed5f5718,2021-12-16 13:41:57+00:00,"[OVN][Placement] Make the Placement reporter compatible with OVN

Make the ""PlacementReportPlugin"" and the ""PlacementReporterAgents""
classes compatible with agent-less mechanism drivers. OVN mechanism
driver cannot report any agent to the supported agent type list.

Partial-Bug: #1578989
Change-Id: Ic9e8586991866ebca0b24bfe691e541c198d18d7"
19b96628378357b9df2b8bb9285f71b7c7b66ca4,2021-12-16 20:57:52+00:00,"Remove _safe_plug_new method from the interface driver

It was added temporary to have compatybility with 3rd party code
which uses Neutron interface driver but it was said that since
""W"" release that old, deprecated way of calling ""plug_new"" method
will be removed. Now we are far after ""W"" release so it's time to
do some cleaning there.

Related-Bug: #1879307
Change-Id: I03214079f752c7efe6611f2e928f32652fe681bc"
c6a6c5ae127a97856c880da3f82257977a06a571,2021-12-16 22:25:27+01:00,"[Functional] Fix expected number of the enqueue_state_change calls

In the HA router's keepalived state change monitor tests, it was
expected that enqueue_state_change method will be called 3 or 4 times.
But after some changes in the keepalived_state_change monitor which were
done some time ago, it may be now that it will be called just 2 or 3
times:
- 2 when initial status will be ""primary"" and it will be just
  transition to ""backup"",
- 3 when initial status will be ""backup"", then it will transition to
  ""primary"" and finally to ""backup"" again.

To reflect those 2 possibilities, test was changed that it will expect
2 or 3 calls and will check only that last 2 will be always transition
to ""primary"" and then to ""backup"".

Additionally this patch adds some extra logging in that test so it will
be easier to check what was going on in that test.

Closes-Bug: #1954751
Change-Id: Ib5de7e65839f52c35c43801969e3f0c16dead5bb"
6809bed632b1c155bf370b78353e6b0fe059b3f0,2021-12-20 10:08:37+01:00,"Don't fail subnet validation if gw_ip is actually not changed

In subnet update API call Neutron checks if gateway_ip was send to be
updated and if so, it checkes if old gateway_ip isn't already allocated
to some router port. If it's already used, Neutron returns 409 response.
This is valid behaviour but sometimes, some automation tools may do
subnet update request and pass the same gateway ip as already used by
the subnet. In such case, as gateway_ip is actually not changed Neutron
should not raise exception in that validation.

Closes-Bug: #1955121
Change-Id: Iba90b44331fdc63273fd3d19c583a24b5295c0ac"
5b597d6e4ee647502d3f2aecd46de63f409317b4,2021-12-20 17:00:24+05:18,"[OVN] Add reverse DNS records

PTR DNS requests support is available since
ovn-21.06.0[1].

This patch adds/removes required enteries for each ip
address of the port in DNS NB table, For example for ip
addresses ""10.0.0.4 fd5a:cdd8:f382:0:f816:3eff:fe5b:bb6""
and fqdn ""vm1.ovn.test."" following enteries are added:-
- 4.0.0.10.in-addr.arpa=""vm1.ovn.test""
- 6.b.b.0.b.5.e.f.f.f.e.3.6.1.8.f.0.0.0.0.2.8.3.f.8.d.d.c.a.5.d.f.ip6.arpa=""vm1.ovn.test""

[1] https://github.com/ovn-org/ovn/commit/82a4e44

Closes-Bug: #1951872
Change-Id: If03a2ad2475cdb390c4388d6869cd0b2a0555eb7"
da8d0eaeea08bac469a4236c546103d7bfb12471,2021-12-20 15:26:48+01:00,"Fix expected exception raised when new scope types are enforced

After fix for the related bug will be fixed in oslo_policy [1],
InvalidScope exception will be raised for the API requests done with
project scope when ""system"" scope is required.
This patch changes our API policies unit tests to expect proper
exception to be raised in such cases.

This patch also bumps minimum required oslo.policy version to
3.10.1 which contains fix for the scope enforcement in the
custom rules.
Finally it also re-enables enforcing scope in those UT.

[1] https://review.opendev.org/c/openstack/oslo.policy/+/804980

Related-Bug: #1923503
Change-Id: I4c209fa4f504440a44d21a05f2703259f62519a5"
79037c951637dc06d47b6d354776d116a1d2a9ad,2021-12-20 18:32:55+00:00,"[OVN] Accept OVS system-id as non UUID formatted string

Accept OVS system-id non UUID formatted strings. The OVN metadata
agent will generate a unique UUID from the OVS system-id. If this
string is a UUID, this value will be used. If not, the OVN metadata
agent will generate a UUID based on the provided string.

This patch amends [1].

[1]https://review.opendev.org/c/openstack/neutron/+/819634

Closes-Bug: #1952550

Change-Id: I42a8a767a6ef9454419b26f80339394759644faf"
82aabb0aa962a3c5c5ce5ad1067952d8f3d9f992,2021-12-21 12:56:35+01:00,"Allocate IPs in bulk requests in separate transactions

In the ML2 plugin in create_port_bulk method, we are iterating over
list of the ports to be created and do everything for all ports in
single DB transaction (which makes totally sense as this is bulk
request).
But one of the things which was done during that huge transaction was
allocation of the IP addresses for all ports. That action is prone for
race conditions and can fail often, especially when there is no many IP
addresses available in the subnet(s) for the ports.
In case of the error while allocating IP address even for one port from
the whole bulk request, whole create_port_bulk method was retried so
allocations (and everything else) for all ports was reverted and started
from scratch. That takes a lot of time so some requests may be processed
very long time, like e.g. 2-3 minutes in my tests.

To reproduce that issue I did simple script which created network with
/24 subnet and then sent 24 requests to create 10 ports in bulk in each
request. That was in totall 240 ports created in that subnet.
I measured time of the creation of all those ports in the current master
branch (without this patch) and with the patch. Results are like below:

+-----+---------------+------------+---------------------------+
| Run | Master branch | This patch | Simulate bulk by creation |
|     | [mm:ss]       | [mm:ss]    | of 10 ports one by one    |
+-----+---------------+------------+---------------------------+
| 1   | 01:37         | 01:02      | 00:57                     |
| 2   | 02:06         | 00:40      | 01:03                     |
| 3   | 02:08         | 00:41      | 00:59                     |
| 4   | 02:14         | 00:45      | 00:55                     |
| 5   | 01:58         | 00:45      | 00:57                     |
| 6   | 02:37         | 00:53      | 01:05                     |
| 7   | 01:59         | 00:42      | 00:58                     |
| 8   | 02:01         | 00:41      | 00:57                     |
| 9   | 02:39         | 00:42      | 00:55                     |
| 10  | 01:59         | 00:41      | 00:56                     |
+-----+---------------+------------+---------------------------+
| AVG | 00:02:07      | 00:00:45   | 00:58                     |
+-----+---------------+------------+---------------------------+

Closes-Bug: #1954763
Change-Id: I8877c658446fed155130add6f1c69f2772113c27"
636f33b16bc74857a849b56409490a572b4e2734,2021-12-21 15:55:36+00:00,"[OVN] Add floating IP pools extension to OVN L3

Closes-Bug: #1954903
Change-Id: Ic1e0d78c9887ec37b40962ef0f7ed8ad5fa6c8a9"
5e62eac7a97a251ab3f2330d65950a4b9e2a33cf,2021-12-21 22:31:18+01:00,"Reduce iptables version check from 1.6.2 to 1.6.0

The check is required to check if --random-fully can be used.
Neutron is only using MASQUERADE rules which --random-fully supports
since version 1.6.0.

Closes-Bug: #1951564
Change-Id: I4d9a2f7d396d6cc8c958f5be635c2d3236e3fe4f"
34e560fad0b773d4b81032f876994d5340195600,2021-12-23 12:00:37+01:00,"Add extra debug log with current and new port statuses in ML2 plugin

This patch only adds one extra debug log to log current and new
port statuses in the method which updates that status in the DB.
This may be useful e.g. to understand why notifications about port
change aren't send to Nova in some cases (like unshelve instance, see
related bug).

Related-Bug: #1953478
Change-Id: I4c6fd5b0b33bf764c0b182f169173453ea7a4efc"
ecb0b428ee7dd5eeb5b4790914abaad224d0ea52,2022-01-05 17:24:54+00:00,"[FT] Workaround for ""test_gateway_chassis_rebalance"" test

There seems to be an error in SQLite3. The ""port"" DB object is not
stored in the DB or the index is not populated. In the same
transaction, when the ""ml2_port_binding"" object is created, the
""port.id"" reference is not found and a ""DBReferenceError"" exception
is raised.

Related-Bug: #1956344
Change-Id: I39eab8f0aaa8cc1ec6d03813f6726bb27b52ddc2"
4a06685098cc2e9b69c1b961eecef957314faf85,2022-01-06 05:02:35+00:00,"[OVN] Correctly set dns_server in dhcpv4/v6 options

When ovn/dns_servers consist of IPv6 dns nameservers,
it was getting added to IPv4 dhcp options also, and due to
this an invalid nameserver(last 4 octets of an IPv6 address)
is set in the instances.

This patch filters IPv4/IPv6 dns nameservers and set
dhcpv4/dhcpv6 options accordingly.

Also when dns_nameservers are not set for IPv6 subnets,
get those from ovn/dns_servers config or system nameservers
just like it's done with the IPv4 subnets. Updated
get_system_dns_resolvers to pick both IPv4/IPv6 valid
ips, this also requires bump of oslo.utils minimum version
to 4.8.0 to use strict option for IPv4[1].

Additionally fix some unit tests which were setting IPv4 dns
nameservers on the IPv6 subnets, this is not allowed with api.

[1] https://github.com/openstack/oslo.utils/commit/3288539

Closes-Bug: #1951816
Change-Id: I9f914e721201072e43a8c6c266ed97ca85fcc13d"
55afd9bc923f55bc8f621316a080ad4271182ebc,2022-01-07 08:48:02+00:00,"[OVN] Allow only one physical network per bridge

Same as in other ML2 plugins (OVS, Linux Bridge), OVN mechanism driver
should allow only one physical network per bridge. The rule ""one
network, one bridge"" should be present in OVN too.

By allowing only one physical network per bridge, Neutron prevents
having two networks with subnets with the same CIDR in the same bridge.
Currently is possible and this CIDR clash is not prevented (shouldn't be
by the API). This architectural limitation prevents this situation.

This limitation is already present in deployment tools as TripleO.

Closes-Bug: #1956476
Change-Id: I74a2ca9a344a93219deb94d60247478ee3200659"
f2e8a619c5ce7a4b4713f40c6da68da1a3e4410c,2022-01-07 17:25:09+08:00,"Delete MAC binding for LRP when the port is deleted

If router_A connect subnet by ip <x.x.x.x> and
there are packets through it when always_learn_from_arp_request
is set to False(patch[1]), the mac_binding table of ovn south
db will learn mac address of <x.x.x.x>.
If disconnect the subnet, the mac of <x.x.x.x> still
exits in mac_binding table. When reconnecting subnet by
the same ip as <x.x.x.x>, the mac_binding can not
update the mac of <x.x.x.x> to the latest mac address.
This will cause packets that need pass <x.x.x.x>
can not normal arrival destination address.
Fix it by clearing mac address of the <x.x.x.x> in
mac_binding tables when disconnects the subnet.

[1]https://review.opendev.org/c/openstack/neutron/+/814421

Closes-Bug: #1954771
Change-Id: I57d531eafb08dbebee7f1c4c98ba98ce7e4c4b4a"
2aa1bbabe355243e109d898eabf87acded2fef2f,2022-01-07 14:56:20+00:00,"[OVN] Prevent OVS to OVN migration if firewall ""iptables_hybrid""

Prevent the OVS to OVN migration if any node has the OVS agent
firewall set to ""iptables_hybrid"". If present, the migration will
exit. This check is implemented in the OVN migration script for
TripleO environments.

Closes-Bug: #1951272
Change-Id: I55f25f56f87bfa2a5e330cdf4c1087e8d4082b29"
ce1a87057a12c4f27bb4eb2d2a6f2b29d2709d65,2022-01-08 04:06:34+00:00,"[OVN] Check if OVN NB supports stateless NAT rules

Added a check for OVN NB schema, looking for ""options"" field in ""NAT""
table (added in OVN NB schema 5.17).

This patch removes the code to support OVN without stateless NAT rules.
It is assumed that ""options"" field in ""NAT"" table is always present.

Closes-Bug: #1949494
Change-Id: Ib3b6dd68009ab635627168b11626d7e7c548ee2f"
0e1ec521180bebe4a01298bc8cdec765cc1ec796,2022-01-08 14:53:21+00:00,"Remove ""PortBindingMixin"" class and related DB table

Not Neutron nor other active projects use ""PortBindingMixin"" class or
the table ""portbindingports"" anymore.

Closes-Bug: #1956980
Change-Id: I34424a271f6c66cd99852c6109a96a4dcf374913"
03d08dee3844710f09f15bb34f557d86666530da,2022-01-10 11:50:35+00:00,"keepalived ""no_track"" implemented in version 2.0.3

Fix the version when keepalived implemented ""no_track"" feature [1].

[1]https://github.com/acassen/keepalived/blob/master/ChangeLog#L2722

Closes-Bug: #1956770
Change-Id: Id421c5fb36e50f7fdc5a84e04ad6a654c03e4244"
a47e9494c1d8895425ad3a05a2c2290c74f0b647,2022-01-10 13:11:37+00:00,"Check whether vxlan group and local addresses are IPv4 or IPv6

Check if group and/or local addresses passed to ip_lib / add_vxlan()
are IPv4 or IPv6. In case of IPv4 fill 'vxlan_group' and 'vxlan_local'
arguments and in case of IPv6 fill 'vxlan_group6' and 'vxlan_local6'
arguments to be passed down to privileged create_interface() method.
In case of an invalid address format raise an AddrFormatError exception.

Closes-Bug: #1952897
Change-Id: I2e3b0c1635627edb2c86c6120b0410ab3c4678b2"
18ec0eb20921e41ba4cade555f9da823c9dbfa13,2022-01-10 17:15:06+01:00,"Fix placement allocation update for port with network QoS policy

If port has no QoS policy on its own, fallback to the network
QoS policy and use it to check if Placement allocation needs
to be updated.

Closes-Bug: #1915849
Change-Id: Iffc87e4021391bcb98375621739a59064540a6a7"
0255eb31e5c3ce31ed08069c4e5c0fcb1fc29074,2022-01-11 01:28:17+00:00,"Fix a error when l3-agent gets filter id for ip

Before using filter_id in _get_filterid_for_ip(), we should assign it first.

Closes-Bug: #1955775

Change-Id: Icea0a8b756f210761b635d2d34e2af04a939a640"
0256e494d029ac18bc6c9fed0fd995283c675075,2022-01-11 09:33:12+01:00,"Disable tracebacks of eventlet.wsgi.server

Security folks considered tracebacks in API responses unwanted.

Some additional lower constraints had to be bumped for the
lower-constraints job to pass.

Change-Id: Ibaefbb9935020318ed670774b0205f3bcffef4ad
Closes-Bug: #1951429
Depends-On: https://review.opendev.org/c/openstack/oslo.service/+/818548"
f3e836217c2dd84b96938d292a3fe94f346ccdc8,2022-01-11 09:59:37+01:00,"[Functional] Add extra logs to the L3 HA router transitions

This patch adds extra logs to log current and expected ha state of the
routers on various fake agents during the functional tests, log on which
agent router is ""primary"" and where it is ""backup"" and when failover of
the router should happen.
Those logs should allow us better understand what happens during those
functional tests and why some of them are failing from time to time.

Related-Bug: #1956958
Change-Id: I567036470b7256275f67e8ef3546ed780c81b5ae"
5e036a6b281e4331f396473e299b26b2537d5322,2022-01-11 18:29:56+01:00,"Ensure subports transition to DOWN

Due to a bug in OVN seting the subports SB DB ""up"" field to False
after subport detachment from the trunk port, the subports are never
transition from ACTIVE to DOWN after this patch:
https://review.opendev.org/c/openstack/neutron/+/821544

This patch ensures the chassis is also considered for such cases,
and ports without chassis but ""up"" field set to True are
transitioned to DOWN.

Closes-Bug: #1956233

Change-Id: I5b06eb517cb4d9e9ce018147788ed7bf9b34aa24"
3e71a451958e15e7593bf5f32603c7c653c58aff,2022-01-12 08:23:26+00:00,"Allow to use static Local IP openflow rules

This avoids conntrack which is usable in OVS offload
and DPDK cases.
This also allows to use Local IP feature together with
openvswitch firewall.

Partial-Bug: #1930200
Change-Id: Ifa689fb964ea7335d0fafcf1462cbf820604c7c2"
2a41b0e152915ceac66e82defb2b6610c925a76f,2022-01-12 12:40:22+03:00,"Local IP: skip ports with invalid ofport

Some time ago a patch was merged that let's OVS agent to not
skip ports with invalid ofport [1].
Thus for Local IP processing we need to explicitly skip such
ports.

[1] https://review.opendev.org/c/openstack/neutron/+/640258

Partial-Bug: #1930200
Change-Id: I43ba007b4813c02b1cf712252b0925e649fa5813"
7aae31c9f9ed938760ca0be3c461826b598c7004,2022-01-12 12:06:12+01:00,"Make the dead vlan actually dead

All ports plugged into the dead vlan (DEAD_VLAN_TAG 4095 or 0xfff)
should not be able to send or receive traffic. We install a flow
to br-int to drop all traffic of the dead vlan [1]. However before
this patch the flow we install looks like:

priority=65535,vlan_tci=0x0fff/0x1fff actions=drop

Which is wrong and it usually does not match anything.

According to ovs-fields (7) section Open vSwitch Extension VLAN Field,
VLAN TCI Field [2] (see especially the usage example
vlan_tci=0x1123/0x1fff) we need to explicitly set the bit 0x1000
to match the presence of an 802.1Q header.

Setting that bit this flow becomes:
priority=65535,vlan_tci=0x1fff/0x1fff actions=drop

which is equivalent to:
priority=65535,dl_vlan=4095 actions=drop

which should match and drop dead vlan traffic.

However there's a second problem: ovs access ports were designed to
work together with the NORMAL action. The NORMAL action considers the
vlan of an access port, but the openflow pipeline does not. An openflow
rule does not see the vlan set for an access port, because that vlan
tag is only pushed to the frame if and when the frame leaves the switch
on a trunk port [3][4].

So we have to explicitly push the DEAD_VLAN_TAG if we want the dead
vlan's drop flow match anything.

That means we are adding a flow to push the dead vlan tag from
dhcp-agent/l3-agent but we are deleting that flow from ovs-agent right
after ovs-agent sets the vlan tag of the port to a non-dead vlan. Which
is ugly but we have to keep adding the flow as early as possible if we
want to minimize the window until frames can leak onto the dead vlan.
Even with this change there's a short time window in which the dead vlan
could theoretically leak.

[1] https://opendev.org/openstack/neutron/src/commit/ecdc11a56448428f77f5a64fd028f1e4c9644ea3/neutron/plugins/ml2/drivers/openvswitch/agent/openflow/native/br_int.py#L60-L62
[2] http://www.openvswitch.org/support/dist-docs/ovs-fields.7.html
[3] https://mail.openvswitch.org/pipermail/ovs-discuss/2021-December/051647.html
[4] https://docs.openvswitch.org/en/latest/faq/vlan/
    see 'Q: My OpenFlow controller doesn’t see the VLANs that I expect.'

Change-Id: Ib6b70114efb140cf1393b57ebc350fea4b0a2443
Closes-Bug: #1930414"
200b345429b0d91246a9b5671dcc621c1e262c37,2022-01-12 17:33:41+03:00,"Add Local IP policy rules

Partial-Bug: #1930200
Change-Id: If2d56eb680da521e79cec176bf5c4e6959f1fcf5"
66d50cdbd744cfacfa90905333e3b7dd9cb1ba90,2022-01-12 17:34:21+03:00,"Add devstack plugin support for Local IP

This adds ability to configure local_ip service plugin
and local_ip OVS agent extension.
Needed to enable corresponding API/CLI and scenario tests.

Related-Bug: #1930200
Change-Id: Ia9269b7a73aef116cf8c5bc6ca0a1cca9deaa056"
58feb88853e9f12deaedb612d5855f3d80607e40,2022-01-13 04:08:18+00:00,"[OVN] Check if OVN SB supports virtual ports

Added a check for OVN SB schema, looking for ""virtual_parent"" in
""Port_Binding"" table (added in OVN SB schema 2.5).

This patch removes the code to support OVN without virtual ports.
It is assumed that ""virtual_parent"" field is present in ""Port_Binding""
table.

Closes-Bug: #1949496
Change-Id: I3d01f58dca570537b5e754b331ca4809a7161ae2"
ebe9e046c674c6c7aa72a58b38104894e90bbafe,2022-01-13 05:20:58+00:00,"Create an index for ""agents.host"" column

This index improves any query filtering by agent host name.

Closes-Bug: #1955639
Change-Id: Ice4fd6319d4c7d403bdc74a25e3d7cac31fb4c9f"
930ec1eca3356cc4e003b5f044b6f7ca65a0bca4,2022-01-13 18:00:03+09:00,"ml2 ovs: Deprecate unused [agent] veth_mtu

The [agent] veth_mtu parameter has had unused since the [ovs]
use_veth_interconnection parameter was removed by [1] during Wallaby.

[1] https://review.opendev.org/c/openstack/neutron/+/759947

This change formally deprecate the parameter so that we can remove it
in a next cycle.

Change-Id: Ib85959fbc06928a49df7ea104eae3aca3f04e091
Closes-Bug: #1957180"
4c6c48956ee8d9458924334f6650ca29e753a1ef,2022-01-13 12:55:27+00:00,"Exclude router gw subnet ports from port list while port delete.

During port delete Neutron checks if host still handle some ports
from subnets that are used by router.

It may happen that the same subnet that is used for router gateway
port may be used for another VM port. Then we skip notification
to update L3 agent about related to router port deletion.

Related-Bug: #1957794
Change-Id: Iacc7d4e543ac261a6f566b49834b6865f6eded95"
ef97019c92e96d0bb17785daaf570b04c68be500,2022-01-13 20:40:42+01:00,"Add upgrade check for extra DHCP options

Some time ago with patches [1] and [2] we trimmed extra_dhcp_opt name
and value to first newline character before using them in the dnsmasq
and later added API validator to not allow such names and/or values with
newline character in it at all.
This patch adds upgrade check to warn users if they have old entries
with newline characters in the database already.

Related-Bug: #1939733

[1] https://review.opendev.org/c/openstack/neutron/+/806746
[2] https://review.opendev.org/c/openstack/neutron-lib/+/811708

Change-Id: I9a45d918b5a90f8fc50a9ec43b2a67cf582eb369"
cc0c60d3d8404300a0148654022eb2c5e5fdc033,2022-01-14 09:53:10+01:00,"Fix call to the compile_ovn function from Devstack

It was accepting 3 arguments where first one was ""build_modules"".
It wasn't used anywhere in that function so it was removed from
it.
This patch reflects that Devstack change in the Neutron's functional
tests script too.

Closes-Bug: #1957887

Depends-On: https://review.opendev.org/c/openstack/devstack/+/822717
Change-Id: Id8302bf23f48b227d05f1ec2a7136935b7b1c2fb"
0ce584bd9af19daf96bc92dce231a7fac5085aac,2022-01-14 12:41:40+00:00,"Add Local IP fullstack test cases

The test:
- creates 3 VMs in the same network on 2 hosts
- creates Local IP and associates first VM's port with it
- pings first VM from the second one (same host) by
  local IP address and checks pings are ok
- pings first VM from the third one (diff host) by
  local IP and verifies local IP is not accessible

Second test does the same but with openvswitch security groups
enabled on hosts and with static NAT rules for Local IPs.

Partial-Bug: #1930200
Change-Id: I27a57170b88eda951ff3ef1d5320cb8c692a074a"
b5a7dbc67dd12137d850de95542f4e2fd7a06d7b,2022-01-14 16:42:52+00:00,"Revert ""Make configure_for_func_testing compatible with e.g. Centos""

This reverts commit 391726bd4c0302ca3ce27f5de8e39ee4c6d91457.

Reason for revert: This patch is breaking CI testing, functional jobs. Variable
""BUILD_OVS_FROM_SOURCE"" should be kept.

From a working CI job:
/home/zuul/src/opendev.org/openstack/neutron/tools/configure_for_func_testing.sh:_install_base_deps:106 :   [[ True == \T\r\u\e ]]

From a now broken CI job:
/home/zuul/src/opendev.org/openstack/neutron/tools/configure_for_func_testing.sh:_install_base_deps:106 :   [[ False == \T\r\u\e ]]

""BUILD_OVS_FROM_SOURCE: True"" in the ""neutron-functional"" job definition.

Closes-Bug: #1957936

Change-Id: I564358c64c8ea7ae6039e9f8e6c0e90655fbb8eb"
5710d3407bbd59932c1c9c6a3716b34c8e2ab3e8,2022-01-15 07:58:25+00:00,"Improve DHCP RPC handler

Remove unnecessary DB retrieval operations from
""get_active_networks_info"" method.

Partial-Bug: #1950662
Change-Id: I4ea7b86e3f544d5dddcdac562208bb8afd1fc36a"
bbc5af116686a25a942fd0f70c09a69271f43c84,2022-01-16 16:06:17+00:00,"Register cleanup hooks for the object change handlers only when needed

In patch [1] there was added threads for the object change handlers and
this patch also added cleanup method which was registered to be linked
with the SIGINT, SIGTERM and run ""atexit"" to clean all object change
handler threads. But that cleanup was linked with those signals always
when neutron.plugins.ml2.ovo_rpc module was imported and that can cause
e.g. some errors in the functional tests (we saw them only in the
stable/train branch so far but maybe it can happen also in other
branches).
To avoid that, this patch links cleanup with those signals only when
object change handler threads are really started.

Related-Bug: #1926417

[1] https://review.opendev.org/c/openstack/neutron/+/788510

Change-Id: I40b72316bd0f4281484d3cf07542177297028e34"
af46120f40e792df8d1b70d56ff03b629d7424a8,2022-01-17 08:21:10+00:00,"[Functional/fullstack] Remove tools from irrelevant list

For functional and fullstack jobs tools/ is in the irrelevant list, thus
even if configure_for_func_testing.sh is changed none of these jobs are
executed.

Change-Id: I3fb7e162c92b0316b16c8af92831b7050a9727d8
Related-Bug: #1957936"
d033c9f93327b5845280bbc21e5a229555b905f4,2022-01-18 16:00:04+01:00,"Fix OVS OVSNeutronAgent.reclaim_local_vlan()

Closes-Bug: #1957931

Change-Id: I5b716399cb8344b8a89b97378fcb4796654e6152"
729290357b0961eb72d7b9a540b5098ab54e1a6d,2022-01-19 07:37:50+00:00,"[tests] Don't fail if kill cmd says that process don't exists

In e.g. functional tests, if kill command called by
RootHelperProcess.kill() method will return error that process
with specified PID don't exists, test should not fails.

This patch adds handling of such case in this method and reraise
exception always if error code is different than 1 or
raised exception have got different error message.

Change-Id: I92c8f74f1dd2e76141e1e024a22589e9ddc4ff57
Closes-Bug: #1843418"
6636f65663446d939a9e3379468bfbca6c9a4f7b,2022-01-19 16:03:56+08:00,"[OVN]Ensure gateway port is running after gateway chassis changed

During normal operation of a router, its gateway port state is running.
When the gateway chassis of the router binding changes, the host bound
to the gateway port will be updated(call core_plugin.update_port).
at this time, the status of the router gateway port will become down,
and we need to update it to active(call core_plugin.update_port_status).

Closes-bug: #1958353

Change-Id: I4c10904d716abb4482898c08f9fd72ad5b106906"
ac718804de7cb2766420ed1eff4e4bc10190fb1c,2022-01-20 15:40:05+01:00,"Add extra logs around enabling/disabling nova notifier code

I should helps with debugging why the nova notifier is at some point
disabled for one neutron worker thus notifications aren't send to
nova from that worker.

Related-Bug: #1958363
Change-Id: Ifd88d5bc7515b5f29240bd12be1d3257b308fd67"
6ea6fdd874eed70d8c103f6bc91783921c817cc8,2022-01-21 10:51:31+00:00,"Create a PeriodicWorker for DbQuotaNoLockDriver clean up

The ""DbQuotaNoLockDriver"" quota driver ""Reservation"" registers clean up
is done now in a ""PeriodicWorker"" spawned by ML2Plugin during the
initialization. The ""Reservation"" registers are no longer deleted
synchronously during the API calls.

That will prevent from possible database deadlocks when concurrent
delete operations clash (as seen in very busy systems, with more
then 500 parallel requests). Although those database deadlocks were
recoverable, this new implementation will avoid this by allowing
onle single thread to execute this command periodically.

Related-Bug: #1954662
Change-Id: I50bab57830ce4c1d123b2cbd9d9832690bd4c8f9"
15d6cfffc9f3c63a7bac75f8d04beaae82ddc794,2022-01-24 17:55:02+01:00,"Ensure subports status is aligned with parent port

Subports of a trunk should have the same status as the parent port.
However, with ovn, if the parent port is in DOWN status, the subports
are transitioned to ACTIVE as soon as they are attached to the trunk.

This patch ensure the status set on the subports when being attached
matches the one on the parent port.

Closes-Bug: #1957161
Change-Id: I26c43c2909b635e8b21306ea1880da3877477a17"
1a7f4d5b038e396578644c74a120048f77595a47,2022-01-25 16:30:11+01:00,"[OVN] Add unit test for binding profile validation

The ``validate_and_get_data_from_binding_profile`` helper function
in ``neutron.common.ovn.utils`` does currently not have unit tests.

To be able to safely modify this function in a upcoming patch we
add unit tests separately.

Partial-Bug: #1932154
Change-Id: I1a5f705064f90f422fc0ca971d79135ac3ccfc9f"
d5b9a04bc28faa7696f120b3165f8087eafe815f,2022-01-26 10:59:16+00:00,"Local IP internal documentation and release note

Closes-Bug: #1930200
Change-Id: I6745afad159270c5ccd9be2e68f96d8dafc1dc04"
1c1814aa6b03708fb190367cdbc4239afc493aae,2022-01-26 12:50:19+01:00,"Fix reference before assignment error in the dhcp_rpc module

In patch [1] method get_network_info was refactored and that causes
NameError in the DHCP agent when there is ""network object passed in
kwargs and there are subnets with segments in network. See related bug
for details.

[1] https://review.opendev.org/c/openstack/neutron/+/820190

Closes-Bug: #1958955
Change-Id: Iad8d85c79f8b11a24b1bb1ca44c776e909b610c3"
94b961f179039af84ada3366220d9c9b861e88b4,2022-01-26 18:22:50-06:00,"Update dns_assignment attribute documentation

After the implementation of [1], the calculation of the port's
dns_assignment attribute changed for some use cases of the Neutron
integration with an external DNS service. This change updates the
documentation accordingly

[1] https://specs.openstack.org/openstack/neutron-specs/specs/victoria/port_dns_assignment.html

Partial-Bug: #1956632
Change-Id: I1c8c6850faa7741afabe31889cdad0228a366310"
08bdc4ded10baba932c5690f0c567e5bc38f0ff3,2022-01-27 04:16:45+00:00,"Add ""bound_drivers"" information to port ""vif_details""

This new parameter ""bound_drivers"" is a dictionary with the binding
levels and the driver name. E.g.:
  port['vif_details']['bound_drivers'] = {'0': 'openvswitch'}
  port['vif_details']['bound_drivers'] = {'0': 'ovn'}

If the port is not bound, this key won't be present in ""vif_details"".
This information is important for Nova, along with the VIF type, to
adequate the port plugin strategy or to know what kind of plugin
events are expected; currently, depending on the driver and the
connection type, Neutron sends a different set of vif-plugged events.
This is specially critical during live migration process, where the
network communication should be halted as little as possible.

Related-Bug: #1821058

Change-Id: I1c42fa4f44cc2311e874b2b9bf2bd40ffd142e91"
8dfe5cc95ba8d27ff59f710a34418d46a0d25144,2022-01-27 09:36:50+00:00,"[OVN] Implement floating IP network QoS inheritance

Floating IP now have information of the QoS policy of the external
network. The OVN QoS extension will use this network QoS policy if
there is no floating IP QoS policy.

Partial-Bug: #1950454
Change-Id: I380a130d97e8bfe54caa5f3a129877507d1ce2a6"
0fd168ae93176573575c61eab370e13a4cee34ce,2022-01-28 09:36:22+01:00,"Use elevated context to update router's external gateway

When new defaults and scope enforcement are used in Neutron, elevated
context needs to be used to update router's external gateway when new
subnet is added to the external network. Otherwise, router can belongs
to the other project than external network and it will not be updated at
all.

Closes-Bug: #1959331
Change-Id: I888ddf66a15cd20039ff26baccd170da128e1eb7"
522837a97f20d1d9325f7d0719811e263d3fd1c3,2022-01-28 14:19:06+01:00,"[OVN] Fix overlapping security group objects not correctly applied

If a security group object modified an Access Control List in OVN, it
could not be modified by another object. This change prevents the driver
from associating more ACLs than needed if the network log object created
is to log the dropped traffic. Functional tests consider the existence
of events now.

Closes-Bug: #1956763
Change-Id: Ib392b46308aaf76386a747870c5600790a268d51"
0d233041206434b91e5f2d1f00593e592019a99d,2022-01-29 04:50:44+00:00,"[OVS] Add IPv6 ICMP RA to the default ingress rules

""ICMPV6_TYPE_RA"" was removed from ""ICMPV6_ALLOWED_INGRESS_TYPES""
because of a bug in the iptables firewall (described in the LP
bug). This rule was added in ""_add_ingress_ra_rule"" to
port[""security_group_rules""]. However, the OVS firewall does not
use this rule list but builds the default rules from scratch.

Closes-Bug: #1958643
Change-Id: I53ee3c87ab2a6306b31fc3387b706d8296031a14"
8fd88fd2239bd19794f2a1cf9480e5aa7d4f5a9b,2022-02-01 08:28:15+01:00,"Pass host parameter to the get_network_info method

Host parameter is needed there to filter subnets per segment when
segments plugin is enabled.
When dhcp agent requests informations about networks, and segments
plugin is enabled, subnets which belongs to the network are filtered out
based on the host passed as argument to the get_network_info() method.
But we never passed host to that method, even when we should e.g.
during the full sync of the DHCP agent, when it requests details about
each network.
This patch fixes that issue by passing host parameter to that method.

Closes-Bug: #1958955
Change-Id: Ib5eef501493f6735a47ea085196242a5807c4565"
654c3b796fb467f92ce06528f64904086b0beb17,2022-02-01 14:37:39+01:00,"OVN TestNBDbResources wait for NB_Global table to be present

In functional jobs (neutron-functional-with-uwsgi)
test_ovn_db_resources.TestNBDbResources.test_port_dhcp_options failes
time-to-time at the phase of creating network.
Wait for NB_Global table at the setUp() phase of TestNBDbResources.

Change-Id: I92132233dae77ffbbd5565caa320c7dac19e2194
Closes-Bug: #1956965"
2d6b33445c2124a04f84d4d4e8d27675ba9d0b57,2022-02-02 08:11:04+01:00,"Revert ""Switch neutron-grenade-dvr-multinode to be non voting temporary""

This reverts commit 04e5a42f70605b0d1e5a3cc33bf4ee09a0da1052.

Related bug is fixed, grenade dvr job is stable since long time so we
can make it voting again.

Related-Bug: #1920778
Change-Id: Ica3bb4d44133e5d2d58f5bbb4a3747cf3d8811e2"
507989fc622a6633926c4288827f482bae6054dd,2022-02-02 08:03:38+00:00,"Use a thread local variable to store the Nova Notifier enable flag

The Nova Notifier can be called simultaneously by several RPC
callbacks from the agents (DHCP, L2), trying to update the provisioning
status of a port. In order to handle each context notifier enable flag,
a thread local variable is used. This will isolate the flag update
if two entities inform at the same time and one RPC callback is attended
during the processing of the other one.

This patch also removes the debug messages added to debug this issue.

Closes-Bug: #1958363
Change-Id: Ie670fba4b3afe427747732d2c3948d92311e960e"
cde5657a504f6658cb1c9c98235c120030f86130,2022-02-02 19:21:21+00:00,"[OVN] Sync QoS policies

The tool ""neutron-ovn-db-sync-util"" now syncs the Neutron QoS policies
with the OVN NB database. The tools reads the port and the floaiting IP
QoS policies and creates the corresponding OVN QoS rules.

The ovsdbapp library is bumped to version 1.15.0. This version updates
the ""QoSAddCommand"" to allow register updates. If the OVN NB QoS
register to be created is present in the DB and all parameters match,
no transaction is commited to the DB.

Depends-On: https://review.opendev.org/c/openstack/ovsdbapp/+/822138
Closes-Bug: #1947334

Change-Id: Ib597b62017b56b41009dd4d7359e169f424272b0"
ebca47365c261b881d0c0e0135821ce03471a336,2022-02-02 20:51:40+00:00,"""L3AgentExtensionsManager"" check loaded extensions

Now ""L3AgentExtensionsManager"" lists loaded extension, checking if
they inherit from ""neutron_lib.agent.l3_extension.L3AgentExtension"".
If any extension does not, the L3 agent raises an exception and exits.

Closes-Bug: #1951569
Change-Id: I3ce4858cef9b3a3d7eab005dd1ad2bb3b5ef6ef3"
ce7f2795384e05b7e086bdab41226a69708dfdc5,2022-02-02 20:52:56+00:00,"[OVN][QoS] Add external_ids reference to port QoS registers

Same as with floating IP QoS OVN registers, port QoSes should have a
""external_ids"" reference to the port ID this QoS is attached to.

Related-Bug: #1947334
Change-Id: If14ccff79f77618133cce4bf95e3f1eea7ba8cf3"
140bb63665223d7cd2a7fee8c1d1494ebd2a802f,2022-02-02 19:37:28-06:00,"Wait longer before deleting DPDK vhu trunk bridges

In [1] we added a delay before deleting DPDK vhu trunk bridges to
mitigate a race condition when instances are rebooted. As explained in
[1], with DPDK rhu, a reboot is esentially a super fast bridge
delete-then-create that is prone to race conditions. We have recently
encountered in customer deployments that the wait added in [1] is not
long enough. As a consequence, this change increases the wait.

[1] https://review.opendev.org/c/openstack/neutron/+/717394

Change-Id: I5c1474b405d436d3b1e5db745d77999f1723b660
Partial-Bug: #1869244"
a0a25cb15c4f04baeed7319b7cdaea328d043388,2022-02-03 10:07:46+08:00,"[Server Side] L3 router support ndp proxy

Change-Id: I9b92702af8a235443a2fa1aea3997f3d40a03fc3
Partial-Bug: #1877301"
4be4511bec6856e30d18b8789a3508832ad73c94,2022-02-03 08:20:17+00:00,"Re enable test_network_v6.TestGettingAddress

The test is working fine now so let's re enable.

Related-Bug: #1863577
Change-Id: I5f631dc6c653eb8d9513721bf52400323b6f5b75"
ca8b40403f7e1ab1f383da01b4a18b066fd35b93,2022-02-03 12:47:09+00:00,"Update irrelevant-files to skip run of untouched jobs

Currently when a job config is updated, all other
jobs are triggered unnecessary.

This patch updates irrelevant files to ignore changes
in all job config files except zuul.d/project.yaml(as
this contains the list of jobs to run not their definitions).
With this only the jobs whose definitions are updated(along with
it's child jobs) will be triggered because by default
match-on-config-updates is set to true for a job[1] and
that ignores files or irrelevant-files for a job inclusion.

[1] https://zuul-ci.org/docs/zuul/latest/config/job.html#attr-job.match-on-config-updates

Change-Id: Ida7c3ac974058769eb7ff901715e9b17a998bf79"
0ddca284542aed89df4a22607a2da03f193f083c,2022-02-04 16:43:03+03:00,"Make sure ""dead vlan"" ports cannot transmit packets

https://review.opendev.org/c/openstack/neutron/+/820897 added
a dead vlan flow that pushes the dead vlan tag onto frames
belonging to dead ports before these ports are reassigned to
their proper vlans. However add_flow and delete_flows race and
delete_flows may run before add_flow, in this case deleting 0 flows
but not giving us a chance to detect this: neither does it throw
an error nor does it return the number of deleted flows.
This leads to port staying inaccessible forever and hence
breaks corresponding DHCP or router.

Current patch suggests another approach to make sure no packets are
leaked from newly plugged ports: setting their ""vlan_mode"" attribute
to ""trunk"" and ""trunks""=[4095] (along with assigning dead VLAN tag).
With this OVS normal pipeline will allow only packets tagged with 4095
from such ports [1], which normally not happens, but even if it does -
default rule in br-int will drop them anyway.
Thus untagged packets from such ports will also be dropped until
ovs agent sets proper VLAN tag and clears vlan_mode to default
(""access"").

This approach avoids the race between dhcp/l3 and ovs agents because
dhcp/l3 agents no longer modify flow table.

This partially reverts commit 7aae31c9f9ed938760ca0be3c461826b598c7004

[1] https://docs.openvswitch.org/en/latest/ref/ovs-actions.7/?highlight=ovs-actions#the-ovs-normal-pipeline

Closes-Bug: #1930414
Closes-Bug: #1959564
Change-Id: I0391dd24224f8656a09ddb002e7dae8783ba37a4"
084bb163f2427d9ba260dc376b1c0b831387e503,2022-02-07 11:52:46+01:00,"Add qos-pps-minimum-rule-alias API extension

Introduce a new API extension to enable GET, PUT and DELETE
operations on QoS minimum packet rate rule without specifying
policy ID.

Partial-Bug: #1922237
See-Also: https://review.opendev.org/785236
Change-Id: Ia083b5ac98c9e18ddbcdd2e0fc46f2f8432a628c"
5bef86847790f60bf2cb87903db8b9ef88051623,2022-02-07 14:53:39+00:00,"[OVN] Migrate ""reside-on-redirect-chassis"" for distributed FIP

This patch complement the changes made at
828765412789a15a5f375060cfab7628c65e9d5d by creating a maintenance task
resposible for migrating the ""reside-on-redirect-chassis"" option value
for existing router ports when the deployment is updated.

Change-Id: I0c623a101357226ec0b4e3e42b829303846b6f6b
Related-Bug: #1920976
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
56dbfb7ac47168ed5c9a37f81f041580d39d0eac,2022-02-07 22:35:59+00:00,"[OVN][Placement] Read the initial config in the maintenance worker

Read the chassis bandwidth configuration (stored in the ""Chassis""
registers) only once, in the maintenance worker. The SB synchronizer
will call the OVN client Placement extension
""read_initial_chassis_config"" method.

This new approach changes how the Placement information is stored. The
Placement extension does not store anymore a local cache of the
resource providers. Instead of this, in future patches, when this
information is required, the Placement extension will retrieve this
information from the SB DB, reading the content from the ""Chassis""
registers and parsing the values.

Partial-Bug: #1578989
Change-Id: I160b1dda85596277125c532ea4ce4df8e4d25b63"
053a9d24eca2c9372bd2b767504dd6b6db30643f,2022-02-08 17:13:13+08:00,"Add table for pps limitaion

Table 59 will be used for pps limitation, the pipeline change is:
all original flows with ``goto table 60`` will be changed to
``goto table 59``, while table 59 has a default rule is goto
table 60. Then we can add pps flows to table 59 for all ports.

Basic limit pipeline is:
Ingress: packets get into br-int table 0, before send to table 60,
in table 59, check the destanation MAC and local_vlan ID, if the
dest is resident in this host, do the meter pps action and send
to table 60.
Egress: match src MAC and in_port, before send to table 60,
in table 59, do the meter pps action and send to table 60.

Why table 59? Because for ovs-agent flow structure, all packets
will be send to table 60 to do next actions such as security group.
Between table 0 and table 60, there are tables for ARP poison/spoofing
prevention rules and MAC spoof filtering. We want similar security
checks to take effect first, so it can drop packets before filling
our limit queues (pps limitation based on data forwarding queue).
And we do not want packets go through the long march of security group
flows, in case of performance side effect when there are large amount
of packets try to send, so limit it before goto security group flows.

Partially-Implements: bp/packet-rate-limit
Related-Bug: #1938966
Related-Bug: #1912460
Change-Id: I943f610c3b6bcf05e2e752ca3b57981f523f88a8"
be7331c8169c53e3900c9c1a08e12808cf5ed2ec,2022-02-10 08:57:43+01:00,"[ovn] Prevent stale ports in the OVN database

Under a lot of load, there can be situations where all the Neutron
workers have not updated their in-memory copy of the NB database
in time before certain operations.

This scenario can lead to stale resources when a somewhat recently
created port is attempted to be deleted, but the worker handling
this deletion doesn't know about the OVN port yet.

This patch detects this condition and allows some time (at least one
maintenance task cycle) before it deletes the OVN revision number.
If the port then shows up in the OVN database within that window, then
it will be deleted later by the maintenance task avoiding the stale
ports. If not, the revision number row will be deleted and we won't
stale these entries either.

Closes-Bug: #1960006
Signed-off-by: Daniel Alvarez Sanchez <dalvarez@redhat.com>
Change-Id: Ie4093dc6cd63b89e3a62363a4f805ef8287d15b9"
982986507371e78d9c9f5e1d0112efd645c09df9,2022-02-10 09:03:36+00:00,"Refactor session ""is_active"" handling for sqlalchemy-20

Since sqlalchemy 1.4, ""session.autocommit"" is False by default; in
sqlalchemy 2.0 this will be the only value accepted.

The ``_orm.Session`` is considered active when [1]:
- there is a transaction and this transaction is active
- there is no transaction [2], the class ``_orm.Session`` will
   autobegin when it is first used.

The second one breaks the way Neutron considers a session is active:
only when a transaction is in place, Neutron considers a session is
active.

[1]https://github.com/sqlalchemy/sqlalchemy/blob/rel_1_4/lib/sqlalchemy/orm/session.py#L3918-L3950
[2]https://github.com/sqlalchemy/sqlalchemy/blob/rel_1_4/lib/sqlalchemy/orm/session.py#L3930-L3932

Partial-Bug: #1962153
Topic: sqlalchemy-20

Change-Id: Iabaee4e556afb3dc75a82d99dc4a597fe4d7dd21"
0fe6c0b8ca8a5704242766472d94d5ca86832363,2022-02-11 05:43:44+00:00,"Use the ""connectivity"" property of ""MechanismDriver""

The base class ""MechanismDriver"" now has a property called
""connectivity"". This patch overrides the default value in the
in-tree drivers.

The method ""_check_drivers_connectivity"" now uses this property
that is available in all drivers.

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/826501

Closes-Bug: #1959125
bp boot-vm-with-unaddressed-port
Related-Bug: #1821058

Change-Id: I91734835b07d804365b46adfb26e984557107d80"
5fbd4f1a9d5c5780b6c258c20f336229479a043b,2022-02-11 21:36:23+08:00,"Add ndp proxy policy rules

Partial-Bug: #1877301
Change-Id: I9a815858eb22e1f2ab9fd08ce472ec08b51e8eab"
b5b519a4faa52677d5b9d5553217ed40aac70483,2022-02-14 16:06:17+01:00,"segments: fix scheduling duplicate segments

It has been reported by bug #1959750 that for a given network the
agent is scheduling all segments reported by agent.

This commit is fixing the issue by ensuring scheduling segments per
network that they belong to only.
A test has been updated to demonstract the fact that for a given
network we only schedule the related segments.

Closes-bug: #1959750
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Icd57570004055903c6817a75d814ed65db3fa53c"
1f970697906e91f932d3dec7fd8e5197bf81893c,2022-02-14 18:10:06+03:00,"[OVN] Extend port binding parameter validation

To allow for validating multiple port binding parameter sets that
may contain some of the same keys, as well as validating
polymorphic values, the ``OVN_PORT_BINDING_PROFILE_PARAMS`` constant
is extended to list a new ``OVNPortBindingProfileParamSet`` named
tuple where you can specify for which vnic_type and capability
each parameter set is valid for.

Partial-Bug: #1932154
Change-Id: I8493cba28e92b9b36bdb952c9737c0fea6fb7b75"
8217979fdcbab1304f3102419945ee7dc9931d51,2022-02-17 11:25:31+03:00,"[fullstack] use noop fw driver for Local IP conntrack test

iptables_hybrid lacks isolation between hosts in fullstack tests.
Since LocalIPTestCase uses 2 hosts we better set noop fw driver
for conntrack scenario to avoid connectivity issues.

Closes-Bug: #1961173
Change-Id: Ib3238142daa0becbd7034b2faa66c6a9cf668d7e"
7d64d0c116cf3f5ec2a35fb2ffe08dde61343ad8,2022-02-18 07:17:36+01:00,"[OVN] Off-path SmartNIC DPU Port Binding with OVN

Traditionally it has been the CMSs, in OpenStacks case Nova's,
responsibility to create Virtual Interfaces (VIFs) as part of
instance life cycle, and subsequently manage plug/unplug operations
on the Open vSwitch integration bridge.

With the advent of SmartNIC DPUs which are connected to multiple
distinct CPUs we can have a topology where the instance runs on one
host and Open vSwitch and OVN runs on a different host, the
SmartNIC DPU control plane CPU.

One of the main use cases for having this topology is security
where we treat the hypervisor host as untrusted and prohibit
direct communication between the hypervisor host and the SmartNIC
DPU control plane host.  In addition to that control facilities
such as switchdev devices are only visible from the SmartNIC DPU
control plane CPUs.

Adds support for binding ports of type VNIC_REMOTE_MANAGED by
looking up chassis based on serial number that Nova provides in
the binding_profile.

Information required by the OVN controller to successfully look up
and plug representor port is provided as options on the LSP as
defined by the representor plug provider documentation [0][1].

0: https://docs.ovn.org/en/stable/topics/vif-plug-providers/vif-plug-providers.html
1: https://github.com/ovn-org/ovn-vif/blob/main/Documentation/topics/vif-plug-providers/vif-plug-representor.rst
Partial-Bug: #1932154
Depends-On: I496db96ea40da3bee5b81bcee1edc79e1f46b541
Depends-On: I83a128a260acdd8bf78fede566af6881b8b82a9c
Change-Id: Icc6c2d0f7f8f5cc94997db6244175a8e8884789f"
0c9c60d5ca53bd415fac76ef8aa5ae17f92704e7,2022-02-18 07:18:29+01:00,"[OVN] Off-path SmartNIC DPU Documentation

Closes-Bug: #1932154
Co-Authored-By: Dmitrii Shcherbakov <dmitrii.shcherbakov@canonical.com>
Change-Id: I5b5e7957cfe8020001777fd40e038eaafb5fb894"
1aeef5a74e82e97cbed7d65a1f824dbb3070af08,2022-02-18 20:31:39+03:00,"Add new class for Logging API methods

Not all logapi ""DriverBase"" [1] methods are implemented in
rpc ""LoggingApiNotification"" [2]
Now above classes  inherit from class 'LoggingApiBase'

[1] https://github.com/openstack/neutron/blob/cf0cc1f4f262994db1044431fc9142745f2a757b/neutron/services/logapi/drivers/base.py#L27
[2]
https://github.com/openstack/neutron/blob/cf0cc1f4f262994db1044431fc9142745f2a757b/neutron/services/logapi/rpc/server.py#L102

Closes-bug: #1960533
Change-Id: I9fbfa0f823bcdde60910b018ef2a8fdffaf3512c"
5a0a2b7847da067817640404f53e0807755e08d7,2022-02-21 11:57:38+00:00,"Allow ovn_db_sync to continue on duplicate normalised CIDR

OVN now uses normalised CIDR when adding a security group rule[1]. It
uses may_exist=True for adding ACL (secgroup rule), in case there are
multiple CIDRs in neutron that normalises to the same.

Do the same in ovn_db_sync, so that the sync don't fail hard on such
duplicates.

[1] https://review.opendev.org/c/openstack/neutron/+/736386/

Change-Id: I9d9c21e460029e4a6a845520bfcc2889ad20429b
Related-Bug: #1869129
Closes-Bug: #1961112"
b4a192a74c32d70278510b0a768c42220ff03b6f,2022-02-23 08:55:49+08:00,"Bump python-neutronclient version to 7.8.0

Fullstack test cases need this release [1] of python-neutronclient.
Update the cliff version because:
    python-neutronclient 7.8.0 depends on cliff>=3.4.0
    cliff==3.4.0 requires stevedore>=2.0.1
    python-neutronclient 7.8.0 depends on osc-lib>=1.12.0

[1] https://review.opendev.org/c/openstack/releases/+/828442

Partially-Implements: bp/packet-rate-limit
Related-Bug: #1938966
Related-Bug: #1912460
Change-Id: Ibc1fbb90bf22128cd783c8d8598fb3c49591eae2"
0b6a95560e5b61c3386e95560963b3cb45d6ed6f,2022-02-23 06:42:07+00:00,"change skydive source to skydive-project

change skydive source to skydive-project[1]

[1] http://skydive.network/documentation/getting-started#openstackdevstack

Change-Id: Icaa4ee7ff7df18e17e3e3da6ec1a8af006e6d44c"
d5ac103329a3c7410234c6d88c56a9fdc4fe43df,2022-02-23 09:31:21+00:00,"Change OVS and OVN installation directories

Change OVS and OVN installation directiories when building from
source, in order to sync with [1].

[1]https://review.opendev.org/c/openstack/devstack/+/828877

Depends-On: https://review.opendev.org/c/openstack/devstack/+/828877

Change-Id: I38775450de7d671febd07ead98f6eb4c70fc7d1e
Related-Bug: #1960514"
b2421b01e5bc1269458b421643c13b620cdaccaf,2022-02-23 11:16:51+01:00,"[OVN] Handle RouterNotFound exception in set_gateway_mtu

When handling multiple router update/delete petitions, if they are
executed at the same time, there is a chance that the set_gateway_mtu
tries to update a no-longer-existing router, triggering a
RouterNotFound error from the _get_router_ports function. Now, if there
is not a router, the _get_router_ports function will return an empty
list instead of raising the error.

Closes-Bug: #1961967
Signed-off-by: Elvira García <egarciar@redhat.com>
Change-Id: Ic54214ca4965274cd58c1d3a278d8f3ffcda0a64"
ba4bfa8842db55463059319138151151f1802575,2022-02-24 10:30:23+05:18,"[Fullstack] Block until dhcp config is done

Need to ensure ip is configured in vm before doing other
netcat connectivity checks. It was missed in initial fix[1].

[1] https://review.opendev.org/c/openstack/neutron/+/556155

Related-Bug: #1744402
Change-Id: Icb2c9c056fa9ab5cf42140e824eee4d1427c8f40"
63a8f964269157c07affce0ff616378d21a0d58c,2022-02-24 10:39:57+05:18,"Revert ""[Fullstack] Mark security groups test as unstable""

This reverts commit e748e01656e6d2db1510d85e4c25e21ff394c971.
The known issue is fixed with [1].

[1] https://review.opendev.org/c/openstack/neutron/+/830732

Closes-Bug: #1742401
Related-Bug: #1744402
Change-Id: I4f503e89e0aa8e63abcea9c951a973168dcb7148"
2f944d310554f0248261fff875141bdf9698b35e,2022-02-24 08:28:53+00:00,"Support filtering for QoS rule type list

Added support for filtering the QoS rule type list command.
Two new filter flags are added:
- all_supported: if True, the listing call will print all QoS rule
  types supported by at least one loaded mechanism driver.
- all_rules: if True, the listing call will print all QoS rule types
  supported by the Neutron server.

Both filter flags are exclusive and not required.

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/827533

Closes-Bug: #1959749
Change-Id: I41eaab177e121316c3daec34b309c266e2f81979"
a51aff743c4659347f39efa1fd36ed883a37766f,2022-02-24 15:13:03+01:00,"[OVN][Cosmetic] Improve gen_router_port_options

The gen_router_port_options now has a try/catch operation that could be
better formulated as jlibosva stated in a comment in
https://review.opendev.org/c/openstack/neutron/+/830509

Related-Bug: #1961967
Signed-off-by: Elvira García <egarciar@redhat.com>
Change-Id: I679bbb5aa59d0a71d14bd5540d33eada53054b18"
9b27020a65a5e8d1f6c9dccd352ae00a2c40cf41,2022-02-25 12:42:13+08:00,"[Agent Side] L3 router support ndp proxy

The agent side codes need consider three scenarios:
1. Non-dvr router. The all related rules are applied in
   qrouter-namespace
2. Dvr router with the local agent mode is dvr_no_external.
   The all related rules are applied in snat-namespace.
3. Dvr router with the local agent mode is dvr. In this scenario,
   The all related rules are applied in fip-namespace.

Change-Id: Ie8729586d318be4a673858021a0116e09e193522
Partial-Bug: #1877301"
ce10c5189a2f3910acbba074885f961fce81b43b,2022-02-25 12:49:04+05:18,"Re enable update_router_admin_state scenario test

The test is running fine now, let's get it running
again in ovn-slow job which runs in periodic pipeline.

Related-Bug: #1890445
Change-Id: I45e09827e0b998fd3d05d5a8e9cbe24aff9f12e8"
210148e708ea6003a15d89ae860ba223dbf853d5,2022-02-25 13:06:43+05:18,"Move FIPS jobs from the experimental to the periodic queue

It was agreed on the Neutron CI meeting [1] to move those FIPS jobs
from the experimental to the periodic queue to have it run more often
and get more data about stability of those jobs.

[1] https://meetings.opendev.org/meetings/neutron_ci/2022/neutron_ci.2022-02-22-15.00.log.html#l-123

Change-Id: If72cc4573dc52e40622dc9a458300f3f80b9e14b"
a1c7e4cf575d1ee0b5bdc4da9caed0c7449e7b08,2022-02-25 13:10:50+05:18,"Add devstack-enforce-scope job to our periodic queue

Now, as Neutron's enforce scopes and new default policies are supported
and it can be enabled in Devstack, lets have CI job in periodic queue to
make sure we don't break it (again).

Related-Bug: #1959196
Change-Id: I3f497b58357a2b0be5cb83b5d4a463e433a1524d"
bdbabdf362a0755fa5a86222a7a223c727f0ec4e,2022-02-25 17:49:37+00:00,"[OVN] Update VIP port host ID when traffic detected

A virtual IP port is a port with an IP address assigned. This IP
address is used as an allowed address pair in a bound port (or ports).
This port is marked as ""virtual"" and a list of ""virtual-parents""
(ports with the VIP assigned as allowed address pair) will be
populated accordingly.

This patch updates the ""binding:host_id"" of the port when OVN detects
traffic from the corresponding VIP address. OVN updates the VIP port
SB ""Port_Binding"" register with the chassis ID. The hostname of this
chassis is used to update the port host ID.

The VIP port is always unbound and down; this patch only populates the
host information to provide to the user this information using the
OpenStack CLI, instead of making this search using the OVN CLI.

Closes-Bug: #1961184
Change-Id: I75b04d056ba0df9e34a99673c689a69cdbfa097e"
56774da4265288952f98c93f854f2f209da58292,2022-02-25 18:31:08+00:00,"Add port IDs in ""RouterInUse"" exception during router deletion

When a router is deleted, the server checks first if there are ports
still attached. In this case, the exception ""RouterInUse"" is raised.
This patch adds the port IDs to the exception message.

Related-Bug: #1962167
Change-Id: I5b5e31677f81d7ba47a457044a6b58910ae41466"
017a098455ee7b0ad0217e84aa613d396eebd032,2022-02-27 11:10:03+08:00,"Add ndp_proxy to devstack plugin

This commit adds possibility to configure L3 ndp_proxy service
plugin and l3 extension with devstack plugin.

Change-Id: I41713b1cfbf55b0b0e752904c4aea06fe0a00e10
Partial-Bug: #1877301"
3ac4b0d634057fbc0f4c031e3e3e43079871d4e9,2022-02-28 17:52:43+05:18,"Remove _standard_attr_segment_lib and use definition from neutron-lib

It is available in Neutron lib since version 1.16 so pretty long time
now.

Also use segment api definition from neutron-lib, it's available
since version 1.19.0. The api definition from neutron-lib also
avoids circulary dependency b/w standard-attr-segment and segment
extension[1].

[1] https://review.opendev.org/c/openstack/neutron-lib/+/577866

Change-Id: I13699f8c494a15d8bb9e13f767f2725f7cab9f4f
Related-Bug: #1765008"
30c609274788b534b939c1d6223c078f09013b04,2022-03-01 21:07:17+09:00,"Fix typo in the third instruction paragraph of ""Controller nodes"" block

Closes-Bug: #1962324
Signed-off-by: Cheol-Min Kim <cheolminkim@vanilet.pe.kr>
Change-Id: Ia4607259c1a344876a515d8ce450655de453ad8f"
f430cd00725f8303f5313cb7784c9aed4b982e62,2022-03-01 14:27:42+00:00,"Don't set HA ports down while L3 agent restart.

Because of the fix for bug[1] and issue with linux_utils
get_process_count_by_name() L3 agent puts all it's HA ports down
during initialization phase. Unfortunately such operation can break
already working L3 communication. Rewiring ha-* port from down state to
up can takes few seconds and some VRRP packages could be lost then.
That triggers keepalived on other node so router HA state change
may be triggered.

This change prevents putting HA ports down when during initialization
phase L3 agent finds already configured own net namespaces. Existance
of such net namespace is a good proof that there is a network
configuration existing so host wasn't rebooted so most probably it is
just agent restart.

[1] https://bugs.launchpad.net/neutron/+bug/1597461

Closes-Bug: #1959151
Change-Id: Id9c906b2d141c3bedd80fb5f868190f8a4b66f54"
28df8470f6a2838878bc567716889ee938fccfd6,2022-03-01 21:07:19+05:18,"Fix configure_for_func_testing script

Following fixes are done in the script:-
- Use openstack_citest as db user as done in CI[1] as
  with root as db user it fails configure it.
- Use MYSQL_USER var instead of hardcoded root user
- Fix Syntax Error in CREATE USER psql command by using
  quotes for DATABASE_PASSWORD
- Swith to root user for running psql command as without
  it, it asks for stack user password which is not configured,
  same is done in devstack[2].
- Create variable DATABASE_NAME for database name and use
  at all required places.

[1] https://review.opendev.org/c/openstack/neutron/+/814009/
[2] https://opendev.org/openstack/devstack/src/branch/master/lib/databases/postgresql#L90

Change-Id: Ieb523e3afdf69fff87ea9062ed857c37a8d56f5c"
10caa1e101a04525559f104d651ab5b2cd8108c2,2022-03-02 08:16:48+00:00,"Mock netutils.is_ipv6_enabled() method when testing

Mock netutils.is_ipv6_enabled() to prevent unittest results from being
affected by /proc/sys/net/ipv6/conf/default/disable_ipv6 values

Closes-Bug: #1962714
Change-Id: I3b6175eb0db6e4a791f8fa686b491a448ebf4ad9"
820b2e26658a3fb5e00a7cedbdc2418d2196aa42,2022-03-03 10:58:54+05:18,"Ensure gateway is set for prefix delegated subnets

With [1] gateway is no longer set for subnet created
with prefix delegation, but when adding the subnet
to the router it fails as it expects gateway to be
set.

This patch ensures gateway is set temporary to the first IP
of the subnet as it used to be just like the temporary CIDR.
Also need to ensure dhcp configuration is skipped to avoid the
original issue[2].

[1] https://review.opendev.org/c/openstack/neutron/+/699465
[2] https://bugs.launchpad.net/neutron/+bug/1856675

Closes-Bug: #1962306
Related-Bug: #1856675
Change-Id: I512f7d98ac99bb0ef06fd2acba09482e3436d18d"
4a66adf94c4e01ca92dfe12cf8646d11acfc7176,2022-03-03 12:10:56+00:00,"Group execution of SQL functional tests

Functional SQL tests (MySQL and PostgreSQL) use the DB installed
backend. To avoid overloading the DB engine, the test cases are
grouped [1] together and executed by the same worker process.
That will ensure those tests are not executed in parallel,
interfering each other.

All test classes ended in ""MySQL"" or ""PostgreSQL"" are now grouped.
That means the tests implemented inside the same class are
executed in the same worker, not in parallel. **HOWEVER**, that
doesn't guarantee all test cases using the same database backend
will run in the same worker serially. The FT job can still execute
test cases from different classes, using the same DB backend,
in two workers at the same time.

This patch also fixes the ``TestReservation*`` classes to inherit
from the parent classes in the correct order. That sets the
""DRIVER"" value to the expected one ""mysql"" or ""postgresql"".

[1]https://review.opendev.org/c/openstack/neutron/+/785568

Closes-Bug: #1962594
Related-Bug: #1687027
Change-Id: I6bca7daf4d3e46071686bb62d5988ae314af8e7e"
c02916de4ef63c338a13b1626bc3917bcfa34bf6,2022-03-03 18:28:42+03:00,"Local IP: use LOCAL_IP_TABLE for back flows if no OVS fw

When using static NAT for Local IP translation
ACCEPTED_EGRESS_TRAFFIC_NORMAL_TABLE should be used for back
(learned) flows only in case openvswitch security groups are used.
Otherwise need to use LOCAL_IP_TABLE.

Partial-Bug: #1930200
Change-Id: Ie08a26fab3b23507085e00b02c7e11e037a44f62"
cdff281f642511ea3d0e077dbe885ec955208a7a,2022-03-04 11:43:08+00:00,"[SR-IOV] Fix QoS extension to set min/max values

""ip link"" commands allow to define VF rates independently.
That means, first ""rate"" (max BW) can be set and in a second
command ""min"" (min BW) (check LP bug description).

However Pyroute2 command to set the VF rates requires to set both.
If one value is missing (""min_tx_rate"", ""max_tx_rate""), the library
sets this value to 0; in other words, the value is deleted.

The Pyroute2 structures are built depending on the parameter names.
In this case, {'vf': {'rate': ...}} will create a ""vf_rate"" [1]
nla structure, that requires ""min_tx_rate"" and ""max_tx_rate"".
This is part of the full structure passed to the ""iproute"" library
[2].

This is an example of code that only sets the ""max_tx_rate"" for
the 15th VF of ""enp196s0f0"":
  $ from neutron.plugins.ml2.drivers.mech_sriov.agent import pci_lib
    pci = pci_lib.PciDeviceIPWrapper(""enp196s0f0"")
    pci.set_vf_rate(15, {'max_tx_rate': 10})

The ""msg"" [3] (structure passed to ""iproute"" library) is this:
https://paste.opendev.org/show/b2FZBOebGOCHMrYhPr6X/. The
""min_tx_rate"" is set to the default value 0.

This patch reads first the existing rates (""min_tx_rate"",
""max_tx_rate"") and populates the command parameters accordingly.

[1]https://github.com/svinota/pyroute2/blob/a9564dff8e53659f761d71bbee0dd68dd0db6ce8/pyroute2.core/pr2modules/netlink/rtnl/ifinfmsg/__init__.py#L712-L717
[2]https://github.com/shemminger/iproute2/blob/c8d9d92544668922dc5aa06d2491f42b837b9361/ip/ipaddress.c#L454-L470
[3]https://github.com/svinota/pyroute2/blob/a9564dff8e53659f761d71bbee0dd68dd0db6ce8/pyroute2.core/pr2modules/iproute/linux.py#L1499

Closes-Bug: #1962844
Change-Id: Ibbb6d938355440c42850812e368224b76b1fce19"
d966845e5b80b1cec3cbfe25e4a7e1542e9fca65,2022-03-06 12:12:36+00:00,"[OVN] Remove maintenance ""check_for_localnet_legacy_port_name""

Remove maintenance task ""check_for_localnet_legacy_port_name"".
This method was added in [1], four releases ago. We can now
be sure any logical switch port will have the correct field
""name"" value.

Related-Bug: #1865889

[1]https://review.opendev.org/c/openstack/neutron/+/715157

Change-Id: I71bb605582e2572807e1f38f7ee5b8dd91ab0c4a"
0ec523aac11c31d9d8d2f0e7169332b876a61391,2022-03-11 16:33:46-05:00,"ovn: Retry port binding on deadlock when migrating to ovn

If the port binding is being changed while Neutron keeps changing
the port binding because ovn controller starts claiming the port
bindings then the db sync script may fail.

The patch adds DBDeadLock to the re-try mechanism when running db sync
script in migration mode.

Change-Id: I912c3145383e9a18dfd46b8e4dbb0cf927ca76e4
Closes-bug: #1964640
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
4024168a0572519c0dd01cae0fe3e869a01ebf5a,2022-03-12 06:53:41+00:00,"Add extra logs to the ip_monitor class

Those extra logs should tell more about what IP addresses are
added/removed in the qrouter namespace by the keepalived process and
hopefully help us understand failures in functional CI job,
like are described in the related bug.

Related-bug: #1956958
Change-Id: I5e924922baffbf2e059f243b115ff799e8432a56"
b5253b224bcf6cec428f18a831798d0955c61797,2022-03-14 00:33:23+00:00,"[OVN] Reschedule router GW chassis when AZ updated

when chassis's available zone updated, triger rescheduler router
gateway chassis.

Closes-bug: #1958225

Change-Id: If7cf55f2c12b388fc34fa942b6b0bf70cb9eb866"
f7fac03ae1a4b1b1471f6054ba058382a1b9e1a1,2022-03-14 14:38:36+00:00,"Repeat few times put new interface in the namespace

It seems that from time to time we may experience another variant of the
shy ovs ports issue (see [1] for details) while trying to put interface,
e.g. router's port into the namespace by the interface driver.
To avoid that, this patch adds some repeats of the putting interface in
the namespace, in the same way like it was done originally with
set_address of the device.

Additionally, this patch also refactors a bit part which is responsible
to set mac address of the device to be able to clean ports in case of
the permanent error there.

[1] https://bugs.launchpad.net/neutron/+bug/1618987

Closes-Bug: #1961740
Change-Id: I3e0786fd8d0320036b9046746ae579c8ed2ecf27"
10c2fa034f4f60df5a5873ea6c81ebd55de9e014,2022-03-15 09:14:24+00:00,"[QoS][L3] Use floating IP OVO QoS fields

Since [1], ""FloatingIP"" OVO has the synthetic field ""qos_policy_id"",
linked to ""QosPolicyFloatingIPBinding"". This patch uses the OVO
implementation to bind the corresponding QoS policy to the floating
IP register.

Related-Bug: #1877404

[1]https://review.opendev.org/c/openstack/neutron/+/726208

Change-Id: I7071eb29c55fadcb3a87bd9c7f76e4c68c3ea217"
b271c82d10b588d94c3278640a8f144fa55ac65a,2022-03-15 09:10:23-03:00,"Extend database to support portforwardings with port range

This patch is the second of a series of patches
to implement floating ip port forwarding with
port ranges.

The specification is defined in:
https://github.com/openstack/neutron-specs/blob/master/specs/wallaby/port-forwarding-port-ranges.rst

Implements: blueprint floatingips-portforwarding-ranges
Related-Bug: #1885921
Change-Id: I43e0b669096df865f37c74ddbd050b3b177fd5e5"
f7ab90baad83823cfb94bc8b9450cd915ea49c03,2022-03-15 20:54:03+01:00,"Fix ingress bandwidth limit in the openvswitch agent

For ingress bandwidth limiting openvswitch agent is using QoS and queues
from the Open vSwitch. There is always queue 0 used for that purpose.
Initially, when this feature was implemented, we assumed that queue 0 is
kind of the ""default"" queue to which all traffic will be send if there
are no other queues. But that's not true thus ingress bandwidth limiting
wasn't working properly with this agent.

This patch fixes that issue but adding in the table=0 of the br-int
additional OF rule to send all traffic to the queue 0.
In this queue for some ports there can be QoS configured
and then it will be applied for the port. If port don't have any QoS
configured, nothing will happen and all will work like before this
patch.

Biggest problem with that solution was the case when also ports with
minimum bandwidth are on the same node becuase such ports are using
different queues (queue number is the same as ofport number of the tap
interface).
In case when traffic is going from the port with minimum bandwidth QoS
to the port which has ingress bw limit configured, traffic is going only
through br-int and will use queue 0 to apply ingress bw limit properly.
In case when traffic from port with minimum bandwidth set needs to go
out from the host, it will always use physical bridge (minimum bandwidth
is only supported for the provider networks) and proper queue will be
set for such traffic in the physical bridge.
To be able to set proper queue in the physical bridge, this patch adds
additional OF rule to the br-int to set queue_num value in the pkt_mark
field [1] as this seems to be only field which can ""survive"" passing
bridges.

[1] https://man7.org/linux/man-pages/man7/ovs-fields.7.html

Closes-Bug: #1959567
Change-Id: I1e31565475f38c6ad817268699b165759ac05410"
83b6ce9e9ec2f0261fed630e18cbe9cfa363a0dd,2022-03-16 16:48:06+00:00,"Remove exception ``IpAddressAllocationNotFound``

This patch removes the ``IpAddressAllocationNotFound`` exception. This
exception was raised when a IPAM register was called to be deleted
but not found.

As reported in the LP bug, this IPAM register deletion can be called
several times if a port fails during the creation. The IPAM register
deletion calls the DB deletion but doesn't raise any exception if the
register does not exist. The code ensures the IPAM register is
deleted and there is no need to fail if it is not present anymore.

This patch also removes the exception catch and try in ""update_port"",
that was added in [0] as a fix for [1]. That was added because the
subnet deletion code involved a port update call [2] during the
IP allocation deletion, if any port was still present in the subnet.
Since [3], this code is not needed because the subnet deletion does
not call a port update anymore.

[0]https://review.opendev.org/c/openstack/neutron/+/373536
[1]https://bugs.launchpad.net/neutron/+bug/1622616
[2]https://github.com/openstack/neutron/blob/pike-em/neutron/db/db_base_plugin_v2.py#L1017-L1018
[3]https://review.opendev.org/c/openstack/neutron/+/713045

Closes-Bug: #1965807
Related-Bug: #1954763
Related-Bug: #1622616

Change-Id: I5b96b3a91aacffe118ddbb91a75c4892818ba97a"
0529ccdf71dcd093a80180097eeaa5d7cb5e15fb,2022-03-16 20:44:20+00:00,"ovn migration: Don't use executables in /tmp/

It's a common practice to have /tmp/ mounted separately with noexec
option. This effectively means no scripts can be executed from the
filesystem mounted to /tmp.

This patch explicitly calls sh binary to execute scripts from /tmp and
removes the executable flag from the scripts.

Closes-Bug: #1965183

Change-Id: I2f9cd67979a8a75848fcdd7a8c3bb56dd3590473
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
2492cf2e0703dbe6fcfe26e199505b7b43a65f50,2022-03-17 12:16:04+05:18,"[OVN][port-forwarding] Add lb also to logical_switches

Currently we are adding lbs to logical_routers, but
to get the lbs accessible from the vms we need to
add lbs also to all the logical_switches connected
to the logical router as suggested in the Related
Bug rhbz#2043543.
If in future ovn automatically handles addition of
lbs to logical_switches if they exist on associated
logical_router, then we can remove this handling
from port-forwarding service plugin.

Also subscribed to router_interface's after create
and delete events to handle the case when logical
switches are added/removed from router after intial
port forwarding create.

Related-Bug: #1957185
Related-Bug: rhbz#2043543
Change-Id: I0c4d492887216cad7a8155dceb738389f2886376"
74a9e832d790f659eb10b22ba0428b60733d384e,2022-03-17 10:27:31+01:00,"Add retry for privsep get_link_devices

pyroute 0.6.6 introduced a new exception NetlinkDumpInterrupted which
is raised when NLM_F_DUMP_INTR is set in the flags during dump of
devices.
The suggestion from pyroute developers is to retry in case of this
exception (see [1]).

[1]: https://github.com/svinota/pyroute2/issues/874#issuecomment-1063139555

Closes-Bug: #1962608

Change-Id: Ie195ad596fd148708fc30946bde964d52444afee"
2d1b4fd80f1317d741a6e29219e5a230513a4762,2022-03-17 12:37:13+00:00,"[OVN] Implement router gateway IP QoS

This patch implements router gateway IP QoS based on meter,
using the existing plugin and extension, only the driver side
is different.

Closes-Bug: #1893625

Co-Authored-By: zhanghao <hao.zhang.am.i@gmail.com>
Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>

Change-Id: I46864b9234af64f190f6b6daebfd94d2e3bd0c17"
132905d81f8799f249936ecb9d56641749df8724,2022-03-18 14:40:37+00:00,"[L3][QoS] L3 agent QoS extension to handle duplicated FIPs

The L3 agent QoS extension should be able to handle duplicated floating
IP addresses from different registers. Those floating IP addresses can
be hosted in different networks and routers but the same compute node
and L3 agent.

Now, instead of using the IP address as unique identifier, this patch
stores the (ID, IP address) tuple. This tuple is unique per floating IP
register and holds the IP address, needed by the ""tc"" library to set
the QoS rules.

Closes-Bug: #1962465
Change-Id: I3a09718c6e79fd1f37eb75264389c4e5043076a7"
7c2420e3af0de597932873c433070630ca005dc5,2022-03-20 05:59:45+00:00,"Add ""qos_policy_id"" field to ""Router"" OVO

This new synthetic field is linked to a
""QosRouterGatewayIPPolicyBinding"" register. This binding register will
bind a QoS policy and a Router.  Now is possible to provide this field
in the create/update input parameters. If provided, the ""Router"" OVO will
create/delete the ""QosRouterGatewayIPPolicyBinding"" register.

The ""Router"" OVO takes this parameter from the DB object. When the DB
object is retrieved, the QoS policy binding register is retrieved too
due to a backref link in the ""QosRouterGatewayIPPolicyBinding"" DB model to
the ""Router"" DB model.

Related-Bug: #1893625
Related-Bug: #1950454

Change-Id: I59ed68b2c1e19f1f31e72b4868e3db750ef06d6f"
4e98078e7ac7de8261b4e6216e51a135d458b4ac,2022-03-20 06:45:27+00:00,"[OVN] Pin OVS version for OVN v21.06.0

According to [1], the needed version for OVN v21.06.0 is
a4b04276ab5934d087669ff2d191a23931335c87

[1]https://github.com/ovn-org/ovn/commit/4b0a02635fde3d356851dddf12936d9ff2fcc874

Closes-Bug: #1967472
Change-Id: I1ecb31281ded60b396d408aa5c303081a90c4ae2"
1a2da88b903b4d5d25b0b17e03ab84731d377632,2022-03-21 14:11:13+05:18,"Fix multinode ovn/ovs with source deploy jobs

Since in these jobs ovs/ovn built/installed from
source during devstack installation, infra bridge
i.e br-infra prepared during pre-run get's lost.

After devstack setup rerunning the multinode setup
roles with install_ovs=false(role var added in depends-on
patch) to fix it.

It's alternative approach to [1].

[1] https://review.opendev.org/c/openstack/neutron/+/762654

Depends-On: https://review.opendev.org/c/zuul/zuul-jobs/+/832497
Closes-Bug: #1904117
Change-Id: Ie2cd53881cb043bc72f201b6aac9eacd0c0c7c88"
3a81b051d4a8e6f63f8da211816d0dbda62aee17,2022-03-21 11:43:08+00:00,"[SR-IOV] Default ""propagate_uplink_status"" flag to True

Extension ""uplink-status-propagation"" does not allow to modify existing
ports. This extension only enables the creation of new ports with
this new flag.

Similar to [1], this patch changes the default behaviour of the
exiting ports: if no ""propagate_uplink_status"" flag is present, ""True""
is returned now. The aim of this change is to enable this feature for
all existing ports, that is usually the aim of an administrator when
enables this extension.

[1]https://bugs.launchpad.net/neutron/+bug/1888487

Closes-Bug: #1967881
Related-Bug: #1888487

Change-Id: Ica5b76e0a9a5ae12f764c66be259d7f3cd5b248b"
8ad6c3bf60081ebf19c1cadd9c46e1f5bf504892,2022-03-22 18:02:43+00:00,"[L3][QoS] Remove router QoS binding when GW is removed

Now when the external gateway of a router is removed, the QoS policy
assigned to this router is removed too. A router can only have a QoS
policy assigned if a gateway port is attached; if the port is removed,
the QoS binding must be removed too.

Closes-Bug: #1968269
Change-Id: Iced254259170972a9699aa35ae8062776e11285d"
7d5ee7089bbe8f0705d77fa2d5219c3e93f816eb,2022-03-23 15:24:51+00:00,"[FT] Run all .*MySQL tests in an isolated thread

This change in the ""dsvm-functional"" job definition will avoid the
parallel execution of any MySQL test.

Related-Bug: #1962594
Change-Id: I4fe6a6920b9b2711563e85b51f18a9d5a9086ceb"
282ccbb8f0b471d9bc96261ab1866ffca4ec2b97,2022-03-23 16:52:48+01:00,"[Fullstack] Remove dhcp agent in tests where it isn't necessary

In fullstack tests like test_connectivity or test_securitygroup using
dhcp agent isn't really needed. We are testing dhcp agents and
configuration of the IP addresses using DHCP in the tests from the
test_dhcp_agent module.
So this patch disables usage of the dhcp agent where it's not really
needed to save some resources (less agents running during tests) and to
minimize potential failures in the tests.

Additionally this patch also adds method
block_until_all_dhcp_config_done() to the FakeFullstackMachinesList
class and uses it in tests when fake VMs are using DHCP. That will
hopefully help better understand where the issue is in case of failures
like described in the related bug.

Related-Bug: #1962854
Change-Id: Ib6ca18b5a0ae101ad6424637abff3d992737f6f4"
5b2fd1f830827105bcaca0d4ba5da05b8b71c515,2022-03-23 12:28:45-04:00,"ovn migration: Remove usage of tripleo-ansible-inventory

tripleo-ansible-inventory stopped working in Wallaby. However, TripleO
now stores the needed ansible-inventory on the undercloud filesystem.
This patch switches from dynamic generation of the Ansible inventory to
use of the already existing inventory file. Fortunately, the format of
the file remained the same as the generated one, so no other changes in
parsing are required.

Closes-Bug: #1966099

Change-Id: I3bdf878617fbe962d56ebb66d59ae7edeb9b7c38
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
e7edcec2608fe1cb30d7458a882eb81e058eb76e,2022-03-24 16:54:26+01:00,"Ensure that re_added ports are DOWN before set back to UP

During e.g. rebuild of the server by Nova, ports plugged to such server
are quickly removed and added again into br-int. In such case, ports are
in the ""re_added"" ports set in the neutron-ovs-agent.
But it seems that in some cases it may happen that such port isn't
switched to be DOWN first and then, when neutron-ovs-agent treats port
as added/updated and reports to the server that port is UP, there is no
notification to nova-compute send (because port's status was UP and new
status is still UP in the Neutron DB).
As Nova waits for the notification from Neutron in such case server
could ends up in the ERROR state.

To avoid such issue, all ports which are treated as ""re_added"" by the
neutron-ovs-agent are now first switched to be DOWN on the server side.
That way, when those ports are treated as added/updated in the same
rpc_loop iteration, switching their status to UP will for sure trigger
notification to nova.

Closes-Bug: #1963899
Change-Id: I0df376a80140ead7ff1fbf7f5ffef08a999dbe0b"
cc50b45ca3c3e0f06034b4f1af581b83359e6172,2022-03-28 05:41:48+00:00,"[test][unit]creating resources support set project_id

To write a new unit test, need to set ""project_id"", and then
use the discarded ""tenant_id"" is not appropriate.

this patch updated creating resources method, both ""project_id""
and ""tenant_id"" are acceptable. of course, ""project_id"" priority.

Closes-bug: #1966354

Change-Id: Ic24f03da169dd3d1549b05b35ec77d3e9a25f17b"
af03d133f44cc56b557b8ff7b57999acda7b833f,2022-03-29 20:01:29+00:00,"ovn: Wait for northd in functional tests

Each functional test method create new empty NB and SB DBs. Each DB
has its own table NB_Global or SB_Global respectively that contains
exactly one record created by ovn-northd. When functional test spawns
northd, it populates the DBs however it doesn't guarantee the running
test in parallel will not attempt to access the record.

This patch makes sure that northd creates the records before it moves on
and considers northd spawned.

Closes-Bug: #1952004

Signed-off-by: Jakub Libosvar <libosvar@redhat.com>
Change-Id: Ic936864aebcabb811860e17913fbff311c52845f"
51d1899bacb1e5d625f201380035db634da2e27c,2022-03-30 14:52:37+00:00,"Handle properly InvalidScope exceptions to not return error 500

When new default policy rules and scope enforcement are enabled, Neutron
needs to handle properly not only PolicyNotAuthorized exception from
oslo_policy module but also InvalidScope exception.
This patch adds handling of that exception to the neutron policy
modules.

In the check() method from the neutron.policy module we are calling
ENFORCER.enforce() method with do_raise=False which means that
PolicyNotAuthorized isn't rasised. Unfortunately it seems that there is
bug in oslo.policy module and InvalidScope is raised even with
do_raise=False.
For now, lets workaround it in Neutron by properly handling InvalidScope
exception in the check() method.
This workaround can be cleaned when bug [1] will be fixed in
oslo.policy.

[1] https://bugs.launchpad.net/oslo.policy/+bug/1965315

Partial-Bug: #1959333
Change-Id: I973f8896248c8222031c53343bb53ce48254da74"
b8dcb0b7afe06f92090d5d2c366b9aae3a532ebc,2022-04-05 09:13:22+02:00,"Set bigger swap in the functional and fullstack jobs

As we are hitting some memory limits (again) in functional tests
job, lets configure 8GB of swap in all functional and fullstack jobs.

Before that patch swap was configured to 4GB only in the FIPS jobs. Now
it will be set to 8GB in all functional and fullstack jobs.

Closes-Bug: #1966394

Change-Id: I6b097d8409318a5dfe17e9673adb6c1431a59b0b"
8ccbbb229276c62de4799810571b222d9bc046f5,2022-04-05 10:10:46+00:00,"[quota] Enable ``DbQuotaDriverNull`` as a production driver

Enabled ``DbQuotaDriverNull`` as a productio quota database
quota driver. This driver does not enforce any quota nor have access
to the database. When using this quota driver, the API will return
the default empty values expected from the ``QuotaDriverAPI`` class.

Closes-bug: #1960032

Change-Id: Iafa24753e657746a8b8165b5a63c17de9a9ba791
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>
Co-Authored-By: Rodolfo Alonso Hernandez <ralonsoh@redhat.com>"
4f75c6a616d3cb549153fcc496926358dfc9178a,2022-04-05 13:03:35+02:00,"Retry port_update in the OVN if revision mismatch during live-migration

This is terrible hack but it seems that there is no other way to
fix/workaround the race which may happen during live-migration between:
- port update event comming from the OVN db (port DOWN on the src node),
- API call from nova-compute to activate port binding on the destination
node.

If those 2 events will be executed in specific order by different
workers it may happen that port binding activation will not update
""requested_chassis"" of the port in OVN northd due to revision mismatch
(ovn_revision and neutron_revision will be already bumped by the worker
which processes ""port update"" OVN event).
If ""requested_chassis"" will not be updated, OVN will not claim port on
the dest node thus connectivity to the vm will be broken.

To workaround that issue, port_update_postcommit method from the OVN
mechanism driver will catch RevisionMismatch exception raised by the
ovn_client and in case that this was port_update after live_migration,
will get port data from neutron db and try to update port in the OVN
northd once again.

Closes-bug: #1967144
Change-Id: If6e1c6e0fc772101bcd3427601800aaae84381dd"
c63ebef2d58e15f4388cf064066f77b503a2f841,2022-04-06 09:28:20+08:00,"Add tag to port more earlier

During some ml2 ovs agent port processing performance test, we noticed
that some ports are missing tag before it really done processing. While
ovs treats those ports without tag as trunk port, so some packets will
be flooded to it. In large scale cloud, if too many port added to the
bridge, the ovs-vswitchd will consume a huge amount of CPU cores if
ports are not bound in a short time.

So, in the port_bound function of ovs-agent, we set the port tag to
it after a local_vlan id is allocated. Because after that, setup
security groups (setup_port_filters) and bind devices in DB
(update_device_list) are really time-consuming.

And also fix a potential bug, port is processed as created first,
but no tag in ovsdb, so openflow security group will not be processed
successfully [1]. It must be done in a update event during next loop,
after port bound and ovsdb set the required value.

This patch can also fix some upstream test failures of waiting too
long time to ping some cases.

[1] https://github.com/openstack/neutron/blob/master/neutron/agent/linux/openvswitch_firewall/firewall.py#L112

Closes-Bug: #1952567
Change-Id: I3533f0d416d32f8d0888ad58f975960d89a985d9"
35b8c8d56d175c27a9ecd05351b1ff390dac2a91,2022-04-07 14:36:13+00:00,"Doc: Add warning for not supported Prefix Delegation

Based on discussions during the Zed PTG (see [1]) mark Prefix Delegation
as experimental.
Add warning to cfg option ipv6_pd_enabled and to IPv6 documentation's
PD section that the feature has low test coverage, and dibbler is
concluded (the tool used for notifing Neutron that a prefix was changed)
see: [2].

[1]: https://etherpad.opendev.org/p/neutron-zed-ptg#L208
[2]: https://github.com/tomaszmrugalski/dibbler#project-status

Related-Bug: #1916428
Change-Id: Ia712eb6f5b6f947aeab89ba7c018771eb4104e37"
837fda7566fc8d2344d68468be7717563e13008c,2022-04-08 09:51:34+02:00,"Change set_device_rate calls according to new signature

[1] changed the signature of set_device_rate to be alligned with how
pyroute2 expects rate parameters, some method which calls
set_device_rate needs to be changed also to use the new dict format for
calling it.

[1]: https://review.opendev.org/q/Ibbb6d938355440c42850812e368224b76b1fce19

Related-Bug: #1962844
Closes-Bug: #1968206
Change-Id: I7256747f45308b011edbb0f8c802439ea277423d"
eeb918e1b9c27d3b5f0747cb856a4a8483f636ad,2022-04-08 09:09:54+00:00,"Add the corresponding DB context to all SQL transactions

The goal of this patch is to make the Neutron code compliant
with SQLAlchemy 2.0.

All SQL transactions must be executed inside an explicit
writer/reader context. SQLAlchemy no longer will create an
implicit transaction if the session has no active transaction.

A warning message, only available in debug mode, is added. When
an ORM session calls ""do_orm_execute"", if there is no active
transaction, a warning message with a traceback will be logged
to help to debug the regression introduced.

Related-Bug: #1964575

Change-Id: I3da37fee205b8d67d10673075b9130147d9eab5f"
d73ec5000bcb3a6add158eb50057af0a619c7f7f,2022-04-08 16:36:00+00:00,"[L3] Fix ""NDPProxyAgentExtension.ha_state_change"" call

The parameter ""data"" passed to the method ""ha_state_change"" is not
a router but a dictionary with ""router_id"" info.

The method ""NDPProxyAgentExtension._process_router"" requires the
router ID and the ""enable_ndp_proxy"" value, stored in the agent
router cache.

Closes-Bug: #1967839
Related-Bug: #1877301
Change-Id: Iab163e69f7e3641e2e1a451374231b6ccfa74c3e"
c0bf560fa36aac798ad8783749fa78ddf766bdec,2022-04-08 18:41:21+02:00,"Force security_group_id uuid validation of sg rules

security_groups_db._check_security_group is supposed to check the
security_group_id of the _create_security_group_rule payload.
When using an integer e.g. 0, as security_group_id, the check
succededs because mysql accepts following query:

SELECT * FROM securitygroups WHERE id in (0)

Forcing validation of security_group_id as uuid fixes the problem

Closes-Bug: #1968343
Change-Id: I7c36b09309c1ef66608afacfb281b6f4b06ea5b8"
ad3171c5388567b39112cb439996110d67117f81,2022-04-09 10:26:30+08:00,"[docs] L3 router support ndp proxy

Change-Id: I2b8642b6830d3e1e1ef86c779c55e9ac1d0f7568
Partial-Bug: #1877301"
9bc447077bce642c25faed9306537b4f1bf57230,2022-04-11 06:02:34+00:00,"Enable dstat and memory_tracker in functional/fullstack jobs

This Will help in troubleshooting failures related to high
memory or cpu usage.

Related-Bug: #1966394
Change-Id: I74b0d53bfc54b71d3e8b2d46739a944e5f5a6b6f"
c4618857b0249535eeed28f0c7a0abf5dbdbc9d0,2022-04-11 10:48:05+00:00,"Add ADMIN role and remove scope from the check strings

This patch should finally complete phase 1 of Secure RBAC community
goal [1] where it was agreed that there will be just 4 personas:
* ADMIN
* PROJECT_ADMIN
* PROJECT_MEMBER
* PROJECT_READER

System scope personas will be added in next phases of the community
goal.
To complete phase 1 in Neutron, this patch removes hardcoded system scope
from the check strings in system scope personas - that way it can be
controlled by the config option and enforced by oslo_policy only when
enabled.
It also skips all SYSTEM_MEMBER and SYSTEM_READER related unit tests. We
can re-enable them in the future where we will have those personas
working in Neutron.

[1] https://governance.openstack.org/tc/goals/selected/consistent-and-secure-rbac.html#phase-1

Change-Id: Iafa8ec1d9710ff404450ad0a64baf56a0f993756"
60bc6c7a992383cecaf7dcf425668a6ea92b151b,2022-04-11 10:51:26+00:00,"[API] Return 403 for POST requests when user is not authorized

In the policy_enforcement module if policy.enforce() will raise
PolicyNotAuthorized exception, there is additional check if user is
trying to modify own or someone else resource. In case when user is not
allowed to show resource even, error 404 is raised to ""hide"" any
information about requested resource.
But that was also the case for POST (create resource) requests and 404
error when user is trying e.g. create network is confusing.
So this patch modifies that logic and in case of ""create_"" actions it
will return 403 if user was not authorized to do such operation.

Closes-Bug: #1965294
Change-Id: I80b0616c335134a564361137b2a00ff86dcbdf1c"
0124dab42304596552eda7370c6ad59ee86e145b,2022-04-12 09:32:47+08:00,"[ovn]Set NB/SB ""connection"" inactivity probe support multi addresses

When OVN is clustered, connection be set multiple addresses, inactivity
probe cannot currently be set correctly. this patch fix it.

Closes-bug: #1958364

Change-Id: I5f83d6f47dc60b849cca5830ec3f77c15a446530"
9b66e81d2eea872bee844c0f343bce0238eb5b41,2022-04-12 12:11:05+05:18,"Also add B324 to bandit skip list for python3.9+

For Python>=3.9 we also need to skip B324[1] for
hashlib.sha1 usage. For older python3 versions
B303[2] was enough.

[1] https://github.com/PyCQA/bandit/commit/c4372a09
[2] https://review.opendev.org/c/openstack/neutron/+/592884

Closes-Bug: rhbz#2074383
Change-Id: If4e7e550fd63414226098af16d1cc155aaa6c57a"
79de6969fa4734385552928cdd6676d7f6fb5473,2022-04-12 16:28:09+05:18,"Drop vzctl dep from bindep package list

This was added with [1] and broked arm64 unit test
jobs as vzctl is only available from amd64[2].

[1] https://review.opendev.org/c/openstack/neutron/+/822253
[2] https://packages.ubuntu.com/focal/vzctl

Related-Bug: #1877301
Change-Id: Ie2f8ef9645c5c5331f5ff0da468a9eea508fd246"
ccf8e71efa3f91433a3db0e369ef5bb099503150,2022-04-12 17:01:37+05:18,"ovn migration: Fix check for stack name

[1] Updated the migration script to check for config-download
directory instead of stack, but missed update the Error
message.

check_stack function is renamed to check_source_inventory
as now it only checks for source inventory instead of heat
stack.
If source inventory file doesn't exist the script
will report Error message and exit.

This is follow up of [1].

[1] https://review.opendev.org/c/openstack/neutron/+/834925

Related-Bug: #1966099
Change-Id: I2416fba50fc495da4d59a3f335f33d831ca6e91d"
fde91e8059a9a23fb7ece6e3463984329c7ea581,2022-04-12 16:29:21+02:00,"Remove ""allow_overlapping_ips"" config option

It was deprecated in Yoga by patch [1]. Now it's time to remove it.

[1] https://review.opendev.org/c/openstack/neutron/+/807848

Closes-Bug: #1942294
Change-Id: I95555395c8adcec70459d5f438e1080da358c4d4"
4d3a274765a364f6f7b6bff163d6f7110bdbdbbe,2022-04-13 05:49:15+00:00,"Don't register config options on imports

Importing some modules lead to registering config options that may
collide with config options from a project that calls the import. This
patch wraps the side effect that registers config options into a
function that needs to be called in case the caller wants to register
the options.

This solution is also not perfect as it guards the common options to be
registered only once even if the function is called multiple times. This
is to solve problems in unittests, ideally we should always call the
function just once even in our testing suites.

Resolves-Bug: #1968606
Change-Id: Ic1532eb8de887ff1b1085206df11f53e22f7f524
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
e3b3ec930967305e5fce314c0a4cf74151ad711c,2022-04-14 08:16:47+00:00,"[DHCP] Break reference chain to any Exception object when resync

In the DHCP agent, if an exception is raised during the driver call,
""DhcpAgent.schedule_resync"" is called. Before this patch, the
exception instance was passed instead of a string. This instance
reference was stored in the dictionary ""needs_resync_reasons"" and
used in ""_periodic_resync_helper"" to resync the DHCP agent
information.

The call to ""sync_state"" passed the dictionary "".keys()"" method. In
python2.7 when that was implemented, this method was creating a list
with the dictionary keys. In python3, this method is a generator
that holds the dictionary content.

This patch breaks this reference chain in two points (actually only
one is needed):
- ""sync_state"" now passes a list created from the mentioned generator.
- The dictionary ""needs_resync_reasons"" now stores the exception
  strings only, instead of the exception instance.

Closes-Bug: #1969270
Change-Id: I07e9818021283d321fc32066be7e0f8e2b81e639"
f1a5511e9094d6aae7a61cd858c59c706033ca95,2022-04-14 16:01:34+00:00,"[OVN] Handle OVN agents when ""Chassis"" register is deleted

If an ""ovn-controller"" ends not gracefully, the node ""Chassis"" and
""Chassis_Private"" registers will remain in the OVN SB database.
Because there is no a mandatory procedure to delete the ""Chassis""
and ""Chassis_Private"" registers, the administrator can manually
delete, from the OVN SB database, any register in any order.

If the ""Chassis"" register is deleted and the Neutron server restarted,
the updated ""Chassis_Private"" register will be read from the database.
That won't contain the ""Chassis"" information as this register has been
deleted. In this case, the ``NeutronAgent`` returns ``DeletedChassis``,
an empty chassis register with no information.

NOTE: the sequence of actions (""Chassis"" register deletion, Neutron
server restart) must be follow to reproduce this issue. If the
""Chassis"" register is deleted, the Neutron server OVN agent local cache
won't update the stored information and will keep the previous value.
It is when the Neutron server is restarted when the OVN agent local
cache is retrieved again; at this time the ""Chassis_Private"" register
won't have any related ""Chassis"" register.

Closes-Bug: #1951149

Change-Id: I17aa53cea6aba8ea83187c99102a6f25fd33cfff"
15b826a05f84d9ed13e61ae288d5ad106dcf418c,2022-04-15 01:10:31+00:00,"[OVN] Implement GW IP network QoS inheritance

This patch enables the gateway IP network QoS inheritance in
the OVN backend driver. The OVN QoS extension will use the
router external network (GW network) QoS policy if the gateway
IP port has no QoS policy assigned.

Partial-Bug: #1950454

Change-Id: I5ee51dc124ae464b9e9fd366cf7bf85176376c25"
a13a4cb2da03e2cdce04b0e7b4bc30e44ebdbd02,2022-04-19 15:39:21+00:00,"Fix setting table monitoring conditions

After the monitor_cond_since/update3 support patch in ovs
(46d44cf3be0), directly setting table.condition is broken. This
isn't something that was every truly supported. Prior to that
patch, using Idl.cond_change() before a connection was made
did not work, but after that patch it does.

This patch uses the old behavior when the OVS library does not
have the ConditionState object, and uses cond_change() otherwise.

Related-Bug: #1965819
Change-Id: I0503037b803a3c99fb7988bc20394c111ac456db"
8dfb24a9332673c8b972f26cb92f5d4024b1bf6f,2022-04-20 09:24:45+08:00,"Remove block flow when port UP

Port admin state down will add 4095 tag to it while
it is adding a drop flow for this ofport.

When port is back UP again, remove the drop flow.

Closes-bug: #1968896
Change-Id: Ie8f67def69ae0e5d425d0e6fc43e35373a96bd88"
c4adec924a1f189fbe5750f1b413db0d0f23c39a,2022-04-20 09:24:48+08:00,"Remove useless function _add_port_tag_info

This reverts commit: b83fedbd78a441cf34d53dba35a3ccff7d8f4ac5.

Since port is set to dead by default after the commits of:
7aae31c9f9ed938760ca0be3c461826b598c7004
0ddca284542aed89df4a22607a2da03f193f083c

And we add the local vlan tag to the port right after it is
bound to aviod trunk port flood issue:
c63ebef2d58e15f4388cf064066f77b503a2f841

So that _add_port_tag_info function is not necessary anymore,
and we will save a large OVSDB read action which is dumping
the entire table of Port, for hosts with a huge number of
ports this is time-comsuming. So removed it.

Related-Bug: #1968896
Related-Bug: #1952567
Change-Id: Iefd765d497c7e2d4bb093052478185125b907025"
b80f152edfd082de66ab474d7c8c191d8765bd99,2022-04-21 16:02:45+08:00,"Add policy for packet rate limit rules

This is going to add policy rules for packet rate limit
rules of https://review.opendev.org/c/openstack/neutron/+/796363

Partially-Implements: bp/packet-rate-limit
Related-Bug: #1938966
Related-Bug: #1912460
Change-Id: I20e45f73869d23f93acf4d7bc4cd378d1fa9a986"
4e78aaa694683f812d091a794bd140a7d363dd9b,2022-04-21 11:31:05+02:00,"Update port MAC from binding profile for PFs

Today Nova updates the mac_address of a direct-physical port to reflect
the MAC address of the physical device the port is bound to. But this
can only be done before the port is bound. However during migration Nova
is not able to update the MAC when the port is bound to a different
physical device on the destination host.

This patch extends port binding logic for direct-physical ports to allow
providing the MAC address of the physical device via the binding profile.
If it is provided then Neutron overwrites the value of the mac_address
field of the port with the value from the active binding profile.

Also when the port is being unbound or the MAC address is removed from
the active binding porfile then neutron resets the mac_address field of
port to a generated MAC to avoid duplicated MAC issues when another port
is being bound to the same physical device.

The shim API extension for this change is being proposed in
I54b4c85ffc4856fba7ad5e9e29f77f74815e1275 in neutron-lib.

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/831935

Closes-Bug: #1942329

Change-Id: Ib0638f5db69cb92daf6932890cb89e83cf84f295"
9025f8a571029ce41d815c2704e29956b31f7f1f,2022-04-24 00:45:26+00:00,"Remove ""live_migration_events"" configuration option

This option was introduced in [1]. This option depended on [2],
the Nova code enabling this feature, that filters the
""vif-plugged-event"" to be sent to Nova.

Now the default behaviour is ""True"".

Related-Bug: #1901707

[1]https://review.opendev.org/c/openstack/neutron/+/766277
[2]https://review.opendev.org/c/openstack/nova/+/767368

Change-Id: I05f7e6a7d91f6a4a1fe6d4765589f30257243628"
8df2f69b6f93fd964cc96efb42d085063b90a8e6,2022-05-02 12:27:08+02:00,"Handle properly ObjectNotFound while deleting network from DHCP agent

In case when 2 neutron servers are trying to remove network from the
same DHCP agent it may happend that one of them will not be able
to find binding object anymore thus deletion of that binding object
will raise ObjectNotFound exception.
This patch adds proper handling of such case to not raise ugly
stacktrace in neutron logs.

Closes-Bug: #1970759
Change-Id: I67d516c4583aa0c20416114b92a6d69ece5b970c"
3939ec35af1769b9f04e19b8b499ad4d37d51f1d,2022-05-02 12:47:16+02:00,"Bump oslo.policy to 3.12.0

It allows us to revert temporary fix part from [1] as now InvalidScope
exception is properly handled by oslo.policy.

[1] https://review.opendev.org/c/openstack/neutron/+/826872

Related-bug: #1959333
Change-Id: I6b42306479c134ad8b07b8bf87d5c650fef9faae"
bc8e512b4a7b68f2e5c31efd320d8b347d06bba0,2022-05-02 13:01:42-05:00,"Drop lower-constraints.txt and its testing

As discussed in TC PTG[1] and TC resolution[2], we are
dropping the lower-constraints.txt file and its testing.
We will keep lower bounds in the requirements.txt file but
with a note that these are not tested lower bounds and we
try our best to keep them updated.

[1] https://etherpad.opendev.org/p/tc-zed-ptg#L326
[2] https://governance.openstack.org/tc/resolutions/20220414-drop-lower-constraints.html#proposal

Change-Id: If17736114adedf44b502fd7c91423a7822d7170b"
243c209eb2cf75570e6c850b7d5becb468e8d1ab,2022-05-04 08:57:33+01:00,"[OVN] Add baremetal support with Neutron DHCP agent

This patch now creates OVN ""external"" ports for Neutron ports with
VNIC_BAREMETAL. This ports will be scheduled on the OpenStack Controller
nodes (or OVN Gateway nodes) and are responsible for replying to the
ARP requests coming from the baremetal nodes.

This patch also disables OVN's built-in DHCP server for VNIC_BAREMETAL
ports. This is because OVN DHCP server does not yet fully support
chainloading from PXE to iPXE, this feature is work-in-progress right
now. A following patch to this one will be sent in the future adding
support for OVN's built-in DHCP server being used with baremetal nodes.

This patch implements the ""Part 1"" from bug #1971431.

Partial-bug: #1971431
Change-Id: I6b234fbe1b7c54b41a1b8b430fdf0ac76993af96
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
5126c0adc7bf7c889bcd094a4199cadf9644bbf9,2022-05-05 15:16:49+02:00,"Doc: Add note for IPv6 port update special cases

Change-Id: I85e17719eb4420a6cfd82ee54e60dd23ccfa0e95
Related-Bug: #1719806"
9e263dcf00b7ddc102a54f5e681bcf09931f3a72,2022-05-06 02:37:13+00:00,"[ovn]support read chassis update time from nb_cfg_timestamp

nb_cfg_timestamp: The timestamp when ovn-controller finishes
processing the change corresponding to nb_cfg[1]. it can better
reflect the status of chassis.

This patch updated some unit tests. ensure mock 'time.time' is
stopped after test. if not stop, may affect ""timeutils.utcnow_ts""
to obtain the real time, cause test case
'test_agent_with_nb_cfg_timestamp_not_timeout' failure.

Partial-bug: #1938478
[1] https://www.ovn.org/support/dist-docs/ovn-sb.5.html

Change-Id: Ia74a9404411862dc88b48c4a198d5c53f5f52704"
494c477b21ebbaa441b55d63755af72cc24244af,2022-05-07 02:17:36+00:00,"[OVN][FT] Wait until virtual parents are written

In ""test_virtual_port_host_update"", wait until VIP virtual parents
have been updated in the SB ""Port_Binding"" register. Then, the
test should check if ""update_virtual_port_host"" has been called or
not.

Closes-Bug: #1971672
Change-Id: Ifa04bb59f4b9acd308299cfa44f2316394d14505"
8a55f091925fd5e6742fb92783c524450843f5a0,2022-05-07 11:05:24+08:00,"[ovn]Refusing to bind port to dead agent

Closes-bug: #1958501

Change-Id: Ia84410675d28002afc74368349c9b54f048f4f4d"
0232ead2c33eccc2ccd67f96a12381f2ce7fb470,2022-05-07 13:09:39+08:00,"Meter flows and ovsdb action for ovs bridge

Add meter flows actions and ovsdb actions for pps
limitation. Meter flow actions are:
* list_meter_features
* create_meter
* delete_meter
* update_meter
* apply_meter_to_port
* remove_meter_from_port

Ovsdb actions are:
* get_port_tag_by_name
* get_value_from_other_config
* set_value_to_other_config
* remove_value_from_other_config

Partially-Implements: bp/packet-rate-limit
Related-Bug: #1938966
Related-Bug: #1912460
Change-Id: Idc9a2b1f39964fc3b603310ac7f22c1bc58d27f7"
5765186516ae6af3477fc1c1cdd0367e8c878189,2022-05-07 13:11:46+08:00,"Support pps limitation for openvswitch agent

Add packet rate limit rule to the openvswitch QoS
driver SUPPORTED_RULES list. This patch adds the
ability to limit neutron port packet I/O rate. We
will leverage the ovs meter to achieve the limitation.

The meter action is only supoorted when datapath is
in user mode (with ovs >= 2.7) or ovs kernel datapath with
kernel version >= 4.15 (and ovs >= 2.10).

[1] https://docs.openvswitch.org/en/latest/faq/releases/

Partially-Implements: bp/packet-rate-limit
Related-Bug: #1938966
Related-Bug: #1912460
Change-Id: Ib6341ad539afc9f94f1783a721cf5f793ccdc7d8"
f1a082ce5066ff4b9f74a7628e1133f521423b6e,2022-05-07 13:11:51+08:00,"Fullstack tests of packet rate limit for ovs qos driver

Depends-On: https://review.opendev.org/c/openstack/python-neutronclient/+/818717

Partially-Implements: bp/packet-rate-limit
Related-Bug: #1938966
Related-Bug: #1912460
Change-Id: If2d8f4e89987dcb55fcbef126a02bff4433c6aa8"
430c220d05308da29d9caf991f7e82005410001e,2022-05-07 06:22:09+00:00,"[OVS] Add ""Open Flow processing considerations"" doc section

Added ""Open Flow processing considerations"" in the OVS firewall
driver page. This section describes the [OVS] configuration option
""openflow_processed_per_port"". A script to meassure the Open Flow
rule processing time is provided.

Related-Bug: #1934917

Change-Id: Id4936b6d36abb6edc250aaf1cbc7e9af3fd0fae5"
701900ac3392af98add27ffd16e3d62956a1258c,2022-05-09 15:18:31+02:00,"FUP: remove convert_to_sanitized_binding_profile_allocation

convert_to_sanitized_binding_profile_allocation was added to Neutron
temporarily before [1] was merged and released in neutron-lib.

[1]: https://review.opendev.org/c/openstack/neutron-lib/+/813650
Related-Bug: #1922237

Change-Id: I953b96d97076cd6a80fff6e97e2fd956da737d46"
ab84b7fb2b6febc9dfd9b0767be90fcb3277c192,2022-05-09 16:49:29+00:00,"Allow to process FW OF rules belonging to a port in a single operation

This patch adds a new configuration variable to control the OVS
OpenFlow rule processing operations:

* ``openflow_processed_per_port``: by default ""False"". If enabled,
  all OpenFlow rules associated to a port will be processed at once,
  in one single transaction. If disabled, the flows will be processed
  in batches of ""AGENT_RES_PROCESSING_STEP=100"" number of OpenFlow
  rules.

With ``openflow_processed_per_port`` enabled, all Firewall
OpenFlow rules related to a port are processed in one transaction
(executed in one single command). That ensures the rules are written
atomically and apply all of them at the same time.

That means all needed rules to handle the ingress and egress traffic
of a port using the Open vSwitch Firewall, are committed in the OVS
DB at the same time. That will prevent from partially applied OpenFlow
sets in the Firewall and inconsistencies when applying new SG rules or
during the OVS agent restart.

That will override, if needed, the hard limit of
""AGENT_RES_PROCESSING_STEP=100"" OpenFlow rules that could be
processed in OVS at once.

If the default configuration values are not modified, the behaviour of
the OVS library does not change.

Closes-Bug: #1934917

Change-Id: If4984dece266a789d607725f8497f1aac3d73d23"
b5d4bc376cc6311a3d35165248a5ccfbf05b9359,2022-05-09 17:04:59+00:00,"[UT] Do not create network ports with same MAC address

In ``TestOVNClientQosExtension``, avoid creating a router GW port with
a MAC address that could match the ports created in
``_initialize_objs`` to be used as floating IP ports.

Closes-Bug: #1972713
Change-Id: Ida2971f9a41122a0c3522a446c70497655fdf97b"
8c5cde363eba653aa86f981a3ea6b0993927366f,2022-05-12 04:32:43+00:00,"Fix pep8 endless loop in ""test_update_flows_for_vlan_remote_group""

To be honest, I don't know the reason why pep8 was stopped when
checking ""test_update_flows_for_vlan_remote_group"". This patch
indents the ""mock.call"" list and creates a variable, instead
of passing the list inside the assert method.

I've manually tested the pep8 job. In my development environment
not takes 43 seconds, instead of 14 minutes.

Closes-Bug: #1973221
Change-Id: Ic5849b88553ce7ef860e8c2020cb92d06ba9e1b4"
1471f531b86eef8928756d5e927f710a5683e6ad,2022-05-12 11:33:32+05:18,"[OVN] Handle missing acls during log removal

During log delete we fetch all the acls for
all the pgs if there is only one log object
and do clear log of all these acls, but if
one or more acls of any of the pgs is removed
concurrently, db_set fails as acl is not found.

This patch proposes to only do log clear of those
acls which are available and add log message for the
acls which were deleted concurrently.

Also add a unit test for this case where one of
the acl get's missing.

Closes-Bug: #1971569
Change-Id: I58487024c8d0352776307f0185f0812bb00036ae"
44c03ca8e10a11f13583ba924868b4f331d3072a,2022-05-12 18:09:14+00:00,"Register common config options in ``MechDriverSetupBase``

When manually testing any ``MechDriverSetupBase`` child testing class,
the following error is shown:
  oslo_config.cfg.NoSuchOptError: no such option service_plugins in
  group [DEFAULT]

To avoid this, this patch registers the common config options during the
``MechDriverSetupBase`` setup method. The
``register_common_config_options`` will not register the options if are
alredy registered.

Related-Bug: #1968606
Change-Id: Ie324b8489e2826a9f82fc9b45ee9684a680c6a8b"
4c37497e7c98180fb6b1118021acd8e96b7028d0,2022-05-12 18:47:45+00:00,"[OVN] Allow VIP ports with a defined ""device_owner""

Now OVN VIP port can have a ""device_owner"" defined.

Closes-Bug: #1973276
Change-Id: Id1907481077d230e4461906a1a2a1447abac330a"
eb99c222138c49a360f384cebcacb6eeffe84ecd,2022-05-12 23:50:07+00:00,"Remove ""distutils"" library

Library ""distutils"" will be marked as deprecated in Python 3.10:
https://peps.python.org/pep-0386/

This patch does the following replacements, that provide the same
functionality and API:
- distutils.version.StrictVersion -> packaging.version.Version
- distutils.spawn.find_executable -> shutil.which

Closes-Bug: #1973780
Change-Id: Iad96ad3e7055f71c629efbe80070adbe297cd7aa"
db2ae854cf65b59eb0f7b0eef1b20e404c2214cb,2022-05-13 13:49:36+00:00,"Create an index for ""ports.network_id""

The method ``_port_filter_hook``, that is added in any ""Port"" SELECT
command, filters the database ""Port"" registers by ""network_id"", using
an exact match. This query speed will improve if this column is
indexed in the database engine.

Closes-Bug: #1973349
Change-Id: Ia20f96dc78ea04bb0ab4665e6d47a6365789d2c9"
1b51ad28f3c8de78a8af71dab76f868cad5f6561,2022-05-13 14:58:34+00:00,"Check the Chassis_Private nb_cfg_timestamp with current value

In ``test_agent_updated_at_use_nb_cfg_timestamp`` now the test
checks the local cache agent ""updated_at"" value with the current
SB ""Chassis_Private.nb_cfg_timestamp"" value, read from the DB each
time the value is tested.

Closes-Bug: #1974149
Change-Id: Ibd9ebfbd628d98a6a5de2b4fe47a9cbc65500c84"
cd8bf18150c8b0a4bc64979d800726483d9cdb6e,2022-05-13 15:05:47+00:00,"[L3HA] Don't update HA router's ports if router isn't active on agents

In case when HA router isn't active on any L3 agent,
_ensure_host_set_on_port method shouldn't try to update port's host to
the host from which there was an rpc message sent, as this can be host
on which router is in the ""standby"" mode.
This method should only update port's host to the router's ""active_host""
if there is such active_host found already.

Depends-On: https://review.opendev.org/c/openstack/requirements/+/841489

Closes-Bug: #1973162
Closes-Bug: #1942190
Change-Id: Ib3945d294601b35f9b268c25841cd284b52c4ca3"
68bbd3586bdc313a6b67f2983ba2331a7956856c,2022-05-14 09:41:25+00:00,"[Trunk] Check if parent port belongs to OVN to activate

In Trunk service, the OVN was setting always the trunk to ""ACTIVE""
anytime the trunk was created or updated. This patch changes this
behaviour: only when the trunk parent port belongs to OVN (that
means, there is a related logical switch port to this Neutron port),
the methods will set the trunk to ""ACTIVE"".

Closes-Bug: #1974183
Change-Id: Ied5ef53882d4249e0ceaa731239befdc3ba67d03"
3c637a2d127f7fdac5874fd9ed1b01137d303c7f,2022-05-14 12:52:48+00:00,"[OVN] During the DB migration, allow the DB context to finish

During the execution of ""migrate_neutron_database_to_ovn"", that is
part of the OVN database migration process, the port bindings are
updated. If by any circumstance a port binding update fails, the
database write context should end properly (rolling back the
transaction) and any exception raise should be catched outside it.

Closes-Bug: #1975692
Change-Id: Idc6478e6f0fd1a2825b2c978b41feb5dab903357"
b48595e419a02592dcf319ea4b4dda0912efa050,2022-05-14 18:00:19+00:00,"[sqlalchemy-20] Add DB context in L2pop module

Some database operations in L2pop module didn't have the
needed database context to perform a query.

Closes-Bug: #1975797

Change-Id: I32a49efd9d56f7c06d3bb1de1352be1311686c42"
39d751a33265e8780828b3aca10a781726d0a300,2022-05-15 01:38:25+00:00,"Refactor the OVN revision module to access the DB correctly

Method ``_ensure_revision_row_exist`` creates a DB reader context
when called from ``bump_revision``. This call is always done from
inside a DB write context. This method removes the unneded reader
context.

Closes-Bug: #1975837
Change-Id: Ifb500eef5513e930bf3a22d99183ca348e5fc427"
59973d29c3d9d2defd2003206e138a94090ad4ff,2022-05-15 11:39:54+00:00,"[sqlalchemy-20] Add missing DB contexts in L3 methods

The goal of this series of patches is to make the Neutron code
compliant with SQLAlchemy 2.0.

This patch adds the missing database contexts in the execution of
some queries in the L3 code, reported in the following bugs. This
patch also refactors the ``neutron.db.l3_db`` methods, using the
method decorators instead of the inline context builders.

Closes-Bug: #1974144
Closes-Bug: #1974142
Related-Bug: #1964575
Change-Id: I7e18db7f1fa6b8878c13df09895c993704401815"
c2786554ad99c6017dd46802b532b5eb5bd4a009,2022-05-16 07:14:37+00:00,"[sqlalchemy-20] Add the needed DB context decorators in ``db.api``

The method ``_get_filter_query`` returns an active query and must
be called always inside a DB context.

Closes-Bug: #1976357
Change-Id: Idea915bd71bfb778f5009be9cf47eace83e11437"
182044d628314290a38440bab203d27fb9db755d,2022-05-16 15:42:33+08:00,"Do not auto subquery load DistributedPortBindings

We observe excessive DB calls to load DistributedPortBindings,
We have enabled DVR and have some huge virtual routers with around
60 router interfaces scheduled on around 200 compute nodes. Under such
situation, subquery load DistributedPortBinding looks like not a very wise
idea, because it is not explicitly used.

I glance through the code and have a feeling that ml2_distributed_port_bindings
is not used except explicitly called. So IMO it is safe to change it to
default lazy load without causing serious regression.

Closes-bug: #1973576
Change-Id: Ib2c48bd5ad55e9c754a8e4938e6c5eafacc75dcc"
18c32e4339cbcb0993d9c162e2715f6fcfa932cc,2022-05-16 20:55:30+08:00,"[OVN]Any string type dhcp options should be quoted

Any dhcp option[1] which value is string type in ovn
should be added quotes, otherwise it would be regard
as constant.

[1]https://github.com/ovn-org/ovn/blob/main/lib/ovn-l7.h#L116

Closes-Bug: #1946764
Change-Id: Id174cd944c3b883b749046bc49d00e011eb891fe"
32e8303b3b21e047abcf365c3999cb7379467b0c,2022-05-16 15:53:15+00:00,"Skip ""PortBindingChassisEvent"" if revision number changes

Since [1], the ""external_ids"" of the NB Logical_Router_Port register
are copied into the SB Port_Binding ""external_ids"". When a change
in a Port_Binding register is received, if only the
""external_ids:revision_number"" is changed, we skip any update on the
related Logical_Router_Port.

If not, that will lead to an infinite loop: Neutron will update
the Logical_Router_Port with a new revision number and OVN will
copy this new revision number to the SB register, triggering again
the update of the NB Logical_Router_Port

[1]https://www.mail-archive.com/ovs-dev@openvswitch.org/msg62836.html

Closes-Bug: #1973347
Change-Id: Ib51764778a666050c42de0dfeb9bf9b185d44bb7"
3c93da7bdf35c3be6081384b7f6d9a4ce13510d3,2022-05-17 05:34:29+00:00,"Set ""type=virtual"" for OVN LSP with parent ports

This is a follow-up of [1]. Before this patch, any virtual logical
switch port that was updated and the ""device_owner"" was not and empty
string, had its type set to '' (empty string).

This maintenance task, that is executed only once, lists all logical
switch ports, checks the presence or not of virtual parents and
sets the type to ""virtual"" if needed.

Related-Bug: #1973276

[1]https://review.opendev.org/c/openstack/neutron/+/841711

Change-Id: I6cf1167d556f0c2c2aa2013f05c809648020b377"
88fb5416f7169bd3542bca6af0192f935c8cc18e,2022-05-17 10:14:06+00:00,"Bump neutron-lib to 2.21.0

This new neutron-lib version contains the patch [1], that provides
compatibility with SQLAlchemy 2.0.

[1]https://review.opendev.org/c/openstack/neutron-lib/+/828738

Related-Bug: #1962153
Topic: sqlalchemy-20
Change-Id: Ib2880b8fa61ae7691c527b837045cfa15226072c"
096e4df5fc4458a02928c84b40ba01e66618b4ad,2022-05-18 19:49:12+00:00,"""_handle_lb_fip_cmds"" to handle the LB members correctly

This patch indents the section where the load balancer members
are properly verified. This section must be executed for each
load balancer matching the logical switch port with the VIP passed
as an argument to the method ""_handle_lb_fip_cmds"".

Closes-Bug: #1977969

Change-Id: Ib220867106abc59da4fae51a60ef52d0c02592c8"
6012ba074fd5e72fab52dbea6a212d6d9acd17f8,2022-05-19 12:51:15-04:00,"Start using security-groups-shared-filtering from neutron-lib

Remove security_groups_shared_filtering_lib extension and
use security-groups-shared-filtering from neutron-lib as
it is available since version 2.17.0 [0].

[0] https://review.opendev.org/c/openstack/neutron-lib/+/812617

Change-Id: Ife9b1ae47f5b447898bce0d8b44500f91f6dfbfb
Related-Bug: #1942615"
6890204765c5de1a91284b9b0b6bf0565673f53f,2022-05-19 22:02:04+00:00,"Move ``PortBindingChassisEvent`` checks to ``match_fn``

Moved the event checks to ``match_fn`` method, that is the correct
place to execute them, before the ``run`` method is called.

This is a follow-up of
https://review.opendev.org/c/openstack/neutron/+/842147.

Related-Bug: #1973347
Change-Id: I3b7c5d73d2b0d20fb06527ade30af8939b249d75"
36bf1df46df4de8f9ed0c19e1118480ce2e55d8a,2022-05-24 11:24:30+00:00,"Partially revert ""Do not link up HA router gateway in backup node""

This partially reverts commit c52029c39aa824a67095fbbf9e59eff769d92587.

We revert everything except one minor addition to
neutron/agent/l3/ha_router.py which ensures that ha_confs path is
created when the keepalived manager is initialised.

Closes-Bug: #1965297
Change-Id: I14ad015c4344b32f7210c924902dac4e6ad1ae88"
5288593fafe6636fc14b8873465866d20de26935,2022-05-24 11:30:02+00:00,"[L3-HA] Disable automatic link-local address assignment for HA routers

In order to get both [1] and [2] fixed, we set
`net.ipv6.conf.all.addr_gen_mode=1` in HA router namespace to
prevent auto-assigning link-local address(lla) to the interfaces.
We don't need lla auto-assignment as keepalived manages them.
With this change, we will have link-local addresses only on active
router, which will prevent 'dadfailed' and MLD packets will not be
sent from standby router.

Previously we also reverted [3] to always keep qg-* interface up on both
active&standby router's instance, no matter if keepalived is started or
not.
Without link-local address assigned, backup router's instance won't
send any packets, so I see no reason to keep qg-* interface down.

[1] https://bugs.launchpad.net/neutron/+bug/1952907
[2] https://bugs.launchpad.net/neutron/+bug/1859832
[3] https://review.opendev.org/c/openstack/neutron/+/834162

Closes-Bug: #1952907
Related-Bug: #1859832
Depends-On: https://review.opendev.org/c/openstack/neutron/+/834162
Change-Id: I306f14aa6b7e8bb69a81f441be337bc1a584d3b2"
d1fe14d366e501869addff17e851ac03a599adca,2022-05-24 21:56:47-05:00,"Notify mech drivers with original and modified network.

Include original and modified network when notifying mechanism drivers in PRECOMMIT event. PRECOMMIT_CREATE modified network includes new segment, while original does not. Exact opposite for PRECOMMIT_DELETE

Closes-Bug: #1967742
Change-Id: I364fc7981458374ed25eb8837d1ed3afff046b95"
e73a85f3dd15aea2564a34f36261cd4c03128450,2022-05-25 10:14:46+01:00,"[OVN] Add baremetal support without Neutron DHCP agent for IPv4

This patch adds support for deploying baremetal nodes with OVN's
built-in DHCP server for IPv4.

Since Neutron API's for setting DHCP options is mostly a pass-thru,
Ironic uses a dnsmasq syntax for setting the baremetal options [0].
Since this syntax is unlikely to change and it's only a tiny subset of
what dnsmasq can offer this patch does translate that syntax used by
Ironic and convert it to OVN's equivalent options. In this way we do not
need to re-design Neutron's DHCP options API nor change Ironic to use it
with ML2/OVN.

This option also adds a new configuration option called
""disable_ovn_dhcp_for_baremetal_ports"". PXE booting nodes can be very
sensitive and operators may prefer to use a fully-fledged DHCP server to
do it (even Ironic makes DHCP pluggable). So if operators wish to
disable OVN's built-in DHCP server for baremetal provisioning they can
do so by setting this new option to True. It defaults to False.

This change has been tested with real hardware and it does work. That
said, we found a problem in core OVN itself [1] while testing it that
can affect PXE from reaching the TFTP server, we already communicated
this with the core OVN folks and we hope it can be fixed soon. The
change in core OVN should not affect the Neutron change tho.

Not that the ""server-ip-address"" DHCP Option now points to the
""next_server"" option in OVN instead of the ""tftp_server_address"". The
previous behavior was wrong, the ""server-ip-address"" should set the
""siaddr"" in the DHCP header and this has been introduced in OVN [2] as
an option called ""next_server"".

[0]
https://github.com/openstack/ironic/blob/49113385e89c52b56152418d3a0c8c69ddaf8b6e/ironic/common/pxe_utils.py#L523-L538
[1]
https://mail.openvswitch.org/pipermail/ovs-discuss/2022-May/051821.html
[2]
https://patchwork.ozlabs.org/project/ovn/patch/20220511142757.168196-1-lmartins@redhat.com/

Partial-Bug: #1971431
Change-Id: Ia041f640293ba26abf9f70af915817e9861e8ffc
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
d89d7bd5e6477a1ad24165831dbc5f1e2fc357b5,2022-05-26 07:12:31+00:00,"Remove session active check in ""_add_segment_host_mapping_for_segment""

Method ``_add_segment_host_mapping_for_segment`` is called by the event
(resources.SEGMENT, events.PRECOMMIT_CREATE), from
``SegmentDbMixin._create_segment_db``, and is called inside a database
writer context. That means it is irrelevant to check if the session is
active (must be always).

Closes-Bug: #1975542
Change-Id: Ib19dacf886486876237ed1157fb95ae157ed430e"
e6d27be4747eb4573dcc5c0e1e7ac7550d20f951,2022-05-26 17:29:23+05:18,"Revert ""Use Port_Binding up column to set Neutron port status""

This reverts commit 37d4195b516f12b683b774f0561561b172dd15c6.
Conflicts:
 	neutron/common/ovn/constants.py
 	neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovsdb_monitor.py

Also revert below 2 commits which were added on
top of the parent commit:-

Revert ""Ensure subports transition to DOWN""
This reverts commit 5e036a6b281e4331f396473e299b26b2537d5322.

Revert ""Ensure only the right events are processed""
This reverts commit 553f462656c2b7ee1e9be6b1e4e7c446c12cc9aa.

Reason for revert: These patches have caused couple of issues[1][2][3].
[1][2] are same issue just one is seen in c8/c9-stream and other in
rhel8 and both contains much info about the issue.
[3] is currently happening only in rhel8/rhel9 as this issue is visible
only with the patch in revert and ovn-2021>=21.12.0-55(fix of [4]) which
is not yet available in c8/c9-stream.

[1][2] happens randomly as the patch under revert has moved the
events to SB DB which made a known OVN issue[5] occur more often as in
that issue SB DB Event queue floods with too many events of
PortBindingChassisEvent making other events like PortBindingUpdateUpEvent
to wait much longer and hence triggering VirtualInterfaceCreateException.

NB DB Event queue is different and hence with revert we are trying to
lower the side effect of the OVN issue[5].

This patch can be re reverted once [3] and [5] are fixed.

[1] https://bugs.launchpad.net/tripleo/+bug/1964940/
[2] https://bugzilla.redhat.com/show_bug.cgi?id=2081631
[3] https://bugzilla.redhat.com/show_bug.cgi?id=2090604
[4] https://bugzilla.redhat.com/show_bug.cgi?id=2037433
[5] https://bugzilla.redhat.com/show_bug.cgi?id=1974898

Closes-Bug: #1964940
Closes-Bug: rhbz#2081631
Closes-Bug: rhbz#2090604
Related-Bug: rhbz#2037433
Related-Bug: rhbz#1974898
Change-Id: I159460be27f2c5f105be4b2865ef84aeb9a00094"
384ff4485ff0111c801e442168c518b2b5211c91,2022-05-26 19:45:34+05:18,"[UT][ovn] Access config options after they are registered

It is a follow up of [1]. There were still some tests
which were accessing config optons before they were registered
and failing when tested manually just those tests, this
patch fixes it.

[1] https://review.opendev.org/c/openstack/neutron/+/842068

Related-Bug: #1968606
Change-Id: I9aec0ba1f5c723e6f5a9146e9af41707e8014db2"
763d8af1a3c17ab123f4f4d05f5c15a7ed169283,2022-05-30 10:51:31+04:00,"Add some logging to test_good_address_allocation

Let's see how many times the test asks for IP addr list
during 10 sec timeout pediod. Probably sporadic failures
are caused by waiting for GIL for too long.

Related-Bug: #1966035
Change-Id: I41679cd7e39b0f7d64f99f509605ac9bc760ac5d"
e09b128f416a809cd7734aba8ab52220ea01b2e2,2022-05-30 10:09:12+02:00,"Defer flow deletion in openvswitch firewall

Reduces the deletion time of conjunction flows on hypervisors
where virtual machines reside which are part of a security
group that has remote security groups as target which contain
thousands of ports.

Without deferred deletion the agent will call ovs-ofctl several
hundred times in succession, during this time the agent will
block any new vm creation or neutron port modifications on this
hypervisor.

This patch has been tested using a single network with a single
vm with a security group that points to a remote security group
with 2000 ports.

During testing without the patch, the iteration time for deletion
was at around 500 seconds. After adding the patch to the l2 agent
on the test environment the same deletion time went down to
4 seconds.

Closes-Bug: #1975674
Change-Id: I46b1fe94b2e358f7f4b2cd4943a74ebaf84f51b8"
7f5fb86232a92008e3f9c3be8a00287a1cd09b20,2022-05-31 06:03:49+00:00,"Switch Fips fullstack/functional tests to py3.8

Master has dropped py3.6 support so upper-constraints
requirements are not installable with python3.6
and due to this fips jobs which are running on py3.6
are failing. Let's run the functional/fullstack tests
with python3.8 on CentOS 8-Stream itself.

Also disable dbcounter installation as it's not
installing on python3.6.
The hacks can be cleaned up when these jobs are
switched to CentOS 9-Stream, currently have some
issues as mentioned in the Related Bug.

Depends-On: https://review.opendev.org/c/openstack/neutron-tempest-plugin/+/843989
Related-Bug: #1976323
Change-Id: I757dbf929cb1dc27027614bbb2147a61606f85a9"
a71fe45d9628f0dc67ccd12d94a51a7b801ec9d0,2022-06-01 10:12:08+00:00,"[OVN] Protect the AgentCache iteration by copying the local cache

During the execution of ``AgentCache.__iter__``, the content of
""self.agents"" can change; the Neutron server can attend to an event
to add or delete an OVN agent. If that happens, the iteration will
fail with the error:
  ""RuntimeError: dictionary changed size during iteration""

To avoid this, before iterating the list of agents, the cache
singleton creates a copy of the local cache. The aim of making this
copy is to avoid using locks between threads.

Closes-Bug: #1976292
Change-Id: Icf92685579409282bad0a80ba42531c93738e0b1"
5957e90575eddc864b59ea2862e4c2bcd7a1bf7a,2022-06-01 19:29:53+05:18,"Create an index for subnetpools.address_scope_id

The method ""get_network_address_scope"" filters
""Subnetpool"" with ""address_scope_id"" using an
exact match. Making the column indexed will improve
the query performance.

Closes-Bug: #1973726
Change-Id: Ib3f8e18ba28b277d5fa02dd386ca80a5a113c247"
d13da77107fd9e9166b891409376a67210f7f48b,2022-06-01 17:28:42+02:00,"Mark functional L3ha tests as unstable

All functional tests which uses wait_until_ha_router_has_state() method
are now marked as unstable so in case of timeout while waiting for
router's state transition, job will not fail.

Related-Bug: #1956958
Change-Id: I0e5d08c1a9dc475c7b138c4934ef0331a4339a4c"
62d3f91f924db9cc42a57248f0d65779bb5aa199,2022-06-02 02:41:13+00:00,"openflow_processed_per_port should be ovs-agent only

""conf/agent/ovs_conf.py"" has some common options for ovs agent and
L3/dhcp/metadata agent [1] to handle records on ovsdb, mostly for ovsdb
related action only when the interface driver is 'openvswitch' [2][3].
The options of ""conf/plugins/ml2/drivers/ovs_conf.py"" are mainly
for ovs-agent. The ""openflow_processed_per_port"" is in
wrong place, because L3/DHCP/metadata agent will never try to
""install flows per port"".

The option ``openflow_processed_per_port`` is still in [OVS] section
for openvswitch agent.

[1] https://github.com/openstack/neutron/blob/master/neutron/opts.py#L209
[2] https://codesearch.openstack.org/?q=from%20neutron.conf.agent%20import%20ovs_conf&i=nope&literal=nope&files=&excludeFiles=&repos=
[3] https://codesearch.openstack.org/?q=ovs_conf.register_ovs_agent_opts&i=nope&literal=nope&files=&excludeFiles=&repos=

Change-Id: I43756c81ba3eede2ff8b1f4c6ead4c9426d78f90"
8a9ffcb0d4c0c44fc226810fd7f08dab9b79fcc0,2022-06-02 12:15:39+02:00,"[OVN] Make binding profile validation more robust

The main purpose of Neutron's validation of the binding profile
is to make sure expected keys are present and that their values
are of the expected type.

The Nova compute component updates the binding profile as part of
instance creation.  Depending on the version of the Nova compute
component and which hardware it interfaces with, the information
provided by Nova in the binding profile may differ.

Nova also has limited information at its disposal at the point in
time it updates the port binding profile, so it would be
non-trivial for it to provide information conditionally based on
things like VNIC_TYPE and existing binding profile data.

Make the Neutron binding profile validation more robust for both
upgrade and heterogeneous hardware scenarios by accepting the
presence of surplus keys in the binding profile.  The data that
Neutron expects will still be validated and any surplus keys will
be pruned before further processing internally in Neutron.

Closes-Bug: #1975743
Change-Id: I3a91f442a1fd72f9027f10f2b1b6572cee3f8360"
9dd06e9c4424c7201cb65420f73309c545349055,2022-06-04 10:27:13+08:00,"Forbid create ndp proxy on same router with same ip address

Create multiple ndp proxies with same ip address within one router
is invalid. The related database constraint was missed in previous
patchsets. The patch add some codes fixed this error.

Additionally, Fixed two typo errors.

Related-Bug: #1877301
Change-Id: Iab24ad78a3d4d9b0ee584cf0986328c9ae2bd16a"
326c0076eff2c311fa461ac57018646466290856,2022-06-04 15:19:52+08:00,"Update port-mac-address-override shim extension

The port-mac-address-override shim extension proposed in
I54b4c85ffc4856fba7ad5e9e29f77f74815e1275 in neutron-lib has merged
and the neutron-lib has being released. So this patch updates the
API extension and replaces the import with the new neutron_lib api
definitions.

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/831935

Change-Id: Ic332769af532003a9a5b2d2cee38b6210b5aac91
Related-Bug: #1942329"
a575dbc4a1aa7c44bba7ada4571a85d21120261e,2022-06-07 13:20:11+00:00,"Add ""max-rate"" value to minimum bandwidth rules

OVS translates the QoS and associated queue registers,
attached to a port, into ""tc"" linux-htb classfull traffic
shaper, applied on the port.

OVS creates a ""tc"" root class on the port device. On top of
this root class, the queues are represented as child ""tc""
classes. In order to define a ""min-rate"" value (""tc rate""),
a ""max-rate"" value (""tc ceil"") must be provided and higher than
""min-rate"".

By default, OVS agent QoS minimum rules do not have a ""max-rate""
defined. Before this patch, any minimum bandwidth rule was
limiting the maximum rate to 100Mbit/s, that is the default value
set in ""tc ceil"". This patch provides the maximum ""max-rate"" value
for any minimum bandwidth rule.

Closes-Bug: #1977752

Change-Id: I2c6f09548f39cadfe85e57032091a70a5bc978e5"
6b529ea3c559ed1a016e2aa2c30769429192d528,2022-06-08 08:21:34+00:00,"[sqlalchemy-20] Use session.transaction information to decide if active

The ""session.transaction"" member ""_connections"" is a dictionary with the
active database connections of the current transaction. Neutron will use
it to determine if the session is active or not. This parameter will
provide more accurate information than ""new"", ""dirty"" or ""deleted"". A
read (SELECT) operation won't be included on those lists while the
transaction is currently active.

Closes-Bug: #1975542
Change-Id: Ibb75b324950c639d30c77d4e5269a8c53d6a0bb5"
ffd64df9d306bf56091b2f3ae8a8f579f578de53,2022-06-08 18:12:28+00:00,"ovn: revert to stateful dnat_and_snat

This is an effective revert of:
I312a950131d62d93fb4bc121bc5e60febb8d35ee
""ovn: use stateless NAT rules for FIPs"".

The performance benefits promised by the ""reverted"" patch never
materialized. On the contrary, the discussion in [1] revealed that the
switch to stateless=true made it impossible to fully hw offload nat
rules, while it's possible with stateless=false.  Specifically, see this
comment [2].

Since at this point it's unclear if keeping stateless=true as an option
is beneficial for any case, even when w/o hw offload, and to avoid
complexity of introducing a config option for unclear benefit, this
patch reverts the effects of the original patch, switching all
dnat_and_snat objects to implicit stateless=false state.

This patch cannot be a clean revert because of the need for db
migration.

[1] https://bugzilla.redhat.com/show_bug.cgi?id=2004995
[2] https://bugzilla.redhat.com/show_bug.cgi?id=2004995#c18

Change-Id: I9e6e05b7a4f36383a44bd80f07d25052b17bdfa0"
7dbc61346a89af1f4f4a002171f7f36a74034049,2022-06-09 06:03:13+00:00,"remove unused updated_at parameter for AgentCache.update

we cannot find this parameter passed in anywhere except for some unit
tests. currently we have used nb_cfg_timestamp[1] as agent updated
time. there are no other scenarios for this parameter. this patch
remove it and update some unit test.

[1] https://review.opendev.org/c/openstack/neutron/+/802834

Closes-bug: #1978035

Change-Id: Ic964b7ddc70988bb1a822b07be6a1be4d197287e"
411ecc4865198e2bed5e3d0ab498e3a42408c17d,2022-06-09 18:34:09+08:00,"[ovn]neutron agent show real heartbeat_timestamp

agent's heartbeat_timestamp returns the current time, not
conducive to agent status troubleshooting.
this patch use agent's updated_at as heartbeat_timestamp.

Closes-bug: #1977629

Change-Id: Idf522a20f9735829ee568020bfed46345a95e294"
3e1223f5caaf292f8aff01cb1b80514e787c3c2f,2022-06-13 07:45:04+08:00,"Change vlan max value in intro-basic-networking.rst

Cloesed bug: #1978389

Change-Id: I23d2ec86bb719c89886c24186745f04c17d8964c"
c25097b0b0da2af9021699036a69cd10e66533b1,2022-06-13 10:30:11+02:00,"Optimize queries for port operations

Port create/update are most time-consuming operations
on subnet creation. As example, in those cases where
several subnets are created over the same network the
response time for those port operations is linearly
increased as the total subnets increases.

This patch improves the number of queries required on port
operations in order to reduce the response time.

Closes-Bug: #1977831
Change-Id: I0fccf36a2035e8f6c2fa8dab0307358da600c8f7"
81a330113b5ae3d9b163eb2a92bfa0a628a31dd1,2022-06-14 12:05:44+08:00,"Return default value when get router's enable_ndp_proxy from `request_body`

In some cases, the creation of router was called by `l3 plugin`
directly, didn't call API. In this way, the router's request_body
of the `ndp_proxy` service plugin received has no `enable_ndp_proxy`,
this will result in `ndp_proxy` service plugin raise error.

Closes-Bug: #1978519
Related-Bug: #1877301
Change-Id: I413c33970002532d11de5bc2afb145704a8488a9"
a22d6d6a95246875de9f2a7d1bda1f762bfef846,2022-06-17 10:24:44+05:18,"Use ovs constants from neutron-lib

Ovs constants were moved from neutron to neutron_lib some time ago.
This patch switches to use them from neutron-lib already.

That decision was agreed during the Neutron team meeting. See [1] for
details.

[1] https://meetings.opendev.org/meetings/networking/2021/networking.2021-11-09-14.00.log.html#l-83

Requires: https://review.opendev.org/c/openstack/neutron-lib/+/834908

Change-Id: I2fd1954bec6a52856195190441d77ac8b7d97055"
4dbcd76517fead73f91adaab9cdaf0e92a4aff4e,2022-06-17 08:39:44+00:00,"Fix ""ip route"" commands to work with pyroute2 APIv2

Fixed ""ip route"" commands to work with pyroute2 >= 0.6.10, that
introduces APIv2 for link, neighbour and route [1].

[1]https://github.com/svinota/pyroute2/commit/bc0f5e2209a937fdec6e9931ca7b3c45c0278f31

Closes-Bug: #1979031
Change-Id: Id2239b6827485a4d466b0916947428ceabef9139"
9f5e211796dbc0df0bad1ae29fbb82eb7317fb82,2022-06-17 13:48:29+00:00,"[OVS][QoS] Unset the min-bw QoS from the phys bridge interface

The minimum bandwidth OVS QoS policy is set in the physical bridge
interface, not the port that receives the Neutron QoS policy.
If no other port has a minimum bandwidth rule, the OVS QoS policy
can be unset from this port and deleted. This patch fixes the
port that must be updated.

Closes-Bug: #1977819
Change-Id: I0ebcc85f5ffa9dc29ffedee0c7df1828c85e1576"
b497ad1665680cfff5173fbf08b06919e34c6776,2022-06-18 16:06:05+00:00,"Filter the ports by VNIC type

In ``check_baremetal_ports_dhcp_options``, the ports need to be
retrieved based on the VNIC type. The VNIC type is stored in
""ml2_port_bindings"" table, not ""ports"" table.  Because the ML2Plugin
``get_ports`` method can filter only by ""ports"" database register
fields, it is needed to retrieve those ports using a custom database
query and then use the plugin method to retrieve the ports, converted
to dictionaries and the extensions processed.

Closes-Bug: #1979643
Change-Id: Iab227d9de75e4b1b927043ce27bdc346066478e8"
51360b5a08230716a237317c4493ddcd9172cde0,2022-06-20 20:47:53+05:18,"Set nslookup_target in FIPS jobs

FIPS jobs reboot nodes after enabling FIPS,
but unbound service takes some time to
be ready and until then DNS resolution fails.
[1] added support to check DNS is ready after
reboot, in order to utilize it we need to
set ""nslookup_target"" job var.

[1] https://review.opendev.org/c/zuul/zuul-jobs/+/844704

Closes-Bug: #1978938
Change-Id: Ia39753f7cc533ba9959136b95bc3401d2f34cad4"
a1384678b88fc7ffb5eeccfbfc0da16a9cb8910a,2022-06-21 12:43:38+05:18,"[fips jobs] blacklist AttachInterfacesTestJSON tempest test

libvirt-8.4.0-1.el9 caused a regression which resulted into
AttachInterfacesTestJSON and test_hotplug_nic tempest test to
fail, until fixed libvirt version is available in CentOS 9-Stream
repos, let's exclude these tests from jobs running
on CentOS 9-Stream.

Related-Bug: #1979047
Related-Bug: rhbz#2092856
Change-Id: Ia97fc084dcbdfbced0c2cc79f127a97b4d97d1e3"
a7ea4909d98679715c059ce4f44c952ca6d985e5,2022-06-21 13:44:33+02:00,"Add vpnaas to extensions supported by ovn

This addition is required to run a devstack setup with ovn
that includes vpnaas from the proposed patch [1]

[1] https://review.opendev.org/c/openstack/neutron-vpnaas/+/765353

Related-Bug: #1905391
Change-Id: Id41e7c1a67ea9a8fcda1d5d331ab8192aff7dc48"
8c482b83f2cf6f5495f4df2e5698595db704798d,2022-06-21 17:30:00+02:00,"[ovn] Specify port type if it's a router port when updating

In order to avoid multiple LogicalSwitchPortUpdateUpEvent and
LogicalSwitchPortUpdateDownEvent is mandatory to specify the
router port type when udpating the port.

If the port is not specified when updating the port, the
transactions will trigger a modification on the ovnnb db
that will set the port status to down[0]. Triggering an unnecessary
DownEvent followed by another UpEvent. Those unnecessary event
most likely will trigger a revision conflict.

[0] - https://github.com/ovn-org/ovn/blob/
4f93381d7d38aa21f56fb3ff4ec00490fca12614/northd/northd.c#L15604

Closes-Bug: #1955578
Change-Id: I296003a936db16dd3a7d184ec44908fb3f261876"
2365abfd007abd166fcc7cced2509da7763b3769,2022-06-23 22:18:44+02:00,"Add a release note for 834162

I forgot to write a release note when pushing change 834162 [1].
It may be an important change for operators so it's good to have a
release note about that.

[1] https://review.opendev.org/c/openstack/neutron/+/834162

Related-Bug: #1952907
Change-Id: Ie707f461af11357d6eaa004bc98c7eb09a62202f"
e9a479519f0b7eb9b6aa86811ad992f9d5626111,2022-06-28 20:50:25+05:18,"Temporary make rally job non voting

Actual fix is already proposed in rally[1], but
rally CI is red for other issues, so to unblock
neutron gate let's temporary make this job
non-voting.

ovn rally job is already non-voting.

[1] https://review.opendev.org/c/openstack/rally-openstack/+/847879

Related-Bug: #1980055
Change-Id: I39c9db9f3a1eea3cea4f1f4979e0abdce6946bea"
d3ce69b9465c734d25d1d96c8cb7103834d03dac,2022-06-29 15:03:33+00:00,"[FT] Run all .*MySQL and .*PostgreSQL tests in an isolated thread

Similar to [1], this patch moves the PostgreSQL tests to a second
test execution step, where all tests are executed with one single
worker, avoiding any parallel execution on the SQL tests.

[1]https://review.opendev.org/c/openstack/neutron/+/834746

Closes-Bug: #1980127
Related-Bug: #1962594
Change-Id: I3a9f665653c3e2a5f75175867a45391e6ad01176"
753fbff11bb7500db4293cb79fbf3d7cb0b2b121,2022-06-29 18:32:14+00:00,"[FT] Ensure ""update_virtual_port_host"" has been called

An OVS DB event once matched, is stored in a cache and processed in
``ovsdbapp.event.RowEventHandler.notify_loop``. The method
``update_virtual_port_host`` is called in the ``run`` method of the
event. Sometimes in the FT execution, the test checks if the
method has been called when the event ``run`` method has not been
executed yet.

This patch adds a short active wait to ensure the event is actually
processed and the method called.

This bug can be easily reproduced if in the
``PortBindingUpdateVirtualPortsEvent.run`` method, a 2 seconds delay
is added:
  import time; time.sleep(2)

Closes-Bug: #1971672
Change-Id: I2e389e3cce70505ce01f03c09b36fa9d55be964a"
d7ba5948ffe4ff4ec760a2774c699774b065cdfb,2022-06-29 18:42:18+00:00,"Replace ""Inspector.from_engine()"" with ""sqlalchemy.inspect()""

Since SQLAlchemy 1.4, the method ""Inspector.from_engine()"" is
deprecated.

This patch is related to [1].

[1]https://review.opendev.org/c/openstack/neutron/+/808103

Related-Bug: #1943155
Change-Id: Ic26da2e20c0878204cf9565e173b4825cb36f34c"
1bfbc33ce0390ee180cba4ef691b6f584aa63e29,2022-06-30 19:41:33+02:00,"ovs: handle segmentation ids per network ports

This is changing the datastructure that maintains the relationship
between ports and networks to also handle the segmenation ids related.

This will be necessary in future to support multiple segments per
networks on a same physical provider network.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Iaf40ddc20692a3a51a8d5f5acfc2094b2d5c00c4"
d3f711e7f6cf644dd616e7b241c2c6fe90a73fc8,2022-06-30 18:58:09+00:00,"[sqlalchemy-20] Add the needed DB context decorators in ``ml2.plugin``

The method ""_handle_segment_change"" was handling the network DB object
outside a DB writer context.

Closes-Bug: #1980346
Related-Bug: #1976357
Change-Id: Ic79ad0f8e7fa1d55328e2315d87a3950fdb82258"
6c92d7a3076cb58bfcc393ff7be4f37bc9cca81c,2022-06-30 19:55:21+00:00,"[sqlalchemy-20] Remove unnecessary DB context

All ""reserve_provider_segment"" implementations create their own
DB contexts, if needed.

Related-Bug: #1976357
Change-Id: Ic5c8a80f1dc0bebbd117ad9b56365e8c606c112d"
f879d1f9578739bb3c5c362def665d9ca354b3f5,2022-07-01 05:39:14+00:00,"Revert ""[fips jobs] blacklist AttachInterfacesTestJSON tempest test""

This reverts commit a1384678b88fc7ffb5eeccfbfc0da16a9cb8910a.

Reason for revert: https://bugzilla.redhat.com/show_bug.cgi?id=2092856 fixed in libvirt-8.4.0-3.el9 and available in CentOS 9-Stream.

Change-Id: I2f33543fa7ee65ce3d25f70af49a18b69f799aec
Related-Bug: #1979047
Related-Bug: rhbz#2092856"
e39011c73396af68fe5002cdbe4c6b3fe8b7cf23,2022-07-04 11:09:23+02:00,"Use common wait_until_ha_router_has_state method everywhere

In the L3 functional tests framework module there is already helper
method called wait_until_ha_router_has_state which should be used to
wait for desired HA router's state.
This method has proper debug logging added so debugging issues in CI is
easier when it's used.
It is also decorated with unstable_test decorator to skip tests when
router will fail to transition to desired state (see related bug for
details).

In some tests this method wasn't used so we couldn't benefit from the
logging and unstable_test decorator there. Now it should be unifed and
used everywhere in the same way.

Related-Bug: #1956958
Change-Id: I9d79b123bb20ded327208d84a14d4f8d2e505087"
8b0a34a5857ab2a1fbb9a05db9a01ec4173164c3,2022-07-05 15:05:14+00:00,"Report ExternalDNSOverQuota exception for zone quota error

This bug was previously fixed for recordsets, but can also fail
when creating zones.

Closes-Bug: #1980673
Related-Bug: #1923700
Change-Id: Icef3eab6a27f3b8950a7877de0d387e668a067ad"
308924e5fb65359a6ccd6c0a6a26d7fda48aebee,2022-07-07 06:04:57+00:00,"Remove workaround for LP#1767422

Since [1] and [2], the workaround done in [3] is no longer needed
because we set the port tag when is bound and fixed the VLAN tag
setting.

[1]https://review.opendev.org/c/openstack/neutron/+/819567
[2]https://review.opendev.org/c/openstack/neutron/+/820897
[3]https://review.opendev.org/c/openstack/neutron/+/566864

Closes-Bug: #1980126
Related-Bug: #1767422

Change-Id: Iee35cde7bbfee0e809cf71c4542dfbdefc97209f"
31a15fdd6d7b52415ca250a63b31bf841564e92a,2022-07-08 10:16:08+02:00,"[sqlalchemy-20] Remove retry decorator from update_floatingip_status

L3_NAT_dbonly_mixin.update_floatingip_status is called from methods
which are decoarted with retry decorator or from within a db context.
As update_floatingip_status also called from OVNL3RouterPlugin added a
utility method, update_floatingip_status_retry with decorator to avoid
retrying OVN methods, and added CONTEXT_WRITER here also as other calls
of update_floatingip_status from l3_rpc for example uses CONTEXT_WRITER.

Change-Id: Ifdb008c2402aa24766cbd30dd53458599076c955
Closes-Bug: #1980721"
2a44898119ad6e9de63c242440549ff40c5feeb0,2022-07-08 14:28:42+00:00,"Merge ""Remove workaround for LP#1767422"""
82d14eee6126b862fbfc1f5085c07940fb9d8ebe,2022-07-09 17:50:06+00:00,"QoS minimum bandwidth documentation: OVN backend

Updated documentation about minimum guaranteed bandwidth support
for OVN backend. This mech driver is capable of informing the
Placement API about the bandwidth resources of each chassis and
schedule a port depending on the minimum bandwidth rules applied.

This patch also updates the document pointing to the new
``resource_requeste`` blob passed to Nova with the information of
the requested resources of each port.

Related-Bug: #1578989
Change-Id: I75401fa64e1ccd814aa485a74b38092849ff2a18"
357ee21d12d0af6c64ba60f541ab61d44cd6d00f,2022-07-11 14:19:54-04:00,"Remove import of 'imp' module

Use importlib.util module instead of imp, since it's
being deprecated:

  DeprecationWarning: the imp module is deprecated in favour of
  importlib; see the module's documentation for alternative uses

Had to change test setup to call super() first to get around a
config issue I was seeing locally, causing the entire class of
tests to fail:

  oslo_config.cfg.NoSuchOptError: no such option api_extensions_path
  in group [DEFAULT]

Closes-bug: #1981077

Change-Id: Ic171028a661c3f9f83f6758a57aaeab4450aa907"
9e7d0165ad60617bb65d00d614b25e96780148b9,2022-07-14 13:08:56+02:00,"Doc: make the contributor guide more visible

As we discussed on the team meeting we should make the life of new
contributors easier.
One easy thing is to make the contributor guide more visible by linking
it from README.rst not just from CONTRIBUTING.rst.

[1]: https://meetings.opendev.org/meetings/networking/2022/networking.2022-07-05-14.00.log.html#l-56

Change-Id: I6c211ed6c4fb8efb3230ab6c48fc1039738a5a15"
ea223072841adc3fb88b840b5f8018bff60c8aa7,2022-07-14 15:31:23-05:00,"Add workaround for eventlet.greendns bug

Issue[1] workaround: A wrapper class which determines if socket module
was eventlet patched and request std lib socket module instead.
Also adding LOG.warning into the exception block so we dont miss
issues like this in the future.

Closes-Bug: #1980967
Related-Bug: #1926693

[1]https://github.com/eventlet/eventlet/issues/764

Change-Id: I41c4cbc1aaea95f7808e6c6dca47ecd0402351c9"
c5807cbcf5aca795d4c2eac3a15136bd3ad96986,2022-07-15 16:33:09+01:00,"update neutron-linuxbridge-tempest for bug 1980948

change Ib18efa3f472736b58c8967847b1061da0e3897d7
made linuxbridge an experimental feature but
it did not enable linuxbridge in the linuxbridge jobs

this job is used by both nova and devstack and perhaps
other project on an as needed basis. As a result
this is causing gate failures in neutron when some files
are modifed such as the netwroking module or vif.py files

This change enabled linux brdige in the base linux bridge
job and removes an old duplicate job defintion since
nova and devstack now use the new name.

Change-Id: I290027fbac47bd1df7bcdd08c405db107ed63db0
Closes-Bug: #1980948"
06ddcaf4368ce054a8d396e70880f7dd1abe0562,2022-07-21 12:10:03+02:00,"Port update will trigger less notifications to the DHCP agents

After port update, DHCP agent will be notified about changes only if
one of the port's attributes related somehow to the DHCP will change.
Such fields are:
* fixed_ips,
* MAC address,
* dns_domain,
* dns_name,
* dns_assignment,
* extra_dhcp_opts.

In other cases there is no reason to send notifications to the agent.
This will results with less notifications to the DHCP agent and less
possibilities to race condition between DHCP and L2 agents while
switching ports from the DOWN to ACTIVE status and sending notifications
to nova.

Closes-Bug: #1982367
Change-Id: If7990bdec435af76ad2e88fd4ea2bc24a255fd5a"
119b82f1b10df50a696e936e80672c7ddb00436f,2022-07-22 07:54:12+02:00,"Test: mock out _check_netfilter_for_bridges in unit tests

_check_netfilter_for_bridges do some calls which are not for unit tests.
Specifically the call for sysctl -N net.bridge seems to be broken with
a recent kernel upgrade on bionic (see the irc log for this discussion
in [1]).
Add OS_TEST_TIMEOUT:180 to tox testenv, this can help to debug such
issues.
During the rootwrap to privsep change some of these mocks were added,
(see [2]) so backporting (before Wallaby mostly) can be done with
caution.

[1]: https://meetings.opendev.org/irclogs/%23openstack-infra/%23openstack-infra.2022-07-20.log.html#t2022-07-20T12:59:32
[2]: https://review.opendev.org/c/openstack/neutron/+/764015/12/neutron/tests/unit/agent/linux/openvswitch_firewall/test_iptables.py

Change-Id: Ic366d67770cc6e19a4412eaf2f1ab53780e98ee8
Closes-Bug: #1982206"
47a0278812499add333497efe15b7fb176203f74,2022-07-27 20:55:23+02:00,"Add a default table in ""ip rule"" command

Now it is mandatory, at least for IPv6 addresses, to define a table
when an IP rule is added. The default table selected is ""default""
(table=253). In any case, all commands calling this method right now are
specifying the table in the kwargs.

Partial-Bug: #1981963
Change-Id: Ia44ac34ca9b91719a86f4d573c9777a4708d69a4"
bd60f0833bb439192140b7d04e0b01a5d63f0bb5,2022-07-28 06:01:18+02:00,"Implement specific tracked resource count method per quota driver

This patch implements a new method specific for each quota driver
class. This method, ""get_resource_count"", returns the current number
of resources created in a project of a tracked resource. A tracked
resource is an instance of ``neutron.quota.resource.TrackedResource``.
This method does not count the current reservations, just the actual
resources created.

This new method, ""get_resource_count"", will be added to the abstract
class ``neutron_lib.db.quota_api.QuotaDriverAPI``.

This patch also fixes ``TestDbQuotaDriverNoLock``, that was using a
plugin inheriting from ``DbQuotaDriver`` instead of
``DbQuotaNoLockDriver``.

Closes-Bug: #1982962

Change-Id: I2707506468cb60d93a4459ea364f1e79faa83838"
6c2d2744d5e841f431ae637624dd5954429f9607,2022-07-28 14:08:16+02:00,"Make iptables rules diff to be case insensitive

MAC addresses in the iptables rules are always added by iptables_manager
with uppercase. It was done like that in [1].
For some reason, iptables on Centos 9 Stream (1.8.7) returns MAC
addresses all in lowercase and difflib library treats such new and old
rules as different ones so iptables manager always tries to remove and
add antispoofing rules which have MAC addresses set.

[1] https://review.opendev.org/c/openstack/neutron/+/184355

Related-Bug: #1976323
Change-Id: I63e78fdd030f063a1b943d481a9cbd98850552d7"
4c9cb83d6b46a6425e603194649a61f51a07a307,2022-08-01 13:08:33+02:00,"Bump revision number of objects when description is changed

""Description"" attribute belongs to the StandardAttribute class from
which many other classes inherits (like e.g. Network, Port or Subnet).
In case when only description of object is updated, revision number of
the object should be bumped but it wasn't the case for all of the
objects. For example updated description of the Network or Router didn't
bumped its revision_number. It was like that because StandardAttribute
object was the only one which was dirty in the session, and as it is not
member of the HasStandardAttibutes class, it was filtered out.

Now, to fix that problem revision_plugin looks in the session.dirty list
for objects which inherits from HasStandardAttibutes class (as it was
before) but also for StandardAttribute objects to bump revision numbers.

Closes-Bug: #1981817
Closes-Bug: #1865173
Change-Id: I79b40a8ae5d594ed6fc875572663469c8b701202"
e0039371f876fe7ca52d4c49c997be0c73b80adf,2022-08-04 08:47:18+08:00,"[ovn]Change LogicalSwitchPortUpdateUpEvent old conditions

Sometimes when creating ports, the status of logical_switch_port
changes from [] to [true]. we should be able to deal with this
situation and ensure that the port is in the active state in neutron.

Closes-bug: #1983530

Change-Id: I99d2a8078dd7acde72b232a5b1de826d7e1d60f3"
a45cebbfcd154fbd94c4625c5092d296959bb829,2022-08-04 09:52:52+02:00,"Avoid unnecessary db calls with l2pop

When processing ports that are incompatible with l2_population,
certain methods do unnecessary db calls to retrieve agent port
info from the db. This info is used only if the processed
port is of the correct network type. The check is done after
the db call, but before the info is used.

This commit moves the check earlier in the method. The db will
be called only when the port is supposed to be set up with the
l2pop.

Closes-Bug: #1983558
Change-Id: I5a83bfce60a933af781b1fd96037c7de6b2b1f38"
edafe03adac24dcc5c7528114209c1d78b9db2e0,2022-08-09 08:19:34+00:00,"[OVN][Placement] Drive binding by placement allocation

Add OVN to the mechanism drivers that support placement allocation.
The choice of the mechanism driver during binding process was
implemented in [1], using the ""port"" information provided by Nova
in ""binding:profile"".

The OVN mechanism driver class inherits from ""MechanismDriver"", that
added the API method ""responsible_for_ports_allocation"". [1]
implements this method for ""AgentMechanismDriverBase"", but OVN does
not inherit from this class, as OVS or SR-IOV mechanism drivers,
because is an agent-less mech driver.

This patch adds the specific implementation to allow the ML2 to
decide if the OVN mechanism driver is responsible for binding the
port given, based on the ""port"" ""allocation"" information and the
OVN Placement information retrieved from the SB DB Chassis
registers [2].

[1]https://review.opendev.org/c/openstack/neutron/+/574783
[2]https://review.opendev.org/c/openstack/neutron/+/801712

Partial-Bug: #1578989
Change-Id: I88376c41c9a46b2c793ad6b3ab8e0baea99b8851"
1957353ef92ec11766a2ce3d29d51afa8d7fdb3e,2022-08-10 02:11:55+02:00,"[OVN] Remove ACLs with remote SG during deletion of SG

When a security group is removed, the rules having this security
group as remote are removed. But the OVN ACL registers related
to those rules are not removed. This patch catches the security
group deletion precommit event to perform this cleanup.

Closes-Bug: #1983600

Change-Id: I6bb84cb748a2f80f2ff640ceeb3223413f7e92c7"
ad3f7a8b7d69c2f5612d04b08f7250a21c4488f9,2022-08-10 08:57:22+08:00,"Clean up db residual record from dvr port

Delete the DVR port record on the node when the router is deleted from
the node. This patch fixes an issue where the DB actions have no context
writer which will actually update nothing duing the following
`delete_distributed_port_binding_if_stale`.
As well as fixing that when the dvr router was deleted from a node,
only the ml2_distributed_port_bindings were cleaned up and not the
ml2_port_binding_levels records for the dvr port.

Remove the last VM under one router in one host, the
ml2_distributed_port_bindings and ml2_port_binding_levels will remain
the record.  So if VMs under one router had spread on many hosts,
and router (router ports) still exists, even there is only one VM under it,
the binding entries will still be equal to amount of hosts where this
router resided before. The result is a large amount of redundant data
in the database, even if some nodes are no longer in the cluster,
there are still records for that node.

Closes-Bug: #1976439
Change-Id: I320ac2306e0f25ff933d8271203e192486062d61"
8bf3eba1014bba4896c4654e932e7f7b8281925c,2022-08-10 09:58:11+02:00,"Migrate ""migrate_names"" to use ""cliff""

Partial-Bug: #1985049
Change-Id: Ia03f5c983acd8354adfa2f5f42e6a3e91e940618"
0b20fa66b7bc321e6be1475ffa8856eb043064df,2022-08-10 09:59:32+02:00,"Migrate ""download_gerrit_change"" to use ""cliff""

Partial-Bug: #1985049
Change-Id: I3bf3f80967ccffc02f3b937725c7363461dab29f"
982c22dd46bb651c4c5c614262f1a9d68a96cd70,2022-08-10 09:44:55+01:00,"[OVN] Fix updating network segmentation ID

The ML2/OVN driver wasn't handling updates to the segmentation ID for a
given network. This patch fixes this problem.

This patch extends the _update_segmentation_id() method to check on
drivers which does not inherits from AgentMechanismDriverBase, which
is the case of OVN (which inherits from MechanismDriver). A new method
is now called for those drivers to get a list of supported VIF types,
called get_supported_vif_types().

Closes-Bug: #1944708
Change-Id: Ibe08bfbc2efc55b9d628cdd0605941b7486186b6
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
812ef0306f09dd420b70c151ca3165eccba28ec8,2022-08-10 17:15:04+02:00,"``Session.autocommit`` parameter is removed

Since [1] (in oslo.db>9.1.0), the ``Session.autocommit`` member
is removed and should not be considered. This patch removes this
dependency while keeping backwards compatibility. This code will
be removed in future releases.

Due to the neutron-lib dependency, this patch bumps the needed
library version to 3.1.0.

[1]https://review.opendev.org/c/openstack/oslo.db/+/804775

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/851193

Closes-Bug: #1982818
Change-Id: Ibfcf9d5f6cd805f2d64fcd88049e2b43fedc3497"
800f863ccc502b334cb2dd79ec54066440e43e27,2022-08-10 19:27:52+02:00,"Stop returning unneeded information from ""pyroute2"" method calls

""pyroute2"" methods can include some objects that don't implement
any serialization method (e.g.: ""nla_slot"" [1]). In those methods
that require an output (""get_*"", ""list_*"", etc.), the Neutron
IP library formats the output inside the privsep context only to
contain serializable objects.

However this library is also returning the blobs returned from
the ""pyroute2"" library, without parsing and formatting, from
methods that don't require an output (""set_*"", ""add_*"", ""delete_*"",
etc.). This patch removes the ""return"" statement from those methods
because the output is not required and to avoid issues like those
reported in the related bug.

[1]https://github.com/svinota/pyroute2/blob/8716b9b5c03c96e335cf864547541ff81aff7f60/pyroute2/netlink/__init__.py#L1754

Closes-Bug: #1986644
Change-Id: I491dbdabfda0ca010ca56355b71dfe150ed71a71"
846737dac4acb0fd47fb20058663513c4e054ee6,2022-08-12 00:58:17+02:00,"[OVN][QoS] Add minimum bandwidth rule support to ML2/OVN

This patch adds support for QoS egress minimum bandwidth rules in
ML2/OVN. The enforcement is done in the network backend.

Since [1], in v22.06.0, OVN is capable of guarantee a minimal
bandwidth for a logical switch port. The enforcement of this rule
is done in the physical bridge interface.

[1]https://github.com/ovn-org/ovn/commit/dbf12e5fe1f7ab2acef4152854c239b999b70188

Closes-Bug: #1982951

Change-Id: Ia3831b18463c29f676c253edb64419667b5f2c0b"
eda45de8391597b6f29d76715996755cb1777dd0,2022-08-18 09:59:13+02:00,"[OVN] Try to bind ports only to the ovn-controller agents

Patch [1] added getting ovn agents from the agents cache and check
if agent is alive to bound port to it.
Small issue with it was that it could check e.g. ovn metadata agent from
the host as it was only filtering agents by the host on which they are.

This patch adds filter on the agent_type so only ovn-controller agents
are taken from the cache.

[1] https://review.opendev.org/c/openstack/neutron/+/825428

Related-Bug: #1958501
Change-Id: If065204d7521c480656a22fb078bbe6273b5fc70"
c5b76a8393a21adb87447c925da2ede4a75dd11a,2022-08-18 08:13:56+00:00,"Script to remove duplicated port bindings

A new script to remove the duplicated port bindings was added. This
script will list all ``ml2_port_bindings`` records in the database,
finding those ones with the same port ID. Then the script removes
those ones with status=INACTIVE. This script is useful to remove
those leftovers that remain in the database after a failed live
migration.

""dry_run"" mode is possible if selected in ""[cli_script] dry_run""
boolean config option. The duplicated port bindings are printed in
the shell but not deleted.

Related-Bug: #1979072

Change-Id: I0de5fbb70eb852f82bd311616557985d1ce89bbf"
d237a2a83034fab809517a39dddee15995226131,2022-08-19 20:24:03+00:00,"ovn: Don't fail db sync if new IP allocation fails for metadata

There is a scenario where IP allocation pool is depleted but OVN
metadata port got removed its IP manually. The DB sync script will
attempt to allocate a new IP address if DHCP is enabled in the subnet.
Since the pool has no available IP addresses an exception is raised and
the whole db sync stops.

This patch simply catches the exception, logs and error and continues
syncing other resources.

Closes-bug: #1987135
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>
Change-Id: Iaa7b0d7ceb244a38fddd7676066683bf2ca72341"
3202a5c19ec01dfd38c4471be21002467bc0a0e5,2022-08-23 07:56:52+00:00,"[OVN] Remove session check in ``update_network_postcommit``

Since [1], when a segment is deleted because the network is before,
the segment event handler method ``_handle_segment_change`` does not
call ``_notify_mechanism_driver_for_segment_change`` and thus the
check performed in ``OVNMechanismDriver.update_network_postcommit``
is not needed anymore.

[1]https://review.opendev.org/c/openstack/neutron/+/786373

Closes-Bug: #1739798
Change-Id: I4bb22a0a0a233609a4d23af55a050356049eb214"
8619c104b886517266f5b7ae7d19816aa5764dc0,2022-08-24 17:23:14+02:00,"Allow shared net to be added on router

This will subnets from shared networks to be added on routers using:
$ openstack router add subnet router_id subnet_id

Without this, neutron user must use a multi-router solution, which is
not convenient at all.

Closes-Bug: #1975603
Related-Bug: #1757482

Signed-off-by: Arnaud Morin <arnaud.morin@ovhcloud.com>
Change-Id: I50f07d41428e57e6bed9be16980a6c605b7d130e"
bbefe5285e7ab799422fab81488f57c9c22769b6,2022-08-25 16:48:45-04:00,"Allow operator to disable usage of random-fully

In some specific use case, the cloud operator expects the source port
of a packet to stay the same across all masquerading layer up to the
destination host.   With the implementation of the random-fully code,
this behavior was changed as source_port is always rewritten no matter
which type of architecture / network CIDRs is being used in the backend.
This setting allows a user to fallback to the original behavior of the
masquerading process which is to keep the source_port consistent across
all layers.  The initial random-fully fix  prevents packet drops when
duplicate tuples are generated from two different namespace when the
source_ip:source_port goes toward the same destination so enabling this
setting would allow this issue to show again.   Perhaps a right approach
here would be to fix this ""racey"" situation in the kernel by perhaps
using the mac address as a seed to the tuple ...

Change-Id: Idfe5e51007b9a3eaa48779cd01edbca2f586eee5
Closes-bug: #1987396"
b534de966ba8f0b9362a77d1024cf7ef230c9ff1,2022-08-26 08:45:09+08:00,"[api]adds port_forwarding id when list floatingip

if we list floating ip and want to operate a port forwarding, we cannot
call the update 'port forwarding' api, because we don't know the port
forwarding id.
this patch adds the port forwarding returned contents: 'id' and
'internal_port_id' when list floatingip.

Closes-bug: #1971646
Depends-On: https://review.opendev.org/c/openstack/neutron-tempest-plugin/+/840584

Change-Id: Ie1d9169cd07547491144776311d77d49b483d5ae"
1b8d794a359641f33928490e3a288e1ab49a61f7,2022-08-29 12:44:14+02:00,"Format the protocol number to be passed to pyroute2

When a new IP route is created, before passing the route protocol,
find if it is a string and if this string is on the pyroute2 defined
protocols. In this case, pass the protocol number.

In the same way, when the IP route is returned, if the protocol is a
number, convert it to the corresponding protocol string.

Closes-Bug: #1988037
Change-Id: I4ca66d86705a55b2b63083c229629c16b6136283"
91f0864dc0ccf0f67be7162f011706dbc6383cb3,2022-08-31 23:20:37+02:00,"Add an active wait during the port provisioning event

In ML2/OVN, during a live-migration process, it could
happend that the port provisioning event is received before
the port binding has been updated. That means the port has
been created in the destination host and the event received
(this event will remove any pending provisioning block). But
the Nova port binding request has not arrived yet, updating
the port binding registers. Because the port is considered
""not bound"" (yet), the port provisioning doesn't set the port
status to ACTIVE.

This patch creates an active wait during the port provisioning
event method. If the port binding is still ""unbound"", the method
retries the port retrieval several times, giving some time to the
port binding request from Nova to arrive.

Closes-Bug: #1988199
Change-Id: I50091c84e67c172c94ce9140f23235421599185c"
6ec0bc70a7907ab2d83d1dfe0b177ddf17c79d61,2022-09-01 14:48:08+02:00,"ovs: make vlanmanager to handle more vlan mapping per network

This change is updating the vlanmanager data structure to handle for a
given network more than one vlan mapping. This is a prerequisite work
needed to progress on accepting several segments per network per
host.

The work done here is trying to avoid changing logic in the
current implementation. Unit test should not have value updated,
but probably signatures changed.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Ic3c147136549b17aea0fe78e930a41a5b33ab9d8"
7a1e253851dfb9b46cf7734f5a58a5a859b7c984,2022-09-01 14:48:54+02:00,"ovs: use a local vlan per network/segmentation

This is using changes introduced before to support for a network more
than one vlan.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Ifd61e379c3cef3589803c96a276da9827051f660"
7ceb935da82ee5dbc1960b83d08d4287ce663bf0,2022-09-01 14:48:54+02:00,"dhcp/rpc: retrieve network details with segments

When segment plugin is enabled, we should return segments details as
they are part of network.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I1dab155bc812f8764d22e78ebb7d80aaaad65515"
81853192480c4d011e452cccbe8a15f56a48689d,2022-09-01 14:48:54+02:00,"utils: add option to generate dhcp device id per segmentation

This will be used in future when dhcp will handle different
segmentation ids.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Ie005285ed667041732950a6aa226b8151d608afe"
cd475f9af898b81d98b3e0d3f55b94ea653c193c,2022-09-02 11:26:40+02:00,"Retry connections to Nova

Sometimes Neutron is failing to send notification to Nova
due to timeout, refused connection or another HTTP error.
Retry send in those cases.

Closes-Bug: #1987780
Change-Id: Iaaccec770484234b704f70f3c144efac4d8ffba0"
6db791ac0fde866a61d8cfbf9679dbd02d327635,2022-09-02 12:09:20+02:00,"ml2/mech: bind port on segment that subnet belongs

If subnet is attached to a segment we want to endure that the bind
will happen on it.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I56b22820d29b2d57faf28a2f9b685ab0b2c924b4"
01fc2b9195f999df4d810df4ee63f77ecbc81f7e,2022-09-02 10:57:33-04:00,"Do not allow a tenant to create a default SG for another one

The attempt to list security groups for a project, or any
random string, can create a default SG for it. Only allow if
privileges support it.

Closes-bug: #1988026

Change-Id: Ieef7011f48cd2188d4254ff16d90a6465bbabfe3"
d600b3d433a06446abeacfb4c5de6a88774e75de,2022-09-06 18:45:45+08:00,"Forbid enable ndp proxy when external netwrok has no IPv6 address scope

In neutron, user can create multiple ports with same IPv6 address if
the network has no IPv6 address scope. This maybe result in some
security issues.

This can be exploited by a malicious tenant via creating a subnet with
a prefix that covers an address that is already in use and take over
(part of) the traffic flowing towards that address. The success of the
attack depends on winning the race of who answers the NDP query first,
but still a 50% chance of capturing traffic seems dangerous. The attack
works not only against other addresses served by NDP proxy, but also
against other hosts that may exist, potentially even the gateway for
the external network.

So, we should use `IPv6 address scope` to ensure the IPv6 address is
unique when we want to use `ndp proxy` feature.

Depends-on: https://review.opendev.org/#/c/855997
Closes-Bug: #1987410
Change-Id: I0fa431a91a7679e409386a357a01c31ec5ad0cfd"
9db653a9743c8675b834dae40e3c6b27deefdb95,2022-09-08 17:48:28+00:00,"[Functional] Fix tests for oslo.db>=12.1.0

oslo.db 12.1.0 uncovered some issues in functional
tests, Fix:-
- test__get_dvr_subnet_ids_on_host_query by adding a db reader
  context as without it _get_dvr_subnet_ids_on_host_query method was
  returning a query object with an active db context and other
  db transactions can't be executed with an active context.
- test_get_total_reservations_map by adding a db reader context
  for get_total_reservations_map call
- _TestIsSessionActive by calling neutron.objects.network as it looks
  for active session and since now autocommit is False for active
  session we need to have _connections[1] in transaction object.

[1] https://review.opendev.org/c/openstack/neutron/+/843256

Co-authored-by: Yatin Karel <ykarel@redhat.com>

Closes-bug: #1989057
Change-Id: Ic0b91f03b4eea817fa130e28236d7e007b481e30"
9ff46546cb36ab93504ae733f273394d5ccd9be4,2022-09-09 09:03:45+02:00,"Cleanup fanout queues on ovs agent stop

Previously when a neutron-openvswitch-agent was stopped it left
behind the following fanout queues in rabbitmq:
neutron-vo-Network-1.0_fanout_someuuid
neutron-vo-Port-1.1_fanout_someuuid
neutron-vo-SecurityGroup-1.0_fanout_someuuid
neutron-vo-SecurityGroupRule-1.0_fanout_someuuid
neutron-vo-SubPort-1.0_fanout_someuuid
neutron-vo-Subnet-1.0_fanout_someuuid
neutron-vo-Trunk-1.1_fanout_someuuid

In this change we ensure that all but the SubPort and Trunk fanout
queues are correctly removed from rabbitmq by cleanly stopping the
RemoteResourceCache when the agent stops.

Partial-Bug: #1586731
Change-Id: I672f9414a1a8ed91e259e9379ca707a70f6b4467"
2402145713bb349a9d1852b92e2b37a56f26874b,2022-09-09 09:03:45+02:00,"Cleanup fanout queues on ovs agent stop (part 2)

As a followup from the previous commit we here now also cleanup the
SubPort an Trunk fanout queues.

Closes-Bug: #1586731
Change-Id: I047603b647dec7787c2471d9edb70fa4ec599a2a"
76578393ab401a33084921c4355af8e82c5d02ee,2022-09-09 08:28:12+00:00,"Reset device namespace when adding to the namespace fails

In case when during adding device to the namespace, device will be ""shy""
and will disappear for a moment and NetworkInterfaceNotFound exception
will be raised, we need to reset device.namespace to be None.
Otherwise, in the next attempt of adding interface to namespace, when it
will be added back to ovs (and will be in global scope), Neutron will
already look for it in the ""namespace"" and that will always be failing.

Closes-bug: #1961740
Change-Id: Ie9331c72c44084b0a382598c3359214cce2f2ebd"
fb7d937adae140520dae94a47d696ce202479ab5,2022-09-14 22:13:03-05:00,"Fix indentation issue in wait_for_change override

The ovsdbapp.backend.ovs_idl.idlutils.wait_for_change method was
overriden in Ia9e23113fdeebf0b99085da200c3d61b71567d36. Unfortunately,
and indentation error was introduced which rendered the method as a
NoOp if a seqno was passed to it.

Closes-Bug: #1989646
Change-Id: I9d8db215ba19ea88bc615b7b30084113a3c953d4"
075fb6b87476080e7a02d1aa882591ec51eaaa66,2022-09-15 12:30:52+05:18,"[Unit] Temporary mark test_delete_expired as unstable

test_delete_expired unit test is randomly failing since
oslo.db-12.1.0 release and impacting patches merge, Until
we have a fix for it let's temporary mark it as unstable.

Related-Bug: #1988604
Change-Id: I466de88475d42c075f68fba79fd580e794c6f6e6"
a765b7acbb3633245bca8d6e00c64c03b2384661,2022-09-20 09:56:31+00:00,"[sqlalchemy-20] Add py39 oslo master to experimental

In order to quickly detect new changes or errors with the latest oslo.db
library, this patch adds the ""openstack-tox-py39-with-oslo-master"" CI
job to the ""neutron-experimental-jobs"" queue.

Related-Bug: #1988604

Change-Id: Ic8fc6d8701fe17ebd870f57df83f21c110b73849"
9eddb132b2f1828cb36c6b5409b64ec54c2cc7ac,2022-09-20 10:54:36-05:00,"Fix openstack-tox-py39-with-oslo-master job

DB writer and reader contexts are added to test case [0] to make sure
updates are commited to DB before testing if objects have been deleted.

[0] neutron.tests.unit.objects.test_quota.ReservationDbObjectTestCase.test_delete_expired

Change-Id: I7d3b940db867d97712b6d9de90920dca7c3c23eb
Closes-Bug: #1988604"
e9b5a27001614836fcf8297dd8510d144816bd02,2022-09-21 12:18:20+02:00,"Use ""OVNMechDriver"" instance in ""TestOvn[Nb|Sb]IdlNotifyHandler""

The test classes ""TestOvn[Nb|Sb]IdlNotifyHandler"" now use the
""OVNMechDriver"" instance to create the ""OvnNbIdl"" instance, that
is stored in ""self.mech_driver"", instead of ""self.driver"".

Closes-Bug: #1990374
Change-Id: Ieef6c8a02ca0cf85bc72b9f7d09b46dbd0e073be"
819a1bb3e6f3b10a1887e2ef836c138e02f8b996,2022-09-21 13:12:41+02:00,"Move the ""ovn_hash_ring"" clean up to maintenance worker

The ""ovn_hash_ring"" procedure to clean up the stale/old registers
is now executed on the ``HashRingHealthCheckPeriodics`` class, tha
is executed on the ``MaintenanceWorker`` process.

In a HA scenario, if several servers are rebooted at the same time,
the ""ovn_hash_ring"" clean up operation can clash with API worker
method ""_load_hash_ring"", that executed a SQL read from this table.
In some high loaded environments, if the OVN database takes time
to be locally cached, this read operation is executed thousand of
times; basically any time an OVN database event occurs.

In order to avoid/skip a deadlock when deleting the ""ovn_hash_ring""
table, this clean up is executed in a periodic task. If this task
succeeds, the task is stopped. If the task raises a database
exception, it is processed again.

Now the ""ovn_hash_ring"" registers are retrieved using the
""created_at"" time as a filter. The initial time is taken when the
OVN mechanism driver is initilized, before any API worker is spawned
and any new ""ovn_hash_ring"" register has been created (an API
worker, when started, will create a new ""ovn_hash_ring"" register).
Any stale/old register stored in this table will be ignored; that
means any register created before the OVN mechanism driver was
started.

Closes-Bug: #1990174

Change-Id: I07c4cb6e20b8a84e4ace7a8e34555aced5b5da9f"
41a7479d0f93ec2ff5019a1bfdc891dda5078d65,2022-09-21 18:26:39-05:00,"Handle several dhcp agents for metadata over ipv6

[0] added the capability to the dhcp agent of handling metadata traffic
over ipv6. However, the added code doesn't handle the case when a
network is managed by more than one dhcp agent. This change fixes the
issue.

[0] https://review.opendev.org/c/openstack/neutron/+/715482

Change-Id: Ie1e0739f2c7390031af196e72c678ee626d0f8b8
Closes-Bug: #1989979"
2f0919f7df9a7e6a7e22c428e40f324fff88ef24,2022-09-23 10:18:46+00:00,"Accept a port deletion with missing port binding information

If the database ""port"" child register ""ml2_port_bindings"" has been
manually deleted from the database, now is possible to delete the
Neutron Port resource (that implies the ""port"" database register and
all other child registers)

Before this patch, the port deletion CLI command succeeded (no exception
was raised) but the Port resource was not deleted.

Closes-Bug: #1988323
Change-Id: I02de276d0cd8e4ae27355d4aee5f48e92634f318"
178ee6fd3d76802cd7f577ad3d0d190117e78962,2022-09-27 17:06:44+02:00,"[Trunk] Update the trunk status with the parent status

After a trunk VM has been migrated the trunk status remains
DOWN, After the parent port is back to active modify the trunk
status.

Closes-Bug: #1988549
Change-Id: Ia0f7a6e8510af2c3545993e0d0d4bb06a9b70b79"
21491efd9f8ce6df98cb58c26da7896d75cb4a8b,2022-09-29 00:41:01+02:00,"Port provisioning should retry only for VM ports

The port provisioning method ``Ml2Plugin._port_provisioned`` creates
an active wait to provision a port if the port is unbound since [1].
But this active wait should consider only VM ports in the case of
live migration, as described in the LP bug [2]. This wait should
not consider auxiliary Neutron ports or baremetal ports (we don't
live-migrate then).

[1]https://review.opendev.org/c/openstack/neutron/+/855257
[2]https://bugs.launchpad.net/neutron/+bug/1988199

Closes-Bug: #1991092
Change-Id: Ic8891e2deef4bb5e72cf7d7f37b043e936adbc00"
7b15ad94339fd59785f409eb7903ddd08a55cfa7,2022-09-30 04:23:26+02:00,"Bump minimum OVN version to v21.06.0

Bumped minimum OVN version of ""neutron-ovn-grenade-multinode"" job
to v21.06.0

Now ""neutron-ovn-tempest-ipv6-only"" and ""neutron-ovn-rally-task"" will
use this specific verison too, instead of using the default OS package
(in Ubuntu 20.04, the released package is v20.03.2).

Related-Bug: #1990229
Change-Id: I077a8409773ca4ad057cb45d446971a2c3a3703f"
f8fa909444cf87d55819fa9dbc45ed77cff7b845,2022-09-30 04:37:35+02:00,"Since OVN 20.06, config is stored in ""Chassis.other_config""

Since OVN 20.06 [1], the OVN configuration is stored in
""Chassis.other_config"".

Since OVN 22.09, the ""Chassis"" configuration stored in
""Chassis.other_config"" will not be replicated to
""Chassis.external_ids"".

This patch replaces any reference to ""external_ids"" when
retrieving the Chassis configuration. That means Neutron
no longer supports OVN versions below 20.06.

[1]https://github.com/ovn-org/ovn/commit/74d90c2223d0a8c123823fb849b4c2de58c296e4
[2]https://github.com/ovn-org/ovn/commit/51309429cc3032a0cb422603e7bbda4905ca01ae

Closes-Bug: #1990229
Change-Id: If379cefb66a262318858e1cea6503aa3a56ba956"
a8a43c80455dac21651c5240dfdaa4acec49d6c9,2022-10-01 15:35:43+02:00,"Execute ""IpMonitorTestCase"" tests always inside a namespace

To improve the execution isolation of ""IpMonitorTestCase"", the test
cases will be executed inside a network namespace only.

Closes-Bug: #1991798
Change-Id: I69200f8236e65ea50d1ad3ac322441554634c9c3"
d7b44f7218ff665045adb923b1aa92c35b371af9,2022-10-01 22:13:37+02:00,"Allow to pass EUI64 IP address as fixed ip for the port

When port with IP address from the auto allocation subnet (SLAAC or
dhcp_stateless) is created or updated and fixed IP address is specified,
Neutron will fail as in case of such subnets IP address is assigned
automatically based on the subnet's prefix and port's MAC address.
But in case when given IP address is actually correct EUI64 generated IP
address (the same as Neutron would generate for that port) there is no
need to raise an exception and fail request.

Additionally this patch fixes imports sections in the
ipam_pluggable_backend module.

Closes-bug: #1991398
Change-Id: Iaee5608c9581228a83f7ad75dbf2cc31dafaa9ea"
536498a29a4e7662a4d0b1bb923e2521509ad77a,2022-10-04 02:06:14+02:00,"Since OVN 20.06, config is stored in ""Chassis.other_config""

Since OVN 20.06 [1], the OVN configuration is stored in
""Chassis.other_config"".

Since OVN 22.09, the ""Chassis"" configuration stored in
""Chassis.other_config"" will not be replicated to
""Chassis.external_ids"".

The ML2/OVN plugin tries to retrieve the ""Chassis""
configuration from the ""other_config"" field first; if this
field does not exist (in OVN versions before 20.06), the plugin
will use ""external_ids"" field instead. Neutron will be compatible
with the different OVN versions (with and without ""other_config""
field).

[1]https://github.com/ovn-org/ovn/commit/74d90c2223d0a8c123823fb849b4c2de58c296e4
[2]https://github.com/ovn-org/ovn/commit/51309429cc3032a0cb422603e7bbda4905ca01ae

NOTE: this patch is similar to [1], but in this case neutron keeps
compatibility with the different OVN versions (with and without
""other_config"" field). Since [2], the Neutron CI has a new job that
uses the OVN/OVS packages distributed by the operating system
installed by the CI (in this case, Ubuntu 20.04 and OVN 20.03).

[1]https://review.opendev.org/c/openstack/neutron/+/859642
[2]https://review.opendev.org/c/openstack/neutron/+/860636

Closes-Bug: #1990229
Change-Id: I54c8fd4d065ae537f396408df16832b158ee8998"
50eee19723b2d762c2b5653e7a2c75e470f44cdf,2022-10-04 02:15:58+00:00,"ovn: Use ovsdb-client to create neutron_pg_drop

Previously we used short living OVN database connection to create
neutron_pg_drop Port Group before workers were spawned. The
pre_fork_initialize actually happens after the api workers are spawned
anyways and it blocks spawning of other workers, such as maintenance,
rpc or periodic. If the OVN database was large it may take several
minutes to connect to the database at scale and this blocks spawning of
other workers. That means connecting to OVN in pre_fork is not a good
idea.

This patch replaces the mechanism by using ovsdb-client to send a
transaction without connecting to the database and downloading the whole
content. The command does following, everything is on the server side:

 1) With timeout 0 it waits for neutron_pg_drop Port Group. If the PG is
    present, the transaction finishes and nothing happens.

 2) If the PG is not present, it times out immediately and commits new
    entries that effectivelly creates neutron_pg_drop Port Group with
    implicit ACLs to block ingress and egress traffic.

Closes-Bug: #1991579
Co-Authored-By: Terry Wilson <twilson@redhat.com>

Change-Id: I27af495f96a3ea88dd31345dbfb55f1be8faabd6"
f43891bf866b65ceef0e51633afbbf57ee2a6be8,2022-10-05 14:22:53+02:00,"[OVN] Allow to execute ``MetadataProxyHandler`` in a local thread

If configuration option ""metadata_workers=0"", the OVN metadata agent
will try to spawn the ``MetadataProxyHandler`` instance inside a local
thread, instead of creating a new process. In this case, the method
``MetadataProxyHandler.post_fork_initialize`` is never called and the
SB IDL is never created.

This patch passes the OVN metadata agent SB IDL instance to the proxy
handler instance. This also reduces the number of OVN database active
connections.

Closes-Bug: #1993181
Change-Id: If9d827228002de7e3a55be660da266b60b0dfb79"
229d798a45c964783551cd61d7031698d452f72a,2022-10-05 17:36:25+02:00,"[OVN] Allow only one physical network per bridge

Since [1], OVN allows only one physical network per bridge,
same as other ML2 plugins (OVS, Linux Bridge). The rule ""one
network, one bridge"" is present in OVN too.

This patch fixes a small leftover in the ML2/OVN code.

[1]https://review.opendev.org/c/openstack/neutron/+/823568

Related-Bug: #1956476
Change-Id: I955f2430ad1d817966ac49f33741f1d4452d1f76"
34b81ae9b7eecf8be09e0147650110e05add5c40,2022-10-05 19:46:29+02:00,"Remove OVN gap minimum bandwidth support

Since [1], ML2/OVN mechanism driver supports minimum bandwidth
QoS rules. This support was implemented in OVN v22.06.0.

[1]https://review.opendev.org/c/openstack/neutron/+/842292

Related-Bug: #1982951
Change-Id: I52fd399ff9580df3e30d3aa66b3f54882897e6cf"
70a2029ca1309ef4a784d2f08f5b5f4bc69617a6,2022-10-05 21:41:24+02:00,"[OVN] Set the default OVN metadata worker number to 0

If the configuration variable ``metadata_workers`` is not set,
the default value for ML2/OVN mechanism driver will be zero.
This value defines the number of separate workers that will
be spawned by the OVN metadata agent. By default, the OVN
metadata proxy handler will be executed inside the same OVN
metadata agent process, in a parallel thread. That reduces the
number of OVN SB database connections to one.

Related-Bug: #1993181
Change-Id: I8bc4f2784ccefe6078506bc27cc7a98c48192ad2"
7b8b797dea2514328b3f72cd1ad23ebb915d6cad,2022-10-06 07:36:27+02:00,"Load the required configuration options in the UT classes

Some test classes are not loading the required configuration options
during the setup process. That prevents from launching thoses tests
or classes individually. This patch solves this issue by importing the
required options in the ""setUp"" test class method.

Closes-Bug: #1993502
Change-Id: I79bf7fa85c7b29fa37f81feb51f3eb68cef3bdee"
1920f2a4e37b7073ef1a195d9d9213ed31bb128e,2022-10-06 07:38:01+02:00,"Add new oslo master CI jobs to the periodic queue

Added three new jobs:
* neutron-functional-with-oslo-master
* neutron-ovs-tempest-with-oslo-master
* neutron-ovn-tempest-ovs-release-with-oslo-master

These jobs will be executed in the ""periodic"" queue and will test the
Neutron repository with the oslo libraries installed from source
(master branch).

Closes-Bug: #1993498
Change-Id: Ie89a623a81642ab900a0ddb4c254319f6dcf049d"
240f2c6aebb5a958e3cdea9b9188e7f605238494,2022-10-06 08:59:43+01:00,"Split Hash Ring probing from the maintenance task

This patch split out the Hash Ring probing out of the maitenance task
into it's own thread. The idea is to speed up the start of probing by
doing it right after adding a node to the Hash Ring.

By doing that, we avoid the problem of delaying probing in case the
connection with OVSDB takes longer than expected to connect and the hash
ring nodes are considered dead as they weren't probed in time.

The patch re-uses the same classes as before to start this new thread
(instead of reusing the maintenance task thread). It adds a layer of
synchronization with a lock to make sure that only one new Hash Ring
probing thread is started.

Closes-Bug: #1991655
Change-Id: Ic04493f20eb9aecda563942c51f343dc4202523a
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
628442aed7400251f12809a45605bd717f494c4e,2022-10-06 15:00:06+02:00,"Spread OVN metadata agent heartbeat response in time

To avoid mass response of OVN metadata agents on
heartbeat update - event on OVN Southbound
SB_Global table nb_cfg entry increment, this patch postpone
Chassis/Chassis_Private table update for random number
of seconds in range of ( cfg.CONF.agent_down_time // 2 ).

Related-Bug: #1991817
Change-Id: I6373a3c213b24ec957e4d2ea7fc42524517d10d5"
72dd768a124dd63bab3c00d19cef248c1170d3da,2022-10-06 15:33:06+00:00,"Revert ""Since OVN 20.06, config is stored in ""Chassis.other_config""""

This reverts commit f8fa909444cf87d55819fa9dbc45ed77cff7b845.

Reason for revert:
Because the OpenStack CI OS (Ubuntu 20.04) still doesn't support OVN > v20.03, we need to revert this patch until the CI migrates to Ubuntu 22.04

Change-Id: Iafd0ce629bf3a93454f4e322780d3b2f911363f8
Closes-Bug: #1991962"
4551718badece786f4a22bf7e926612bc3618b1c,2022-10-10 14:24:50+02:00,"Add ""neutron-ovn-tempest-ovs-release"" job to the check and gate queue

This job was run only in periodic queue until now but to avoid issues
like described in the related but, we should have this job run in
the check/gate queues as this is job which almost directly inherits from
the ""tempest-integrated-networking"" defined in the tempest.

Related-Bug: #1991962
Change-Id: I0ceaa9667a9218cb12a0f3b666a68d4bddeb6911"
1d8e3b79dbe9dac3804c06e9182b633fc902d766,2022-10-11 08:56:50+02:00,"dhcp: make device manager to clean only not used devices

This change makes device manager action to clean device a bit smarter
by comparing port registered for a given network with device in live.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I0b6f9b59b94cf05996e4217b5d232b69ad775502"
cb332acb29ec0bc836637098b42ab8692369c6ac,2022-10-11 08:56:51+02:00,"dhcp: add/use cleanup stale devices API

This is adding new API for the dhcp driver to clean stale
devices. Previously it was not necessary since a dhcp port was related
to a nemaspace and when the namespace got deleted, the device was also
removed.

Now with multisegments we can have more than one dhcp port per
namespace based on segmenation id so we should ensure to remove the
stale device.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I4a46b034a5feabb914bc6fd121d68e20278230b5"
b7b8f7c571440577a40aacf9d8d93abc3a5a48b3,2022-10-11 11:08:23+01:00,"[OVN] Avoid deadlock when cleaning hash ring nodes

This patch avoids the clash of the hash ring cleaning operation and the
API workers by ensuring that the cleaning happens before the nodes for
that host are added to the ring and the connections to the OVSDBs (meaning
no events therefore no SELECTS on the hash ring table for that hostname).

This patch does this by re-using the same hash ring lock that starts
the probing thread. Now, the first worker that acquire the lock is
responsible for cleaning the hash ring for it's own host as well as
starting the probing thread. Subsequently workers only need to register
themselves to the hash ring.

Change-Id: Iba73f7944592a003232eb397ba1d4da3dcba5c3a
Closes-Bug: #1990174
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
7c1a894ce5c27a40f527c1a7c5f2d02723de93d8,2022-10-13 14:30:17+02:00,"Nit: network_update in ovs_neutron_agent has a bad LOG

The log entry had %(tag)s but the dict has 'segmentation_id' as key,
so let's change tag to segmentation_id.

Change-Id: Ic6e82a31efe7798c9ec0c5e6bc743db4c280fd1a
Partial-Bug: #1956435
Partial-Bug: #1764738"
c33b47edc77520abcdd7176af1f0ae921bd489b3,2022-10-14 09:58:24+02:00,"Do not keep gateway port when notifying for router update

On router update, skip subnet of gateway router.
This will prevent a massive RPC call toward huge number of L3 agents
(all agents in same big public subnet ID).

As a side effect, it will save CPU time on database because L3 agent
receiving such events are then doing a RPC call (sync_routers) even if
router is not used/deployed on this agent.

Closes-Bug: #1992950

Change-Id: Iafa9d43614d528f230cf034103b54f73303ac815
Signed-off-by: Arnaud Morin <arnaud.morin@ovhcloud.com>"
8fcf00a36dfcec80bba73b63896d806f48835faf,2022-10-16 08:51:16+00:00,"Disable in-band management for bridges before setting up controllers

Disabling in-band management for bridge will effectively disable it for
all controllers which are or will be set for the bridge. This will
prevent us from having short time between configuring controller and
setting connection_mode of the controller to ""out-of-band"" when
controller works in the default ""in-band"" connection mode and adds some
hidden flows to the bridge.

Closes-Bug: #1992953
Change-Id: Ibca81eb59fbfad71f223832228f408fb248c5dfa"
304394ed77cbfedc258a6b2d786dd17120580eee,2022-10-20 07:11:59+00:00,"Revert ""Temporary make rally job non voting""

This reverts commit e9a479519f0b7eb9b6aa86811ad992f9d5626111.

Reason for revert: job is green since fix[1] merged.

[1] https://review.opendev.org/c/openstack/rally-openstack/+/847879

Related-Bug: #1980055
Change-Id: I5a9893c2ee2dc4206348fd4f2a9ce62af7fbe123"
1abb77d7a63cde2aa9640351f663870c14430919,2022-10-21 15:53:13+02:00,"Check subnet overlapping after add router interface

When simultaneous attempts are made to add an interface
to the same router including overlapping networks in cidrs,
both attempts are successful. There is a check to avoid this
overlap but is performed when creating the network interface
and it is done over the ports already attached to the router,
so at this moment the check is not able to detect the
overlapping. Furthermore, the create_port operation over the
ML2 plugin  must be executed in isolated transactions, so
trying to control the execution context or adding additional
steps to the transaction is not feasible.

This patch checks once the RouterPort is created on the
neutron database if there is more than one overlapping port,
triggering in that case the exception that will remove the
the culprit of overlapping.

Closes-Bug: #1987666
Change-Id: I7cec8b53e72e7abf34012906e6adfecf079525af"
01b11df1b5652fbd11f941c008892261714e46a3,2022-10-24 15:35:22+02:00,"Add tempest job which will run on the oldest Ubuntu release

As was discussed in the TC meeting during last PTG [1] we should run
at least one tempest job on the previosly supported Ubuntu version to
make sure that current release can work on older operating system and
that upgrade process can be as smooth as possible for operators.

[1] https://etherpad.opendev.org/p/tc-2023-1-ptg#L428

Depends-On: https://review.opendev.org/c/openstack/tempest/+/861110
Depends-On: https://review.opendev.org/c/openstack/rally-openstack/+/862219
Depends-On: https://review.opendev.org/c/openstack/devstack/+/862479

Change-Id: I8164d76b28904cde88f4de7da08d647f6bd98a10"
d1c2d2c4fee0844f1081ff501a43939cc988c943,2022-10-27 09:30:33+02:00,"dhcp: support multiple segmentations per network

This change makes the DHPC agent to handle multiple segmentation per
network.

For each segmentation a DHCP Process will be started, this has the
benefit to keep the current logic of building a DHCP service per
network domain.

Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I88264ce2303cbaed983d437203232bd1459d58b2"
9e2a0ac058305dd16d6dedb883d305cd162f5fe4,2022-11-07 18:46:30-05:00,"Use --exclude-regex in tox.ini

--black-regex has been deprecated and using it can sometimes
cause failures in the fullstack job.

Change-Id: Iac1d4c4004e1348ced388ee4dd44711f0e27bcc2
Closes-bug: #1995901"
81004125c4592f2378d8434e41ec2db41a42886b,2022-11-11 11:52:27+01:00,"[OVN] Prevent maintenance task fail resource stdattr does not exist

In the maintenance task, the method that fixes the missing or not
updated resources ``DBInconsistenciesPeriodics._fix_create_update``
not won't exit if the resource is not found in the Neutron database.
When the OVN revision number is bumped, now the method retrieves the
resource standard attributes register. If this register does not
exist, that means the resource has been deleted.

The method catches the ``StandardAttributeIDNotFound`` exception and
logs an error.

Closes-Bug: #1996180
Change-Id: Ic47c10ea2ba07347f32f75aa5de3c69e9e261780"
c6a83988eaed4245f14019f6f6e81e96da8a1e06,2022-11-13 19:46:56+01:00,"Replace Linux Bridge with Open vSwitch in installation docs

This patch replaces the Linux Bridge references with Open vSwitch in
the installation manuals.

Closes-Bug: #1996772
Change-Id: Ib63daad7fac52e1e10dca2e98add01d5ee7635a3"
bb2d706107c7be353aa5ebcd1fb735d13d6f6c49,2022-11-14 08:26:10+01:00,"[doc] Metadata service supports IPv6 networks

Metadata service now supports IPv6 networks. This patch removes
this limitation in the documentation.

Related-Bug: #1460177
Change-Id: I1c50aef5e4aa60705f923f399e8d36c37a9d6289"
c5ee9f349548b5bc842054aa26118e205c490aa2,2022-11-14 18:06:20-05:00,"Load the required configuration options in the UT classes

Some test classes are not loading the required configuration options
during the setup process. That prevents from launching thoses tests
or classes individually. This patch solves this issue by importing the
required options in the ""setUp"" test class method.

This is breaking python 3.11 on Debian, not possible to test
in the gate at the moment.

Closes-Bug: #1996527

Change-Id: Ie579df7126ca8d09dbedad8d2254c79ec0d3bc32"
a2090e4cbc4ad8e86c0346a2a6be1a3778a1a06f,2022-11-17 11:42:14-05:00,"Doc: Capitalize keystone domain names

There is an inconsistency for keystone domain names
in the docs, 'default' and 'Default'. Should always
use the latter, 'Default'.

Change-Id: I4487de4e121362a02f839546721f007781f84057
Closes-bug: #1996889"
51827d8e78db4926f3aa347c4b2237a7b210f861,2022-11-15 16:58:26+01:00,"Remove ""test_live_migration_with_trunk"" execution

Removed ""test_live_migration_with_trunk"" test execution from
""neutron-ovs-tempest-multinode-full"" job until LP#1997025 is
fixed.

Related-Bug: #1997025
Change-Id: Id7a0565db9b014e2658002437a2f21facbe47a8f"
ff66ca92755970c88fbb0f347400786089c11c4b,2022-11-16 01:40:03+01:00,"Execute functional test ""test_get_all_devices"" alone

Since [1], the functional tests are being executed in Ubuntu 22.04.
The test ""test_get_all_devices"" is failing frequently, maybe because
other tests are interfering and modifying the root namespace
interface list.

Because this test cannot be executed inside a temporary namespace,
this patch moves the execution of this test to the section of
""concurrency=1"". That will ensure no other test interferes the
result.

Closes-Bug: #1997341

Change-Id: If0631bf0cdfd5f0989c60d40e31f89cee317e497"
c3ebefa5f73e8cb89c3c9c12b385b21e8749299f,2022-11-16 09:32:04+08:00,"Refactor for meter ID Generator

Add a Singleton meter ID Generator for both bandwidth limit
and packet rate limit, because for one bridge the meter ID
is a sharing range.

Closes-Bug: #1964342
Change-Id: Ibb9762d57913ea701dcf2746a0e0db74c6a7ca01"
bf44e70db6219e7f3a45bd61b7dd14a31ae33bb0,2022-11-16 14:14:59+00:00,"OVN: Add support for DHCP option ""domain-search"" for IPv4

Nothing much else, what the title says...

Change-Id: Ib1d41a6e4c869e108f31c1eb604f22c794d66467
Closes-Bug: #1996759
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
c5640eee1164cd88b3d9b01848638eeb57d2efb0,2022-11-17 06:20:05+01:00,"Use the neutron-lib constant for PACKET_RATE_LIMIT table number

In neutron-lib 3.2.0, the table PACKET_RATE_LIMIT changes from 59
to 58. This patch uses the imported n-lib constant instead of a
hardcoded number. That will allow the neutron-lib version bump.
See [1].

[1]https://review.opendev.org/c/openstack/requirements/+/864899

Related-Bug: #1938966
Change-Id: I0929e5ad59bfdd1ec7477adef3a52ec8d25ccfa6"
33de608f04dcc8117eeba63876598dc2ae93013a,2022-11-17 10:39:30+01:00,"Avoid race condition when deleting trunk bridges

Prior to this change, trunk bridges are created by os-vif but deleted
by Neutron when the last vif is removed from it. This creates race
conditions in some use cases, like DPDK with vhostuserclient mode, when
VMs are rebooted. To avoid these races, Neutron will not delete trunk
bridges anymore. Their creation and deletion will be os-vif's
responsiblity. Since [1], Nova uses the os-vif version that contains
this functionality.

This patch also changes the trunk status change event. During a live
migration, when the trunk parent port has been bound to the destination
host (that means there is only one port binding associated) and the
status has changed to ACTIVE, the method triggers the subport binding
to the new host too. This is because there could be a race condition
between the subport binding, triggered by the OVS agent, and the parent
port binding, triggered by Nova. If when the OVS agent tries to bind the
subports, the parent port is still bound to the source host, the subport
binding remains in the source host too, instead of changing to the
destination.

This patch also reverts [2] and [3]. As commented in the previous
paragraph, this patch fixes the issue reported in LP#1997025. The trunk
port live migration with ML2/OVS must be fixed with this patch.

[1]https://review.opendev.org/c/openstack/nova/+/865031
[2]https://review.opendev.org/c/openstack/neutron/+/865295
[3]https://review.opendev.org/c/openstack/neutron/+/865424

Closes-Bug: #1869244
Closes-Bug: #1997025

Change-Id: I4e16357f3ff214fcf41e418982806c24088a2665"
5b64ac90133d77d1615022125aa56890a3e169d9,2022-11-18 01:49:14+01:00,"Use the neutron-lib constant for PACKET_RATE_LIMIT table number (2)

This patch completes the missing bits from [1].

[1]https://review.opendev.org/c/openstack/neutron/+/865590

Related-Bug: #1938966
Change-Id: Ic38280eafaf500cbea4deae9fe2befa012fad861"
2081910d6d942d49d96297884a932ff93acb8759,2022-11-18 08:51:43+00:00,"Always create a ""router_extra_attributes"" register per router

The table ""router_extra_attributes"" is a child of ""router"" table.
Each register contains extra information that completes the router
description. When using ML2/OVS mechanism driver, the methods that
create and populate the ""router_extra_attributes"" register are always
called from the L3 DVR, L3 HA and availability zones extensions.

When using ML2/OVN, those extensions are not loaded and therefore the
""router_extra_attributes"" register is not created.

Despite this register is currently not used in ML2/OVN (it will be in
future features), there are some project expecting the
""router_extra_attributes"" register to be always created (for example,
neutron-dynamic-routing [1]).

This patch enforces the child register creating always when a router is
created. This register is populated with the default values. This new
register does not affect any current operation related to ML2/OVN nor
ML2/OVS.

There is a 1:1 relationship between ""routers"" and
""router_extra_attributes"". The child register is deleted by the database
engine when the ""routers"" register is deleted (ondelete=""CASCADE"").

[1]https://review.opendev.org/c/openstack/neutron-dynamic-routing/+/863713

Closes-Bug: #1995974
Change-Id: Ic546e40513402fa101c9687acce382cd6b84356c"
0ef4f988254457ae460f192a334ccd6776688afb,2022-11-18 16:09:20+01:00,"Remove policy rule for get_network:router:external

In legacy RBAC rules get of the network's router:external attribute was
available for everyone (rule:regular_user). In new S-RBAC rules it was
done to be available for admin users and for PROJECT_READER. This didn't
really had the same result as router:external attribute wasn't visible
for networks which belongs to other project.

Networks which are set to be external are automatically shared with all
other projects and each user from such project should be able to check
every of visible networks if it is external or not.
In overall, extra policy rule for ""get_network:router:external"" isn't
really necessary and this patch removes it.

Closes-Bug: #1996836
Change-Id: I5fe4a0134c6ecf5cf28e2f5d59411134546c98b0"
3093aaab13dd6ba04ef0e686eb4c6cc386c58941,2022-11-18 15:34:04+00:00,"ovn: first tear down old metadata namespaces, then deploy new

While the reverse order may work, it's considered invalid by OVN and not
guaranteed to work properly since OVN may not necessarily know which of
two ports is the one to configure.

This configuration also triggered a bug in OVN where tearing down a port
after deploying a new one resulted in removing flows that serve the
port.

There is a patch up for review for OVN [1] to better handle multiple
assignment of the same port, but it doesn't make the setup any more
valid.

[1] http://patchwork.ozlabs.org/project/ovn/patch/20221114092437.2807815-1-xsimonar@redhat.com/

Closes-Bug: #1997092
Change-Id: Ic7dbc4e8b00423e58f69646a9e3cedc6f72d6c63"
1a9ae924fd8479485b8e6289a3b015c228967097,2022-11-18 18:10:51+01:00,"Add VXLAN support reference in the OVN installation guide

That includes the limitation of ML2/OVN for VXLAN networks to
a maximum of 4096 networks and the explanation.

Closes-Bug: #1998085
Change-Id: I0b0ba353c219a49acd80edecd0997d1f653b0192"
686698284b3553001398f65614c6521359bc45aa,2022-11-21 09:42:35+00:00,"Update tap ip in metadata agent when metadata port ip updated

Update neutron-ovn-metadata-agent, catch port_binding update event
of monitoring localport type, and judge if the neutron:cidrs field in
the external_ids of port_binding table has changed,
then update_datapath.

Closes-Bug: #1996677
Change-Id: Ibdc1b385b07a2ab1ca8e4b6278f6d39fb5839509"
eeff5b3c81ae7846a77c65edaafe58332090a621,2022-11-23 08:43:21+01:00,"db: add segment_index to the unique constraint

For multi segments support we have update the unique contraint so
`segment_index` will be part of it.

Related-Bug: #1791233
Partial-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Ic564131dcd7525fc5f24c3282688e3584cd2e2e0"
e1d70f9cb0fb7c291672f08151ee03f18da49d74,2022-11-23 13:16:18+01:00,"Disable ""test_live_migration_with_trunk"" execution from dvr job

It's follow up for [1] which temporary disabled this test
on other multinode jobs.

[1] https://review.opendev.org/c/openstack/neutron/+/865295

Related-bug: #1997025
Change-Id: I3cb1e709bb6b4f6acea37fce8bec8bb35b3e84aa"
6d8ada0ac93beed05b45adb9582c3ef23bef49d2,2022-11-24 09:17:18+00:00,"[S-RBAC] Allow admin user to do all API requests by default

By default ADMIN user in the new Secure RBAC policies should behave in
the same way as in the legacy rules so basically every API operation for
any project should be allowed for ADMIN user.
In the new rules there are roles like PROJECT_MEMBER and PROJECT_READER
and those personas don't inherits directly from ADMIN which means that
if something is possible to e.g. PROJECT_MEMBER it isn't automatically
also allowed to ADMIN and we need to explicitly allow ADMIN user to do
such requests. It was done like that for many of API calls already but
not for all of them (probably by mistake).

This patch introduces new composite check ADMIN_OR_PROJECT_MEMBER and
uses it in the check strings where ADMIN or PROJECT_MEMBER user is
allowed to use the API.
It also changes some of the check strings which used ""policy_or"" to
combine ADMIN and PROJECT_MEMBER or PROJECT_READER so that those
composite checks ADMIN_OR_PROJECT_MEMBER and ADMIN_OR_PROJECT_READER are
used everywhere.

Closes-Bug: #1997089

Change-Id: Iab5cd6c7aa07ca8527c5fa8396c9ed0da65b4fa7"
499ae9588141b04ab9c6e1ecd421f5cd9af5f447,2022-11-24 16:27:36+01:00,"Bump pecan to fix #1829042

This has a long history [1][2] but at this point we are already using
1.4.0+ versions of pecan so this change is proven to be safe.

[1] https://review.opendev.org/c/openstack/neutron/+/752058
[2] https://review.opendev.org/c/openstack/requirements/+/747419

Change-Id: I9fa0ed8c2170baa98e4dad868e0f614f92f6c7ab
Closes-Bug: #1829042"
2272b9be9515553c41a791b7c7b518696c4a2ebb,2022-11-25 07:46:34+00:00,"Add address scope to the OVN LSP port registers

To be able to filter on the address scope of the ports in the
ovn-bgp-agent we add the address scope of the subnet pool to
each LSP port in the northbound. Northd writes it to the
southbound so the ovn-bgp-agent has access to it. The
ovn-bgp-agent talks directly to the southbound to announce
the networks via BGP that match the configured address scope.

Change-Id: Ieb4cab11068747bd79868c6eb1778aab91447c30
Closes-Bug: #1996741"
f629b77d3c821717333eb740311a33a7a45b0e8d,2022-11-25 16:42:29+01:00,"Fix behaviour of enable/disable in OVN network log

Previously, only the first log object created that associated to a
certain ACL would be able to make changes to the True/False property of
that ACL. This patch makes the driver to take in consideration each log
object created to enable or disable an ACL logging status. A functional
test is added so as to ensure correct behaviour of this feature.

Closes-Bug: #1996780
Change-Id: Ib9663495f30562f79babef163729a0c43812089d
Signed-off-by: Elvira García <egarciar@redhat.com>"
c813b658d0e5e0c00093f90f849fcf67ddca16cf,2022-11-25 19:39:48+01:00,"Fix duplicated routes exceptions

Since the train release neutron adds routes with protocol static.
Keepalived also adds the same routes with different protocols depending
on the keepalived version. This can result in duplicated routes inside
network namespaces. On l3 agent restarts those duplicate routes
then prevent the l3 agent from updating its router state
because it runs into 'RTNETLINK answers: File exists expections'
when it tries to execute 'ip route' commands.

This patch adds the same protocol static to each virtual route of
keepalived's configuration so network namespaces do not run into
duplicated routes anymore.

Closes-Bug: #1956846
Change-Id: Ic35b5d4b9110b832c10345c45ec62c0923237cfd"
895f818cb3052d055bef9bbe2efc5c71cd0626cf,2022-11-29 16:48:07+01:00,"Do not mock the hash method for testing ""get_vlan_device_name""

Instead of this, use the same algorith used by the method to build
the device name.

Closes-Bug: #1998228
Change-Id: Ic52107fdf96e2db7c26cc9a023843430775cb775"
f7dd7790f5c6e3149af4680ba521089328d1eb0c,2022-11-30 11:47:28+01:00,"Fix bulk create without mac

Bulk port create without mac address fails as when Neutron calls
oslo_utils.netutils.get_ipv6_addr_by_EUI64, as the mac field of the port
is an ATTR_NOT_SPECIFIED Sentinel() object.
With some reshuffling of the code to fill the mac field this can be
fixed.

Closes-Bug: #1995732
Related-Bug: #1954763

Change-Id: Id594003681f4755d8fd1af3b98e281c3109420f6"
26c55efe34f317409e4277154bac4617db0d57cc,2022-11-30 15:04:34+00:00,"Do not emit ssl warnings in the test_ssl_connection test

Since python3.10 we get a warning inside the ovs.stream module:

Warnings: {message : DeprecationWarning('ssl.PROTOCOL_TLS is
deprecated'), category : 'DeprecationWarning', filename :
'python3.10/site-packages/ovs/stream.py', lineno : 794, line : None}

or using python console:

>>> ssl.SSLContext(ssl.PROTOCOL_SSLv23)
<stdin>:1: DeprecationWarning: ssl.PROTOCOL_TLS is deprecated
<ssl.SSLContext object at 0x7f98620223c0>
>>>

This patch mocks the 'Connection.run' method that emits this warning
inside a thread. This patch also fixes a failure in the
test_distributed_port_binding_deleted_by_port_deletion test that was
catching the ssl warning from test_ssl_connection and therefore
failing.

Closes-Bug: #1998343
Signed-off-by: Anton Kurbatov <Anton.Kurbatov@acronis.com>
Change-Id: I6a4b9222a63a0d0271069eb12d0c97dd3821a2cc"
4416706931e948d0d570e353bf8b395ded561a7f,2022-12-01 09:16:58+00:00,"Use neutron-lib constants for OVS table numbers

Since neutron-lib 3.2.0, the PACKET_RATE_LIMIT table changes the
number from 59 to 58.

Closes-Bug: #1998353
Change-Id: I426a58f0fea9e663c545d17de1dd9fb6e866a059"
fd423f7b1bd3e73631eb3588ea46140b0274ce7a,2022-12-01 16:26:25+01:00,"Reset the MeterIDGenerator singleton after each test

Closes-Bug: #1998474
Related-Bug: #1964342
Change-Id: I46853e65644d85ca0374b07a8d9e5816a82bcb36"
a8adb5aa9c5d4161c27a9ef994ff38ec2f20bf00,2022-12-01 21:18:19+01:00,"[OVN] Implement abstract ""post_connect"" in ""MetadataAgentOvnSbIdl""

Implement the abstract method ""post_connect"" in class
""MetadataAgentOvnSbIdl"", inherited from parent class ""OvnIdl"".

Closes-Bug: #1998833
Change-Id: I3e7e6907802242cadd6e5589196006f382d11081"
88b7db0e0c4d633748f454f4977c13c253012769,2022-12-01 17:53:42-05:00,"Mock ls_get in OVN metadata delete network unit test

""TypeError: 'Mock' object is not iterable"" could possibly
be triggered by test_metadata_port_on_network_delete()
since there is a missing mock of the return value for ls_get.

Although I did not see the error described in the bug, I did
verify ls_get was returning an incorrect value by printing
it in the code, which after this patch was a fake row.

Change-Id: Ib1f204c98eee96321c7befebf94012dc2c80b1e8
Closes-bug: #1973731"
234c5a376bef74bcd1af07d4be8adc69715f1af5,2022-12-02 02:38:36+01:00,"[sqlalchemy-20] Add missing DB context decorator

This fixes two queries still being executed without the context
decorator, which is causing warning messages.

Closes-Bug: #1995738
Change-Id: I61692e09119751ac7e19cecf6bf0b4b3a9fb38c7"
49eab7d308b598e4c4966110d6aa61cd091cc3f6,2022-12-02 14:43:37+00:00,"Move registration ""ChassisBandwidthConfigEvent"" to OvnSbIdl init

The ""ChassisBandwidthConfigEvent"" event registration is now done in the
""OvnSbIdl"" class initialization. That ensures this event is registered
in a worker thread.

If the event is called before the ""OVNMechanismDriver""'s ""OVNClient""
has been instantiated, the event is skipped. When the OVN placement
extension is loaded, all chassis configurations are read and loaded,
thus any previous event is not relevant.

This patch also adds a ""match_fn"" check to
""ChassisBandwidthConfigEvent"". If during an update event, the bandwidth
options are not modified, this class does not update the resource
provider inventories.

Closes-Bug: #1998108
Related-Bug: #1578989
Change-Id: I74883041c642b9498299ebf2b5bf885776e241e0"
92efd8e45bef761fc464c932f1fd60d1c4d7e828,2022-12-02 17:37:40+00:00,"Dont raise RouterInterfaceNotFound on overlap check router ports

A corner case of the fix done in [1] could happend if, as a race
scenario, parallel requests evaluate other ports that could be deleted
during the process if they had already determined a overlapping, in that
case a RouterInterfaceNotFound exception was raised and the request
finished with that exception and a 404 status code.

This patch removes the exception due to a port not found, because if the
port is not found, the related subnet should not participate in the
overlap evaluation, so it makes no sense to break the process for a port
that no longer exists. It also improves the previous validation to
perform the overlapping check, being performed only when we have
at least more than one subnet, as the overlapping check with only one
subnet did not make sense.

Closes-Bug: #1998226

[1] https://review.opendev.org/c/openstack/neutron/+/859143

Change-Id: If4afe6f525c46f9cf7f02d8aae27dfc56144fd62"
81980146cbdcc42d2398f4e777e659fc59c3b55f,2022-12-03 22:24:45-06:00,"Add and delete multiple ip addresses in one priv call

Created new add_ip_addresses privileged function
which takes an iterable of cidrs and adds them
in one privileged call. This is so we dont have to
take on additional priv overhead when calling
add_ip_address in a loop.
For parity, performed the same change on the
delete_ip_address function.

Closes-Bug: #1987281
Partial-Bug: #1981113
Change-Id: Ib1278af20c3b3b057712453cb249aba34b684a21"
f22aa5dfddae9bd31fbb4fca8aed176e9913d34a,2022-12-05 10:34:26+01:00,"Discard port with ofport -1 in _get_ofport_moves

When libvirt (nova) detach a port on OVS bridge, two events are sent:
* one event with 2 actions ""old"" and ""new"": a change on ofport (from a
  regular value to -1)
* a second event with action ""delete""

If, for some reason, the second event is delayed, the rpc_loop iteration
will consider this port as ""updated"" instead of ""deleted"".
But, because ofport == -1, the port update will be discarded, and
finally removed from port_info[""current""].

As a result, on next iteration, the deletion wont be performed.

Most of the time, we endup with some leftovers (like openflow rules,
etc.)

The purpose of this patch is very simple, when looping over ports in
_get_ofport_moves, we will discards the ports that have ofport == -1, so
the port will not be considered as updated and next iteration will be
able to delete it correctly.

Closes-Bug: #1992109

Change-Id: Ib4a7183867e1b21810b6915a475a234278bf884c
Signed-off-by: Arnaud Morin <arnaud.morin@ovhcloud.com>"
74224e79e031636018b970fac9c2aa72516eb12d,2022-12-06 11:52:51+01:00,"Gracefully restart dnsmasq to not break tcp DNS

When talking to dnsmasq using DNS over tcp dnsmasq will fork out for
TCP connections. Forked processes will stay until all connections have
been closed, meaning that dangling connections will keep the processes
and with that will also keep the tcp/53 port in listening state. On
dnsmasq restart (e.g. on network update, subnet create, ...) the parent
process is killed with SIGKILL and a new process is started. This new
process cannot listen on tcp/53, as it is still in use by the old child
with the dangling connection.

To prevent dangling dnsmasq connections on tcp we need to properly
shutdown the child. This is done by first sending SIGTERM and only send
a SIGKILL if the process is not shutting down properly. With that we
get proper cleanup of all children and tcp will come up after a restart.

Change-Id: Ie633148c512f5124e978648c50a4c6318c61baa8
Closes-bug: #1998621"
06fad386ba7dad5f9dea288a124993560513949a,2022-12-06 13:45:37-05:00,"Fix firewall_driver examples in docs

Some of the docs use the long hand path for firewall_driver,
which might not always work. Change the remaining few
examples to use the short hand from setup.cfg instead.

Change-Id: I02bcf654e041ff9c1ff27e64b8493c5e13d7e479
Closes-bug: #1809578"
4fe17646769ffe7fac9223b2d6db260ee04167ff,2022-12-06 20:22:44+00:00,"Merge ""Bump pecan to fix #1829042"""
2fd17aa8762a2602527674896b86b3989899964e,2022-12-07 05:14:26+01:00,"[OVN] Initialize the mech driver variable in ``OVNL3RouterPlugin``

This initialization method will assign the mechanism driver variable
and will check if any of the valid drivers ('ovn', 'ovn-sync') is
loaded. If not, the execution will stop and the
``MechanismDriverNotFound`` exception will be raise. This exception
is more informative than the reported error in the related bug, where
one of the expected configuration variables for the
``OVNL3RouterPlugin`` class was not loaded.

Closes-Bug: #1997970
Change-Id: Ie8e184c85528cd1b3fed624fb003a71c5e6c7af3"
dfe69472a82d7eee96299122c8a9520aeed73ddd,2022-12-08 06:42:45+01:00,"Check if port exists in ``update_port_virtual_type`` method

During the OVN DB inconsistency check, a OVN LSP could not be present
in the Neutron DB. In this case, continue processing other LSPs and
let other ``DBInconsistenciesPeriodics`` methods to resolve this
issue.

Closes-Bug: #1999517
Change-Id: Ifb8bdccf6819f7f8af1abd3b82ccb1cd2e4c2fb8"
ca73925f42220888a58d24135c1835ace416c06d,2022-12-08 20:40:22+05:18,"Pin OVS_BRANCH to working commit

With [1] OVN main branch compilation fails, until
main branch is fixed to work with ovs master, let's
ping OVS_BRANCH to working commit.

[1] https://github.com/openvswitch/ovs/commit/b8bf410

Closes-Bug: #1999154
Change-Id: I3453aa86cab4997ea22d0f8cb5c107871e171f67"
aaae0798832e8892d3b592c2b30a48b1d896bfa8,2022-12-09 10:04:45+00:00,"Fix homedir permissions

RHEL based distros set homedir permissions to 700,
and Ubuntu 21.04+ to 750[1], i.e missing executable
permission for group or others, this results into failures
as defined in the below bug.

This patch fixes the homedir permissions for local (non-gate)
installations, using the devstack patch as reference.

Check patch [1] for more information.

[1]https://review.opendev.org/c/openstack/devstack/+/838645

Related-Bug: #1966858
Change-Id: I9f701e1015fc7cfa954eba12e55fd3544a4d95d2"
135daae62d8a05e6295c8ad2ddbe166d1418337b,2022-12-09 18:54:50+05:18,"Use same ovs/ovn versions in local test setups

Currently we using different defaults in CI and
local run, also defaults in local run using ovs
master branch which is broken currently. Let's
use same version by definining defaults in
configure_for_func_testing.sh rather than at job
level, jobs can override these only when really
needed.

Drop unneeded source of functions, this was wrongly
detecting ovs/ovn versions. Anything required
should be sourced as part of configure_for_func_testing.sh.

Related-Bug: #1999154
Change-Id: I04a2b0b974d11a525c850b1e641a19749dee93f6"
8bcaf1632f93633925a6f6bb2647b4007e2562f9,2022-12-10 20:43:54+01:00,"Limit tox version to <4

This patch is a workaround until we find why fullstack job is failing
with tox 4.

Depends-On: https://review.opendev.org/c/zuul/zuul-jobs/+/866943

Related-Bug: #1999558
Change-Id: I9c62d429bb819336da05055fecd08e3816986bf8"
4cc611d319d0afe1ee04df6e4419014f1133df09,2022-12-14 10:03:14+01:00,"Fix handling the restart of ovn-controllers

The previous `getattr(old, 'nb_cfg', False)` would evaluate to `False`
if the `old` row either did not contain a `nb_cfg` value or if the value
was 0.

As 0 is the value set on startup of the ovn-controller this causes the
neutron-api to ignore any event a ovn-controller directly sends after
startup. In turn this causes us to miss the information that the agent
is synchronized, causing the agent to appear as down, until something
bumps the `nb_cfg` value globally.

Closes-Bug: #1997982

Change-Id: Icec8fee93e64b871999f38674e305238e9705fd4"
1d46b199517ce93066dc9b989cb6e1e078f701b8,2022-12-11 21:50:34+01:00,"Pin OVS_BRANCH to master again

This patch reverts [1] and [2] now [3] has been merged in the
OVN repository.

[1]https://review.opendev.org/c/openstack/neutron/+/867004
[2]https://review.opendev.org/c/openstack/neutron/+/867522
[3]https://github.com/ovn-org/ovn/commit/1b0dbde940706e5de6e60221be78a278361fa76d

Related-Bug: #1999154

Change-Id: I31cc4ef324aa9112b4ba9409025495af6813a80b"
cbd03c7ea593e1b2ba79ffd7c7afa0dc844202a6,2022-12-12 07:58:14+01:00,"Wait until local OVS DB updates Bridge ""datapath_id""

Closes-Bug: #2000163
Change-Id: I9c8ebbb334df89e8d5b3b80bbfba2e91d3d848f5"
4e75c69ab6b8303194e731338a3c344932b686ea,2022-12-12 11:08:46+01:00,"Add extra logs when checking if FIP GW port has been created

Related-Bug: #2000164
Change-Id: Iaa6c727164954e3c1e9dac7e0f97d7a8b36647db"
14d0ff0317f1fc7f366283a920f579112081725f,2022-12-12 20:08:06+01:00,"Add ``devlink.get_port`` method for devlink ports

Added ``devlink.get_port`` method that provides information about
a devlink port [1]. It is used to retrieve information about a port
representor connected to a local OVS instance (aka: hardware offloaded
ports). This method reports the PF PCI address, the PF index, the VF
index and the PF name; the PF name will be used to enforce the QoS
policies on the SR-IOV parent device (similar to what is done in the
ML2/SRIOV agent).

[1]https://www.kernel.org/doc/html/latest/networking/devlink/devlink-port.html

Related-Bug: #1998608
Change-Id: I34daf554cabcf17cb6371d510d5827457012516d"
b5fdad3cfb8ec60e8e7934bf55308ecf5d7661b1,2022-12-13 20:49:30+05:18,"Pin OVS_BRANCH in ipv6 ovn job

Was missed with original patch to pin OVS_BRANCH[1].

[1] https://review.opendev.org/c/openstack/neutron/+/867004

Related-Bug: #1999154
Change-Id: I6c74d90260c8caf80a9698373b45fdd27b6bd8e9"
9401da6c7cb3616c01fc432f5e2150752afe91e1,2022-12-13 16:36:14+01:00,"Handle if ""TRUNK_SKELETON"" is not loaded

If ""TRUNK_SKELETON"" has not been initialized, the ""unregister"" method
should finish gracefully. This issue is happening in fullstalk tests,
where the trunk initialization is not executed if ""trunk"" is not in
the service plugins.

Closes-Bug: #2000314
Change-Id: Idef5fd8feaf1af309862d6cb3e06da3734fb6c19"
7c449f1833a94a544cf0b9cfcf63f3e7e46fae26,2022-12-15 09:08:15+01:00,"Enable ML2/OVS backend in the -ovs- grenade jobs explicitly

As with [1] all grenade jobs by default are using ML2/OVN backend now,
we need to explicitly configure ML2/OVS backend to be used in all ovs
related grenade jobs. This patch is doing exactly that.

[1] https://review.opendev.org/c/openstack/grenade/+/862475

Closes-Bug: #1999705
Change-Id: I0770ab54064c49c86b7fefcc0e7eba35c6282ccc"
f3c743d0901ba3405a4fc1586f45d2cc434fcdd4,2022-12-15 10:23:01+00:00,"Do not update static routes in snat-ns for dvr router with ha

If a router is distributed with ha enabled, then the keepalived service
is responsible for setting static routes. This patch adds a check if
the router ha is disabled before adding routes. Otherwise, there are
duplicate routes and the issue when this route needs to be removed.
In addition this patch fixes multipath route in the snat-ns if no HA is
enabled.

Closes-Bug: #1999678
Signed-off-by: Anton Kurbatov <Anton.Kurbatov@acronis.com>
Change-Id: I8f1004b3fe2cad79cb61aa942b257c1508d18b68"
be0996c30850a870f05cabc3f8b77a379e7ab9da,2022-12-15 16:55:39+01:00,"segment: enable multisegments support for host

This updates the exception with a log message informing that
multi-segments is supported by OVS only at that point.

This also add fullstack tests that validates multisegs deployment on a
physnet.

Closes-Bug: #1956435
Partial-Bug: #1764738
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I3811a4ca28906dd29100c602de7fa4a3595393ab"
faa4803302539aa13d384e4ca3d72bff37a79f79,2022-12-15 16:26:15+00:00,"dhcp: fix issue when network is already removed

We may be in a situation where the network get removed prior the
port. In that case there are no reasons to call the driver to clean
devices related to the network.

Closes-bug: #1997964
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Ife40e19537a101ddacdc2978e6b34f4571b8c66a"
dad23fdcdb32e3b061642e3cafad6566fadc11c3,2022-12-19 15:32:46+08:00,"Strictly delete arp_spoofing_protection flows

Port arp_spoofing_protection will install flows like this:
table=0, priority=9,in_port=2 actions=goto_table:25
table=25, priority=2,in_port=2,dl_src=fa:16:3e:54:f0:71 actions=goto_table:60

For network ports or port_security_enabled = False, those flows
will be delete by setup_arp_spoofing_protection in _bind_devices.

But the delete actions are a bit rough because it will delete any
flows with ""table=0 in_port=2"" and ""table=25 in_port=2"".

Besides, the ovs_agent extension handle_port will be run before
these actions [5]. So network or no security ports, if any flows
added by agent extesnion in table=0 with ""in_port=2"" will be delete
unexpectedly. Which also means any flows added before this call of
""uninstall_flows(table=0, in_port=2)"" will be deleted.

This patch changes the uninstall flows to strict mode. Let it
delete the arp_spoofing_protection related flows only by verifying
the priority.

Closes-Bug: #2000046
Change-Id: Ifdd47b2ce8610e4b4b527fc3279e0bd7a8b21a1d"
370d8bcea3ae728c1aacba7b36800ecd759f3f8e,2022-12-21 17:59:14+01:00,"[Fullstack] Wait 10 seconds to ensure that MAC address is configured

In Linuxbridge and OVS PortFixture, when port is created, in the fake
vm's namespace it needs to have correct mac address configured.
It seems that for some reason it's not properly configured sometimes and
that may cause failure of e.g. DHCP tests.
So this patch adds retries for 10 seconds to ensure that MAC address is
configured to the one which should be.

Closes-bug: #2000150
Change-Id: I8c6d226e626812c3ccf0a2681be68a5b080b3463"
08e485d0cd97123ac8eb43b6a93b315273f70c91,2022-12-22 09:20:22+00:00,"Ignore python warnings in the neutron-status functional tests

There is functional test which asserts on the stderr of the
neutron-status command. We should ensure that there is no any python
warning about e.g. deprecation printed there as that may cause test
failure.

Related-Bug: #1999558
Change-Id: Ifb958f174f8173b330d3cf7a8a8afa182c52a421"
3d575f8bd066ce2eb46353a49a8c6850ba9e4387,2022-12-24 10:30:16+01:00,"Add an env variable ""PROCESS_TAG"" in ``ProcessManager``

Added a new environment variable ""PROCESS_TAG"" in ``ProcessManager``.
This environment variable could be read by the process executed and
is unique per process. This environment variable can be used to tag
the running process; for example, a container manager can use this
tag to mark the a container.

This feature will be used by TripleO to identify the running containers
with a unique tag. This will make the ""kill"" process easier; it will
be needed just to find the container running with this tag.

Closes-Bug: #1991000
Change-Id: I234c661720a8b1ceadb5333181890806f79dc21a"
be0776d647453be52d269403ba33d42e42240727,2022-12-27 13:24:43+00:00,"Add sanity check for keepalived gar on SIGHUP support

This patch adds keepalived version check is newer than 1.2.20.
Prior version contained a bug [1] which was fixed only after
1.2.20 version.
The code that sends additional garp was reverted at [2].

[1] https://bugzilla.redhat.com/show_bug.cgi?id=1391553
[2] https://review.opendev.org/c/openstack/neutron/+/752360

Related-Bug: #1639315
Change-Id: Ib976d614e3977e10b36cfcbf348f4ee37393aaa1"
572185e1fd252772d8baaec099bf8bedfc837013,2023-01-02 11:05:12+00:00,"Delete the PB level registers when deleting the duplicated PB

The ``neutron-remove-duplicated-port-bindings`` script removes the
duplicated port binding registers (""ml2_port_bindings"" table) that
have status=INACTIVE.

This patch also removes the corresponding port binding levels
(""ml2_port_binding_levels"" table) associated to those inactive port
bindings.

Closes-Bug: #2000078

Change-Id: I12fa0764cd0ff509f1859b61060d64cc5a54a7b9"
3ebdfe612a931a044877b2041a4ab68489bde5b7,2023-01-02 11:14:50+00:00,"Support for minimum bandwidth rules in tunnelled networks

This patch adds support for QoS minimum bandwidth rules in tunnelled
networks. Now the ML2/OVS and ML2/OVN mechanism drivers can represent
in the Placement API the available bandwidth of the tunnelled networks
in each compute host.

Both mechanism drivers represent the compute VTEP (VXLAN) or TEP
(Geneve) interface as an IP address. This new resource provider
(by default called ""rp_tunnelled"") represents the available bandwidth
of this interface. Any new port created in a compute node that belongs
to a tunnelled network, will request to the Placement API the
corresponding bandwidth from the resource provider inventory.

This patch does not provide backend enforcement support for minimum
bandwidth rules.

RFE spec: https://review.opendev.org/c/openstack/neutron-specs/+/860859

What is missing and will be added in next patches:
* Tempest tests, that will be pushed to the corresponding repository.

Depends-On: https://review.opendev.org/c/openstack/neutron-tempest-plugin/+/863880

Partial-Bug: #1991965
Related-Bug: #1578989
Change-Id: I3bfc2c0f9566bcc6861ca91339e32257ea92c7e9"
5e19eaadbb298aaf58b5389fea74c9b8064d0f41,2023-01-02 16:41:08+01:00,"[OVN] Fix availability zones changes check

Closes-Bug: #2000634

Change-Id: Id5f34ec858a940d2fc4a03b9290adc6161aa9db3"
edf48e46a1f0227f84b05ab39da005393e5fa73f,2023-01-02 20:11:43-06:00,"Improve agent provision performance for large networks

Before this patch, the metadata agent would provision network namespace
for all subnets under a network(datapath) as soon as the first
VM(vif port) was mounted on the chassis. This operation can take very
long time for networks with lots of subnets. See the linked bug for
more details.
This patch changes this mechanism to ""lazy load"" where metadata agent
provisions metadata namespace with only the subnets belonging to the
active ports on the chassis. This results in virtually constant
throughput not effected by the number of subnets.

Closes-Bug: #1981113
Change-Id: Ia2a66cfd3fd1380c5204109742d44f09160548d2"
4fa85b9a9963ffa51f50262a48380e028f01103e,2023-01-03 11:16:34-05:00,"Fix incorrect mysql examples

Command to create the neutron database was missing '>'.

Trivialfix

Closes-bug: #2000870

Change-Id: Id5555ec16bd855c0fae9b58e03038740e759bf2e"
02030f037ad754b9b8ba3f3a657022d66c32c71e,2023-01-04 16:54:17-05:00,"ovs-dpdk support in neutron-sanity-check

While creating bridges, pass the optional argument 'datapath_type'.
This parameter is read from openvswitch.ini conf file.

Closes-Bug: #1842517

Change-Id: I05f0484636e4da6290c750a1eabd5f9d09588008"
f759915ab0c30ebba6d3d970943b596b5c245599,2023-01-05 10:54:04+00:00,"Fix default value for MTUs, when not provided

When networks are created using REST APIs, if the MTU isn't specified
in the request, then a default value of 0 is used. Some use cases, such
as the auto-allocated-topology workflow, call the plugin directly to
create networks, bypassing the layer that inserts this default value.
Commit 68625686a40b3eb75502c8116f23d2297e288ca1 introduced a different
default value at the DB layer, defined by a constant in neutron-lib.
If the maximum MTU size has been configured lower than this constant,
then the user receives an exception, even though they didn't provide
a value for MTU.

This patch changes the default value used in the DB layer, so that
it's consistent with the workflow seen via REST APIs.

Change-Id: Ica21e891cd2559942abb0ab2b12132e7f6cdd835
Closes-Bug: #1896933"
1c89db495c884b0b562f64b263c3cd9c1f101699,2023-01-09 12:38:52+05:18,"[OVN][FT] Also update nb_cfg along with nb_cfg_timestamp

FT ``test_agent_updated_at_use_nb_cfg_timestamp`` updates
""nb_cfg_timestamp"" in Chassis_Private table and then
checks if agent cache get's updated to the same value.

But ""ChassisAgentWriteEvent"" which is responsible for
updating AgentCache doesn't get triggered with updates on
""nb_cfg_timestamp"", so this patch proposes also to increment
""nb_cfg"" by 1 to trigger the Event as in general scenario
timestamep get's updated along with nb_cfg.

Closes-Bug: #1974149
Change-Id: I8889746ff2ee2629ee7c38ac162ea7c4d9ee0734"
3e1e2d63b3383d28c9a36b00000ab89caffa3829,2023-01-09 13:21:37+05:18,"Enable rpc notifications only when rpc_workers >= 1

rpc_workers can be set < 1 with 'ovn' backend when no
other agent is running apart from ovn agents to
consume these rpc notifications.

Add and apply disable_notifications decorator on
methods which do rpc cast calls to agents, the
decorator makes the caller method execute only
when rpc_workers >=1. This patch not changing
default behavior and utilizes the rpc_workers config option
to enable rpc notification on resources updates only when
rpc_workers >= 1.

Also set rpc_workers=0 in ovn jobs to cover this scenario.

Closes-Bug: #1889737
Closes-Bug: #1992352
Change-Id: I700fe2cd422bc1eb8b5144ec116e7f0a60238419"
c3620166204d2d12729ca1eba92feaadbe802d42,2023-01-09 12:39:16+01:00,"Ensure that MAC address of the device is set correctly

For unknown (for me at least) reason sometimes we observed e.g. in the
CI jobs that interfaces created by e.g. L3 agent didn't had properly set
MAC address to the one generated by Neutron.
To avoid that this patch adds check if the requested MAC was actually
set on the device before moving on to configure MTU and other attributes
of the device.

Co-Authored-By: Brian Haley <haleyb.dev@gmail.com>

Closes-bug: #2000164
Change-Id: I23facc53795a9592ccb137c60fb1f356406a4e00"
ed048638f4ef6a1799a1dcbd8819627b3fa8e75e,2023-01-10 16:40:29-05:00,"Add text to WSGI config guide for debugging

Add ""broken pipe"" example error message to WSGI guide in
rpc_workers section, could help diagnose agent issues.

Trivialfix

Change-Id: I6e95614bce42124f125be4c23fff0d923ea9ebcc
Closes-bug: #1855919"
7751ac32a7e0119cdef7efccf2282f695f6055c3,2023-01-11 17:13:49-05:00,"Add info on segments extension to contrib guide

Add link from segments extension doc to routed networks spec,
which explains the use case.

Trivialfix
Closes-bug: #1747028

Change-Id: I8af639bc44924582135d3cc94196b3c9b3ca4b5d"
de0918cea3fa3c107d4cc08137c04573274716f8,2023-01-12 14:18:47+01:00,"Add debug logs to OVSInterfaceDriver.plug_new

DVR lifecycle functional tests fail frequently with exceptions
like this: ""Network interface * not found in namespace *""
The reproduction locally is hard if possible, so by adding
extra log messages I hope we can have more clue where to find
the possible root cause of this issue.

Change-Id: I2c6acf3c29f3d1e7574240376f7bcb46c98579c6
Related-Bug: #1995031"
e2097157bba6f18c4e30069ad76f9e1409ea1c0a,2023-01-13 12:29:47+01:00,"Allow multiple IPv6 ports on router from same network ml2/ovs+dvr

On a recent change [1], some additional checks was added to avoid
ports overlapping cidrs on a router. On this change was also added
a check to do not attach more than one port IPv6 from same network,
but this check need to allow multiple ports when a deployment is
done using ml2/ovs+xvlan+dvr and the router has an external gateway
configured, because two ports are added:

- one with device_owner as network:router_interface_distributed
- another one with device_owner as network:router_centralized_snat

Also an small improvement is done for just run this check over the
existing ports on the router for the same network_id.

[1] https://review.opendev.org/c/openstack/neutron/+/859143

Closes-Bug: #2002800
Change-Id: I765a7b41e7e84f42a3180dfd15e3a41a8e085284"
d0e64c661727d151abd5f3d9a3fb38c4092df7b5,2023-01-13 17:42:34-05:00,"Add auto-allocated-topology delete example to docs

There was not an example of how to delete an auto
allocated topology (get me a network), so add one.
Only a partial fix as it seems the api-ref doc in
neutron-lib is incorrect as there is only create and
delete operations on this resource, not show.

Change-Id: Iaa797b7e0c1c9bac25ff00659a74286173297206
Partial-bug: #1617548"
d7f68a0ce76ffb9a93dfba167dfffba53189350d,2023-01-14 11:23:33-05:00,"Set proxy_delay to one when using proxy ARP

Neutron DVR uses proxy ARP in fip namespaces to respond
to ARP requests for instance floating IPs. In doing so
it is susceptible to a random delay of up to (by
default) 800ms which is added to the time taken to
respond to ARP requests. This causes an initial delay
to ARP reponses that is entirely avoidable by changing this
parameter to one, instead of the default, to make it as
short as possible.

NOTE: Setting this to zero is actually undefined and will
cause the kernel to choose a random delay from 0 to
U32_MAX so is not advised. Gleaned from this comment in
__get_random_u32_below(), which is eventually called
from pneigh_enqueue():

/*
 * This function is technically undefined for ceil == 0, and in fact
 * for the non-underscored constant version in the header, we build bug
 * on that. But for the non-constant case, it's convenient to have that
 * evaluate to being a straight call to get_random_u32(), so that
 * get_random_u32_inclusive() can work over its whole range without
 * undefined behavior.
 */

Will propose a kernel change to fix this but cannot
assume it will be in a distro kernel for a while.

Change-Id: I0dc65b17ef436a97d0fcbd164d124ec59a1b2797
Closes-Bug: #1920975"
f28e4165993f0c226bd5af54ad6d8c6bb48bff69,2023-01-16 16:41:20-06:00,"Add 3 secs to wait for keepalived state change

We add 3 seconds to the keepalived state change to avoid timeout
failures in test_read_queue_change_state.

Change-Id: Ic54bd6f699b91b53f22c93c972d8def6c99d0eb7
Closes-Bug: #2003022"
70a86637e71eb67e7785f090ebc1045040bca897,2023-01-17 10:20:52+00:00,"Allow shared resources between physical and tunnelled networks

Since [1] it is possible to create resource providers for tunnelled
networks and model the available bandwidth for overlay networks.

In some deployments, the admin uses the same physical network interface
for a physical network and the tunnelled networks. In that case it is
complicated to correctly split the bandwidth between the inventories
of the resource providers. This patch adds the ability to create a
resource provider with traits of both the physical network and the
tunnelled networks. E.g.:

  $ openstack resource provider trait list $brex
  +----------------------------------+
  | name                             |
  +----------------------------------+
  | CUSTOM_NETWORK_TUNNEL_PROVIDER   |
  | CUSTOM_PHYSNET_PUBLIC            |
  | ...                              |
  +----------------------------------+

With this resource provider, a request comming from a port in the
physical network or an overlay network is provided by the same
inventory.

[1]https://review.opendev.org/c/openstack/neutron/+/860639

What is missing and will be added in next patches:
* Tempest tests, that will be pushed to the corresponding repository.

Closes-Bug: #1998202
Change-Id: I801e770fd8b4d6504f5407108e1d1fd848f96c09"
463c3df4cff0a5764beef3f83a7f3bf26d688470,2023-01-17 16:49:57+01:00,"[ovn] Do not create empty default route when empty gateway_ip

Before this patch, if a OVN router was associated with an
external network whose subnet had an empty `gateway_ip`, a
default route with an empty dst-ip is created in the OVN
database.

As documented in the Neutron API [0], it is allowed to create
a subnet without a gateway_ip.

0: https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-subnet-detail#create-subnet

Closes-Bug: #2002993
Signed-off-by: Frode Nordahl <frode.nordahl@canonical.com>
Change-Id: Ica76e0821d753af883444d2a449283e9e69ba03f"
b6750fb2b80453f4efb2706ed8a8ef1e1e5db37e,2023-01-18 05:01:21+01:00,"[OVN] Add vnic_type and binding profile capabilities to LSP info

In order to decide if a port is a hardware offloaded port by just
reading the OVN Logical_Switch_Port register, it is needed the
VNIC type and the binding profile cababilities.

The maintenance task will only update those LSP ports that belong
to direct Neutron ports to avoid an unnecessary database load.

Related-Bug: #1998608
Change-Id: I5febe9d3eeef6c5b5f6d972b9e8ebfef541458ac"
2495ad285614d3a77d3387a0913e1d82f4f8f61b,2023-01-18 15:27:31+01:00,"Avoid failure of get_device_details if net from cache is empty

CacheBackedPluginApi.get_device_details tries to fetch net info
from remote_resource_cache to fill the qos_policy_id for the
device.
Fix the case when the cache has no entry for the network.

Change-Id: I1612dc4515ec0f02fbaf05d60b753485885d8c84
Closes-bug: #1999391"
78c3d52bb4f81dc338370240fd3da587dbb3a5e2,2023-01-19 14:36:39+00:00,"[OVN] Introduce the new OVN Neutron Agent

This patch introduces the new OVN Neutron Agent definition in the
OVN agent list and creates a new class ``OVNNeutronAgent``.

Related-Bug: #1998608
Change-Id: I57de801473fc30f06acf1bc8a65cb2ff76b2954a"
f235ce8791ab31bac598a3ebb40fb48cf2e4d1ab,2023-01-19 17:32:36+01:00,"Add new debugging logs for ``ARPSpoofTestCase``

In case of error, the class ``ARPSpoofTestCase`` now provides the IPv6
and IPv4 neigh list of the source and destination ports.

This patch also adds a retry branch on the ``assert_ping`` method. If
enabled, if the first ping command fails, the method will try to execute
it again.

Related-Bug: #2003196
Change-Id: I4d1a6c799004339489fe35b44b7682f8f744560b"
ec438577bdcf357835365f2dd0a1e250ccc63da4,2023-01-20 12:37:57+01:00,"Use dhcpcd client in the tempest slow jobs

Cirros switched from udhcpc to dhcpcd in version 0.6.0.
Support for that new client is added in the Tempest in the patch [1]
and now we can use it in our slow jobs to make it green again.

[1] https://review.opendev.org/c/openstack/tempest/+/871270

Depends-On: https://review.opendev.org/c/openstack/tempest/+/871271

Closes-bug: #2003063
Change-Id: I0405a1157b785e1b628f3112a9707146cf9020f5"
1a3bdff18abef093c0633bd39187f5a0e582535f,2023-01-22 00:52:27+01:00,"Honor debug mode in keepalived-state-change script logs

This patch removes the config option ""debug"" override done
during the script initialization.

Closes-Bug: #2003534
Change-Id: I403d73a1f35cb6314c814f25628a83d3e111e0fe"
d73f75c551c36b15eed43f0b19ed796626cc8cb5,2023-01-23 11:35:45+00:00,"[API] Add API extension and definition for default SG rules

This patch adds API definition and API extension class for
security group rules templates API described in the spec [1].
API definition in this case is very similar to the securitygroup API
definition and uses same converters and validators which are still in
Neutron instead of neutron-lib repo. Because of that this new API
definition is proposed to the neutron repo first and will be rehomed to
neutron-lib together with security groups API definition later.

[1] https://specs.openstack.org/openstack/neutron-specs/specs/2023.1/configurable-default-sg-rules.html

Related-bug: #1983053
Change-Id: I3aafe1aba406a52bc2b57be5133dee15b8848796"
ed68ba4a4cb622a67a4b28065da7f1ef7777e0dd,2023-01-23 16:23:30+01:00,"Do not ignore attributes in bulk port create

With unit tests that would have caught the bug.

Change-Id: Ia4a68bdccecfbcb9d1aa49e2b14e06d139891c0f
Closes-Bug: #2003553"
910574a5cc3653226901b8c7e96d0827d5e52f9b,2023-01-25 03:45:26+01:00,"Use SLQAlchemy ORM ""relationship"" instead of ""relation""

""relation"" was deprecated in SQLAlchemy 1.4 [1].

[1]https://docs.sqlalchemy.org/en/14/orm/relationship_api.html#sqlalchemy.orm.relation

Closes-Bug: #2004258
Change-Id: Ia37a178532860d52b2ed836f66b0f4ca73f8343c"
0ae432e71712be671ec93dded3245513b6810cd0,2023-01-25 14:00:49+01:00,"Fullstack: Wait placement process fixtrue to really stop

It seems that in test test_configurations_are_synced_towards_placement
when the fake placement process is stopped it can take longer and
the test restarts the agent before it is really dead.
In this case neutron-server can report the status and the agent's
'resources_synced' field is True when the tests checks it.

A simple workaround for this can be to check if the AsyncProcess
class' _is_running property is False.

Closes-Bug: #1856319
Change-Id: Ia4c25110ee5a7b7539407d3531f559555fec50cc"
c609084b59c68f003153a58c2063f99b52f169e0,2023-01-25 15:25:18+00:00,"Add doc note on nf_conntrack module requirement

The OVS firewall driver requires nf_conntrack module(s)
to be loaded to function properly. While they are typically
loaded automatically, add a note to the admin guide about
the requirement to make it explicit.

Closes-bug: #1834213

Change-Id: I55871eff1e37d4155b8d2b5ae8c182d160c4af9f"
d0c7bb653af16ddf310579966d2f6583da866f4c,2023-01-26 07:41:38+01:00,"[OVN] Implementation of OVN Neutron Agent

This patch implements the OVN Neutron Agent executable, the extension
manager engine, the agent extension abstract class and the configuration
section.

Related-Bug: #1998608
Change-Id: I94bb98217e03f9ac314cb9723da277a23368649c"
3727103ce7c691793a0b02c0870ebb41c95f0cfd,2023-01-26 12:32:38-05:00,"Fix get_link_devices() with index argument

If get_link_devices() is called with 'index' in kwargs, pass the
argument to ip.get_links() correctly

Closes-Bug: #1953139
Change-Id: I6ae2d8c2a27aef548dd186e495c8998bf4086a20"
7cb481a3dc090d0ebd33a0ef577ae40e13291f5c,2023-01-27 11:52:45+01:00,"Allow disable stateful security group extension on older OVN

This patch adds config option to let cloud operator to disable
'stateful-security-group' API extension if OVN < 21.06 is used. This is
the case e.g. on Ubuntu 20.04 where OVN 20.03 is provided.
In case when API extension is enabled and OVN < 21.06 is used, Neutron
will fallback to stateful ACLs even for stateless security groups which
may be confusing for Neutron API users.

This needs to be done with config option and not by checking
automatically in OVN if ""allow-stateless"" is supported keyword for ACL's
action because it needs to be done during initialization of plugin,
where IDL isn't initialized yet and it would cause deadlock when Neutron
would try to connect to the OVN NB.

Closes-Bug: #2003999
Change-Id: I62e77dad2782e9c546745e860fda7622a8281739"
83da1e6d79c4d971718d31cbd3aa038353adbae8,2023-01-30 18:43:24-03:00,"Improve message for subnet gateway out of host IP addresses range

Following the discussions on #2004004, we notice that there is an error
message in the Neutron code that is misleading.

This patch intends to improve the exception message, and provide a
little bit of documentation regarding the gateway IP address
validation for subnets.

Related-bug: #2004004

Change-Id: Ibf09254b5b2fee6efd3de5e5dc6f013424831db9"
f7e31b4c0533687622f8f2644c802574e31536f7,2023-02-01 09:32:28+01:00,"[OVN] Allow logging all traffic related to an ACL

Before this patch, we would only get logged the client to server side of
the communication. The OVN allow-related ACL option was implemented [0]
so as to be able to log also the packets that are going from server to
client. This patch implements the addition of that feature in Neutron
and needs OVN version 22.03 or updated 21.12.

[0] https://patchwork.ozlabs.org/project/ovn/patch/20220201141118.1846390-1-mmichels@redhat.com/

Closes-Bug: #2003706
Change-Id: I72d061c333f53e07f6feedec032e2c0b06a61248
Signed-off-by: Elvira García <egarciar@redhat.com>"
221cf9497fed414b01206ece6c6d41d0ec7d4088,2023-02-01 11:28:46+01:00,"[Secure RBAC] Add shared_qos_policy rule

For shared QoS policies we need to have additional rule which will allow
to list shared policies for projects which aren't owners of the QoS
policy.

Closes-bug: #2004013
Closes-bug: #2004014
Change-Id: I593896ab087e3d916b10d7d5f6b22b501060b934"
5d505e7b7c3d9cd6b54f24baa58ded8a07fb6290,2023-02-01 11:48:34+01:00,"[Secure RBAC] Add shared_security_groups rule

For shared security groups we need to have additional rule which will allow
to list shared SGs for projects which aren't owners of the SG.

Closes-bug: #2004015
Change-Id: Ic2a0e390f5baed6772bfeb5306052acaff657923"
17be2505d145d404967b30d9794b9d027b83ac6b,2023-02-01 11:54:16+01:00,"[Secure RBAC] Allow network owner to delete ports plugged to the network

Network owner should be able to delete ports plugged to the owner's
network, even if port belongs to some other project.

Closes-Bug: #2004012
Closes-Bug: #2004016
Change-Id: I6d5418762b48ff382ca95b1a445a6edc7d72b424"
1c27d8b5b41f7bc63d2f3fa61f94be7e98e2101d,2023-02-01 12:22:50+01:00,"[Secure RBAC] Fix policy to get flavors

Flavors are resources which don't have owner and should be able to
be listed/showed by any user with READER role. This patch fixes policy
for ""get_flavor"" action to match this requirement.

Additionall it removes ""project_id"" field from the target object in
the flavor policy unit tests.

Closes-Bug: #2004017
Change-Id: I254e88f7c32343034f4799b63b1088c3f966d7a6"
e98a268de4316c4f889925a3da6266e1c70306aa,2023-02-01 14:30:37+00:00,"Propose replacement of ORM from_self()

The from_self() method in SQLAlchemy is currently
being considered for removal from the library,
with a deprecation phase throughout 1.4 and then
removal by SQLAlchemy 2.0.

The from_self() method takes an ORM query object,
turns it into a subquery, then returns a new query
object that will SELECT from that subquery, while transparently
altering subsequent criteria added to the query to
be stated in terms of the subquery.   The current
design direction of SQLAlchemy hopes to
de-emphasize the ""transparently altering criteria""
part of the above use case, and to move users towards a
more explicit and model of usage where a subquery should
be created and used explicitly using the aliased()
construct, which is now very mature and can be used in ways
that were not available when from_self() was first introduced.

On the SQLAlchemy side, from_self() has proven to be one
of the most difficult features to maintain and test
as it can easily lead to extremely complicated scenarios, and
while I am also experimenting with some alternatives that
may still retain some of the ""automatic translation"" features,
those features are still proving to add similar internal
complexity which is having me lean towards the original
plan of removing open-ended ""entity translation"" features
like that of from_self() at least through the start
of the 2.0 series.

A code search for all of Openstack shows that the
two files modified here are the only usages of the
from_self() method throughout all of searchable Openstack
code.  This speaks to the general obscurity of this method,
although neutron's Subnet code is actually using this
method as intended.    The new approach necessarily changes
some of the method signatures here so that the explicit
""subquery"" entity can be passed; code searches again
show that these methods are not being called anywhere
outside, so the query_filter_service_subnets method
becomes the private _query_entity_service_subnets method.

References: https://github.com/sqlalchemy/sqlalchemy/issues/5368

Closes-Bug: #2004263

Change-Id: Icec998873221ac8e6a1566a157b2044c1f6cd7f3"
07fd743dc98d4d39e187119c17d0db70be3c852d,2023-02-02 02:25:00+00:00,"Remove extra call to config_logging() for neutron-server

Logging is setup early in neutron/service.py already.

Change-Id: Ib1b42235032a179a77932b6e3049f50c41073bfd
Closes-bug: #1693691"
3cf4899cf0d6a4868f7ac6ac86451b06360abcef,2023-02-01 21:55:32-05:00,"[OVN] Adding support for VNIC type virtio-forwarder.

The virtio-forwarder related code has already been written in other
neutron components except OVN. Added logic solving virtio-forwarder
in OVN plugin.Add unit tests of virtio-forwarder VNIC type. Test
cases include test_create_port_with_vnic_virtio_forwarder,
test_bind_virtio_forwarder_port_geneve,
test_bind_virtio_forwarder_port_vxlan.

Closes-Bug: #1988542
Change-Id: I80f32db761f5813409c6f789177b2fdebf643305"
54eff20a7226bf782c9db65112bf1e175519d60e,2023-02-02 07:17:22+00:00,"[OVN] New OVN Neutron Agent extension: QoS for HWOL

Added a new OVN Neutron Agent extension: QoS for hardware offloaded
ports. This extension will enforce the minimum bandwidth and maximum
bandwidth egress QoS rules for ports with hardware offload (DevLink
ports).

This extension uses the ""ip-link"" commands to set the ""ceil"" and
""rate"" parameters on the corresponding virtual functions.

Related-Bug: #1998608
Change-Id: Id436e43868fa0d3fbc843adb55f333582ed0134f"
abfa8940b16e3fdf8120042919646cdf3f1e32aa,2023-02-02 13:26:35+01:00,"[OVN] Fix the OVN Agent config file location

The ""ovn_agent.ini"" file should be in ""/etc/neutron/plugins/ml2"",
same as any other ML2 mechanism driver agent configuration.

Related-Bug: #1998608
Change-Id: I3f0e948202b522df162ed67fe669a6ff8e90ab41"
3c2af924d972b175ddd7f030822d2e37b2b4085c,2023-02-02 19:32:03+01:00,"Add CI jobs using SQLAlchemy master branch

This patch add the following CI job definitions:
* neutron-ovn-tempest-with-sqlalchemy-master
* neutron-ovs-tempest-with-sqlalchemy-master
* neutron-functional-with-sqlalchemy-master

Closes-Bug: #2004265
Change-Id: I1b813c5b3248ab5d3e321f1b31dd095d82e2feca"
8be42f6d7242524d504fd4a0d9020706fae48fc0,2023-02-03 01:39:39+00:00,"Enable qos extension_driver in ovn_db_sync

In Change Ib597b62017b56b41009dd4d7359e169f424272b0, the 'qos'
service_plugin is enabled when doing an ovn_db_sync. However, if the
'qos' extension_driver is not installed, it will error out.

Append 'qos' extension_driver when using sync to fix this issue.

Closes-Bug: #1988577
Change-Id: I422d86b8e5650ced4e2cc722cea9cc30061905b4"
61b2917a3e8596cbb4074024cee0844e319ed551,2023-02-03 21:06:00+01:00,"Filter subnets by ""enable_dhcp"" flag using the correct type

While other SQL engines can compare interger and boolean types,
PostgreSQL needs explicit casting to compare variables. Method
""_sync_subnet_dhcp_options"" is currently raising the following
error:
  operator does not exist: boolean = integer

Closes-Bug: #2004581
Change-Id: I715029c311c4516f3212054c5c72533b12fd0986"
c93c31852b060b748106b90b1105132d7f4e7fe7,2023-02-03 22:18:39+01:00,"Adapt deploy_rootwrap filters path for tox4

This patch also fixes the issue of the deploy_rootwrap.sh script related
to the rootwrap filters path. This path checks if the path is absolute
(tox3) or relative (tox4) and makes it absolute in the second case.

[1]https://github.com/tox-dev/tox/issues/2730

Depends-On: https://review.opendev.org/c/zuul/zuul-jobs/+/866943

Closes-Bug: #1999558
Change-Id: I7a4a30268cb352f25bad7983b94690c0b681e5fa"
5c697b8d60571ef4a052586a73edd3d513d0d635,2023-02-06 09:20:55+01:00,"allow manila ports to do multiple port binding for ML2

Similar to Nova live migration
(see https://review.opendev.org/c/openstack/neutron/+/414251/74/neutron/plugins/ml2/plugin.py#2005)
Manila wants to do share live migration, and needs to modify its ports in a
similar way: issue port binding upfront to determine the segmentation id in
the target network segment.

Closes-Bug: #2003095
Change-Id: I647d00a30564ade246e704ff199b6aceafdc4c50"
4e71675ddbb1ad0e3002a8fe6071c357d9d30c9e,2023-02-06 16:34:23+01:00,"rbacs: add functionl test that asserts behavior on networks/users

This is adding functional test to validate shared/not shared behavior
with networks and users.

Related-bug: #1918145
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Ic1fc820f407ef9c9fa2d44ada7af86f556cc0cd6"
47fef55e25fb1b7d3c6c7d6083a916e26fd45b6d,2023-02-08 11:48:48+01:00,"Add a method to retrieve and register ""rpc_workers"" config knob

This new method retrieves the config option ""rpc_workers"" from the
configuration. If this option is not loaded, the method registers
the ``neutron.conf.service.SERVICE_OPTS`` options before reading
the knob again.

Closes-Bug: #2004656
Related-Bug: #1889737

Change-Id: I1f99cb32f33cc91141136cb4e3fbd33715530c59"
5250598c804a38c55ff78cfb457b73d1b3cd7e07,2023-02-08 13:14:19+01:00,"Improve scheduling L3/DHCP agents, missing lower binding indexes

This patch is covering an edge case that could happen when the number
of DHCP agents (""dhcp_agents_per_network"") or L3 agents
(""max_l3_agents_per_router"") has been reduced and there are more agents
assigned than the current number. If the user removes any agent
assignation from a L3 router or a DHCP agent, it is possible to remove
first the lower binding assigned registers.

Now the method ``get_vacant_binding_index`` calculates the number of
agents bound and the number required. If a new one is needed, the
method returns first the lower binding indexes not used.

Closes-Bug: #2006496
Change-Id: I25145c088ffdca47acfcb7add02b1a4a615e4612"
6df75ca6962504741caee747b3237bfdbaa03611,2023-02-09 13:48:25+00:00,"Deprecate allow_stateless_action_supported config option

This config option will not be needed anymore in 2023.2 (Bobcat) release
of Neutron as we will not support then Ubuntu 20.04 so we will be able
to bump minimal required OVN version to be >= 21.06.

Related-Bug: #2003999
Change-Id: I6933019406dfee67b279a413310a7a19f485d372"
76f3b75ad64b3966f51fb1a75b065d70dcc56e3d,2023-02-09 17:34:11+01:00,"[OVN] Skip ports with VNIC type direct and no port binding

In the method ``add_vnic_type_and_pb_capabilities_to_lsp``, if the port
binding profile is an empty string (or something that cannot be parsed
by jsonutils), skip this port.

Closes-Bug: #2006112
Change-Id: Ifa8956bf1c5eb9b6c3214638ac4e5b7f10e4cf74"
d83e243c6d54f29ded7a0bea6e5538772fff3a8e,2023-02-10 15:50:56+01:00,"[OVN] Add missing LSP device_owner info in trunk driver

The ``OVNTrunkHandler`` class updates the port binding profile of the
trunk subports. The methods ``_set_binding_profile`` and
``_unset_binding_profile`` update both the OVN LSP register and the
Neutron DB port register. This patch adds the missing field
""neutron:device_owner"" from the LSP external_ids dictionary.

This patch also updates ``OvsdbNbOvnIdl.set_lswitch_port`` API method.
The method now accepts ""external_ids_update"" kwarg. This dictionary
allows to update (or add) individually each LSP.external_ids
dictionary key, instead of overwritting the whole variable.

NOTE: ``set_lswitch_port`` is not used outside Neutron now so this is
safe to change the API method signature.

Closes-Bug: #2006735
Change-Id: I985f3294b2ca7ab5989022ec1b904c8e29354e07"
fce516e3461054716ff2d4623c240d3e006acbeb,2023-02-10 16:08:56+01:00,"[OVN] Bump the port revision number in trunk driver

When the subport binding information is updated in the OVN trunk
driver, the OVN revision number should be updated too, same as
in other ``ovn_client`` method, for example.

Closes-Bug: #2006734
Change-Id: Icda34910ea7fe308814e0cc60999b465d3540b67"
24152f2019784fe684bb7b439b78e7265c6ffa08,2023-02-13 11:37:33+01:00,"Add debugging exception messages in ``test_ovs_and_ovs_events``

This patch also changes the ``fake_ovn_agent_extension`` events to
catch both create and update events.

Closes-Bug: #2006612
Change-Id: I7229be21f392a08fb3ee3313b3cd8ab413fcde7e"
f9880c20133f1cce76ffcf695d3e153881d64e53,2023-02-13 12:57:46+01:00,"Increase tox-py311 timeout to 3600 seconds

This is default configured timeout for Neutron ""openstack-tox-pyXX""
jobs.

Closes-Bug: #2006264
Change-Id: I544ef84a015d1a90969dd41713b6248c6b84424d"
595c387efb19744e1c9547b79501e4bb8a94ea0d,2023-02-14 04:40:15+01:00,"[UT] Mock the retry decorator when creating duplicated NDPProxy

The test ``test_create_ndp_proxy_with_duplicated`` was correctly testing
the creation of a duplicated NDPProxy object. However it was taking
around 3 minutes because the decorator ``oslo_db_api.wrap_db_retry``
was retrying the object creation several times. This patch mocks the
retry decorator; now the test takes around 6 seconds.

Closes-Bug: #2007254
Change-Id: I2fcad691df4a7ae112e1d55fefe662016430aa5b"
5dac5f8c6c4186921a7553116c38f5f03310b1d2,2023-02-14 21:46:24+05:18,"[ovn-ipv6] Temporary exclude test_hotplug_nic

The test is failing quite often with ovn
version(v22.03.0) included in ubuntu jammy.

Until ubuntu jammy includes fixed version
of ovn let's exclude this test.

It's running fine on ubuntu focal and
ubuntu jammy jobs running with ovn from source.

Related-Bug: #2007166
Change-Id: I0377418bb5b4a68f9c08326bff0211f668a22b58"
5e15c4a4d443c8a59756af9a75a81a1859bda464,2023-02-14 19:06:35+01:00,"Allow other kwargs in ``DhcpBase.disable``

Since [1], this method is called with an extra argument ""network_id"".
Instead of filtering out this parameter when the driver method is
called, the method signature now accepts other kwargs.

[1]https://review.opendev.org/c/openstack/neutron/+/865823

Closes-Bug: #2007553
Change-Id: I0c14a73699702b9af828a5703a8f9fe8b87d3e67"
d052da85cfd2e36ec475069d41b7b1acfaa32fbf,2023-02-15 15:31:35+00:00,"Mark ``test_port_creation_and_deletion`` as unstable

Once [1] is implemented, this decorator can be removed.

[1]https://review.opendev.org/c/openstack/neutron/+/873118

Related-Bug: #2006603

Change-Id: Ie66da72b8cabce3d1d6ecff7bfd4dd9c21aaa224"
e9ce025a69dd00dde8efe17a45fb2bc46b145057,2023-02-16 12:53:20+05:18,"[dhcp agent] Fix clean_devices

Exception[1] is seen in periodic_resync of
dhcp, this patch fixes it.

[1] TypeError: DhcpLocalProcess.clean_devices() missing 1 \
required positional argument: 'network'

Related-Bug: #1764738
Related-Bug: #1956435
Change-Id: Ie265b864718d9eaaea2f688649fcff24e47520b6"
502c0253de6b47cc096998b10dc88b679c7fe878,2023-02-16 14:17:09+00:00,"[ovn-ipv6] Temporary exclude ``TestNetworkBasicOps`` class

Same as in [1], the test is failing quite often with ovn
version(v22.03.0) included in ubuntu jammy.

Until ubuntu jammy includes fixed version of ovn let's
exclude this test.

[1]https://review.opendev.org/c/openstack/neutron/+/873684

Related-Bug: #2007565
Change-Id: I32a83765d7d547fadd7bfa8a30c9ba7d4519f5e2"
c61ce3447e2aa3689fa7545170b4e0d94d1a4380,2023-02-17 09:55:50+01:00,"Format correctly (dialect=mac_unix_expanded) the MAC addresses

Format correctly (dialect=mac_unix_expanded) the MAC addresses in
``DHCPAgentOVSTestFramework``. Before this patch, this is the leases
file the DHCP server was using:
  Done building initial lease file
    /tmp/tmp3_m7_fqk/tmpiadm5q0e/9afb0444-e28e-4582-abb0-031d6ed500e4/leases
    with contents:
  1676775199 24:77:3:7d:0:4c 192.168.10.11 * *
  1676775199 24:77:3:7d:0:3a 192.168.10.1 * *

Related-Bug: #2007992
Change-Id: Ie903fd3f645f7428854cf6b2fe48a1edf342cc32"
f5dc708e1a8138aa79eff07db68ff59d7b5b6a94,2023-02-17 10:11:23+01:00,"Check port.tag is not DEAD_VLAN_TAG in ``DHCPAgentOVSTestFramework``

Check that the port added has no tag DEAD_VLAN_TAG.

Related-Bug: #2007992
Related-Bug: #1959564
Change-Id: I68760a1833d32201a63d20c8696916a8bde621a9"
1e41558851b7e561e1dcf99499e6f7920a91fa72,2023-02-18 05:16:35+01:00,"Reduce number of routers created in ``test_gateway_chassis_rebalance``

This patch reduces the number of routers created in
``test_gateway_chassis_rebalance``. For the test purposes, 5 routers
is enough, reduce the test executing time and the OVN load.

This patch also captures the ""Port_Binding"" update event in the
``WaitForCrLrpPortBindingEvent`` class.

Related-Bug: #2007353
Change-Id: I66b39b1d0dccfbb18bec5646d8954eee8c687f0c"
f991fc2fbef6b69b97d373e7acff8038b2da3028,2023-02-20 12:32:55+05:18,"[ovn][ipv6] Skip test_update_delete_extra_route

The issue is random and when it reproduces, any test
involving localport(metadata access) ran just after
test_update_delete_extra_route fails as metadata
flows are missing.

The issue do not reproduce in ovn-22.06+(since [1]).

So until issue's fix is available in Ubuntu jammy,
we can skip this test.

[1] https://github.com/ovn-org/ovn/commit/eaf9832be2

Related-Bug: #2007565
Related-Bug: #2007166
Change-Id: Ie2f5ff169bb3007694b9858465125775cfee40f4"
b00ae45140b737778caf0deace8ae833309a1bd6,2023-02-21 18:09:28+01:00,"ml2 plugin: use const from neutron-lib

Due to the neutron-lib dependency, this patch bumps the needed
library version to 3.4.0.

Depends-On: https://review.opendev.org/c/openstack/neutron-lib/+/869294
Related-Bug: #2003095
Change-Id: I1aa7b73621e049d8f8a7038e3679cb8bbfc6313f"
169ef0558926656fe9ef38fea42dcada2786ae0d,2023-02-21 22:19:52+01:00,"Change neutron-ovs-tempest-dvr-ha-multinode-full job's config

Now this job runs on 3 nodes:

* 1 main, controller and networker like, without nova-compute service on
  it, this node has ""dvr_snat"" set as L3 agent's mode,
* 2 compute like nodes with nova compute and L3 agent in ""dvr"" mode

Even though there is only one ""dvr_snat"" node in the job, it keeps
""l3_ha"" option set to ""true"" in Neutron's config. That way we are still
testing ""ha"" code path of the centralized part of the router but also
job is now closer to the real life, and supported deployments topology.

Additionally this patch adds nodeset for 3 nodes with Ubuntu Jammy and
controller node not running compute service as there is no such nodeset
defined globally.

Related-Bug: #1934666

Change-Id: Id6a91795ebc73be26bb34d9eaf8a53b2b6a1ba0c"
aa40aef70fac609c086c4c6511c6b17e597da044,2023-02-23 08:10:12+01:00,"Mark fullstack TestMultiSegs.test_multi_segs_network as unstable

It is failing intermittently due to some issue with dhcp which we so far
don't know. Let's make our life easier and mark this test as unstable
for now.

Related-bug: #2007152
Change-Id: I4d51e5a9ece8d2265549db66e1bf31e3dd727748"
e68e4162cebfa8e5d8f70d4220119d5ca54666bf,2023-02-23 15:25:27+00:00,"Prevent router_ha_interface port from being removed via API

If someone removes the port with device owner router_ha_interface,
then we can get unexpected router behavior like doubling
arp response packets. This patch prohibits removing such a port.

Closes-Bug: #2008270
Change-Id: Ief031801c1a3e3dd64e6cbf65e27f04f2bef9cba"
827fbd01c306ce292e46b0d881bc3cc804202285,2023-02-24 05:34:07+01:00,"Normalise format of OVN agent heartbeat timestamp

A recent change [1] to show the real heartbeat timestamp from OVN agents
had a side effect of changing the timestamp format, which now includes a
timezone:

    +-------------------+----------------------------------+
    | Field             | Value                            |
    +-------------------+----------------------------------+
    | last_heartbeat_at | 2023-02-23 14:12:07.471000+00:00 |
    +-------------------+----------------------------------+

This unexpected format change causes some clients to fail to parse the
response to GET /v2.0/agents.

Normalise the format of the timestamp to remove timezone information.
Also remove the microsecond part, which was not done for OVN, but is
absent from other network agents.

[1] https://review.opendev.org/c/openstack/neutron/+/844179

Closes-Bug: #2008257
Change-Id: I75a37fb9b49a421e4524da6b56ef8362ceb6107b"
e7c92d92e479a4bdadb7e0a70305434ecd935fe7,2023-02-27 08:45:34+00:00,"[sqlalchemy-20] Use the .begin() method of Engine

Closes-Bug: #2008226
Change-Id: Id713799a45b543edcdd3011444addaba9469bd61"
dbfc18d1fa122140074d5c960c8440189b386fb8,2023-02-27 14:48:38-06:00,"Apply Ironic's server-ip-address as TFTP next-server

This patch uses existing DHCP option 255 (server-ip-address)
provided by Ironic and applies it as next-server for the purpose
of provisioning a baremetal server with OVN DHCP.

Related-Bug: #2007167
Change-Id: I59038639a8411c11c5fb8b366d9c858ef3db4f70"
7f46ea9b6d6b4b7d766ffb19fbbab6c17c37afe1,2023-02-28 07:10:44+00:00,"Remove unused rbac rule

Closes-Bug: #2007414
Change-Id: I56e05e17a4b43d5606d2dc68020262ae7eadd235"
acb809eea422f417d4bfb2d46918839d7d379e4c,2023-02-28 08:19:44+01:00,"[OVN] Ensure traffic for provider vlan networks is not tunneled

This patch adds an extra checking to ensure the
""reside-on-redirect-chassis"" is set to true for the logical
router port associated to vlan provider network despite having
the ""ovn_distributed_floating_ip"" enabled or not. This is needed
as there is an OVN bug [1] making it not work as expected.

Note setting this to true has implications as the traffic will be
centrallized (but not tunneled) through the node with the gateway
port.

The expected behavior of this flag, once [1] is fixed is:
- reside-on-redirect-chassis flag to False: means traffic goes
  tunneled to the controller with the gateway port. Means it requires
  extra MTU reduction to work.
- reside-on-redirect-chassis flag to True: means traffic is not
  tunneled to the controller with the gateway port, but the traffic is
  centralized through the controller with the gateway port. Thus it
  does not require extra MTU reduction.
- reside-on-redirect-chassis to False, but with ovn-chassis-mac-mappings
  configured: means the traffic is fully distributed and it is not being
  tunneled, nor sent, through the controller with the gateway port. This
  is the preferred option as it does not require MTU reduction and it
  avoids the extra hop. However it is not working as expected, therefore
  the fallback to set reside-on-redirect-chassis to True.

[1] https://bugzilla.redhat.com/show_bug.cgi?id=2162756

Closes-Bug: #2003455
Change-Id: I662cb30c842e54bb9f7dabac5519283aa7c7f8d0"
2af5fd889b3286dcec21e2bc89f287a0e4129d0f,2023-03-01 09:26:42+01:00,"Add sleep before checking if ovs port is in the namespace

When network device which is ovs internal port is moved to the namespace
it may happend sometimes that it will have ""shy port syndrome"" [1].
Even though there is wait for device to be in namespace in the set_netns
method it may happend that device is in namespace during this check but
it dissapears for short time later and that causes failures e.g. in
functional tests like described in [2].
To avoid that, this patch proposed simple (and ugly) sleep for 1 second
before checking if port really exists in the namespace. If it will be
""shy"" port it should already flap during that 1 second.

[1] https://bugs.launchpad.net/neutron/+bug/1618987
[2] https://bugs.launchpad.net/neutron/+bug/1961740

Related-Bug: #1961740
Related-Bug: #1998337
Change-Id: I442587e7ef55917f4ea873e190bf8afbc0e911e1"
41846a6e8bd5fd55cd2661d50c51d31956fa1156,2023-03-01 14:36:51+00:00,"[sqlalchemy-20] The Connection.connect() method is considered legacy

Closes-Bug: #2008227
Change-Id: I3dfa2688f7288dda43883b3cfba45e5f15f182fb"
ebcde41fc8c6f524aa488f705295a2e77f172524,2023-03-01 16:21:58+01:00,"[OVN] Add ``get_gateway_chassis_az_hints`` method to OVN API

This method description was missing in [1].

[1]https://review.opendev.org/c/openstack/neutron/+/825073

Related-Bug: #1958225
Change-Id: I7856aa20947e75b394e2cf4c66f48764dbbd425a"
8e3bddbf8bc5296143357d3df7fd27aeb9bb9bd9,2023-03-02 11:47:47+01:00,"Ensure vlan network traffic is not centralized

This patch partly reverts the workaround introduced at [1].

In patch [1] the reside-on-redirect-chassis was forced for vlan provider
networks to force centralized but not tunneled traffic for those
network. In this patch we are making use of the ""redirect-type"" flag
instead so that the traffic can be distributed and still not tunneled.
This flag needs to be set on the router gateway port (port connecting
the router to the external network) unlike the previous one that was set
on the router interface port (port connecting the (vlan) internal
network to the router). In this patch we are setting it on all ovn
gateway ports if DVR is enabled, as:
- It is needed for vlan (provider) network to have their traffic
  distributed instead of tunneled to the controller where the cr-lrp is
  associated
- It is not having any effect on the geneve tenant networks as it only
  applies to network that has a localnet port associated to them.

[1] https://review.opendev.org/c/openstack/neutron/+/871252

Closes-Bug: #2003455
Change-Id: Ia05416df88904e864d4fc9760ffcdc97a4651f9f"
999116126e2a7d5c53f275228a3eeda5e98c6445,2023-03-02 17:35:18+00:00,"Add full support for OVN NB ""Gateway_Chassis"" table

This table is supported since OVN v20.03.

Closes-Bug: #2008077
Change-Id: I3022f6cb2ecb2d342f6fcb43835f378308c3cb96"
d4a85833a70d1ffe06985988a87dd85d39c9d7a8,2023-03-03 08:04:14+00:00,"[sqlalchemy-20] The Session.begin.subtransactions flag is deprecated

Closes-Bug: #2008276
Change-Id: I5472db98c6ae24b8b1e6add2c0d73aeb1ed016ca"
d9358b67bdd8babf890e07f3d0d480e90a1784d7,2023-03-07 03:06:56+00:00,"functional: set dns_domain config option after its registration

Otherwise, the suite may complain about unknown option.

Related-Bug: #2009053
Change-Id: I5ead48d504d3429c0c829214bba02896f0d964ac"
d44f164f4d38baf3e5b0e5a6fbb34df055e52b86,2023-03-07 03:07:02+00:00,"ovn_idl_impl: fix a logic bug in get_sg_port_groups

The function is supposed to omit neutron_pg_drop Port_Group (as per its
docstring) but it actually returns it because of incorrect if-statement
structure.

The function is not used anywhere in the tree and hence doesn't affect
any feature, at least in master.

(It was used before I27af495f96a3ea88dd31345dbfb55f1be8faabd6.)

The function will be used in a consequent patch, so it now becomes
important to make it behave as documented.

Related-Bug: #2009053
Change-Id: I0c5d3db521131cc71135a9c787ed01479b451cfb"
cf96bd8bdf9751c54ba8d47569e4a1269fc61e9e,2023-03-07 08:37:54+00:00,"ovs: fix regression when vlan mapping is not already registered

Bug introduced by Ic3c147136549b17aea0fe78e930a41a5b33ab9d8, when a
VLAN mapping is not registered during a call to
update_network_segement, the function should return None.

Closes-Bug: #2009215
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I91f8e8bd18d9956216e5715c658dfb408a2cbf07"
c8ccf2ffbb6434b3f5826b85973d7c7744138678,2023-03-07 19:21:01+01:00,"[OVN] Change oslo config options entry point for the OVN agent

The correct value, as defined in the namespace of the oslo config file,
is ""neutron.ml2.ovn.agent"".

Closes-Bug: #2009678
Change-Id: I1024c6248a2f98555109c1a305c35ea11ae69b51"
b9567033fc23e9288bf555eff306145ac66f260a,2023-03-08 00:28:43+01:00,"[OVN] Use the BW values retrieved from ``get_port_qos``

In ``QoSMinimumBandwidthEvent`` and ``QoSBandwidthLimitEvent``, the
bandwidth value is provided by the method ``get_port_qos``. This method
handles when the value to be retrieved is not present in the
required register and returns 0.

Closes-Bug: #2009703
Change-Id: Idbb8f98eaa429601e2f16861eb01ad72c68cffa6"
008277b8c12d99438951a308b278203fa7a7c3ef,2023-03-08 04:25:53+01:00,"[OVS] Allow custom ethertype traffic in the ingress table

This patch is a partial revert of [1], reinstantiating the code merged
in [2]. This patch is the complementary to [1]: the traffic with
custom ethertypes is allowed in the ingress processing tables, same
as [1] is allowing all traffic from the virtual machine ports in this
host to leave the node. Both, this patch and [1], are bypassing the
OVS firewall just for the traffic with the configured allowed
ethertypes and just for/to the local ports and MAC addresses.

Any other traffic not coming from a local port or with destination
a local port, will be blocked as is now.

[1]https://review.opendev.org/c/openstack/neutron/+/678021
[2]https://review.opendev.org/c/openstack/neutron/+/668224/

Closes-Bug: #2009221
Related-Bug: #1832758
Change-Id: Ib8340d9430b946a446edf80886c49fbac729073c"
bffa642b351f7fc3bb5cfb7a1bb2a3499c4b4506,2023-03-08 09:12:10+01:00,"[OVN] Method ``get_port_qos`` should always return 2 values

The method ``neutron.agent.ovn.agent.ovsdb.get_port_qos`` should
always return 2 values, even when the LSP is not present. This
patch:
* fixes the output, returning 2 values
* catches the exception raised when the LSP is not present in the
  OVN NB database
* returns the default max_kbps and min_kbps values (0, 0).

Closes-Bug: #2009804
Change-Id: I03ea78fcc5825e35c07dda1aa790769aa918dd8a"
5c98d9e8d1bc66b0e5010e7d9abbe61cfcc7bae5,2023-03-08 17:14:19+01:00,"[OVS] Parse the ""permitted_ethertypes"" at the FW initialization

Parse and validate the ""permitted_ethertypes"" configuration variable at
the OVS firewall initialization. Any error in the configuration will be
logged only once.

Closes-Bug: #2009728
Change-Id: Ib5439791d7bc0a8457bb10f887b1077fd6438619"
dea48cfc0a491c63e5a3f899e545b3e8768cbb80,2023-03-14 09:39:32-05:00,"Only create a frozen  Row on matching events

It is very wasteful to create a frozen row copy for every event
that we process. It can dramatically increase the time to process
the initial events from connecting to the database.

Closes-bug: #2011590
Change-Id: Ic4bf26d9b1f937073ddc6d0c3e9d22a777912ebf"
9704dca84ea3ad21ecf9730eea03692daeddf382,2023-03-16 11:32:56+00:00,"[OVN] Explicitly define the fixed IPs for the metadata port

The metadata port fixed IPs depend on the subnets ""enabled_dhcp"" flag.
If the subnet has this flag disabled, the metadata port doesn't receive
an IP on the subnet CIDR.

The method ``create_metadata_port`` should explicitly define what fixed
IPs should request the metadata port during the creating depending on
the subnets ""enabled_dhcp"" flag.

Closes-Bug: #2011724
Change-Id: If362fab20ac03f8b62471b60c031f9349171ce93"
04d3f889efeef74e8eb8d8bf330f1594913b161a,2023-03-16 11:09:10-05:00,"Fix metadata agent intermittent test failures

Metadata agent has been experiencing intermittent failures
mostly because of test conccurency and how the metadata agent
code assumes its the only process running on the system and
operating on the ovnmeta-* namespaces. See comment#1 the
linked bug for more details. Although I dont like forcing
--concurrency 1 for this test class, I think that is going
to be the best solution and any new tests that will be added
in the future.

Closes-Bug: #2011377
Change-Id: Ie7f3b496de6b23be5739fbeba10f53602e8b300d"
63584957203ec9f5ba165177978213c3909f81f0,2023-03-17 09:24:02+01:00,"Delete sg rule which remote is the deleted sg

Based on bug #2008712 if we have a security-group which
is the remote group of a 2nd security-group, the backend
never deletes the rule of the 2nd group which
remote_group_id is the original security-group.
By AFTER_DELETE event for each rule that has the
security_group_id as remote_group_id, we can make the
mech drivers do their work and delete these rules in the
backend.

Change-Id: I207ecf7954b06507e03cb16b502ceb6e2807e0e7
Closes-Bug: #2008712"
c97dcfd03fccd8bfc011a26a2cbc62b4e6fa52ad,2023-03-19 20:17:55+09:00,"doc: state that O flag can be 0 in dhcpv6-stateful

The current document states that O flag will be 1 when ipv6_ra_mode is
dhcpv6_stateful, but the actual implementations of both ml2/OVS and
ml2/OVN set O flag to 0 according to the following implementations:

ML2/OVS
https://github.com/openstack/neutron/blob/f545c002dc699f849026ccd1bad403b2933373aa/neutron/agent/linux/ra.py#L53-L55

ML2/OVN
https://github.com/ovn-org/ovn/blob/a5238e6234d17e119dca952d9e43c36dce057d5e/controller/pinctrl.c#L3733-L3734
https://github.com/ovn-org/ovn/blob/a5238e6234d17e119dca952d9e43c36dce057d5e/lib/actions.c#L3349-L3350

This actual behavior looks correct because O flag can be either 1 or 0
when M flag is 1, according to the following statement of RFC 4861:

  https://www.rfc-editor.org/rfc/rfc4861#section-4.2
  If the M flag is set, the O flag is redundant and can be ignored
  because DHCPv6 will return all available configuration information.

To make consistency between the documet and actually behavior, this
commit changes the document to state that O flag can be either 1 or 0
when ipv6_ra_mode is dhcpv6_stateful.

Closes-Bug: #2011687
Change-Id: Id61031d7e707d0ba7b007bae0c9e0f59b8b40f8b"
6e1dbe978166a29c93bce0f52375319897c9b877,2023-03-21 21:48:44+01:00,"Add oslo.db project to the SQLAlchemy master branch CI jobs

In order to speed up the SQLAlchemy master branch CI jobs testing, this
patch is adding oslo.db to the required projects. That will trigger the
installation of the master branch of this project, instead of waiting
for a new release.

Related-Bug: #2004265
Change-Id: Ib5f0b5b15c557041fdab1c3c1ede34dd56cd5bd5"
0220236c63b3bb841146ccb0614434a2bd60ac59,2023-03-21 22:32:54+01:00,"Cleanup before executing ""test_get_all_devices""

The test ""test_get_all_devices"" is executed wiht concurrency=1. Before
executing the test checks, this patch removes any existing macvtap
interface present in the root namespace.

Closes-Bug: #2012510
Change-Id: I98834fc6719caa4909c737f5fe37a8dc51035d6d"
1646e5b28d21392874384ccf0358e20d7f0710c1,2023-03-22 07:55:27+01:00,"Add neutron-lib project to the SQLAlchemy master branch CI jobs

In order to speed up the SQLAlchemy master branch CI jobs testing, this
patch is adding neutron-lib to the required projects. That will trigger
the installation of the master branch of this project, instead of waiting
for a new release.

Related-Bug: #2004265
Change-Id: I15f8ae9d0846d2f52864eef992f5eb95aeaa47a6"
5b4ed5b117f2f418d598af20744f571db581e2ae,2023-03-22 12:15:03+01:00,"Fix concurrent port binding activate

Fix an issue with concurrent requests to activate a port binding.
If there are two activate requests in parallel, one might set the
binding on the new host to active and the other request may
not find the previously INACTIVE row anymore in
_commit_port_binding and initializing the driver_context.PortContext
crashed.

Closes-Bug: #1986003
Change-Id: I047e33062bc38f36848e0149c6e670cb5828c8e3"
f42f1cfa69fc3e90f4a3cb47dc2356bb68d43983,2023-03-23 07:04:04+01:00,"[sqlalchemy-20] Provide SQL ""case"" expression correct input paremeters

The ""case"" expression, as implemented in SQLAlchemy, consists in a set
of tuples of two elements: a column expression and a value. From the
SQLAlchemy ""case"" signature:
  *whens: Union[
      typing_Tuple[_ColumnExpressionArgument[bool], Any],
      Mapping[Any, Any],
  ],

Closes-Bug: #2012705
Change-Id: I2dfc497f0ac9cb4279cae7f851463c6721bf9d77"
2ccf1e1e90c0643daea19ae3f6c42e59aaac9423,2023-03-23 09:47:59+01:00,"[OVN] OVN agent should register ""Chassis_Private"" by default

The event ""SbGlobalUpdateEvent"", loaded by default in the Neutron OVN
Agent, reads from OVN SB ""SB_Global"" table and writes in the
""Chassis_Private"" table. The last one is missing in the default tables
that are registered during the SB IDL initialization.

Closes-Bug: #2012385
Change-Id: I51d64375e69f27b265fbaba4d05a03a37c65929e"
4b8e484e1ded99012a8e332fa1c9ac660f74a17e,2023-03-23 12:52:56+01:00,"Increase port name size and type to internal

This patch increases the port name size in
""test_port_creation_and_deletion"" and adds explicit exceptions
with debugging information.

The port is now type=internal.

This patch also reverts [1] that marked the test as unstable.

[1]https://review.opendev.org/c/openstack/neutron/+/873941

Closes-Bug: #2006603
Change-Id: If85b487dc2db7466c4848043911772ef79140d51"
0a69dd5e3dcfba124348b168aafc82a0f8dadd41,2023-03-23 19:36:27+00:00,"[sqlalchemy-20] query.join should define one table/column per call

The method ``get_router_for_floatingip`` query needs to define a join
clausule per table or column to be joined.

The expected query is the following one:
  SELECT DISTINCT routerports.router_id AS routerports_router_id,
  ipallocations.ip_address AS ipallocations_ip_address

  FROM routerports
    JOIN ports ON ports.id = routerports.port_id
    JOIN ipallocations ON ports.id = ipallocations.port_id
    JOIN ports AS gw_port ON gw_port.device_id = routerports.router_id

  WHERE ports.network_id = ?
    AND routerports.port_type IN (XXX)
    AND ipallocations.subnet_id = ?
    AND gw_port.network_id = ?
    AND gw_port.device_owner = ?

The goal is to retrieve the router that matches the GW IP, that is in
the same subnet and network as provided.

Closes-Bug: #2012643

Change-Id: Id054ffaca17153ff470b6bc91f7c3da4f7bf0fdc"
e4da60740bb6ff3daad619d71c5771001e782094,2023-03-24 10:47:53+00:00,"[sqlalchemy-20] Do not use strings for aatribute names in loader options

The method ``get_l3_agents_by_router_ids`` is retrieving the
``RouterL3AgentBinding`` registers along with the ``Agent`` information.
This left outer join should be explictly defined using the database
model.

Expected query:
  SELECT routerl3agentbindings.router_id AS ...
  FROM routerl3agentbindings
  LEFT OUTER JOIN agents ON agents.id = routerl3agentbindings.l3_agent_id
  WHERE routerl3agentbindings.router_id IN (XXX)

Closes-Bug: #2012662
Change-Id: Ife9ba5d774934d2cd1a86b3281b78e854d88de3c"
d4654e3011d22b6d789215fcaa1f15f2d7b9a99a,2023-03-29 21:25:10+08:00,"Filter out unsatisfied routers in SQL

We saw auto_schedule_routers took over 40 seconds
for a DVR enabled environment with option
auto_schedule_routers enabled.

Adding new arguments to get_router_agents_count and
dealing with routers separately depending on whether
it is a regular router or HA. The benefits are
we do not need to loop over every router available in
environment. Another reason for doing this is that
get_router_agents_count is used solely to heal
routers with less than required agents so number of
routers with less agents is small for most of the times.

Related-Bug: #1973656

Change-Id: Ic29275815a8c32cee7a6470509687a18fa594514"
0ec04dd638da8cc9f4d5ebb21a09ea5ccb05623c,2023-03-31 23:10:18+02:00,"Ensure redirect-type=bridged not used for geneve networks

As part of [1] the redirect-type=bridged flag was enabled by default.
However this have the side effect of also decentralizing N/S traffic
for geneve tenant networks, breaking the VM connectivity on them when
it must be centralized, i.e., when no FIPs are associated to the VMs.

This patch differentiates and only enable that flag when the networks
conected through that router gateway port are of VLAN/FLAT type.

In addition, to avoid MTU issues for the VLAN networks if there are
also geneve networks connected to the same router, we re-take the
approach on [2] to ensure the traffic is centralized but not tunneled

[1] https://review.opendev.org/c/openstack/neutron/+/875644
[2] https://review.opendev.org/c/openstack/neutron/+/875676

Closes-Bug: #2012712

Change-Id: I25e5ee2cf8daee52221a640faa7ac09679742707"
775d5de9f15dfd0be2bbc2996d2404c0f027244d,2023-04-03 13:06:16+00:00,"Add debug information to ``MacvtapAgentTestCase.test_get_all_devices``

This patch is also adding an active wait checking both the MacVTap
device MAC address and the list of MAC addresses returned by the
MacVTAP manager.

Related-Bug: #2012510
Change-Id: I13d4a76572af050ee07fbb2b9fe2abd60d337955"
e6de524555db92c0d232bc2f6fbc3edfa751a91f,2023-04-04 08:16:28+00:00,"rbacs: filter out model that are already owned by context

Taking example of a network that have multiple rbacs. In a situation
of selecting networks that are shared to a project.

If we could could already match the one that are owned by the context
we can expect les rbacs to scan.

https://bugs.launchpad.net/neutron/+bug/1918145/comments/54

In an environement with about 200 00 rbacs and 200 networks this
reduce time of the request from more than 50s to less than a second.

Related-bug: #1918145
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I54808cbd4cdccfee97eb59053418f55ba57e11a6

Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: Ib155fbb3f6b325d10e3fbea201677dc218111c17"
ade2a9f893afbfbcc26f2cbfb12ccc061696eb6f,2023-04-04 12:03:31+02:00,"Mark ""test_multiple_agents_for_network"" as unstable

Related-Bug: #2000150
Change-Id: Ifd7faf916e9a888505ed990f707224b93ba9efe1"
2aee961ab6942ab59aeacdc93d918c8c19023041,2023-04-04 09:39:19-04:00,"Suppress IPv6 metadata DAD failure and delete address

IPv4 DAD is non-existent in Linux or its failure is silent, so we
never needed to catch and ignore it. On the other hand IPv6 DAD
failure is explicit, hence comes this change.

This of course leaves the metadata service dead on hosts where
duplicate address detection failed. But if we catch the
DADFailed exception and delete the address, at least other
functions of the dhcp-agent should not be affected.

With this the IPv6 isolated metadata service is not redundant, which
is the best we can do without a redesign.

Also document the promised service level of isolated metadata.

Added additional tests for the metadata driver as well.

Change-Id: I6b544c5528cb22e5e8846fc47dfb8b05f70f975c
Partial-Bug: #1953165"
33cf2cdc83a8cee9ee075eb371f779c3d356cf48,2023-04-04 21:06:37-05:00,"Fix ACL sync when default sg group is created

Port group not being available in NB DB during ACL sync
is bit of a corner case but possible during the ML2/OVS
to ML2/OVN migration sync. It can also happen in ML2/OVN
only enviroment. See my detailed description of both
scenarios in the linked Bug.
The easiest fix is to just retry ALL port groups sync
one more time if ACL sync cant find a port group row. This
additional resync is really quick.

Closes-Bug: #2008943
Change-Id: Iac1472f7f896ea434deacb6d236ab469f4f6ed56"
3de8ebebd8d974c12b5a969f40190082173ffe3e,2023-04-10 12:24:25+05:18,"Pin OVS_BRANCH to working commit

With [1] OVN main branch compilation fails, until
main branch is fixed to work with ovs master, let's
pin OVS_BRANCH to working commit.

[1] https://github.com/openvswitch/ovs/commit/07cf5810de

Related-Bug: #2015728
Change-Id: I15b57ff65d861d52ce8e1c2f12d2e084952df8f9"
95c19c88680085b572a01b552fd3f37ff9c1e072,2023-04-12 09:01:25+02:00,"Checkout ""sqlalchemy/alembic"" main branch in sqlalchmey-master jobs

Related-Bug: #2004265
Change-Id: I45283a936420ca9ef3d65d5e216cea99acf8498b"
7dfbdf65a71b7da2865d475cd91988728f734652,2023-04-13 12:01:18+02:00,"Add support for localnet_learn_fdb OVN option

In OVN 22.09, the option ""localnet_learn_fdb"" was added so that
localnet ports can learn MAC addresses and store them in the FDB
table. This avoids flooding issues for VMs on provider networks
when port security is disabled

Closes-Bug: #2012069
Change-Id: I93574b4fe9a79b649bfe755cf7e0697ccc7eb83a"
69f30c92ef595f1bfc57208f88c4c1c5a555f55c,2023-04-13 14:49:09+02:00,"[sqlalchemy-20] Add reader context to ``get_ports_on_host_by_subnet``

Closes-Bug: #2016142
Change-Id: Iba7ff50efc8f6d027fe9151fc64f547aa421b995"
d67d1c273668ad4bb0d6906b7684f4a7b095c8d4,2023-04-13 17:38:18+03:00,"[ovn] Drop use of OVN_GW_PORT_EXT_ID_KEY

At present Neutron maintains an external_id on the
Logical_Router (LR) representing the gw port (singluar).  This
is problematic when introducing multiple gateway ports.

Instead we can find Logical Router Port (LRP) that act as
gateways for the LR at runtime by looking for configuration
present on all GW ports.

Partial-Bug: #2002687
Signed-off-by: Frode Nordahl <frode.nordahl@canonical.com>
Needed-By: I95a0d5f1b7aef985df5625cd83222799db811f2b
Change-Id: I8a915dca1410c70bdfe7a2d72931921d2a1a265e"
e5d4499672fe4e4e57a24ae3194d3adaefe7be15,2023-04-13 17:38:18+03:00,"[ovn] Drop use of LR OVN_GW_NETWORK_EXT_ID_KEY

An update to the OVN QoS driver to support the `qos_gateway_ip`
QoS extension [0] introduced adding the GW network id as an
external_id on the Logical_Router (LR).  This is problematic
when introducing multiple gateway ports, because a single LR
can have gateways in multiple networks.

The external_id key was presumably added because at the point in
time when a LR is deleted, the code had no other source of this
information.  However, it turns out this step is redundant and
not neccessary.

To prove this I include a excerpt of a stack trace when deleting
a router in the commit message:

    File ""services/ovn_l3/plugin.py"", line 210, in delete_router
      super(OVNL3RouterPlugin, self).delete_router(context, id)
    File ""db/l3_db.py"", line 612, in delete_router
      self._delete_current_gw_port(context, id, router, None)
    File ""db/l3_db.py"", line 452, in _delete_current_gw_port
      self._core_plugin.delete_port(
    File ""plugins/ml2/drivers/ovn/mech_driver/mech_driver.py"",
        line 886, in delete_port_postcommit
      self._ovn_client.delete_port(context.plugin_context, port['id'],
    File ""plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py"",
        line 830, in delete_port
      self._delete_port(port_id, port_object=port_object)

Essentially, a routers GW port(s) will be removed prior to
deleting the router itself.

The `ovn_client.delete_port` method will call on the QoS extension
to remove rules matching the GW port, and that will be the same
rules as has previously been added for the router.

I also added a functional test that confirms this fact [1].

0: I46864b9234af64f190f6b6daebfd94d2e3bd0c17
1: Ic92a7b3bd73920d08dee41974bfe3aeb1c64b557

Partial-Bug: #2002687
Signed-off-by: Frode Nordahl <frode.nordahl@canonical.com>
Needed-By: I95a0d5f1b7aef985df5625cd83222799db811f2b
Change-Id: If7c22bc8a95fa13e746c86a1e9d4a6fa25496e1f"
5510cdab92d1d3eac080053a51779d34a8a19614,2023-04-13 17:38:18+03:00,"[ovn] OVNClient._get_router_ports: Drop unused parameter

The `get_gw_port` parameter is currently unused, the
implementation hiding behind it also contains a bug, remove it.

Partial-Bug: #2002687
Signed-off-by: Frode Nordahl <frode.nordahl@canonical.com>
Change-Id: Ie0ba5a478fabe9880746f892ef9c00d7e5660195"
c7ef8249419ecbefdc4a604a98d4b23554c78dae,2023-04-13 17:54:47+02:00,"Do not check the context object in ``TestMeteringPlugin``

Since [1], the admin context is not ``Context`` object created
but the new one created in ``ContextBase.elevated``. This method
copies the object itself (creating a new one), adds the ""admin""
role (if not present) and returns this new object.

Because this method always returns a new object, it is not possible
to check the ``Context`` object used to make the function call, as
long as the test doesn't store the elevated context used in the call
(apart from the reference stored in the mock object).

[1]https://review.opendev.org/c/openstack/neutron-lib/+/880143

Closes-Bug: #2016144
Change-Id: I5d7eb73606428841caa24ce1e38d1bebd5db0a9b"
267efd298479d66c64d55a76bd21c9664080f76a,2023-04-13 12:32:11-04:00,"OVN: Always try and create a metadata port on subnets

When a subnet is updated, for example, to disable then
re-enable DHCP on it, if there is no metadata port it
will just return without trying to allocate an IP,
leaving DHCP unusable on the subnet.  This could happen
if an admin, even accidentally, deletes the DHCP port
on a subnet while DHCP is disabled.

This also makes OVN behave like ML2/OVS, which will
re-create the DHCP port when the enable_dhcp flag is
changed to false and back to true.

Change-Id: I943f2fb4db9dc33dc372f844d6133faff415befe
Closes-bug: #2015377"
9d5163301310a8c3cb72e18cbaed89afbc07f674,2023-04-13 23:33:14-05:00,"Fix intermittent failures in finding metada port in SB DB

The test_agent_metadata_port_ip_update_event can sometimes fail
with finding the port in SB DB Port_Binding table. This is
due to a race condition between when the port is commited to NB DB
,reflected in SB DB and calling lsp_bind on SB DB.
This patch simply adds metadata port create event check before
calling lsp_bind on the metadata port.

Closes-Bug: #2012754
Change-Id: I07fa45401788da6b963830e72a7b3a3cd54662e1"
73ac4510c7c76fed8ec0cd0a00be50d29549c902,2023-04-17 12:14:39+05:18,"[grenade] Collect ovn services logs

Would be useful investigating issues.

Related-Bug: #2015364
Change-Id: I5ef00b1150ebc4bbf03e1c9f192cf0cb884d0c08"
6b5acb58357b94fad7c3868ab650726b922af51a,2023-04-17 17:31:20+02:00,"[S-RBAC] Get availability zone API available for READER role

API call get_availability_zone should be available in new policies for
all users with READER role as this is kind of the same what was in the
old policies (ANY).

Closes-bug: #2016266

Change-Id: I8a99bc52bd815fb3395e902fc8f85cf5f187e288"
34ea8988d6cdc3d676968d57b57525a2515d6128,2023-04-19 20:43:02+02:00,"[OVN] Add update event to ``OVSInterfaceEvent`` class

If the Interface ""iface-id"" is added in an update event, the event
handler will also register that in the HWOL extension.

Related-Bug: #2006603
Change-Id: I699dd30d58e3b02713776393c497cf9fa3793185"
43829301f3ea280913932af9c7eb7cbc42fde8c5,2023-04-19 15:51:59-05:00,"Handle ""no such process"" during keepalived process cleanup

First, the _stop_keepalived_manager() was doing redundant work of
the KeepalivedManager.disable() method. I.e. SIGTERM pid
wait for 5s and then SIGKILL. Therefore I removed that code from the
test file.
Next, I wrapped the self.manager.disable() to handle for the non atomic
operation of the disable() function where SIGTERM can sometimes stop
the process right before the SIGKILL is called. We dont want this to
fail the test as shown in the linked bug.

Closes-Bug: #2017037
Change-Id: Ide244c079094f60779ce446283e5d51ae15e9af3"
f23d7af8d7e36b9d52a8c8ccf64355e22f3adb9c,2023-04-20 12:47:31+02:00,"Use explicit inner join for networks in port query

This improves the performance of the database when fetching a list of ports
for a project user. This change creates an inner join with the networks
belonging to the ports.

Previous SQL query:
SELECT ports ...
FROM network, ports ...
WHERE ports.project_id = <project>
OR ports.network_id = networks.id
AND networks.project_id = <project>

Current SQL query:
SELECT ports ...
FROM ports
INNER JOIN networks ON networks.id = ports.network_id
WHERE ports.project_id = <project>
OR networks.project_id = <project>

Closes-Bug: #2016704
Change-Id: I9c49a307956ecfbf8bd2e866cefb21a212c38bd6"
a84567b8d663f486ab27a7e7879c6b4808f534e9,2023-04-20 12:34:28+00:00,"Remove the ``OVNSqlFixture`` class workaround

This patch reverts [1], that was inherited during the ML2/OVN
migration to this repository. The Neutron functional CI is
stable without this workaround.

Related-Bug: #1808146
Change-Id: I466e4369374f0cf2b59fd5145f5a9b2dc5aaaa51"
b31453af477bc7421f81886fc1f4cba230dad425,2023-04-22 02:44:07+02:00,"[OVN] Admin procedure for duplicated or deleted OVN agents

This patch documents how to detect that the system has duplicated
""Chassis"" and ""Chassis_Private"" registers or when a ""Chassis_Private""
register is orphaned, and how to proceed to health the OVN Southbound
database.

Closes-Bug: #2012104
Change-Id: I926e6b9fe5fbad2968fc92e65082b7bb0d8571a9"
dd184c5c10e3311ceaffd2cde8d66f76aadaebac,2023-04-23 07:26:55+02:00,"Fix Loki tempest jobs

This patch fixes the issues reported in the
""neutron-ovn-tempest-with-uwsgi-loki"" job:
* The missing retry decorators in some ``TapPlugin`` methods.
* Added a session flush in
  ``OVNL3RouterPlugin.create_router_precommit``. In case the router
  creation fails before the creation of the initial
  ``OVNRevisionNumbers`` register, the transaction is retried.
  That will prevent from trying to retrieve a router standard
  attribute that doesn't exist, due to a previous error.

Closes-Bug: #2017131

Change-Id: Idbf7ea6018146b67387f2ff99e281e32170ba039"
4e27e27ae2423126202d22cdb044a3320b96089b,2023-04-23 08:21:35+02:00,"Replace context decorators with context managers

The context decorator needs to have the ""context"" parameter in the
first position or the first argument must be ""self"" or ""cls"",
followed by the ""context"" object.

Closes-Bug: #2017784
Change-Id: Ib80f7c72e78854226b227e354792320c78fed5d0"
f93c9be1c1058e210b551d7200882aa983c2332a,2023-04-24 12:09:21+05:18,"Move to python3.9 as minimal python version

2023.2 release is targetting python3.9 as
minimal testing rutime[1]. openstack-tox-py38
job started to fail as libraries(like tooz) already
dropped py3.8 support.

This patch updates neutron py3 override job template
and setup.cfg to reflect the same.

[1] https://review.opendev.org/c/openstack/governance/+/872232

Closes-Bug: #2017478
Change-Id: I3ebbbd46a284b2f96172a90427b355f3ccd0c098"
2cafe0a9c48eaa29330f70c7f69d99c9edd00a7a,2023-04-25 04:25:57+00:00,"Revert ""Move to python3.9 as minimal python version""

This reverts commit f93c9be1c1058e210b551d7200882aa983c2332a.

Reason for revert: tooz bump is reverted with [1] and that unblocks
py38 jobs, other projects still rely on py38 for some functions and
neutron due to py39 constraints fails to install there. Until next
steps are clear for py38 support in 2023.2 let's revert.

[1] https://review.opendev.org/c/openstack/requirements/+/881329
Change-Id: Ibf6e4bb784c6e26a2e413e45ccc2e8e5269fd562
Related-Bug: #2017478"
82029c2c514aaca5b9d45af46d2f7d945ff3099b,2023-04-25 08:25:45+00:00,"Use a writer context for the online alembic migrations

``DBConnection`` class does not retrieve the URL string
correctly and cannot connect to the database. This patch
replaces it with default writer context that any database
operation transaction uses in Neutron.

Closes-Bug: #2015847

Change-Id: I60523690bc170ec4ba81312ada0f2d83542cae67"
39d252da7cf506bd98d3f48d4ea4b23d88642e60,2023-04-25 09:01:56+00:00,"Deprecated support for Windows OS

As was discussed in Neutron team meeting [1], we are going to deprecated
support for running Neutron on Windows OS in 2023.2 cycle and remove it
in 2024.2.
This decision was made due to the fact that the only company who was
behind Winstackers project and was maintaining this Windows support in
Neutron is no longer interested in maintaining it [2].

Closes-Bug: #2015844

[1] https://meetings.opendev.org/meetings/networking/2023/networking.2023-04-18-14.01.log.html#l-66
[2] https://lists.openstack.org/pipermail/openstack-discuss/2022-November/031044.html

Change-Id: I687204d83c6b2e404785bcdec42e80f2b0e8ac2b"
9f22dc1d3af15ef8a85d608e2d8ffb6d29140fca,2023-04-26 07:52:58+00:00,"Doc: Add FWaaS v2 install details

Change-Id: I8813efac46ff3d2a93933c3025bf5490d21cd622
Closes-bug: #2009832"
88ce859b568248a0ee2f47a5d91c1708b774d20e,2023-04-26 12:22:30-04:00,"Change API to validate network MTU minimums

A network's MTU is now only valid if it is the minimum value
allowed based on the IP version of the associated subnets,
68 for IPv4 and 1280 for IPv6.

This minimum is now enforced in the following ways:

1) When a subnet is associated with a network, validate
   the MTU is large enough for the IP version. Not only
   would the subnet be unusable if it was allowed, but the
   Linux kernel can fail adding addresses and configuring
   network settings like the MTU.

2) When a network MTU is changed, validate the MTU is large
   enough for any currently associated subnets. Allowing a
   smaller MTU would render any existing subnets unusable.

Closes-bug: #1988069
Change-Id: Ia4017a8737f9a7c63945df546c8a7243b2673ceb"
b19b55909dffcdc4ebbbd6d723936f8a188e3e47,2023-04-28 09:58:54+00:00,"Don't set and remove immediately DEAD VLAN tag in tests

In fullstack and functional tests where OVSPortFixture is used to create
port in OVS bridge, just after port was created by ovs interface driver,
DEAD_VLAN tag was removed from the port as it's not needed in tests.
But this could cause race condition and instead of removing DEAD_VLAN
tag, actually correct tag configured by e.g. neutron_openvswitch_agent
was removed and traffic to such port wasn't working at all.

To avoid that race, now method which adds setting DEAD_VLAN tag to the
port_replace transaction is now mocked so there will be no DEAD VLAN tag
set on such port at all.

This patch also removes unstable test decorator from the
TestDhcpAgentHA.test_multiple_agents_for_network fullstack test as it
seems for me that this was the reason why this test was failing pretty
often.

Closes-Bug: #2000150
Change-Id: I3938c94bbd531fac461e80e791c128821a4f837f"
4bac350f6852a356e8d6ab4cae29cb8d426cf7b6,2023-04-28 14:15:45+00:00,"Remove ""neutron-ovn-tempest-ovs-release-ubuntu-old"" job

Neutron is no longer tested in ""Ubuntu Focal"".

Closes-Bug: #2017500
Change-Id: I16b40c4b0a67370721a125ea377f483c7c08efa0"
9ac59e4b4a3b40861308c71bbacc379dacb2bd20,2023-04-28 16:40:04+02:00,"Avoid retrieving ports if network list is empty

In ``QoSPlugin._get_ports_with_policy``, if the network IDs list is
empty, the SQLAlchemy throws the following warning:
  SELECT statement has a cartesian product between FROM element(s)
  ""subports_1"", ""ports"", ""portnumaaffinitypolicies_1"",
  ""testportextensions_1"", ""portuplinkstatuspropagation_1"",
  ""portdataplanestatuses_1"", ""standardattributes_2"",
  ""portdeviceprofiles_1"", ""ml2_port_bindings_1"",
  ""portsecuritybindings_1"", ""portdnses_1"",
  ""securitygroupportbindings_1"", ""qos_network_policy_bindings_1"",
  ""qos_port_policy_bindings_1"", ""trunks_1"",
  ""standardattributes_1"" and FROM element ""networks"".  Apply
  join condition(s) between each element to resolve.

This patch avoids this query by checking the network IDs list. If the
list is empty, the expected port list will be too. This is also a
small optimization because we are skipping the port query.

This patch is also applying the same logic to the second query in this
method.

Closes-Bug: #2018000
Change-Id: Ia5380bc78cc1d0136e11cc4692069279419e285e"
4ad979a534296ab7df4571bc149756aa0cb7d94f,2023-04-28 18:27:11+02:00,"Mark ""test_port_creation_and_deletion"" as unstable

Related-Bug: #2006603
Change-Id: Icbd0bb46a8a8c169279301b26ac92e0f459e1d87"
a9963e90d93afc282a64823fd572ef46d88eaa47,2023-04-28 18:34:21+02:00,"``_get_ovn_version`` returns a 3 element tuple

The output of this method should be compared to a 3 element
tuple.

This patch changes the minimum versions of the supported
features to have 3 elements too. This are the version changes
and their justifications:
* OVN_NB_DB_SCHEMA_GATEWAY_CHASSIS = '5.7.0'
  Version reported in LP#2008077
* OVN_NB_DB_SCHEMA_PORT_GROUP = '5.11.0'
  Version reported in LP#1946023
* OVN_NB_DB_SCHEMA_STATELESS_NAT = '5.17.0'
  Version reported in LP#1949494
* OVN_SB_DB_SCHEMA_VIRTUAL_PORT = '2.5.0'
  Version reported in LP#1949496
* OVN_LOCALNET_LEARN_FDB = '22.09.0'
  Version reported in LP#1946023. In fact, the version
  supporting this feature is older.

Closes-Bug: #2017878
Change-Id: Idc19b30e2453b4d68473b488dba226dc48be9efe"
2be53b1719e24d9a5be42505386a72ccdb26ef8f,2023-04-29 12:26:33+05:18,"[functional] Fix db_set use in test_cascading_del_in_txn

With ovsdbapp-2.3.0 release 'db_set' method excepts
if_exists(defaults to True) option.

The default behavior made the test to fail
as it was expecting transaction to fail.
Adding if_exists=False so it persists the
old behavior.

Closes-Bug: #2018130
Change-Id: I3dfdb0cce89cb860991a731b9a03313402956ddf"
b1cc242faddd4c378dfee7b65ed72b4b190b2467,2023-05-02 21:06:09+03:00,"Add a method to retrieve router gateway ports

A method is added as opposed to having a synthetic field on a router for
performance reasons: gateways will only be queried when needed to use
the external gateways feature API calls.

Partial-Bug: #2002687
Change-Id: Iddde9d986b024109bdb7c2aa777a1b017b6a35ab"
6eb70068014c12ac887163463c84c9bf4fe398c4,2023-05-05 14:05:33+05:18,"Drop retries in tests for TimeoutException

It was originally added due to [1] which is
already reverted[2] as pyroute2>=0.5.5 included
the fix, so the retries hack can also be removed.

[1] https://review.opendev.org/c/openstack/neutron/+/631275
[2] https://review.opendev.org/c/openstack/neutron/+/698854

Related-Bug: #1811515
Change-Id: I6d7b1c82c19d93c4a24f253bdc4c5b6164cfbaaa"
c0af5b3b5ea89d3147adf1054625f29d5b01b309,2023-05-05 17:01:43+02:00,"Reduce lock contention on subnets

in [1] a lock was introduced with the goal of preventing subnets from
being deleted while ports are being created in them in parallel.
This was acheived by aquiring an exclusive lock on the row of the
subnet in the Subnet table when adding/modifying a port or deleting
the subnet.

However as this was a exclusive lock it also prevented concurrent port
modifications on the same subnet from happening. This can cause
performance issues on environment with large shared subnets (e.g. a
large external subnet).

To reduce the lock contention for this case we split the lock in two
parts:

* For normal port operations we will aquire a shared lock on the
  row of the subnet. This allows multiple such operations to happen in
  parallel.
* For deleting a subnet we will aquire an exclusive lock on the row of
  the subnet. This lock can not be aquired when there is any shared
  lock currently on the row.

With this we maintain the same locking level as before, but reduce the
amount of lock contention happening and thereby improve throughput.

The performance improvement can be measured using rally test [2].
(improving from 21 to 18 seconds).
Alternatively it can be tested using 250 parallel curl calls to create a
port in the same network. This improves from 113s to 42s.

[1]: https://review.opendev.org/c/openstack/neutron/+/713045
[2]: https://github.com/openstack/rally-openstack/blob/master/samples/tasks/scenarios/neutron/create-and-delete-ports.json

Closes-Bug: #2009055
Change-Id: I31b1a9c2f986f59fee0da265acebbd88d2f8e4f8"
be4e150de98506b080c3b9a3f324324821e4666e,2023-05-08 10:16:32+02:00,"[OVN] Remove backwards compatibility with OVN < v20.09

This patch removes the compatibility with OVN under v20.09. That
implies the OVN Southbound definition has ""Chassis_Private"" table.
Any previous check is removed from the code.

This patch also adds a sanity check, testing that the OVN Southbound
database definition is greater or equal to 2.9.0 [1].

The testing OVN NB and SB schemas are updated to the files contained in
OVN v22.09. The new testing NB schema version is 6.3.9; the new testing
SB schema version is 20.25.0.

[1]https://github.com/ovn-org/ovn/commit/4adc10f58127e45b5883f2e7cb1c702720b95043

Closes-Bug: #2002839
Change-Id: If64c967b89099946165bfaf66247def4881af832"
c3602ac19b62b77d3cb763746e124881d4c061e4,2023-05-08 17:40:21+02:00,"[OVN] Update ovn meter when neutron server reloads

Up until now, we needed to remove all logging objects to see the
meter-band properties being changed after a server restart. Now we check
for inconsistencies between the neutron configuration and the OVN
meter-band object after a restart. The function create_ovn_fair_meter is
now located in the ovn_driver instead of the log_driver so as to be able
to call it from the maintenance task.

Closes-bug: #2017145
Signed-off-by: Elvira García <egarciar@redhat.com>
Change-Id: I24cef85ed68c893a740445707f88296d763c8de8"
0390ada97c01031e675caf43b5028bb311331865,2023-05-09 11:49:17+02:00,"port-hints: api extension

api extension
db model
db migration
ovo (including changes affecting push rpc)
extension driver
policies

To enable this:

* neutron-db-manage upgrade 6f1145bff34c
* ml2_conf.ini:
  [ml2]
  extension_drivers += port_hints

This patch also bumps neutron-lib requirement to 3.5.0.

Change-Id: I80816618285d742775bc0534510c0f874f84ed2e
Partial-Bug: #1990842
Related-Change (spec): https://review.opendev.org/c/openstack/neutron-specs/+/862133
Related-Change (n-lib api-def): https://review.opendev.org/c/openstack/neutron-lib/+/870080"
6b55589ae0b057613f758abf0ae8fd299cd1531f,2023-05-09 11:49:17+02:00,"port-hint-ovs-tx-steering: agent side

In ovs-agent extract `other_config` from port `hints` and set/clear
ovs `other_config` accordingly.

Change-Id: I1106bc03061fd62e9baadadbe2bb4aaa8c3a6b1d
Partial-Bug: #1990842
Related-Change (spec): https://review.opendev.org/c/openstack/neutron-specs/+/862133"
97d658c4ce940c4f300deb4e1636c79aaa4a35f1,2023-05-09 11:49:17+02:00,"port-hint-ovs-tx-steering: shim extension

and a ML2 extension that does nothing, just loads the API extension.
All the real implementation is in the agent-side change.

To enable this:

* ml2_conf.ini:
  [ml2]
  extension_drivers += port_hint_ovs_tx_steering

Change-Id: I572072b3817484129a60ef68adf74ffd52b9eab8
Closes-Bug: #1990842
Related-Change (spec): https://review.opendev.org/c/openstack/neutron-specs/+/862133
Related-Change (n-lib api-def): https://review.opendev.org/c/openstack/neutron-lib/+/873112"
be0dc09d52efd5e7236a33be552edb6644371cd0,2023-05-09 12:30:50+02:00,"[S-RBAC] Fix new policies for get QoS rules APIs

During transition to the new secure RBAC API policies, we made mistake
with policies for QoS rules by defining them to be available for
ADMIN_OR_PROJECT_READER. This can't be like that as QoS rules don't have
tenant_id attribute and belongs always to the owner of the QoS policy.

To fix that, this patch introduces new rules:
ADMIN_OR_PARENT_OWNER_READER
ADMIN_OR_PARENT_OWNER_MEMBER

and uses those in the QoS rules APIs.

Closes-Bug: #2018727
Change-Id: I522aeab5094b3f4854303d5e18f3abf6130fb33c"
4edff4fe8dff102f13e3da0a000c03538755337d,2023-05-09 12:54:28+02:00,"[S-RBAC] Fix new policies for FIP PFs APIs

During transition to the new secure RBAC API policies, we made mistake
with policies for FIP PFs by defining them to be available for
ADMIN_OR_PROJECT_MEMBER/READER or FIP owner.
First, rule PROJECT_MEMBER/READER is not appropriate in this case as FIP PFs
don't have tenant_id attribute at all and belongs to the owner of FIP always.
Second issue was that any FIP owner, even with just READER role could possibly
e.g. create port forwarding.

To fix that, this patch changes those API policies to new rules:
ADMIN_OR_PARENT_OWNER_READER
ADMIN_OR_PARENT_OWNER_MEMBER

Closes-Bug: #2018989
Change-Id: Ibff4c4f5b6d020fd598831a8a6e8ec0e2f559005"
3e65ef863cc4913fd6414e4010ec2506632c00b9,2023-05-09 11:06:24+00:00,"Mark ""ipv6_pd_enabled"" as deprecated and experimental.

This functionality will be kept in the code as experimental as long
as no bugs are reported againts this feature.

This patch also marks the config option ""ipv6_pd_enabled"" as
experimental. In order to enable this flag, it is needed to configure
the ""experimental.ipv6_pd_enabled"" flag too.

Related-Bug: #1916428
Change-Id: I27aeed74f308d5bdf0210e76d9557f95b66c71bf"
98ac1fa31a80387d9c270b676dd96ac8ba649891,2023-05-10 09:12:16+02:00,"[sqlalchemy-20] Add the transaction context to the upgrade checks methods

In ``cmd.upgrade_checks.checks``, there are some methods that access to
the database. The queries are now inside a database context (reader or
writer depending on the query).

Closes-Bug: #2019119

Change-Id: I35b1311576bcf1681ab4932f0baeb4cd3099301c"
6a2ccfac32c2993e11ee9d958886d786914131e8,2023-05-10 09:15:05+02:00,"Make ""project_id"" in ""L3HARouterNetwork"" unique constraint

There could be just only one HA network per project. This database
enforcement guarantees this limitation.

Partial-Bug: #2016198
Change-Id: Ieb8aac6244d384b0af522f9ba145e9367de2c8ef"
043a8ecad922caa5bdc36f13439f48bf46ed92dd,2023-05-10 11:10:36+02:00,"[OVN] Use the API context in ``OVNClient._add_router_ext_gw`` method

The method `OVNClient._add_router_ext_gw`` must use the API context
passed instead of creating an admin one.

Closes-Bug: #2019132
Change-Id: If2a46f1e0c3b279dee4863e9c952f19c1e246571"
7573fca58c147eddddbfff6eebc3554fcdd23306,2023-05-11 05:38:16+00:00,"Notify neutron-server ovs is restarted

If openvswitch is restarted, try to notify neutron-server
that to refresh tunnel flows for every ports.

Closes-Bug: #2004041
Change-Id: Iba0ae947e3595674e63b998826daae2582bb7668"
01de74dedfdc306b0331aae4f970f0c5bca5cb48,2023-05-11 11:15:29+00:00,"[S-RBAC] Get QoS rule types API available for READER role

API call ""get_rule_types"" should be available in new policies for
all users with READER role as this is kind of the same what was in the
old policies (ANY).

Depends-On: https://review.opendev.org/c/openstack/neutron-tempest-plugin/+/882818

Closes-Bug: #2018585
Change-Id: I8281bd8a902bcaba1187565e9610d598e4ebc254"
3b7699bc6614d0c03d55087e63c4ccd19878caa4,2023-05-11 13:32:24+00:00,"Add scope ID to the ""GROUP BY"" clause in ``get_scoped_floating_ips``

PostgreSQL requires to add the table keys selected in the SELECT clause
in the later GROUP BY clause. This patch is adding
""SubnetPool.address_scope_id"" to this GROUP BY clause. Because the
subnet pool (for IPv4) is unique for the FIP subnet, the returned
elements in this query will be the same.

Closes-Bug: #2019186
Change-Id: Ia446e17a44b1a260971ae237841451edb97ce39f"
a612346146db2f9e70a23af55eb7502655666940,2023-05-16 19:23:50+03:00,"Fix not working use_random_fully config option

Fixed bug when config option  use_random_fully is
set to False all routers accept one configured
by l3 agent with iptables ""--random-fully"" option.
Also added storing of use iptables --random-fully
config option to ""_random_fully"" class variable
of IptablesManager to reduce checks of iptables
version by instances of this class.

Closes-Bug: #2018599

Change-Id: Ia12fc0a3d4812a0aba816b49dec60a7dcfaf0623"
0959e452d358597c005630f3aab3948ba6c1d26f,2023-05-17 17:20:38+02:00,"[sqlalchemy-20] Retrieve the ``URL`` string with the password

With SQLAlchemy 2.0, the ``URL`` object is printed with the password
hidden. It is needed ``render_as_string`` to print the URL string
with the password in plain text.

Closes-Bug: #2015847
Change-Id: Ic4ebb61cecbac8b0403e5899f3d0dd3cafec66f7"
43c756d728e36b538e4059e095b6cbdf78f3bcfd,2023-05-17 17:21:03+02:00,"[alembic] Alembic operations require keywords only arguments

Since [1] (release 1.11.0), the Alembic operations ""now enforce
keyword-only arguments as passed as keyword and not positionally""
(from the commit message).

This change is compatible with the previous versions (as confirmed
in the CI).

[1]https://github.com/zzzeek/alembic/commit/df75e85489b9ae69fffff2c5ad2594b30bed2fd4

Closes-Bug: #2019948
Change-Id: Ic5e7790377668d83be2cebbba8f6bfa09f7cee5e"
5f4a41326d7b1da03e1929b4fd8bcdaf69da19ab,2023-05-17 18:52:25-05:00,"Add rate-limiting to metadata agents

Requests handled by the metadata-agents can now be rate-limited by
source-ip. This is done to protect the OpenStack control plane against
VMs querying the metadata endpoint in an overly enthusiastic way.

Co-authored-by: Miguel Lavalle <mlavalle@redhat.com>

Related-Bug: #1989199
Change-Id: I748ccfa8b50496dcbcbe41fd22f84249a4d46b11"
1d0335810d89ede47cf3b54614382cb25d1986ae,2023-05-19 14:47:29+05:18,"Disable mysql gather performance in jobs

We seeing random issue in CI as mentioned
in the related bug. As per the tests done
in [1] seems disabling it make the issue
appear less frequent. Let's try it atleast
until the root cause is fixed.

[1] https://review.opendev.org/c/openstack/neutron/+/883282

Related-Bug: #2015065
Change-Id: I2738d161d828e8ab0524281d72ed1930e08e194b"
6fa3d8019ffd416ad3eb90e6e9a364d4b6e23e80,2023-05-19 09:51:07+00:00,"Use ``TextClause`` to define the DB model ""server_default""

The alembic comparator needs the same class to compare the
database model with the loaded SQL schema.

Closes-Bug: #2020050
Change-Id: I4feab3e55f2e38a9eca70d4ca755b4c2974346d5"
b677d65b2d9cf9e3ff58677300712fe3fe40da04,2023-05-19 19:18:32+00:00,"[OVN][Migration] Enable settings backup subnet for NFS clients

If the BACKUP_MIGRATION_IP is set to a different IP outside of
the default nets[1] set in the “openstack overcloud backup”
playbook setup_nfs role[2]. Then the NFS will fail to mount
directories during the backup, because they will not be
reachable | permitted.
This change simply adds a new variable
BACKUP_MIGRATION_CTL_PLANE_CIDRS into the ovn_migration script
to allow the user to overwrite the extra-var used for
Openstack overcloud backup --setup-nfs command.

[1] https://opendev.org/openstack/tripleo-ansible/src/commit/e281ae7624774d71f22fbb993af967ed1ec08780/tripleo_ansible/roles/backup_and_restore/defaults/main.yml#L47
[2] https://opendev.org/openstack/tripleo-ansible/src/commit/e281ae7624774d71f22fbb993af967ed1ec08780/tripleo_ansible/roles/backup_and_restore/tasks/setup_nfs.yml#L127

Change-Id: I160dfc4e893b93ac7a40e19b3dd6b89750dac57d"
e0a2427a2f701adae14cd8196e3c2f064416d044,2023-05-22 09:25:55+02:00,"[ovn] Avoid unwanted ACL_NOT_FOUND error when deleting log objects

There is the possibility that db_remove raises an error if an ACL was
deleted on parallel for other reasons while deleting a log object. On a
normal situation, this command would remove the no-longer-needed
'log-related' property, but since the ACL is no longer there, it will
raise an error. For this case, it is not problematic to have an ACL
deleted mid-operation, so it should not raise any error.

Related-Bug: #2019887

Signed-off-by: Elvira García <egarciar@redhat.com>
Change-Id: I154393529134b5861e0ef0283257ef964fe057fd"
ebc0658d5566ce527cb1104968d247db10edf3db,2023-05-22 08:57:24+00:00,"Revert ""Delete sg rule which remote is the deleted sg""

This reverts commit 63584957203ec9f5ba165177978213c3909f81f0.

Reason for revert: This is generating a lot of
""SecurityGroupNotFound"" errors in neutron-server.log in
the tempest-integrated-networking job.

Closes-Bug: #2019449
Related-Bug: #2008712
Change-Id: I077fe87435f61bd29d5c1efc979c2adebca26181"
452973c0dba6c2f1dfce02bd7dce514c8350a846,2023-05-22 13:29:55+00:00,"Revert ""Use a writer context for the online alembic migrations""

This reverts commit 82029c2c514aaca5b9d45af46d2f7d945ff3099b.

Reason for revert: fullstack tests broken with this.

Change-Id: Ibd75c3526a3a8c4138c5f266448299786ccbf045
Related-Bug: #2019802
Related-Bug: #2015847"
846003c4379124de6ffb3628ef1feb12a62a9cfa,2023-05-22 17:37:03-04:00,"Start metadata proxy even if IPv6 DAD fails

A recent change suppressed the IPv6 DAD failure and
removed the address when multiple DHCP agents were
configured on the same network,
https://review.opendev.org/c/openstack/neutron/+/880957

But it also changed the behavior to not enable IPv4
metadata in this case. Restore the old behavior by
not returning early in the DAD failure case. The callback
that builds the config file was moved until after
the address was bound to make the two steps more obvious.

Related-bug: #1953165
Change-Id: I8436c6c9da9a2533ca27ff7312f5b2c7ea41e94f"
43ef447a5787c6065638652466d1c61c30750d76,2023-05-22 23:41:06+02:00,"SG rule dict method allows DB object and Neutron OVO

This change allows to pass to ``_make_security_group_rule_dict`` method
the Neutron OVO. That could include synthetic fields added in the OVO
(SQL view) that are not present in the database register.

This change will be needed in next patches to increase the information
returned by this method, using new synthetic fields added to the
security group rule OVO.

Partial-Bug: #2019960
Change-Id: Ic0e697bb212c7795a40c0b9be01345db26c2874e"
9e6675ec06d3f37564d3fa328afdb9b816a5384e,2023-05-24 01:57:31+02:00,"Increase the waiting period to receive a port creation event

This patchs increases to 15 seconds the timeout to wait for a
port creation event in ``WaitForPortCreateEvent``. This patch is also
adding the update ""event"" to the tracked events, just in case if the
""create"" event has been ignored before.

Closes-Bug: #2020663
Change-Id: I37d15de1be74a3cbdfbc9b53bbefbeb90663f1d9"
35cb164ea557ca4f26b7c7ef21d1db13cdda0d71,2023-05-24 14:15:33+08:00,"[ovn]disable security group notifier

When we use the ovn driver, the security group is implemented
by the ACL of ovn. There is no need to send rpc messages.

Closes-Bug: #2007327

Change-Id: I4b486c910ed298633ac6f60fd93f695c6c3bfef2"
ac231c817473c018dde8fa31594b1c9a78a36c13,2023-05-24 14:37:30+00:00,"Improve ""sync_ha_chassis_group"" method

The method ""sync_ha_chassis_group"" now creates (or retrieves) a
HA Chassis Group register and updates the needed HA Chassis registers
in a single transaction. That is possible using the new ovsdbapp
release 2.2.1 (check the depends-on patch).

Depends-On: https://review.opendev.org/c/openstack/ovsdbapp/+/871836

Related-Bug: #1995078
Change-Id: I936855214c635de0e89d5d13a86562f5b282633c"
0b67da59c6d8843bab7bee87621990e0340ac9ec,2023-05-24 14:43:32+00:00,"[sqlalchemy-20] Open a connection to execute a command

``Engine`` class no longer inherits from ``Connectable``. In order to
execute a SQL command, it is needed to start a connection and then
being a transaction. At this point, it is possible to execute a
command from the connection object.

Closes-Bug: #2020114

Change-Id: Id1dcf338bf04e6eef73cc447698ec6d2100abd96"
a221764751de05e42069f1c097b1025bd9c4fc52,2023-05-24 20:40:59+03:00,"Allow Multiple External Gateways

* Add a new API for adding/updating/removing multiple gateway ports
  on routers;

* Implement the necessary backend changes.

Partial-Bug: #2002687
Depends-On: I2618475636b2bb9bfd743a62f5d4859d4f68a547
Change-Id: Id885565e88f6f1898ca5cfac709a24dd62605d1a"
a72e97ddff1c2a13cc3dc7636b927bd28bdf2ae3,2023-05-25 12:48:30+02:00,"Update api extension for default sg rules API

This patch adds two new attributes to the default SG rules API:
* ""used_in_non_default_security_group"",
* ""remote_address_group_id""

Those new attributes are descibed in the proposed update to the related
spec in [1] and [2].

[1] https://review.opendev.org/c/openstack/neutron-specs/+/883267
[2] https://review.opendev.org/c/openstack/neutron-specs/+/883268

Related-bug: #1983053
Change-Id: Ic3e06460ac8294bfa882991eb678878b238735d7"
1b9a16c9567e9fccb48388b38b5a5335e2ff30c9,2023-05-25 12:48:30+02:00,"Add description field to the security_group_default_rules resource

This new resource has standard attributes and should expose description
field in the API.

Related-bug: #1983053
Change-Id: Ie2940e6c705e6692eaaf53f11d11b4b62cd0a51e"
413044f253b6d434164e8a94dbeccec7b1b79ebe,2023-05-25 15:26:31+02:00,"[OVN] The L3 scheduler does not use all chassis by default

Any OVN scheduler, inheriting from ``OVNGatewayScheduler``, calls
``_schedule_gateway`` to make the decision of in what chassis the
router gatweway should be located. Before this patch, if the list
of candidates was empty, the scheduler used all available chassis
as candidate list. This patch is removing this default behaviour.
In a deployment, only those chassis marked explicitly with
""ovn-cms-options=enable-chassis-as-gw"" can be used as gateway
chassis.

After enabling this patch, any existing router gateway port will
preserve the assigned chassis; any new router gateway will be
scheduled only on the chassis configured as gateways.

If a router gateway port cannot find any chassis to be scheduled,
the ""neutron-ovn-invalid-chassis"" will be used instead and a
warning message will be printed in the logs.

Closes-Bug: #2019217
Change-Id: If0f843463edfd7edc5c897cc098de31444f9d81b"
a22b1dedc2fdc522e3079e2e7668c69f5246d784,2023-05-27 17:17:11+02:00,"Implement ``get_subnets_address_scopes`` method

This patch implement a method to retrieve the IPv4 and IPv6
address scopes of several subnets, providing a list of fixed
IP addresses that belong to a port.

The goal of this patch is to decouple the address scope retrieval
from the logic that determines if an OVN LSP is virtual or not.

Related-Bug: #2018529

Change-Id: Id4ab755293627119455cbcd15602690c8ce7a3c1"
ac24dbed1c57a92741a9f2a637e7f8026e265d38,2023-05-28 22:22:47+02:00,"Implement ``get_port_type_virtual_and_parents`` method

This patch implements a method to determine if a LSP is virtual or
not. In case the port is virtual, the method returns the type name,
the virtual IP address and the parents (the ports that are using this
virtual IP address as allowed address)

The goal of this patch is to decouple this method from the
``_get_port_options`` method code.

Related-Bug: #2018529
Change-Id: I58b213f79bad9de91a6181745da526500dc9c615"
37dda9bc69f31af7c9c38de7e462480aa54c1f60,2023-05-28 22:25:45+02:00,"Move ``determine_bind_host`` to ``ovn.utils``

This method could be used outside the OVNClient instance.

Related-Bug: #2018529
Change-Id: Iecc5e633573b15d71158ed2c10df768feef6df99"
e9da29d16c474822c015996cf34e40005419146a,2023-05-29 05:14:18+02:00,"Change RBAC relationship loading method to ""joined""

This patch changes all RBAC relationship method to ""joined"". This change
enforces that the RBAC associated registers are loaded along with the
parent resource. The rationale of this change is to be able to control
the SQL query executed; the subquery cannot be directly managed by
Neutron.

It is very usual to create the RBAC rules from one single project that
is usually the adminitrator project. That means all RBAC rules will
belong to it. Before this change, the SQL subquery performed to
retrieve the RBAC entries was this (from a network query):

  SELECT networks.id AS networks_id
  FROM networks LEFT OUTER JOIN networkrbacs ON networks.id =
  networkrbacs.object_id
  WHERE networks.project_id = 'bd133e2c499c4bf8aeb16206e31c3c20'
    OR networkrbacs.action = 'access_as_external'
    AND networkrbacs.target_project = 'bd133e2c499c4bf8aeb16206e31c3c20'
    OR networkrbacs.target_project = '*'
    OR networks.project_id = 'bd133e2c499c4bf8aeb16206e31c3c20'
    OR networkrbacs.action IN ('access_as_shared', 'access_as_readonly')
    AND (networkrbacs.target_project = 'bd133e2c499c4bf8aeb16206e31c3c20'
    OR networkrbacs.target_project = '*');

This SQL result has a very low cardinality; that means there are many
duplicated registers. For example, with 10 external network, 1000
projects and 2500 RBAC rules, this query returns 1.4 million rows.
Instead if a ""GROUP BY resource_id"" (in this case network_id) clause is
added, the number of rows is reduced to 10 (considering this project
has a RBAC per network).

In order to introduce this ""GROUP BY"" clause, this patch is changing
the loading method. The clause is added in a neutron-lib patch [1].

This change by itself does not improve the query performance. The
neutron-lib patch is needed too. Although this patch does not modify
que SQL query results, the tests added will prove that the neutron-lib
patch does not introduce any regression.

[1]https://review.opendev.org/c/openstack/neutron-lib/+/884878

Closes-Bug: #1918145
Change-Id: Ic6001bd5a57493b8befdf81a41eb0bd1c8022df3"
b6ce7223244cd27cc620985ef88ada8ff8d48be5,2023-05-29 08:11:36+02:00,"Raise the timeout of ""neutron-ovn-rally-task"" to 9000

Closes-Bug: #2022070
Change-Id: Iffab13b68bcd875cf3d3d1db2be2d44d96bf3663"
61b358b6b5ac160c38af66b07454c26d6a93a0bd,2023-05-29 16:29:58+02:00,"[S-RBAC] Add API policies for get and activate port bindings

There wasn't policies for get port binding and activate port binding API
calls defined at all.
When we switched to new default policies and regular user wanted to make
call to activate port binding, it was error 500 what we returned instead
of proper 4xx error. It was like that as ""get_port_binding"" call which
was done internally during ""activate"" API request falled back to the
default policy which is ""admin_or_owner"" and as port binding resource
don't have project_id, owner couldn't be checked there.

Now it has defined S-RBAC policies for those API calls and it is allowed
for admin users only to solve that problem.
This patch don't define old, deprecated policies for those API calls as
it wasn't really needed there and we already switched to new policies by
default now.

Closes-Bug: #2013326
Change-Id: Id281e4950dc5d7bac62dfa8175d82cb1f8d2e855"
e8cd39b3d75cbc10f69bb99aed449b751f067940,2023-05-29 15:26:11+00:00,"Make DB migration creating indexes in RBACs conditional

This patch makes conditional the existing DB migration that adds
the new indexes ""target_tenant"" and ""action"" in the ""*rbacs"" tables.
The rationale of this patch is to be able to manually improve older
systems by just manually creating the indexes in the database.
Once these indexes are added, those operations including RBACs
checks (all these called from non-admin user to RBAC administrated
resourced) will be improved.

This patch is avoiding the migration issue a system could find if
these indexes have been manually added and then the system is
upgraded. The new check added will first retrieve the table indexes;
if the index is already present, the index addition is skipped.

Closes-Bug: #2020802
Change-Id: I1962fbc844bb67180e9071bcee01f8e95853bdda"
2a8c7ff4f0a27d426db6d993b373a8222372abbd,2023-06-01 21:13:45+05:18,"[ovn][ipv6] Skip test_update_router_admin_state

This is same to already skipped test in [1].

[1] https://review.opendev.org/c/openstack/neutron/+/874112

Related-Bug: #2007166
Change-Id: Iafc596e1ff13c7efde5c7da417db85bb562aa3f7"
ce12b6ac195c83fad424ee35c5e92b1d12d040ae,2023-06-05 14:53:18+02:00,"Do not query neutron-rpc for sg rules upon sg deletion

This makes _clear_child_sg_rules look into the local resource cache
for sg rules that have to be deleted instead of querying the
neutron-rpc server.

Deleting a security group results in each agent of the region running
a bulk_pull query for all the rules in the security group against the
neutron-rpc. This is incurs a load on neutron-rpc, rabbitmq and the db
proportional to the number of agents and the number of security group
rules and has a noticeable impact on larger infrastructures.

However, when the cache is properly populated, we already have the
rules we should remove from the cache and don't need to ask neutron
server for them.

Closes-Bug: #2022360
Change-Id: I53e11f558a6cd84a02041758badddfe87a10c95c"
050536c66e4f8cdc6c7aa3ff77c0e9995db5717a,2023-06-06 15:20:45+02:00,"Stop the RPC connections when the agent exits

This behaviour is already present in the OVS agent RPC plugin;
this patch is imitating that in the ``CommonAgentLoop`` class.

Closes-Bug: #2019314
Change-Id: I8c87e5ff7b948455c62e2fa2a3c89b8b1e45875c"
a9323f0325cc4227ca6f1f0316913aa7a2d315f5,2023-06-08 08:47:22+02:00,"dhcp/agent: fix 'get_metadata_bind_interface' driver call

The 'get_metadata_bind_interface' driver call has a different behavior
than other methods, it is expected to return metadata interface name.
When introduced multisegments support this particularity was not taken
into account.

The fix is making the call acceptable in the purpose of the current
driver interface.

Closes-bug: #2015090
Signed-off-by: Sahid Orentino Ferdjaoui <sahid.ferdjaoui@industrialdiscipline.com>
Change-Id: I08e686397238685c11b0de818caa399d69da04fd"
5e0c102830a18850e35f746160867613e96d1dbc,2023-06-08 13:09:16+01:00,"Send ovn heatbeat more often.

This change modifies the metadata agent heatbeat
to use a random offset with a max delay of 10 seconds.

The orgial reason for the current logic was to mitigate
https://bugs.launchpad.net/neutron/+bug/1991817
so the logic to spread the heatbeats is maintained but
we now set an upper bound on the delay.

Close-Bug: #2020215
Change-Id: I4d382793255520b9c44ca2aaacebcbda9a432dde"
9ca0e34a5edeb0419d86117dfaabb3f7842bb347,2023-06-09 11:52:38+00:00,"Delete the ""Chassis_Private"" register when deleting an agent

The method ``delete_agent`` [1] now deletes both the OVN SB
""Chassis"" and ""Chassis_Private"" registers when called.

[1]https://github.com/openstack/neutron/blob/ad81687e2955f494c28e2122763a2332afd3d26d/neutron/plugins/ml2/drivers/ovn/mech_driver/mech_driver.py#L1400-L1401

Closes-Bug: #2023171
Change-Id: Ibb1285f61c172d2b6e281f41315415ce8b8526e7"
0c09dbdb2ab5d519bd918f7fc77b51865c2e58d9,2023-06-11 15:10:58+00:00,"Subnet now inherit the sRBAC perm. from the parent resource Network

Since [1], that is going to be released in neutron-lib 3.7.0, the Subnet
resource inherits the same permissions as the parent resource Network.

[1]https://review.opendev.org/c/openstack/neutron-lib/+/886746

Closes-Bug: #2025368
Change-Id: Ic3640204449c56918e07ebb3d7e29b2165025602"
afa20faec3c37bd06346360cadbad0d69e9925f0,2023-06-14 10:07:09+01:00,"[OVN] Improve Hash Ring logs

Debugging Hash Ring problems can be difficult challenge given that prior
to this patch the logs were very limited.

This patch improves the logging for this feature as follow:

1. Log when a node is added to the ring
2. Log when nodes are removed from the ring
3. Keep track the number of offline nodes and log it upon loading the
   ring
4. Improve the ""Hash Ring is empty"" exception with the number of offline
   nodes found (if 0, means the ovn_hash_ring table has no entries)

Closes-Bug: #2023670
Change-Id: Ic90432b5ddea8cf176de159ec7eaafd5fd7bdd6e
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
57e860ca1996d4afa8ede87239b53395ee55ef03,2023-06-19 15:16:17+00:00,"Return back the test_dvr_router_interface_mtu_update test case

This patch is actually a partial cherry-pick of the commit
b5dd6efdca0aa6e7405a55d66c7042a49ec72214 by Slawek Kaplonski.
By some chance the commit 3a9a17ad8216d039ca3dadce0e8fc160f3ec18ba
removes this test case, although it shoudldn't

Related-Bug: #1933273
Related-Bug: #2024381

(partially cherry picked from commit
b5dd6efdca0aa6e7405a55d66c7042a49ec72214)

Change-Id: Iad73856cb86b04f8d2a10b186befa4aa8c6a933d"
8b0c7d2c8daa7e18f16d4ab6b5299b852073cc67,2023-06-19 15:16:22+00:00,"Return back the test_dvr_ha_router_interface_mtu_update test case

This patch is actually a partial cherry-pick of the commit
21eabbcf03cb29be9899adbd6eaea207892cf07b by Slawek Kaplonski.

By some chance the commit 3a9a17ad8216d039ca3dadce0e8fc160f3ec18ba
removes this test case, although it shoudldn't.

Related-Bug: #1933273
Related-Bug: #2024381

(partially cherry picked from commit
21eabbcf03cb29be9899adbd6eaea207892cf07b)

Change-Id: Ia50661ef47ba66973e06beb8d4561ce82632cffb"
0c66dfaed8e1ec00726c3e484e69174779678abd,2023-06-20 10:22:14+00:00,"[OVN] The all() and count() methods should be inside a DB txn

The ``ovn_hash_ring_db`` methods ``get_active_nodes`` and
``count_offline_nodes`` are sending SQL requests that should be issued
from inside a READER context.

Closes-Bug: #2024447
Change-Id: If06c372a9d5cb1dc1ec1af768abb61f52c2c5abd"
593278550a8185dfc52fc6c327ca1198df11e422,2023-06-20 17:05:18+02:00,"Functional: assert multiple calls for update_virtual_port_host

test_virtual_port_host_update assumed update_virtual_port_host
to be called once, but the test started to fail when [1] was
merged and OVN version was bumped to v22.03.3 (not yet released).
PortBindingUpdateVirtualPortsEvent with event ROW_DELETE
received twice in the failing case.

[1]: https://review.opendev.org/c/openstack/neutron/+/880890

Closes-bug: #2023634
Change-Id: I0ac92e3692fb1ba9667fee2f6fbf531a57b7b5b8"
ec4bfb91f0d3ae4aa4cbe8ba05c20cb00515b00d,2023-06-20 15:14:15+00:00,"[qos] _validate_create_network_callback return in no network

It seems that _validate_create_network_callback notified without
network_id in payload, to avoid issues in such case return.

Change-Id: I15d22e0e2b4bf3e4f882b521bcd6a13f84e4feed
Closes-Bug: #2008912"
6e3525188fdfbe7fabd665e21df2068280471689,2023-06-21 09:52:39+00:00,"[S-RBAC] Fix policies for CUD subnets APIs

In new, secure RBAC policies for create subnet there was
rule ""ADMIN_OR_PROJECT_MEMBER"" used and that was wrong as this rule is
basically allows any member (PROJECT_MEMBER) create subnet in networks
visible to them, not necessarily this project needs to be owner of that
network. So it allowed users to create new subnets in the shared or
provider networks as well.
Now policy for create subnet is ADMIN OR NET_OWNER_MEMBER to avoid that.

Additionally this patch also fixes policies for update and delete subnet
APIs where there was rule NET_OWNER used and that effectively allowed to
update or delete subnet to the network owner who has READER role only.
Now this is also fixed by using NET_OWNER_MEMBER rule instead.

Closes-Bug: #2023679

Change-Id: Ia494872b58f368581fb29fa40b7da17e1071db22"
f2e3ab380580df8c0ab33884f2e8797e2f5b0724,2023-06-21 15:20:35+01:00,"[OVN] Hash Ring: Set nodes as offline upon exit

This patch implements the proposed solution from LP #2024205 where upon
a Neutron being killed, it could trigger the deletion of the entries
from the ovn_hash_ring table that matches the server hostname. When
this happens on all controllers this could lead to the ovn_hash_ring
being rendered empty which will result in ML2/OVN not processing any
OVSDB events.

Instead of removing the nodes from the ovn_hash_ring table at exit, this
patch changes the code to just mark them as offline instead. That way,
the nodes will remain registered in the table and the heartbeat thread
will set them as online again on the next beat. If the service is
stopped properly there won't be any heartbeat anymore and the nodes will
be seeing as offline by the Hash Ring Manager (same as if they were
deleted).

For more info see LP #2024205.

Closes-Bug: #2024205
Change-Id: I052841c87651773c4988fcf39f9f978094297704
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
955e621167987626806128d259a29d4e62acf102,2023-06-21 15:07:54+00:00,"[OVN][Trunk] Add port binding info on subport when parent is bound

The host ID and VIF details are added on the subport when the trunk is
created, if it's created when it's not attached to any VM this fields
will remain empty and be filled on the parent port when it gets bound
to a host, but there's no callback to add this info on the subport.

Closes-Bug: #2018289
Closes-Bug: #2024160
Change-Id: I34bb6f178c314907bdf9f76789777f6736938b67"
9d9f47c20c6c269db264d656a1026e0926f390fd,2023-06-22 13:08:32+00:00,"[OVN] Remove SB ""Chassis""/""Chassis_Private"" duplicated registers

A new OVN maintenance method is added. This method lists all existing
OVN SB Chassis registers and checks if any of them has the same
hostname. In case of having duplicated ""Chassis""/""Chassis_Private""
registers, the maintenance method will remove those with older
(lower) timestamp, that is stored in
""Chassis_Private.nb_cfg_timestamp"", leaving only the newer one.

Closes-Bug: #2016158
Change-Id: Ib3c6f0dc01efd31430691e720ba23ccb4ede65fa"
dfe29e676002da04d46314ec1aa22054664ad2b4,2023-06-22 11:55:28-04:00,"Delete network namespace on last port deletion

Since a DHCP agent can handle multiple networks, each with
their own unique network namespace, we must track in-use
ports by network ID, so we delete the namespace when the
last port on that network is removed. If we group all the
ports together then we could have stale, empty namespaces
until we either delete all the ports (unlikely) or the
dhcp-agent is restarted and does cleanup.

Regression introduced by
https://review.opendev.org/c/openstack/neutron/+/840421

Closes-bug: #2015388
Change-Id: I36991328cabcbd6fa473b8d1d140ba88c774fb23"
08fe84f4438293b7000d0bcc829a8c66762c7cbc,2023-06-23 11:24:22+00:00,"[sqlalchemy-20] Remove redundant indexes from some tables

The following tables and columns were defined as primary key and key
(index). A column defined as primary key creates an index in the table.
The is no need to create a second one.

Tables and columns affected:
* portdataplanestatuses, port_id
* portdnses, port_id
* portuplinkstatuspropagation, port_id
* qos_policies_default, project_id
* quotausages, resource
* quotausages, project_id
* subnet_dns_publish_fixed_ips, subnet_id
* segmenthostmappings, segment_id
* segmenthostmappings, host
* networkdnsdomains, network_id
* floatingipdnses, floatingip_id

Closes-Bug: #2024044
Change-Id: I271c109a597eb0aa088a7a9c785e8631bfaa01d7"
a1744676396848d92bc66b19e6ce4a6908575189,2023-06-23 15:39:35+00:00,"Explicitly define the subnet creating a new port

In ``test_negative_update_floatingip_port_forwarding``, the second time
a new port is created, the fixed IP address parameter should be defined
(as is done in the first port created). That will enforce that the port
created has an IP address in the first subnet created (10.0.0.0/24),
not the second one (11.0.0.0/24).

This test was failing randomly because the network has two subnets and
the IP address was randomly selected.

Closes-Bug: #2024903
Change-Id: Ib4024d929e041c8a32eef5484a138cf68ad5e885"
67a0b0728788207cee27adb586880fabb8da6f25,2023-06-26 07:37:04+00:00,"Delete sg rule which remote is the deleted sg

Based on bug #2008712 if we have a security-group which
is the remote group of a 2nd security-group, the backend
never deletes the rule of the 2nd group which
remote_group_id is the original security-group.
By AFTER_DELETE event for each rule that has the
security_group_id as remote_group_id, we can make the
mech drivers do their work and delete these rules in the
backend.

One version of this fix was merged:
https://review.opendev.org/q/I207ecf7954b06507e03cb16b502ceb6e2807e0e7
and reverted due to #2019449:
https://review.opendev.org/q/I077fe87435f61bd29d5c1efc979c2adebca26181

This patch is based on
https://review.opendev.org/c/openstack/neutron/+/876716/1

Closes-Bug: #2008712
Related-Bug: #2019449
Change-Id: I9e8ddfa26c5402fefd573b0e2ea5f3a57983ca35"
576c468b711a94a1e6a7d5c65841b6a042dab855,2023-06-26 17:40:39+05:18,"Disable pool recycle in tests

The default for connection_recycle_time is
one hour. If any test using StaticSqlFixture
runs after 1 hour it fails as connection get's
recycled.

With sqlite memory db if there is a connection
disconnect or reconnect db get's wiped off.
This patch disables the pool recycle so tests
can run fine even in slow environments.

Closes-Bug: #2024674
Change-Id: I04f120d3ccd11b18ae08cb10b19a7cb5a0e8983d"
32d589f03ed0d2744fe15173ebacafd18fced8a9,2023-06-26 14:31:52+02:00,"Don't allow deletion of the router ports without IP addresses

This patch effectively reverts old patch [1]. From now on it will be not
allowed to directly remove router ports which don't have fixed IPs
assigned. Such ports will be treated as any other ports connected to the
routers.
Originally [1] was introduced to allow cleanup of the router ports for
which subnets were deleted. But now it's not needed anymore as we
prevent deletion of subnet if there are any ports with IP allocated from
that subnet.

Closes-bug: #2025056

[1] https://review.opendev.org/c/openstack/neutron/+/20424

Change-Id: I1a3723ae999fefb5dcbe3a60cf1a4902da9f0265"
7b85f9c244cde25d2dad81f51a0c96a429ddc488,2023-06-26 22:09:26+00:00,"[OVN][L3] Optimize FIP update operation

If the floating IP updates only the QoS policy, the method now
skips the OVN NAT rules update and updates only the QoS policy.
That avoids the OVN NAT rules deletion and creation and the
``FIPAddDeleteEvent`` event that deletes the MAC binding entries
for an active floating IP, causing a disruption.

Closes-Bug: #2025144

Change-Id: Ib9ec45d643c6162c526cd5a02db270094b575e34"
663242067522bb5475218eec36abd265869ab788,2023-06-27 13:00:54+00:00,"Revert ""Use ``TextClause`` to define the DB model ""server_default""""

This reverts commit 6fa3d8019ffd416ad3eb90e6e9a364d4b6e23e80.

Reason for revert: https://bugs.launchpad.net/neutron/+bug/2025126
A new SLQAlchemy/alembic (master branch) version reverted the
behaviour fixed in the patch that is being reverted.

Closes-Bug: #2025126

Change-Id: I9322589d973d9469d92878a505de6133978ade84"
22ace8a75261330e54ddfd07f344ae8bdaf822aa,2023-06-27 18:19:22+00:00,"[OVS] Check the datapath ID set by the creation method

In the test ``test_get_datapath_id``, check the datapath ID set by the
creation method, that used the device MAC address.

Closes-Bug: #2011600
Change-Id: I9aff77c9da69e5ea547572685bf7235d8c667d9c"
8cd949fc9ba3620631a74396f7972d33e64f416b,2023-06-27 15:48:58-04:00,"Increase timeout in test_get_all_devices()

Although a wait_until_true() was added to this test, it
still occasionally fails. From the debug it looks like
the very next read of interfaces shows the one we were
waiting for was now present:

 AssertionError: MacVTap address: 4e:0f:75:b8:c8:c2,
    read devices: {'4e:0f:75:b8:c8:c2'}
  Device ens3, MAC: fa:16:3e:14:44:a1
  Device macvtap7b63baf3, MAC: 4e:0f:75:b8:c8:c2  ...

Increase the timeout to 10 seconds to see if it helps
the test become more stable.

Change-Id: Ie66163c0e8459c1e90ae3af375469f9996f0801c
Related-bug: #2012510"
b0842133823fdef476d7b3d4feda73e230e61d47,2023-06-27 22:57:52-04:00,"Add more debugging to common agent code

The common agent code, currently used by the Linuxbridge
and MACVtap agents, doesn't have any logging to show it's
running when in steady-state, where it's just sending
periodic reports to neutron-server.

Make a small change to add info messages in the loop with
an iteration number, similar to the OVS agent. Also made
it behave similar to the OVS agent in that it will only
clear the 'start_flag' after the first iteration,
indicating it has successfully completed a full sync.

Trivialfix

Change-Id: I5335c205235d290aa6f796b0cb2b3826e125a087
Related-bug: #2017518"
add2a6eb8cd9507b666f3d2c289059c4e477e8e8,2023-06-28 13:07:52+05:18,"[ovn][ipv6] Add some more tests to skiplist

This is same to already skipped test in [1][2].

[1] https://review.opendev.org/c/openstack/neutron/+/874112
[2] https://review.opendev.org/c/openstack/neutron/+/885074

Related-Bug: #2007166
Change-Id: Ie93833538056edeb4da4c38e5139390f1c124724"
4a97429e7f4b6357b40823308f6ab06266986874,2023-06-28 11:34:06+01:00,"[OVN] Improve ovn_l3/plugin.py exception logging

Straight forward patch logging adding a LOG.exception while handling
exceptions for the create/delete/update methods of routers and router
interfaces to improve debuggability.

Change-Id: I9701838a9b5622ff1c527524114efd76e57c5f15
Closes-Bug: #2025246
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
39e167ab275507924fd63ae5bb9a8330adad8005,2023-06-28 12:57:32+02:00,"Add neutron-tempest-plugin-linuxbridge job to the periodic queue

It was agreed on the Neutron CI meeting [1] that we will remove
this job from check and gate queues and add it to the periodic queue
to run it once a day.
Linuxbridge agent is marked as experimental since at least one cycle
already and this scenario job is getting less and less stable now so
it's probably time to move it out from our gate.

[1] https://meetings.opendev.org/meetings/neutron_ci/2023/neutron_ci.2023-06-27-15.00.log.html#l-127

Change-Id: Ic9a808da8819c0cdbb4af6570fade5be2a9dacba"
024704625a7e86a436f88d405f3474a6cba07fba,2023-06-28 14:15:25+00:00,"Add missing port_binding policies

In patch [1] API policies for get_port_binding and activate port binding
were added. But I forgot about create_port_binding and
delete_port_binding actions there so this follow up patch adds those
missing policies.

It also fixes mistake which was made in [1] with method for ""activate""
action set to ""GET"". It should be ""PUT"" and that's what this patch now
fixes also.

[1] https://review.opendev.org/c/openstack/neutron/+/884613

Closes-Bug: #2013326
Change-Id: I6e91c2b7df070f19270f9c60da5c32b69cf11918"
0090572b93d96348778c724194c26a976a9f8757,2023-06-28 17:05:26+02:00,"Ensure traffic is not centralized if DVR is enabled

There is no need to clear the external_mac if DVR is enabled, not
even when the port is down. This patch ensures the external_mac is
only deleted when DVR is not enabled.

Without this patch, if a VM with a floating IP gets deleted, and
DVR is enabled, during some time the traffic gets (wrongly)
centralized while it should not. And it is also generating more
load on the OVN side unnecesarily.

Closes-Bug: #2025264

Change-Id: I89db15dd1b629bc963f3b63926391a4a02cbedf7"
c8c74f12e048e7858eee332883dbe7c1dc1d0f0c,2023-06-29 20:59:27+01:00,"Load FIP information during initialize not init

DvrLocalRouter._load_used_fip_information() is called during the class
init however in some cases it tries to access a network namespace which
hasn't yet been created. This results in NetworkNamespaceNotFound.

This change ensures that we instead create any FIP priority rules after
the network namespace has been created by calling
_load_used_fip_information() from the initialize function rather than
in the class instantiation.

Closes-Bug: #2025129
Change-Id: I41ffffeca433faab2244ff3d1876ca078ce5ebfb"
b92d133de66411b9444855cc97480891d7d7b7b2,2023-06-30 09:34:25+00:00,"[OVN] Read the necessary configuration options in the OVN agent load

It is needed to load the configuarion options read in
``register_core_common_config_opts``, that loads ""base_mac"", missing
since a previous commit.

Closes-Bug: #2025466
Change-Id: Ifd3a2a2e2009880a97a3dae1032670b720cbe52f"
28926957d691c8b0897c71fee59a888783d15974,2023-06-30 15:45:28+01:00,"[OVN] Expose chassis hosting information in LSP

Expose chassis hosting information via LSP's external_ids. This allows
for projects such as ovn-bgp-agent NB driver that only connects to the
NB database to consume such information (avoiding more connections to
the SB database).

Also stop populating the ""requested-chassis"" options for ports of the
type virtual because it's ignored by OVN.

See LP #2020058 for more information.

Closes-Bug: #2020058
Change-Id: I1fb6a9ff94376ab5f695d311b6fa8034d73cf556
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
833a6d82cd705548130cdac73a88d388f52c7824,2023-06-30 14:51:27+00:00,"[OVN] Prevent Trunk creation/deletion with parent port bound

This patch imitates the ML2/OVS Trunk driver behaviour. When the
trunk parent port is bound:
* A new trunk cannot be created using this parent port.
* If the port is assigned as parent port of a trunk, this
  trunk cannot be deleted.

Closes-Bug: #2022059
Change-Id: I8cfa7e67524a42224cbb4b3c3cec3cfa49b795fd"
42ae9448701b7925b736f5706140d414b53d9012,2023-07-03 07:46:19+00:00,"Switch fullstack/functional fips jobs to 9-stream

Master no longer support py3.6, so let's switch
these jobs to CentOS 9-stream which includes py3.9.

Also dbcounter[1] is not installable on CentOS 8-stream
and hence these jobs are currently broken.

Other fips jobs already switched with[2].

[1] https://review.opendev.org/c/openstack/devstack/+/839820
[2] https://review.opendev.org/c/openstack/neutron/+/833173

Closes-Bug: #1976323
Change-Id: Ie4e807b1490d59390316ec20b499b7676acfe410"
b4eb5d71ab8594a24369d15e4dc6580a4c1cf705,2023-07-03 07:51:32+00:00,"Drop redundant index on ports table

There already exists a unique constraint on the same columns, making
an additional index redundant.

Closes-Bug: #1988421
Change-Id: I8236ec1f685a3ae7c503d3ff8148138a875d702a"
68ecae5ff9a364e41126cb338902f1a36fc9413f,2023-07-03 08:14:58+00:00,"[OVN] Prevent binding a virtual type port

A LSP is type=virtual when its IP address is used by other ports
as allowed address. If a LSP is type=virtual, this port cannot be
bound (that means cannot be used as a port for a virtual machine).

Closes-Bug: #2018529
Change-Id: I1943e6e0d7d8e255e95f93881cc3caec16ab67fe"
80ad28e696cef7eab3b2f9f325e6cee6cd487973,2023-07-03 10:00:20+00:00,"Define the port ""fixed_ips"" in the creation call

The ``NeutronDbPluginV2TestCase.port`` method input parameters are
misleading. The ""subnet"" parameter won't create a port in the subnet
selected; the method will extract the network and will enforce only the
creation of the port on this network.

In order to create a port on the required subnet, the parameter
""fixed_ips"" should be provided instead.

Closes-Bug: #2025618
Change-Id: Ib45e013f86d09ec0719bf2e228aab6cb061c1508"
26a2266cf4e2395b0146902de2eb0a6966a037ec,2023-07-03 18:46:20+00:00,"[FT] Move ``BaseOVSTestCase`` class to concurrency 1 executor

Move the ``BaseOVSTestCase`` class tests to the stestr executor with
concurrency=1. That will prevent that the minimum bandwidth tests
interfere among them.

Closes-Bug: #2025740
Change-Id: Ia3741abe5fa0c8ff65cf36d1ec31c089a1759f05"
65bbbcee76fc2a7501d4c28e3cc716f1f9a6f763,2023-07-04 19:24:01+08:00,"Set result when lswitch port exist

A TypeError was thrown during a synchronization
command(neutron-ovn-db-sync-util) execution. From the code[1][2], it
can be seen. The result of the AddLSwitchPortCommand command will be
passed as a parameter to the UpdateLSwitchPortQosOptionsCommand. But
if the logical switch port exists, the result will not be set. Therefore,
when the UpdateLSwitchPortQosOptionsCommand is executed, the port_id
will not be obtained, thereby throwing an exception TypeError.
This patch sets the result when the logical switch port exists.

[1] https://opendev.org/openstack/neutron/src/commit/b71f7ceb3e97e021cb9aeda757a7ffdeeff80e8e/neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py#L488
[2] https://opendev.org/openstack/neutron/src/commit/b71f7ceb3e97e021cb9aeda757a7ffdeeff80e8e/neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py#L505

Closes-Bug: #2025202

Change-Id: Ie09d9d3e5efa8a57ad11655c2eb31d2604bab326"
02b12b09175c8608ac7d2032baa5d6caf01c660b,2023-07-05 17:40:10+08:00,"Refactor for ovs qos driver meter limit features

Move common functions create/update/delete_packet_rate_limit
to the QosOVSAgentDriver, and keep special driver methods in
their own classes.

Closes-Bug: #1964342
Change-Id: I758c376f55b71d7159fa3f5d83e47d2b05da3218"
670675dd17cf56918400bd5c3bf3c1530d60b7e7,2023-07-07 03:13:17+00:00,"[sqlalchemy-20] Network ""repr"" should be tested with any order

The ""repr"" method of Network does not have an order enforced. The
elements of the DB model can be printed in the representation string
in any order.

Closes-Bug: #2027595
Change-Id: I763ee916eaf4dd9f3906bd20595f0533d25e356d"
e41fae522bdee1a27bac49376360c6293f2c53e2,2023-07-07 10:43:34+02:00,"Default SG api rules template - DB and OVO models

This patch adds DB model, OVO class and DB migration script for
SG rules template used for every new SG created.
It also implements Create/Get/Delete actions for that new resource and
adds API policies for those APIs

Related-Bug: #1983053
Change-Id: Ib3cde1710edd400b972f493b13666d0679a7753c"
49b68d36a0df085b8e6ee54573c42c63a50a0c82,2023-07-07 14:47:59-04:00,"[Docs] Add recommendation about usage of cache in the neutron-metadata-agent

Neutron-metadata-agent can cause big load on the RPC bus and
neutron-server by asking for port details very often. And this can be
optimized by simple using cache mechanism provided by oslo.cache module.
This feature wasn't really described in our docs so this patch adds
short document about why and when use cache in metadata agent, why it's
not needed in the neutron-ovn-metadata-agent and how to enable it.

Closes-Bug: #2024581
Change-Id: I2c7e496f4c0588eebc1fbf42a43473101f67032f"
32121ee63817ee7617397d7d58493a0b718b4bb4,2023-07-12 10:38:47+05:18,"Add unit tests periodic jobs to the experimental queue

We agreed to have all periodic jobs in the experimental queue also to be
able to run them quickly if needed. And it was like that for most of the
jobs but jobs which came to the periodic queue from templates defined in
[1] were missing in the experimental queue.
This patch adds them to the experimental queue too.

Also added irrelevant-files to tox-py311 as it was
missing.

Related-bug: #2025753
[1] https://opendev.org/openstack/openstack-zuul-jobs/src/branch/master/zuul.d/project-templates.yaml

Change-Id: I933cfd66c22aeb0048e1a7c4717ffdf499f5b63c"
a9c8bf5c069d3324828294e3e36b5374d5a828fe,2023-07-12 08:15:39+02:00,"[neutron-api] remove leader_only for sb connection

The maintenance worker from the neutron-api uses a southbound
connection. Since the southbound does not use any locking and all the
ovsdb locking is used for the northbound this changes should not have a
big impact.

This commit removes the leader_only flag for the maintenance worker.
This should also enable the neutron api to connect to relays instead of only
the sb directly.

Closes-Bug: #2022914
Change-Id: Ia7937390867e45af34ebcd65bd76fc89b6adafe9
Signed-off-by: maximkorezkij <maxim.korezkij@mail.schwarz>"
c94fb2bb880e4844a3d37213b630743a9b41108d,2023-07-12 17:53:15+00:00,"[sqlalchemy-20] Define one DB model per ""FromClause.join"" clause

Closes-Bug: #2027602
Change-Id: Id30126a29543a8489715f51620f5ecf5fadb6709"
cc38cb0ceec38c70c2e9664aa3de45b9ee75a9c1,2023-07-12 18:00:57+00:00,"[sqlalchemy-20] Use the correct OVO field type

In ""test_notify_port_status_all_values"", to create the Port OVO it
is needed to pass the correct field values. ""status"" only accepts
strings.

Closes-Bug: #2027610
Change-Id: Icccaa9176ecd53b69cd8d80f24267f87bbb6ed13"
c831771053c29521f7e6e3a17997201f695925ec,2023-07-18 03:37:28+00:00,"[PostgreSQL] Subnet entity with ServiceType grouped by both tables

The SQL clause ""GROUP BY"" in PostgreSQL requires the presence of all
fields provided in the ""SELECT"" clause; this is not happening in
MariaDB not MySQL.

Since [1] (and the related patch [2] that are part of the same bug
fix), when a resource with RBAC registers is selected, the ""GROUP BY""
clause is added to reduce the number of returned registers. The
filed used is ""id"", present in all the RBAC controlled resources
('network', 'qospolicy', 'securitygroup', 'addressscope',
'subnetpool', 'addressgroup'). That is in opposition to what was
stated in the first paragraph ""requires the presence of all
fields provided in the ""SELECT"" clause"". However it is possible
to group only by a primary key [3].

In [4] a prior change was introduced that modifies the ""Subnet"" entity
to include a child table ""SubnetServiceType"". That introduces two new
fields (""SubnetServiceType"" fields) that are not present in the
""GROUP BY"" clause, causing the reported error in the LP bug.

This patch is adding these two fields (that form the composite primary
key of ""SubnetServiceType"" table) to the ""GROUP BY"" clause, when
needed; if the query is executed by an administrator, the RBAC query
won't be performed (an administrator has always permissions) and the
""GROUP BY"" clause won't be issued.

[1]https://review.opendev.org/c/openstack/neutron-lib/+/884878
[2]https://review.opendev.org/c/openstack/neutron/+/884877
[3]https://learnsql.com/blog/must-appear-in-group-by-clause/
[4]https://review.opendev.org/c/openstack/neutron/+/744512

Closes-Bug: #2028003
Change-Id: I18e65d79e56fe5995076eb9166da23fc14c92fc5"
aeb8036393f46f9644ee996fa8e91467480f970f,2023-07-18 10:08:15+00:00,"[sqlalchemy-20] Replace Query.get() with Session.get()

The Query.get() method is considered legacy as of the 1.x series of
SQLAlchemy and becomes a legacy construct in 2.0. This should be
replaced with Session.get() method.

Closes-Bug: #2027604
Change-Id: Ib81f2c36a93f08844a629f165d2323bf1198d465"
5db57734aa525fe888a9b0112e2852e1955f483d,2023-07-19 12:58:58+02:00,"Initialize config in DietTestCase class

Now, after [1] was merged all tests where neutron_lib.context.Context is
used needs to have configured config because every time
instance of the neutron_lib.context.Context class is created it tries to
initialize policies and check if it's service_role or not.

Until now this was done only in the BaseTestCase class so all tests
which inherits from the DietTestCase or SqlTestCaseLight classes did not
have it and those tests were failing.

Additionally this patch removes adding CONF.reset() to the cleanUp in
some tests as it's not needed anymore because it is done in the setUp of
the DietTestCase class.

Closes-Bug: #2025753

[1] https://review.opendev.org/c/openstack/neutron-lib/+/887191

Change-Id: I52597ab066c3d7a2d835278431e00b63c8f55c46"
96fd203a1461a74318af0e89b3d049f618c32fde,2023-07-19 17:59:09+01:00,"For hosts in DVR mode, only fetch bound FIPs

Currently, agents in DVR mode requesting a router update fetch all the
FIPs on a network from the DB rather than just the FIPs that are
relevant to the specific host requesting the update.

While not noticable in smaller networks with a limited number of
floating IPs, this can add significant overhead in larger networks
with many FIPs and hosts.

That overhead comes from Python mapping the responses from the DB into
objects, making extra DB calls per FIP returned and adding additional
iterations to the loop in _get_dvr_sync_data. These objects are mostly
discarded later on and not updated nor included in the RPC response.

This change ensures that we only fetch FIPs from the DB that are bound
to the host requesting the update or those which are in a pre-live
migration state (as they may be migrated to the host in question).

Closes-Bug: #2028185
Change-Id: I199b0b1456aa15dadcc24cafc89db1072d224efd"
36db70a7188b23008e46ae55dc2b9b8e489bcae6,2023-07-20 14:29:06+05:18,"Add sanity check for dnsmasq 2.86

dnsmasq 2.86 has a known issue where it segfaults
with configuration refresh. 2.87 has the fix included.

This patch adds a sanity check to warn users if running
a buggy version.

Related-Bug: #2026757
Change-Id: Id4f26c8a9aa6c18b9471349131a5a2b63d375772"
6c513217c225e7eede998e588183a046b0cb03ec,2023-07-25 12:10:14+02:00,"ovs-agent: React to DB down just like to server down

When neutron-server is down, ovs-agent waits for it to become available
during agent startup. When neutron-server is up, but it cannot reach the
DB, it can do nothing pretty much the same way. However ovs-agent
reacted differently to this failure. With this patch it reacts the same
way and delays its startup until neutron-server is up together with its
DB.

Change-Id: Ia55e82540aedc236e9b016bb58047d0b437eeb99
Closes-Bug: #2025341"
89702218db2476a17f6ff36cf51b909db563d887,2023-07-25 17:03:34+02:00,"Add extra router attributes for ECMP and BFD

* enable_default_route_ecmp
* enable_default_route_bfd

Partial-Bug: #2002687
Change-Id: I3fcd0458d20f20ce40378f90f073f37c41400865"
ba6f7bf83e6f17048a97f781aa16bf4a643a53d2,2023-07-27 18:29:58+00:00,"dvr: Avoid installing non-dvr openflow rule on startup

The tunneling bridge uses different openflow rules depending if the
agent is running in DVR mode or not. With DVR enabled initial rule was
installed that caused traffic coming from the integration bridge to be
flooded to all tunnels. After a few miliseconds this flow was replaced
by a DVR specific flow, correctly dropping the traffic. This small time
window caused a network loop on the compute node with restarted agent.

This patch skips installing the non-dvr specific flow in case OVS agent
is working in DVR mode. Hence the traffic is never flooded to the
tunnels.

Closes-bug: #2028795

Signed-off-by: Jakub Libosvar <libosvar@redhat.com>
Change-Id: I3ce026054286c8e28ec1500f1a4aa607fe73f337"
9e8e3a7867b689ca1bd462ddff294db030032350,2023-08-01 10:05:36+01:00,"[OVN] Hash Ring: Better handle Neutron worker failures

This patch implements a more resilient approach to handle the case
where Neutron API workers are killed and restarted. Instead of marking
all nodes for that host as offline, this patch tries to remove the
worker that was killed from the Hash Ring leaving all others nodes for
that host online.

In case the we fail to remove the node and another entry is added upon the
restart of the worker this patch also logs a clear critical log message to
alert the operator that there are more Hash Ring nodes than API workers
(it's expect to be the same) and that OVSDB events could go missing if
they are routed to the previous node that failed to be removed from the
ring.

Closes-Bug: #2024205
Change-Id: I4b7376cf7df45fcc6e487970b068d06b4e74e319
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
14b2f4f60f1f1c00f41545394bd9761f57b6e37f,2023-08-02 16:27:50+02:00,"[UT] Create network to make lazy loading in the models_v2 possible

In the test_port_deletion_prevention_handles_missing_port test which is
part of the classes:
* neutron.tests.unit.extensions.test_l3.L3NatDBSepTestCase
* neutron.tests.unit.extensions.test_extraroute.ExtraRouteDBSepTestCase

it is needed to call pecan application to e.g. create network to make
all models to be ready. Otherwise things like port_forwarding attribute
in the Port class, which is loaded in lazy mode isn't available and test
was failing when was run in the isolated environment.
It wasn't failing in the gate as there were other tests run by the same
worker before this one and then it was all initialized properly.

Closes-Bug: #2028285
Change-Id: Ie2382540d7c0a8813f093ddf51d82fe530026d71"
a505ff7dbb4f0b7f5487fa8389842dd3ee583d50,2023-08-02 14:28:52+00:00,"hash-ring: Retry all DB operations if inactive

Neutron should be resilient to scenarios where connectivity to a service
Neutron depends on is lost. SQL database is one of it and hash ring DB
operations is used very early in the Neutron startup process.

If the connection is lost right after new API worker was spawned then
OVN IDLs are not instantiated and Neutron silently hangs on each request
that uses OVN DB because the event signaling OVN is ready never happens.

Closes-bug: #2029297
Change-Id: Id5bc24b76b7aa510d4066fbc5f7b8037cc8c740d
Signed-off-by: Jakub Libosvar <libosvar@redhat.com>"
0741a0d5a55024787c7324d060bd3f5a79ffcb0e,2023-08-04 15:48:12+02:00,"Add NET_OWNER_MEMBER and NET_OWNER_READER policy rules

Initially when [1] was proposed the idea was to use PARENT_OWNER_* rules
for the subnet APIs, in the same way as it is done currently for e.g.
FIP PF, QoS rules and some other resources.
But after some more thinking about it, it's better to keep
NET_OWNER rules for MEMBER and READER. Those rules are basically very
similar to the PARENT_OWNER_*, the only difference is that it relies on
the ""network_id"" attribute always.
The reason why it's better to have NET_OWNER_* rules and use them for
subnets and ports is that subnets and ports are actually top level API
resources in neutron. They aren't actually childs of the network so
using PARENT_OWNER for them could be missleading and confusing for
users.

Related-Bug: #2023679

[1] https://review.opendev.org/c/openstack/neutron/+/886231

Change-Id: I52fc92f76842f9f075e9e4c49262785ca099bdf8"
6fef1e65250dbda057206e1c2ee64f59b21d490f,2023-08-08 10:06:29+10:00,"Add max limit to agent_down_time

The agent_down_time ends up being passed to an eventlet green-thread;
under the hood, this uses a CPython C-types interface with a limitation
of (2^32 / 2 - 1) INT_MAX (as defined in C) where int is usually 32 bits

I have set the max value to (2^32 / 2 - 1)/1000 as agent_down_time
configured in seconds, this ends up being 2147483.

This patch is required as passing a larger number
causes this error: OverflowError: timeout is too large

If a user currently has a value larger than (2^32 / 2 - 1)/1000 set,
Neutron Server will fail to start and will print out a very helpful
error message.

Closes-Bug: #2028724
Change-Id: Ib5b943344cddbd468c00768461ba1ee00a2b4c58"
4693836a1b58b477298e51cb47622222e3556752,2023-08-09 15:10:05+01:00,"[OVN] ovn-db-sync check for router port differences

Prior to this patch the ovn-db-sync script did not check if the router
ports were actually out-of-sync before marking them to be updated. This
behavior introduced irrelevant information in the sync report (specially
when ran in ""log"" mode) making the user think that the databases were
out-of-sync even when they were not.

This patch adds the code checking for differences in the Neutron Router
Ports and OVN Logical Router Port entries prior to updating them.

Change-Id: Id7bf5a6aa547795ba78724eed59ba9d4fb74f758
Closes-Bug: #2030773
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
afcce6d7493faaa2acf94c01268a2551a1300d31,2023-08-10 02:03:53+00:00,"Initialize logger for rpc-server and wsgi script

Currently logger is not properly initialized according to config
options or process arguments when the neutron-rpc-server script or
the api wsgi script is used. Because of this neutron does not generate
the log files as expected when we deploy api using WSGI and use
neutron-rpc-server, instead of the monolithic neutron-server.

This ensures the logger is initialized even when these two scripts
are used.

Closes-Bug: #2030904
Related-Bug: #1693691
Change-Id: I13bcd36c237555e0ca60d5ffc214b8f3bf6e478f"
3044b938b9fa7dfef126db9acc18782978238dc6,2023-08-10 13:51:12+01:00,"[OVN] Retry retrieving LSP hosting information

There's a sync issue while trying to fetch the hosting information for
the LSP before we write it to the OVN database, sometimes the
information is not yet present and we end up with an empty string ("""")
for the host attribute of portbindings. This patch adds a retry
mechanism to solve this sync issue.

Change-Id: I52ec4b346271889ebaa7b7f84981eae5503d02d3
Related-Bug: #2020058
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
43b4c9ebc52da5b1699cab919ad9db76ec275db9,2023-08-10 20:21:56+00:00,"[sqlalchemy-20] TableClause.insert constructs Insert object

Replace with the sqalchemy insert [1] function which is
compatible across versions

[1] https://docs.sqlalchemy.org/en/20/core/dml.html#sqlalchemy.sql.expression.insert

Closes-Bug: #2030903
Change-Id: I0abc9c0dfc65e3e031246f514ff6e1e3593a00f4"
49fcd2f515526ed1c0377ad6236c49c7e0d86b2a,2023-08-11 08:58:16+02:00,"Force DB migration script to be run before some fullstack tests

Db migration is when OpportunisticSqlFixture is setup during the test.
But it may happen, when 2 tests are run by the same worker that db
migration will be run only for first test and next one will have
just empty db schema (especially when tests are run serially, like
security groups related tests in fullstack CI job).
To avoid that issue in serially run fullstack tests and to have
always proper data in the db before test will start, new flag
FORCE_DB_MIGRATION is added to the OpportunisticDBTestMixin class. It is
set to False by default so behavior for tests which inherits from this
class is not changed.
It's set to True only in the
BaseSecurityGroupsSameNetworkTest so those fullstack tests will have
always data in the db at the beginning of the test.

Related-bug: #1983053
Change-Id: I1c93f80d6bc19084d30340be5c4b57dbe756a808"
429559826135df06eb348bc0de40e8b1f8955ee5,2023-08-16 20:23:40+00:00,"Use SQLAlchemy expression ""select""

The expresion ""select 1;"" can be replaced using the
``expression.select`` method.

Closes-Bug: #2031646

Change-Id: I7d82d5c399de5c3fb320f130a5c5f65abf147cbd"
06dbc5227b9208887bab9bc6623098c80156f36d,2023-08-17 09:36:17+01:00,"[OVN] Disable the mcast_flood_reports option for LSPs

The mcast_flood_reports option was being enabled on LSPs as a workaround
for a problem in core OVN. The issue in core OVN has been fixed and this
workaround is now causing an increase in the number of actions on the
table 38 of OVN (at the risk of hitting a size limit).

This patch disables the mcast_flood_reports option on newer versions of
OVN while keeping the backward compatibility with the old ones.

Since the fix in core OVN does not expose any information to the CMS to
tell us that the issue is fixed this patch uses the NB DB schema version
to determine if this is an old or a new OVN version.

Change-Id: I8f3f0c2d516e37145eb298b8f51d92fe9905158a
Closes-Bug: #2026825
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
72b5120ac2c5d1723ea62b87c51c1eec75b42c95,2023-08-21 13:56:34+00:00,"Remove local CI job ""tox-py311"" superseded by ""openstack-tox-py311""

Related-Bug: #2032183
Change-Id: Ib177410848b6962c38f34ed2264150381ac6c4f3"
24a645d1d72c619d4b23bad49acc2cf4c9157f89,2023-08-21 13:57:00+00:00,"Fix bindep for Debian bookworm

Debian prefers Mariadb instead of mysql, the libmysqlclient-dev pkg
is not available there, replace it with libmariadb-dev-compat.
Replace mysql-server with mariadb-server.

This patch is similar to [1].

[1]https://review.opendev.org/c/openstack/nova/+/891256

Closes-Bug: #2032183
Change-Id: Ica5b2b4312337fea1f47e4c569398044bd47ecf2"
7848eb0bf925ae872012e08012e15fed9ab32af1,2023-08-22 11:15:47+00:00,"Add ""openstack-tox-py310-with-sqlalchemy-master"" to check queue

This job will help us during the SQLAlchemy 2.0 migration.

Related-Bug: #2031646
Change-Id: I53c339d8a55b6f1cebb411821478bf19da4b5cba"
e1f887ca9ffa73dde8ab41590f2131f3297aa3cd,2023-08-23 03:11:16+00:00,"[OVN] Skip the port status UP update during a live migration

Skip the port status UP update during a live migration due to a
``PortBindingChassisUpdateEvent`` event.

The port status will be set by  the ``LogicalSwitchPortCreateUpEvent``
and ``LogicalSwitchPortCreateDownEvent`` events, that will be issued
when the port is deleted from the source host and created in the
destination host. This is a planned operation and controlled by Nova,
not a reactive event due to an unplanned host down event.

Related-Bug: #2027605
Change-Id: I81390af2ea2fc384423518b84de3acf7adaf9193"
7ed79c1f7890456488a4b44769ed84fea23c9a39,2023-08-23 03:19:49+00:00,"[OVN][Trunk] Set the subports correct host during live migration

During the trunk migration, the parent port multiple port binding
will contain the destination host. Because this update is done
before the migration is done (in other words, the parent port
still has two port binding registers), the method setting the
binding profile of the subport will use the destination host
in advance. At the end of the live migration, the subports
host will point to the correct hostname.

Related-Bug: #2027605
Change-Id: I2370ea2f96e2e31dbd43bf232a63394388e6945f"
87b2f34a98349012ecceed0e54dc766d36024685,2023-08-24 15:18:52-04:00,"Fix ovn-metadata agent sync of unused namespaces

metadata_namespaces contained datapath uuid and not the
neutron network uuid. This broke the logic for namespaces clean up,
resulting in all namespaces getting torn down and recreated at each
metadata agent sync.

Closes-Bug: #2031184
Change-Id: I58dd1973b73aa006234e7b808b6a3f357182a4b3"
4109ee9bb44a1dbaf520c6bdb051c8f63328e23f,2023-08-25 08:43:37+00:00,"Use the new network HA parameter

This patch implements the new network HA boolean field API extension.
This field is an input only parameter for POST operations (creation).
By default is ""False"". When enabled, the Neutron server will create
a ``ha_router_networks`` register in the same transaction of the
network creation.

If by any circumstance (a race condition, for example), another
``ha_router_networks`` exists in the same project, a
``DBDuplicateEntry`` exception will be raised and the transaction
will be rolled back.

Partial-Bug: #2016198
Change-Id: Ie42c13ecbe4abcad9229b71f6942e393fd0f2e4e"
e6fb32e27d1141ca4b00c3758ee44bfe2f060ccf,2023-08-25 08:43:46+00:00,"Fix race condition when creating two routers without HA network

When a HA router is created and the HA is not yet, before creating
the router, the Neutron server creates the HA network and the
corresponding subnet.

The HA network cannot be duplicated (see previous patches related to
this bug). But the subnet, that is created in another database
transaction, cannot be present when the router creation call tries
to create the HA port.

This patch adds a HA subnet check before creating the router and the
HA port. Even if the subnet check fails and the worker tries to
create this subnet, if the process fails with ``InvalidInput``, that
means other worker created the subnet before and the current one
fails because tries to create the same subnet with the same CIDR.
In this case, we dismiss the exception and continue with the router
creation.

Closes-Bug: #2016198

Change-Id: I82225fcc6248bb0fd68959ceb1daabff423d81ff"
0e5c91c4996418147cc329f60ce8b0d0eb539f72,2023-08-27 15:15:42+02:00,"Add some more known issues to the OVN gap document

See the related bugs.

Related-Bug: #2030294
Related-Bug: #2030295
Change-Id: If90e4233c599b0ab4363d7eea6b00436bf7ab92c"
a3b00768d648742034a4e834875fc4586655787c,2023-08-28 09:50:10+00:00,"Check the device ID and host ID during virtual port binding

If a port receives a device ID and a binding profile host ID
fields update, at the same time, this is because Nova is trying
to bind the port to a VM (device ID) in a host (host ID). In
ML2/OVN, a virtual port cannot be bound to a VM.

NOTE:
* A virtual port can receive a host ID update. That happens when
  the fixed IP port that has the virtual port IP address as
  allowed address pair is bound.
* A virtual port can receive a devide ID update. Octavia uses
  the devide ID to identify to what load balancer the virtual
  port belongs.

This check was introduced in [1].

[1]https://review.opendev.org/c/openstack/neutron/+/882588

Closes-Bug: #2028651
Related-Bug: #2018529
Change-Id: I8784c6716f5a53b91d43323771e6f30fa8e8e506"
0545f40a0401629e68561a54e4a576a9fb15f7fc,2023-08-28 09:59:30+00:00,"[OVN] Add the 'uplink-status-propagation' extension to ML2/OVN

Closes-Bug: #2032770
Change-Id: I5f11b568bab4518617409b7c3a02c7222df80a92"
fa130f29f781006527d5846070d9040e8f56d414,2023-08-28 10:12:58+00:00,"Update QoS config document: use YAML config examples

Closes-Bug: #2033203
Change-Id: I0162cf74e74ff915918d36bd1150d2ac474ac882"
d9eb04478e0d9e8a7de3e1eee1138be05e64c9a4,2023-08-29 10:04:52+00:00,"[FT] Make explicit the ""publish"" call check in ""test_port_forwarding""

The functional test ""TestMaintenance.test_port_forwarding"" is checking
the ""registry.publish"" call after calling
""delete_floatingip_port_forwarding"". This patch makes this check
explicit for the expected call.

Closes-Bug: #2033387
Change-Id: I95074a0fe071e3ed8bf58c9210d63a2f30ee68a0"
7f777c223e557f7bb0e0290090019eaa60095b50,2023-08-29 12:09:00+01:00,"[OVN] Cleanup old Hash Ring node entries

This patch introduces a maintenance task that runs once a day and is
responsible for cleaning up Hash Ring nodes that haven't been updated in
5 days or more.

Change-Id: Ibed9e0d77500570c3d0f9f39bfe40cb9239d0d7a
Closes-Bug: #2033281
Signed-off-by: Lucas Alvares Gomes <lucasagomes@gmail.com>"
78bc33d300dc268d193fd2a895ed26079d441c3d,2023-08-30 12:16:51+02:00,"[Fullstack] Use new DB for each running test

Until now neutron fullstack tests which were run by the same worker were
using same DB but after test content of the DB was cleaned.
This could cause problems e.g. for default security group rules which
weren't created properly in second test run by the same worker.

To fix that issue patch [1] was proposed and merged some time ago. But
this didn't solve the problem so this patch is effectively reverting [1]
and proposing another solution which will make each fullstack test to
use own DB and run db migration script.

As running DB migration before every test makes this jobs to run a bit
longer than it took before, this patch also increases timeout for the
fullstack job(s) to 3h (10800 seconds).

[1] https://review.opendev.org/c/openstack/neutron/+/891040

Related-bug: #1983053
Change-Id: Ia261b4c62db9a99ef6eb161acb4609520e45d101"
a4c8392209f7935cc6699c1cf9dc36d483b2f864,2023-08-30 10:18:19+00:00,"Default SG rules - use new rules templates to create rules for SGs

Default SG rules created as template in the Neutron DB are now used to
create security group rules for each new default and non-default SG
created in Neutron.

Closes-bug: #1983053
Change-Id: Iaf27deb955c3844409fcd36239511478e9607a82"
5c2f54ca0364384352035cd1d80acc6e2ffa9f12,2023-08-30 10:18:34+00:00,"Default SG rules template - Update related docs and add release note

This patch updates docs related to the Security Groups to add info about
possibility to change default set of rules created in every new security
group.
It also adds release note about this new API in Neutron.

Closes-Bug: #1983053
Change-Id: I0f6ecc5cf374a0090930e9786834ed7a1be3dc0b"
c6b6ecc75196bd47ebcea0284e7d714c861fa630,2023-08-30 15:35:23+02:00,"Drop release notes for l3-ext-gw-multihoming and adjacent features

We did unfortunately not make it into Bobcat, and will try again
to get it into Caracal.

Partial-Bug: #2002687
Change-Id: I5b4579a96152b8bdb1d34e59fb492c6f2a01b71e"
a3a113aedbf40fdb8d90179033773a9d225a0735,2023-08-31 15:10:20+02:00,"[OVN] Fix rate and burst for stateless security groups

Right now, as per kernel limitation, the burst limit is not correctly
enforcing the rate and burst when using the ovn ""log-related"" option and
stateless security groups. We log exactly double the burst. Creating a
new meter that limits the rate and burst to half of the expected ones is
a workaround that solves the issue.

Closes-bug: #2032929

Signed-off-by: Elvira García <egarciar@redhat.com>
Change-Id: Ib0047d38c58bcebb23c8887e7934987ff8c8a432"
f7489abaf822574f6d8c01b72495788e07d756d3,2023-09-04 08:42:44+00:00,"[UT] Adjust autogen_process_directives for alembic-1.12.0+

With [1] included in alembic-1.12.0 the unit test
test_autogen_process_directives fails as it was
expecting 'type_' param in Autogenerated output.
But this is not included with 1.12.0 by default,
this patch enhances the regex to care only for relevant
parameters.

[1] https://github.com/sqlalchemy/alembic/commit/733197e
Closes-Bug: #2034016
Change-Id: I088cc4b260cccf6be2963d23a76a05f11cfccf2c"
c930196dd84d9d1525014c57e18fa3d9a36c6234,2023-09-05 10:16:38+05:18,"[CI] Bump OVS_BRANCH in ovs/ovn source deploy jobs

Since [1] OVN/OVS source deploy jobs running with
OVN_BRANCH=main fails to compile ovn as this now
requires newer ovs commits from branch-3.2.

[1] https://github.com/ovn-org/ovn/commit/558da0cd

Closes-Bug: #2034096
Change-Id: I5247ce2b1a8606bde807a1744ed37daff04438f1"
34e441e06cd57c95ce4c5ef155103f356324c56c,2023-09-05 10:50:35+00:00,"Revert ""[OVN][Trunk] Set the subports correct host during live migration""

This reverts commit 7ed79c1f7890456488a4b44769ed84fea23c9a39.

Reason for revert: the port binding handling done in this patch is
incorrect and leads to issues during the cold migration process with
trunk ports in ML2/OVN.

Change-Id: I642c3eb1771463db73248a8c50c0db6f7467a6d5
Partial-Bug: #2033887"
8cba9a2ee86cb3b65645674ef315c14cfb261143,2023-09-06 16:11:11+00:00,"Call the ""tc qdisc"" command for ingress qdisc without parent

The ""tc qdisc"" command to create an ingress qdisc does not require
to define a parent qdisc [1]. The ingress qdisc ""differs from other
qdiscs in that it does not occupy the root of a device"".

The previous command was replacing the default root egress qdisc:
  root@dev20:~# ip netns exec ns01 tc qdisc show
  qdisc noqueue 0: dev dummy root refcnt 2

This operation is now not permitted with the new kernel.

This patch is also changing how the TC funtional tests interact with
the namespace interface created. Now the interface is set to UP before
the test starts. That changes the ""tc qdisc show"" command because now
the default qdisc (see the aforementioned CLI output) is now present,
as it should be in a live environment (where the interfaces are UP).

Closes-Bug: #2034540

[1]https://tldp.org/HOWTO/Adv-Routing-HOWTO/lartc.adv-qdisc.ingress.html

Change-Id: I2f8130dc3cf3244be2a44a4ecbdbaa9c7f865731"
