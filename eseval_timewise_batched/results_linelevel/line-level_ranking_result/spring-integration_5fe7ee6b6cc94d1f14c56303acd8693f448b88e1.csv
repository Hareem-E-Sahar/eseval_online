commit_id,line,line_level_label,count,line_score,row
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"""Unsupported Message payload type ["" + payload.getClass().getName() + ""]"");",0,4,1.0,1
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"""unsupported Message payload type ["" + payload.getClass().getName() + ""]"");",1,4,1.0,2
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"File outFile = new File(tempDir, ""/outputDirectory/"" + message.getHeaders().getId().toString() + "".msg"");",0,4,1.0,3
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"File outFile = temp.newFile(""/outputDirectory/"" + message.getHeaders().getId().toString() + "".msg"");",1,4,1.0,4
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"File outFile = temp.newFile(""/outputDirectory/"" + message.getHeaders().getId().toString() + "".msg.writing"");",1,4,1.0,5
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,* representing the bits that were set in the chmod value.,1,4,1.0,6
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (originalFileFromHeader == null && payload instanceof File) {,1,3,0.75,7
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,File destFile = (File) result.getPayload();,1,3,0.75,8
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,* We use that stream with a switch to create the set of PosixFilePermissions,1,3,0.75,9
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"throw new IllegalStateException(""Could not delete original file: "" + originalFile);",0,3,0.75,10
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"private File writeMessageToFile(Message<?> requestMessage, File originalFileFromHeader, File tempFile,",0,3,0.75,11
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (resultFile != null && originalFileFromHeader == null && payload instanceof File) {,0,3,0.75,12
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (timestamp instanceof Number) {,1,2,0.5,13
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,while ((bytesRead = sourceFileInputStream.read(buffer)) != -1) {,1,2,0.5,14
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (resultFile != null) {,1,2,0.5,15
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"+ "" must be a Number, not "" + (timestamp == null ? ""null"" : timestamp.getClass()));",1,2,0.5,16
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"this.logger.warn(""Could not set lastModified, header "" + FileHeaders.SET_MODIFIED",1,2,0.5,17
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (this.logger.isWarnEnabled()) {,1,2,0.5,18
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,final File destinationDirectoryToUse = evaluateDestinationDirectoryExpression(requestMessage);,1,2,0.5,19
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (this.preserveTimestamp) {,1,2,0.5,20
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else if (payload instanceof String) {,1,2,0.5,21
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else if (payload instanceof byte[]) {,1,2,0.5,22
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else if (payload instanceof InputStream) {,1,2,0.5,23
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (payload instanceof File) {,1,2,0.5,24
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (state == null || FileWritingMessageHandler.this.flushTask == null) {,1,2,0.5,25
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (FileWritingMessageHandler.this.appendNewLine) {,1,2,0.5,26
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"new File(tempDir, ""/outputDirectory/"" + message.getHeaders().getId().toString() + "".msg.writing"");",0,2,0.5,27
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (bos != null) {,1,2,0.5,28
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (this.deleteSourceFiles && originalFile != null) {,1,2,0.5,29
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (state != null && ((isString && state.stream != null) || (!isString && state.writer != null))) {,1,2,0.5,30
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"static final String SAMPLE_CONTENT = ""HelloWorld\näöüß"";",0,2,0.5,31
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,File outFile =,0,2,0.5,32
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,* (bits 0-7) followed by the second order byte (bit 8).,1,2,0.5,33
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"File tempFolder = new File(tempDir, UUID.randomUUID().toString());",0,2,0.5,34
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"File file = new File(this.tempDir, ""foo.txt"");",0,2,0.5,35
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"static final String SAMPLE_CONTENT = ""HelloWorld\n????"";",1,2,0.5,36
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public TemporaryFolder temp = new TemporaryFolder() {,1,2,0.5,37
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,handler = new FileWritingMessageHandler(outputDirectory);,1,2,0.5,38
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,File tempFolder = this.temp.newFolder();,1,2,0.5,39
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"File file = new File(this.temp.newFolder(), ""foo.txt"");",1,2,0.5,40
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"BitSet bits = BitSet.valueOf(new byte[] { (byte) chmod, (byte) (chmod >> 8) });",1,2,0.5,41
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (writer != null) {,1,2,0.5,42
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"* Since we are interested in 9 bits, we construct an array with the low-order byte",1,2,0.5,43
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"throw new IllegalStateException(""Could not set last modified '"" + timestamp",0,2,0.5,44
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (this.deleteSourceFiles && originalFile != null && !originalFile.delete()) {,0,2,0.5,45
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,* @param taskScheduler the {@link TaskScheduler} to use.,0,2,0.5,46
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"BitSet bits = BitSet.valueOf(new byte[] { (byte) chmod, (byte) (chmod >> 8) }); // NOSONAR",0,2,0.5,47
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,File destinationDirectoryToUse = evaluateDestinationDirectoryExpression(requestMessage);,0,2,0.5,48
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"File resultFile, Object timestamp) throws IOException {",0,2,0.5,49
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,Object payload = requestMessage.getPayload();,0,2,0.5,50
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (payload instanceof File) {,0,2,0.5,51
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else if (payload instanceof InputStream) {,0,2,0.5,52
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else if (payload instanceof byte[]) {,0,2,0.5,53
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else if (payload instanceof String) {,0,2,0.5,54
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (this.preserveTimestamp) {,0,2,0.5,55
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (timestamp instanceof Number) {,0,2,0.5,56
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (!fileToReturn.setLastModified(((Number) timestamp).longValue())) {,0,2,0.5,57
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,File fileToReturn = null;,0,2,0.5,58
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (bos != null) {,0,2,0.5,59
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"+ ""' timestamp on file: "" + fileToReturn);",0,2,0.5,60
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else if (this.logger.isWarnEnabled()) {,0,2,0.5,61
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"this.logger.warn(""Could not set lastModified, header "" + FileHeaders.SET_MODIFIED",0,2,0.5,62
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"+ "" must be a Number, not "" + (timestamp == null ? ""null"" : timestamp.getClass()));",0,2,0.5,63
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,while ((bytesRead = inputStream.read(buffer)) != -1) {,0,2,0.5,64
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,try (InputStream inputStream = sourceFileInputStream) {,0,2,0.5,65
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (FileWritingMessageHandler.this.appendNewLine) {,0,2,0.5,66
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (state == null || FileWritingMessageHandler.this.flushTask == null) {,0,2,0.5,67
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (this.appendNewLine) {,0,2,0.5,68
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (state == null || this.flushTask == null) {,0,2,0.5,69
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (writer != null) {,0,2,0.5,70
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"private void writeStringToFile(File fileToWriteTo, boolean append, String content) throws IOException {",0,2,0.5,71
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,byte[] buffer = new byte[StreamUtils.BUFFER_SIZE];,1,1,0.25,72
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,int bytesRead = -1;,1,1,0.25,73
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,finally {,1,1,0.25,74
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,while (n++ < 10 && this.fileStates.size() > 0) {,1,1,0.25,75
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,catch (IOException ex) {,1,1,0.25,76
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,state.lastWrite = System.currentTimeMillis();,1,1,0.25,77
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"bos = new BufferedOutputStream(new FileOutputStream(tempFile), this.bufferSize);",1,1,0.25,78
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, append);",1,1,0.25,79
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,try {,1,1,0.25,80
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"FileState state = getFileState(fileToWriteTo, true);",1,1,0.25,81
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, true);",1,1,0.25,82
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,resultFile = this.handleByteArrayMessage(,1,1,0.25,83
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,BufferedOutputStream bos = null;,1,1,0.25,84
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"FileState state = getFileState(fileToWriteTo, false);",1,1,0.25,85
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else {,1,1,0.25,86
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,resultFile = this.handleStringMessage(,1,1,0.25,87
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"resultFile = handleInputStreamMessage((InputStream) payload, originalFileFromHeader, tempFile,",1,1,0.25,88
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"resultFile = handleFileMessage((File) payload, tempFile, resultFile, requestMessage);",1,1,0.25,89
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,boolean ignore = (FileExistsMode.IGNORE.equals(this.fileExistsMode),1,1,0.25,90
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"Assert.notNull(payload, ""message payload must not be null"");",1,1,0.25,91
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"writer = state != null ? state.writer : createWriter(fileToWriteTo, append);",1,1,0.25,92
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,BufferedWriter writer = null;,1,1,0.25,93
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"sourceFile = temp.newFile(""sourceFile"");",1,1,0.25,94
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,File tempDir;,0,1,0.25,95
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,void setup() throws IOException {,0,1,0.25,96
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,this.permissions = posixPermissions;,1,1,0.25,97
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<byte[]>(""qux"".getBytes())); // change of payload type forces flush",1,1,0.25,98
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void customFileNameGenerator() throws Exception {,1,1,0.25,99
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void deleteSourceFileWithInputstreamPayloadAndFilePathHeader() throws Exception {,1,1,0.25,100
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void deleteSourceFileWithInputstreamPayloadAndFileInstanceHeader() throws Exception {,1,1,0.25,101
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,catch (IllegalArgumentException e) {,1,1,0.25,102
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,@Test(expected = MessageHandlingException.class),1,1,0.25,103
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,},1,1,0.25,104
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"outputDirectory = temp.newFolder(""outputDirectory"");",1,1,0.25,105
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void create() throws IOException {,1,1,0.25,106
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,return (File) result.getPayload();,0,1,0.25,107
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<>(""qux"".getBytes())); // change of payload type forces flush",0,1,0.25,108
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void customFileNameGenerator() {,0,1,0.25,109
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void deleteSourceFileWithInputStreamPayloadAndFilePathHeader() throws Exception {,0,1,0.25,110
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void deleteSourceFileWithInputStreamPayloadAndFileInstanceHeader() throws Exception {,0,1,0.25,111
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,},0,1,0.25,112
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,this.handler = new FileWritingMessageHandler(this.outputDirectory);,0,1,0.25,113
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"sourceFile = new File(tempDir, ""sourceFile"");",0,1,0.25,114
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"outputDirectory = new File(tempDir, ""outputDirectory"");",0,1,0.25,115
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"this.flushTask = taskScheduler.scheduleAtFixedRate(new Flusher(), this.flushInterval / 3);",1,1,0.25,116
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,try {,1,1,0.25,117
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,},1,1,0.25,118
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"fileToReturn = handleFileMessage((File) payload, tempFile, resultFile, requestMessage);",0,1,0.25,119
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"private void appendStreamToFile(File fileToWriteTo, InputStream sourceFileInputStream) throws IOException {",0,1,0.25,120
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"new BufferedOutputStream(new FileOutputStream(tempFile), this.bufferSize)) {",0,1,0.25,121
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,OutputStream outputStream =,0,1,0.25,122
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,try (InputStream inputStream = sourceFileInputStream;,0,1,0.25,123
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,else {,0,1,0.25,124
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"fileToReturn = handleStringMessage((String) payload, originalFileFromHeader, tempFile, resultFile,",0,1,0.25,125
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"fileToReturn = handleByteArrayMessage((byte[]) payload, originalFileFromHeader, tempFile, resultFile,",0,1,0.25,126
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"fileToReturn = handleInputStreamMessage((InputStream) payload, originalFileFromHeader, tempFile,",0,1,0.25,127
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,},0,1,0.25,128
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"resultFile = writeMessageToFile(requestMessage, originalFileFromHeader, tempFile, resultFile,",0,1,0.25,129
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,BufferedOutputStream bos = null;,0,1,0.25,130
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,boolean ignore = (FileExistsMode.IGNORE.equals(this.fileExistsMode) // NOSONAR,0,1,0.25,131
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,while (n++ < 10 && this.fileStates.size() > 0) { // NOSONAR,0,1,0.25,132
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"this.flushTask = taskScheduler.scheduleAtFixedRate(new Flusher(), this.flushInterval / 3); // NOSONAR",0,1,0.25,133
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,this.permissions = bits.stream(),0,1,0.25,134
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,* Configure a {@link TaskScheduler} for flush operations.,0,1,0.25,135
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"private final Map<String, FileState> fileStates = new HashMap<>();",0,1,0.25,136
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,{,0,1,0.25,137
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,private static final PosixFilePermission[] POSIX_FILE_PERMISSIONS =,0,1,0.25,138
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,switch (b) {,1,1,0.25,139
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"FileState state = getFileState(fileToWriteTo, false);",0,1,0.25,140
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void setTaskScheduler(TaskScheduler taskScheduler) { // NOSONAR,0,1,0.25,141
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, true);",0,1,0.25,142
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"writer = state != null ? state.writer : createWriter(fileToWriteTo, append);",0,1,0.25,143
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,bits.stream().forEach(b -> {,1,1,0.25,144
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,byte[] buffer = new byte[StreamUtils.BUFFER_SIZE];,0,1,0.25,145
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,final Set<PosixFilePermission> posixPermissions = new HashSet<>();,1,1,0.25,146
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,* Bitset.valueOf(byte[]) takes a little-endian array of bytes to create a BitSet.,1,1,0.25,147
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,public void setTaskScheduler(TaskScheduler taskScheduler) {,1,1,0.25,148
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"private final Map<String, FileState> fileStates = new HashMap<String, FileState>();",1,1,0.25,149
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,private final Log logger = LogFactory.getLog(this.getClass());,1,1,0.25,150
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,&& ((isString && state.stream != null) || (!isString && state.writer != null))) {,0,1,0.25,151
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,if (state != null // NOSONAR,0,1,0.25,152
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,* BitSet.stream() returns a stream of ints representing those bits that are set.,1,1,0.25,153
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,BufferedWriter writer = null;,0,1,0.25,154
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,finally {,0,1,0.25,155
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, append);",0,1,0.25,156
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"private void writeBytesToFile(File fileToWriteTo, boolean append, byte[] bytes) throws IOException {",0,1,0.25,157
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,catch (IOException ex) {,0,1,0.25,158
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,state.lastWrite = System.currentTimeMillis();,0,1,0.25,159
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,int bytesRead = -1;,0,1,0.25,160
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,try {,0,1,0.25,161
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"FileState state = getFileState(fileToWriteTo, true);",0,1,0.25,162
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,writer.newLine();,1,0,0.0,163
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,writer.close();,1,0,0.0,164
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,originalFile.delete();,1,0,0.0,165
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import static org.assertj.core.api.Assertions.assertThatExceptionOfType;,0,0,0.0,166
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;,0,0,0.0,167
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import java.util.UUID;,0,0,0.0,168
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.junit.jupiter.api.BeforeEach;,0,0,0.0,169
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.junit.jupiter.api.io.TempDir;,0,0,0.0,170
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.junit.jupiter.api.Disabled;,0,0,0.0,171
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.junit.jupiter.api.Test;,0,0,0.0,172
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.springframework.context.support.GenericApplicationContext;,0,0,0.0,173
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,@TempDir,0,0,0.0,174
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,@BeforeEach,0,0,0.0,175
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"FileCopyUtils.copy(SAMPLE_CONTENT.getBytes(DEFAULT_ENCODING),",0,0,0.0,176
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"this.cleanUpAfterCopy(fileToWriteTo, resultFile, originalFile);",1,0,0.0,177
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"new FileOutputStream(sourceFile, false));",0,0,0.0,178
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,writer.write(content);,1,0,0.0,179
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,".setHeader(FileHeaders.ORIGINAL_FILE, payload);",1,0,0.0,180
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,bos.write(bytes);,1,0,0.0,181
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,return resultFile;,1,0,0.0,182
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,this.handler.setApplicationContext(new GenericApplicationContext());,0,0,0.0,183
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"Assert.notNull(requestMessage, ""message must not be null"");",1,0,0.0,184
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"resultFile, requestMessage);",1,0,0.0,185
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"(byte[]) payload, originalFileFromHeader, tempFile, resultFile, requestMessage);",1,0,0.0,186
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"(String) payload, originalFileFromHeader, tempFile, resultFile, requestMessage);",1,0,0.0,187
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,throw new IllegalArgumentException(,1,0,0.0,188
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,resultFile.setLastModified(((Number) timestamp).longValue());,1,0,0.0,189
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,return this.getMessageBuilderFactory().withPayload(resultFile),1,0,0.0,190
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"bos.write(buffer, 0, bytesRead);",1,0,0.0,191
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,bos.write(System.lineSeparator().getBytes());,1,0,0.0,192
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,sourceFileInputStream.close();,1,0,0.0,193
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,bos.close();,1,0,0.0,194
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"clearState(fileToWriteTo, state);",1,0,0.0,195
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,bos.flush();,1,0,0.0,196
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"cleanUpAfterCopy(tempFile, resultFile, originalFile);",1,0,0.0,197
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,this.handler.setBeanFactory(mock(BeanFactory.class));,0,0,0.0,198
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,handler.setBeanFactory(mock(BeanFactory.class));,1,0,0.0,199
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,this.handler.afterPropertiesSet();,0,0,0.0,200
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<String>(""test""));",1,0,0.0,201
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"this.evaluationContext, null, ""destinationDirectoryExpression"");",1,0,0.0,202
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,handler.afterPropertiesSet();,1,0,0.0,203
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"FileCopyUtils.copy(SAMPLE_CONTENT.getBytes(DEFAULT_ENCODING),",1,0,0.0,204
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"new FileOutputStream(sourceFile, false));",1,0,0.0,205
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,};,1,0,0.0,206
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,this.handler.handleMessage(new GenericMessage<>(99));,1,0,0.0,207
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,assertThat(this.outputDirectory.listFiles()[0]).isNull();,1,0,0.0,208
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"@Ignore(""INT-3289: doesn't fail on all OS"")",1,0,0.0,209
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,@Test,0,0,0.0,210
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"fail(""Expected exception"");",1,0,0.0,211
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"assertThat(e.getMessage()).contains(""[/foo] could not be created"");",1,0,0.0,212
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<String>(""foo""));",1,0,0.0,213
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<String>(""bar""));",1,0,0.0,214
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<String>(""baz""));",1,0,0.0,215
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,handler.trigger(new GenericMessage<String>(Matcher.quoteReplacement(file.getAbsolutePath())));,1,0,0.0,216
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.trigger(new GenericMessage<String>(""foo""));",1,0,0.0,217
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,super.create();,1,0,0.0,218
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,@Override,1,0,0.0,219
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,@Rule,1,0,0.0,220
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.junit.rules.TemporaryFolder;,1,0,0.0,221
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,assertThatExceptionOfType(MessageHandlingException.class),0,0,0.0,222
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,.isThrownBy(() -> this.handler.handleMessage(new GenericMessage<>(99)));,0,0,0.0,223
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<>(""test""));",0,0,0.0,224
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"@Disabled(""INT-3289: doesn't fail on all OS"")",0,0,0.0,225
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,assertThatIllegalArgumentException(),0,0,0.0,226
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,.isThrownBy(handler::afterPropertiesSet),0,0,0.0,227
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,".withMessageContaining(""[/foo] could not be created"");",0,0,0.0,228
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<>(""foo""));",0,0,0.0,229
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<>(""bar""));",0,0,0.0,230
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.handleMessage(new GenericMessage<>(""baz""));",0,0,0.0,231
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,handler.trigger(new GenericMessage<>(Matcher.quoteReplacement(file.getAbsolutePath())));,0,0,0.0,232
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"handler.trigger(new GenericMessage<>(""foo""));",0,0,0.0,233
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.junit.Ignore;,1,0,0.0,234
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.junit.Rule;,1,0,0.0,235
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.junit.Test;,1,0,0.0,236
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,@Override,1,0,0.0,237
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,/*,1,0,0.0,238
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,});,1,0,0.0,239
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,.boxed(),0,0,0.0,240
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,.collect(Collectors.toSet());,0,0,0.0,241
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"this.evaluationContext, null, ""destinationDirectoryExpression"");",0,0,0.0,242
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,@Override // NOSONAR,0,0,0.0,243
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,timestamp);,0,0,0.0,244
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,return getMessageBuilderFactory(),0,0,0.0,245
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,.withPayload(resultFile),0,0,0.0,246
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,".setHeader(FileHeaders.ORIGINAL_FILE, payload);",0,0,0.0,247
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"resultFile, requestMessage);",0,0,0.0,248
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,requestMessage);,0,0,0.0,249
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,throw new IllegalArgumentException(,0,0,0.0,250
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,return fileToReturn;,0,0,0.0,251
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"appendStreamToFile(fileToWriteTo, sourceFileInputStream);",0,0,0.0,252
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,int bytesRead;,0,0,0.0,253
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"outputStream.write(buffer, 0, bytesRead);",0,0,0.0,254
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,outputStream.write(System.lineSeparator().getBytes());,0,0,0.0,255
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,.map((b) -> POSIX_FILE_PERMISSIONS[b]),0,0,0.0,256
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"""'chmod' must be between 0 and 0777 (octal)"");",0,0,0.0,257
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"cleanUpAfterCopy(tempFile, resultFile, originalFile);",0,0,0.0,258
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"Assert.isTrue(chmod >= 0 && chmod <= 0777, // NOSONAR permissions octal",0,0,0.0,259
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import java.io.OutputStream;,0,0,0.0,260
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import java.util.stream.Collectors;,0,0,0.0,261
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"PosixFilePermission.OTHERS_EXECUTE,",0,0,0.0,262
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"PosixFilePermission.OTHERS_WRITE,",0,0,0.0,263
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"PosixFilePermission.OTHERS_READ,",0,0,0.0,264
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"PosixFilePermission.GROUP_EXECUTE,",0,0,0.0,265
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"PosixFilePermission.GROUP_WRITE,",0,0,0.0,266
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"PosixFilePermission.GROUP_READ,",0,0,0.0,267
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"PosixFilePermission.OWNER_EXECUTE,",0,0,0.0,268
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"PosixFilePermission.OWNER_WRITE,",0,0,0.0,269
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,PosixFilePermission.OWNER_READ,0,0,0.0,270
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,};,0,0,0.0,271
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,/**,0,0,0.0,272
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,*/,0,0,0.0,273
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"setChmod(Integer.parseInt(chmod, 8)); // NOSONAR 8-bit",0,0,0.0,274
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,outputStream.flush();,0,0,0.0,275
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,return resultFile;,0,0,0.0,276
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.OWNER_READ);,1,0,0.0,277
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.OTHERS_EXECUTE);,1,0,0.0,278
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 1:,1,0,0.0,279
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.OTHERS_WRITE);,1,0,0.0,280
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 2:,1,0,0.0,281
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.OTHERS_READ);,1,0,0.0,282
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 3:,1,0,0.0,283
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.GROUP_EXECUTE);,1,0,0.0,284
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 4:,1,0,0.0,285
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.GROUP_WRITE);,1,0,0.0,286
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 5:,1,0,0.0,287
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.GROUP_READ);,1,0,0.0,288
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 6:,1,0,0.0,289
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.OWNER_EXECUTE);,1,0,0.0,290
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 7:,1,0,0.0,291
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,posixPermissions.add(PosixFilePermission.OWNER_WRITE);,1,0,0.0,292
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 8:,1,0,0.0,293
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,break;,1,0,0.0,294
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,case 0:,1,0,0.0,295
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"bos.write(buffer, 0, bytesRead);",0,0,0.0,296
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,*/,1,0,0.0,297
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,bos.write(System.lineSeparator().getBytes());,0,0,0.0,298
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"clearState(fileToWriteTo, state);",0,0,0.0,299
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"writeBytesToFile(fileToWriteTo, append, bytes);",0,0,0.0,300
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"cleanUpAfterCopy(fileToWriteTo, resultFile, originalFile);",0,0,0.0,301
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,bos.write(bytes);,0,0,0.0,302
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,bos.close();,0,0,0.0,303
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"writeStringToFile(fileToWriteTo, append, content);",0,0,0.0,304
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,writer.write(content);,0,0,0.0,305
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,writer.newLine();,0,0,0.0,306
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,writer.close();,0,0,0.0,307
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import java.util.HashSet;,1,0,0.0,308
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.apache.commons.logging.Log;,1,0,0.0,309
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,import org.apache.commons.logging.LogFactory;,1,0,0.0,310
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"setChmod(Integer.parseInt(chmod, 8));",1,0,0.0,311
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,"Assert.isTrue(chmod >= 0 && chmod <= 0777, ""'chmod' must be between 0 and 0777 (octal)"");",1,0,0.0,312
5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,return destFile;,1,0,0.0,313
