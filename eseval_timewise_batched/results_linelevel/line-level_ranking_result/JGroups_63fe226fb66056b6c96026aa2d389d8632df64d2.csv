commit_id,line,line_level_label,count,line_score,row
63fe226fb66056b6c96026aa2d389d8632df64d2,"return ""[type="" + type + "" version=\"""" + (version != null? version.length + "" bytes"" : ""n/a"") + ""\""]"";",1,9,1.0,1
63fe226fb66056b6c96026aa2d389d8632df64d2,// queues to buffer data while we are swapping shared key or obtaining key for first time,1,8,0.8888888888888888,2
63fe226fb66056b6c96026aa2d389d8632df64d2,if (members == null || members.isEmpty() || members.get(0) == null) {,1,6,0.6666666666666666,3
63fe226fb66056b6c96026aa2d389d8632df64d2,public static final byte ENCRYPT            = 1 << 0;,1,6,0.6666666666666666,4
63fe226fb66056b6c96026aa2d389d8632df64d2,if(msg == null || (msg.getLength() == 0 && !encrypt_entire_message) || ((hdr=(EncryptHeader)msg.getHeader(id)) == null)),1,6,0.6666666666666666,5
63fe226fb66056b6c96026aa2d389d8632df64d2,// check if we had some sort of encrypt control header if using supplied key we should not process it,1,6,0.6666666666666666,6
63fe226fb66056b6c96026aa2d389d8632df64d2,if(msg == null || (msg.getLength() == 0 && !encrypt_entire_message) || ((hdr=(EncryptHeader)msg.getHeader(this.id)) == null)),1,6,0.6666666666666666,7
63fe226fb66056b6c96026aa2d389d8632df64d2,"private byte[] code(byte[] buf, int offset, int length, boolean decode) throws Exception {",1,6,0.6666666666666666,8
63fe226fb66056b6c96026aa2d389d8632df64d2,"throw new Exception(""Unable to retrieve key '"" + alias + ""' from keystore "" + keyStoreName);",1,6,0.6666666666666666,9
63fe226fb66056b6c96026aa2d389d8632df64d2,"throw new Exception(""Certificate exception "" + keyStoreName + "": "" + e);",1,6,0.6666666666666666,10
63fe226fb66056b6c96026aa2d389d8632df64d2,"throw new Exception(""No Such algorithm "" + keyStoreName + "": "" + e);",1,6,0.6666666666666666,11
63fe226fb66056b6c96026aa2d389d8632df64d2,"throw new Exception(""Unable to load keystore "" + keyStoreName + "": "" + e);",1,6,0.6666666666666666,12
63fe226fb66056b6c96026aa2d389d8632df64d2,if(keyPassword == null && storePassword != null) {,1,6,0.6666666666666666,13
63fe226fb66056b6c96026aa2d389d8632df64d2,// to make sure we are not sending with old key,1,5,0.5555555555555556,14
63fe226fb66056b6c96026aa2d389d8632df64d2,public static final byte ENCRYPT_ENTIRE_MSG = 1 << 3;,1,5,0.5555555555555556,15
63fe226fb66056b6c96026aa2d389d8632df64d2,public static final byte SECRETKEY          = 1 << 2;,1,5,0.5555555555555556,16
63fe226fb66056b6c96026aa2d389d8632df64d2,public static final byte KEY_REQUEST        = 1 << 1;,1,5,0.5555555555555556,17
63fe226fb66056b6c96026aa2d389d8632df64d2,batch.remove(msg); // a control message will get handled by ENCRYPT and should not be passed up,1,5,0.5555555555555556,18
63fe226fb66056b6c96026aa2d389d8632df64d2,downMessageQueue.put(msg); // queue messages if we are waiting for a new key,1,5,0.5555555555555556,19
63fe226fb66056b6c96026aa2d389d8632df64d2,"private Message _decrypt(final Cipher cipher, Message msg, boolean decrypt_entire_msg) throws Exception {",1,5,0.5555555555555556,20
63fe226fb66056b6c96026aa2d389d8632df64d2,* Does the actual work for decrypting - if version does not match current cipher then tries the previous cipher,1,5,0.5555555555555556,21
63fe226fb66056b6c96026aa2d389d8632df64d2,// could be more optimised but this can wait we only need this if not using supplied key,1,5,0.5555555555555556,22
63fe226fb66056b6c96026aa2d389d8632df64d2,//I am  keyserver - either first member of group or old key server is no more and,1,5,0.5555555555555556,23
63fe226fb66056b6c96026aa2d389d8632df64d2,private String keyPassword=null; // allows to assign keypwd=storepwd if not set (https://issues.jboss.org/browse/JGRP-1375),1,5,0.5555555555555556,24
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""change_keys"", description=""Generate new symmetric keys on every view change. Default is false. "" +",1,5,0.5555555555555556,25
63fe226fb66056b6c96026aa2d389d8632df64d2,* and down messages until the new key is installed. The previous keys are,1,5,0.5555555555555556,26
63fe226fb66056b6c96026aa2d389d8632df64d2,* process - the view change event also trigger the ENCRYPT layer to queue up,1,5,0.5555555555555556,27
63fe226fb66056b6c96026aa2d389d8632df64d2,* own public key. The controller encrypts the secret key with this key and,1,5,0.5555555555555556,28
63fe226fb66056b6c96026aa2d389d8632df64d2,* is first generated by the controller (in JGroups terms). When a view change,1,5,0.5555555555555556,29
63fe226fb66056b6c96026aa2d389d8632df64d2,* Sets up the peer for a new keyserver - this is setting queueing to buffer,1,5,0.5555555555555556,30
63fe226fb66056b6c96026aa2d389d8632df64d2,for (int i = 0; i < b.length; i++){,1,4,0.4444444444444444,31
63fe226fb66056b6c96026aa2d389d8632df64d2,// if a key request send response key back,1,4,0.4444444444444444,32
63fe226fb66056b6c96026aa2d389d8632df64d2,"private synchronized void handleViewChange(View view, boolean makeServer) {",1,4,0.4444444444444444,33
63fe226fb66056b6c96026aa2d389d8632df64d2,// if view is a bit broken set me as keyserver,1,4,0.4444444444444444,34
63fe226fb66056b6c96026aa2d389d8632df64d2,* messages until we have a new secret key from the key server and sending a,1,4,0.4444444444444444,35
63fe226fb66056b6c96026aa2d389d8632df64d2,"private void handleNewKeyServer(Address newKeyServer, boolean merge_view) {",1,4,0.4444444444444444,36
63fe226fb66056b6c96026aa2d389d8632df64d2,// make sure we pass up any queued messages first,1,4,0.4444444444444444,37
63fe226fb66056b6c96026aa2d389d8632df64d2,/** send client's public key to server and request server's public key */,1,4,0.4444444444444444,38
63fe226fb66056b6c96026aa2d389d8632df64d2,// otherwise lets set the returned key as the shared key,1,4,0.4444444444444444,39
63fe226fb66056b6c96026aa2d389d8632df64d2,"private Message decryptMessage(Cipher cipher, Message msg) throws Exception {",1,4,0.4444444444444444,40
63fe226fb66056b6c96026aa2d389d8632df64d2,"private void sendSecretKey(SecretKey secret, PublicKey pubKey, Address source) throws Exception {",1,4,0.4444444444444444,41
63fe226fb66056b6c96026aa2d389d8632df64d2,if (asymProvider != null && !asymProvider.trim().isEmpty()),1,4,0.4444444444444444,42
63fe226fb66056b6c96026aa2d389d8632df64d2,if (symProvider != null && !symProvider.trim().isEmpty()),1,4,0.4444444444444444,43
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.trace(""queueing up message as no session key established: "" + msg);",1,4,0.4444444444444444,44
63fe226fb66056b6c96026aa2d389d8632df64d2,// set up the Cipher to decrypt secret key responses encrypted with our key,1,4,0.4444444444444444,45
63fe226fb66056b6c96026aa2d389d8632df64d2,"private void becomeKeyServer(Address tmpKeyServer, boolean forced) {",1,4,0.4444444444444444,46
63fe226fb66056b6c96026aa2d389d8632df64d2,StringBuilder sb = new StringBuilder(b.length * 2);,1,4,0.4444444444444444,47
63fe226fb66056b6c96026aa2d389d8632df64d2,"private static final String DEFAULT_SYM_ALGO=""AES"";",1,4,0.4444444444444444,48
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""initialized symmetric ciphers with secret key ("" + symVersion.length + "" bytes)"");",1,4,0.4444444444444444,49
63fe226fb66056b6c96026aa2d389d8632df64d2,* public/private key exchange. View changes that identify a new controller will,1,4,0.4444444444444444,50
63fe226fb66056b6c96026aa2d389d8632df64d2,* This option is suited to an application that does not ship with a known key,1,4,0.4444444444444444,51
63fe226fb66056b6c96026aa2d389d8632df64d2,* but instead it is generated and distributed by the controller. The secret key,1,4,0.4444444444444444,52
63fe226fb66056b6c96026aa2d389d8632df64d2,"* occurs, a peer will request the secret key by sending a key request with its",1,4,0.4444444444444444,53
63fe226fb66056b6c96026aa2d389d8632df64d2,* decrypted if the key is different. <br>,1,4,0.4444444444444444,54
63fe226fb66056b6c96026aa2d389d8632df64d2,* Note: the current version does not support the concept of perfect forward,1,4,0.4444444444444444,55
63fe226fb66056b6c96026aa2d389d8632df64d2,* retained so that messages sent before the view change that are queued can be,1,4,0.4444444444444444,56
63fe226fb66056b6c96026aa2d389d8632df64d2,//	 for client to store server's public Key,1,4,0.4444444444444444,57
63fe226fb66056b6c96026aa2d389d8632df64d2,private static String getAlgorithm(String s) {,1,4,0.4444444444444444,58
63fe226fb66056b6c96026aa2d389d8632df64d2,* Initialisation if a supplied key is defined in the properties. This,1,4,0.4444444444444444,59
63fe226fb66056b6c96026aa2d389d8632df64d2,// must not use default keystore type - as does not support secret keys,1,4,0.4444444444444444,60
63fe226fb66056b6c96026aa2d389d8632df64d2,// loaded keystore - get the key,1,4,0.4444444444444444,61
63fe226fb66056b6c96026aa2d389d8632df64d2,* Used to initialise the symmetric key if none is supplied in a keystore.,1,4,0.4444444444444444,62
63fe226fb66056b6c96026aa2d389d8632df64d2,// try and decrypt the message - we need to copy msg as we modify its,1,3,0.3333333333333333,63
63fe226fb66056b6c96026aa2d389d8632df64d2,// if the keys are already there then they will overwrite,1,3,0.3333333333333333,64
63fe226fb66056b6c96026aa2d389d8632df64d2,"private void setKeys(SecretKey key, byte[] version) throws Exception {",1,3,0.3333333333333333,65
63fe226fb66056b6c96026aa2d389d8632df64d2,private void drainDownQueue() {,1,3,0.3333333333333333,66
63fe226fb66056b6c96026aa2d389d8632df64d2,private void drainUpQueue() {,1,3,0.3333333333333333,67
63fe226fb66056b6c96026aa2d389d8632df64d2,* used to drain the up queue - synchronized so we can call it safely,1,3,0.3333333333333333,68
63fe226fb66056b6c96026aa2d389d8632df64d2,// extract peer's public key,1,3,0.3333333333333333,69
63fe226fb66056b6c96026aa2d389d8632df64d2,// if a key request,1,3,0.3333333333333333,70
63fe226fb66056b6c96026aa2d389d8632df64d2,* address to be local address.,1,3,0.3333333333333333,71
63fe226fb66056b6c96026aa2d389d8632df64d2,private Object handleUpMessage(Event evt) throws Exception {,1,3,0.3333333333333333,72
63fe226fb66056b6c96026aa2d389d8632df64d2,private boolean keyServerChanged(Address newKeyServer) {,1,3,0.3333333333333333,73
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""%s: %s has become the new key server, sending key request to it"", local_addr, keyServerAddr);",1,3,0.3333333333333333,74
63fe226fb66056b6c96026aa2d389d8632df64d2,// set new keyserver address,1,3,0.3333333333333333,75
63fe226fb66056b6c96026aa2d389d8632df64d2,// start queueing until we have new key,1,3,0.3333333333333333,76
63fe226fb66056b6c96026aa2d389d8632df64d2,* key request to the new keyserver.,1,3,0.3333333333333333,77
63fe226fb66056b6c96026aa2d389d8632df64d2,// create a cipher with peer's public key,1,3,0.3333333333333333,78
63fe226fb66056b6c96026aa2d389d8632df64d2,} else {,1,3,0.3333333333333333,79
63fe226fb66056b6c96026aa2d389d8632df64d2,if(cipher == null) {,1,3,0.3333333333333333,80
63fe226fb66056b6c96026aa2d389d8632df64d2,// test reconstituted key to see if valid,1,3,0.3333333333333333,81
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""sending version %s encoded key to client"", new String(getSymVersion()));",1,3,0.3333333333333333,82
63fe226fb66056b6c96026aa2d389d8632df64d2,if(lock != null) {,1,3,0.3333333333333333,83
63fe226fb66056b6c96026aa2d389d8632df64d2,private void initializeNewSymmetricKey(boolean merge_view) {,1,3,0.3333333333333333,84
63fe226fb66056b6c96026aa2d389d8632df64d2,public int size() {,1,3,0.3333333333333333,85
63fe226fb66056b6c96026aa2d389d8632df64d2,public String toString() {,1,3,0.3333333333333333,86
63fe226fb66056b6c96026aa2d389d8632df64d2,public void readFrom(DataInput in) throws Exception {,1,3,0.3333333333333333,87
63fe226fb66056b6c96026aa2d389d8632df64d2,public void writeTo(DataOutput out) throws Exception {,1,3,0.3333333333333333,88
63fe226fb66056b6c96026aa2d389d8632df64d2,public boolean encryptEntireMessage() {,1,3,0.3333333333333333,89
63fe226fb66056b6c96026aa2d389d8632df64d2,public static class EncryptHeader extends org.jgroups.Header {,1,3,0.3333333333333333,90
63fe226fb66056b6c96026aa2d389d8632df64d2,if(lock == null) {,1,3,0.3333333333333333,91
63fe226fb66056b6c96026aa2d389d8632df64d2,private void sendKeyRequest() {,1,3,0.3333333333333333,92
63fe226fb66056b6c96026aa2d389d8632df64d2,"public Message apply(Message msg, MessageBatch batch) {",1,3,0.3333333333333333,93
63fe226fb66056b6c96026aa2d389d8632df64d2,* used to reconstitute public key sent in byte form from peer,1,3,0.3333333333333333,94
63fe226fb66056b6c96026aa2d389d8632df64d2,private void encryptAndSend(Message msg) throws Exception {,1,3,0.3333333333333333,95
63fe226fb66056b6c96026aa2d389d8632df64d2,// if a tmp_view then we are trying to become coordinator so,1,3,0.3333333333333333,96
63fe226fb66056b6c96026aa2d389d8632df64d2,// make sure the down queue is drained first to keep ordering,1,3,0.3333333333333333,97
63fe226fb66056b6c96026aa2d389d8632df64d2,if(msg.getLength() == 0 && !encrypt_entire_message),1,3,0.3333333333333333,98
63fe226fb66056b6c96026aa2d389d8632df64d2,public Object down(Event evt) {,1,3,0.3333333333333333,99
63fe226fb66056b6c96026aa2d389d8632df64d2,if ( e instanceof RuntimeException) {,1,3,0.3333333333333333,100
63fe226fb66056b6c96026aa2d389d8632df64d2,if(asymProvider != null && !asymProvider.trim().isEmpty()),1,3,0.3333333333333333,101
63fe226fb66056b6c96026aa2d389d8632df64d2,// otherwise get keyserver from view controller,1,3,0.3333333333333333,102
63fe226fb66056b6c96026aa2d389d8632df64d2,if(keyStoreName == null) {,1,3,0.3333333333333333,103
63fe226fb66056b6c96026aa2d389d8632df64d2,// decrypting cypher for secret key requests,1,3,0.3333333333333333,104
63fe226fb66056b6c96026aa2d389d8632df64d2,//	 queue to hold downcoming messages while key negotiation is happening,1,3,0.3333333333333333,105
63fe226fb66056b6c96026aa2d389d8632df64d2,// queue to hold upcoming messages while key negotiation is happening,1,3,0.3333333333333333,106
63fe226fb66056b6c96026aa2d389d8632df64d2,// version filed for secret key,1,3,0.3333333333333333,107
63fe226fb66056b6c96026aa2d389d8632df64d2,// Cipher pools used for encryption and decryption. Size is cipher_pool_size,1,3,0.3333333333333333,108
63fe226fb66056b6c96026aa2d389d8632df64d2,boolean keyServer=false; //used to see whether we are the key server,1,3,0.3333333333333333,109
63fe226fb66056b6c96026aa2d389d8632df64d2,* as there is nothing to stop the peer rejoining and receiving the new key. A,1,3,0.3333333333333333,110
63fe226fb66056b6c96026aa2d389d8632df64d2,* it chooses to listen in on the group. This is not included as it really,1,3,0.3333333333333333,111
63fe226fb66056b6c96026aa2d389d8632df64d2,* encryption (PFE) which means that if a peer leaves the group the keys are,1,3,0.3333333333333333,112
63fe226fb66056b6c96026aa2d389d8632df64d2,* All encryption and decryption of messages is done using this key. When a peer,1,3,0.3333333333333333,113
63fe226fb66056b6c96026aa2d389d8632df64d2,* This is the simplest option and can be used by simply inserting the,1,3,0.3333333333333333,114
63fe226fb66056b6c96026aa2d389d8632df64d2,* the version of the key being used to encrypt/decrypt the messages.,1,3,0.3333333333333333,115
63fe226fb66056b6c96026aa2d389d8632df64d2,* which identifies the type of encrypt header and an MD5 digest that identifies,1,3,0.3333333333333333,116
63fe226fb66056b6c96026aa2d389d8632df64d2,* Each message is identified as encrypted with a specific encryption header,1,3,0.3333333333333333,117
63fe226fb66056b6c96026aa2d389d8632df64d2,* result in a new session key being generated and then distributed to all,1,3,0.3333333333333333,118
63fe226fb66056b6c96026aa2d389d8632df64d2,* protection against passive monitoring but do not want the key exchange,1,3,0.3333333333333333,119
63fe226fb66056b6c96026aa2d389d8632df64d2,public void up(MessageBatch batch) {,1,3,0.3333333333333333,120
63fe226fb66056b6c96026aa2d389d8632df64d2,public void init() throws Exception {,1,3,0.3333333333333333,121
63fe226fb66056b6c96026aa2d389d8632df64d2,* java file called KeyStoreGenerator is included in the demo package that can,1,3,0.3333333333333333,122
63fe226fb66056b6c96026aa2d389d8632df64d2,private void initConfiguredKey() throws Exception {,1,3,0.3333333333333333,123
63fe226fb66056b6c96026aa2d389d8632df64d2,encoding_ciphers[i]=symProvider != null && !symProvider.trim().isEmpty()?,1,3,0.3333333333333333,124
63fe226fb66056b6c96026aa2d389d8632df64d2,public Object up(Event evt) {,1,3,0.3333333333333333,125
63fe226fb66056b6c96026aa2d389d8632df64d2,if(inputStream == null) {,1,3,0.3333333333333333,126
63fe226fb66056b6c96026aa2d389d8632df64d2,// generate publicKey and Private Key,1,3,0.3333333333333333,127
63fe226fb66056b6c96026aa2d389d8632df64d2,if (v < 16) { sb.append('0'); },1,3,0.3333333333333333,128
63fe226fb66056b6c96026aa2d389d8632df64d2,int v = b[i] & 0xff;,1,3,0.3333333333333333,129
63fe226fb66056b6c96026aa2d389d8632df64d2,/* public static String byteArrayToHexString(byte[] b){,1,3,0.3333333333333333,130
63fe226fb66056b6c96026aa2d389d8632df64d2,decoding_ciphers[i]=symProvider != null && !symProvider.trim().isEmpty()?,1,3,0.3333333333333333,131
63fe226fb66056b6c96026aa2d389d8632df64d2,public void initKeyPair() throws Exception {,1,3,0.3333333333333333,132
63fe226fb66056b6c96026aa2d389d8632df64d2,"private void initSymCiphers(String algorithm, SecretKey secret) throws Exception {",1,3,0.3333333333333333,133
63fe226fb66056b6c96026aa2d389d8632df64d2,"+ "" ensure file is on classpath"");",1,3,0.3333333333333333,134
63fe226fb66056b6c96026aa2d389d8632df64d2,// generate the key using the defined init properties,1,3,0.3333333333333333,135
63fe226fb66056b6c96026aa2d389d8632df64d2,if(symProvider != null && !symProvider.trim().isEmpty()),1,3,0.3333333333333333,136
63fe226fb66056b6c96026aa2d389d8632df64d2,public void initSymKey() throws Exception {,1,3,0.3333333333333333,137
63fe226fb66056b6c96026aa2d389d8632df64d2,// set the fact we are using a supplied key,1,3,0.3333333333333333,138
63fe226fb66056b6c96026aa2d389d8632df64d2,"throw new Exception(""Unable to load keystore "" + keyStoreName",1,3,0.3333333333333333,139
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message tmpMsg=decryptMessage(null, msg.copy()); // need to copy for possible xmits",1,2,0.2222222222222222,140
63fe226fb66056b6c96026aa2d389d8632df64d2,if(tmpMsg != null),1,2,0.2222222222222222,141
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected void handleUpEvent(Message msg, EncryptHeader hdr) {",1,2,0.2222222222222222,142
63fe226fb66056b6c96026aa2d389d8632df64d2,// send back the secret key we have,1,2,0.2222222222222222,143
63fe226fb66056b6c96026aa2d389d8632df64d2,if(tmp == null),1,2,0.2222222222222222,144
63fe226fb66056b6c96026aa2d389d8632df64d2,if(size > 0),1,2,0.2222222222222222,145
63fe226fb66056b6c96026aa2d389d8632df64d2,else {,1,2,0.2222222222222222,146
63fe226fb66056b6c96026aa2d389d8632df64d2,* called att he same time as the up/down messages calling in to the class,1,2,0.2222222222222222,147
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message msg=decryptMessage(null, tmp.copy()); // need to copy for possible xmits",1,2,0.2222222222222222,148
63fe226fb66056b6c96026aa2d389d8632df64d2,if(msg != null),1,2,0.2222222222222222,149
63fe226fb66056b6c96026aa2d389d8632df64d2,* Sets the keys for the app. and drains the queues - the drains could be,1,2,0.2222222222222222,150
63fe226fb66056b6c96026aa2d389d8632df64d2,// if queueing then pass into queue to be dealt with later,1,2,0.2222222222222222,151
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.trace(""queueing up message as no session key established: %s"", msg);",1,2,0.2222222222222222,152
63fe226fb66056b6c96026aa2d389d8632df64d2,"handleNewKeyServer(tmpKeyServer, view instanceof MergeView);",1,2,0.2222222222222222,153
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected Object handleEncryptedMessage(Message msg, Event evt, EncryptHeader hdr) throws Exception {",1,2,0.2222222222222222,154
63fe226fb66056b6c96026aa2d389d8632df64d2,if ( changeKeysOnViewChange || keyServerChanged(newKeyServer) || merge_view) {,1,2,0.2222222222222222,155
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""%s: I have become the new key server"", local_addr);",1,2,0.2222222222222222,156
63fe226fb66056b6c96026aa2d389d8632df64d2,* Handles becoming server - resetting queue settings and setting keyserver,1,2,0.2222222222222222,157
63fe226fb66056b6c96026aa2d389d8632df64d2,} catch (Exception e) {,1,2,0.2222222222222222,158
63fe226fb66056b6c96026aa2d389d8632df64d2,if ( changeKeysOnViewChange || !keyServer || merge_view) {,1,2,0.2222222222222222,159
63fe226fb66056b6c96026aa2d389d8632df64d2,// I have been voted new controller,1,2,0.2222222222222222,160
63fe226fb66056b6c96026aa2d389d8632df64d2,List<Address> members = view.getMembers();,1,2,0.2222222222222222,161
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""new view: "" + view);",1,2,0.2222222222222222,162
63fe226fb66056b6c96026aa2d389d8632df64d2,// generate keys according to the specified algorithms,1,2,0.2222222222222222,163
63fe226fb66056b6c96026aa2d389d8632df64d2,* Generates the public/private key pair from the init params,1,2,0.2222222222222222,164
63fe226fb66056b6c96026aa2d389d8632df64d2,* @param key,1,2,0.2222222222222222,165
63fe226fb66056b6c96026aa2d389d8632df64d2,* is better than the alternative of waiting until the next message to,1,2,0.2222222222222222,166
63fe226fb66056b6c96026aa2d389d8632df64d2,protected void unlock() {,1,2,0.2222222222222222,167
63fe226fb66056b6c96026aa2d389d8632df64d2,* @param version,1,2,0.2222222222222222,168
63fe226fb66056b6c96026aa2d389d8632df64d2,// put the previous key into the map,1,2,0.2222222222222222,169
63fe226fb66056b6c96026aa2d389d8632df64d2,for(int i=0; i < cipher_pool_size; i++) {,1,2,0.2222222222222222,170
63fe226fb66056b6c96026aa2d389d8632df64d2,return retval;,1,2,0.2222222222222222,171
63fe226fb66056b6c96026aa2d389d8632df64d2,int retval=Global.BYTE_SIZE + Global.SHORT_SIZE;,1,2,0.2222222222222222,172
63fe226fb66056b6c96026aa2d389d8632df64d2,return (byte)(type & ~ENCRYPT_ENTIRE_MSG); // clear the ENCRYPT_ENTIRE_MSG flag,1,2,0.2222222222222222,173
63fe226fb66056b6c96026aa2d389d8632df64d2,public byte getType() {,1,2,0.2222222222222222,174
63fe226fb66056b6c96026aa2d389d8632df64d2,if(version == null),1,2,0.2222222222222222,175
63fe226fb66056b6c96026aa2d389d8632df64d2,"public EncryptHeader(byte type, byte[] version) {",1,2,0.2222222222222222,176
63fe226fb66056b6c96026aa2d389d8632df64d2,public EncryptHeader() {},1,2,0.2222222222222222,177
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected void queueUpMessage(Message msg, MessageBatch batch) {",1,2,0.2222222222222222,178
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message tmpMsg=decryptMessage(cipher, msg.copy()); // need to copy for possible xmits",1,2,0.2222222222222222,179
63fe226fb66056b6c96026aa2d389d8632df64d2,if(hdr.getType() == EncryptHeader.ENCRYPT) {,1,2,0.2222222222222222,180
63fe226fb66056b6c96026aa2d389d8632df64d2,private PublicKey generatePubKey(byte[] encodedKey) {,1,2,0.2222222222222222,181
63fe226fb66056b6c96026aa2d389d8632df64d2,private SecretKeySpec decodeKey(byte[] encodedKey) throws Exception {,1,2,0.2222222222222222,182
63fe226fb66056b6c96026aa2d389d8632df64d2,// try and decode secrey key sent from keyserver,1,2,0.2222222222222222,183
63fe226fb66056b6c96026aa2d389d8632df64d2,"// exclude existing headers, they will be seen again when we decrypt and unmarshal the msg at the receiver",1,2,0.2222222222222222,184
63fe226fb66056b6c96026aa2d389d8632df64d2,if(msg.getSrc() == null),1,2,0.2222222222222222,185
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""set local address to %s"", local_addr);",1,2,0.2222222222222222,186
63fe226fb66056b6c96026aa2d389d8632df64d2,return ret;,1,2,0.2222222222222222,187
63fe226fb66056b6c96026aa2d389d8632df64d2,if(ret.getSrc() == null),1,2,0.2222222222222222,188
63fe226fb66056b6c96026aa2d389d8632df64d2,if(ret.getDest() == null),1,2,0.2222222222222222,189
63fe226fb66056b6c96026aa2d389d8632df64d2,return msg;,1,2,0.2222222222222222,190
63fe226fb66056b6c96026aa2d389d8632df64d2,if(cipher == null),1,2,0.2222222222222222,191
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""attempting to use stored cipher as message does not use current encryption version "");",1,2,0.2222222222222222,192
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""setting queue up to false in setKeys"");",1,2,0.2222222222222222,193
63fe226fb66056b6c96026aa2d389d8632df64d2,// drain the up queue,1,2,0.2222222222222222,194
63fe226fb66056b6c96026aa2d389d8632df64d2,// symVersion = byteArrayToHexString(digest.digest());,1,2,0.2222222222222222,195
63fe226fb66056b6c96026aa2d389d8632df64d2,// map to hold previous keys so we can decrypt some earlier messages if we need to,1,2,0.2222222222222222,196
63fe226fb66056b6c96026aa2d389d8632df64d2,// see if we have a provider specified,1,2,0.2222222222222222,197
63fe226fb66056b6c96026aa2d389d8632df64d2,// properties for functioning in supplied key mode,1,2,0.2222222222222222,198
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""sym_init"", description=""Initial key length for matching symmetric algorithm. Default is 128"")",1,2,0.2222222222222222,199
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""asym_init"", description=""Initial public/private key length. Default is 512"")",1,2,0.2222222222222222,200
63fe226fb66056b6c96026aa2d389d8632df64d2,// encryption properties in no supplied key mode,1,2,0.2222222222222222,201
63fe226fb66056b6c96026aa2d389d8632df64d2,public class ENCRYPT extends Protocol {,1,2,0.2222222222222222,202
63fe226fb66056b6c96026aa2d389d8632df64d2,* future release will address this issue.,1,2,0.2222222222222222,203
63fe226fb66056b6c96026aa2d389d8632df64d2,* re-generated preventing the departed peer from decrypting future messages if,1,2,0.2222222222222222,204
63fe226fb66056b6c96026aa2d389d8632df64d2,* An example EncryptNoKeyStore.xml is included in the conf file as a guide.,1,2,0.2222222222222222,205
63fe226fb66056b6c96026aa2d389d8632df64d2,"* receives a view change that shows a different keyserver, it will repeat this",1,2,0.2222222222222222,206
63fe226fb66056b6c96026aa2d389d8632df64d2,* own secret key. <br>,1,2,0.2222222222222222,207
63fe226fb66056b6c96026aa2d389d8632df64d2,* sends it back to the peer who then decrypts it and installs the key as its,1,2,0.2222222222222222,208
63fe226fb66056b6c96026aa2d389d8632df64d2,* be used from the command line (or IDE) to generate a suitable keystore.,1,2,0.2222222222222222,209
63fe226fb66056b6c96026aa2d389d8632df64d2,"* In order to use the ENCRYPT layer in this manner, it is necessary to have the",1,2,0.2222222222222222,210
63fe226fb66056b6c96026aa2d389d8632df64d2,* the conf in a file called EncryptKeyStore.xml - along with a,1,2,0.2222222222222222,211
63fe226fb66056b6c96026aa2d389d8632df64d2,* An example showing the keystore version can be found in,1,2,0.2222222222222222,212
63fe226fb66056b6c96026aa2d389d8632df64d2,* Encryption layer at any point in the JGroups stack - it will encrypt all,1,2,0.2222222222222222,213
63fe226fb66056b6c96026aa2d389d8632df64d2,"* peers. In this form, no keystore exists as the keys are distributed using a",1,2,0.2222222222222222,214
63fe226fb66056b6c96026aa2d389d8632df64d2,* this mode sould be placed above the GMS protocol in the configuration. The,1,2,0.2222222222222222,215
63fe226fb66056b6c96026aa2d389d8632df64d2,* <li> Option 2. Configured with algorithms and key sizes. The ENCRYPT layer in,1,2,0.2222222222222222,216
63fe226fb66056b6c96026aa2d389d8632df64d2,"* any layer in JGroups without the need for a coordinator, or if you want",1,2,0.2222222222222222,217
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.security.spec.X509EncodedKeySpec;,1,2,0.2222222222222222,218
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.security.cert.CertificateException;,1,2,0.2222222222222222,219
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.security.*;,1,2,0.2222222222222222,220
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.io.*;,1,2,0.2222222222222222,221
63fe226fb66056b6c96026aa2d389d8632df64d2,finally {,1,2,0.2222222222222222,222
63fe226fb66056b6c96026aa2d389d8632df64d2,import org.jgroups.util.Util;,1,2,0.2222222222222222,223
63fe226fb66056b6c96026aa2d389d8632df64d2,"""Set this to true when using asymmetric encryption, to handle merging (JGRP-1907)"")",1,2,0.2222222222222222,224
63fe226fb66056b6c96026aa2d389d8632df64d2,* ENCRYPT layer. Encrypt and decrypt communication in JGroups,1,2,0.2222222222222222,225
63fe226fb66056b6c96026aa2d389d8632df64d2,private boolean suppliedKey=false;,1,2,0.2222222222222222,226
63fe226fb66056b6c96026aa2d389d8632df64d2,public String    getSymAlgorithm()      {return symAlgorithm;},1,2,0.2222222222222222,227
63fe226fb66056b6c96026aa2d389d8632df64d2,// we can't find a keystore here -,1,2,0.2222222222222222,228
63fe226fb66056b6c96026aa2d389d8632df64d2,if(tempKey == null),1,2,0.2222222222222222,229
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected String alias=""mykey""; // JDK default",1,2,0.2222222222222222,230
63fe226fb66056b6c96026aa2d389d8632df64d2,if(inputStream == null),1,2,0.2222222222222222,231
63fe226fb66056b6c96026aa2d389d8632df64d2,* supplied key must be in a keystore which can be generated using the,1,2,0.2222222222222222,232
63fe226fb66056b6c96026aa2d389d8632df64d2,if(cipher_pool_size <= 0) {,1,2,0.2222222222222222,233
63fe226fb66056b6c96026aa2d389d8632df64d2,*  taken m original ENCRYPT file,1,2,0.2222222222222222,234
63fe226fb66056b6c96026aa2d389d8632df64d2,private void     setSecretKey(SecretKey secretKey)       {this.secretKey=secretKey;},1,2,0.2222222222222222,235
63fe226fb66056b6c96026aa2d389d8632df64d2,"private void     setSymVersion(byte[] symVersion)        {this.symVersion=Arrays.copyOf(symVersion, symVersion.length);}",1,2,0.2222222222222222,236
63fe226fb66056b6c96026aa2d389d8632df64d2,public Address   getKeyServerAddr()     {return keyServerAddr;},1,2,0.2222222222222222,237
63fe226fb66056b6c96026aa2d389d8632df64d2,public String    getAsymAlgorithm()     {return asymAlgorithm;},1,2,0.2222222222222222,238
63fe226fb66056b6c96026aa2d389d8632df64d2,public int       getSymInit()           {return symInit;},1,2,0.2222222222222222,239
63fe226fb66056b6c96026aa2d389d8632df64d2,if(tmp != cipher_pool_size) {,1,2,0.2222222222222222,240
63fe226fb66056b6c96026aa2d389d8632df64d2,public int       getAsymInit()          {return asymInit;},1,2,0.2222222222222222,241
63fe226fb66056b6c96026aa2d389d8632df64d2,// public/private Key,1,2,0.2222222222222222,242
63fe226fb66056b6c96026aa2d389d8632df64d2,"// same as mod, but (apparently, I'm told) more efficient. Size needs to be a power ot 2",1,2,0.2222222222222222,243
63fe226fb66056b6c96026aa2d389d8632df64d2,// dhared secret key to encrypt/decrypt messages,1,2,0.2222222222222222,244
63fe226fb66056b6c96026aa2d389d8632df64d2,protected final AtomicInteger cipher_index=new AtomicInteger(0); // the cipher and lock to select,1,2,0.2222222222222222,245
63fe226fb66056b6c96026aa2d389d8632df64d2,private boolean queue_up=true;,1,2,0.2222222222222222,246
63fe226fb66056b6c96026aa2d389d8632df64d2,KeyPair Kpair; // to store own's public/private Key,1,2,0.2222222222222222,247
63fe226fb66056b6c96026aa2d389d8632df64d2,private boolean queue_down=false;,1,2,0.2222222222222222,248
63fe226fb66056b6c96026aa2d389d8632df64d2,private final BlockingQueue<Message> upMessageQueue=new LinkedBlockingQueue<>();,1,2,0.2222222222222222,249
63fe226fb66056b6c96026aa2d389d8632df64d2,private final BlockingQueue<Message> downMessageQueue=new LinkedBlockingQueue<>();,1,2,0.2222222222222222,250
63fe226fb66056b6c96026aa2d389d8632df64d2,protected int getNextIndex() {,1,2,0.2222222222222222,251
63fe226fb66056b6c96026aa2d389d8632df64d2,throw new IllegalStateException(e);,1,1,0.1111111111111111,252
63fe226fb66056b6c96026aa2d389d8632df64d2,* @param tmpKeyServer,1,1,0.1111111111111111,253
63fe226fb66056b6c96026aa2d389d8632df64d2,if(log.isDebugEnabled() && !forced),1,1,0.1111111111111111,254
63fe226fb66056b6c96026aa2d389d8632df64d2,* @param newKeyServer,1,1,0.1111111111111111,255
63fe226fb66056b6c96026aa2d389d8632df64d2,"return !Objects.equals(keyServerAddr, newKeyServer);",1,1,0.1111111111111111,256
63fe226fb66056b6c96026aa2d389d8632df64d2,Message msg=(Message)evt.getArg();,1,1,0.1111111111111111,257
63fe226fb66056b6c96026aa2d389d8632df64d2,switch(hdr.getType()) {,1,1,0.1111111111111111,258
63fe226fb66056b6c96026aa2d389d8632df64d2,"return handleEncryptedMessage(msg, evt, hdr);",1,1,0.1111111111111111,259
63fe226fb66056b6c96026aa2d389d8632df64d2,if(suppliedKey) {,1,1,0.1111111111111111,260
63fe226fb66056b6c96026aa2d389d8632df64d2,if(queue_up) {,1,1,0.1111111111111111,261
63fe226fb66056b6c96026aa2d389d8632df64d2,// buffer (http://jira.jboss.com/jira/browse/JGRP-538),1,1,0.1111111111111111,262
63fe226fb66056b6c96026aa2d389d8632df64d2,"return up_prot.up(new Event(Event.MSG, tmpMsg));",1,1,0.1111111111111111,263
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""we received an encrypt header of %s while in configured mode"",hdr.getType());",1,1,0.1111111111111111,264
63fe226fb66056b6c96026aa2d389d8632df64d2,// see what sort of encrypt control message we have received,1,1,0.1111111111111111,265
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""received a key request from peer %s"", msg.getSrc());",1,1,0.1111111111111111,266
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""unable to reconstitute peer's public key"");",1,1,0.1111111111111111,267
63fe226fb66056b6c96026aa2d389d8632df64d2,"sendKeyRequest(); // unable to understand response, let's try again",1,1,0.1111111111111111,268
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""received ignored encrypt header of %s"", hdr.getType());",1,1,0.1111111111111111,269
63fe226fb66056b6c96026aa2d389d8632df64d2,Address tmpKeyServer=view.getMembers().get(0);,1,1,0.1111111111111111,270
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""unable to process received public key"", e);",1,1,0.1111111111111111,271
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""initalizing new ciphers"");",1,1,0.1111111111111111,272
63fe226fb66056b6c96026aa2d389d8632df64d2,* @param secret,1,1,0.1111111111111111,273
63fe226fb66056b6c96026aa2d389d8632df64d2,return;,1,1,0.1111111111111111,274
63fe226fb66056b6c96026aa2d389d8632df64d2,* generated or supplied secret key.,1,1,0.1111111111111111,275
63fe226fb66056b6c96026aa2d389d8632df64d2,// load in keystore using this thread's classloader,1,1,0.1111111111111111,276
63fe226fb66056b6c96026aa2d389d8632df64d2,if(log.isTraceEnabled()) {,1,1,0.1111111111111111,277
63fe226fb66056b6c96026aa2d389d8632df64d2,// we have located a file lets load the keystore,1,1,0.1111111111111111,278
63fe226fb66056b6c96026aa2d389d8632df64d2,catch(IOException e) {,1,1,0.1111111111111111,279
63fe226fb66056b6c96026aa2d389d8632df64d2,catch(NoSuchAlgorithmException e) {,1,1,0.1111111111111111,280
63fe226fb66056b6c96026aa2d389d8632df64d2,catch(CertificateException e) {,1,1,0.1111111111111111,281
63fe226fb66056b6c96026aa2d389d8632df64d2,//set the key here,1,1,0.1111111111111111,282
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""symmetric key generated "");",1,1,0.1111111111111111,283
63fe226fb66056b6c96026aa2d389d8632df64d2,* Initialises the Ciphers for both encryption and decryption using the,1,1,0.1111111111111111,284
63fe226fb66056b6c96026aa2d389d8632df64d2,* @param algorithm,1,1,0.1111111111111111,285
63fe226fb66056b6c96026aa2d389d8632df64d2,initializeNewSymmetricKey(view instanceof MergeView);,1,1,0.1111111111111111,286
63fe226fb66056b6c96026aa2d389d8632df64d2,//set the version,1,1,0.1111111111111111,287
63fe226fb66056b6c96026aa2d389d8632df64d2,return sb.toString().toUpperCase();,1,1,0.1111111111111111,288
63fe226fb66056b6c96026aa2d389d8632df64d2,switch(evt.getType()) {,1,1,0.1111111111111111,289
63fe226fb66056b6c96026aa2d389d8632df64d2,View view=(View)evt.getArg();,1,1,0.1111111111111111,290
63fe226fb66056b6c96026aa2d389d8632df64d2,// we try and decrypt all messages,1,1,0.1111111111111111,291
63fe226fb66056b6c96026aa2d389d8632df64d2,return handleUpMessage(evt);,1,1,0.1111111111111111,292
63fe226fb66056b6c96026aa2d389d8632df64d2,catch(Exception e) {,1,1,0.1111111111111111,293
63fe226fb66056b6c96026aa2d389d8632df64d2,return null;,1,1,0.1111111111111111,294
63fe226fb66056b6c96026aa2d389d8632df64d2,return up_prot.up(evt);,1,1,0.1111111111111111,295
63fe226fb66056b6c96026aa2d389d8632df64d2,* despite access from potentially two threads at once,1,1,0.1111111111111111,296
63fe226fb66056b6c96026aa2d389d8632df64d2,if(encrypt_entire_message) {,1,1,0.1111111111111111,297
63fe226fb66056b6c96026aa2d389d8632df64d2,int size=upMessageQueue.size();,1,1,0.1111111111111111,298
63fe226fb66056b6c96026aa2d389d8632df64d2,return pubKey;,1,1,0.1111111111111111,299
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message tmp=msg.copy(false, false).setBuffer(encrypted_msg).putHeader(this.id,hdr);",1,1,0.1111111111111111,300
63fe226fb66056b6c96026aa2d389d8632df64d2,// copy neeeded because same message (object) may be retransmitted -> no double encryption,1,1,0.1111111111111111,301
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message msgEncrypted=msg.copy(false).putHeader(this.id, hdr)",1,1,0.1111111111111111,302
63fe226fb66056b6c96026aa2d389d8632df64d2,int index=getNextIndex();,1,1,0.1111111111111111,303
63fe226fb66056b6c96026aa2d389d8632df64d2,"return cipher.doFinal(buf, offset, length);",1,1,0.1111111111111111,304
63fe226fb66056b6c96026aa2d389d8632df64d2,synchronized(this) {,1,1,0.1111111111111111,305
63fe226fb66056b6c96026aa2d389d8632df64d2,return keySpec;,1,1,0.1111111111111111,306
63fe226fb66056b6c96026aa2d389d8632df64d2,* @param encodedKey,1,1,0.1111111111111111,307
63fe226fb66056b6c96026aa2d389d8632df64d2,* @return PublicKey,1,1,0.1111111111111111,308
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected class Decrypter implements BiFunction<Message,MessageBatch,Message> {",1,1,0.1111111111111111,309
63fe226fb66056b6c96026aa2d389d8632df64d2,// make us keyserver,1,1,0.1111111111111111,310
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.error(""failed decrypting message from %s (offset=%d, length=%d, buf.length=%d): %s, headers are %s"",",1,1,0.1111111111111111,311
63fe226fb66056b6c96026aa2d389d8632df64d2,catch(InterruptedException e) {,1,1,0.1111111111111111,312
63fe226fb66056b6c96026aa2d389d8632df64d2,private   byte   type;,1,1,0.1111111111111111,313
63fe226fb66056b6c96026aa2d389d8632df64d2,"throw new IllegalArgumentException(""version must be defined"");",1,1,0.1111111111111111,314
63fe226fb66056b6c96026aa2d389d8632df64d2,* @return Returns the version.,1,1,0.1111111111111111,315
63fe226fb66056b6c96026aa2d389d8632df64d2,protected byte[] getVersion() {,1,1,0.1111111111111111,316
63fe226fb66056b6c96026aa2d389d8632df64d2,return version;,1,1,0.1111111111111111,317
63fe226fb66056b6c96026aa2d389d8632df64d2,"return Util.isFlagSet(type, ENCRYPT_ENTIRE_MSG);",1,1,0.1111111111111111,318
63fe226fb66056b6c96026aa2d389d8632df64d2,* @throws UnrecoverableKeyException,1,1,0.1111111111111111,319
63fe226fb66056b6c96026aa2d389d8632df64d2,return down_prot.down(evt);,1,1,0.1111111111111111,320
63fe226fb66056b6c96026aa2d389d8632df64d2,if(!suppliedKey) {,1,1,0.1111111111111111,321
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.trace(""draining %d messages from the up queue"", size);",1,1,0.1111111111111111,322
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""unable to find a matching cipher in previous key map"");",1,1,0.1111111111111111,323
63fe226fb66056b6c96026aa2d389d8632df64d2,while(true) {,1,1,0.1111111111111111,324
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message tmp=upMessageQueue.poll(0L, TimeUnit.MILLISECONDS);",1,1,0.1111111111111111,325
63fe226fb66056b6c96026aa2d389d8632df64d2,catch(Throwable t) {,1,1,0.1111111111111111,326
63fe226fb66056b6c96026aa2d389d8632df64d2,int size=downMessageQueue.size();,1,1,0.1111111111111111,327
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message tmp=downMessageQueue.poll(0L, TimeUnit.MILLISECONDS);",1,1,0.1111111111111111,328
63fe226fb66056b6c96026aa2d389d8632df64d2,* so we may have an extra call to the drain methods but this slight expense,1,1,0.1111111111111111,329
63fe226fb66056b6c96026aa2d389d8632df64d2,* trigger the drains which may never happen.,1,1,0.1111111111111111,330
63fe226fb66056b6c96026aa2d389d8632df64d2,"initSymCiphers(key.getAlgorithm(), key);",1,1,0.1111111111111111,331
63fe226fb66056b6c96026aa2d389d8632df64d2,"if(!Arrays.equals(hdr.getVersion(),getSymVersion())) {",1,1,0.1111111111111111,332
63fe226fb66056b6c96026aa2d389d8632df64d2,synchronized(cipher) {,1,1,0.1111111111111111,333
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.trace(""queueing down message as no session key established: %s"", msg);",1,1,0.1111111111111111,334
63fe226fb66056b6c96026aa2d389d8632df64d2,"return _decrypt(cipher, msg, hdr.encryptEntireMessage());",1,1,0.1111111111111111,335
63fe226fb66056b6c96026aa2d389d8632df64d2,if(!decrypt_entire_msg) {,1,1,0.1111111111111111,336
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message ret=Util.streamableFromBuffer(Message.class,decrypted_msg,0,decrypted_msg.length);",1,1,0.1111111111111111,337
63fe226fb66056b6c96026aa2d389d8632df64d2,Cipher tmp;,1,1,0.1111111111111111,338
63fe226fb66056b6c96026aa2d389d8632df64d2,//encrypt current secret key,1,1,0.1111111111111111,339
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message newMsg=new Message(source, local_addr, encryptedKey)",1,1,0.1111111111111111,340
63fe226fb66056b6c96026aa2d389d8632df64d2,".putHeader(this.id, new EncryptHeader(EncryptHeader.SECRETKEY, getSymVersion()));",1,1,0.1111111111111111,341
63fe226fb66056b6c96026aa2d389d8632df64d2,"Message newMsg=new Message(keyServerAddr, local_addr, Kpair.getPublic().getEncoded())",1,1,0.1111111111111111,342
63fe226fb66056b6c96026aa2d389d8632df64d2,if(queue_down) {,1,1,0.1111111111111111,343
63fe226fb66056b6c96026aa2d389d8632df64d2,try {,1,1,0.1111111111111111,344
63fe226fb66056b6c96026aa2d389d8632df64d2,return current_index & (cipher_pool_size-1);,1,1,0.1111111111111111,345
63fe226fb66056b6c96026aa2d389d8632df64d2,* @throws CertificateException,1,1,0.1111111111111111,346
63fe226fb66056b6c96026aa2d389d8632df64d2,* Events of a type MSG that have a non-null message buffer. The format of the,1,1,0.1111111111111111,347
63fe226fb66056b6c96026aa2d389d8632df64d2,* overhead and complexity. In this mode all nodes must be distributed with the,1,1,0.1111111111111111,348
63fe226fb66056b6c96026aa2d389d8632df64d2,* same keystore file.,1,1,0.1111111111111111,349
63fe226fb66056b6c96026aa2d389d8632df64d2,* coordinator then chooses the secretkey which it distributes amongst all the,1,1,0.1111111111111111,350
63fe226fb66056b6c96026aa2d389d8632df64d2,* peers. This overhead can be substantial in a an application with a reasonable,1,1,0.1111111111111111,351
63fe226fb66056b6c96026aa2d389d8632df64d2,* peer churn.,1,1,0.1111111111111111,352
63fe226fb66056b6c96026aa2d389d8632df64d2,* </ul>,1,1,0.1111111111111111,353
63fe226fb66056b6c96026aa2d389d8632df64d2,* <p>,1,1,0.1111111111111111,354
63fe226fb66056b6c96026aa2d389d8632df64d2,* <h2>Option 1</h2>,1,1,0.1111111111111111,355
63fe226fb66056b6c96026aa2d389d8632df64d2,* <br>,1,1,0.1111111111111111,356
63fe226fb66056b6c96026aa2d389d8632df64d2,* entry in this form is:<br>,1,1,0.1111111111111111,357
63fe226fb66056b6c96026aa2d389d8632df64d2,Address local_addr;,1,1,0.1111111111111111,358
63fe226fb66056b6c96026aa2d389d8632df64d2,"* &lt;ENCRYPT key_store_name=""defaultStore.keystore"" store_password=""changeit""",1,1,0.1111111111111111,359
63fe226fb66056b6c96026aa2d389d8632df64d2,"* alias=""myKey""/&gt;<br>",1,1,0.1111111111111111,360
63fe226fb66056b6c96026aa2d389d8632df64d2,* defaultStore.keystore file.<br>,1,1,0.1111111111111111,361
63fe226fb66056b6c96026aa2d389d8632df64d2,* secretKey already generated in a keystore file. The directory containing the,1,1,0.1111111111111111,362
63fe226fb66056b6c96026aa2d389d8632df64d2,* keystore file must be on the application's classpath. You cannot create a,1,1,0.1111111111111111,363
63fe226fb66056b6c96026aa2d389d8632df64d2,* SecretKey keystore file using the keytool application shipped with the JDK. A,1,1,0.1111111111111111,364
63fe226fb66056b6c96026aa2d389d8632df64d2,* <h2>Option 2</h2>,1,1,0.1111111111111111,365
63fe226fb66056b6c96026aa2d389d8632df64d2,* requires a suitable authentication scheme as well to make this feature useful,1,1,0.1111111111111111,366
63fe226fb66056b6c96026aa2d389d8632df64d2,* @author Steve Woodcock,1,1,0.1111111111111111,367
63fe226fb66056b6c96026aa2d389d8632df64d2,* <li> Option 1. Configured with a secretKey in a keystore so it can be used at,1,1,0.1111111111111111,368
63fe226fb66056b6c96026aa2d389d8632df64d2,* This class can be used in two ways:,1,1,0.1111111111111111,369
63fe226fb66056b6c96026aa2d389d8632df64d2,*,1,1,0.1111111111111111,370
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.util.function.BiFunction;,1,1,0.1111111111111111,371
63fe226fb66056b6c96026aa2d389d8632df64d2,* @throws NoSuchAlgorithmException,1,1,0.1111111111111111,372
63fe226fb66056b6c96026aa2d389d8632df64d2,import org.jgroups.*;,1,1,0.1111111111111111,373
63fe226fb66056b6c96026aa2d389d8632df64d2,import org.jgroups.annotations.MBean;,1,1,0.1111111111111111,374
63fe226fb66056b6c96026aa2d389d8632df64d2,import org.jgroups.annotations.Property;,1,1,0.1111111111111111,375
63fe226fb66056b6c96026aa2d389d8632df64d2,import org.jgroups.stack.Protocol;,1,1,0.1111111111111111,376
63fe226fb66056b6c96026aa2d389d8632df64d2,import org.jgroups.util.AsciiString;,1,1,0.1111111111111111,377
63fe226fb66056b6c96026aa2d389d8632df64d2,import org.jgroups.util.Buffer;,1,1,0.1111111111111111,378
63fe226fb66056b6c96026aa2d389d8632df64d2,import org.jgroups.util.MessageBatch;,1,1,0.1111111111111111,379
63fe226fb66056b6c96026aa2d389d8632df64d2,import javax.crypto.Cipher;,1,1,0.1111111111111111,380
63fe226fb66056b6c96026aa2d389d8632df64d2,import javax.crypto.KeyGenerator;,1,1,0.1111111111111111,381
63fe226fb66056b6c96026aa2d389d8632df64d2,import javax.crypto.SecretKey;,1,1,0.1111111111111111,382
63fe226fb66056b6c96026aa2d389d8632df64d2,import javax.crypto.spec.SecretKeySpec;,1,1,0.1111111111111111,383
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.util.*;,1,1,0.1111111111111111,384
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.util.concurrent.BlockingQueue;,1,1,0.1111111111111111,385
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.util.concurrent.LinkedBlockingQueue;,1,1,0.1111111111111111,386
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.util.concurrent.TimeUnit;,1,1,0.1111111111111111,387
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.util.concurrent.atomic.AtomicInteger;,1,1,0.1111111111111111,388
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.util.concurrent.locks.Lock;,1,1,0.1111111111111111,389
63fe226fb66056b6c96026aa2d389d8632df64d2,import java.util.concurrent.locks.ReentrantLock;,1,1,0.1111111111111111,390
63fe226fb66056b6c96026aa2d389d8632df64d2,* @author Bela Ban,1,1,0.1111111111111111,391
63fe226fb66056b6c96026aa2d389d8632df64d2,* <ul>,1,1,0.1111111111111111,392
63fe226fb66056b6c96026aa2d389d8632df64d2,Address keyServerAddr;,1,1,0.1111111111111111,393
63fe226fb66056b6c96026aa2d389d8632df64d2,"return s.substring(0, index);",1,1,0.1111111111111111,394
63fe226fb66056b6c96026aa2d389d8632df64d2,public byte[]    getSymVersion()        {return symVersion;},1,1,0.1111111111111111,395
63fe226fb66056b6c96026aa2d389d8632df64d2,public SecretKey getSecretKey()         {return secretKey;},1,1,0.1111111111111111,396
63fe226fb66056b6c96026aa2d389d8632df64d2,public Cipher    getSymDecodingCipher() {return decoding_ciphers[getNextIndex()];},1,1,0.1111111111111111,397
63fe226fb66056b6c96026aa2d389d8632df64d2,public Cipher    getSymEncodingCipher() {return encoding_ciphers[getNextIndex()];},1,1,0.1111111111111111,398
63fe226fb66056b6c96026aa2d389d8632df64d2,protected void   setLocalAddress(Address local_addr)     {this.local_addr=local_addr;},1,1,0.1111111111111111,399
63fe226fb66056b6c96026aa2d389d8632df64d2,protected void   setKeyServerAddr(Address keyServerAddr) {this.keyServerAddr=keyServerAddr;},1,1,0.1111111111111111,400
63fe226fb66056b6c96026aa2d389d8632df64d2,"* GetAlgorithm: Get the algorithm name from ""algorithm/mode/padding""",1,1,0.1111111111111111,401
63fe226fb66056b6c96026aa2d389d8632df64d2,int index=s.indexOf('/');,1,1,0.1111111111111111,402
63fe226fb66056b6c96026aa2d389d8632df64d2,return s;,1,1,0.1111111111111111,403
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""key_password used is same as store_password"");",1,1,0.1111111111111111,404
63fe226fb66056b6c96026aa2d389d8632df64d2,public KeyPair   getKpair()             {return Kpair;},1,1,0.1111111111111111,405
63fe226fb66056b6c96026aa2d389d8632df64d2,else,1,1,0.1111111111111111,406
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""cipher_pool_size of %d is invalid; setting it to 1"", cipher_pool_size);",1,1,0.1111111111111111,407
63fe226fb66056b6c96026aa2d389d8632df64d2,int tmp=Util.getNextHigherPowerOfTwo(cipher_pool_size);,1,1,0.1111111111111111,408
63fe226fb66056b6c96026aa2d389d8632df64d2,* keystoreGenerator file in demos. The keystore must be on the classpath to,1,1,0.1111111111111111,409
63fe226fb66056b6c96026aa2d389d8632df64d2,* find it.,1,1,0.1111111111111111,410
63fe226fb66056b6c96026aa2d389d8632df64d2,* @throws KeyStoreException,1,1,0.1111111111111111,411
63fe226fb66056b6c96026aa2d389d8632df64d2,* @throws Exception,1,1,0.1111111111111111,412
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""asym_provider"", description=""Cryptographic Service Provider. Default is Bouncy Castle Provider"")",1,1,0.1111111111111111,413
63fe226fb66056b6c96026aa2d389d8632df64d2,* @throws IOException,1,1,0.1111111111111111,414
63fe226fb66056b6c96026aa2d389d8632df64d2,public Cipher    getAsymCipher()        {return asymCipher;},1,1,0.1111111111111111,415
63fe226fb66056b6c96026aa2d389d8632df64d2,if(index == -1),1,1,0.1111111111111111,416
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""sym_provider"", description=""Cryptographic Service Provider. Default is Bouncy Castle Provider"")",1,1,0.1111111111111111,417
63fe226fb66056b6c96026aa2d389d8632df64d2,String keyStoreName;,1,1,0.1111111111111111,418
63fe226fb66056b6c96026aa2d389d8632df64d2,String asymProvider=null;,1,1,0.1111111111111111,419
63fe226fb66056b6c96026aa2d389d8632df64d2,public SecretKey getDesKey()            {return secretKey;},1,1,0.1111111111111111,420
63fe226fb66056b6c96026aa2d389d8632df64d2,String symProvider=null;,1,1,0.1111111111111111,421
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""asym_algorithm"", description=""Cipher engine transformation for asymmetric algorithm. Default is RSA"")",1,1,0.1111111111111111,422
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected String asymAlgorithm=""RSA"";",1,1,0.1111111111111111,423
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""sym_algorithm"", description=""Cipher engine transformation for symmetric algorithm. Default is AES"")",1,1,0.1111111111111111,424
63fe226fb66056b6c96026aa2d389d8632df64d2,int asymInit=512;,1,1,0.1111111111111111,425
63fe226fb66056b6c96026aa2d389d8632df64d2,int symInit=128;,1,1,0.1111111111111111,426
63fe226fb66056b6c96026aa2d389d8632df64d2,boolean changeKeysOnViewChange=false;,1,1,0.1111111111111111,427
63fe226fb66056b6c96026aa2d389d8632df64d2,String symAlgorithm=DEFAULT_SYM_ALGO;,1,1,0.1111111111111111,428
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected String storePassword=""changeit""; //JDK default",1,1,0.1111111111111111,429
63fe226fb66056b6c96026aa2d389d8632df64d2,"final Map<AsciiString,Cipher> keyMap=new WeakHashMap<>();",1,1,0.1111111111111111,430
63fe226fb66056b6c96026aa2d389d8632df64d2,},1,1,0.1111111111111111,431
63fe226fb66056b6c96026aa2d389d8632df64d2,protected boolean encrypt_entire_message=false;,1,1,0.1111111111111111,432
63fe226fb66056b6c96026aa2d389d8632df64d2,private Cipher asymCipher;,1,1,0.1111111111111111,433
63fe226fb66056b6c96026aa2d389d8632df64d2,int current_index=cipher_index.getAndIncrement();,1,1,0.1111111111111111,434
63fe226fb66056b6c96026aa2d389d8632df64d2,// Locks to synchronize access to the cipher pools,1,1,0.1111111111111111,435
63fe226fb66056b6c96026aa2d389d8632df64d2,// PublicKey serverPubKey;,1,1,0.1111111111111111,436
63fe226fb66056b6c96026aa2d389d8632df64d2,protected int cipher_pool_size=8;,1,1,0.1111111111111111,437
63fe226fb66056b6c96026aa2d389d8632df64d2,"decrypted_msg=cipher.doFinal(msg.getRawBuffer(), msg.getOffset(), msg.getLength());",1,0,0.0,438
63fe226fb66056b6c96026aa2d389d8632df64d2,"keyMap.put(new AsciiString(getSymVersion()), getSymDecodingCipher());",1,0,0.0,439
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.error(Util.getMessage(""FailedSendingMessageDownWhenDrainingQueue""), t);",1,0,0.0,440
63fe226fb66056b6c96026aa2d389d8632df64d2,setSecretKey(key);,1,0,0.0,441
63fe226fb66056b6c96026aa2d389d8632df64d2,setSymVersion(version);,1,0,0.0,442
63fe226fb66056b6c96026aa2d389d8632df64d2,drainDownQueue();,1,0,0.0,443
63fe226fb66056b6c96026aa2d389d8632df64d2,EncryptHeader hdr=(EncryptHeader)msg.getHeader(this.id);,1,0,0.0,444
63fe226fb66056b6c96026aa2d389d8632df64d2,cipher=keyMap.get(new AsciiString(hdr.getVersion()));,1,0,0.0,445
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.trace(""decrypting using previous cipher version"");",1,0,0.0,446
63fe226fb66056b6c96026aa2d389d8632df64d2,byte[] decrypted_msg;,1,0,0.0,447
63fe226fb66056b6c96026aa2d389d8632df64d2,"decrypted_msg=code(msg.getRawBuffer(), msg.getOffset(), msg.getLength(), true);",1,0,0.0,448
63fe226fb66056b6c96026aa2d389d8632df64d2,encryptAndSend(msg);,1,0,0.0,449
63fe226fb66056b6c96026aa2d389d8632df64d2,msg.setBuffer(decrypted_msg);,1,0,0.0,450
63fe226fb66056b6c96026aa2d389d8632df64d2,ret.setDest(msg.getDest());,1,0,0.0,451
63fe226fb66056b6c96026aa2d389d8632df64d2,ret.setSrc(msg.getSrc());,1,0,0.0,452
63fe226fb66056b6c96026aa2d389d8632df64d2,"tmp=Cipher.getInstance(asymAlgorithm, asymProvider);",1,0,0.0,453
63fe226fb66056b6c96026aa2d389d8632df64d2,tmp=Cipher.getInstance(asymAlgorithm);,1,0,0.0,454
63fe226fb66056b6c96026aa2d389d8632df64d2,"tmp.init(Cipher.ENCRYPT_MODE,pubKey);",1,0,0.0,455
63fe226fb66056b6c96026aa2d389d8632df64d2,byte[] encryptedKey=tmp.doFinal(secret.getEncoded());,1,0,0.0,456
63fe226fb66056b6c96026aa2d389d8632df64d2,"down_prot.down(new Event(Event.MSG,newMsg));",1,0,0.0,457
63fe226fb66056b6c96026aa2d389d8632df64d2,".putHeader(this.id,new EncryptHeader(EncryptHeader.KEY_REQUEST,getSymVersion()));",1,0,0.0,458
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.trace(""draining %d messages from the down queue"", size);",1,0,0.0,459
63fe226fb66056b6c96026aa2d389d8632df64d2,encryptAndSend(tmp);,1,0,0.0,460
63fe226fb66056b6c96026aa2d389d8632df64d2,keyServer=false;,1,0,0.0,461
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.error(Util.getMessage(""FailedDecryptingAndSendingMessageUpWhenDrainingQueue""), t);",1,0,0.0,462
63fe226fb66056b6c96026aa2d389d8632df64d2,"up_prot.up(new Event(Event.MSG, msg));",1,0,0.0,463
63fe226fb66056b6c96026aa2d389d8632df64d2,case Event.SET_LOCAL_ADDRESS:,1,0,0.0,464
63fe226fb66056b6c96026aa2d389d8632df64d2,keyServerAddr=newKeyServer;,1,0,0.0,465
63fe226fb66056b6c96026aa2d389d8632df64d2,sendKeyRequest();,1,0,0.0,466
63fe226fb66056b6c96026aa2d389d8632df64d2,EncryptHeader hdr;,1,0,0.0,467
63fe226fb66056b6c96026aa2d389d8632df64d2,if(log.isTraceEnabled()),1,0,0.0,468
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.trace(""header received %s"", hdr);",1,0,0.0,469
63fe226fb66056b6c96026aa2d389d8632df64d2,case EncryptHeader.ENCRYPT:,1,0,0.0,470
63fe226fb66056b6c96026aa2d389d8632df64d2,default:,1,0,0.0,471
63fe226fb66056b6c96026aa2d389d8632df64d2,"handleUpEvent(msg,hdr);",1,0,0.0,472
63fe226fb66056b6c96026aa2d389d8632df64d2,"@SuppressWarnings(""UnusedParameters"")",1,0,0.0,473
63fe226fb66056b6c96026aa2d389d8632df64d2,upMessageQueue.put(msg);,1,0,0.0,474
63fe226fb66056b6c96026aa2d389d8632df64d2,drainUpQueue();,1,0,0.0,475
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""unrecognised cipher; discarding message"");",1,0,0.0,476
63fe226fb66056b6c96026aa2d389d8632df64d2,case EncryptHeader.KEY_REQUEST:,1,0,0.0,477
63fe226fb66056b6c96026aa2d389d8632df64d2,PublicKey tmpKey=generatePubKey(msg.getBuffer());,1,0,0.0,478
63fe226fb66056b6c96026aa2d389d8632df64d2,"sendSecretKey(getSecretKey(), tmpKey, msg.getSrc());",1,0,0.0,479
63fe226fb66056b6c96026aa2d389d8632df64d2,case EncryptHeader.SECRETKEY:,1,0,0.0,480
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""received a secretkey response from keyserver %s"", msg.getSrc());",1,0,0.0,481
63fe226fb66056b6c96026aa2d389d8632df64d2,SecretKey tmp=decodeKey(msg.getBuffer());,1,0,0.0,482
63fe226fb66056b6c96026aa2d389d8632df64d2,"setKeys(tmp, hdr.getVersion());",1,0,0.0,483
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""decoded secretkey response"");",1,0,0.0,484
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""unable to send message down"", e);",1,0,0.0,485
63fe226fb66056b6c96026aa2d389d8632df64d2,type=in.readByte();,1,0,0.0,486
63fe226fb66056b6c96026aa2d389d8632df64d2,local_addr=(Address)evt.getArg();,1,0,0.0,487
63fe226fb66056b6c96026aa2d389d8632df64d2,pubKey=KeyFac.generatePublic(x509KeySpec);,1,0,0.0,488
63fe226fb66056b6c96026aa2d389d8632df64d2,"/** Decrypts all messages in a batch, replacing encrypted messages in-place with their decrypted versions */",1,0,0.0,489
63fe226fb66056b6c96026aa2d389d8632df64d2,protected Lock   lock;,1,0,0.0,490
63fe226fb66056b6c96026aa2d389d8632df64d2,protected Cipher cipher;,1,0,0.0,491
63fe226fb66056b6c96026aa2d389d8632df64d2,"queueUpMessage(msg, batch);",1,0,0.0,492
63fe226fb66056b6c96026aa2d389d8632df64d2,lock=decoding_locks[index];,1,0,0.0,493
63fe226fb66056b6c96026aa2d389d8632df64d2,cipher=decoding_ciphers[index];,1,0,0.0,494
63fe226fb66056b6c96026aa2d389d8632df64d2,"batch.replace(msg, tmpMsg);",1,0,0.0,495
63fe226fb66056b6c96026aa2d389d8632df64d2,"msg.getSrc(), msg.getOffset(), msg.getLength(), msg.getRawBuffer().length, e, msg.printHeaders());",1,0,0.0,496
63fe226fb66056b6c96026aa2d389d8632df64d2,"handleUpEvent(msg, hdr);",1,0,0.0,497
63fe226fb66056b6c96026aa2d389d8632df64d2,lock=null;,1,0,0.0,498
63fe226fb66056b6c96026aa2d389d8632df64d2,batch.remove(msg);,1,0,0.0,499
63fe226fb66056b6c96026aa2d389d8632df64d2,protected byte[] version;,1,0,0.0,500
63fe226fb66056b6c96026aa2d389d8632df64d2,this.type=type;,1,0,0.0,501
63fe226fb66056b6c96026aa2d389d8632df64d2,this.version=version;,1,0,0.0,502
63fe226fb66056b6c96026aa2d389d8632df64d2,out.writeByte(type);,1,0,0.0,503
63fe226fb66056b6c96026aa2d389d8632df64d2,out.writeShort(version.length);,1,0,0.0,504
63fe226fb66056b6c96026aa2d389d8632df64d2,out.write(version);,1,0,0.0,505
63fe226fb66056b6c96026aa2d389d8632df64d2,queue_up=true;,1,0,0.0,506
63fe226fb66056b6c96026aa2d389d8632df64d2,short len=in.readShort();,1,0,0.0,507
63fe226fb66056b6c96026aa2d389d8632df64d2,version=new byte[len];,1,0,0.0,508
63fe226fb66056b6c96026aa2d389d8632df64d2,in.readFully(version);,1,0,0.0,509
63fe226fb66056b6c96026aa2d389d8632df64d2,e.printStackTrace();,1,0,0.0,510
63fe226fb66056b6c96026aa2d389d8632df64d2,X509EncodedKeySpec x509KeySpec=new X509EncodedKeySpec(encodedKey);,1,0,0.0,511
63fe226fb66056b6c96026aa2d389d8632df64d2,"EncryptHeader hdr=new EncryptHeader(EncryptHeader.ENCRYPT, getSymVersion());",1,0,0.0,512
63fe226fb66056b6c96026aa2d389d8632df64d2,KeyFactory KeyFac=KeyFactory.getInstance(getAlgorithm(asymAlgorithm));,1,0,0.0,513
63fe226fb66056b6c96026aa2d389d8632df64d2,if(this.encrypt_entire_message),1,0,0.0,514
63fe226fb66056b6c96026aa2d389d8632df64d2,hdr.type|=EncryptHeader.ENCRYPT_ENTIRE_MSG;,1,0,0.0,515
63fe226fb66056b6c96026aa2d389d8632df64d2,msg.setSrc(local_addr);,1,0,0.0,516
63fe226fb66056b6c96026aa2d389d8632df64d2,Buffer serialized_msg=Util.streamableToBuffer(msg);,1,0,0.0,517
63fe226fb66056b6c96026aa2d389d8632df64d2,"byte[] encrypted_msg=code(serialized_msg.getBuf(),serialized_msg.getOffset(),serialized_msg.getLength(),false);",1,0,0.0,518
63fe226fb66056b6c96026aa2d389d8632df64d2,"down_prot.down(new Event(Event.MSG, tmp));",1,0,0.0,519
63fe226fb66056b6c96026aa2d389d8632df64d2,".setBuffer(code(msg.getRawBuffer(),msg.getOffset(),msg.getLength(),false));",1,0,0.0,520
63fe226fb66056b6c96026aa2d389d8632df64d2,"down_prot.down(new Event(Event.MSG,msgEncrypted));",1,0,0.0,521
63fe226fb66056b6c96026aa2d389d8632df64d2,Lock lock=decode? decoding_locks[index] : encoding_locks[index];,1,0,0.0,522
63fe226fb66056b6c96026aa2d389d8632df64d2,Cipher cipher=decode? decoding_ciphers[index] : encoding_ciphers[index];,1,0,0.0,523
63fe226fb66056b6c96026aa2d389d8632df64d2,lock.lock();,1,0,0.0,524
63fe226fb66056b6c96026aa2d389d8632df64d2,lock.unlock();,1,0,0.0,525
63fe226fb66056b6c96026aa2d389d8632df64d2,byte[] keyBytes;,1,0,0.0,526
63fe226fb66056b6c96026aa2d389d8632df64d2,keyBytes=asymCipher.doFinal(encodedKey);,1,0,0.0,527
63fe226fb66056b6c96026aa2d389d8632df64d2,"SecretKeySpec keySpec=new SecretKeySpec(keyBytes, getAlgorithm(symAlgorithm));",1,0,0.0,528
63fe226fb66056b6c96026aa2d389d8632df64d2,Cipher temp;,1,0,0.0,529
63fe226fb66056b6c96026aa2d389d8632df64d2,"temp=Cipher.getInstance(symAlgorithm, symProvider);",1,0,0.0,530
63fe226fb66056b6c96026aa2d389d8632df64d2,temp=Cipher.getInstance(symAlgorithm);,1,0,0.0,531
63fe226fb66056b6c96026aa2d389d8632df64d2,"temp.init(Cipher.SECRET_KEY, keySpec);",1,0,0.0,532
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.error(Util.getMessage(""FailedDecodingKey""), e);",1,0,0.0,533
63fe226fb66056b6c96026aa2d389d8632df64d2,PublicKey pubKey=null;,1,0,0.0,534
63fe226fb66056b6c96026aa2d389d8632df64d2,queue_down=true;,1,0,0.0,535
63fe226fb66056b6c96026aa2d389d8632df64d2,"Cipher.getInstance(algorithm, symProvider) : Cipher.getInstance(algorithm);",1,0,0.0,536
63fe226fb66056b6c96026aa2d389d8632df64d2,queue_up=false;,1,0,0.0,537
63fe226fb66056b6c96026aa2d389d8632df64d2,cipher_pool_size=1;,1,0,0.0,538
63fe226fb66056b6c96026aa2d389d8632df64d2,cipher_pool_size=tmp;,1,0,0.0,539
63fe226fb66056b6c96026aa2d389d8632df64d2,encoding_ciphers=new Cipher[cipher_pool_size];,1,0,0.0,540
63fe226fb66056b6c96026aa2d389d8632df64d2,encoding_locks=new Lock[cipher_pool_size];,1,0,0.0,541
63fe226fb66056b6c96026aa2d389d8632df64d2,decoding_ciphers=new Cipher[cipher_pool_size];,1,0,0.0,542
63fe226fb66056b6c96026aa2d389d8632df64d2,decoding_locks=new Lock[cipher_pool_size];,1,0,0.0,543
63fe226fb66056b6c96026aa2d389d8632df64d2,"initSymCiphers(symAlgorithm, getSecretKey());",1,0,0.0,544
63fe226fb66056b6c96026aa2d389d8632df64d2,InputStream inputStream=null;,1,0,0.0,545
63fe226fb66056b6c96026aa2d389d8632df64d2,"KeyStore store=KeyStore.getInstance(""JCEKS"");",1,0,0.0,546
63fe226fb66056b6c96026aa2d389d8632df64d2,SecretKey tempKey=null;,1,0,0.0,547
63fe226fb66056b6c96026aa2d389d8632df64d2,inputStream=Thread.currentThread(),1,0,0.0,548
63fe226fb66056b6c96026aa2d389d8632df64d2,.getContextClassLoader(),1,0,0.0,549
63fe226fb66056b6c96026aa2d389d8632df64d2,.getResourceAsStream(keyStoreName);,1,0,0.0,550
63fe226fb66056b6c96026aa2d389d8632df64d2,inputStream=new FileInputStream(keyStoreName);,1,0,0.0,551
63fe226fb66056b6c96026aa2d389d8632df64d2,"store.load(inputStream, storePassword.toCharArray());",1,0,0.0,552
63fe226fb66056b6c96026aa2d389d8632df64d2,"tempKey=(SecretKey)store.getKey(alias, keyPassword.toCharArray());",1,0,0.0,553
63fe226fb66056b6c96026aa2d389d8632df64d2,setSecretKey(tempKey);,1,0,0.0,554
63fe226fb66056b6c96026aa2d389d8632df64d2,if(symAlgorithm.equals(DEFAULT_SYM_ALGO)),1,0,0.0,555
63fe226fb66056b6c96026aa2d389d8632df64d2,symAlgorithm=tempKey.getAlgorithm();,1,0,0.0,556
63fe226fb66056b6c96026aa2d389d8632df64d2,suppliedKey=true;,1,0,0.0,557
63fe226fb66056b6c96026aa2d389d8632df64d2,queue_down=queue_up=false;,1,0,0.0,558
63fe226fb66056b6c96026aa2d389d8632df64d2,Util.close(inputStream);,1,0,0.0,559
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""setting cipher_pool_size (%d) to %d (power of 2) for faster modulo operation"", cipher_pool_size, tmp);",1,0,0.0,560
63fe226fb66056b6c96026aa2d389d8632df64d2,initConfiguredKey();,1,0,0.0,561
63fe226fb66056b6c96026aa2d389d8632df64d2,"keyGen=KeyGenerator.getInstance(getAlgorithm(symAlgorithm), symProvider);",1,0,0.0,562
63fe226fb66056b6c96026aa2d389d8632df64d2,initKeyPair();,1,0,0.0,563
63fe226fb66056b6c96026aa2d389d8632df64d2,package org.jgroups.protocols;,1,0,0.0,564
63fe226fb66056b6c96026aa2d389d8632df64d2,/**,1,0,0.0,565
63fe226fb66056b6c96026aa2d389d8632df64d2,*/,1,0,0.0,566
63fe226fb66056b6c96026aa2d389d8632df64d2,"@MBean(description=""Protocol which encrypts and decrypts cluster traffic"")",1,0,0.0,567
63fe226fb66056b6c96026aa2d389d8632df64d2,/* -----------------------------------------    Properties     -------------------------------------------------- */,1,0,0.0,568
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""key_store_name"", description=""File on classpath that contains keystore repository"")",1,0,0.0,569
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""store_password"",",1,0,0.0,570
63fe226fb66056b6c96026aa2d389d8632df64d2,"description=""Password used to check the integrity/unlock the keystore. Change the default"",",1,0,0.0,571
63fe226fb66056b6c96026aa2d389d8632df64d2,exposeAsManagedAttribute=false),1,0,0.0,572
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""key_password"", description=""Password for recovering the key. Change the default"",",1,0,0.0,573
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(name=""alias"", description=""Alias used for recovering the key. Change the default"",exposeAsManagedAttribute=false)",1,0,0.0,574
63fe226fb66056b6c96026aa2d389d8632df64d2,"@Property(description=""Number of ciphers in the pool to parallelize encrypt and decrypt requests"",writable=false)",1,0,0.0,575
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected Cipher[] encoding_ciphers, decoding_ciphers;",1,0,0.0,576
63fe226fb66056b6c96026aa2d389d8632df64d2,"protected Lock[] encoding_locks, decoding_locks;",1,0,0.0,577
63fe226fb66056b6c96026aa2d389d8632df64d2,protected byte[] symVersion;,1,0,0.0,578
63fe226fb66056b6c96026aa2d389d8632df64d2,protected SecretKey secretKey;,1,0,0.0,579
63fe226fb66056b6c96026aa2d389d8632df64d2,"/** determines whether to encrypt the entire message, or just the buffer */",1,0,0.0,580
63fe226fb66056b6c96026aa2d389d8632df64d2,@Property,1,0,0.0,581
63fe226fb66056b6c96026aa2d389d8632df64d2,/*,1,0,0.0,582
63fe226fb66056b6c96026aa2d389d8632df64d2,keyPassword=storePassword;,1,0,0.0,583
63fe226fb66056b6c96026aa2d389d8632df64d2,initSymKey();,1,0,0.0,584
63fe226fb66056b6c96026aa2d389d8632df64d2,KeyGenerator keyGen=null;,1,0,0.0,585
63fe226fb66056b6c96026aa2d389d8632df64d2,keyGen=KeyGenerator.getInstance(getAlgorithm(symAlgorithm));,1,0,0.0,586
63fe226fb66056b6c96026aa2d389d8632df64d2,queue_down=false;,1,0,0.0,587
63fe226fb66056b6c96026aa2d389d8632df64d2,case Event.VIEW_CHANGE:,1,0,0.0,588
63fe226fb66056b6c96026aa2d389d8632df64d2,"handleViewChange(view, false);",1,0,0.0,589
63fe226fb66056b6c96026aa2d389d8632df64d2,break;,1,0,0.0,590
63fe226fb66056b6c96026aa2d389d8632df64d2,case Event.TMP_VIEW:,1,0,0.0,591
63fe226fb66056b6c96026aa2d389d8632df64d2,view=(View)evt.getArg();,1,0,0.0,592
63fe226fb66056b6c96026aa2d389d8632df64d2,"handleViewChange(view, true);",1,0,0.0,593
63fe226fb66056b6c96026aa2d389d8632df64d2,case Event.MSG:,1,0,0.0,594
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.warn(""exception occurred decrypting message"", e);",1,0,0.0,595
63fe226fb66056b6c96026aa2d389d8632df64d2,Decrypter decrypter=new Decrypter();,1,0,0.0,596
63fe226fb66056b6c96026aa2d389d8632df64d2,batch.map(decrypter);,1,0,0.0,597
63fe226fb66056b6c96026aa2d389d8632df64d2,decrypter.unlock();,1,0,0.0,598
63fe226fb66056b6c96026aa2d389d8632df64d2,if(!batch.isEmpty()),1,0,0.0,599
63fe226fb66056b6c96026aa2d389d8632df64d2,up_prot.up(batch);,1,0,0.0,600
63fe226fb66056b6c96026aa2d389d8632df64d2,if(makeServer),1,0,0.0,601
63fe226fb66056b6c96026aa2d389d8632df64d2,"becomeKeyServer(local_addr, false);",1,0,0.0,602
63fe226fb66056b6c96026aa2d389d8632df64d2,if(makeServer || (tmpKeyServer.equals(local_addr))),1,0,0.0,603
63fe226fb66056b6c96026aa2d389d8632df64d2,"becomeKeyServer(tmpKeyServer, makeServer);",1,0,0.0,604
63fe226fb66056b6c96026aa2d389d8632df64d2,"initSymCiphers(getSymAlgorithm(), getSecretKey());",1,0,0.0,605
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.error(Util.getMessage(""CouldNotInitializeNewCiphers""), e);",1,0,0.0,606
63fe226fb66056b6c96026aa2d389d8632df64d2,throw (RuntimeException)e;,1,0,0.0,607
63fe226fb66056b6c96026aa2d389d8632df64d2,keyServerAddr=tmpKeyServer;,1,0,0.0,608
63fe226fb66056b6c96026aa2d389d8632df64d2,keyServer=true;,1,0,0.0,609
63fe226fb66056b6c96026aa2d389d8632df64d2,if(!suppliedKey),1,0,0.0,610
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""asym algo initialized"");",1,0,0.0,611
63fe226fb66056b6c96026aa2d389d8632df64d2,keyGen.init(symInit);,1,0,0.0,612
63fe226fb66056b6c96026aa2d389d8632df64d2,"asymCipher.init(Cipher.DECRYPT_MODE,Kpair.getPrivate());",1,0,0.0,613
63fe226fb66056b6c96026aa2d389d8632df64d2,secretKey=keyGen.generateKey();,1,0,0.0,614
63fe226fb66056b6c96026aa2d389d8632df64d2,setSecretKey(secretKey);,1,0,0.0,615
63fe226fb66056b6c96026aa2d389d8632df64d2,"log.debug(""initializing symmetric ciphers (pool size=%d)"",cipher_pool_size);",1,0,0.0,616
63fe226fb66056b6c96026aa2d389d8632df64d2,"encoding_ciphers[i].init(Cipher.ENCRYPT_MODE, secret);",1,0,0.0,617
63fe226fb66056b6c96026aa2d389d8632df64d2,"decoding_ciphers[i].init(Cipher.DECRYPT_MODE, secret);",1,0,0.0,618
63fe226fb66056b6c96026aa2d389d8632df64d2,encoding_locks[i]=new ReentrantLock();,1,0,0.0,619
63fe226fb66056b6c96026aa2d389d8632df64d2,decoding_locks[i]=new ReentrantLock();,1,0,0.0,620
63fe226fb66056b6c96026aa2d389d8632df64d2,"MessageDigest digest=MessageDigest.getInstance(""MD5"");",1,0,0.0,621
63fe226fb66056b6c96026aa2d389d8632df64d2,digest.reset();,1,0,0.0,622
63fe226fb66056b6c96026aa2d389d8632df64d2,digest.update(secret.getEncoded());,1,0,0.0,623
63fe226fb66056b6c96026aa2d389d8632df64d2,byte[] tmp=digest.digest();,1,0,0.0,624
63fe226fb66056b6c96026aa2d389d8632df64d2,"symVersion=Arrays.copyOf(tmp, tmp.length);",1,0,0.0,625
63fe226fb66056b6c96026aa2d389d8632df64d2,sb.append(Integer.toHexString(v));,1,0,0.0,626
63fe226fb66056b6c96026aa2d389d8632df64d2,}*/,1,0,0.0,627
63fe226fb66056b6c96026aa2d389d8632df64d2,KeyPairGenerator KpairGen=null;,1,0,0.0,628
63fe226fb66056b6c96026aa2d389d8632df64d2,"KpairGen=KeyPairGenerator.getInstance(getAlgorithm(asymAlgorithm), asymProvider);",1,0,0.0,629
63fe226fb66056b6c96026aa2d389d8632df64d2,KpairGen=KeyPairGenerator.getInstance(getAlgorithm(asymAlgorithm));,1,0,0.0,630
63fe226fb66056b6c96026aa2d389d8632df64d2,"KpairGen.initialize(asymInit,new SecureRandom());",1,0,0.0,631
63fe226fb66056b6c96026aa2d389d8632df64d2,Kpair=KpairGen.generateKeyPair();,1,0,0.0,632
63fe226fb66056b6c96026aa2d389d8632df64d2,"asymCipher=Cipher.getInstance(asymAlgorithm, asymProvider);",1,0,0.0,633
63fe226fb66056b6c96026aa2d389d8632df64d2,asymCipher=Cipher.getInstance(asymAlgorithm);,1,0,0.0,634
63fe226fb66056b6c96026aa2d389d8632df64d2,retval+=version.length;,1,0,0.0,635
