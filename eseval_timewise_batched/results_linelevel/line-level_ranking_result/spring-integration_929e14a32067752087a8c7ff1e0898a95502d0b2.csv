commit_id,line,line_level_label,count,line_score,row
929e14a32067752087a8c7ff1e0898a95502d0b2,"""] for attribute '"" + attributeName + ""' on publisher annotation ["" +",1,6,1.0,1
929e14a32067752087a8c7ff1e0898a95502d0b2,"payloadExpression = ""#"" + this.getArgumentMapVariableName(method) + ""["" + i + ""]"";",1,5,0.8333333333333333,2
929e14a32067752087a8c7ff1e0898a95502d0b2,"payloadExpression = ""#"" + PublisherMetadataSource.ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"";",1,5,0.8333333333333333,3
929e14a32067752087a8c7ff1e0898a95502d0b2,"private <T> T getAnnotationValue(Method method, String attributeName, Class<T> expectedType) {",1,5,0.8333333333333333,4
929e14a32067752087a8c7ff1e0898a95502d0b2,"private <T> T getAnnotationValue(Class<?> clazz, String attributeName, Class<T> expectedType) {",1,5,0.8333333333333333,5
929e14a32067752087a8c7ff1e0898a95502d0b2,"private <T> T getAnnotationValue(Annotation annotation, String attributeName, Class<T> expectedType) {",1,5,0.8333333333333333,6
929e14a32067752087a8c7ff1e0898a95502d0b2,"annotation.annotationType() + ""], but actual type was ["" + valueAsObject.getClass() + ""]"");",1,5,0.8333333333333333,7
929e14a32067752087a8c7ff1e0898a95502d0b2,"payloadExpression = ""#"" + ExpressionSource.ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"";",0,5,0.8333333333333333,8
929e14a32067752087a8c7ff1e0898a95502d0b2,"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"");",1,4,0.6666666666666666,9
929e14a32067752087a8c7ff1e0898a95502d0b2,"throw new IllegalArgumentException(""expected type ["" + expectedType.getName() +",1,4,0.6666666666666666,10
929e14a32067752087a8c7ff1e0898a95502d0b2,"""class ["" + clazz + ""] contains more than one publisher annotation"");",1,4,0.6666666666666666,11
929e14a32067752087a8c7ff1e0898a95502d0b2,"""method ["" + method + ""] contains more than one publisher annotation"");",1,4,0.6666666666666666,12
929e14a32067752087a8c7ff1e0898a95502d0b2,"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]""));",1,4,0.6666666666666666,13
929e14a32067752087a8c7ff1e0898a95502d0b2,EXPRESSION_PARSER.parseExpression('#' + ARGUMENT_MAP_VARIABLE_NAME + '[' + i + ']'));,0,4,0.6666666666666666,14
929e14a32067752087a8c7ff1e0898a95502d0b2,"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"");",0,4,0.6666666666666666,15
929e14a32067752087a8c7ff1e0898a95502d0b2,"""#"" + PublisherMetadataSource.ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"");",1,4,0.6666666666666666,16
929e14a32067752087a8c7ff1e0898a95502d0b2,"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]""));",0,4,0.6666666666666666,17
929e14a32067752087a8c7ff1e0898a95502d0b2,"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"");",0,4,0.6666666666666666,18
929e14a32067752087a8c7ff1e0898a95502d0b2,"headerExpressions.put(name, ""#"" + this.getArgumentMapVariableName(method) + ""['"" + i + ""']"");",1,4,0.6666666666666666,19
929e14a32067752087a8c7ff1e0898a95502d0b2,"headerExpressions.put(name, ""#"" + ExpressionSource.ARGUMENT_MAP_VARIABLE_NAME + ""['"" + i + ""']"");",0,4,0.6666666666666666,20
929e14a32067752087a8c7ff1e0898a95502d0b2,if (methodPayloadAnnotation != null) {,1,3,0.5,21
929e14a32067752087a8c7ff1e0898a95502d0b2,if (valueAsObject != null) {,1,3,0.5,22
929e14a32067752087a8c7ff1e0898a95502d0b2,Object valueAsObject = (attributeName == null) ?,1,3,0.5,23
929e14a32067752087a8c7ff1e0898a95502d0b2,if (value != null) {,1,3,0.5,24
929e14a32067752087a8c7ff1e0898a95502d0b2,"Annotation annotation = AnnotatedElementUtils.findMergedAnnotation(clazz, annotationType);",1,3,0.5,25
929e14a32067752087a8c7ff1e0898a95502d0b2,"value = getAnnotationValue(annotation, attributeName, expectedType);",1,3,0.5,26
929e14a32067752087a8c7ff1e0898a95502d0b2,if (annotation != null) {,1,3,0.5,27
929e14a32067752087a8c7ff1e0898a95502d0b2,"Annotation annotation = AnnotatedElementUtils.findMergedAnnotation(method, annotationType);",1,3,0.5,28
929e14a32067752087a8c7ff1e0898a95502d0b2,T value = null;,1,3,0.5,29
929e14a32067752087a8c7ff1e0898a95502d0b2,"value = this.getAnnotationValue(annotation, attributeName, expectedType);",1,3,0.5,30
929e14a32067752087a8c7ff1e0898a95502d0b2,"""The ["" + element + ""] contains more than one publisher annotation"");",0,3,0.5,31
929e14a32067752087a8c7ff1e0898a95502d0b2,if (parameterNames != null) {,0,3,0.5,32
929e14a32067752087a8c7ff1e0898a95502d0b2,Object valueAsObject = (attributeName == null) ?  AnnotationUtils.getValue(annotation),1,3,0.5,33
929e14a32067752087a8c7ff1e0898a95502d0b2,if (methodPayloadAnnotation != null) {,1,3,0.5,34
929e14a32067752087a8c7ff1e0898a95502d0b2,Object valueAsObject = (attributeName == null) ? AnnotationUtils.getValue(annotation),0,3,0.5,35
929e14a32067752087a8c7ff1e0898a95502d0b2,"value = getAnnotationValue(annotation, attributeName, expectedType);",0,3,0.5,36
929e14a32067752087a8c7ff1e0898a95502d0b2,if (methodPayloadAnnotation != null) {,0,3,0.5,37
929e14a32067752087a8c7ff1e0898a95502d0b2,if (annotation != null) {,1,3,0.5,38
929e14a32067752087a8c7ff1e0898a95502d0b2,"name = method.getName() + "".arg#"" + i;",0,3,0.5,39
929e14a32067752087a8c7ff1e0898a95502d0b2,if (channelName == null) {,1,2,0.3333333333333333,40
929e14a32067752087a8c7ff1e0898a95502d0b2,for (int i = 0; i < annotationArray.length; i++) {,0,2,0.3333333333333333,41
929e14a32067752087a8c7ff1e0898a95502d0b2,String value = null;,0,2,0.3333333333333333,42
929e14a32067752087a8c7ff1e0898a95502d0b2,MergedAnnotation<? extends Annotation> mergedAnnotation = mergedAnnotations.get(annotationType);,0,2,0.3333333333333333,43
929e14a32067752087a8c7ff1e0898a95502d0b2,value = mergedAnnotation.getString(attributeName);,0,2,0.3333333333333333,44
929e14a32067752087a8c7ff1e0898a95502d0b2,value = (T) valueAsObject;,1,2,0.3333333333333333,45
929e14a32067752087a8c7ff1e0898a95502d0b2,"Annotation methodPayloadAnnotation = AnnotationUtils.findAnnotation(method, Payload.class);",1,2,0.3333333333333333,46
929e14a32067752087a8c7ff1e0898a95502d0b2,for (int i = 0; i < annotationArray.length; i++) {,1,2,0.3333333333333333,47
929e14a32067752087a8c7ff1e0898a95502d0b2,for (Class<? extends Annotation> annotationType : this.annotationTypes) {,1,2,0.3333333333333333,48
929e14a32067752087a8c7ff1e0898a95502d0b2,"|| payloadExpression.contains(""#"" + PublisherMetadataSource.RETURN_VALUE_VARIABLE_NAME)) {",1,2,0.3333333333333333,49
929e14a32067752087a8c7ff1e0898a95502d0b2,if (channelName == null) {,0,2,0.3333333333333333,50
929e14a32067752087a8c7ff1e0898a95502d0b2,"Annotation methodPayloadAnnotation = AnnotationUtils.findAnnotation(method, Payload.class);",1,2,0.3333333333333333,51
929e14a32067752087a8c7ff1e0898a95502d0b2,for (int i = 0; i < annotationArray.length; i++) {,1,2,0.3333333333333333,52
929e14a32067752087a8c7ff1e0898a95502d0b2,if (channelName == null) {,0,2,0.3333333333333333,53
929e14a32067752087a8c7ff1e0898a95502d0b2,"payloadExpression = ""#"" + PublisherMetadataSource.RETURN_VALUE_VARIABLE_NAME;",1,2,0.3333333333333333,54
929e14a32067752087a8c7ff1e0898a95502d0b2,if (channelName == null) {,0,2,0.3333333333333333,55
929e14a32067752087a8c7ff1e0898a95502d0b2,"ExpressionBinding annotation = AnnotationUtils.findAnnotation(method, ExpressionBinding.class);",1,2,0.3333333333333333,56
929e14a32067752087a8c7ff1e0898a95502d0b2,if (channelName == null) {,1,2,0.3333333333333333,57
929e14a32067752087a8c7ff1e0898a95502d0b2,* Copyright 2002-2018 the original author or authors.,0,2,0.3333333333333333,58
929e14a32067752087a8c7ff1e0898a95502d0b2,"Annotation methodPayloadAnnotation = AnnotationUtils.findAnnotation(method, Payload.class);",0,2,0.3333333333333333,59
929e14a32067752087a8c7ff1e0898a95502d0b2,for (int i = 0; i < annotationArray.length; i++) {,0,2,0.3333333333333333,60
929e14a32067752087a8c7ff1e0898a95502d0b2,* Copyright 2002-2015 the original author or authors.,1,2,0.3333333333333333,61
929e14a32067752087a8c7ff1e0898a95502d0b2,if (channelName == null) {,1,2,0.3333333333333333,62
929e14a32067752087a8c7ff1e0898a95502d0b2,if (payloadExpression == null ||,0,1,0.16666666666666666,63
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadMergedAnnotation = MergedAnnotations.from(parameterAnnotations).get(Payload.class);,0,1,0.16666666666666666,64
929e14a32067752087a8c7ff1e0898a95502d0b2,Annotation[] parameterAnnotations = annotationArray[i];,0,1,0.16666666666666666,65
929e14a32067752087a8c7ff1e0898a95502d0b2,"""@Payload can be used at most once on a @Publisher method, "" +",0,1,0.16666666666666666,66
929e14a32067752087a8c7ff1e0898a95502d0b2,"""@Payload on a parameter for a @Publisher method may not contain an 'expression'"");",0,1,0.16666666666666666,67
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression =,0,1,0.16666666666666666,68
929e14a32067752087a8c7ff1e0898a95502d0b2,String[] parameterNames = this.parameterNameDiscoverer.getParameterNames(method);,0,1,0.16666666666666666,69
929e14a32067752087a8c7ff1e0898a95502d0b2,.equals(payloadExpression.getExpressionString())) {,0,1,0.16666666666666666,70
929e14a32067752087a8c7ff1e0898a95502d0b2,"""When defining @Publisher on a void-returning method, an explicit payload "" +",0,1,0.16666666666666666,71
929e14a32067752087a8c7ff1e0898a95502d0b2,"""expression that does not rely upon a #return value is required."");",0,1,0.16666666666666666,72
929e14a32067752087a8c7ff1e0898a95502d0b2,"Map<String, Expression> headerExpressions = new HashMap<>();",0,1,0.16666666666666666,73
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression = EXPRESSION_PARSER.parseExpression(payloadExpressionString);,0,1,0.16666666666666666,74
929e14a32067752087a8c7ff1e0898a95502d0b2,MergedAnnotation<Header> headerMergedAnnotation =,0,1,0.16666666666666666,75
929e14a32067752087a8c7ff1e0898a95502d0b2,if (headerMergedAnnotation.isPresent()) {,0,1,0.16666666666666666,76
929e14a32067752087a8c7ff1e0898a95502d0b2,String name =,0,1,0.16666666666666666,77
929e14a32067752087a8c7ff1e0898a95502d0b2,Annotation[][] annotationArray = method.getParameterAnnotations();,0,1,0.16666666666666666,78
929e14a32067752087a8c7ff1e0898a95502d0b2,MergedAnnotation<Payload> payloadMergedAnnotation =,0,1,0.16666666666666666,79
929e14a32067752087a8c7ff1e0898a95502d0b2,else {,0,1,0.16666666666666666,80
929e14a32067752087a8c7ff1e0898a95502d0b2,name = parameterNames[i];,1,1,0.16666666666666666,81
929e14a32067752087a8c7ff1e0898a95502d0b2,name = parameterNames[i];,0,1,0.16666666666666666,82
929e14a32067752087a8c7ff1e0898a95502d0b2,"Map<String, String> headerExpressions = new HashMap<String, String>();",1,1,0.16666666666666666,83
929e14a32067752087a8c7ff1e0898a95502d0b2,String[] parameterNames = this.parameterNameDiscoverer.getParameterNames(method);,1,1,0.16666666666666666,84
929e14a32067752087a8c7ff1e0898a95502d0b2,if (Header.class.equals(currentAnnotation.annotationType())) {,1,1,0.16666666666666666,85
929e14a32067752087a8c7ff1e0898a95502d0b2,"String name = getAnnotationValue(currentAnnotation, null, String.class);",1,1,0.16666666666666666,86
929e14a32067752087a8c7ff1e0898a95502d0b2,if (!StringUtils.hasText(name)) {,1,1,0.16666666666666666,87
929e14a32067752087a8c7ff1e0898a95502d0b2,method1 -> {,0,1,0.16666666666666666,88
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression = RETURN_VALUE_EXPRESSION;,0,1,0.16666666666666666,89
929e14a32067752087a8c7ff1e0898a95502d0b2,"String channelName = getAnnotationValue(method, this.channelAttributeName);",0,1,0.16666666666666666,90
929e14a32067752087a8c7ff1e0898a95502d0b2,"channelName = getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName);",0,1,0.16666666666666666,91
929e14a32067752087a8c7ff1e0898a95502d0b2,},0,1,0.16666666666666666,92
929e14a32067752087a8c7ff1e0898a95502d0b2,Expression payloadExpression = null;,0,1,0.16666666666666666,93
929e14a32067752087a8c7ff1e0898a95502d0b2,"String payloadExpressionString = payloadMergedAnnotation.getString(""expression"");",0,1,0.16666666666666666,94
929e14a32067752087a8c7ff1e0898a95502d0b2,if (!StringUtils.hasText(payloadExpressionString)) {,0,1,0.16666666666666666,95
929e14a32067752087a8c7ff1e0898a95502d0b2,if (!StringUtils.hasText(name)) {,0,1,0.16666666666666666,96
929e14a32067752087a8c7ff1e0898a95502d0b2,"String name = getAnnotationValue(currentAnnotation, null, String.class);",1,1,0.16666666666666666,97
929e14a32067752087a8c7ff1e0898a95502d0b2,"private String getAnnotationValue(AnnotatedElement element, String attributeName) {",0,1,0.16666666666666666,98
929e14a32067752087a8c7ff1e0898a95502d0b2,MergedAnnotations mergedAnnotations =,0,1,0.16666666666666666,99
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression =,1,1,0.16666666666666666,100
929e14a32067752087a8c7ff1e0898a95502d0b2,if (payloadExpression == null ||,1,1,0.16666666666666666,101
929e14a32067752087a8c7ff1e0898a95502d0b2,RETURN_VALUE_EXPRESSION.getExpressionString().equals(payloadExpression.getExpressionString())) {,1,1,0.16666666666666666,102
929e14a32067752087a8c7ff1e0898a95502d0b2,"""When defining @Publisher on a void-returning method, an explicit payload "" +",1,1,0.16666666666666666,103
929e14a32067752087a8c7ff1e0898a95502d0b2,"""expression that does not rely upon a #return value is required."");",1,1,0.16666666666666666,104
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getPayloadExpression(Method method) {,1,1,0.16666666666666666,105
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.headersExpressions.computeIfAbsent(method, method1 -> {",1,1,0.16666666666666666,106
929e14a32067752087a8c7ff1e0898a95502d0b2,"Map<String, Expression> headerExpressions = new HashMap<>();",1,1,0.16666666666666666,107
929e14a32067752087a8c7ff1e0898a95502d0b2,String[] parameterNames = this.parameterNameDiscoverer.getParameterNames(method);,1,1,0.16666666666666666,108
929e14a32067752087a8c7ff1e0898a95502d0b2,if (Header.class.equals(currentAnnotation.annotationType())) {,1,1,0.16666666666666666,109
929e14a32067752087a8c7ff1e0898a95502d0b2,"""expression that does not rely upon a #return value is required."");",1,1,0.16666666666666666,110
929e14a32067752087a8c7ff1e0898a95502d0b2,if (!StringUtils.hasText(name)) {,1,1,0.16666666666666666,111
929e14a32067752087a8c7ff1e0898a95502d0b2,name = parameterNames[i];,1,1,0.16666666666666666,112
929e14a32067752087a8c7ff1e0898a95502d0b2,"public Map<String, String> getHeaderExpressions(Method method) {",1,1,0.16666666666666666,113
929e14a32067752087a8c7ff1e0898a95502d0b2,if (expectedType.isAssignableFrom(valueAsObject.getClass())) {,1,1,0.16666666666666666,114
929e14a32067752087a8c7ff1e0898a95502d0b2,"""@Payload on a parameter for a @Publisher method may not contain an expression"");",1,1,0.16666666666666666,115
929e14a32067752087a8c7ff1e0898a95502d0b2,"""@Payload can be used at most once on a @Publisher method, "" +",1,1,0.16666666666666666,116
929e14a32067752087a8c7ff1e0898a95502d0b2,if (Payload.class.equals(currentAnnotation.annotationType())) {,1,1,0.16666666666666666,117
929e14a32067752087a8c7ff1e0898a95502d0b2,Expression payloadExpression = null;,1,1,0.16666666666666666,118
929e14a32067752087a8c7ff1e0898a95502d0b2,if (mergedAnnotation.isPresent()) {,0,1,0.16666666666666666,119
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.channels.computeIfAbsent(method, method1 -> {",1,1,0.16666666666666666,120
929e14a32067752087a8c7ff1e0898a95502d0b2,"String channelName = getAnnotationValue(method, this.channelAttributeName, String.class);",1,1,0.16666666666666666,121
929e14a32067752087a8c7ff1e0898a95502d0b2,"channelName = getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",1,1,0.16666666666666666,122
929e14a32067752087a8c7ff1e0898a95502d0b2,},1,1,0.16666666666666666,123
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.payloadExpressions.computeIfAbsent(method, method1 -> {",1,1,0.16666666666666666,124
929e14a32067752087a8c7ff1e0898a95502d0b2,"String payloadExpressionString = getAnnotationValue(methodPayloadAnnotation, null, String.class);",1,1,0.16666666666666666,125
929e14a32067752087a8c7ff1e0898a95502d0b2,for (Annotation currentAnnotation : parameterAnnotations) {,1,1,0.16666666666666666,126
929e14a32067752087a8c7ff1e0898a95502d0b2,if (!StringUtils.hasText(payloadExpressionString)) {,1,1,0.16666666666666666,127
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression = RETURN_VALUE_EXPRESSION;,1,1,0.16666666666666666,128
929e14a32067752087a8c7ff1e0898a95502d0b2,else {,1,1,0.16666666666666666,129
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression = EXPRESSION_PARSER.parseExpression(payloadExpressionString);,1,1,0.16666666666666666,130
929e14a32067752087a8c7ff1e0898a95502d0b2,Annotation[][] annotationArray = method.getParameterAnnotations();,1,1,0.16666666666666666,131
929e14a32067752087a8c7ff1e0898a95502d0b2,Annotation[] parameterAnnotations = annotationArray[i];,1,1,0.16666666666666666,132
929e14a32067752087a8c7ff1e0898a95502d0b2,"public Map<String, String> getHeaderExpressions(Method method) {",1,1,0.16666666666666666,133
929e14a32067752087a8c7ff1e0898a95502d0b2,if (payloadMergedAnnotation.isPresent()) {,0,1,0.16666666666666666,134
929e14a32067752087a8c7ff1e0898a95502d0b2,"""When defining @Publisher on a void-returning method, an explicit payload "" +",1,1,0.16666666666666666,135
929e14a32067752087a8c7ff1e0898a95502d0b2,Annotation[][] annotationArray = method.getParameterAnnotations();,0,1,0.16666666666666666,136
929e14a32067752087a8c7ff1e0898a95502d0b2,private final ParameterNameDiscoverer parameterNameDiscoverer = new LocalVariableTableParameterNameDiscoverer();,0,1,0.16666666666666666,137
929e14a32067752087a8c7ff1e0898a95502d0b2,"private final Map<Method, String> channels = new HashMap<>();",0,1,0.16666666666666666,138
929e14a32067752087a8c7ff1e0898a95502d0b2,"private final Map<Method, Expression> payloadExpressions = new HashMap<>();",0,1,0.16666666666666666,139
929e14a32067752087a8c7ff1e0898a95502d0b2,"private final Map<Method, Map<String, Expression>> headersExpressions = new HashMap<>();",0,1,0.16666666666666666,140
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.channels.computeIfAbsent(method, method1 -> {",0,1,0.16666666666666666,141
929e14a32067752087a8c7ff1e0898a95502d0b2,"String channelName = getAnnotationValue(method, this.channelAttributeName, String.class);",0,1,0.16666666666666666,142
929e14a32067752087a8c7ff1e0898a95502d0b2,"channelName = getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",0,1,0.16666666666666666,143
929e14a32067752087a8c7ff1e0898a95502d0b2,},0,1,0.16666666666666666,144
929e14a32067752087a8c7ff1e0898a95502d0b2,public Expression getExpressionForPayload(Method method) {,0,1,0.16666666666666666,145
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.payloadExpressions.computeIfAbsent(method, method1 -> {",0,1,0.16666666666666666,146
929e14a32067752087a8c7ff1e0898a95502d0b2,Expression payloadExpression = null;,0,1,0.16666666666666666,147
929e14a32067752087a8c7ff1e0898a95502d0b2,"String payloadExpressionString = getAnnotationValue(methodPayloadAnnotation, null, String.class);",0,1,0.16666666666666666,148
929e14a32067752087a8c7ff1e0898a95502d0b2,if (!StringUtils.hasText(payloadExpressionString)) {,0,1,0.16666666666666666,149
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression = RETURN_VALUE_EXPRESSION;,0,1,0.16666666666666666,150
929e14a32067752087a8c7ff1e0898a95502d0b2,else {,0,1,0.16666666666666666,151
929e14a32067752087a8c7ff1e0898a95502d0b2,*,0,1,0.16666666666666666,152
929e14a32067752087a8c7ff1e0898a95502d0b2,"channelName = this.getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",1,1,0.16666666666666666,153
929e14a32067752087a8c7ff1e0898a95502d0b2,"String channelName = this.getAnnotationValue(method, this.channelAttributeName, String.class);",1,1,0.16666666666666666,154
929e14a32067752087a8c7ff1e0898a95502d0b2,": ""#"" + this.getReturnValueVariableName(method);",1,1,0.16666666666666666,155
929e14a32067752087a8c7ff1e0898a95502d0b2,if (payloadExpression == null,1,1,0.16666666666666666,156
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getChannelName(Method method) {,0,1,0.16666666666666666,157
929e14a32067752087a8c7ff1e0898a95502d0b2,"String channelName = this.getAnnotationValue(method, this.channelAttributeName, String.class);",0,1,0.16666666666666666,158
929e14a32067752087a8c7ff1e0898a95502d0b2,"channelName = this.getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",0,1,0.16666666666666666,159
929e14a32067752087a8c7ff1e0898a95502d0b2,},0,1,0.16666666666666666,160
929e14a32067752087a8c7ff1e0898a95502d0b2,": ""#"" + ExpressionSource.RETURN_VALUE_VARIABLE_NAME;",0,1,0.16666666666666666,161
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getMethodNameVariableName(Method method) {,1,1,0.16666666666666666,162
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getChannelName(Method method) {,1,1,0.16666666666666666,163
929e14a32067752087a8c7ff1e0898a95502d0b2,},1,1,0.16666666666666666,164
929e14a32067752087a8c7ff1e0898a95502d0b2,public String[] getArgumentVariableNames(Method method) {,1,1,0.16666666666666666,165
929e14a32067752087a8c7ff1e0898a95502d0b2,String argNameList = annotation.argumentVariableNames();,1,1,0.16666666666666666,166
929e14a32067752087a8c7ff1e0898a95502d0b2,if (StringUtils.hasText(argNameList)) {,1,1,0.16666666666666666,167
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getArgumentMapVariableName(Method method) {,1,1,0.16666666666666666,168
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getReturnValueVariableName(Method method) {,1,1,0.16666666666666666,169
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression = EXPRESSION_PARSER.parseExpression(payloadExpressionString);,0,1,0.16666666666666666,170
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getExceptionVariableName(Method method) {,1,1,0.16666666666666666,171
929e14a32067752087a8c7ff1e0898a95502d0b2,Annotation[] parameterAnnotations = annotationArray[i];,0,1,0.16666666666666666,172
929e14a32067752087a8c7ff1e0898a95502d0b2,if (!StringUtils.hasText(payloadExpression)) {,1,1,0.16666666666666666,173
929e14a32067752087a8c7ff1e0898a95502d0b2,private final ParameterNameDiscoverer parameterNameDiscoverer = new LocalVariableTableParameterNameDiscoverer();,1,1,0.16666666666666666,174
929e14a32067752087a8c7ff1e0898a95502d0b2,"String channelName = this.getAnnotationValue(method, this.channelAttributeName, String.class);",1,1,0.16666666666666666,175
929e14a32067752087a8c7ff1e0898a95502d0b2,"channelName = this.getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",1,1,0.16666666666666666,176
929e14a32067752087a8c7ff1e0898a95502d0b2,},1,1,0.16666666666666666,177
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getPayloadExpression(Method method) {,1,1,0.16666666666666666,178
929e14a32067752087a8c7ff1e0898a95502d0b2,String payloadExpression = null;,1,1,0.16666666666666666,179
929e14a32067752087a8c7ff1e0898a95502d0b2,Annotation[][] annotationArray = method.getParameterAnnotations();,1,1,0.16666666666666666,180
929e14a32067752087a8c7ff1e0898a95502d0b2,name = parameterNames[i];,0,1,0.16666666666666666,181
929e14a32067752087a8c7ff1e0898a95502d0b2,Annotation[] parameterAnnotations = annotationArray[i];,1,1,0.16666666666666666,182
929e14a32067752087a8c7ff1e0898a95502d0b2,for (Annotation currentAnnotation : parameterAnnotations) {,1,1,0.16666666666666666,183
929e14a32067752087a8c7ff1e0898a95502d0b2,if (Payload.class.equals(currentAnnotation.annotationType())) {,1,1,0.16666666666666666,184
929e14a32067752087a8c7ff1e0898a95502d0b2,"""@Payload can be used at most once on a @Publisher method, "" +",1,1,0.16666666666666666,185
929e14a32067752087a8c7ff1e0898a95502d0b2,for (Annotation currentAnnotation : parameterAnnotations) {,0,1,0.16666666666666666,186
929e14a32067752087a8c7ff1e0898a95502d0b2,"""@Payload on a parameter for a @Publisher method may not contain an expression"");",1,1,0.16666666666666666,187
929e14a32067752087a8c7ff1e0898a95502d0b2,"public Map<String, String> getHeaderExpressions(Method method) {",0,1,0.16666666666666666,188
929e14a32067752087a8c7ff1e0898a95502d0b2,"payloadExpression = getAnnotationValue(methodPayloadAnnotation, null, String.class);",1,1,0.16666666666666666,189
929e14a32067752087a8c7ff1e0898a95502d0b2,if (!StringUtils.hasText(name)) {,0,1,0.16666666666666666,190
929e14a32067752087a8c7ff1e0898a95502d0b2,"""expression that does not rely upon a #return value is required."");",0,1,0.16666666666666666,191
929e14a32067752087a8c7ff1e0898a95502d0b2,"""@Payload can be used at most once on a @Publisher method, "" +",0,1,0.16666666666666666,192
929e14a32067752087a8c7ff1e0898a95502d0b2,"String name = getAnnotationValue(currentAnnotation, null, String.class);",0,1,0.16666666666666666,193
929e14a32067752087a8c7ff1e0898a95502d0b2,"""@Payload on a parameter for a @Publisher method may not contain an expression"");",0,1,0.16666666666666666,194
929e14a32067752087a8c7ff1e0898a95502d0b2,payloadExpression =,0,1,0.16666666666666666,195
929e14a32067752087a8c7ff1e0898a95502d0b2,RETURN_VALUE_EXPRESSION.getExpressionString().equals(payloadExpression.getExpressionString())) {,0,1,0.16666666666666666,196
929e14a32067752087a8c7ff1e0898a95502d0b2,"""When defining @Publisher on a void-returning method, an explicit payload "" +",0,1,0.16666666666666666,197
929e14a32067752087a8c7ff1e0898a95502d0b2,if (payloadExpression == null ||,0,1,0.16666666666666666,198
929e14a32067752087a8c7ff1e0898a95502d0b2,if (Payload.class.equals(currentAnnotation.annotationType())) {,0,1,0.16666666666666666,199
929e14a32067752087a8c7ff1e0898a95502d0b2,"public Map<String, Expression> getExpressionsForHeaders(Method method) {",0,1,0.16666666666666666,200
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.headersExpressions.computeIfAbsent(method, method1 -> {",0,1,0.16666666666666666,201
929e14a32067752087a8c7ff1e0898a95502d0b2,"Map<String, Expression> headerExpressions = new HashMap<>();",0,1,0.16666666666666666,202
929e14a32067752087a8c7ff1e0898a95502d0b2,String[] parameterNames = this.parameterNameDiscoverer.getParameterNames(method);,0,1,0.16666666666666666,203
929e14a32067752087a8c7ff1e0898a95502d0b2,public String getPayloadExpression(Method method) {,0,1,0.16666666666666666,204
929e14a32067752087a8c7ff1e0898a95502d0b2,if (Header.class.equals(currentAnnotation.annotationType())) {,0,1,0.16666666666666666,205
929e14a32067752087a8c7ff1e0898a95502d0b2,import java.util.stream.Collectors;,1,0,0.0,206
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.headersExpressions.computeIfAbsent(method,",0,0,0.0,207
929e14a32067752087a8c7ff1e0898a95502d0b2,MergedAnnotations.from(parameterAnnotations).get(Header.class);,0,0,0.0,208
929e14a32067752087a8c7ff1e0898a95502d0b2,headerMergedAnnotation,0,0,0.0,209
929e14a32067752087a8c7ff1e0898a95502d0b2,"MergedAnnotations.from(element, MergedAnnotations.SearchStrategy.EXHAUSTIVE);",0,0,0.0,210
929e14a32067752087a8c7ff1e0898a95502d0b2,".getString(""name"");",0,0,0.0,211
929e14a32067752087a8c7ff1e0898a95502d0b2,"headerExpressions.put(name,",0,0,0.0,212
929e14a32067752087a8c7ff1e0898a95502d0b2,@Nullable,0,0,0.0,213
929e14a32067752087a8c7ff1e0898a95502d0b2,return payloadExpression;,0,0,0.0,214
929e14a32067752087a8c7ff1e0898a95502d0b2,return headerExpressions;,0,0,0.0,215
929e14a32067752087a8c7ff1e0898a95502d0b2,.get(Payload.class);,0,0,0.0,216
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.isTrue(!void.class.equals(method.getReturnType()),",0,0,0.0,217
929e14a32067752087a8c7ff1e0898a95502d0b2,RETURN_VALUE_EXPRESSION.getExpressionString(),0,0,0.0,218
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.state("""".equals(payloadMergedAnnotation.getString(""expression"")),",0,0,0.0,219
929e14a32067752087a8c7ff1e0898a95502d0b2,"""either at method-level or on a single parameter"");",0,0,0.0,220
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.state(payloadExpression == null,",0,0,0.0,221
929e14a32067752087a8c7ff1e0898a95502d0b2,"MergedAnnotations.from(method, MergedAnnotations.SearchStrategy.EXHAUSTIVE)",0,0,0.0,222
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.payloadExpressions.computeIfAbsent(method,",0,0,0.0,223
929e14a32067752087a8c7ff1e0898a95502d0b2,import org.springframework.core.annotation.AnnotationUtils;,1,0,0.0,224
929e14a32067752087a8c7ff1e0898a95502d0b2,});,0,0,0.0,225
929e14a32067752087a8c7ff1e0898a95502d0b2,import org.springframework.core.annotation.AnnotatedElementUtils;,1,0,0.0,226
929e14a32067752087a8c7ff1e0898a95502d0b2,.stream(),1,0,0.0,227
929e14a32067752087a8c7ff1e0898a95502d0b2,return StringUtils.hasText(channelName) ? channelName : null;,1,0,0.0,228
929e14a32067752087a8c7ff1e0898a95502d0b2,});,1,0,0.0,229
929e14a32067752087a8c7ff1e0898a95502d0b2,"return this.channels.computeIfAbsent(method,",0,0,0.0,230
929e14a32067752087a8c7ff1e0898a95502d0b2,"AnnotationUtils.getValue(AnnotationUtils.synthesizeAnnotation(annotation, null)) :",1,0,0.0,231
929e14a32067752087a8c7ff1e0898a95502d0b2,"@SuppressWarnings(""unchecked"")",1,0,0.0,232
929e14a32067752087a8c7ff1e0898a95502d0b2,throw new IllegalStateException(,1,0,0.0,233
929e14a32067752087a8c7ff1e0898a95502d0b2,return value;,1,0,0.0,234
929e14a32067752087a8c7ff1e0898a95502d0b2,".collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().getExpressionString()));",1,0,0.0,235
929e14a32067752087a8c7ff1e0898a95502d0b2,.entrySet(),1,0,0.0,236
929e14a32067752087a8c7ff1e0898a95502d0b2,return getExpressionsForHeaders(method),1,0,0.0,237
929e14a32067752087a8c7ff1e0898a95502d0b2,return headerExpressions;,1,0,0.0,238
929e14a32067752087a8c7ff1e0898a95502d0b2,"headerExpressions.put(name,",1,0,0.0,239
929e14a32067752087a8c7ff1e0898a95502d0b2,.getExpressionString();,1,0,0.0,240
929e14a32067752087a8c7ff1e0898a95502d0b2,return getExpressionForPayload(method),1,0,0.0,241
929e14a32067752087a8c7ff1e0898a95502d0b2,@Deprecated,1,0,0.0,242
929e14a32067752087a8c7ff1e0898a95502d0b2,@Override,1,0,0.0,243
929e14a32067752087a8c7ff1e0898a95502d0b2,return payloadExpression;,1,0,0.0,244
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.isTrue(!void.class.equals(method.getReturnType()),",1,0,0.0,245
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.state("""".equals(AnnotationUtils.getValue(AnnotationUtils.synthesizeAnnotation(currentAnnotation, null))),",1,0,0.0,246
929e14a32067752087a8c7ff1e0898a95502d0b2,"""either at method-level or on a single parameter"");",1,0,0.0,247
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.state(payloadExpression == null,",1,0,0.0,248
929e14a32067752087a8c7ff1e0898a95502d0b2,return StringUtils.hasText(channelName) ? channelName : null;,0,0,0.0,249
929e14a32067752087a8c7ff1e0898a95502d0b2,return annotation.exceptionVariableName();,1,0,0.0,250
929e14a32067752087a8c7ff1e0898a95502d0b2,import org.springframework.lang.Nullable;,0,0,0.0,251
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.isTrue(!void.class.equals(method.getReturnType()),",0,0,0.0,252
929e14a32067752087a8c7ff1e0898a95502d0b2,"""either at method-level or on a single parameter"");",0,0,0.0,253
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.state(payloadExpression == null,",0,0,0.0,254
929e14a32067752087a8c7ff1e0898a95502d0b2,});,0,0,0.0,255
929e14a32067752087a8c7ff1e0898a95502d0b2,return StringUtils.hasText(channelName) ? channelName : null;,0,0,0.0,256
929e14a32067752087a8c7ff1e0898a95502d0b2,@Override,0,0,0.0,257
929e14a32067752087a8c7ff1e0898a95502d0b2,this(Collections.singleton(Publisher.class));,0,0,0.0,258
929e14a32067752087a8c7ff1e0898a95502d0b2,import org.springframework.expression.Expression;,0,0,0.0,259
929e14a32067752087a8c7ff1e0898a95502d0b2,import java.util.stream.Collectors;,0,0,0.0,260
929e14a32067752087a8c7ff1e0898a95502d0b2,return (StringUtils.hasText(channelName) ? channelName : null);,1,0,0.0,261
929e14a32067752087a8c7ff1e0898a95502d0b2,return ExpressionSource.DEFAULT_EXCEPTION_VARIABLE_NAME;,1,0,0.0,262
929e14a32067752087a8c7ff1e0898a95502d0b2,return ExpressionSource.DEFAULT_RETURN_VALUE_VARIABLE_NAME;,1,0,0.0,263
929e14a32067752087a8c7ff1e0898a95502d0b2,return annotation.returnValueVariableName();,1,0,0.0,264
929e14a32067752087a8c7ff1e0898a95502d0b2,return ExpressionSource.DEFAULT_ARGUMENT_MAP_VARIABLE_NAME;,1,0,0.0,265
929e14a32067752087a8c7ff1e0898a95502d0b2,return annotation.argumentMapVariableName();,1,0,0.0,266
929e14a32067752087a8c7ff1e0898a95502d0b2,return this.parameterNameDiscoverer.getParameterNames(method);,1,0,0.0,267
929e14a32067752087a8c7ff1e0898a95502d0b2,"return StringUtils.tokenizeToStringArray(argNameList, "","");",1,0,0.0,268
929e14a32067752087a8c7ff1e0898a95502d0b2,return ExpressionSource.DEFAULT_METHOD_NAME_VARIABLE_NAME;,1,0,0.0,269
929e14a32067752087a8c7ff1e0898a95502d0b2,return annotation.methodNameVariableName();,1,0,0.0,270
929e14a32067752087a8c7ff1e0898a95502d0b2,return (StringUtils.hasText(channelName) ? channelName : null);,0,0,0.0,271
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.state("""".equals(AnnotationUtils.getValue(currentAnnotation)),",0,0,0.0,272
929e14a32067752087a8c7ff1e0898a95502d0b2,return payloadExpression;,0,0,0.0,273
929e14a32067752087a8c7ff1e0898a95502d0b2,import org.springframework.core.annotation.MergedAnnotations;,0,0,0.0,274
929e14a32067752087a8c7ff1e0898a95502d0b2,@Deprecated,0,0,0.0,275
929e14a32067752087a8c7ff1e0898a95502d0b2,import org.springframework.core.annotation.MergedAnnotation;,0,0,0.0,276
929e14a32067752087a8c7ff1e0898a95502d0b2,import java.lang.reflect.AnnotatedElement;,0,0,0.0,277
929e14a32067752087a8c7ff1e0898a95502d0b2,return headerExpressions;,1,0,0.0,278
929e14a32067752087a8c7ff1e0898a95502d0b2,"headerExpressions.put(name,",1,0,0.0,279
929e14a32067752087a8c7ff1e0898a95502d0b2,return payloadExpression;,1,0,0.0,280
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.isTrue(!void.class.equals(method.getReturnType()),",1,0,0.0,281
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.state("""".equals(AnnotationUtils.getValue(currentAnnotation)),",1,0,0.0,282
929e14a32067752087a8c7ff1e0898a95502d0b2,"""either at method-level or on a single parameter"");",1,0,0.0,283
929e14a32067752087a8c7ff1e0898a95502d0b2,"Assert.state(payloadExpression == null,",1,0,0.0,284
929e14a32067752087a8c7ff1e0898a95502d0b2,return (StringUtils.hasText(channelName) ? channelName : null);,1,0,0.0,285
929e14a32067752087a8c7ff1e0898a95502d0b2,this(Collections.<Class<? extends Annotation>>singleton(Publisher.class));,1,0,0.0,286
929e14a32067752087a8c7ff1e0898a95502d0b2,".collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().getExpressionString()));",0,0,0.0,287
929e14a32067752087a8c7ff1e0898a95502d0b2,.stream(),0,0,0.0,288
929e14a32067752087a8c7ff1e0898a95502d0b2,.entrySet(),0,0,0.0,289
929e14a32067752087a8c7ff1e0898a95502d0b2,return getExpressionsForHeaders(method),0,0,0.0,290
929e14a32067752087a8c7ff1e0898a95502d0b2,return headerExpressions;,0,0,0.0,291
929e14a32067752087a8c7ff1e0898a95502d0b2,"headerExpressions.put(name,",0,0,0.0,292
929e14a32067752087a8c7ff1e0898a95502d0b2,.getExpressionString();,0,0,0.0,293
929e14a32067752087a8c7ff1e0898a95502d0b2,return getExpressionForPayload(method),0,0,0.0,294
929e14a32067752087a8c7ff1e0898a95502d0b2,"AnnotationUtils.getValue(annotation, attributeName);",1,0,0.0,295
