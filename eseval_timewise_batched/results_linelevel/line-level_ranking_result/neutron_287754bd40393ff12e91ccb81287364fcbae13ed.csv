commit_id,line,line_level_label,count,line_score,row
287754bd40393ff12e91ccb81287364fcbae13ed,from neutron.agent.metadata import config,0,1,1.0,1
287754bd40393ff12e91ccb81287364fcbae13ed,EGID = 456,1,1,1.0,2
287754bd40393ff12e91ccb81287364fcbae13ed,cfg.CONF.register_opts(metadata_driver.MetadataDriver.OPTS),1,1,1.0,3
287754bd40393ff12e91ccb81287364fcbae13ed,bind_v6_line = 'bind %s:%s interface %s' % (,0,1,1.0,4
287754bd40393ff12e91ccb81287364fcbae13ed,agent = l3_agent.L3NATAgent('localhost'),0,1,1.0,5
287754bd40393ff12e91ccb81287364fcbae13ed,from neutron.agent.common import config as agent_config,1,1,1.0,6
287754bd40393ff12e91ccb81287364fcbae13ed,agent = l3_agent.L3NATAgent('localhost'),1,1,1.0,7
287754bd40393ff12e91ccb81287364fcbae13ed,EUID = 123,1,1,1.0,8
287754bd40393ff12e91ccb81287364fcbae13ed,agent = l3_agent.L3NATAgent('localhost'),0,1,1.0,9
287754bd40393ff12e91ccb81287364fcbae13ed,"config = metadata_driver.HaproxyConfigurator(mock.ANY, mock.ANY,",0,1,1.0,10
287754bd40393ff12e91ccb81287364fcbae13ed,from neutron.agent.l3 import config as l3_config,1,1,1.0,11
287754bd40393ff12e91ccb81287364fcbae13ed,from neutron.conf.agent.l3 import config as l3_config,0,1,1.0,12
287754bd40393ff12e91ccb81287364fcbae13ed,from neutron.agent.linux import ip_lib,0,0,0.0,13
287754bd40393ff12e91ccb81287364fcbae13ed,"self._test_spawn_metadata_proxy(str(self.EUID), 'group', group='group')",1,0,0.0,14
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy_with_gid(self):,1,0,0.0,15
287754bd40393ff12e91ccb81287364fcbae13ed,"self._test_spawn_metadata_proxy(str(self.EUID), '654', group='654')",1,0,0.0,16
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy(self):,1,0,0.0,17
287754bd40393ff12e91ccb81287364fcbae13ed,"self._test_spawn_metadata_proxy(str(self.EUID), str(self.EGID))",1,0,0.0,18
287754bd40393ff12e91ccb81287364fcbae13ed,from neutron.conf.agent import common as agent_config,0,0,0.0,19
287754bd40393ff12e91ccb81287364fcbae13ed,mock.patch('neutron.agent.l3.namespace_manager.',0,0,0.0,20
287754bd40393ff12e91ccb81287364fcbae13ed,"'NamespaceManager.list_all', return_value={}),\",0,0,0.0,21
287754bd40393ff12e91ccb81287364fcbae13ed,'delete_ip_address') as mock_del:,0,0,0.0,22
287754bd40393ff12e91ccb81287364fcbae13ed,METADATA_DEFAULT_IPV6 = 'fe80::a9fe:a9fe',0,0,0.0,23
287754bd40393ff12e91ccb81287364fcbae13ed,"def _test_spawn_metadata_proxy(self, dad_failed=False):",0,0,0.0,24
287754bd40393ff12e91ccb81287364fcbae13ed,"'IpAddrCommand.wait_until_address_ready') as mock_wait,\",0,0,0.0,25
287754bd40393ff12e91ccb81287364fcbae13ed,mock.patch(,0,0,0.0,26
287754bd40393ff12e91ccb81287364fcbae13ed,'neutron.agent.linux.ip_lib.',0,0,0.0,27
287754bd40393ff12e91ccb81287364fcbae13ed,"'321', str(self.EGID), user='321', watch_log=False)",1,0,0.0,28
287754bd40393ff12e91ccb81287364fcbae13ed,agent.process_monitor = mock.Mock(),0,0,0.0,29
287754bd40393ff12e91ccb81287364fcbae13ed,if dad_failed:,0,0,0.0,30
287754bd40393ff12e91ccb81287364fcbae13ed,mock_wait.side_effect = ip_lib.DADFailed(,0,0,0.0,31
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy_with_group(self):,1,0,0.0,32
287754bd40393ff12e91ccb81287364fcbae13ed,"self.EUNAME, str(self.EGID), user=self.EUNAME)",1,0,0.0,33
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy_with_nonagent_uid(self):,1,0,0.0,34
287754bd40393ff12e91ccb81287364fcbae13ed,"str(self.EUID), str(self.EGID), user=str(self.EUID))",1,0,0.0,35
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.ANY,",1,0,0.0,36
287754bd40393ff12e91ccb81287364fcbae13ed,"'--router_id=%s' % router_id,",1,0,0.0,37
287754bd40393ff12e91ccb81287364fcbae13ed,"'--metadata_port=%s' % metadata_port,",1,0,0.0,38
287754bd40393ff12e91ccb81287364fcbae13ed,"'--metadata_proxy_user=%s' % expected_user,",1,0,0.0,39
287754bd40393ff12e91ccb81287364fcbae13ed,"'--metadata_proxy_group=%s' % expected_group,",1,0,0.0,40
287754bd40393ff12e91ccb81287364fcbae13ed,"'--debug',",1,0,0.0,41
287754bd40393ff12e91ccb81287364fcbae13ed,'--log-file=neutron-ns-metadata-proxy-%s.log' %,1,0,0.0,42
287754bd40393ff12e91ccb81287364fcbae13ed,router_id],1,0,0.0,43
287754bd40393ff12e91ccb81287364fcbae13ed,if not watch_log:,1,0,0.0,44
287754bd40393ff12e91ccb81287364fcbae13ed,netns_execute_args.append(,1,0,0.0,45
287754bd40393ff12e91ccb81287364fcbae13ed,'--nometadata_proxy_watch_log'),1,0,0.0,46
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy_with_agent_user(self):,1,0,0.0,47
287754bd40393ff12e91ccb81287364fcbae13ed,self._test_spawn_metadata_proxy(,1,0,0.0,48
287754bd40393ff12e91ccb81287364fcbae13ed,else:,0,0,0.0,49
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy_with_nonagent_user(self):,1,0,0.0,50
287754bd40393ff12e91ccb81287364fcbae13ed,"'notneutron', str(self.EGID), user='notneutron', watch_log=False)",1,0,0.0,51
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy_with_agent_uid(self):,1,0,0.0,52
287754bd40393ff12e91ccb81287364fcbae13ed,"address=self.METADATA_DEFAULT_IP, reason='DAD failed')",0,0,0.0,53
287754bd40393ff12e91ccb81287364fcbae13ed,"self.METADATA_DEFAULT_IPV6, self.METADATA_PORT, 'fake-if')",0,0,0.0,54
287754bd40393ff12e91ccb81287364fcbae13ed,mock_wait.return_value = True,0,0,0.0,55
287754bd40393ff12e91ccb81287364fcbae13ed,'bind_v6_line': ''},1,0,0.0,56
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy(self):,0,0,0.0,57
287754bd40393ff12e91ccb81287364fcbae13ed,self._test_spawn_metadata_proxy(),0,0,0.0,58
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy_dad_failed(self):,0,0,0.0,59
287754bd40393ff12e91ccb81287364fcbae13ed,self._test_spawn_metadata_proxy(dad_failed=True),0,0,0.0,60
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy(self):,1,0,0.0,61
287754bd40393ff12e91ccb81287364fcbae13ed,'IpAddrCommand.wait_until_address_ready') as mock_wait:,1,0,0.0,62
287754bd40393ff12e91ccb81287364fcbae13ed,mock_wait.return_value = True,1,0,0.0,63
287754bd40393ff12e91ccb81287364fcbae13ed,router_id=router_id),1,0,0.0,64
287754bd40393ff12e91ccb81287364fcbae13ed,mock_open.assert_has_calls([,1,0,0.0,65
287754bd40393ff12e91ccb81287364fcbae13ed,"router_id=router_id,",0,0,0.0,66
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call(cfg_file, 'w'),",1,0,0.0,67
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call().write(cfg_contents)],",1,0,0.0,68
287754bd40393ff12e91ccb81287364fcbae13ed,any_order=True),1,0,0.0,69
287754bd40393ff12e91ccb81287364fcbae13ed,env = {ep.PROCESS_TAG: service_name + '-' + router_id},1,0,0.0,70
287754bd40393ff12e91ccb81287364fcbae13ed,ip_mock.assert_has_calls([,1,0,0.0,71
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call(namespace=router_ns),",1,0,0.0,72
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call().netns.execute(netns_execute_args, addl_env=env,",1,0,0.0,73
287754bd40393ff12e91ccb81287364fcbae13ed,run_as_root=True),1,0,0.0,74
287754bd40393ff12e91ccb81287364fcbae13ed,mock_del.assert_not_called(),0,0,0.0,75
287754bd40393ff12e91ccb81287364fcbae13ed,mock.ANY),0,0,0.0,76
287754bd40393ff12e91ccb81287364fcbae13ed,"router_id, metadata_driver.METADATA_SERVICE_NAME,",0,0,0.0,77
287754bd40393ff12e91ccb81287364fcbae13ed,agent.process_monitor.register.assert_called_once_with(,0,0,0.0,78
287754bd40393ff12e91ccb81287364fcbae13ed,"bind_address_v6=self.METADATA_DEFAULT_IPV6,",0,0,0.0,79
287754bd40393ff12e91ccb81287364fcbae13ed,bind_interface='fake-if'),0,0,0.0,80
287754bd40393ff12e91ccb81287364fcbae13ed,"metadata_port,",1,0,0.0,81
287754bd40393ff12e91ccb81287364fcbae13ed,'bind_v6_line': bind_v6_line},0,0,0.0,82
287754bd40393ff12e91ccb81287364fcbae13ed,agent.process_monitor.register.assert_not_called(),0,0,0.0,83
287754bd40393ff12e91ccb81287364fcbae13ed,"mock_del.assert_called_once_with(self.METADATA_DEFAULT_IPV6,",0,0,0.0,84
287754bd40393ff12e91ccb81287364fcbae13ed,"'fake-if',",0,0,0.0,85
287754bd40393ff12e91ccb81287364fcbae13ed,namespace=router_ns),0,0,0.0,86
287754bd40393ff12e91ccb81287364fcbae13ed,mock_open.assert_has_calls([,0,0,0.0,87
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call(cfg_file, 'w'),",0,0,0.0,88
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call().write(cfg_contents)], any_order=True)",0,0,0.0,89
287754bd40393ff12e91ccb81287364fcbae13ed,env = {ep.PROCESS_TAG: service_name + '-' + router_id},0,0,0.0,90
287754bd40393ff12e91ccb81287364fcbae13ed,ip_mock.assert_has_calls([,0,0,0.0,91
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call(namespace=router_ns),",0,0,0.0,92
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call().netns.execute(netns_execute_args, addl_env=env,",0,0,0.0,93
287754bd40393ff12e91ccb81287364fcbae13ed,run_as_root=True),0,0,0.0,94
287754bd40393ff12e91ccb81287364fcbae13ed,]),0,0,0.0,95
287754bd40393ff12e91ccb81287364fcbae13ed,"'neutron-ns-metadata-proxy',",1,0,0.0,96
287754bd40393ff12e91ccb81287364fcbae13ed,"cfg.CONF.set_override('log_file', 'test.log')",1,0,0.0,97
287754bd40393ff12e91ccb81287364fcbae13ed,mock.patch(ip_class_path) as ip_mock:,1,0,0.0,98
287754bd40393ff12e91ccb81287364fcbae13ed,"""%s.conf"" % router_id)",0,0,0.0,99
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.patch('pwd.getpwnam',",0,0,0.0,100
287754bd40393ff12e91ccb81287364fcbae13ed,"return_value=test_utils.FakeUser(self.EUNAME)),\",0,0,0.0,101
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.patch('grp.getgrnam',",0,0,0.0,102
287754bd40393ff12e91ccb81287364fcbae13ed,"return_value=test_utils.FakeGroup(self.EGNAME)),\",0,0,0.0,103
287754bd40393ff12e91ccb81287364fcbae13ed,mock.patch('os.makedirs'):,0,0,0.0,104
287754bd40393ff12e91ccb81287364fcbae13ed,cfg_file = os.path.join(,0,0,0.0,105
287754bd40393ff12e91ccb81287364fcbae13ed,metadata_driver.HaproxyConfigurator.get_config_path(,0,0,0.0,106
287754bd40393ff12e91ccb81287364fcbae13ed,"agent.conf.state_path),",0,0,0.0,107
287754bd40393ff12e91ccb81287364fcbae13ed,mock_open = self.useFixture(,0,0,0.0,108
287754bd40393ff12e91ccb81287364fcbae13ed,"'res_type': 'Router',",0,0,0.0,109
287754bd40393ff12e91ccb81287364fcbae13ed,tools.OpenFixture(cfg_file)).mock_open,0,0,0.0,110
287754bd40393ff12e91ccb81287364fcbae13ed,"self.METADATA_PORT,",0,0,0.0,111
287754bd40393ff12e91ccb81287364fcbae13ed,"'haproxy',",0,0,0.0,112
287754bd40393ff12e91ccb81287364fcbae13ed,"'-f', cfg_file]",0,0,0.0,113
287754bd40393ff12e91ccb81287364fcbae13ed,cfg_contents = metadata_driver._HAPROXY_CONFIG_TEMPLATE % {,0,0,0.0,114
287754bd40393ff12e91ccb81287364fcbae13ed,"'user': self.EUNAME,",0,0,0.0,115
287754bd40393ff12e91ccb81287364fcbae13ed,"'group': self.EGNAME,",0,0,0.0,116
287754bd40393ff12e91ccb81287364fcbae13ed,"'port': self.METADATA_PORT,",0,0,0.0,117
287754bd40393ff12e91ccb81287364fcbae13ed,"return_value=self.PIDFILE),\",0,0,0.0,118
287754bd40393ff12e91ccb81287364fcbae13ed,"'ProcessManager.get_pid_file_name',",0,0,0.0,119
287754bd40393ff12e91ccb81287364fcbae13ed,'neutron.agent.linux.external_process.',0,0,0.0,120
287754bd40393ff12e91ccb81287364fcbae13ed,mock.patch(,0,0,0.0,121
287754bd40393ff12e91ccb81287364fcbae13ed,cfg.CONF.register_opts(config.SHARED_OPTS),0,0,0.0,122
287754bd40393ff12e91ccb81287364fcbae13ed,cfg.CONF.register_opts(config.DRIVER_OPTS),0,0,0.0,123
287754bd40393ff12e91ccb81287364fcbae13ed,agent_config.register_use_namespaces_opts_helper(cfg.CONF),1,0,0.0,124
287754bd40393ff12e91ccb81287364fcbae13ed,"l3_config.register_l3_agent_config_opts(l3_config.OPTS, cfg.CONF)",0,0,0.0,125
287754bd40393ff12e91ccb81287364fcbae13ed,cfg.CONF.register_opts(l3_config.OPTS),1,0,0.0,126
287754bd40393ff12e91ccb81287364fcbae13ed,import os,0,0,0.0,127
287754bd40393ff12e91ccb81287364fcbae13ed,from neutron.tests import tools,0,0,0.0,128
287754bd40393ff12e91ccb81287364fcbae13ed,from neutron.tests.unit.agent.linux import test_utils,0,0,0.0,129
287754bd40393ff12e91ccb81287364fcbae13ed,EGNAME = 'neutron',0,0,0.0,130
287754bd40393ff12e91ccb81287364fcbae13ed,METADATA_PORT = 8080,0,0,0.0,131
287754bd40393ff12e91ccb81287364fcbae13ed,METADATA_SOCKET = '/socket/path',0,0,0.0,132
287754bd40393ff12e91ccb81287364fcbae13ed,PIDFILE = 'pidfile',0,0,0.0,133
287754bd40393ff12e91ccb81287364fcbae13ed,def test_spawn_metadata_proxy(self):,0,0,0.0,134
287754bd40393ff12e91ccb81287364fcbae13ed,"cfg.CONF.set_override('metadata_proxy_user', self.EUNAME)",0,0,0.0,135
287754bd40393ff12e91ccb81287364fcbae13ed,"cfg.CONF.set_override('metadata_proxy_group', self.EGNAME)",0,0,0.0,136
287754bd40393ff12e91ccb81287364fcbae13ed,"cfg.CONF.set_override('metadata_proxy_socket', self.METADATA_SOCKET)",0,0,0.0,137
287754bd40393ff12e91ccb81287364fcbae13ed,"with mock.patch(ip_class_path) as ip_mock,\",0,0,0.0,138
287754bd40393ff12e91ccb81287364fcbae13ed,"'unix_socket_path': self.METADATA_SOCKET,",0,0,0.0,139
287754bd40393ff12e91ccb81287364fcbae13ed,"'res_id': router_id,",0,0,0.0,140
287754bd40393ff12e91ccb81287364fcbae13ed,"side_effect=fake_is_effective_user),\",1,0,0.0,141
287754bd40393ff12e91ccb81287364fcbae13ed,"def _test_spawn_metadata_proxy(self, expected_user, expected_group,",1,0,0.0,142
287754bd40393ff12e91ccb81287364fcbae13ed,'python neutron-ns-metadata-proxy'),0,0,0.0,143
287754bd40393ff12e91ccb81287364fcbae13ed,(agent.metadata_driver,0,0,0.0,144
287754bd40393ff12e91ccb81287364fcbae13ed,._migrate_python_ns_metadata_proxy_if_needed(mock_pm)),0,0,0.0,145
287754bd40393ff12e91ccb81287364fcbae13ed,mock_pm.disable.assert_called_once_with(),0,0,0.0,146
287754bd40393ff12e91ccb81287364fcbae13ed,def test__migrate_python_ns_metadata_proxy_if_needed_not_called(self):,0,0,0.0,147
287754bd40393ff12e91ccb81287364fcbae13ed,'haproxy -f foo.cfg'),0,0,0.0,148
287754bd40393ff12e91ccb81287364fcbae13ed,mock_pm.disable.assert_not_called(),0,0,0.0,149
287754bd40393ff12e91ccb81287364fcbae13ed,"meta_conf.register_meta_conf_opts(meta_conf.DRIVER_OPTS, cfg.CONF)",1,0,0.0,150
287754bd40393ff12e91ccb81287364fcbae13ed,"user='', group='', watch_log=True):",1,0,0.0,151
287754bd40393ff12e91ccb81287364fcbae13ed,"'pidfile': self.PIDFILE,",0,0,0.0,152
287754bd40393ff12e91ccb81287364fcbae13ed,metadata_port = 8080,1,0,0.0,153
287754bd40393ff12e91ccb81287364fcbae13ed,is_effective_user = 'neutron.agent.linux.utils.is_effective_user',1,0,0.0,154
287754bd40393ff12e91ccb81287364fcbae13ed,"fake_is_effective_user = lambda x: x in [self.EUNAME, str(self.EUID)]",1,0,0.0,155
287754bd40393ff12e91ccb81287364fcbae13ed,"cfg.CONF.set_override('metadata_proxy_user', user)",1,0,0.0,156
287754bd40393ff12e91ccb81287364fcbae13ed,"cfg.CONF.set_override('metadata_proxy_group', group)",1,0,0.0,157
287754bd40393ff12e91ccb81287364fcbae13ed,"with mock.patch('os.geteuid', return_value=self.EUID),\",1,0,0.0,158
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.patch('os.getegid', return_value=self.EGID),\",1,0,0.0,159
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.patch(is_effective_user,",1,0,0.0,160
287754bd40393ff12e91ccb81287364fcbae13ed,mock_pm.cmdline = (,0,0,0.0,161
287754bd40393ff12e91ccb81287364fcbae13ed,as mock_pm:,0,0,0.0,162
287754bd40393ff12e91ccb81287364fcbae13ed,'neutron.agent.linux.external_process.ProcessManager')\,0,0,0.0,163
287754bd40393ff12e91ccb81287364fcbae13ed,with mock.patch(,0,0,0.0,164
287754bd40393ff12e91ccb81287364fcbae13ed,'log_level': 'debug'},0,0,0.0,165
287754bd40393ff12e91ccb81287364fcbae13ed,mock_open.assert_has_calls([,0,0,0.0,166
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call(cfg_file, 'w'),",0,0,0.0,167
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.call().write(cfg_contents)],",0,0,0.0,168
287754bd40393ff12e91ccb81287364fcbae13ed,any_order=True),0,0,0.0,169
287754bd40393ff12e91ccb81287364fcbae13ed,def test_create_config_file_wrong_user(self):,0,0,0.0,170
287754bd40393ff12e91ccb81287364fcbae13ed,"with mock.patch('pwd.getpwnam', side_effect=KeyError):",0,0,0.0,171
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.ANY, mock.ANY,",0,0,0.0,172
287754bd40393ff12e91ccb81287364fcbae13ed,"self.EUNAME,",0,0,0.0,173
287754bd40393ff12e91ccb81287364fcbae13ed,"self.EGNAME,",0,0,0.0,174
287754bd40393ff12e91ccb81287364fcbae13ed,"mock.ANY, mock.ANY)",0,0,0.0,175
287754bd40393ff12e91ccb81287364fcbae13ed,"self.assertRaises(metadata_driver.InvalidUserOrGroupException,",0,0,0.0,176
287754bd40393ff12e91ccb81287364fcbae13ed,config.create_config_file),0,0,0.0,177
287754bd40393ff12e91ccb81287364fcbae13ed,def test_create_config_file_wrong_group(self):,0,0,0.0,178
287754bd40393ff12e91ccb81287364fcbae13ed,"with mock.patch('grp.getgrnam', side_effect=KeyError),\",0,0,0.0,179
287754bd40393ff12e91ccb81287364fcbae13ed,return_value=test_utils.FakeUser(self.EUNAME)):,0,0,0.0,180
287754bd40393ff12e91ccb81287364fcbae13ed,def test__migrate_python_ns_metadata_proxy_if_needed(self):,0,0,0.0,181
287754bd40393ff12e91ccb81287364fcbae13ed,]),1,0,0.0,182
