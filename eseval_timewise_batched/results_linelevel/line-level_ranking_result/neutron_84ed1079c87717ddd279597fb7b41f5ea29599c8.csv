commit_id,line,line_level_label,count,line_score,row
84ed1079c87717ddd279597fb7b41f5ea29599c8,qclient = client.Client(,1,3,1.0,1
84ed1079c87717ddd279597fb7b41f5ea29599c8,internal_ports = self._get_ports_from_server(router_id=router_id),0,2,0.6666666666666666,2
84ed1079c87717ddd279597fb7b41f5ea29599c8,internal_ports = qclient.list_ports(,0,2,0.6666666666666666,3
84ed1079c87717ddd279597fb7b41f5ea29599c8,internal_ports = qclient.list_ports(,1,2,0.6666666666666666,4
84ed1079c87717ddd279597fb7b41f5ea29599c8,qclient = self._get_neutron_client(),1,2,0.6666666666666666,5
84ed1079c87717ddd279597fb7b41f5ea29599c8,ports = client.list_ports(**filters),0,2,0.6666666666666666,6
84ed1079c87717ddd279597fb7b41f5ea29599c8,client = self._get_neutron_client(),0,2,0.6666666666666666,7
84ed1079c87717ddd279597fb7b41f5ea29599c8,return qclient,1,2,0.6666666666666666,8
84ed1079c87717ddd279597fb7b41f5ea29599c8,"""""""Either get ports from server by RPC or fallback to neutron client""""""",0,2,0.6666666666666666,9
84ed1079c87717ddd279597fb7b41f5ea29599c8,internal_ports = qclient.list_ports(,1,2,0.6666666666666666,10
84ed1079c87717ddd279597fb7b41f5ea29599c8,"ports = self._get_ports(remote_address, network_id, router_id)",0,2,0.6666666666666666,11
84ed1079c87717ddd279597fb7b41f5ea29599c8,qclient = self._get_neutron_client(),0,2,0.6666666666666666,12
84ed1079c87717ddd279597fb7b41f5ea29599c8,"""""""Get list of ports that has given ip address and are part of",0,2,0.6666666666666666,13
84ed1079c87717ddd279597fb7b41f5ea29599c8,ports = qclient.list_ports(,1,2,0.6666666666666666,14
84ed1079c87717ddd279597fb7b41f5ea29599c8,filters = {},0,1,0.3333333333333333,15
84ed1079c87717ddd279597fb7b41f5ea29599c8,"return self._get_ports_from_server(networks=networks,",0,1,0.3333333333333333,16
84ed1079c87717ddd279597fb7b41f5ea29599c8,filters['network_id'] = networks,0,1,0.3333333333333333,17
84ed1079c87717ddd279597fb7b41f5ea29599c8,filters['fixed_ips'] = {'ip_address': [ip_address]},0,1,0.3333333333333333,18
84ed1079c87717ddd279597fb7b41f5ea29599c8,filters['device_owner'] = [,0,1,0.3333333333333333,19
84ed1079c87717ddd279597fb7b41f5ea29599c8,filters['device_id'] = [router_id],0,1,0.3333333333333333,20
84ed1079c87717ddd279597fb7b41f5ea29599c8,self.use_rpc = False,0,1,0.3333333333333333,21
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def _get_port_filters(self, router_id=None, ip_address=None,",0,1,0.3333333333333333,22
84ed1079c87717ddd279597fb7b41f5ea29599c8,return self._get_ports_using_client(filters),0,1,0.3333333333333333,23
84ed1079c87717ddd279597fb7b41f5ea29599c8,"return self.plugin_rpc.get_ports(self.context, filters)",0,1,0.3333333333333333,24
84ed1079c87717ddd279597fb7b41f5ea29599c8,"filters = self._get_port_filters(router_id, ip_address, networks)",0,1,0.3333333333333333,25
84ed1079c87717ddd279597fb7b41f5ea29599c8,# reformat filters for neutron client,0,1,0.3333333333333333,26
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def _get_ports_using_client(self, filters):",0,1,0.3333333333333333,27
84ed1079c87717ddd279597fb7b41f5ea29599c8,networks = set(networks),1,1,0.3333333333333333,28
84ed1079c87717ddd279597fb7b41f5ea29599c8,filters['device_id'] = filters['device_id'][0],0,1,0.3333333333333333,29
84ed1079c87717ddd279597fb7b41f5ea29599c8,filters['fixed_ips'] = [,0,1,0.3333333333333333,30
84ed1079c87717ddd279597fb7b41f5ea29599c8,self.auth_info = client.get_auth_info(),0,1,0.3333333333333333,31
84ed1079c87717ddd279597fb7b41f5ea29599c8,return ports['ports'],0,1,0.3333333333333333,32
84ed1079c87717ddd279597fb7b41f5ea29599c8,self.auth_info = qclient.get_auth_info(),1,1,0.3333333333333333,33
84ed1079c87717ddd279597fb7b41f5ea29599c8,all_ports = qclient.list_ports(,1,1,0.3333333333333333,34
84ed1079c87717ddd279597fb7b41f5ea29599c8,self.use_rpc = True,0,1,0.3333333333333333,35
84ed1079c87717ddd279597fb7b41f5ea29599c8,return [p for p in all_ports if p['network_id'] in networks],1,1,0.3333333333333333,36
84ed1079c87717ddd279597fb7b41f5ea29599c8,params = {,0,1,0.3333333333333333,37
84ed1079c87717ddd279597fb7b41f5ea29599c8,params['endpoint_url'] = self.conf.endpoint_url,0,1,0.3333333333333333,38
84ed1079c87717ddd279597fb7b41f5ea29599c8,params['endpoint_url'] = self.auth_info.get('endpoint_url'),0,1,0.3333333333333333,39
84ed1079c87717ddd279597fb7b41f5ea29599c8,params['endpoint_type'] = self.conf.endpoint_type,0,1,0.3333333333333333,40
84ed1079c87717ddd279597fb7b41f5ea29599c8,return client.Client(**params),0,1,0.3333333333333333,41
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def _get_ports_from_server(self, router_id=None, ip_address=None,",0,1,0.3333333333333333,42
84ed1079c87717ddd279597fb7b41f5ea29599c8,return filters,0,1,0.3333333333333333,43
84ed1079c87717ddd279597fb7b41f5ea29599c8,self.context = context.get_admin_context_without_session(),0,1,0.3333333333333333,44
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def _get_instance_and_tenant_id(self, req):",0,1,0.3333333333333333,45
84ed1079c87717ddd279597fb7b41f5ea29599c8,self.plugin_rpc = MetadataPluginAPI(topics.PLUGIN),0,1,0.3333333333333333,46
84ed1079c87717ddd279597fb7b41f5ea29599c8,self._cache = cache.get_cache(self.conf.cache_url),0,1,0.3333333333333333,47
84ed1079c87717ddd279597fb7b41f5ea29599c8,self._cache = False,0,1,0.3333333333333333,48
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def _get_router_networks(self, router_id):",0,1,0.3333333333333333,49
84ed1079c87717ddd279597fb7b41f5ea29599c8,return tuple(p['network_id'] for p in internal_ports),0,1,0.3333333333333333,50
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def _get_ports_for_remote_address(self, remote_address, networks):",0,1,0.3333333333333333,51
84ed1079c87717ddd279597fb7b41f5ea29599c8,return qclient.list_ports(,0,1,0.3333333333333333,52
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def _get_ports(self, remote_address, network_id=None, router_id=None):",0,1,0.3333333333333333,53
84ed1079c87717ddd279597fb7b41f5ea29599c8,"""""""Search for all ports that contain passed ip address and belongs to",0,1,0.3333333333333333,54
84ed1079c87717ddd279597fb7b41f5ea29599c8,If no network is passed ports are searched on all networks connected to,0,1,0.3333333333333333,55
84ed1079c87717ddd279597fb7b41f5ea29599c8,"networks = (network_id,)",0,1,0.3333333333333333,56
84ed1079c87717ddd279597fb7b41f5ea29599c8,networks = self._get_router_networks(router_id),0,1,0.3333333333333333,57
84ed1079c87717ddd279597fb7b41f5ea29599c8,"return self._get_ports_for_remote_address(remote_address, networks)",0,1,0.3333333333333333,58
84ed1079c87717ddd279597fb7b41f5ea29599c8,:param networks: list of networks in which the ip address will be,0,1,0.3333333333333333,59
84ed1079c87717ddd279597fb7b41f5ea29599c8,remote_address = req.headers.get('X-Forwarded-For'),0,1,0.3333333333333333,60
84ed1079c87717ddd279597fb7b41f5ea29599c8,networks = [network_id],1,1,0.3333333333333333,61
84ed1079c87717ddd279597fb7b41f5ea29599c8,"return self.call(context,",0,1,0.3333333333333333,62
84ed1079c87717ddd279597fb7b41f5ea29599c8,network_id = req.headers.get('X-Neutron-Network-ID'),0,1,0.3333333333333333,63
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def __init__(self, topic):",0,1,0.3333333333333333,64
84ed1079c87717ddd279597fb7b41f5ea29599c8,BASE_RPC_API_VERSION = '1.0',0,1,0.3333333333333333,65
84ed1079c87717ddd279597fb7b41f5ea29599c8,networks = [p['network_id'] for p in internal_ports],1,1,0.3333333333333333,66
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def get_ports(self, context, filters):",0,1,0.3333333333333333,67
84ed1079c87717ddd279597fb7b41f5ea29599c8,network_id = req.headers.get('X-Neutron-Network-ID'),1,1,0.3333333333333333,68
84ed1079c87717ddd279597fb7b41f5ea29599c8,remote_address = req.headers.get('X-Forwarded-For'),1,1,0.3333333333333333,69
84ed1079c87717ddd279597fb7b41f5ea29599c8,"def _get_instance_and_tenant_id(self, req):",1,1,0.3333333333333333,70
84ed1079c87717ddd279597fb7b41f5ea29599c8,router_id = req.headers.get('X-Neutron-Router-ID'),0,1,0.3333333333333333,71
84ed1079c87717ddd279597fb7b41f5ea29599c8,router_id = req.headers.get('X-Neutron-Router-ID'),1,1,0.3333333333333333,72
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'auth_strategy': self.conf.auth_strategy,",0,0,0.0,73
84ed1079c87717ddd279597fb7b41f5ea29599c8,'ip_address=%s' % filters['fixed_ips']['ip_address'][0]],0,0,0.0,74
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'tenant_name': self.conf.admin_tenant_name,",0,0,0.0,75
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'password': self.conf.admin_password,",0,0,0.0,76
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'username': self.conf.admin_user,",0,0,0.0,77
84ed1079c87717ddd279597fb7b41f5ea29599c8,fixed_ips=['ip_address=%s' % remote_address])['ports'],1,0,0.0,78
84ed1079c87717ddd279597fb7b41f5ea29599c8,n_const.DEVICE_OWNER_DVR_INTERFACE])['ports'],1,0,0.0,79
84ed1079c87717ddd279597fb7b41f5ea29599c8,"device_owner=[n_const.DEVICE_OWNER_ROUTER_INTF,",1,0,0.0,80
84ed1079c87717ddd279597fb7b41f5ea29599c8,"device_id=router_id,",1,0,0.0,81
84ed1079c87717ddd279597fb7b41f5ea29599c8,ip_address=remote_address),0,0,0.0,82
84ed1079c87717ddd279597fb7b41f5ea29599c8,if 'fixed_ips' in filters:,0,0,0.0,83
84ed1079c87717ddd279597fb7b41f5ea29599c8,if 'device_id' in filters:,0,0,0.0,84
84ed1079c87717ddd279597fb7b41f5ea29599c8,if networks:,0,0,0.0,85
84ed1079c87717ddd279597fb7b41f5ea29599c8,if ip_address:,0,0,0.0,86
84ed1079c87717ddd279597fb7b41f5ea29599c8,'fallback to using neutron client')),0,0,0.0,87
84ed1079c87717ddd279597fb7b41f5ea29599c8,n_const.DEVICE_OWNER_DVR_INTERFACE],0,0,0.0,88
84ed1079c87717ddd279597fb7b41f5ea29599c8,"n_const.DEVICE_OWNER_ROUTER_INTF,",0,0,0.0,89
84ed1079c87717ddd279597fb7b41f5ea29599c8,if router_id:,0,0,0.0,90
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'auth_url': self.conf.auth_url,",0,0,0.0,91
84ed1079c87717ddd279597fb7b41f5ea29599c8,"token=self.auth_info.get('auth_token'),",1,0,0.0,92
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'region_name': self.conf.auth_region,",0,0,0.0,93
84ed1079c87717ddd279597fb7b41f5ea29599c8,"auth_url=self.conf.auth_url,",1,0,0.0,94
84ed1079c87717ddd279597fb7b41f5ea29599c8,# to work fine with metadata agent (K or L release at most),0,0,0.0,95
84ed1079c87717ddd279597fb7b41f5ea29599c8,endpoint_type=self.conf.endpoint_type,1,0,0.0,96
84ed1079c87717ddd279597fb7b41f5ea29599c8,"endpoint_url=self.auth_info.get('endpoint_url'),",1,0,0.0,97
84ed1079c87717ddd279597fb7b41f5ea29599c8,"ca_cert=self.conf.auth_ca_cert,",1,0,0.0,98
84ed1079c87717ddd279597fb7b41f5ea29599c8,"insecure=self.conf.auth_insecure,",1,0,0.0,99
84ed1079c87717ddd279597fb7b41f5ea29599c8,"region_name=self.conf.auth_region,",1,0,0.0,100
84ed1079c87717ddd279597fb7b41f5ea29599c8,"auth_strategy=self.conf.auth_strategy,",1,0,0.0,101
84ed1079c87717ddd279597fb7b41f5ea29599c8,"tenant_name=self.conf.admin_tenant_name,",1,0,0.0,102
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'token': self.auth_info.get('auth_token'),",0,0,0.0,103
84ed1079c87717ddd279597fb7b41f5ea29599c8,"password=self.conf.admin_password,",1,0,0.0,104
84ed1079c87717ddd279597fb7b41f5ea29599c8,"username=self.conf.admin_user,",1,0,0.0,105
84ed1079c87717ddd279597fb7b41f5ea29599c8,else:,0,0,0.0,106
84ed1079c87717ddd279597fb7b41f5ea29599c8,if self.conf.endpoint_url:,0,0,0.0,107
84ed1079c87717ddd279597fb7b41f5ea29599c8,},0,0,0.0,108
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'ca_cert': self.conf.auth_ca_cert,",0,0,0.0,109
84ed1079c87717ddd279597fb7b41f5ea29599c8,"'insecure': self.conf.auth_insecure,",0,0,0.0,110
84ed1079c87717ddd279597fb7b41f5ea29599c8,"LOG.warning(_LW('Server does not support metadata RPC, '",0,0,0.0,111
84ed1079c87717ddd279597fb7b41f5ea29599c8,@utils.cache_method_results,0,0,0.0,112
84ed1079c87717ddd279597fb7b41f5ea29599c8,# TODO(obondarev): remove fallback once RPC is proven,0,0,0.0,113
84ed1079c87717ddd279597fb7b41f5ea29599c8,"""""""",0,0,0.0,114
84ed1079c87717ddd279597fb7b41f5ea29599c8,cache.register_oslo_configs(cfg.CONF),0,0,0.0,115
84ed1079c87717ddd279597fb7b41f5ea29599c8,""" must be passed to _get_ports method.""))",0,0,0.0,116
84ed1079c87717ddd279597fb7b41f5ea29599c8,"raise TypeError(_(""Either one of parameter network_id or router_id""",0,0,0.0,117
84ed1079c87717ddd279597fb7b41f5ea29599c8,elif router_id:,0,0,0.0,118
84ed1079c87717ddd279597fb7b41f5ea29599c8,if network_id:,0,0,0.0,119
84ed1079c87717ddd279597fb7b41f5ea29599c8,given router. Either one of network_id or router_id must be passed.,0,0,0.0,120
84ed1079c87717ddd279597fb7b41f5ea29599c8,given network.,0,0,0.0,121
84ed1079c87717ddd279597fb7b41f5ea29599c8,searched for,0,0,0.0,122
84ed1079c87717ddd279597fb7b41f5ea29599c8,if network_id:,1,0,0.0,123
84ed1079c87717ddd279597fb7b41f5ea29599c8,given networks.,0,0,0.0,124
84ed1079c87717ddd279597fb7b41f5ea29599c8,device_owner=n_const.DEVICE_OWNER_ROUTER_INTF)['ports'],0,0,0.0,125
84ed1079c87717ddd279597fb7b41f5ea29599c8,"device_id=router_id,",0,0,0.0,126
84ed1079c87717ddd279597fb7b41f5ea29599c8,"""""""Find all networks connected to given router.""""""",0,0,0.0,127
84ed1079c87717ddd279597fb7b41f5ea29599c8,else:,0,0,0.0,128
84ed1079c87717ddd279597fb7b41f5ea29599c8,if self.conf.cache_url:,0,0,0.0,129
84ed1079c87717ddd279597fb7b41f5ea29599c8,from neutron.openstack.common.cache import cache,0,0,0.0,130
84ed1079c87717ddd279597fb7b41f5ea29599c8,"cfg.CONF.set_default(name='cache_url', default='memory://?default_ttl=5')",0,0,0.0,131
84ed1079c87717ddd279597fb7b41f5ea29599c8,else:,1,0,0.0,132
84ed1079c87717ddd279597fb7b41f5ea29599c8,"except (n_rpc.RPCException, AttributeError):",0,0,0.0,133
84ed1079c87717ddd279597fb7b41f5ea29599c8,"super(MetadataPluginAPI, self).__init__(",0,0,0.0,134
84ed1079c87717ddd279597fb7b41f5ea29599c8,try:,0,0,0.0,135
84ed1079c87717ddd279597fb7b41f5ea29599c8,if self.use_rpc:,0,0,0.0,136
84ed1079c87717ddd279597fb7b41f5ea29599c8,networks=None):,0,0,0.0,137
84ed1079c87717ddd279597fb7b41f5ea29599c8,# Use RPC by default,0,0,0.0,138
84ed1079c87717ddd279597fb7b41f5ea29599c8,filters=filters)),0,0,0.0,139
84ed1079c87717ddd279597fb7b41f5ea29599c8,"self.make_msg('get_ports',",0,0,0.0,140
84ed1079c87717ddd279597fb7b41f5ea29599c8,"topic=topic, default_version=self.BASE_RPC_API_VERSION)",0,0,0.0,141
84ed1079c87717ddd279597fb7b41f5ea29599c8,"""""""",0,0,0.0,142
84ed1079c87717ddd279597fb7b41f5ea29599c8,"device_id=router_id,",1,0,0.0,143
84ed1079c87717ddd279597fb7b41f5ea29599c8,1.0 - Initial version.,0,0,0.0,144
84ed1079c87717ddd279597fb7b41f5ea29599c8,API version history:,0,0,0.0,145
84ed1079c87717ddd279597fb7b41f5ea29599c8,"""""""Agent-side RPC (stub) for agent-to-plugin interaction.",0,0,0.0,146
84ed1079c87717ddd279597fb7b41f5ea29599c8,class MetadataPluginAPI(n_rpc.RpcProxy):,0,0,0.0,147
84ed1079c87717ddd279597fb7b41f5ea29599c8,from neutron.openstack.common.gettextutils import _LW,0,0,0.0,148
84ed1079c87717ddd279597fb7b41f5ea29599c8,from neutron.common import rpc as n_rpc,0,0,0.0,149
84ed1079c87717ddd279597fb7b41f5ea29599c8,device_owner=n_const.DEVICE_OWNER_ROUTER_INTF)['ports'],1,0,0.0,150
84ed1079c87717ddd279597fb7b41f5ea29599c8,),1,0,0.0,151
