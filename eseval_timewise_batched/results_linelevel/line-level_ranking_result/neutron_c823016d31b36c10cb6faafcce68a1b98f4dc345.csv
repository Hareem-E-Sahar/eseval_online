commit_id,line,line_level_label,count,line_score,row
c823016d31b36c10cb6faafcce68a1b98f4dc345,'Windows Server / Hyper-V Server 2012 R2 or above.')),0,5,1.0,1
c823016d31b36c10cb6faafcce68a1b98f4dc345,'Windows Server / Hyper-V Server 2012 R2 or above.'),1,5,1.0,2
c823016d31b36c10cb6faafcce68a1b98f4dc345,acls = [a for a in acls if a.Action is not self._ACL_ACTION_DENY],0,4,0.8,3
c823016d31b36c10cb6faafcce68a1b98f4dc345,# 2 directions x 2 address types x 3 protocols = 12 ACLs,0,4,0.8,4
c823016d31b36c10cb6faafcce68a1b98f4dc345,filtered_acls = [a for a in acls if,0,3,0.6000000000000001,5
c823016d31b36c10cb6faafcce68a1b98f4dc345,Security Groups implementation for Hyper-V VMs.,1,3,0.6000000000000001,6
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.warning('V1 virtualization namespace no longer supported on ',1,3,0.6000000000000001,7
c823016d31b36c10cb6faafcce68a1b98f4dc345,# 2 directions x 2 address types x 2 protocols = 8 ACLs,1,3,0.6000000000000001,8
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.warning(_('V1 virtualization namespace no longer supported on ',0,3,0.6000000000000001,9
c823016d31b36c10cb6faafcce68a1b98f4dc345,# 2 directions x 2 address types = 4 ACLs,0,3,0.6000000000000001,10
c823016d31b36c10cb6faafcce68a1b98f4dc345,"# if not, teardown the security group rules",0,3,0.6000000000000001,11
c823016d31b36c10cb6faafcce68a1b98f4dc345,# check if security groups is enabled.,0,3,0.6000000000000001,12
c823016d31b36c10cb6faafcce68a1b98f4dc345,right_acls = [a for a in acls if a.LocalPort == local_port],0,3,0.6000000000000001,13
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.Protocol = protocol,1,2,0.4,14
c823016d31b36c10cb6faafcce68a1b98f4dc345,acls = port.associators(wmi_result_class=self._PORT_EXT_ACL_SET_DATA),0,2,0.4,15
c823016d31b36c10cb6faafcce68a1b98f4dc345,"def remove_security_rule(self, switch_port_name, direction, acl_type,",1,2,0.4,16
c823016d31b36c10cb6faafcce68a1b98f4dc345,"def create_security_rule(self, switch_port_name, direction, acl_type,",1,2,0.4,17
c823016d31b36c10cb6faafcce68a1b98f4dc345,"for protocol in [self._TCP_PROTOCOL, self._UDP_PROTOCOL]:",1,2,0.4,18
c823016d31b36c10cb6faafcce68a1b98f4dc345,"for protocol in [self._TCP_PROTOCOL,",0,2,0.4,19
c823016d31b36c10cb6faafcce68a1b98f4dc345,if protocol in self._ACL_PROP_MAP['protocol'].keys():,0,2,0.4,20
c823016d31b36c10cb6faafcce68a1b98f4dc345,"protocol = self._get_rule_prop_or_default(rule, 'protocol')",0,2,0.4,21
c823016d31b36c10cb6faafcce68a1b98f4dc345,"acls = [mock_acl, mock_acl]",1,2,0.4,22
c823016d31b36c10cb6faafcce68a1b98f4dc345,mockacl2 = mock.MagicMock(),0,2,0.4,23
c823016d31b36c10cb6faafcce68a1b98f4dc345,mockacl1.Weight = self._utils._MAX_WEIGHT - 1,0,2,0.4,24
c823016d31b36c10cb6faafcce68a1b98f4dc345,mockacl1 = mock.MagicMock(),0,2,0.4,25
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.LocalPort = port,0,2,0.4,26
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl = mock.MagicMock(),0,2,0.4,27
c823016d31b36c10cb6faafcce68a1b98f4dc345,default = self._utils._ACL_DEFAULT,0,2,0.4,28
c823016d31b36c10cb6faafcce68a1b98f4dc345,acls = [],0,2,0.4,29
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl = mock.MagicMock(),1,2,0.4,30
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_LI('Updating port rules.')),0,1,0.2,31
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info('Updating port rules.'),1,1,0.2,32
c823016d31b36c10cb6faafcce68a1b98f4dc345,"'removing rule: %(rule)s'),",0,1,0.2,33
c823016d31b36c10cb6faafcce68a1b98f4dc345,"'adding rule: %(rule)s'),",0,1,0.2,34
c823016d31b36c10cb6faafcce68a1b98f4dc345,"LOG.debug('Creating port %s rules', len(port['security_group_rules']))",0,1,0.2,35
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info('Removing port filter'),1,1,0.2,36
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_('Aplying port filter.')),0,1,0.2,37
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info('Aplying port filter.'),1,1,0.2,38
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_('Removing port filter')),0,1,0.2,39
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_('Updating port rules.')),0,1,0.2,40
c823016d31b36c10cb6faafcce68a1b98f4dc345,_REJECT_ACLS_COUNT = 12,0,1,0.2,41
c823016d31b36c10cb6faafcce68a1b98f4dc345,# Port not found. It happens when the VM was already deleted.,0,1,0.2,42
c823016d31b36c10cb6faafcce68a1b98f4dc345,"port, found = self._get_switch_port_allocation(switch_port_name, False)",0,1,0.2,43
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_LI('Aplying port filter.')),0,1,0.2,44
c823016d31b36c10cb6faafcce68a1b98f4dc345,"""""""Security Groups Driver.",1,1,0.2,45
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_LI('Removing port filter')),0,1,0.2,46
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.debug('Creating port %s rules' % len(port['security_group_rules'])),1,1,0.2,47
c823016d31b36c10cb6faafcce68a1b98f4dc345,"'adding rule: %(rule)s'),",1,1,0.2,48
c823016d31b36c10cb6faafcce68a1b98f4dc345,"'removing rule: %(rule)s'),",1,1,0.2,49
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_('Updating port rules.')),1,1,0.2,50
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_('Removing port filter')),1,1,0.2,51
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG = logging.getLogger(__name__),0,1,0.2,52
c823016d31b36c10cb6faafcce68a1b98f4dc345,# TODO(claudiub): Remove this module at the beginning of the O cycle.,0,1,0.2,53
c823016d31b36c10cb6faafcce68a1b98f4dc345,new_driver = 'hyperv.neutron.security_groups_driver.HyperVSecurityGroupsDriver',0,1,0.2,54
c823016d31b36c10cb6faafcce68a1b98f4dc345,"LOG.warn(_LW(""You are using the deprecated firewall driver: %(deprecated)s. """,0,1,0.2,55
c823016d31b36c10cb6faafcce68a1b98f4dc345,HyperVSecurityGroupsDriver = moves.moved_class(,0,1,0.2,56
c823016d31b36c10cb6faafcce68a1b98f4dc345,from neutron.agent import firewall,1,1,0.2,57
c823016d31b36c10cb6faafcce68a1b98f4dc345,"class HyperVSecurityGroupsDriver(sg_driver.HyperVSecurityGroupsDriverMixin,",1,1,0.2,58
c823016d31b36c10cb6faafcce68a1b98f4dc345,FeatureSettings=[f.path_() for f in feature_resources]),0,1,0.2,59
c823016d31b36c10cb6faafcce68a1b98f4dc345,"def remove_all_security_rules(self, switch_port_name):",0,1,0.2,60
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.info(_('Aplying port filter.')),1,1,0.2,61
c823016d31b36c10cb6faafcce68a1b98f4dc345,"def _remove_multiple_virt_features(self, feature_resources):",0,1,0.2,62
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.LocalPort = local_port,1,1,0.2,63
c823016d31b36c10cb6faafcce68a1b98f4dc345,_REJECT_ACLS_COUNT = 4,0,1,0.2,64
c823016d31b36c10cb6faafcce68a1b98f4dc345,v.Protocol == protocol and,0,1,0.2,65
c823016d31b36c10cb6faafcce68a1b98f4dc345,"v.LocalPort in [str(local_port), self._ACL_DEFAULT] and",1,1,0.2,66
c823016d31b36c10cb6faafcce68a1b98f4dc345,v.Protocol in [protocol] and,1,1,0.2,67
c823016d31b36c10cb6faafcce68a1b98f4dc345,"for port, proto in [(default, default), (local_port, protocol)]:",0,1,0.2,68
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.Action = self._utils._ACL_ACTION_ALLOW,0,1,0.2,69
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.Direction = self._FAKE_ACL_DIR,0,1,0.2,70
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.RemoteIPAddress = remote_addr,0,1,0.2,71
c823016d31b36c10cb6faafcce68a1b98f4dc345,def test_get_new_weight_default_acls(self):,0,1,0.2,72
c823016d31b36c10cb6faafcce68a1b98f4dc345,mockacl2.Weight = self._utils._MAX_WEIGHT - 2,0,1,0.2,73
c823016d31b36c10cb6faafcce68a1b98f4dc345,mockacl2.Action = self._utils._ACL_ACTION_DENY,0,1,0.2,74
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.Action = self._utils._ACL_ACTION_ALLOW,1,1,0.2,75
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.Direction = self._FAKE_ACL_DIR,1,1,0.2,76
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.Protocol = proto,0,1,0.2,77
c823016d31b36c10cb6faafcce68a1b98f4dc345,mock_acl.RemoteIPAddress = remote_addr,1,1,0.2,78
c823016d31b36c10cb6faafcce68a1b98f4dc345,"protocols = [self._TCP_PROTOCOL, self._UDP_PROTOCOL]",1,1,0.2,79
c823016d31b36c10cb6faafcce68a1b98f4dc345,if 'security_groups' in port:,1,1,0.2,80
c823016d31b36c10cb6faafcce68a1b98f4dc345,"def _get_rule_protocol(self, rule):",0,1,0.2,81
c823016d31b36c10cb6faafcce68a1b98f4dc345,if 'security_groups' in port:,0,1,0.2,82
c823016d31b36c10cb6faafcce68a1b98f4dc345,"switch_port_name, direction, acl_type,",1,1,0.2,83
c823016d31b36c10cb6faafcce68a1b98f4dc345,"protocols = ['tcp', 'udp']",1,1,0.2,84
c823016d31b36c10cb6faafcce68a1b98f4dc345,for proto in protocols:,1,1,0.2,85
c823016d31b36c10cb6faafcce68a1b98f4dc345,"switch_port_name, direction, acl_type, local_port,",1,1,0.2,86
c823016d31b36c10cb6faafcce68a1b98f4dc345,if protocol is self._ACL_DEFAULT:,1,1,0.2,87
c823016d31b36c10cb6faafcce68a1b98f4dc345,protocols = [protocol],1,1,0.2,88
c823016d31b36c10cb6faafcce68a1b98f4dc345,"local_port, protocol, remote_address):",1,1,0.2,89
c823016d31b36c10cb6faafcce68a1b98f4dc345,_ICMP_PROTOCOL = '1',0,1,0.2,90
c823016d31b36c10cb6faafcce68a1b98f4dc345,return protocol,0,1,0.2,91
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.error(_('Hyper-V Exception: %(hyperv_exeption)s while ',1,0,0.0,92
c823016d31b36c10cb6faafcce68a1b98f4dc345,"len(new_rules), len(remove_rules)))",1,0,0.0,93
c823016d31b36c10cb6faafcce68a1b98f4dc345,"{'new': len(new_rules), 'old': len(remove_rules)})",0,0,0.0,94
c823016d31b36c10cb6faafcce68a1b98f4dc345,"""old rules.""),",0,0,0.0,95
c823016d31b36c10cb6faafcce68a1b98f4dc345,"LOG.info(_LI(""Creating %(new)s new rules, removing %(old)s """,0,0,0.0,96
c823016d31b36c10cb6faafcce68a1b98f4dc345,LOG.error(_LE('Hyper-V Exception: %(hyperv_exeption)s while ',0,0,0.0,97
c823016d31b36c10cb6faafcce68a1b98f4dc345,"from neutron.i18n import _LE, _LI",0,0,0.0,98
c823016d31b36c10cb6faafcce68a1b98f4dc345,if len(filtered_acls) >= 8:,1,0,0.0,99
c823016d31b36c10cb6faafcce68a1b98f4dc345,"LOG.info(""Creating %s new rules, removing %s old rules."" % (",1,0,0.0,100
c823016d31b36c10cb6faafcce68a1b98f4dc345,'old': len(remove_rules)}),0,0,0.0,101
c823016d31b36c10cb6faafcce68a1b98f4dc345,"{'new': len(new_rules),",0,0,0.0,102
c823016d31b36c10cb6faafcce68a1b98f4dc345,"""old rules.""),",0,0,0.0,103
c823016d31b36c10cb6faafcce68a1b98f4dc345,"LOG.info(_(""Creating %(new)s new rules, removing %(old)s """,0,0,0.0,104
c823016d31b36c10cb6faafcce68a1b98f4dc345,FeatureSettings=[feature_resource.path_()]),1,0,0.0,105
c823016d31b36c10cb6faafcce68a1b98f4dc345,"""old rules.""),",1,0,0.0,106
c823016d31b36c10cb6faafcce68a1b98f4dc345,"LOG.info(_(""Creating %(new)s new rules, removing %(old)s """,1,0,0.0,107
c823016d31b36c10cb6faafcce68a1b98f4dc345,"'HyperVSecurityGroupsDriver', __name__)",0,0,0.0,108
c823016d31b36c10cb6faafcce68a1b98f4dc345,"{'new': len(new_rules),",1,0,0.0,109
c823016d31b36c10cb6faafcce68a1b98f4dc345,"""Use the recommended driver %(new)s instead.""),",0,0,0.0,110
c823016d31b36c10cb6faafcce68a1b98f4dc345,"""""""",1,0,0.0,111
c823016d31b36c10cb6faafcce68a1b98f4dc345,firewall.FirewallDriver):,1,0,0.0,112
c823016d31b36c10cb6faafcce68a1b98f4dc345,self._remove_multiple_virt_features(filtered_acls),0,0,0.0,113
c823016d31b36c10cb6faafcce68a1b98f4dc345,"sg_driver.HyperVSecurityGroupsDriver,",0,0,0.0,114
c823016d31b36c10cb6faafcce68a1b98f4dc345,'new': new_driver}),0,0,0.0,115
c823016d31b36c10cb6faafcce68a1b98f4dc345,"{'deprecated': '%s.HyperVSecurityGroupsDriver' % __name__,",0,0,0.0,116
c823016d31b36c10cb6faafcce68a1b98f4dc345,from neutron.i18n import _LW,0,0,0.0,117
c823016d31b36c10cb6faafcce68a1b98f4dc345,'old': len(remove_rules)}),1,0,0.0,118
c823016d31b36c10cb6faafcce68a1b98f4dc345,from oslo_log import log as logging,0,0,0.0,119
c823016d31b36c10cb6faafcce68a1b98f4dc345,from debtcollector import moves,0,0,0.0,120
c823016d31b36c10cb6faafcce68a1b98f4dc345,from neutron.openstack.common import log as logging,1,0,0.0,121
c823016d31b36c10cb6faafcce68a1b98f4dc345,from oslo_log import log as logging,0,0,0.0,122
c823016d31b36c10cb6faafcce68a1b98f4dc345,from oslo.config import cfg,1,0,0.0,123
c823016d31b36c10cb6faafcce68a1b98f4dc345,from oslo_config import cfg,0,0,0.0,124
c823016d31b36c10cb6faafcce68a1b98f4dc345,if len(filtered_acls) >= self._REJECT_ACLS_COUNT:,0,0,0.0,125
c823016d31b36c10cb6faafcce68a1b98f4dc345,self.init_firewall(),0,0,0.0,126
c823016d31b36c10cb6faafcce68a1b98f4dc345,if filtered_acls:,0,0,0.0,127
c823016d31b36c10cb6faafcce68a1b98f4dc345,"'protocol': {'icmp': utilsv2.HyperVUtilsV2._ICMP_PROTOCOL},",0,0,0.0,128
c823016d31b36c10cb6faafcce68a1b98f4dc345,"super(HyperVUtilsV2R2, self).create_security_rule(",1,0,0.0,129
c823016d31b36c10cb6faafcce68a1b98f4dc345,self._ICMP_PROTOCOL]:,0,0,0.0,130
c823016d31b36c10cb6faafcce68a1b98f4dc345,"self._UDP_PROTOCOL,",0,0,0.0,131
c823016d31b36c10cb6faafcce68a1b98f4dc345,"'protocol': self._get_rule_prop_or_default(rule, 'protocol'),",1,0,0.0,132
c823016d31b36c10cb6faafcce68a1b98f4dc345,return self._ACL_PROP_MAP['protocol'][protocol],0,0,0.0,133
c823016d31b36c10cb6faafcce68a1b98f4dc345,"'protocol': self._get_rule_protocol(rule),",0,0,0.0,134
c823016d31b36c10cb6faafcce68a1b98f4dc345,"self.assertEqual(acls, good_acls)",1,0,0.0,135
c823016d31b36c10cb6faafcce68a1b98f4dc345,"super(HyperVUtilsV2R2, self).remove_security_rule(",1,0,0.0,136
c823016d31b36c10cb6faafcce68a1b98f4dc345,"self._utils._get_new_weight([mockacl1, mockacl2]))",0,0,0.0,137
c823016d31b36c10cb6faafcce68a1b98f4dc345,"self.assertEqual(self._utils._MAX_WEIGHT - 2,",0,0,0.0,138
c823016d31b36c10cb6faafcce68a1b98f4dc345,"self.assertEqual(right_acls, good_acls)",0,0,0.0,139
c823016d31b36c10cb6faafcce68a1b98f4dc345,acls.append(mock_acl),0,0,0.0,140
c823016d31b36c10cb6faafcce68a1b98f4dc345,v.LocalPort == str(local_port) and,0,0,0.0,141
c823016d31b36c10cb6faafcce68a1b98f4dc345,self.addCleanup(mock.patch.stopall),1,0,0.0,142
c823016d31b36c10cb6faafcce68a1b98f4dc345,"proto, remote_address)",1,0,0.0,143
c823016d31b36c10cb6faafcce68a1b98f4dc345,"local_port, proto, remote_address)",1,0,0.0,144
c823016d31b36c10cb6faafcce68a1b98f4dc345,a.Action is not self._ACL_ACTION_METER],0,0,0.0,145
c823016d31b36c10cb6faafcce68a1b98f4dc345,device_details['port_id']),0,0,0.0,146
c823016d31b36c10cb6faafcce68a1b98f4dc345,return,0,0,0.0,147
c823016d31b36c10cb6faafcce68a1b98f4dc345,if not found:,0,0,0.0,148
c823016d31b36c10cb6faafcce68a1b98f4dc345,self._remove_multiple_virt_features([feature_resource]),0,0,0.0,149
c823016d31b36c10cb6faafcce68a1b98f4dc345,self.sec_groups_agent.prepare_devices_filter(devices),1,0,0.0,150
c823016d31b36c10cb6faafcce68a1b98f4dc345,self.sec_groups_agent.refresh_firewall(),1,0,0.0,151
c823016d31b36c10cb6faafcce68a1b98f4dc345,self.init_firewall(),1,0,0.0,152
c823016d31b36c10cb6faafcce68a1b98f4dc345,self._utils.remove_all_security_rules(,0,0,0.0,153
c823016d31b36c10cb6faafcce68a1b98f4dc345,"self._utils._UDP_PROTOCOL,",0,0,0.0,154
c823016d31b36c10cb6faafcce68a1b98f4dc345,else:,0,0,0.0,155
c823016d31b36c10cb6faafcce68a1b98f4dc345,self.sec_groups_agent.prepare_devices_filter([device]),0,0,0.0,156
c823016d31b36c10cb6faafcce68a1b98f4dc345,self.sec_groups_agent.refresh_firewall(),0,0,0.0,157
c823016d31b36c10cb6faafcce68a1b98f4dc345,if CONF.SECURITYGROUP.enable_security_group:,0,0,0.0,158
c823016d31b36c10cb6faafcce68a1b98f4dc345,self._utils._UDP_PROTOCOL]:,1,0,0.0,159
c823016d31b36c10cb6faafcce68a1b98f4dc345,self._utils._ICMP_PROTOCOL]:,0,0,0.0,160
c823016d31b36c10cb6faafcce68a1b98f4dc345,pass,1,0,0.0,161
