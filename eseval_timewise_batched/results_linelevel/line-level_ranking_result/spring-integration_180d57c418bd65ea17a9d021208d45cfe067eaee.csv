commit_id,line,line_level_label,count,line_score,row
180d57c418bd65ea17a9d021208d45cfe067eaee,if (!this.initialized) {,0,3,1.0,1
180d57c418bd65ea17a9d021208d45cfe067eaee,if (!this.initialized) {,1,3,1.0,2
180d57c418bd65ea17a9d021208d45cfe067eaee,if (this.runningTask != null) {,0,2,0.6666666666666666,3
180d57c418bd65ea17a9d021208d45cfe067eaee,private PollableChannel inputChannel;,0,2,0.6666666666666666,4
180d57c418bd65ea17a9d021208d45cfe067eaee,if (TransactionSynchronizationManager.hasResource(resource)) {,1,2,0.6666666666666666,5
180d57c418bd65ea17a9d021208d45cfe067eaee,if (resource instanceof IntegrationResourceHolder) {,1,2,0.6666666666666666,6
180d57c418bd65ea17a9d021208d45cfe067eaee,if (AbstractPollingEndpoint.this.transactionSynchronizationFactory != null) {,1,2,0.6666666666666666,7
180d57c418bd65ea17a9d021208d45cfe067eaee,if (!Poller.this.pollingTask.call()) {,1,2,0.6666666666666666,8
180d57c418bd65ea17a9d021208d45cfe067eaee,if (e instanceof MessagingException) {,1,2,0.6666666666666666,9
180d57c418bd65ea17a9d021208d45cfe067eaee,if (this.runningTask != null) {,1,2,0.6666666666666666,10
180d57c418bd65ea17a9d021208d45cfe067eaee,if (this.subscription != null) {,0,2,0.6666666666666666,11
180d57c418bd65ea17a9d021208d45cfe067eaee,private final PollableChannel inputChannel;,1,2,0.6666666666666666,12
180d57c418bd65ea17a9d021208d45cfe067eaee,if (!isReactive()) {,0,2,0.6666666666666666,13
180d57c418bd65ea17a9d021208d45cfe067eaee,if (message != null) {,0,2,0.6666666666666666,14
180d57c418bd65ea17a9d021208d45cfe067eaee,if (TransactionSynchronizationManager.hasResource(resource)) {,0,2,0.6666666666666666,15
180d57c418bd65ea17a9d021208d45cfe067eaee,if (pollForMessage() == null) {,0,2,0.6666666666666666,16
180d57c418bd65ea17a9d021208d45cfe067eaee,if (date != null) {,0,2,0.6666666666666666,17
180d57c418bd65ea17a9d021208d45cfe067eaee,if (isReactive()) {,0,2,0.6666666666666666,18
180d57c418bd65ea17a9d021208d45cfe067eaee,if (e instanceof MessagingException) {,0,2,0.6666666666666666,19
180d57c418bd65ea17a9d021208d45cfe067eaee,if (this.transactionSynchronizationFactory != null) {,0,2,0.6666666666666666,20
180d57c418bd65ea17a9d021208d45cfe067eaee,if (resource instanceof IntegrationResourceHolder) {,0,2,0.6666666666666666,21
180d57c418bd65ea17a9d021208d45cfe067eaee,},1,1,0.3333333333333333,22
180d57c418bd65ea17a9d021208d45cfe067eaee,private final class Poller implements Runnable {,1,1,0.3333333333333333,23
180d57c418bd65ea17a9d021208d45cfe067eaee,protected void doStop() {,1,1,0.3333333333333333,24
180d57c418bd65ea17a9d021208d45cfe067eaee,private boolean doPoll() {,1,1,0.3333333333333333,25
180d57c418bd65ea17a9d021208d45cfe067eaee,message = this.receiveMessage();,1,1,0.3333333333333333,26
180d57c418bd65ea17a9d021208d45cfe067eaee,try {,1,1,0.3333333333333333,27
180d57c418bd65ea17a9d021208d45cfe067eaee,catch (Exception e) {,1,1,0.3333333333333333,28
180d57c418bd65ea17a9d021208d45cfe067eaee,else {,1,1,0.3333333333333333,29
180d57c418bd65ea17a9d021208d45cfe067eaee,* Default Poller implementation,1,1,0.3333333333333333,30
180d57c418bd65ea17a9d021208d45cfe067eaee,|| count < AbstractPollingEndpoint.this.maxMessagesPerPoll)) {,1,1,0.3333333333333333,31
180d57c418bd65ea17a9d021208d45cfe067eaee,Poller(Callable<Boolean> pollingTask) {,1,1,0.3333333333333333,32
180d57c418bd65ea17a9d021208d45cfe067eaee,public void run() {,1,1,0.3333333333333333,33
180d57c418bd65ea17a9d021208d45cfe067eaee,AbstractPollingEndpoint.this.taskExecutor.execute(() -> {,1,1,0.3333333333333333,34
180d57c418bd65ea17a9d021208d45cfe067eaee,finally {,1,1,0.3333333333333333,35
180d57c418bd65ea17a9d021208d45cfe067eaee,protected Object getReceiveMessageSource() {,0,1,0.3333333333333333,36
180d57c418bd65ea17a9d021208d45cfe067eaee,},0,1,0.3333333333333333,37
180d57c418bd65ea17a9d021208d45cfe067eaee,protected void setReceiveMessageSource(Object source) {,0,1,0.3333333333333333,38
180d57c418bd65ea17a9d021208d45cfe067eaee,private Runnable createPoller() throws Exception {,1,1,0.3333333333333333,39
180d57c418bd65ea17a9d021208d45cfe067eaee,protected void doStart() {,1,1,0.3333333333333333,40
180d57c418bd65ea17a9d021208d45cfe067eaee,Message<?> message = null;,1,1,0.3333333333333333,41
180d57c418bd65ea17a9d021208d45cfe067eaee,protected void doStop() {,0,1,0.3333333333333333,42
180d57c418bd65ea17a9d021208d45cfe067eaee,private Flux<Message<?>> createFluxGenerator() {,0,1,0.3333333333333333,43
180d57c418bd65ea17a9d021208d45cfe067eaee,catch (Exception e) {,0,1,0.3333333333333333,44
180d57c418bd65ea17a9d021208d45cfe067eaee,protected boolean isReactive() {,0,1,0.3333333333333333,45
180d57c418bd65ea17a9d021208d45cfe067eaee,},0,1,0.3333333333333333,46
180d57c418bd65ea17a9d021208d45cfe067eaee,protected Flux<Message<?>> getPollingFlux() {,0,1,0.3333333333333333,47
180d57c418bd65ea17a9d021208d45cfe067eaee,else {,0,1,0.3333333333333333,48
180d57c418bd65ea17a9d021208d45cfe067eaee,private Callable<Message<?>> createPollingTask() {,0,1,0.3333333333333333,49
180d57c418bd65ea17a9d021208d45cfe067eaee,private Runnable createPoller() {,0,1,0.3333333333333333,50
180d57c418bd65ea17a9d021208d45cfe067eaee,this.taskExecutor.execute(() -> {,0,1,0.3333333333333333,51
180d57c418bd65ea17a9d021208d45cfe067eaee,while (this.initialized && (this.maxMessagesPerPoll <= 0 || count < this.maxMessagesPerPoll)) {,0,1,0.3333333333333333,52
180d57c418bd65ea17a9d021208d45cfe067eaee,protected void doStart() {,0,1,0.3333333333333333,53
180d57c418bd65ea17a9d021208d45cfe067eaee,.<Duration>generate(sink -> {,0,1,0.3333333333333333,54
180d57c418bd65ea17a9d021208d45cfe067eaee,Message<?> message = pollForMessage();,0,1,0.3333333333333333,55
180d57c418bd65ea17a9d021208d45cfe067eaee,private Message<?> pollForMessage() {,0,1,0.3333333333333333,56
180d57c418bd65ea17a9d021208d45cfe067eaee,finally {,0,1,0.3333333333333333,57
180d57c418bd65ea17a9d021208d45cfe067eaee,private Message<?> doPoll() {,0,1,0.3333333333333333,58
180d57c418bd65ea17a9d021208d45cfe067eaee,message = receiveMessage();,0,1,0.3333333333333333,59
180d57c418bd65ea17a9d021208d45cfe067eaee,.<Message<?>>generate(fluxSink -> {,0,1,0.3333333333333333,60
180d57c418bd65ea17a9d021208d45cfe067eaee,try {,0,1,0.3333333333333333,61
180d57c418bd65ea17a9d021208d45cfe067eaee,"Assert.state(this.getTaskScheduler() != null,",1,0,0.0,62
180d57c418bd65ea17a9d021208d45cfe067eaee,pollingTask = (Callable<Boolean>) proxyFactory.getProxy(this.beanClassLoader);,1,0,0.0,63
180d57c418bd65ea17a9d021208d45cfe067eaee,return new Poller(pollingTask);,1,0,0.0,64
180d57c418bd65ea17a9d021208d45cfe067eaee,// LifecycleSupport implementation,1,0,0.0,65
180d57c418bd65ea17a9d021208d45cfe067eaee,@Override // guarded by super#lifecycleLock,1,0,0.0,66
180d57c418bd65ea17a9d021208d45cfe067eaee,this.onInit();,1,0,0.0,67
180d57c418bd65ea17a9d021208d45cfe067eaee,this.initialized = false;,1,0,0.0,68
180d57c418bd65ea17a9d021208d45cfe067eaee,"""unable to start polling, no taskScheduler available"");",1,0,0.0,69
180d57c418bd65ea17a9d021208d45cfe067eaee,this.poller = createPoller();,1,0,0.0,70
180d57c418bd65ea17a9d021208d45cfe067eaee,"throw new MessagingException(""Failed to create Poller"", e);",1,0,0.0,71
180d57c418bd65ea17a9d021208d45cfe067eaee,"this.runningTask = this.getTaskScheduler().schedule(this.poller, this.trigger);",1,0,0.0,72
180d57c418bd65ea17a9d021208d45cfe067eaee,this.runningTask.cancel(true);,1,0,0.0,73
180d57c418bd65ea17a9d021208d45cfe067eaee,private volatile Runnable poller;,1,0,0.0,74
180d57c418bd65ea17a9d021208d45cfe067eaee,Callable<Boolean> pollingTask = this::doPoll;,1,0,0.0,75
180d57c418bd65ea17a9d021208d45cfe067eaee,"throw new MessagingException(message, e);",0,0,0.0,76
180d57c418bd65ea17a9d021208d45cfe067eaee,private volatile ScheduledFuture<?> runningTask;,1,0,0.0,77
180d57c418bd65ea17a9d021208d45cfe067eaee,private TransactionSynchronizationFactory transactionSynchronizationFactory;,1,0,0.0,78
180d57c418bd65ea17a9d021208d45cfe067eaee,private long maxMessagesPerPoll = -1;,1,0,0.0,79
180d57c418bd65ea17a9d021208d45cfe067eaee,private ClassLoader beanClassLoader = ClassUtils.getDefaultClassLoader();,1,0,0.0,80
180d57c418bd65ea17a9d021208d45cfe067eaee,private Trigger trigger = new PeriodicTrigger(10);,1,0,0.0,81
180d57c418bd65ea17a9d021208d45cfe067eaee,this.subscription.cancel();,0,0,0.0,82
180d57c418bd65ea17a9d021208d45cfe067eaee,this.runningTask = null;,0,0,0.0,83
180d57c418bd65ea17a9d021208d45cfe067eaee,this.runningTask.cancel(true);,0,0,0.0,84
180d57c418bd65ea17a9d021208d45cfe067eaee,return message;,0,0,0.0,85
180d57c418bd65ea17a9d021208d45cfe067eaee,"throw new MessagingExceptionWrapper(message, (MessagingException) e);",0,0,0.0,86
180d57c418bd65ea17a9d021208d45cfe067eaee,handleMessage(message);,0,0,0.0,87
180d57c418bd65ea17a9d021208d45cfe067eaee,return null;,0,0,0.0,88
180d57c418bd65ea17a9d021208d45cfe067eaee,Message<?> message;,0,0,0.0,89
180d57c418bd65ea17a9d021208d45cfe067eaee,"IntegrationResourceHolder holder = bindResourceHolderIfNecessary(getResourceKey(), getResourceToBind());",0,0,0.0,90
180d57c418bd65ea17a9d021208d45cfe067eaee,IntegrationResourceHolder holder = this.bindResourceHolderIfNecessary(,1,0,0.0,91
180d57c418bd65ea17a9d021208d45cfe067eaee,this.runningTask = null;,1,0,0.0,92
180d57c418bd65ea17a9d021208d45cfe067eaee,return this.inputChannel;,0,0,0.0,93
180d57c418bd65ea17a9d021208d45cfe067eaee,"this.getResourceKey(), this.getResourceToBind());",1,0,0.0,94
180d57c418bd65ea17a9d021208d45cfe067eaee,return false;,1,0,0.0,95
180d57c418bd65ea17a9d021208d45cfe067eaee,this.inputChannel = (PollableChannel) source;,0,0,0.0,96
180d57c418bd65ea17a9d021208d45cfe067eaee,Object resource = getResourceToBind();,0,0,0.0,97
180d57c418bd65ea17a9d021208d45cfe067eaee,@Override,0,0,0.0,98
180d57c418bd65ea17a9d021208d45cfe067eaee,private long receiveTimeout = DEFAULT_RECEIVE_TIMEOUT;,0,0,0.0,99
180d57c418bd65ea17a9d021208d45cfe067eaee,});,1,0,0.0,100
180d57c418bd65ea17a9d021208d45cfe067eaee,TransactionSynchronizationManager.unbindResource(resource);,1,0,0.0,101
180d57c418bd65ea17a9d021208d45cfe067eaee,Object resource = getResourceToBind();,1,0,0.0,102
180d57c418bd65ea17a9d021208d45cfe067eaee,"throw new MessagingException(failedMessage, e);",1,0,0.0,103
180d57c418bd65ea17a9d021208d45cfe067eaee,failedMessage = ((IntegrationResourceHolder) resource).getMessage();,1,0,0.0,104
180d57c418bd65ea17a9d021208d45cfe067eaee,Object resource = TransactionSynchronizationManager.getResource(getResourceToBind());,1,0,0.0,105
180d57c418bd65ea17a9d021208d45cfe067eaee,Message<?> failedMessage = null;,1,0,0.0,106
180d57c418bd65ea17a9d021208d45cfe067eaee,throw (MessagingException) e;,1,0,0.0,107
180d57c418bd65ea17a9d021208d45cfe067eaee,count++;,1,0,0.0,108
180d57c418bd65ea17a9d021208d45cfe067eaee,break;,1,0,0.0,109
180d57c418bd65ea17a9d021208d45cfe067eaee,&& (AbstractPollingEndpoint.this.maxMessagesPerPoll <= 0,1,0,0.0,110
180d57c418bd65ea17a9d021208d45cfe067eaee,while (AbstractPollingEndpoint.this.initialized,1,0,0.0,111
180d57c418bd65ea17a9d021208d45cfe067eaee,int count = 0;,1,0,0.0,112
180d57c418bd65ea17a9d021208d45cfe067eaee,@Override,1,0,0.0,113
180d57c418bd65ea17a9d021208d45cfe067eaee,this.pollingTask = pollingTask;,1,0,0.0,114
180d57c418bd65ea17a9d021208d45cfe067eaee,private final Callable<Boolean> pollingTask;,1,0,0.0,115
180d57c418bd65ea17a9d021208d45cfe067eaee,*/,1,0,0.0,116
180d57c418bd65ea17a9d021208d45cfe067eaee,/**,1,0,0.0,117
180d57c418bd65ea17a9d021208d45cfe067eaee,return result;,1,0,0.0,118
180d57c418bd65ea17a9d021208d45cfe067eaee,result = true;,1,0,0.0,119
180d57c418bd65ea17a9d021208d45cfe067eaee,"throw new MessagingException(message, e);",1,0,0.0,120
180d57c418bd65ea17a9d021208d45cfe067eaee,"throw new MessagingExceptionWrapper(message, (MessagingException) e);",1,0,0.0,121
180d57c418bd65ea17a9d021208d45cfe067eaee,this.handleMessage(message);,1,0,0.0,122
180d57c418bd65ea17a9d021208d45cfe067eaee,result = false;,1,0,0.0,123
180d57c418bd65ea17a9d021208d45cfe067eaee,boolean result;,1,0,0.0,124
180d57c418bd65ea17a9d021208d45cfe067eaee,TransactionSynchronizationManager.unbindResource(resource);,0,0,0.0,125
180d57c418bd65ea17a9d021208d45cfe067eaee,SimpleTriggerContext triggerContext = new SimpleTriggerContext();,0,0,0.0,126
180d57c418bd65ea17a9d021208d45cfe067eaee,"throw new MessagingException(failedMessage, e);",0,0,0.0,127
180d57c418bd65ea17a9d021208d45cfe067eaee,int count = 0;,0,0,0.0,128
180d57c418bd65ea17a9d021208d45cfe067eaee,return pollingTask;,0,0,0.0,129
180d57c418bd65ea17a9d021208d45cfe067eaee,pollingTask = (Callable<Message<?>>) proxyFactory.getProxy(this.beanClassLoader);,0,0,0.0,130
180d57c418bd65ea17a9d021208d45cfe067eaee,Callable<Message<?>> pollingTask = this::doPoll;,0,0,0.0,131
180d57c418bd65ea17a9d021208d45cfe067eaee,".schedule(createPoller(), this.trigger);",0,0,0.0,132
180d57c418bd65ea17a9d021208d45cfe067eaee,getTaskScheduler(),0,0,0.0,133
180d57c418bd65ea17a9d021208d45cfe067eaee,this.runningTask =,0,0,0.0,134
180d57c418bd65ea17a9d021208d45cfe067eaee,"Assert.state(getTaskScheduler() != null, ""unable to start polling, no taskScheduler available"");",0,0,0.0,135
180d57c418bd65ea17a9d021208d45cfe067eaee,this.pollingFlux = createFluxGenerator();,0,0,0.0,136
180d57c418bd65ea17a9d021208d45cfe067eaee,this.pollingTask = createPollingTask();,0,0,0.0,137
180d57c418bd65ea17a9d021208d45cfe067eaee,onInit();,0,0,0.0,138
180d57c418bd65ea17a9d021208d45cfe067eaee,@Override // guarded by super#lifecycleLock,0,0,0.0,139
180d57c418bd65ea17a9d021208d45cfe067eaee,// LifecycleSupport implementation,0,0,0.0,140
180d57c418bd65ea17a9d021208d45cfe067eaee,return this.pollingFlux;,0,0,0.0,141
180d57c418bd65ea17a9d021208d45cfe067eaee,return false;,0,0,0.0,142
180d57c418bd65ea17a9d021208d45cfe067eaee,private volatile ScheduledFuture<?> runningTask;,0,0,0.0,143
180d57c418bd65ea17a9d021208d45cfe067eaee,private volatile Subscription subscription;,0,0,0.0,144
180d57c418bd65ea17a9d021208d45cfe067eaee,private volatile Flux<Message<?>> pollingFlux;,0,0,0.0,145
180d57c418bd65ea17a9d021208d45cfe067eaee,private volatile Callable<Message<?>> pollingTask;,0,0,0.0,146
180d57c418bd65ea17a9d021208d45cfe067eaee,private TransactionSynchronizationFactory transactionSynchronizationFactory;,0,0,0.0,147
180d57c418bd65ea17a9d021208d45cfe067eaee,private long maxMessagesPerPoll = -1;,0,0,0.0,148
180d57c418bd65ea17a9d021208d45cfe067eaee,private Trigger trigger = new PeriodicTrigger(10);,0,0,0.0,149
180d57c418bd65ea17a9d021208d45cfe067eaee,private ClassLoader beanClassLoader = ClassUtils.getDefaultClassLoader();,0,0,0.0,150
180d57c418bd65ea17a9d021208d45cfe067eaee,import reactor.core.scheduler.Schedulers;,0,0,0.0,151
180d57c418bd65ea17a9d021208d45cfe067eaee,import reactor.core.publisher.Mono;,0,0,0.0,152
180d57c418bd65ea17a9d021208d45cfe067eaee,import reactor.core.publisher.Flux;,0,0,0.0,153
180d57c418bd65ea17a9d021208d45cfe067eaee,import org.springframework.scheduling.support.SimpleTriggerContext;,0,0,0.0,154
180d57c418bd65ea17a9d021208d45cfe067eaee,import org.reactivestreams.Subscription;,0,0,0.0,155
180d57c418bd65ea17a9d021208d45cfe067eaee,import java.util.Date;,0,0,0.0,156
180d57c418bd65ea17a9d021208d45cfe067eaee,import java.time.Duration;,0,0,0.0,157
180d57c418bd65ea17a9d021208d45cfe067eaee,return () ->,0,0,0.0,158
180d57c418bd65ea17a9d021208d45cfe067eaee,break;,0,0,0.0,159
180d57c418bd65ea17a9d021208d45cfe067eaee,failedMessage = ((IntegrationResourceHolder) resource).getMessage();,0,0,0.0,160
180d57c418bd65ea17a9d021208d45cfe067eaee,count++;,0,0,0.0,161
180d57c418bd65ea17a9d021208d45cfe067eaee,Object resource = TransactionSynchronizationManager.getResource(getResourceToBind());,0,0,0.0,162
180d57c418bd65ea17a9d021208d45cfe067eaee,Message<?> failedMessage = null;,0,0,0.0,163
180d57c418bd65ea17a9d021208d45cfe067eaee,throw (MessagingException) e;,0,0,0.0,164
180d57c418bd65ea17a9d021208d45cfe067eaee,return this.pollingTask.call();,0,0,0.0,165
180d57c418bd65ea17a9d021208d45cfe067eaee,.doOnSubscribe(subscription -> this.subscription = subscription);,0,0,0.0,166
180d57c418bd65ea17a9d021208d45cfe067eaee,.repeat(this::isRunning),0,0,0.0,167
180d57c418bd65ea17a9d021208d45cfe067eaee,")), 1)",0,0,0.0,168
180d57c418bd65ea17a9d021208d45cfe067eaee,new Date()),0,0,0.0,169
180d57c418bd65ea17a9d021208d45cfe067eaee,"triggerContext.lastActualExecutionTime(),",0,0,0.0,170
180d57c418bd65ea17a9d021208d45cfe067eaee,.doOnComplete(() ->,0,0,0.0,171
180d57c418bd65ea17a9d021208d45cfe067eaee,.subscribeOn(Schedulers.fromExecutor(this.taskExecutor)),0,0,0.0,172
180d57c418bd65ea17a9d021208d45cfe067eaee,.take(this.maxMessagesPerPoll),0,0,0.0,173
180d57c418bd65ea17a9d021208d45cfe067eaee,fluxSink.complete();,0,0,0.0,174
180d57c418bd65ea17a9d021208d45cfe067eaee,fluxSink.next(message);,0,0,0.0,175
180d57c418bd65ea17a9d021208d45cfe067eaee,Flux,0,0,0.0,176
180d57c418bd65ea17a9d021208d45cfe067eaee,.flatMapMany(l ->,0,0,0.0,177
180d57c418bd65ea17a9d021208d45cfe067eaee,"new Date(), null))",0,0,0.0,178
180d57c418bd65ea17a9d021208d45cfe067eaee,"triggerContext.update(triggerContext.lastScheduledExecutionTime(),",0,0,0.0,179
180d57c418bd65ea17a9d021208d45cfe067eaee,.doOnNext(l ->,0,0,0.0,180
180d57c418bd65ea17a9d021208d45cfe067eaee,Mono.delay(duration),0,0,0.0,181
180d57c418bd65ea17a9d021208d45cfe067eaee,.concatMap(duration ->,0,0,0.0,182
180d57c418bd65ea17a9d021208d45cfe067eaee,}),0,0,0.0,183
180d57c418bd65ea17a9d021208d45cfe067eaee,sink.complete();,0,0,0.0,184
180d57c418bd65ea17a9d021208d45cfe067eaee,sink.next(Duration.ofMillis(millis));,0,0,0.0,185
180d57c418bd65ea17a9d021208d45cfe067eaee,long millis = date.getTime() - System.currentTimeMillis();,0,0,0.0,186
180d57c418bd65ea17a9d021208d45cfe067eaee,"triggerContext.update(date, null, null);",0,0,0.0,187
180d57c418bd65ea17a9d021208d45cfe067eaee,Date date = this.trigger.nextExecutionTime(triggerContext);,0,0,0.0,188
180d57c418bd65ea17a9d021208d45cfe067eaee,return Flux,0,0,0.0,189
180d57c418bd65ea17a9d021208d45cfe067eaee,});,0,0,0.0,190
180d57c418bd65ea17a9d021208d45cfe067eaee,private volatile long receiveTimeout = DEFAULT_RECEIVE_TIMEOUT;,1,0,0.0,191
