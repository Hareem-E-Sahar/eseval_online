commit_id,line,line_level_label,count,line_score,row
19027e872dd5bd4bcac6971ea83324661939f850,st += ('Z' if tz == 'UTC' else tz),1,6,1.0,1
19027e872dd5bd4bcac6971ea83324661939f850,"def __init__(self, auth_token=None, user=None, tenant=None, is_admin=False,",1,6,1.0,2
19027e872dd5bd4bcac6971ea83324661939f850,tz = at.tzinfo.tzname(None) if at.tzinfo else 'UTC',1,5,0.8333333333333333,3
19027e872dd5bd4bcac6971ea83324661939f850,self.auth_token = auth_token,1,3,0.5,4
19027e872dd5bd4bcac6971ea83324661939f850,utcnow.override_time = None,1,2,0.3333333333333333,5
19027e872dd5bd4bcac6971ea83324661939f850,self.tenant = tenant,1,2,0.3333333333333333,6
19027e872dd5bd4bcac6971ea83324661939f850,self.user = user,1,2,0.3333333333333333,7
19027e872dd5bd4bcac6971ea83324661939f850,:return: True if expiration is within the given duration,1,2,0.3333333333333333,8
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Determines if time is going to happen in the next window seconds.",1,2,0.3333333333333333,9
19027e872dd5bd4bcac6971ea83324661939f850,return ((delta.days * 24 * 3600) + delta.seconds +,1,2,0.3333333333333333,10
19027e872dd5bd4bcac6971ea83324661939f850,assert utcnow.override_time is not None,1,2,0.3333333333333333,11
19027e872dd5bd4bcac6971ea83324661939f850,soon = (utcnow() + datetime.timedelta(seconds=window)),1,2,0.3333333333333333,12
19027e872dd5bd4bcac6971ea83324661939f850,if utcnow.override_time is None:,1,2,0.3333333333333333,13
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Return True if before is older than seconds.""""""",1,2,0.3333333333333333,14
19027e872dd5bd4bcac6971ea83324661939f850,if offset is None:,1,2,0.3333333333333333,15
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Parse time from ISO 8601 format.""""""",1,2,0.3333333333333333,16
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Stringify time in ISO 8601 format.""""""",1,2,0.3333333333333333,17
19027e872dd5bd4bcac6971ea83324661939f850,PERFECT_TIME_FORMAT = _ISO8601_TIME_FORMAT_SUBSECOND,1,2,0.3333333333333333,18
19027e872dd5bd4bcac6971ea83324661939f850,# ISO 8601 extended time format with microseconds,1,2,0.3333333333333333,19
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Return True if after is newer than seconds.""""""",1,2,0.3333333333333333,20
19027e872dd5bd4bcac6971ea83324661939f850,"def delta_seconds(before, after):",1,1,0.16666666666666666,21
19027e872dd5bd4bcac6971ea83324661939f850,def generate_request_id():,1,1,0.16666666666666666,22
19027e872dd5bd4bcac6971ea83324661939f850,Projects should subclass this class if they wish to enhance the request,1,1,0.16666666666666666,23
19027e872dd5bd4bcac6971ea83324661939f850,"#    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT",1,1,0.16666666666666666,24
19027e872dd5bd4bcac6971ea83324661939f850,"def is_soon(dt, window):",1,1,0.16666666666666666,25
19027e872dd5bd4bcac6971ea83324661939f850,def total_seconds(delta):,1,1,0.16666666666666666,26
19027e872dd5bd4bcac6971ea83324661939f850,delta = after - before,1,1,0.16666666666666666,27
19027e872dd5bd4bcac6971ea83324661939f850,"Note: tzinfo is stripped, but not required for relative times.",1,1,0.16666666666666666,28
19027e872dd5bd4bcac6971ea83324661939f850,def unmarshall_time(tyme):,1,1,0.16666666666666666,29
19027e872dd5bd4bcac6971ea83324661939f850,now = utcnow(),1,1,0.16666666666666666,30
19027e872dd5bd4bcac6971ea83324661939f850,if not now:,1,1,0.16666666666666666,31
19027e872dd5bd4bcac6971ea83324661939f850,def marshall_now(now=None):,1,1,0.16666666666666666,32
19027e872dd5bd4bcac6971ea83324661939f850,def clear_time_override():,1,1,0.16666666666666666,33
19027e872dd5bd4bcac6971ea83324661939f850,Stores information about the security context under which the user,1,1,0.16666666666666666,34
19027e872dd5bd4bcac6971ea83324661939f850,return 'req-%s' % uuidutils.generate_uuid(),1,1,0.16666666666666666,35
19027e872dd5bd4bcac6971ea83324661939f850,"tenant=None,",1,1,0.16666666666666666,36
19027e872dd5bd4bcac6971ea83324661939f850,self.is_admin = is_admin,1,1,0.16666666666666666,37
19027e872dd5bd4bcac6971ea83324661939f850,self.read_only = read_only,1,1,0.16666666666666666,38
19027e872dd5bd4bcac6971ea83324661939f850,if not request_id:,1,1,0.16666666666666666,39
19027e872dd5bd4bcac6971ea83324661939f850,request_id = generate_request_id(),1,1,0.16666666666666666,40
19027e872dd5bd4bcac6971ea83324661939f850,self.request_id = request_id,1,1,0.16666666666666666,41
19027e872dd5bd4bcac6971ea83324661939f850,def to_dict(self):,1,1,0.16666666666666666,42
19027e872dd5bd4bcac6971ea83324661939f850,"'auth_token': self.auth_token,",1,1,0.16666666666666666,43
19027e872dd5bd4bcac6971ea83324661939f850,"def get_admin_context(show_deleted=""no""):",1,1,0.16666666666666666,44
19027e872dd5bd4bcac6971ea83324661939f850,"context = RequestContext(None,",1,1,0.16666666666666666,45
19027e872dd5bd4bcac6971ea83324661939f850,def advance_time_delta(timedelta):,1,1,0.16666666666666666,46
19027e872dd5bd4bcac6971ea83324661939f850,"def get_context_from_function_and_args(function, args, kwargs):",1,1,0.16666666666666666,47
19027e872dd5bd4bcac6971ea83324661939f850,This is useful in a couple of decorators where we don't,1,1,0.16666666666666666,48
19027e872dd5bd4bcac6971ea83324661939f850,"if isinstance(arg, RequestContext):",1,1,0.16666666666666666,49
19027e872dd5bd4bcac6971ea83324661939f850,return None,1,1,0.16666666666666666,50
19027e872dd5bd4bcac6971ea83324661939f850,def advance_time_seconds(seconds):,1,1,0.16666666666666666,51
19027e872dd5bd4bcac6971ea83324661939f850,self.show_deleted = show_deleted,1,1,0.16666666666666666,52
19027e872dd5bd4bcac6971ea83324661939f850,utcnow.override_time = override_time or datetime.datetime.utcnow(),1,1,0.16666666666666666,53
19027e872dd5bd4bcac6971ea83324661939f850,offset = timestamp.utcoffset(),1,1,0.16666666666666666,54
19027e872dd5bd4bcac6971ea83324661939f850,"#    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT",1,1,0.16666666666666666,55
19027e872dd5bd4bcac6971ea83324661939f850,"given, defaults to the current UTC time.",1,1,0.16666666666666666,56
19027e872dd5bd4bcac6971ea83324661939f850,_ISO8601_TIME_FORMAT_SUBSECOND = '%Y-%m-%dT%H:%M:%S.%f',1,1,0.16666666666666666,57
19027e872dd5bd4bcac6971ea83324661939f850,"def isotime(at=None, subsecond=False):",1,1,0.16666666666666666,58
19027e872dd5bd4bcac6971ea83324661939f850,if not at:,1,1,0.16666666666666666,59
19027e872dd5bd4bcac6971ea83324661939f850,at = utcnow(),1,1,0.16666666666666666,60
19027e872dd5bd4bcac6971ea83324661939f850,st = at.strftime(_ISO8601_TIME_FORMAT,1,1,0.16666666666666666,61
19027e872dd5bd4bcac6971ea83324661939f850,if not subsecond,1,1,0.16666666666666666,62
19027e872dd5bd4bcac6971ea83324661939f850,else _ISO8601_TIME_FORMAT_SUBSECOND),1,1,0.16666666666666666,63
19027e872dd5bd4bcac6971ea83324661939f850,def parse_isotime(timestr):,1,1,0.16666666666666666,64
19027e872dd5bd4bcac6971ea83324661939f850,"def strtime(at=None, fmt=PERFECT_TIME_FORMAT):",1,1,0.16666666666666666,65
19027e872dd5bd4bcac6971ea83324661939f850,"def parse_strtime(timestr, fmt=PERFECT_TIME_FORMAT):",1,1,0.16666666666666666,66
19027e872dd5bd4bcac6971ea83324661939f850,def normalize_time(timestamp):,1,1,0.16666666666666666,67
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Normalize time in arbitrary timezone to UTC naive object.""""""",1,1,0.16666666666666666,68
19027e872dd5bd4bcac6971ea83324661939f850,_ISO8601_TIME_FORMAT = '%Y-%m-%dT%H:%M:%S',1,1,0.16666666666666666,69
19027e872dd5bd4bcac6971ea83324661939f850,"def is_older_than(before, seconds):",1,1,0.16666666666666666,70
19027e872dd5bd4bcac6971ea83324661939f850,after = after.replace(tzinfo=None),1,1,0.16666666666666666,71
19027e872dd5bd4bcac6971ea83324661939f850,def set_time_override(override_time=None):,1,1,0.16666666666666666,72
19027e872dd5bd4bcac6971ea83324661939f850,def iso8601_from_timestamp(timestamp):,1,1,0.16666666666666666,73
19027e872dd5bd4bcac6971ea83324661939f850,def utcnow():,1,1,0.16666666666666666,74
19027e872dd5bd4bcac6971ea83324661939f850,# NOTE(kgriffs): This is several times faster,1,1,0.16666666666666666,75
19027e872dd5bd4bcac6971ea83324661939f850,def utcnow_ts():,1,1,0.16666666666666666,76
19027e872dd5bd4bcac6971ea83324661939f850,if utcnow.override_time:,1,1,0.16666666666666666,77
19027e872dd5bd4bcac6971ea83324661939f850,after = parse_strtime(after).replace(tzinfo=None),1,1,0.16666666666666666,78
19027e872dd5bd4bcac6971ea83324661939f850,"def is_newer_than(after, seconds):",1,1,0.16666666666666666,79
19027e872dd5bd4bcac6971ea83324661939f850,before = before.replace(tzinfo=None),1,1,0.16666666666666666,80
19027e872dd5bd4bcac6971ea83324661939f850,before = parse_strtime(before).replace(tzinfo=None),1,1,0.16666666666666666,81
19027e872dd5bd4bcac6971ea83324661939f850,"if isinstance(before, six.string_types):",1,1,0.16666666666666666,82
19027e872dd5bd4bcac6971ea83324661939f850,"if isinstance(after, six.string_types):",1,1,0.16666666666666666,83
19027e872dd5bd4bcac6971ea83324661939f850,from oslo_context import context as oslo_context,0,0,0.0,84
19027e872dd5bd4bcac6971ea83324661939f850,float(delta.microseconds) / (10 ** 6)),1,0,0.0,85
19027e872dd5bd4bcac6971ea83324661939f850,:param dt: the time,1,0,0.0,86
19027e872dd5bd4bcac6971ea83324661939f850,:param window: minimum seconds to remain to consider the time not soon,1,0,0.0,87
19027e872dd5bd4bcac6971ea83324661939f850,return normalize_time(dt) <= soon,1,0,0.0,88
19027e872dd5bd4bcac6971ea83324661939f850,from neutron.openstack.common import context as common_context,1,0,0.0,89
19027e872dd5bd4bcac6971ea83324661939f850,class ContextBase(oslo_context.RequestContext):,0,0,0.0,90
19027e872dd5bd4bcac6971ea83324661939f850,class ContextBase(common_context.RequestContext):,1,0,0.0,91
19027e872dd5bd4bcac6971ea83324661939f850,# vim: tabstop=4 shiftwidth=4 softtabstop=4,1,0,0.0,92
19027e872dd5bd4bcac6971ea83324661939f850,# Copyright 2011 OpenStack Foundation.,1,0,0.0,93
19027e872dd5bd4bcac6971ea83324661939f850,# All Rights Reserved.,1,0,0.0,94
19027e872dd5bd4bcac6971ea83324661939f850,return delta.total_seconds(),1,0,0.0,95
19027e872dd5bd4bcac6971ea83324661939f850,"Compute the difference in seconds between two date, time, or",1,0,0.0,96
19027e872dd5bd4bcac6971ea83324661939f850,"doesn't have method total_seconds in Python2.6, calculate it manually.",1,0,0.0,97
19027e872dd5bd4bcac6971ea83324661939f850,"Compute total seconds of datetime.timedelta, datetime.timedelta",1,0,0.0,98
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Return the total seconds of datetime.timedelta object.",1,0,0.0,99
19027e872dd5bd4bcac6971ea83324661939f850,return total_seconds(delta),1,0,0.0,100
19027e872dd5bd4bcac6971ea83324661939f850,"datetime objects (as a float, to microsecond resolution).",1,0,0.0,101
19027e872dd5bd4bcac6971ea83324661939f850,"return datetime.datetime(day=tyme['day'],",1,0,0.0,102
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Return the difference between two timing objects.",1,0,0.0,103
19027e872dd5bd4bcac6971ea83324661939f850,microsecond=tyme['microsecond']),1,0,0.0,104
19027e872dd5bd4bcac6971ea83324661939f850,"second=tyme['second'],",1,0,0.0,105
19027e872dd5bd4bcac6971ea83324661939f850,"minute=tyme['minute'],",1,0,0.0,106
19027e872dd5bd4bcac6971ea83324661939f850,"hour=tyme['hour'],",1,0,0.0,107
19027e872dd5bd4bcac6971ea83324661939f850,"year=tyme['year'],",1,0,0.0,108
19027e872dd5bd4bcac6971ea83324661939f850,"month=tyme['month'],",1,0,0.0,109
19027e872dd5bd4bcac6971ea83324661939f850,"#    Licensed under the Apache License, Version 2.0 (the ""License""); you may",1,0,0.0,110
19027e872dd5bd4bcac6971ea83324661939f850,#,1,0,0.0,111
19027e872dd5bd4bcac6971ea83324661939f850,"accesses the system, as well as additional request information.",1,0,0.0,112
19027e872dd5bd4bcac6971ea83324661939f850,#    not use this file except in compliance with the License. You may obtain,1,0,0.0,113
19027e872dd5bd4bcac6971ea83324661939f850,"return {'user': self.user,",1,0,0.0,114
19027e872dd5bd4bcac6971ea83324661939f850,microsecond=now.microsecond),1,0,0.0,115
19027e872dd5bd4bcac6971ea83324661939f850,"for arg in itertools.chain(kwargs.values(), args):",1,0,0.0,116
19027e872dd5bd4bcac6971ea83324661939f850,know much about the function we're wrapping.,1,0,0.0,117
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Find an arg of type RequestContext and return it.",1,0,0.0,118
19027e872dd5bd4bcac6971ea83324661939f850,return context,1,0,0.0,119
19027e872dd5bd4bcac6971ea83324661939f850,show_deleted=show_deleted),1,0,0.0,120
19027e872dd5bd4bcac6971ea83324661939f850,"is_admin=True,",1,0,0.0,121
19027e872dd5bd4bcac6971ea83324661939f850,'request_id': self.request_id},1,0,0.0,122
19027e872dd5bd4bcac6971ea83324661939f850,"'show_deleted': self.show_deleted,",1,0,0.0,123
19027e872dd5bd4bcac6971ea83324661939f850,"'read_only': self.read_only,",1,0,0.0,124
19027e872dd5bd4bcac6971ea83324661939f850,"'is_admin': self.is_admin,",1,0,0.0,125
19027e872dd5bd4bcac6971ea83324661939f850,"'tenant': self.tenant,",1,0,0.0,126
19027e872dd5bd4bcac6971ea83324661939f850,"read_only=False, show_deleted=False, request_id=None):",1,0,0.0,127
19027e872dd5bd4bcac6971ea83324661939f850,#    a copy of the License at,1,0,0.0,128
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Helper class to represent useful information about a request context.",1,0,0.0,129
19027e872dd5bd4bcac6971ea83324661939f850,class RequestContext(object):,1,0,0.0,130
19027e872dd5bd4bcac6971ea83324661939f850,from neutron.openstack.common import uuidutils,1,0,0.0,131
19027e872dd5bd4bcac6971ea83324661939f850,import itertools,1,0,0.0,132
19027e872dd5bd4bcac6971ea83324661939f850,context or provide additional information in their specific WSGI pipeline.,1,0,0.0,133
19027e872dd5bd4bcac6971ea83324661939f850,Simple class that stores security context information in the web request.,1,0,0.0,134
19027e872dd5bd4bcac6971ea83324661939f850,"""""""",1,0,0.0,135
19027e872dd5bd4bcac6971ea83324661939f850,#    under the License.,1,0,0.0,136
19027e872dd5bd4bcac6971ea83324661939f850,#    License for the specific language governing permissions and limitations,1,0,0.0,137
19027e872dd5bd4bcac6971ea83324661939f850,"#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",1,0,0.0,138
19027e872dd5bd4bcac6971ea83324661939f850,"#    Unless required by applicable law or agreed to in writing, software",1,0,0.0,139
19027e872dd5bd4bcac6971ea83324661939f850,#         http://www.apache.org/licenses/LICENSE-2.0,1,0,0.0,140
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Unmarshall a datetime dict.""""""",1,0,0.0,141
19027e872dd5bd4bcac6971ea83324661939f850,import six,1,0,0.0,142
19027e872dd5bd4bcac6971ea83324661939f850,"minute=now.minute, second=now.second,",1,0,0.0,143
19027e872dd5bd4bcac6971ea83324661939f850,import calendar,1,0,0.0,144
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Turn a formatted time back into a datetime.""""""",1,0,0.0,145
19027e872dd5bd4bcac6971ea83324661939f850,return at.strftime(fmt),1,0,0.0,146
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Returns formatted utcnow.""""""",1,0,0.0,147
19027e872dd5bd4bcac6971ea83324661939f850,except TypeError as e:,1,0,0.0,148
19027e872dd5bd4bcac6971ea83324661939f850,raise ValueError(six.text_type(e)),1,0,0.0,149
19027e872dd5bd4bcac6971ea83324661939f850,except iso8601.ParseError as e:,1,0,0.0,150
19027e872dd5bd4bcac6971ea83324661939f850,return iso8601.parse_date(timestr),1,0,0.0,151
19027e872dd5bd4bcac6971ea83324661939f850,try:,1,0,0.0,152
19027e872dd5bd4bcac6971ea83324661939f850,return st,1,0,0.0,153
19027e872dd5bd4bcac6971ea83324661939f850,import iso8601,1,0,0.0,154
19027e872dd5bd4bcac6971ea83324661939f850,import time,1,0,0.0,155
19027e872dd5bd4bcac6971ea83324661939f850,import datetime,1,0,0.0,156
19027e872dd5bd4bcac6971ea83324661939f850,Time related utilities and helper functions.,1,0,0.0,157
19027e872dd5bd4bcac6971ea83324661939f850,"return dict(day=now.day, month=now.month, year=now.year, hour=now.hour,",1,0,0.0,158
19027e872dd5bd4bcac6971ea83324661939f850,"""""""",1,0,0.0,159
19027e872dd5bd4bcac6971ea83324661939f850,#    under the License.,1,0,0.0,160
19027e872dd5bd4bcac6971ea83324661939f850,#    License for the specific language governing permissions and limitations,1,0,0.0,161
19027e872dd5bd4bcac6971ea83324661939f850,"#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",1,0,0.0,162
19027e872dd5bd4bcac6971ea83324661939f850,"#    Unless required by applicable law or agreed to in writing, software",1,0,0.0,163
19027e872dd5bd4bcac6971ea83324661939f850,#         http://www.apache.org/licenses/LICENSE-2.0,1,0,0.0,164
19027e872dd5bd4bcac6971ea83324661939f850,#    a copy of the License at,1,0,0.0,165
19027e872dd5bd4bcac6971ea83324661939f850,#    not use this file except in compliance with the License. You may obtain,1,0,0.0,166
19027e872dd5bd4bcac6971ea83324661939f850,"#    Licensed under the Apache License, Version 2.0 (the ""License""); you may",1,0,0.0,167
19027e872dd5bd4bcac6971ea83324661939f850,#,1,0,0.0,168
19027e872dd5bd4bcac6971ea83324661939f850,# All Rights Reserved.,1,0,0.0,169
19027e872dd5bd4bcac6971ea83324661939f850,# Copyright 2011 OpenStack Foundation.,1,0,0.0,170
19027e872dd5bd4bcac6971ea83324661939f850,"return datetime.datetime.strptime(timestr, fmt)",1,0,0.0,171
19027e872dd5bd4bcac6971ea83324661939f850,return timestamp,1,0,0.0,172
19027e872dd5bd4bcac6971ea83324661939f850,return timestamp.replace(tzinfo=None) - offset,1,0,0.0,173
19027e872dd5bd4bcac6971ea83324661939f850,else:,1,0,0.0,174
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Make an rpc-safe datetime with microseconds.",1,0,0.0,175
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Remove the overridden time.""""""",1,0,0.0,176
19027e872dd5bd4bcac6971ea83324661939f850,"advance_time_delta(datetime.timedelta(0, seconds))",1,0,0.0,177
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Advance overridden time by seconds.""""""",1,0,0.0,178
19027e872dd5bd4bcac6971ea83324661939f850,utcnow.override_time += timedelta,1,0,0.0,179
19027e872dd5bd4bcac6971ea83324661939f850,except TypeError:,1,0,0.0,180
19027e872dd5bd4bcac6971ea83324661939f850,dt += timedelta,1,0,0.0,181
19027e872dd5bd4bcac6971ea83324661939f850,for dt in utcnow.override_time:,1,0,0.0,182
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Advance overridden time using a datetime.timedelta.""""""",1,0,0.0,183
19027e872dd5bd4bcac6971ea83324661939f850,:param override_time: datetime instance or list thereof. If not,1,0,0.0,184
19027e872dd5bd4bcac6971ea83324661939f850,"Make it return a constant time or a list thereof, one at a time.",1,0,0.0,185
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Overrides utils.utcnow.",1,0,0.0,186
19027e872dd5bd4bcac6971ea83324661939f850,return isotime(datetime.datetime.utcfromtimestamp(timestamp)),1,0,0.0,187
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Returns an iso8601 formatted date from timestamp.""""""",1,0,0.0,188
19027e872dd5bd4bcac6971ea83324661939f850,return datetime.datetime.utcnow(),1,0,0.0,189
19027e872dd5bd4bcac6971ea83324661939f850,return utcnow.override_time,1,0,0.0,190
19027e872dd5bd4bcac6971ea83324661939f850,except AttributeError:,1,0,0.0,191
19027e872dd5bd4bcac6971ea83324661939f850,return utcnow.override_time.pop(0),1,0,0.0,192
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Overridable version of utils.utcnow.""""""",1,0,0.0,193
19027e872dd5bd4bcac6971ea83324661939f850,return calendar.timegm(utcnow().timetuple()),1,0,0.0,194
19027e872dd5bd4bcac6971ea83324661939f850,return int(time.time()),1,0,0.0,195
19027e872dd5bd4bcac6971ea83324661939f850,# than going through calendar.timegm(...),1,0,0.0,196
19027e872dd5bd4bcac6971ea83324661939f850,"""""""Timestamp version of our utcnow function.""""""",1,0,0.0,197
19027e872dd5bd4bcac6971ea83324661939f850,return after - utcnow() > datetime.timedelta(seconds=seconds),1,0,0.0,198
19027e872dd5bd4bcac6971ea83324661939f850,return utcnow() - before > datetime.timedelta(seconds=seconds),1,0,0.0,199
19027e872dd5bd4bcac6971ea83324661939f850,return arg,1,0,0.0,200
