commit_id,line,line_level_label,count,line_score,row
2406723e3f4313cf959ce2aff0578693004c1112,Order cart = null;,0,3,1.0,1
2406723e3f4313cf959ce2aff0578693004c1112,Order cart = orderService.findCartForCustomer(anonymousCustomer);,0,3,1.0,2
2406723e3f4313cf959ce2aff0578693004c1112,Order cart = orderService.findCartForCustomer(customer);,1,3,1.0,3
2406723e3f4313cf959ce2aff0578693004c1112,"public Order mergeCart(Customer customer, WebRequest request) {",0,3,1.0,4
2406723e3f4313cf959ce2aff0578693004c1112,cart = orderService.getNullOrder();,1,2,0.6666666666666666,5
2406723e3f4313cf959ce2aff0578693004c1112,"@Resource(name = ""blOrderService"")",1,2,0.6666666666666666,6
2406723e3f4313cf959ce2aff0578693004c1112,"@Resource(name = ""blOrderLockManager"")",1,2,0.6666666666666666,7
2406723e3f4313cf959ce2aff0578693004c1112,"@Resource(name = ""blCartStateRequestProcessor"")",1,2,0.6666666666666666,8
2406723e3f4313cf959ce2aff0578693004c1112,* @param copyCartWhenSpecifiedStateChanges whether or not the old cart should be copied to a new cart and then repriced,1,2,0.6666666666666666,9
2406723e3f4313cf959ce2aff0578693004c1112,public boolean isCopyCartWhenSpecifiedStateChanges() {,1,2,0.6666666666666666,10
2406723e3f4313cf959ce2aff0578693004c1112,* Gets whether or not the cart should be copied to a new cart and then repriced if,1,2,0.6666666666666666,11
2406723e3f4313cf959ce2aff0578693004c1112,CartStateRequestProcessor.cartRequestAttributeName = cartRequestAttributeName;,1,2,0.6666666666666666,12
2406723e3f4313cf959ce2aff0578693004c1112,public static void setCartRequestAttributeName(String cartRequestAttributeName) {,1,2,0.6666666666666666,13
2406723e3f4313cf959ce2aff0578693004c1112,return cartRequestAttributeName;,1,2,0.6666666666666666,14
2406723e3f4313cf959ce2aff0578693004c1112,public static String getCartRequestAttributeName() {,1,2,0.6666666666666666,15
2406723e3f4313cf959ce2aff0578693004c1112,cart = orderService.createNewCartForCustomer(customer);,1,2,0.6666666666666666,16
2406723e3f4313cf959ce2aff0578693004c1112,public void setCopyCartWhenSpecifiedStateChanges(boolean copyCartWhenSpecifiedStateChanges) {,1,2,0.6666666666666666,17
2406723e3f4313cf959ce2aff0578693004c1112,"protected static String cartRequestAttributeName = ""cart"";",1,2,0.6666666666666666,18
2406723e3f4313cf959ce2aff0578693004c1112,cart = orderService.getNullOrder();,0,2,0.6666666666666666,19
2406723e3f4313cf959ce2aff0578693004c1112,protected boolean copyCartWhenSpecifiedStateChanges = false;,1,2,0.6666666666666666,20
2406723e3f4313cf959ce2aff0578693004c1112,"@Resource(name = ""blMergeCartService"")",0,2,0.6666666666666666,21
2406723e3f4313cf959ce2aff0578693004c1112,"@Resource(name = ""blCustomerStateRequestProcessor"")",0,2,0.6666666666666666,22
2406723e3f4313cf959ce2aff0578693004c1112,"cart = mergeCart(customer, request);",0,2,0.6666666666666666,23
2406723e3f4313cf959ce2aff0578693004c1112,cart = orderService.findCartForCustomer(customer);,0,2,0.6666666666666666,24
2406723e3f4313cf959ce2aff0578693004c1112,"protected static String cartRequestAttributeName = ""cart"";",0,2,0.6666666666666666,25
2406723e3f4313cf959ce2aff0578693004c1112,"public boolean mergeCartNeeded(Customer customer, WebRequest request) {",0,2,0.6666666666666666,26
2406723e3f4313cf959ce2aff0578693004c1112,public static String getCartRequestAttributeName() {,0,2,0.6666666666666666,27
2406723e3f4313cf959ce2aff0578693004c1112,return cartRequestAttributeName;,0,2,0.6666666666666666,28
2406723e3f4313cf959ce2aff0578693004c1112,public static void setCartRequestAttributeName(String cartRequestAttributeName) {,0,2,0.6666666666666666,29
2406723e3f4313cf959ce2aff0578693004c1112,CartStateRequestProcessor.cartRequestAttributeName = cartRequestAttributeName;,0,2,0.6666666666666666,30
2406723e3f4313cf959ce2aff0578693004c1112,return mergeCartResponse.getOrder();,0,1,0.3333333333333333,31
2406723e3f4313cf959ce2aff0578693004c1112,UpdateCartResponse updateCartResponse = updateCartService.copyCartToCurrentContext(cart);,1,1,0.3333333333333333,32
2406723e3f4313cf959ce2aff0578693004c1112,import org.broadleafcommerce.core.order.service.call.UpdateCartResponse;,1,1,0.3333333333333333,33
2406723e3f4313cf959ce2aff0578693004c1112,if (customer != null) {,1,1,0.3333333333333333,34
2406723e3f4313cf959ce2aff0578693004c1112,"LOG.trace(""Looking up cart for customer "" + customer.getId());",1,1,0.3333333333333333,35
2406723e3f4313cf959ce2aff0578693004c1112,if (cart == null) {,1,1,0.3333333333333333,36
2406723e3f4313cf959ce2aff0578693004c1112,} else {,1,1,0.3333333333333333,37
2406723e3f4313cf959ce2aff0578693004c1112,try {,1,1,0.3333333333333333,38
2406723e3f4313cf959ce2aff0578693004c1112,} catch (IllegalArgumentException e) {,1,1,0.3333333333333333,39
2406723e3f4313cf959ce2aff0578693004c1112,if (copyCartWhenSpecifiedStateChanges) {,1,1,0.3333333333333333,40
2406723e3f4313cf959ce2aff0578693004c1112,return copyCartWhenSpecifiedStateChanges;,1,1,0.3333333333333333,41
2406723e3f4313cf959ce2aff0578693004c1112,// Setup cart for content rule processing,1,1,0.3333333333333333,42
2406723e3f4313cf959ce2aff0578693004c1112,"Map<String, Object> ruleMap = (Map<String, Object>) request.getAttribute(BLC_RULE_MAP_PARAM, WebRequest.SCOPE_REQUEST);",1,1,0.3333333333333333,43
2406723e3f4313cf959ce2aff0578693004c1112,if (ruleMap == null) {,1,1,0.3333333333333333,44
2406723e3f4313cf959ce2aff0578693004c1112,"ruleMap = new HashMap<String, Object>();",1,1,0.3333333333333333,45
2406723e3f4313cf959ce2aff0578693004c1112,"// Leaving the following line in for backwards compatibility, but all rules should use order as the",1,1,0.3333333333333333,46
2406723e3f4313cf959ce2aff0578693004c1112,this.copyCartWhenSpecifiedStateChanges = copyCartWhenSpecifiedStateChanges;,1,1,0.3333333333333333,47
2406723e3f4313cf959ce2aff0578693004c1112,import org.springframework.beans.factory.annotation.Autowired;,0,1,0.3333333333333333,48
2406723e3f4313cf959ce2aff0578693004c1112,import org.springframework.beans.factory.annotation.Qualifier;,0,1,0.3333333333333333,49
2406723e3f4313cf959ce2aff0578693004c1112,import javax.annotation.Resource;,1,1,0.3333333333333333,50
2406723e3f4313cf959ce2aff0578693004c1112,} catch (PricingException e) {,0,1,0.3333333333333333,51
2406723e3f4313cf959ce2aff0578693004c1112,} catch (RemoveFromCartException e) {,0,1,0.3333333333333333,52
2406723e3f4313cf959ce2aff0578693004c1112,"Customer customer = (Customer) request.getAttribute(CustomerStateRequestProcessor.getCustomerRequestAttributeName(), WebRequest.SCOPE_REQUEST);",1,1,0.3333333333333333,53
2406723e3f4313cf959ce2aff0578693004c1112,"mergeCartResponse = mergeCartService.mergeCart(customer, cart);",0,1,0.3333333333333333,54
2406723e3f4313cf959ce2aff0578693004c1112,"if (mergeCartNeeded(customer, request)) {",0,1,0.3333333333333333,55
2406723e3f4313cf959ce2aff0578693004c1112,try {,0,1,0.3333333333333333,56
2406723e3f4313cf959ce2aff0578693004c1112,import org.broadleafcommerce.core.order.service.MergeCartService;,0,1,0.3333333333333333,57
2406723e3f4313cf959ce2aff0578693004c1112,import org.broadleafcommerce.core.order.service.exception.RemoveFromCartException;,0,1,0.3333333333333333,58
2406723e3f4313cf959ce2aff0578693004c1112,import org.broadleafcommerce.core.pricing.service.exception.PricingException;,0,1,0.3333333333333333,59
2406723e3f4313cf959ce2aff0578693004c1112,* Ensures that the customer's current cart is available to the request.,0,1,0.3333333333333333,60
2406723e3f4313cf959ce2aff0578693004c1112,"private String mergeCartResponseKey = ""bl_merge_cart_response"";",0,1,0.3333333333333333,61
2406723e3f4313cf959ce2aff0578693004c1112,protected CustomerStateRequestProcessor customerStateRequestProcessor;,0,1,0.3333333333333333,62
2406723e3f4313cf959ce2aff0578693004c1112,"Customer customer = (Customer) request.getAttribute(CustomerStateRequestProcessor.getCustomerRequestAttributeName(),",0,1,0.3333333333333333,63
2406723e3f4313cf959ce2aff0578693004c1112,if (customer == null) {,0,1,0.3333333333333333,64
2406723e3f4313cf959ce2aff0578693004c1112,import org.broadleafcommerce.core.order.service.call.MergeCartResponse;,0,1,0.3333333333333333,65
2406723e3f4313cf959ce2aff0578693004c1112,"LOG.trace(""Merge cart required, calling mergeCart "" + customer.getId());",0,1,0.3333333333333333,66
2406723e3f4313cf959ce2aff0578693004c1112,if (ruleMap == null) {,0,1,0.3333333333333333,67
2406723e3f4313cf959ce2aff0578693004c1112,} else {,0,1,0.3333333333333333,68
2406723e3f4313cf959ce2aff0578693004c1112,"// Leaving the following line in for backwards compatibility, but all rules should use order as the",0,1,0.3333333333333333,69
2406723e3f4313cf959ce2aff0578693004c1112,"ruleMap = new HashMap<String, Object>();",0,1,0.3333333333333333,70
2406723e3f4313cf959ce2aff0578693004c1112,Customer anonymousCustomer = customerStateRequestProcessor.resolveAnonymousCustomer(request);,0,1,0.3333333333333333,71
2406723e3f4313cf959ce2aff0578693004c1112,"Map<String, Object> ruleMap = (Map<String, Object>) request.getAttribute(BLC_RULE_MAP_PARAM, WebRequest.SCOPE_REQUEST);",0,1,0.3333333333333333,72
2406723e3f4313cf959ce2aff0578693004c1112,// Setup cart for content rule processing,0,1,0.3333333333333333,73
2406723e3f4313cf959ce2aff0578693004c1112,if (cart == null) {,0,1,0.3333333333333333,74
2406723e3f4313cf959ce2aff0578693004c1112,return (anonymousCustomer != null && customer.getId() != null && !customer.getId().equals(anonymousCustomer.getId()));,0,1,0.3333333333333333,75
2406723e3f4313cf959ce2aff0578693004c1112,updateCartService.validateCart(cart);,1,0,0.0,76
2406723e3f4313cf959ce2aff0578693004c1112,"request.setAttribute(BLC_RULE_MAP_PARAM, ruleMap, WebRequest.SCOPE_REQUEST);",1,0,0.0,77
2406723e3f4313cf959ce2aff0578693004c1112,"request.setAttribute(""updateCartResponse"", updateCartResponse, WebRequest.SCOPE_REQUEST);",1,0,0.0,78
2406723e3f4313cf959ce2aff0578693004c1112,orderService.cancelOrder(cart);,1,0,0.0,79
2406723e3f4313cf959ce2aff0578693004c1112,"request.setAttribute(cartRequestAttributeName, cart, WebRequest.SCOPE_REQUEST);",1,0,0.0,80
2406723e3f4313cf959ce2aff0578693004c1112,"ruleMap.put(""order"", cart);",1,0,0.0,81
2406723e3f4313cf959ce2aff0578693004c1112,// variable name.,1,0,0.0,82
2406723e3f4313cf959ce2aff0578693004c1112,"ruleMap.put(""cart"", cart);",1,0,0.0,83
2406723e3f4313cf959ce2aff0578693004c1112,* @return the copyCartWhenSpecifiedStateChanges,1,0,0.0,84
2406723e3f4313cf959ce2aff0578693004c1112,/**,1,0,0.0,85
2406723e3f4313cf959ce2aff0578693004c1112,* {@link UpdateCartService#validateCart(Order)} throws an IllegalArgumentException,1,0,0.0,86
2406723e3f4313cf959ce2aff0578693004c1112,*,1,0,0.0,87
2406723e3f4313cf959ce2aff0578693004c1112,*/,1,0,0.0,88
2406723e3f4313cf959ce2aff0578693004c1112,@Autowired,0,0,0.0,89
2406723e3f4313cf959ce2aff0578693004c1112,"@Qualifier(""blCartStateRequestProcessor"")",0,0,0.0,90
2406723e3f4313cf959ce2aff0578693004c1112,"@Qualifier(""blOrderLockManager"")",0,0,0.0,91
2406723e3f4313cf959ce2aff0578693004c1112,"* Genericized version of the CartStateFilter. This was made to facilitate reuse between Servlet Filters, Portlet Filters and Spring MVC interceptors. Spring has an easy way of converting HttpRequests and PortletRequests into WebRequests via <br />",1,0,0.0,92
2406723e3f4313cf959ce2aff0578693004c1112,},1,0,0.0,93
2406723e3f4313cf959ce2aff0578693004c1112,return;,0,0,0.0,94
2406723e3f4313cf959ce2aff0578693004c1112,"request.setAttribute(mergeCartResponseKey, mergeCartResponse, WebRequest.SCOPE_GLOBAL_SESSION);",0,0,0.0,95
2406723e3f4313cf959ce2aff0578693004c1112,throw new RuntimeException(e);,0,0,0.0,96
2406723e3f4313cf959ce2aff0578693004c1112,*,0,0,0.0,97
2406723e3f4313cf959ce2aff0578693004c1112,"* Also invokes blMergeCartProcessor"" if the user has just logged in.",0,0,0.0,98
2406723e3f4313cf959ce2aff0578693004c1112,"* Genericized version of the CartStateFilter. This was made to facilitate reuse between Servlet Filters, Portlet Filters",0,0,0.0,99
2406723e3f4313cf959ce2aff0578693004c1112,* and Spring MVC interceptors. Spring has an easy way of converting HttpRequests and PortletRequests into WebRequests,0,0,0.0,100
2406723e3f4313cf959ce2aff0578693004c1112,* via <br />,0,0,0.0,101
2406723e3f4313cf959ce2aff0578693004c1112,private MergeCartService mergeCartService;,0,0,0.0,102
2406723e3f4313cf959ce2aff0578693004c1112,WebRequest.SCOPE_REQUEST);,0,0,0.0,103
2406723e3f4313cf959ce2aff0578693004c1112,},0,0,0.0,104
2406723e3f4313cf959ce2aff0578693004c1112,updateCartService.updateAndValidateCart(cart);,0,0,0.0,105
2406723e3f4313cf959ce2aff0578693004c1112,"request.setAttribute(cartRequestAttributeName, cart, WebRequest.SCOPE_REQUEST);",0,0,0.0,106
2406723e3f4313cf959ce2aff0578693004c1112,"ruleMap.put(""order"", cart);",0,0,0.0,107
2406723e3f4313cf959ce2aff0578693004c1112,// variable name.,0,0,0.0,108
2406723e3f4313cf959ce2aff0578693004c1112,"ruleMap.put(""cart"", cart);",0,0,0.0,109
2406723e3f4313cf959ce2aff0578693004c1112,"request.setAttribute(BLC_RULE_MAP_PARAM, ruleMap, WebRequest.SCOPE_REQUEST);",0,0,0.0,110
2406723e3f4313cf959ce2aff0578693004c1112,MergeCartResponse mergeCartResponse;,0,0,0.0,111
2406723e3f4313cf959ce2aff0578693004c1112,"@Qualifier(""blOrderService"")",0,0,0.0,112
