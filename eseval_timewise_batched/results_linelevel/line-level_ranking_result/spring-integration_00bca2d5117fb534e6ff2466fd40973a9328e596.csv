commit_id,line,line_level_label,count,line_score,row
00bca2d5117fb534e6ff2466fd40973a9328e596,RootBeanDefinition channelDefinition = new RootBeanDefinition(DirectChannel.class);,0,4,1.0,1
00bca2d5117fb534e6ff2466fd40973a9328e596,RootBeanDefinition channelDefinition = new RootBeanDefinition(DirectChannel.class);,1,4,1.0,2
00bca2d5117fb534e6ff2466fd40973a9328e596,if (queueElement != null && (dispatcherElement != null || hasDispatcherAttribute)) {,1,3,0.75,3
00bca2d5117fb534e6ff2466fd40973a9328e596,RootBeanDefinition testBeanDefinition = new RootBeanDefinition(TestBean.class);,0,3,0.75,4
00bca2d5117fb534e6ff2466fd40973a9328e596,RootBeanDefinition channelDefinition = (RootBeanDefinition) channelBuilder.getBeanDefinition();,0,3,0.75,5
00bca2d5117fb534e6ff2466fd40973a9328e596,RootBeanDefinition testBeanDefinition = new RootBeanDefinition(TestBean.class);,1,3,0.75,6
00bca2d5117fb534e6ff2466fd40973a9328e596,RootBeanDefinition channelDefinition = (RootBeanDefinition) channelBuilder.getBeanDefinition();,1,3,0.75,7
00bca2d5117fb534e6ff2466fd40973a9328e596,"// this attribute is deprecated, but if set, we need to create a DirectChannel",1,3,0.75,8
00bca2d5117fb534e6ff2466fd40973a9328e596,"MessageChannel channel = (MessageChannel) context.getBean(""input"");",0,2,0.5,9
00bca2d5117fb534e6ff2466fd40973a9328e596,BeanDefinitionBuilder channelBuilder = BeanDefinitionBuilder.rootBeanDefinition(DirectChannel.class);,1,2,0.5,10
00bca2d5117fb534e6ff2466fd40973a9328e596,* Copyright 2002-2019 the original author or authors.,1,2,0.5,11
00bca2d5117fb534e6ff2466fd40973a9328e596,BeanDefinitionBuilder channelBuilder = BeanDefinitionBuilder.rootBeanDefinition(DirectChannel.class);,0,2,0.5,12
00bca2d5117fb534e6ff2466fd40973a9328e596,"MessageChannel channel = (MessageChannel) context.getBean(""input"");",1,2,0.5,13
00bca2d5117fb534e6ff2466fd40973a9328e596,* Copyright 2002-2022 the original author or authors.,0,2,0.5,14
00bca2d5117fb534e6ff2466fd40973a9328e596,builder = BeanDefinitionBuilder.genericBeanDefinition(DirectChannel.class);,1,2,0.5,15
00bca2d5117fb534e6ff2466fd40973a9328e596,if (dispatcherElement != null && hasDispatcherAttribute) {,1,2,0.5,16
00bca2d5117fb534e6ff2466fd40973a9328e596,if (queueElement != null && dispatcherElement != null) {,0,2,0.5,17
00bca2d5117fb534e6ff2466fd40973a9328e596,import org.junit.jupiter.api.Test;,0,1,0.25,18
00bca2d5117fb534e6ff2466fd40973a9328e596,channelDefinition.getConstructorArgumentValues().addGenericArgumentValue(new RoundRobinLoadBalancingStrategy());,1,1,0.25,19
00bca2d5117fb534e6ff2466fd40973a9328e596,List<Integer> calls = testBean.calls;,1,1,0.25,20
00bca2d5117fb534e6ff2466fd40973a9328e596,"TestBean testBean = (TestBean) context.getBean(""testBean"");",1,1,0.25,21
00bca2d5117fb534e6ff2466fd40973a9328e596,"context.registerBeanDefinition(""postProcessor"", new RootBeanDefinition(MessagingAnnotationPostProcessor.class));",1,1,0.25,22
00bca2d5117fb534e6ff2466fd40973a9328e596,GenericApplicationContext context = TestUtils.createTestApplicationContext();,1,1,0.25,23
00bca2d5117fb534e6ff2466fd40973a9328e596,import org.junit.Test;,1,1,0.25,24
00bca2d5117fb534e6ff2466fd40973a9328e596,.addGenericArgumentValue(new RoundRobinLoadBalancingStrategy());,0,1,0.25,25
00bca2d5117fb534e6ff2466fd40973a9328e596,},0,1,0.25,26
00bca2d5117fb534e6ff2466fd40973a9328e596,List<Integer> calls = testBean.calls;,0,1,0.25,27
00bca2d5117fb534e6ff2466fd40973a9328e596,"TestBean testBean = (TestBean) context.getBean(""testBean"");",0,1,0.25,28
00bca2d5117fb534e6ff2466fd40973a9328e596,import org.springframework.integration.config.MessagingAnnotationPostProcessor;,0,1,0.25,29
00bca2d5117fb534e6ff2466fd40973a9328e596,new RootBeanDefinition(MessagingAnnotationPostProcessor.class));,0,1,0.25,30
00bca2d5117fb534e6ff2466fd40973a9328e596,else if (dispatcherElement == null) {,1,1,0.25,31
00bca2d5117fb534e6ff2466fd40973a9328e596,},1,1,0.25,32
00bca2d5117fb534e6ff2466fd40973a9328e596,if (dispatcherElement == null) {,0,1,0.25,33
00bca2d5117fb534e6ff2466fd40973a9328e596,// check for the dispatcher attribute (deprecated),1,1,0.25,34
00bca2d5117fb534e6ff2466fd40973a9328e596,"String dispatcherAttribute = element.getAttribute(""dispatcher"");",1,1,0.25,35
00bca2d5117fb534e6ff2466fd40973a9328e596,boolean hasDispatcherAttribute = StringUtils.hasText(dispatcherAttribute);,1,1,0.25,36
00bca2d5117fb534e6ff2466fd40973a9328e596,if (hasDispatcherAttribute && logger.isWarnEnabled()) {,1,1,0.25,37
00bca2d5117fb534e6ff2466fd40973a9328e596,try (GenericApplicationContext context = TestUtils.createTestApplicationContext()) {,0,1,0.25,38
00bca2d5117fb534e6ff2466fd40973a9328e596,"+ ""Please use the dispatcher sub-element instead."", element);",1,1,0.25,39
00bca2d5117fb534e6ff2466fd40973a9328e596,// without any LoadBalancerStrategy and the failover flag set to true (default).,1,1,0.25,40
00bca2d5117fb534e6ff2466fd40973a9328e596,"if (""failover"".equals(dispatcherAttribute)) {",1,1,0.25,41
00bca2d5117fb534e6ff2466fd40973a9328e596,"// round-robin dispatcher is used by default, the ""failover"" value simply disables it",1,1,0.25,42
00bca2d5117fb534e6ff2466fd40973a9328e596,if (hasDispatcherAttribute) {,1,1,0.25,43
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-3""));",1,0,0.0,44
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(4).intValue()).isEqualTo(5);,1,0,0.0,45
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(3).intValue()).isEqualTo(4);,1,0,0.0,46
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(2).intValue()).isEqualTo(3);,1,0,0.0,47
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(1).intValue()).isEqualTo(2);,1,0,0.0,48
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(0).intValue()).isEqualTo(1);,1,0,0.0,49
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.size()).isEqualTo(5);,1,0,0.0,50
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-5""));",1,0,0.0,51
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-4""));",1,0,0.0,52
00bca2d5117fb534e6ff2466fd40973a9328e596,context.refresh();,1,0,0.0,53
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-2""));",1,0,0.0,54
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-1""));",1,0,0.0,55
00bca2d5117fb534e6ff2466fd40973a9328e596,"context.registerBeanDefinition(""testBean"", testBeanDefinition);",1,0,0.0,56
00bca2d5117fb534e6ff2466fd40973a9328e596,testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(1);,1,0,0.0,57
00bca2d5117fb534e6ff2466fd40973a9328e596,"context.registerBeanDefinition(""input"", channelDefinition);",1,0,0.0,58
00bca2d5117fb534e6ff2466fd40973a9328e596,context.close();,1,0,0.0,59
00bca2d5117fb534e6ff2466fd40973a9328e596,channelDefinition.getConstructorArgumentValues(),0,0,0.0,60
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.size()).isEqualTo(1);,0,0,0.0,61
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-11""));",0,0,0.0,62
00bca2d5117fb534e6ff2466fd40973a9328e596,testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(1000);,0,0,0.0,63
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.size()).isEqualTo(1);,1,0,0.0,64
00bca2d5117fb534e6ff2466fd40973a9328e596,channelBuilder.addConstructorArgValue(null);,1,0,0.0,65
00bca2d5117fb534e6ff2466fd40973a9328e596,testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(2);,1,0,0.0,66
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(9).intValue()).isEqualTo(5);,0,0,0.0,67
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-11""));",1,0,0.0,68
00bca2d5117fb534e6ff2466fd40973a9328e596,testBean.reset();,1,0,0.0,69
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(9).intValue()).isEqualTo(5);,1,0,0.0,70
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(8).intValue()).isEqualTo(5);,1,0,0.0,71
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(7).intValue()).isEqualTo(4);,1,0,0.0,72
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(6).intValue()).isEqualTo(4);,1,0,0.0,73
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(5).intValue()).isEqualTo(3);,1,0,0.0,74
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(4).intValue()).isEqualTo(3);,1,0,0.0,75
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(3).intValue()).isEqualTo(2);,1,0,0.0,76
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(2).intValue()).isEqualTo(2);,1,0,0.0,77
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(1).intValue()).isEqualTo(1);,1,0,0.0,78
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(0).intValue()).isEqualTo(1);,1,0,0.0,79
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.size()).isEqualTo(10);,1,0,0.0,80
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-10""));",1,0,0.0,81
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-9""));",1,0,0.0,82
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-8""));",1,0,0.0,83
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-7""));",1,0,0.0,84
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<String>(""test-6""));",1,0,0.0,85
00bca2d5117fb534e6ff2466fd40973a9328e596,testBean.reset();,0,0,0.0,86
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(1).intValue()).isEqualTo(2);,0,0,0.0,87
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(8).intValue()).isEqualTo(5);,0,0,0.0,88
00bca2d5117fb534e6ff2466fd40973a9328e596,builder.addConstructorArgValue(null);,1,0,0.0,89
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-3""));",0,0,0.0,90
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-2""));",0,0,0.0,91
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-1""));",0,0,0.0,92
00bca2d5117fb534e6ff2466fd40973a9328e596,context.refresh();,0,0,0.0,93
00bca2d5117fb534e6ff2466fd40973a9328e596,"context.registerBeanDefinition(""testBean"", testBeanDefinition);",0,0,0.0,94
00bca2d5117fb534e6ff2466fd40973a9328e596,testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(1);,0,0,0.0,95
00bca2d5117fb534e6ff2466fd40973a9328e596,"context.registerBeanDefinition(""input"", channelDefinition);",0,0,0.0,96
00bca2d5117fb534e6ff2466fd40973a9328e596,"context.registerBeanDefinition(""postProcessor"",",0,0,0.0,97
00bca2d5117fb534e6ff2466fd40973a9328e596,return null;,1,0,0.0,98
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-5""));",0,0,0.0,99
00bca2d5117fb534e6ff2466fd40973a9328e596,"+ ""sub-element are mutually exclusive. NOTE: the attribute is DEPRECATED. """,1,0,0.0,100
00bca2d5117fb534e6ff2466fd40973a9328e596,"""The 'dispatcher' attribute and 'dispatcher' """,1,0,0.0,101
00bca2d5117fb534e6ff2466fd40973a9328e596,parserContext.getReaderContext().error(,1,0,0.0,102
00bca2d5117fb534e6ff2466fd40973a9328e596,element);,1,0,0.0,103
00bca2d5117fb534e6ff2466fd40973a9328e596,"""The 'dispatcher' attribute or sub-element "" + ""and any queue sub-element are mutually exclusive."",",1,0,0.0,104
00bca2d5117fb534e6ff2466fd40973a9328e596,"+ ""Please use the 'dispatcher' sub-element instead."");",1,0,0.0,105
00bca2d5117fb534e6ff2466fd40973a9328e596,"logger.warn(""The 'dispatcher' attribute on the 'channel' element is deprecated. """,1,0,0.0,106
00bca2d5117fb534e6ff2466fd40973a9328e596,"""The 'dispatcher' sub-element and any queue sub-element are mutually exclusive."", element);",0,0,0.0,107
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-4""));",0,0,0.0,108
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.size()).isEqualTo(5);,0,0,0.0,109
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(7).intValue()).isEqualTo(4);,0,0,0.0,110
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-10""));",0,0,0.0,111
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(6).intValue()).isEqualTo(4);,0,0,0.0,112
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(5).intValue()).isEqualTo(3);,0,0,0.0,113
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(4).intValue()).isEqualTo(3);,0,0,0.0,114
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(3).intValue()).isEqualTo(2);,0,0,0.0,115
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(2).intValue()).isEqualTo(2);,0,0,0.0,116
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(1).intValue()).isEqualTo(1);,0,0,0.0,117
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.get(0).intValue()).isEqualTo(1);,0,0,0.0,118
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(testBean.calls.size()).isEqualTo(10);,0,0,0.0,119
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-9""));",0,0,0.0,120
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(0).intValue()).isEqualTo(1);,0,0,0.0,121
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-8""));",0,0,0.0,122
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-7""));",0,0,0.0,123
00bca2d5117fb534e6ff2466fd40973a9328e596,"channel.send(new GenericMessage<>(""test-6""));",0,0,0.0,124
00bca2d5117fb534e6ff2466fd40973a9328e596,testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(2);,0,0,0.0,125
00bca2d5117fb534e6ff2466fd40973a9328e596,channelBuilder.addConstructorArgValue(null);,0,0,0.0,126
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(4).intValue()).isEqualTo(5);,0,0,0.0,127
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(3).intValue()).isEqualTo(4);,0,0,0.0,128
00bca2d5117fb534e6ff2466fd40973a9328e596,assertThat(calls.get(2).intValue()).isEqualTo(3);,0,0,0.0,129
00bca2d5117fb534e6ff2466fd40973a9328e596,testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(1000);,1,0,0.0,130
