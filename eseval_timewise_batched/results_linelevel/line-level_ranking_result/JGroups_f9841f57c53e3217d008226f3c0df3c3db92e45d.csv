commit_id,line,line_level_label,count,line_score,row
f9841f57c53e3217d008226f3c0df3c3db92e45d,"* @version $Id: FlushTest.java,v 1.90 2009/10/14 15:44:00 vlada Exp $",0,7,1.0,1
f9841f57c53e3217d008226f3c0df3c3db92e45d,"* @version $Id: FlushTest.java,v 1.89 2009/10/14 13:01:09 belaban Exp $",1,6,0.8571428571428571,2
f9841f57c53e3217d008226f3c0df3c3db92e45d,"+ "" timed out waiting for flush responses after """,0,4,0.5714285714285714,3
f9841f57c53e3217d008226f3c0df3c3db92e45d,"+ "" ms. Rejected flush to participants """,0,4,0.5714285714285714,4
f9841f57c53e3217d008226f3c0df3c3db92e45d,"+ "" ms. Rejecting flush to participants """,1,4,0.5714285714285714,5
f9841f57c53e3217d008226f3c0df3c3db92e45d,"successfulFlush=(Boolean)up_prot.up(new Event(Event.SUSPEND, new ArrayList<Address>(new_view.getMembers())));",1,4,0.5714285714285714,6
f9841f57c53e3217d008226f3c0df3c3db92e45d,"public static boolean startFlush(Channel c, List<Address> flushParticipants, int numberOfAttempts,  long randomSleepTimeoutFloor,long randomSleepTimeoutCeiling) {",1,4,0.5714285714285714,7
f9841f57c53e3217d008226f3c0df3c3db92e45d,successfulFlush = r.booleanValue();,1,3,0.42857142857142855,8
f9841f57c53e3217d008226f3c0df3c3db92e45d,boolean successfulFlush = false;,1,3,0.42857142857142855,9
f9841f57c53e3217d008226f3c0df3c3db92e45d,"int numberOfAttempts, long randomSleepTimeoutFloor, long randomSleepTimeoutCeiling) {",0,3,0.42857142857142855,10
f9841f57c53e3217d008226f3c0df3c3db92e45d,"up_prot.up(new Event(Event.SUSPEND, new ArrayList<Address>(new_view.getMembers())));",0,3,0.42857142857142855,11
f9841f57c53e3217d008226f3c0df3c3db92e45d,"+ "": timed out waiting for flush responses after """,1,3,0.42857142857142855,12
f9841f57c53e3217d008226f3c0df3c3db92e45d,Boolean r = flush_promise.getResultWithTimeout(start_flush_timeout);,1,3,0.42857142857142855,13
f9841f57c53e3217d008226f3c0df3c3db92e45d,boolean successfulFlush = false;,1,3,0.42857142857142855,14
f9841f57c53e3217d008226f3c0df3c3db92e45d,private boolean startFlush(List<Address> flushParticipants) {,1,3,0.42857142857142855,15
f9841f57c53e3217d008226f3c0df3c3db92e45d,"flush_promise.setResult(new FlushStartResult(Boolean.FALSE, new Exception(""Flush failed for "" + msg.getSrc())));",0,3,0.42857142857142855,16
f9841f57c53e3217d008226f3c0df3c3db92e45d,FlushStartResult r = flush_promise.getResultWithTimeout(start_flush_timeout);,0,3,0.42857142857142855,17
f9841f57c53e3217d008226f3c0df3c3db92e45d,+ start_flush_timeout,1,2,0.2857142857142857,18
f9841f57c53e3217d008226f3c0df3c3db92e45d,successfulFlush = c.startFlush(false);,1,2,0.2857142857142857,19
f9841f57c53e3217d008226f3c0df3c3db92e45d,"successfulFlush = c.startFlush(flushParticipants, false);",1,2,0.2857142857142857,20
f9841f57c53e3217d008226f3c0df3c3db92e45d,"public static boolean startFlush(Channel c, List<Address> flushParticipants,",0,2,0.2857142857142857,21
f9841f57c53e3217d008226f3c0df3c3db92e45d,successfulFlush = true;,0,2,0.2857142857142857,22
f9841f57c53e3217d008226f3c0df3c3db92e45d,private void startFlush(List<Address> flushParticipants) throws RuntimeException {,0,2,0.2857142857142857,23
f9841f57c53e3217d008226f3c0df3c3db92e45d,private final Promise<Boolean> flush_promise = new Promise<Boolean>();,1,2,0.2857142857142857,24
f9841f57c53e3217d008226f3c0df3c3db92e45d,+ start_flush_timeout,0,2,0.2857142857142857,25
f9841f57c53e3217d008226f3c0df3c3db92e45d,private final Promise<FlushStartResult> flush_promise = new Promise<FlushStartResult>();,0,2,0.2857142857142857,26
f9841f57c53e3217d008226f3c0df3c3db92e45d,"private static final FlushStartResult SUCCESS_START_FLUSH = new FlushStartResult(Boolean.TRUE,null);",0,2,0.2857142857142857,27
f9841f57c53e3217d008226f3c0df3c3db92e45d,boolean successfulFlush=false;,0,1,0.14285714285714285,28
f9841f57c53e3217d008226f3c0df3c3db92e45d,},1,1,0.14285714285714285,29
f9841f57c53e3217d008226f3c0df3c3db92e45d,if(successfulFlush),1,1,0.14285714285714285,30
f9841f57c53e3217d008226f3c0df3c3db92e45d,int attemptCount = 0;,1,1,0.14285714285714285,31
f9841f57c53e3217d008226f3c0df3c3db92e45d,} catch(Exception e) {,0,1,0.14285714285714285,32
f9841f57c53e3217d008226f3c0df3c3db92e45d,},0,1,0.14285714285714285,33
f9841f57c53e3217d008226f3c0df3c3db92e45d,} catch (Exception e) {,0,1,0.14285714285714285,34
f9841f57c53e3217d008226f3c0df3c3db92e45d,int attemptCount = 0;,0,1,0.14285714285714285,35
f9841f57c53e3217d008226f3c0df3c3db92e45d,if(successfulFlush),1,1,0.14285714285714285,36
f9841f57c53e3217d008226f3c0df3c3db92e45d,boolean successfulFlush=true;,1,1,0.14285714285714285,37
f9841f57c53e3217d008226f3c0df3c3db92e45d,},0,1,0.14285714285714285,38
f9841f57c53e3217d008226f3c0df3c3db92e45d,} catch (Exception e) {,0,1,0.14285714285714285,39
f9841f57c53e3217d008226f3c0df3c3db92e45d,return successfulFlush;,1,1,0.14285714285714285,40
f9841f57c53e3217d008226f3c0df3c3db92e45d,return successfulFlush;,1,1,0.14285714285714285,41
f9841f57c53e3217d008226f3c0df3c3db92e45d,},0,1,0.14285714285714285,42
f9841f57c53e3217d008226f3c0df3c3db92e45d,+ flushParticipants);,1,1,0.14285714285714285,43
f9841f57c53e3217d008226f3c0df3c3db92e45d,throw new RuntimeException(r.getFailureCause());,0,1,0.14285714285714285,44
f9841f57c53e3217d008226f3c0df3c3db92e45d,throw new RuntimeException(localAddress,0,1,0.14285714285714285,45
f9841f57c53e3217d008226f3c0df3c3db92e45d,"+ flushParticipants,e);",0,1,0.14285714285714285,46
f9841f57c53e3217d008226f3c0df3c3db92e45d,"throw new RuntimeException(""Flush attempt is in progress"");",0,1,0.14285714285714285,47
f9841f57c53e3217d008226f3c0df3c3db92e45d,Util.shutdown(c2); // kill the flush coord: failure detection will kick in in a few seconds and remove C2,1,1,0.14285714285714285,48
f9841f57c53e3217d008226f3c0df3c3db92e45d,this.result = result;,0,1,0.14285714285714285,49
f9841f57c53e3217d008226f3c0df3c3db92e45d,this.failureCause = failureCause;,0,1,0.14285714285714285,50
f9841f57c53e3217d008226f3c0df3c3db92e45d,public boolean failed(){,0,1,0.14285714285714285,51
f9841f57c53e3217d008226f3c0df3c3db92e45d,public boolean startFlush() {,1,1,0.14285714285714285,52
f9841f57c53e3217d008226f3c0df3c3db92e45d,private boolean startFlush(Event evt) {,1,1,0.14285714285714285,53
f9841f57c53e3217d008226f3c0df3c3db92e45d,while (attemptCount < numberOfAttempts) {,0,0,0.0,54
f9841f57c53e3217d008226f3c0df3c3db92e45d,return startFlush(evt);,1,0,0.0,55
f9841f57c53e3217d008226f3c0df3c3db92e45d,flush_promise.setResult(Boolean.TRUE);,1,0,0.0,56
f9841f57c53e3217d008226f3c0df3c3db92e45d,flush_promise.setResult(Boolean.FALSE);,1,0,0.0,57
f9841f57c53e3217d008226f3c0df3c3db92e45d,while (attemptCount < maxAttempts) {,0,0,0.0,58
f9841f57c53e3217d008226f3c0df3c3db92e45d,try {,0,0,0.0,59
f9841f57c53e3217d008226f3c0df3c3db92e45d,"Util.sleepRandom(randomFloor, randomCeiling);",0,0,0.0,60
f9841f57c53e3217d008226f3c0df3c3db92e45d,attemptCount++;,0,0,0.0,61
f9841f57c53e3217d008226f3c0df3c3db92e45d,while(attemptCount < maxAttempts){,1,0,0.0,62
f9841f57c53e3217d008226f3c0df3c3db92e45d,"Util.sleepRandom(randomFloor,randomCeiling);",1,0,0.0,63
f9841f57c53e3217d008226f3c0df3c3db92e45d,attemptCount++;,1,0,0.0,64
f9841f57c53e3217d008226f3c0df3c3db92e45d,return false;,0,0,0.0,65
f9841f57c53e3217d008226f3c0df3c3db92e45d,try {,0,0,0.0,66
f9841f57c53e3217d008226f3c0df3c3db92e45d,"c.startFlush(flushParticipants, false);",0,0,0.0,67
f9841f57c53e3217d008226f3c0df3c3db92e45d,return true;,0,0,0.0,68
f9841f57c53e3217d008226f3c0df3c3db92e45d,"Util.sleepRandom(randomSleepTimeoutFloor, randomSleepTimeoutCeiling);",0,0,0.0,69
f9841f57c53e3217d008226f3c0df3c3db92e45d,attemptCount++;,0,0,0.0,70
f9841f57c53e3217d008226f3c0df3c3db92e45d,if (log.isDebugEnabled()),1,0,0.0,71
f9841f57c53e3217d008226f3c0df3c3db92e45d,try{,0,0,0.0,72
f9841f57c53e3217d008226f3c0df3c3db92e45d,c.startFlush(false);,0,0,0.0,73
f9841f57c53e3217d008226f3c0df3c3db92e45d,"Util.sleepRandom(randomSleepTimeoutFloor,randomSleepTimeoutCeiling);",0,0,0.0,74
f9841f57c53e3217d008226f3c0df3c3db92e45d,while(attemptCount < numberOfAttempts){,1,0,0.0,75
f9841f57c53e3217d008226f3c0df3c3db92e45d,break;,1,0,0.0,76
f9841f57c53e3217d008226f3c0df3c3db92e45d,"Util.sleepRandom(randomSleepTimeoutFloor,randomSleepTimeoutCeiling);",1,0,0.0,77
f9841f57c53e3217d008226f3c0df3c3db92e45d,log.debug(localAddress,1,0,0.0,78
f9841f57c53e3217d008226f3c0df3c3db92e45d,public Boolean getResult() {,0,0,0.0,79
f9841f57c53e3217d008226f3c0df3c3db92e45d,return startFlush(flushParticipants);,1,0,0.0,80
f9841f57c53e3217d008226f3c0df3c3db92e45d,return startFlush(new Event(Event.SUSPEND));,1,0,0.0,81
f9841f57c53e3217d008226f3c0df3c3db92e45d,// send out START_FLUSH but call Util.shutdown(Channel) right after,0,0,0.0,82
f9841f57c53e3217d008226f3c0df3c3db92e45d,//failure detection will kick in in a few seconds and remove C2,0,0,0.0,83
f9841f57c53e3217d008226f3c0df3c3db92e45d,//C3 should call STOP_FLUSH,0,0,0.0,84
f9841f57c53e3217d008226f3c0df3c3db92e45d,c2.downcall(new Event(Event.SUSPEND_BUT_FAIL));,0,0,0.0,85
f9841f57c53e3217d008226f3c0df3c3db92e45d,Util.startFlush(c2);,1,0,0.0,86
f9841f57c53e3217d008226f3c0df3c3db92e45d,public void startFlush() {,0,0,0.0,87
f9841f57c53e3217d008226f3c0df3c3db92e45d,startFlush(new Event(Event.SUSPEND));,0,0,0.0,88
f9841f57c53e3217d008226f3c0df3c3db92e45d,private void startFlush(Event evt) {,0,0,0.0,89
f9841f57c53e3217d008226f3c0df3c3db92e45d,startFlush(flushParticipants);,0,0,0.0,90
f9841f57c53e3217d008226f3c0df3c3db92e45d,if(r.failed()),0,0,0.0,91
f9841f57c53e3217d008226f3c0df3c3db92e45d,else {,0,0,0.0,92
f9841f57c53e3217d008226f3c0df3c3db92e45d,startFlush(evt);,0,0,0.0,93
f9841f57c53e3217d008226f3c0df3c3db92e45d,break;,0,0,0.0,94
f9841f57c53e3217d008226f3c0df3c3db92e45d,"flush_promise.setResult(new FlushStartResult(Boolean.TRUE,null));",0,0,0.0,95
f9841f57c53e3217d008226f3c0df3c3db92e45d,flush_promise.setResult(SUCCESS_START_FLUSH);,0,0,0.0,96
f9841f57c53e3217d008226f3c0df3c3db92e45d,private static class FlushStartResult {,0,0,0.0,97
f9841f57c53e3217d008226f3c0df3c3db92e45d,private final Boolean result;,0,0,0.0,98
f9841f57c53e3217d008226f3c0df3c3db92e45d,private final Exception failureCause;,0,0,0.0,99
f9841f57c53e3217d008226f3c0df3c3db92e45d,"public FlushStartResult(Boolean result, Exception failureCause) {",0,0,0.0,100
f9841f57c53e3217d008226f3c0df3c3db92e45d,return result;,0,0,0.0,101
f9841f57c53e3217d008226f3c0df3c3db92e45d,return result == Boolean.FALSE;,0,0,0.0,102
f9841f57c53e3217d008226f3c0df3c3db92e45d,public Exception getFailureCause() {,0,0,0.0,103
f9841f57c53e3217d008226f3c0df3c3db92e45d,return failureCause;,0,0,0.0,104
f9841f57c53e3217d008226f3c0df3c3db92e45d,attemptCount++;,1,0,0.0,105
