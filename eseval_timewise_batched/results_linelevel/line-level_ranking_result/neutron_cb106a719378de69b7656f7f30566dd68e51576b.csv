commit_id,line,line_level_label,count,line_score,row
cb106a719378de69b7656f7f30566dd68e51576b,"host = sa.Column(sa.String(255), nullable=False, default='')",1,5,1.0,1
cb106a719378de69b7656f7f30566dd68e51576b,#    License for the specific language governing permissions and limitations,1,5,1.0,2
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""Serialized profile DB value '%(value)s' for """,1,5,1.0,3
cb106a719378de69b7656f7f30566dd68e51576b,"host = sa.Column(sa.String(255), nullable=False, default='',",0,4,0.8,4
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""Serialized profile DB value '%(value)s' for """,0,4,0.8,5
cb106a719378de69b7656f7f30566dd68e51576b,#    not use this file except in compliance with the License. You may obtain,1,4,0.8,6
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""Multiple ports have port_id starting with %s""),",1,3,0.6000000000000001,7
cb106a719378de69b7656f7f30566dd68e51576b,"#    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT",1,3,0.6000000000000001,8
cb106a719378de69b7656f7f30566dd68e51576b,#    a copy of the License at,1,3,0.6000000000000001,9
cb106a719378de69b7656f7f30566dd68e51576b,# bind. Note that is is OK for the same driver to bind at,0,3,0.6000000000000001,10
cb106a719378de69b7656f7f30566dd68e51576b,"# To prevent a possible binding loop, don't try to bind with",0,3,0.6000000000000001,11
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""Binding info for DVR port %s not found""),",1,3,0.6000000000000001,12
cb106a719378de69b7656f7f30566dd68e51576b,# this driver if the same driver has already bound at a higher,0,3,0.6000000000000001,13
cb106a719378de69b7656f7f30566dd68e51576b,"""for port %(port)s is invalid""),",1,3,0.6000000000000001,14
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""Binding info for DVR port %s not found""),",0,3,0.6000000000000001,15
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""Multiple ports have port_id starting with %s""),",0,3,0.6000000000000001,16
cb106a719378de69b7656f7f30566dd68e51576b,"""for port %(port)s is invalid""),",0,3,0.6000000000000001,17
cb106a719378de69b7656f7f30566dd68e51576b,"vif_details = sa.Column(sa.String(4095), nullable=False, default='')",1,3,0.6000000000000001,18
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""Serialized vif_details DB value '%(value)s' """,1,3,0.6000000000000001,19
cb106a719378de69b7656f7f30566dd68e51576b,"#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",1,2,0.4,20
cb106a719378de69b7656f7f30566dd68e51576b,if (level.driver == driver and,0,2,0.4,21
cb106a719378de69b7656f7f30566dd68e51576b,port_id = context._port['id'],1,2,0.4,22
cb106a719378de69b7656f7f30566dd68e51576b,# Copyright 2014 OpenStack Foundation,1,2,0.4,23
cb106a719378de69b7656f7f30566dd68e51576b,"#    Licensed under the Apache License, Version 2.0 (the ""License""); you may",1,2,0.4,24
cb106a719378de69b7656f7f30566dd68e51576b,revision = '157a5d299379',1,2,0.4,25
cb106a719378de69b7656f7f30566dd68e51576b,#    under the License.,1,2,0.4,26
cb106a719378de69b7656f7f30566dd68e51576b,"# revision identifiers, used by Alembic.",1,2,0.4,27
cb106a719378de69b7656f7f30566dd68e51576b,down_revision = '50d5ba354c23',1,2,0.4,28
cb106a719378de69b7656f7f30566dd68e51576b,"nullable=False, server_default=''))",1,2,0.4,29
cb106a719378de69b7656f7f30566dd68e51576b,# Continue binding another level.,0,2,0.4,30
cb106a719378de69b7656f7f30566dd68e51576b,# level to one of the segments we are currently trying to,0,2,0.4,31
cb106a719378de69b7656f7f30566dd68e51576b,"'vnic_type': binding.vnic_type,",1,2,0.4,32
cb106a719378de69b7656f7f30566dd68e51576b,"if not self._check_driver_to_bind(driver, segments_to_bind,",0,2,0.4,33
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.warning(_(""Port %s not found during update""), port_id)",1,2,0.4,34
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Attempting to bind port %(port)s on host %(host)s """,0,2,0.4,35
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""Failed to commit binding results for %(port)s """,0,2,0.4,36
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""Serialized vif_details DB value '%(value)s' """,0,2,0.4,37
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""Failed to commit binding results for %(port)s """,1,2,0.4,38
cb106a719378de69b7656f7f30566dd68e51576b,"msg = _(""A concurrent port creation has occurred"")",1,2,0.4,39
cb106a719378de69b7656f7f30566dd68e51576b,"vif_details = sa.Column(sa.String(4095), nullable=False, default='',",0,2,0.4,40
cb106a719378de69b7656f7f30566dd68e51576b,"if not self._bind_port_level(context, 0,",0,2,0.4,41
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""Failed to bind port %(port)s on host %(host)s""),",0,2,0.4,42
cb106a719378de69b7656f7f30566dd68e51576b,binding = context._binding,0,2,0.4,43
cb106a719378de69b7656f7f30566dd68e51576b,port_id = context._port['id'],0,2,0.4,44
cb106a719378de69b7656f7f30566dd68e51576b,"def _bind_port_level(self, context, level, segments_to_bind):",0,1,0.2,45
cb106a719378de69b7656f7f30566dd68e51576b,context._binding_levels = [,1,1,0.2,46
cb106a719378de69b7656f7f30566dd68e51576b,if level == MAX_BINDING_LEVELS:,0,1,0.2,47
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""Exceeded maximum binding levels attempting to bind """,0,1,0.2,48
cb106a719378de69b7656f7f30566dd68e51576b,return False,0,1,0.2,49
cb106a719378de69b7656f7f30566dd68e51576b,next_segments = context._next_segments_to_bind,0,1,0.2,50
cb106a719378de69b7656f7f30566dd68e51576b,if next_segments:,0,1,0.2,51
cb106a719378de69b7656f7f30566dd68e51576b,"if self._bind_port_level(context, level + 1,",0,1,0.2,52
cb106a719378de69b7656f7f30566dd68e51576b,# Binding complete.,0,1,0.2,53
cb106a719378de69b7656f7f30566dd68e51576b,"def _check_driver_to_bind(self, driver, segments_to_bind, binding_levels):",0,1,0.2,54
cb106a719378de69b7656f7f30566dd68e51576b,# multiple levels using different segments.,0,1,0.2,55
cb106a719378de69b7656f7f30566dd68e51576b,for level in binding_levels:,0,1,0.2,56
cb106a719378de69b7656f7f30566dd68e51576b,from alembic import op,1,1,0.2,57
cb106a719378de69b7656f7f30566dd68e51576b,#,1,1,0.2,58
cb106a719378de69b7656f7f30566dd68e51576b,#         http://www.apache.org/licenses/LICENSE-2.0,1,1,0.2,59
cb106a719378de69b7656f7f30566dd68e51576b,"#    Unless required by applicable law or agreed to in writing, software",1,1,0.2,60
cb106a719378de69b7656f7f30566dd68e51576b,"""""""ml2 binding:profile",1,1,0.2,61
cb106a719378de69b7656f7f30566dd68e51576b,Revises: 50d5ba354c23,1,1,0.2,62
cb106a719378de69b7656f7f30566dd68e51576b,import sqlalchemy as sa,1,1,0.2,63
cb106a719378de69b7656f7f30566dd68e51576b,from neutron.db import migration,1,1,0.2,64
cb106a719378de69b7656f7f30566dd68e51576b,def upgrade():,1,1,0.2,65
cb106a719378de69b7656f7f30566dd68e51576b,if migration.schema_has_table('ml2_port_bindings'):,1,1,0.2,66
cb106a719378de69b7656f7f30566dd68e51576b,"op.add_column('ml2_port_bindings',",1,1,0.2,67
cb106a719378de69b7656f7f30566dd68e51576b,"sa.Column('profile', sa.String(length=4095),",1,1,0.2,68
cb106a719378de69b7656f7f30566dd68e51576b,MAX_BINDING_LEVELS = 10,0,1,0.2,69
cb106a719378de69b7656f7f30566dd68e51576b,binding.vif_type = portbindings.VIF_TYPE_BINDING_FAILED,0,1,0.2,70
cb106a719378de69b7656f7f30566dd68e51576b,"""port %(port)s on host %(host)s""),",0,1,0.2,71
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.warning(_(""Port %(port)s updated up by agent not found""),",1,1,0.2,72
cb106a719378de69b7656f7f30566dd68e51576b,""" port %s""), id)",0,1,0.2,73
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""mechanism_manager.delete_port_postcommit failed for """,1,1,0.2,74
cb106a719378de69b7656f7f30566dd68e51576b,default=''),1,1,0.2,75
cb106a719378de69b7656f7f30566dd68e51576b,"""port %(port)s is invalid""),",0,1,0.2,76
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.warning(_LW(""In _notify_port_updated(), no bound segment for """,0,1,0.2,77
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Tenant-owned ports exist"")",0,1,0.2,78
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.warning(_LW(""A concurrent port creation has """,0,1,0.2,79
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.exception(_LE(""Exception auto-deleting port %s""),",0,1,0.2,80
cb106a719378de69b7656f7f30566dd68e51576b,"""from port %s""), a.port_id)",0,1,0.2,81
cb106a719378de69b7656f7f30566dd68e51576b,"""failed, deleting port '%s'""), result['id'])",0,1,0.2,82
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Deleting port %s"", id)",0,1,0.2,83
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""The port '%s' was deleted"", id)",0,1,0.2,84
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Calling delete_port for %(port_id)s owned by %(owner)s"",",0,1,0.2,85
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.info(_LI(""Attempt %(count)s to bind port %(port)s""),",0,1,0.2,86
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.warning(_LW(""Port %(port)s updated up by agent not found""),",0,1,0.2,87
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.exception(_(""Exception auto-deleting port %s""),",1,1,0.2,88
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.warning(_LW(""Port %s not found during update""),",0,1,0.2,89
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""The port '%s' was deleted""), id)",1,1,0.2,90
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Deleting port %s""), id)",1,1,0.2,91
cb106a719378de69b7656f7f30566dd68e51576b,"""failed, deleting port '%s'""), result['id'])",1,1,0.2,92
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Calling delete_port for %(port_id)s owned by %(owner)s""",1,1,0.2,93
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Tenant-owned ports exist""))",1,1,0.2,94
cb106a719378de69b7656f7f30566dd68e51576b,"""port %(port)s is invalid""),",1,1,0.2,95
cb106a719378de69b7656f7f30566dd68e51576b,port_id),0,1,0.2,96
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.info(_(""Attempt %(count)s to bind port %(port)s""),",1,1,0.2,97
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.warning(_(""In _notify_port_updated(), no bound segment for """,1,1,0.2,98
cb106a719378de69b7656f7f30566dd68e51576b,"level=level,",0,0,0.0,99
cb106a719378de69b7656f7f30566dd68e51576b,context._prepare_to_bind(segments_to_bind),0,0,0.0,100
cb106a719378de69b7656f7f30566dd68e51576b,context._push_binding_level(,0,0,0.0,101
cb106a719378de69b7656f7f30566dd68e51576b,"host=context.host,",0,0,0.0,102
cb106a719378de69b7656f7f30566dd68e51576b,next_segments):,0,0,0.0,103
cb106a719378de69b7656f7f30566dd68e51576b,segment_id=segment)),0,0,0.0,104
cb106a719378de69b7656f7f30566dd68e51576b,return True,0,0,0.0,105
cb106a719378de69b7656f7f30566dd68e51576b,else:,0,0,0.0,106
cb106a719378de69b7656f7f30566dd68e51576b,continue,0,0,0.0,107
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Bound port: %(port)s, """,0,0,0.0,108
cb106a719378de69b7656f7f30566dd68e51576b,"""host: %(host)s, """,0,0,0.0,109
cb106a719378de69b7656f7f30566dd68e51576b,context._pop_binding_level(),0,0,0.0,110
cb106a719378de69b7656f7f30566dd68e51576b,"""at level %(level)s using segments %(segments)s"",",0,0,0.0,111
cb106a719378de69b7656f7f30566dd68e51576b,context._binding_levels):,0,0,0.0,112
cb106a719378de69b7656f7f30566dd68e51576b,'segments': segments_to_bind}),0,0,0.0,113
cb106a719378de69b7656f7f30566dd68e51576b,"'level': level,",0,0,0.0,114
cb106a719378de69b7656f7f30566dd68e51576b,"{'port': port_id,",0,0,0.0,115
cb106a719378de69b7656f7f30566dd68e51576b,'host': context.host}),0,0,0.0,116
cb106a719378de69b7656f7f30566dd68e51576b,context.network.network_segments):,0,0,0.0,117
cb106a719378de69b7656f7f30566dd68e51576b,context._clear_binding_levels(),0,0,0.0,118
cb106a719378de69b7656f7f30566dd68e51576b,"'host': context.host,",0,0,0.0,119
cb106a719378de69b7656f7f30566dd68e51576b,"{'port': context.current['id'],",0,0,0.0,120
cb106a719378de69b7656f7f30566dd68e51576b,"""port %s""), id)",1,0,0.0,121
cb106a719378de69b7656f7f30566dd68e51576b,"""vif_details: %(vif_details)s, """,0,0,0.0,122
cb106a719378de69b7656f7f30566dd68e51576b,"% {""port_id"": id, ""owner"": device_owner})",1,0,0.0,123
cb106a719378de69b7656f7f30566dd68e51576b,"""vif_type: %(vif_type)s, """,0,0,0.0,124
cb106a719378de69b7656f7f30566dd68e51576b,"""vnic_type: %(vnic_type)s, """,1,0,0.0,125
cb106a719378de69b7656f7f30566dd68e51576b,"""binding_levels: %(binding_levels)s"",",0,0,0.0,126
cb106a719378de69b7656f7f30566dd68e51576b,"""vif_type: %(vif_type)s, """,1,0,0.0,127
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""_bind_port_if_needed """,1,0,0.0,128
cb106a719378de69b7656f7f30566dd68e51576b,Create Date: 2014-02-13 23:48:25.147279,1,0,0.0,129
cb106a719378de69b7656f7f30566dd68e51576b,Revision ID: 157a5d299379,1,0,0.0,130
cb106a719378de69b7656f7f30566dd68e51576b,return,1,0,0.0,131
cb106a719378de69b7656f7f30566dd68e51576b,'binding_levels': context.binding_levels}),1,0,0.0,132
cb106a719378de69b7656f7f30566dd68e51576b,"'vif_details': binding.vif_details,",1,0,0.0,133
cb106a719378de69b7656f7f30566dd68e51576b,"'vif_type': binding.vif_type,",1,0,0.0,134
cb106a719378de69b7656f7f30566dd68e51576b,"'profile': binding.profile,",1,0,0.0,135
cb106a719378de69b7656f7f30566dd68e51576b,"'host': context.host,",1,0,0.0,136
cb106a719378de69b7656f7f30566dd68e51576b,"""binding_levels: %(binding_levels)s"",",1,0,0.0,137
cb106a719378de69b7656f7f30566dd68e51576b,"""vif_details: %(vif_details)s, """,1,0,0.0,138
cb106a719378de69b7656f7f30566dd68e51576b,"""profile: %(profile)s, """,1,0,0.0,139
cb106a719378de69b7656f7f30566dd68e51576b,"'vif_type': binding.vif_type,",0,0,0.0,140
cb106a719378de69b7656f7f30566dd68e51576b,"""host: %(host)s, """,1,0,0.0,141
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Bound port: %(port)s, """,1,0,0.0,142
cb106a719378de69b7656f7f30566dd68e51576b,],1,0,0.0,143
cb106a719378de69b7656f7f30566dd68e51576b,segment_id=segment),1,0,0.0,144
cb106a719378de69b7656f7f30566dd68e51576b,"level=0,",1,0,0.0,145
cb106a719378de69b7656f7f30566dd68e51576b,"host=binding.host,",1,0,0.0,146
cb106a719378de69b7656f7f30566dd68e51576b,"'host': binding.host,",1,0,0.0,147
cb106a719378de69b7656f7f30566dd68e51576b,"{'port': port_id,",1,0,0.0,148
cb106a719378de69b7656f7f30566dd68e51576b,level.segment_id in segments_to_bind):,0,0,0.0,149
cb106a719378de69b7656f7f30566dd68e51576b,'binding_levels': context.binding_levels}),0,0,0.0,150
cb106a719378de69b7656f7f30566dd68e51576b,"'vif_details': binding.vif_details,",0,0,0.0,151
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""No Host supplied to bind DVR Port %s""), id)",1,0,0.0,152
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.info(_LI(""Modular L2 Plugin initialization complete""))",0,0,0.0,153
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""mechanism_manager.create_port_postcommit """,1,0,0.0,154
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Subnets to auto-delete: %s"", subnets)",0,0,0.0,155
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Deleting subnet record"")",0,0,0.0,156
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Ports to auto-deallocate: %s"", allocated)",0,0,0.0,157
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Deleting subnet %s"", id)",0,0,0.0,158
cb106a719378de69b7656f7f30566dd68e51576b,"""failed, deleting subnet '%s'""), result['id'])",0,0,0.0,159
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""mechanism_manager.create_subnet_postcommit """,0,0,0.0,160
cb106a719378de69b7656f7f30566dd68e51576b,""" failed""))",0,0,0.0,161
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""mechanism_manager.delete_network_postcommit""",0,0,0.0,162
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.exception(_LE(""Exception auto-deleting subnet %s""),",0,0,0.0,163
cb106a719378de69b7656f7f30566dd68e51576b,"""occurred""))",0,0,0.0,164
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Committing transaction"")",0,0,0.0,165
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Deleting network record %s"", record)",0,0,0.0,166
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Ports to auto-delete: %s"", ports)",0,0,0.0,167
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""mechanism_manager.delete_subnet_postcommit failed""))",0,0,0.0,168
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(""Deleting network %s"", id)",0,0,0.0,169
cb106a719378de69b7656f7f30566dd68e51576b,"""failed, deleting network '%s'""), result['id'])",0,0,0.0,170
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""mechanism_manager.create_network_postcommit """,0,0,0.0,171
cb106a719378de69b7656f7f30566dd68e51576b,"""port %(port_id)s on network %(network_id)s""),",0,0,0.0,172
cb106a719378de69b7656f7f30566dd68e51576b,"""after %(max)s tries""),",0,0,0.0,173
cb106a719378de69b7656f7f30566dd68e51576b,"from neutron.openstack.common.gettextutils import _LE, _LI, _LW",0,0,0.0,174
cb106a719378de69b7656f7f30566dd68e51576b,default=portbindings.VNIC_NORMAL),1,0,0.0,175
cb106a719378de69b7656f7f30566dd68e51576b,"default='', server_default='')",0,0,0.0,176
cb106a719378de69b7656f7f30566dd68e51576b,server_default=portbindings.VNIC_NORMAL),0,0,0.0,177
cb106a719378de69b7656f7f30566dd68e51576b,"default=portbindings.VNIC_NORMAL,",0,0,0.0,178
cb106a719378de69b7656f7f30566dd68e51576b,server_default=''),0,0,0.0,179
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.exception(_LE(""Exception deleting fixed_ip """,0,0,0.0,180
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""mechanism_manager.create_port_postcommit """,0,0,0.0,181
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""mechanism_manager.delete_subnet_postcommit failed""))",1,0,0.0,182
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Deleting network record %s""), record)",1,0,0.0,183
cb106a719378de69b7656f7f30566dd68e51576b,"""port %s""), a.port_id)",1,0,0.0,184
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.exception(_(""Exception deleting fixed_ip from """,1,0,0.0,185
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Deleting subnet record""))",1,0,0.0,186
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Ports to auto-deallocate: %s""), allocated)",1,0,0.0,187
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Deleting subnet %s""), id)",1,0,0.0,188
cb106a719378de69b7656f7f30566dd68e51576b,"""failed, deleting subnet '%s'""), result['id'])",1,0,0.0,189
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""mechanism_manager.create_subnet_postcommit """,1,0,0.0,190
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""mechanism_manager.delete_network_postcommit failed""))",1,0,0.0,191
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.exception(_(""Exception auto-deleting subnet %s""),",1,0,0.0,192
cb106a719378de69b7656f7f30566dd68e51576b,LOG.warning(msg),1,0,0.0,193
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Committing transaction""))",1,0,0.0,194
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Subnets to auto-delete: %s""), subnets)",1,0,0.0,195
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""_bind_port_if_needed """,0,0,0.0,196
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Ports to auto-delete: %s""), ports)",1,0,0.0,197
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.debug(_(""Deleting network %s""), id)",1,0,0.0,198
cb106a719378de69b7656f7f30566dd68e51576b,"""failed, deleting network '%s'""), result['id'])",1,0,0.0,199
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_(""mechanism_manager.create_network_postcommit """,1,0,0.0,200
cb106a719378de69b7656f7f30566dd68e51576b,"""port %(port_id)s on network %(network_id)s""),",1,0,0.0,201
cb106a719378de69b7656f7f30566dd68e51576b,"""after %(max)s tries""),",1,0,0.0,202
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.info(_(""Modular L2 Plugin initialization complete""))",1,0,0.0,203
cb106a719378de69b7656f7f30566dd68e51576b,from neutron.openstack.common.gettextutils import _LI,1,0,0.0,204
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""mechanism_manager.delete_port_postcommit failed for""",0,0,0.0,205
cb106a719378de69b7656f7f30566dd68e51576b,"{""port_id"": id, ""owner"": device_owner})",0,0,0.0,206
cb106a719378de69b7656f7f30566dd68e51576b,"LOG.error(_LE(""No Host supplied to bind DVR Port %s""), id)",0,0,0.0,207
cb106a719378de69b7656f7f30566dd68e51576b,"""""""",1,0,0.0,208
