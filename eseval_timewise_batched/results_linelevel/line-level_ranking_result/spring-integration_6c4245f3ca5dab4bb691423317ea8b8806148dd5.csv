commit_id,line,line_level_label,count,line_score,row
6c4245f3ca5dab4bb691423317ea8b8806148dd5,* @param annotations The messaging annotation (or meta-annotation hierarchy) on the method.,0,4,1.0,1
6c4245f3ca5dab4bb691423317ea8b8806148dd5,MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,1,4,1.0,2
6c4245f3ca5dab4bb691423317ea8b8806148dd5,private final MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,0,4,1.0,3
6c4245f3ca5dab4bb691423317ea8b8806148dd5,MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,1,4,1.0,4
6c4245f3ca5dab4bb691423317ea8b8806148dd5,MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,1,4,1.0,5
6c4245f3ca5dab4bb691423317ea8b8806148dd5,MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,1,4,1.0,6
6c4245f3ca5dab4bb691423317ea8b8806148dd5,MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,0,4,1.0,7
6c4245f3ca5dab4bb691423317ea8b8806148dd5,MessagingAnnotationPostProcessor postProcessor =,1,3,0.75,8
6c4245f3ca5dab4bb691423317ea8b8806148dd5,TestEndpoint endpoint = new TestEndpoint();,1,3,0.75,9
6c4245f3ca5dab4bb691423317ea8b8806148dd5,FailingTestEndpoint endpoint = new FailingTestEndpoint();,1,3,0.75,10
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"AbstractApplicationContext context = new ClassPathXmlApplicationContext(""simpleAnnotatedEndpointTests.xml"",",1,3,0.75,11
6c4245f3ca5dab4bb691423317ea8b8806148dd5,MessagingAnnotationPostProcessor postProcessor = prepareMessagingAnnotationPostProcessor(context);,0,3,0.75,12
6c4245f3ca5dab4bb691423317ea8b8806148dd5,AbstractApplicationContext context =,0,2,0.5,13
6c4245f3ca5dab4bb691423317ea8b8806148dd5,* Copyright 2002-2023 the original author or authors.,0,2,0.5,14
6c4245f3ca5dab4bb691423317ea8b8806148dd5,* Copyright 2002-2022 the original author or authors.,1,2,0.5,15
6c4245f3ca5dab4bb691423317ea8b8806148dd5,* Copyright 2002-2023 the original author or authors.,0,2,0.5,16
6c4245f3ca5dab4bb691423317ea8b8806148dd5,* Copyright 2002-2019 the original author or authors.,1,2,0.5,17
6c4245f3ca5dab4bb691423317ea8b8806148dd5,* Copyright 2002-2022 the original author or authors.,0,2,0.5,18
6c4245f3ca5dab4bb691423317ea8b8806148dd5,public void testPostProcessorWithoutBeanFactory() {,1,2,0.5,19
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;,1,2,0.5,20
6c4245f3ca5dab4bb691423317ea8b8806148dd5,private static MessagingAnnotationPostProcessor prepareMessagingAnnotationPostProcessor(,0,2,0.5,21
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"GenericMessage<String> messageToSend = new GenericMessage<String>(""world"");",1,2,0.5,22
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"GenericMessage<String> messageToSend = new GenericMessage<>(""world"");",0,2,0.5,23
6c4245f3ca5dab4bb691423317ea8b8806148dd5,* Copyright 2002-2022 the original author or authors.,1,2,0.5,24
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;,0,2,0.5,25
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"boolean isBean = AnnotatedElementUtils.isAnnotated(method, Bean.class.getName());",0,2,0.5,26
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.conversionService = new DefaultConversionService();,0,2,0.5,27
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.beans.factory.BeanFactory;,1,2,0.5,28
6c4245f3ca5dab4bb691423317ea8b8806148dd5,boolean handlerExists = false;,0,2,0.5,29
6c4245f3ca5dab4bb691423317ea8b8806148dd5,boolean createEndpoint = StringUtils.hasText(inputChannel);,0,2,0.5,30
6c4245f3ca5dab4bb691423317ea8b8806148dd5,Object handlerBean = this.resolveTargetBeanFromMethodWithBeanAnnotation(method);,0,2,0.5,31
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"Assert.isTrue(!isBean, ""A channel name in '"" + getInputChannelAttribute() + ""' is required when "" + this.annotationType +",0,2,0.5,32
6c4245f3ca5dab4bb691423317ea8b8806148dd5,protected boolean beanAnnotationAware() {,0,2,0.5,33
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"protected AbstractEndpoint doCreateEndpoint(MessageHandler handler, MessageChannel inputChannel,List<Annotation> annotations) {",0,2,0.5,34
6c4245f3ca5dab4bb691423317ea8b8806148dd5,protected Object resolveTargetBeanFromMethodWithBeanAnnotation(Method method) {,0,2,0.5,35
6c4245f3ca5dab4bb691423317ea8b8806148dd5,} catch (Exception e) {,0,2,0.5,36
6c4245f3ca5dab4bb691423317ea8b8806148dd5,List<Annotation> annotations) {,1,1,0.25,37
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this,1,1,0.25,38
6c4245f3ca5dab4bb691423317ea8b8806148dd5,},0,1,0.25,39
6c4245f3ca5dab4bb691423317ea8b8806148dd5,ConfigurableApplicationContext context) {,0,1,0.25,40
6c4245f3ca5dab4bb691423317ea8b8806148dd5,private MessagingAnnotationPostProcessor prepareMessagingAnnotationPostProcessor(,0,1,0.25,41
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.context.ConfigurableApplicationContext;,0,1,0.25,42
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (this.beanFactory instanceof ConfigurableListableBeanFactory) {,1,1,0.25,43
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"protected AbstractEndpoint doCreateEndpoint(MessageHandler handler, MessageChannel inputChannel,",1,1,0.25,44
6c4245f3ca5dab4bb691423317ea8b8806148dd5,},1,1,0.25,45
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"inputChannel = (MessageChannel) listableBeanFactory.initializeBean(inputChannel, inputChannelName);",1,1,0.25,46
6c4245f3ca5dab4bb691423317ea8b8806148dd5,ConfigurableListableBeanFactory listableBeanFactory = (ConfigurableListableBeanFactory) this.beanFactory;,1,1,0.25,47
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.junit.jupiter.api.Test;,0,1,0.25,48
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"handler = (MessageHandler) listableBeanFactory.initializeBean(handler, handlerBeanName);",1,1,0.25,49
6c4245f3ca5dab4bb691423317ea8b8806148dd5,ConfigurableListableBeanFactory listableBeanFactory = (ConfigurableListableBeanFactory) beanFactory;,1,1,0.25,50
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (beanFactory instanceof ConfigurableListableBeanFactory) {,1,1,0.25,51
6c4245f3ca5dab4bb691423317ea8b8806148dd5,@Test(expected = IllegalArgumentException.class),1,1,0.25,52
6c4245f3ca5dab4bb691423317ea8b8806148dd5,private MessagingAnnotationPostProcessor prepareMessagingAnnotationPostProcessor(,1,1,0.25,53
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.beans.factory.support.BeanDefinitionRegistry;,0,1,0.25,54
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.junit.Before;,1,1,0.25,55
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"Assert.notNull(beanFactory, ""BeanFactory must not be null"");",1,1,0.25,56
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.beans.factory.support.BeanDefinitionRegistry;,1,1,0.25,57
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.beans.factory.support.BeanDefinitionRegistry;,1,1,0.25,58
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"this.context.registerEndpoint(""testEndpoint"", new FailingTestEndpoint());",0,1,0.25,59
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"this.context.registerEndpoint(""testEndpoint"", new TestEndpoint());",0,1,0.25,60
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.junit.Test;,1,1,0.25,61
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.junit.After;,1,1,0.25,62
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.junit.Test;,1,1,0.25,63
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.beans.factory.support.BeanDefinitionRegistry;,0,1,0.25,64
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.junit.jupiter.api.Test;,0,1,0.25,65
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.junit.jupiter.api.BeforeEach;,0,1,0.25,66
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.junit.jupiter.api.AfterEach;,0,1,0.25,67
6c4245f3ca5dab4bb691423317ea8b8806148dd5,},1,1,0.25,68
6c4245f3ca5dab4bb691423317ea8b8806148dd5,new MessagingAnnotationPostProcessor();,1,1,0.25,69
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.beanFactory = beanFactory;,1,1,0.25,70
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"new ClassPathXmlApplicationContext(""simpleAnnotatedEndpointTests.xml"", getClass());",0,1,0.25,71
6c4245f3ca5dab4bb691423317ea8b8806148dd5,throw new IllegalStateException(e);,0,1,0.25,72
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.beanFactory = (ConfigurableListableBeanFactory) beanFactory;,0,1,0.25,73
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"if (this.beanAnnotationAware() && AnnotatedElementUtils.isAnnotated(method, Bean.class.getName())) {",0,1,0.25,74
6c4245f3ca5dab4bb691423317ea8b8806148dd5,else {,0,1,0.25,75
6c4245f3ca5dab4bb691423317ea8b8806148dd5,},0,1,0.25,76
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.conversionService = conversionService;,0,1,0.25,77
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (conversionService != null) {,0,1,0.25,78
6c4245f3ca5dab4bb691423317ea8b8806148dd5,ConversionService conversionService = this.beanFactory.getConversionService();,0,1,0.25,79
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"Assert.notNull(beanFactory, ""'beanFactory' must not be null"");",0,1,0.25,80
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (!handlerExists) {,0,1,0.25,81
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.core.convert.support.DefaultConversionService;,0,1,0.25,82
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.core.convert.ConversionService;,0,1,0.25,83
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.core.annotation.AnnotatedElementUtils;,0,1,0.25,84
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.aop.framework.Advised;,0,1,0.25,85
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.aop.TargetSource;,0,1,0.25,86
6c4245f3ca5dab4bb691423317ea8b8806148dd5,try {,0,1,0.25,87
6c4245f3ca5dab4bb691423317ea8b8806148dd5,handlerExists = handlerBean != null && handler == handlerBean;,0,1,0.25,88
6c4245f3ca5dab4bb691423317ea8b8806148dd5,import org.springframework.context.annotation.Bean;,0,1,0.25,89
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"handler = (MessageHandler) this.beanFactory.initializeBean(handler, handlerBeanName);",0,1,0.25,90
6c4245f3ca5dab4bb691423317ea8b8806148dd5,id = method.getName();,0,1,0.25,91
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (targetSource == null) {,0,1,0.25,92
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (!createEndpoint && beanAnnotationAware()) {,0,1,0.25,93
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (targetObject instanceof Advised) {,0,1,0.25,94
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (expectedType.isAssignableFrom(targetObject.getClass())) {,0,1,0.25,95
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (targetObject == null) {,0,1,0.25,96
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"<H> H extractTypeIfPossible(Object targetObject, Class<H> expectedType) {",0,1,0.25,97
6c4245f3ca5dab4bb691423317ea8b8806148dd5,TargetSource targetSource = ((Advised) targetObject).getTargetSource();,0,1,0.25,98
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (!StringUtils.hasText(id)) {,0,1,0.25,99
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"inputChannel = (MessageChannel) this.beanFactory.initializeBean(inputChannel, inputChannelName);",0,1,0.25,100
6c4245f3ca5dab4bb691423317ea8b8806148dd5,if (!ObjectUtils.isEmpty(names)) {,0,1,0.25,101
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"String[] names = AnnotationUtils.getAnnotation(method, Bean.class).name();",0,1,0.25,102
6c4245f3ca5dab4bb691423317ea8b8806148dd5,""" is used on '@Bean' methods."");",0,1,0.25,103
6c4245f3ca5dab4bb691423317ea8b8806148dd5,String id = null;,0,1,0.25,104
6c4245f3ca5dab4bb691423317ea8b8806148dd5,id = names[0];,0,1,0.25,105
6c4245f3ca5dab4bb691423317ea8b8806148dd5,@AfterEach,0,0,0.0,106
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.postProcessor.afterSingletonsInstantiated();,0,0,0.0,107
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.postProcessor.postProcessBeanFactory(this.context.getBeanFactory());,0,0,0.0,108
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.postProcessor.postProcessBeanDefinitionRegistry((BeanDefinitionRegistry) this.context.getBeanFactory());,0,0,0.0,109
6c4245f3ca5dab4bb691423317ea8b8806148dd5,@BeforeEach,0,0,0.0,110
6c4245f3ca5dab4bb691423317ea8b8806148dd5,.isThrownBy(postProcessor::afterPropertiesSet);,1,0,0.0,111
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.afterPropertiesSet();,1,0,0.0,112
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.setBeanFactory(context.getBeanFactory());,1,0,0.0,113
6c4245f3ca5dab4bb691423317ea8b8806148dd5,assertThatIllegalArgumentException(),1,0,0.0,114
6c4245f3ca5dab4bb691423317ea8b8806148dd5,@Test,1,0,0.0,115
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.postProcessBeanFactory(context.getBeanFactory());,0,0,0.0,116
6c4245f3ca5dab4bb691423317ea8b8806148dd5,@After,1,0,0.0,117
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.postProcessBeanDefinitionRegistry((BeanDefinitionRegistry) context.getBeanFactory());,0,0,0.0,118
6c4245f3ca5dab4bb691423317ea8b8806148dd5,@Before,1,0,0.0,119
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.afterSingletonsInstantiated();,1,0,0.0,120
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.setBeanFactory(context.getBeanFactory());,1,0,0.0,121
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.afterPropertiesSet();,1,0,0.0,122
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.afterSingletonsInstantiated();,1,0,0.0,123
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.context.registerBean(MessagingAnnotationPostProcessor.class);,0,0,0.0,124
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.postProcessBeanDefinitionRegistry((BeanDefinitionRegistry) this.context.getBeanFactory());,1,0,0.0,125
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.postProcessBeanFactory(this.context.getBeanFactory());,1,0,0.0,126
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"postProcessor.postProcessAfterInitialization(endpoint, ""testEndpoint"");",1,0,0.0,127
6c4245f3ca5dab4bb691423317ea8b8806148dd5,this.context.registerBean(MessagingAnnotationPostProcessor.class);,0,0,0.0,128
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"context.registerEndpoint(""testSplitter"", splitter);",0,0,0.0,129
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.postProcessBeanDefinitionRegistry((BeanDefinitionRegistry) this.context.getBeanFactory());,1,0,0.0,130
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.postProcessBeanFactory(this.context.getBeanFactory());,1,0,0.0,131
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.afterSingletonsInstantiated();,1,0,0.0,132
6c4245f3ca5dab4bb691423317ea8b8806148dd5,.getClass());,1,0,0.0,133
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"testChannel.send(new GenericMessage<String>(""foo""));",1,0,0.0,134
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"return extractTypeIfPossible(targetSource.getTarget(), expectedType);",0,0,0.0,135
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"inputChannel.send(new GenericMessage<String>(""world""));",1,0,0.0,136
6c4245f3ca5dab4bb691423317ea8b8806148dd5,protected final BeanFactory beanFactory;,1,0,0.0,137
6c4245f3ca5dab4bb691423317ea8b8806148dd5,protected final ConfigurableListableBeanFactory beanFactory;,0,0,0.0,138
6c4245f3ca5dab4bb691423317ea8b8806148dd5,protected final ConversionService conversionService;,0,0,0.0,139
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"Assert.isInstanceOf(ConfigurableListableBeanFactory.class, beanFactory,",0,0,0.0,140
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"""'beanFactory' must be instanceOf ConfigurableListableBeanFactory"");",0,0,0.0,141
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"this.beanFactory.registerSingleton(handlerBeanName, handler);",0,0,0.0,142
6c4245f3ca5dab4bb691423317ea8b8806148dd5,return createEndpoint;,0,0,0.0,143
6c4245f3ca5dab4bb691423317ea8b8806148dd5,return true;,0,0,0.0,144
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"this.beanFactory.registerSingleton(inputChannelName, inputChannel);",0,0,0.0,145
6c4245f3ca5dab4bb691423317ea8b8806148dd5,return this.beanFactory.getBean(id);,0,0,0.0,146
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"@SuppressWarnings(""unchecked"")",0,0,0.0,147
6c4245f3ca5dab4bb691423317ea8b8806148dd5,return null;,0,0,0.0,148
6c4245f3ca5dab4bb691423317ea8b8806148dd5,return (H) targetObject;,0,0,0.0,149
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"listableBeanFactory.registerSingleton(handlerBeanName, handler);",1,0,0.0,150
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.afterPropertiesSet();,1,0,0.0,151
6c4245f3ca5dab4bb691423317ea8b8806148dd5,return StringUtils.hasText(inputChannel);,1,0,0.0,152
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"listableBeanFactory.registerSingleton(inputChannelName, inputChannel);",1,0,0.0,153
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"inputChannel.send(new GenericMessage<>(""world""));",0,0,0.0,154
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"testChannel.send(new GenericMessage<>(""foo""));",0,0,0.0,155
6c4245f3ca5dab4bb691423317ea8b8806148dd5,@Test,0,0,0.0,156
6c4245f3ca5dab4bb691423317ea8b8806148dd5,assertThatIllegalArgumentException(),0,0,0.0,157
6c4245f3ca5dab4bb691423317ea8b8806148dd5,.isThrownBy(postProcessor::afterPropertiesSet);,0,0,0.0,158
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.setBeanFactory(context.getBeanFactory());,0,0,0.0,159
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.afterPropertiesSet();,0,0,0.0,160
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.afterSingletonsInstantiated();,0,0,0.0,161
6c4245f3ca5dab4bb691423317ea8b8806148dd5,return postProcessor;,0,0,0.0,162
6c4245f3ca5dab4bb691423317ea8b8806148dd5,postProcessor.setBeanFactory(context.getBeanFactory());,1,0,0.0,163
6c4245f3ca5dab4bb691423317ea8b8806148dd5,"postProcessor.postProcessAfterInitialization(splitter, ""testSplitter"");",1,0,0.0,164
