commit_id,line,line_level_label,count,line_score,row
3f045f476d549a73478867a8aa6d305ec4284457,"""property to true in your application's common.properties or common-shared.properties. If you would like to provide a default schema to be used to qualify table names used in the\n"" +",0,10,1.0,1
3f045f476d549a73478867a8aa6d305ec4284457,"""property to true in your application's common.properties or common-shared.properties. If you would like to provide a default schema to be used to qualify table names used in the\n"" +",0,10,1.0,2
3f045f476d549a73478867a8aa6d305ec4284457,"""property to true in your application's common.properties or common-shared.properties. If you would like to provide a default schema to be used to qualify table names used in the\n"" +",1,10,1.0,3
3f045f476d549a73478867a8aa6d305ec4284457,"""property to true in your application's common.properties or common-shared.properties. If you would like to provide a default schema to be used to qualify table names used in the\n"" +",0,10,1.0,4
3f045f476d549a73478867a8aa6d305ec4284457,"""property to true in your application's common.properties or common-shared.properties. If you would like to provide a default schema to be used to qualify table names used in the\n"" +",1,10,1.0,5
3f045f476d549a73478867a8aa6d305ec4284457,"""property to true in your application's common.properties or common-shared.properties. If you would like to provide a default schema to be used to qualify table names used in the\n"" +",1,10,1.0,6
3f045f476d549a73478867a8aa6d305ec4284457,"""set the 'detect.sequence.generator.inconsistencies' property to false in your application's common.properties or common-shared.properties. If you would like for this component\n"" +",0,6,0.6000000000000001,7
3f045f476d549a73478867a8aa6d305ec4284457,"""set the 'detect.sequence.generator.inconsistencies' property to false in your application's common.properties or common-shared.properties. If you would like for this component\n"" +",1,6,0.6000000000000001,8
3f045f476d549a73478867a8aa6d305ec4284457,"""set the 'detect.sequence.generator.inconsistencies' property to false in your application's common.properties or common-shared.properties. If you would like for this component\n"" +",0,6,0.6000000000000001,9
3f045f476d549a73478867a8aa6d305ec4284457,"""set the 'detect.sequence.generator.inconsistencies' property to false in your application's common.properties or common-shared.properties. If you would like for this component\n"" +",1,6,0.6000000000000001,10
3f045f476d549a73478867a8aa6d305ec4284457,"""set the 'detect.sequence.generator.inconsistencies' property to false in your application's common.properties or common-shared.properties. If you would like for this component\n"" +",0,6,0.6000000000000001,11
3f045f476d549a73478867a8aa6d305ec4284457,"""set the 'detect.sequence.generator.inconsistencies' property to false in your application's common.properties or common-shared.properties. If you would like for this component\n"" +",1,6,0.6000000000000001,12
3f045f476d549a73478867a8aa6d305ec4284457,"""queries for this detection, set the 'default.schema.sequence.generator' property in your application's common.properties or common-shared.properties. Also, if you are upgrading\n"" +",1,5,0.5,13
3f045f476d549a73478867a8aa6d305ec4284457,"""queries for this detection, set the 'default.schema.sequence.generator' property in your application's common.properties or common-shared.properties. Also, if you are upgrading\n"" +",0,5,0.5,14
3f045f476d549a73478867a8aa6d305ec4284457,"""queries for this detection, set the 'default.schema.sequence.generator' property in your application's common.properties or common-shared.properties. Also, if you are upgrading\n"" +",1,5,0.5,15
3f045f476d549a73478867a8aa6d305ec4284457,"""queries for this detection, set the 'default.schema.sequence.generator' property in your application's common.properties or common-shared.properties. Also, if you are upgrading\n"" +",0,5,0.5,16
3f045f476d549a73478867a8aa6d305ec4284457,"""queries for this detection, set the 'default.schema.sequence.generator' property in your application's common.properties or common-shared.properties. Also, if you are upgrading\n"" +",0,5,0.5,17
3f045f476d549a73478867a8aa6d305ec4284457,"""queries for this detection, set the 'default.schema.sequence.generator' property in your application's common.properties or common-shared.properties. Also, if you are upgrading\n"" +",1,5,0.5,18
3f045f476d549a73478867a8aa6d305ec4284457,"""has stopped startup of the application in order to allow you to resolve the issue and avoid possible data corruption. If you wish to disable this detection, you may\n"" +",1,4,0.4,19
3f045f476d549a73478867a8aa6d305ec4284457,"""from 1.6 or below, please refer to http://docs.broadleafcommerce.org/current/1.6-to-2.0-Migration.html for important information regarding migrating your SEQUENCE_GENERATOR table."";",1,4,0.4,20
3f045f476d549a73478867a8aa6d305ec4284457,"""has stopped startup of the application in order to allow you to resolve the issue and avoid possible data corruption. If you wish to disable this detection, you may\n"" +",1,4,0.4,21
3f045f476d549a73478867a8aa6d305ec4284457,"""from 1.6 or below, please refer to http://docs.broadleafcommerce.org/current/1.6-to-2.0-Migration.html for important information regarding migrating your SEQUENCE_GENERATOR table."";",0,4,0.4,22
3f045f476d549a73478867a8aa6d305ec4284457,"""has stopped startup of the application in order to allow you to resolve the issue and avoid possible data corruption. If you wish to disable this detection, you may\n"" +",0,4,0.4,23
3f045f476d549a73478867a8aa6d305ec4284457,"""from 1.6 or below, please refer to http://docs.broadleafcommerce.org/current/1.6-to-2.0-Migration.html for important information regarding migrating your SEQUENCE_GENERATOR table."";",1,4,0.4,24
3f045f476d549a73478867a8aa6d305ec4284457,"""from 1.6 or below, please refer to http://docs.broadleafcommerce.org/current/1.6-to-2.0-Migration.html for important information regarding migrating your SEQUENCE_GENERATOR table."";",0,4,0.4,25
3f045f476d549a73478867a8aa6d305ec4284457,"""has stopped startup of the application in order to allow you to resolve the issue and avoid possible data corruption. If you wish to disable this detection, you may\n"" +",0,4,0.4,26
3f045f476d549a73478867a8aa6d305ec4284457,"""from 1.6 or below, please refer to http://docs.broadleafcommerce.org/current/1.6-to-2.0-Migration.html for important information regarding migrating your SEQUENCE_GENERATOR table."";",1,4,0.4,27
3f045f476d549a73478867a8aa6d305ec4284457,"""has stopped startup of the application in order to allow you to resolve the issue and avoid possible data corruption. If you wish to disable this detection, you may\n"" +",1,4,0.4,28
3f045f476d549a73478867a8aa6d305ec4284457,"""from 1.6 or below, please refer to http://docs.broadleafcommerce.org/current/1.6-to-2.0-Migration.html for important information regarding migrating your SEQUENCE_GENERATOR table."";",0,4,0.4,29
3f045f476d549a73478867a8aa6d305ec4284457,"""has stopped startup of the application in order to allow you to resolve the issue and avoid possible data corruption. If you wish to disable this detection, you may\n"" +",0,4,0.4,30
3f045f476d549a73478867a8aa6d305ec4284457,"throw new RuntimeException(""Unable to update "" + tableName + "" with the sequence generator id for "" + segmentValue);",1,3,0.30000000000000004,31
3f045f476d549a73478867a8aa6d305ec4284457,"""to autocorrect these problems by setting the sequence generator value to a value greater than the max entity id, then set the 'auto.correct.sequence.generator.inconsistencies'\n"" +",1,3,0.30000000000000004,32
3f045f476d549a73478867a8aa6d305ec4284457,"throw new RuntimeException(""Unable to update "" + tableName + "" with the sequence generator id for "" + segmentValue);",1,3,0.30000000000000004,33
3f045f476d549a73478867a8aa6d305ec4284457,"""to autocorrect these problems by setting the sequence generator value to a value greater than the max entity id, then set the 'auto.correct.sequence.generator.inconsistencies'\n"" +",0,3,0.30000000000000004,34
3f045f476d549a73478867a8aa6d305ec4284457,"""to autocorrect these problems by setting the sequence generator value to a value greater than the max entity id, then set the 'auto.correct.sequence.generator.inconsistencies'\n"" +",1,3,0.30000000000000004,35
3f045f476d549a73478867a8aa6d305ec4284457,"throw new RuntimeException(""Unable to update "" + tableName + "" with the sequence generator id for "" + segmentValue);",0,3,0.30000000000000004,36
3f045f476d549a73478867a8aa6d305ec4284457,"""to autocorrect these problems by setting the sequence generator value to a value greater than the max entity id, then set the 'auto.correct.sequence.generator.inconsistencies'\n"" +",0,3,0.30000000000000004,37
3f045f476d549a73478867a8aa6d305ec4284457,"throw new RuntimeException(""Unable to update "" + tableName + "" with the sequence generator id for "" + segmentValue);",0,3,0.30000000000000004,38
3f045f476d549a73478867a8aa6d305ec4284457,"""to autocorrect these problems by setting the sequence generator value to a value greater than the max entity id, then set the 'auto.correct.sequence.generator.inconsistencies'\n"" +",1,3,0.30000000000000004,39
3f045f476d549a73478867a8aa6d305ec4284457,"""to autocorrect these problems by setting the sequence generator value to a value greater than the max entity id, then set the 'auto.correct.sequence.generator.inconsistencies'\n"" +",0,3,0.30000000000000004,40
3f045f476d549a73478867a8aa6d305ec4284457,"throw new RuntimeException(""Unable to update "" + tableName + "" with the sequence generator id for "" + segmentValue);",0,3,0.30000000000000004,41
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(String.format(""The sequence value for %s in %s was found as %d (or an entry did not exist) but the actual max sequence in""",0,2,0.2,42
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(String.format(""The sequence value for %s in %s was found as %d (or an entry did not exist) but the actual max sequence in""",0,2,0.2,43
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(String.format(""The sequence value for %s in %s was found as %d (or an entry did not exist) but the actual max sequence in""",1,2,0.2,44
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(String.format(""The sequence value for %s in %s was found as %d (or an entry did not exist) but the actual max sequence in""",0,2,0.2,45
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(String.format(""The sequence value for %s in %s was found as %d (or an entry did not exist) but the actual max sequence in""",1,2,0.2,46
3f045f476d549a73478867a8aa6d305ec4284457,//This is a traditional Hibernate generator,0,1,0.1,47
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" to %d"",",0,1,0.1,48
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s.  Updating the sequence value""",0,1,0.1,49
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s's table was found as %d"", segmentValue, tableName, maxSequenceId, mappedClass.getName(), maxEntityId));",0,1,0.1,50
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.debug(String.format(""Checking for sequence corruption on entity %s"", segmentValue));",0,1,0.1,51
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb2 = new StringBuilder();,0,1,0.1,52
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s, inserting the new sequence value as %d"",",1,1,0.1,53
3f045f476d549a73478867a8aa6d305ec4284457,"// to redefine them. If they aren't defined in the annotation, glean them from the defaults",0,1,0.1,54
3f045f476d549a73478867a8aa6d305ec4284457,//This is a BLC style ID generator,0,1,0.1,55
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(""Broadleaf Commerce failed to start"", new RuntimeException(reason));",1,1,0.1,56
3f045f476d549a73478867a8aa6d305ec4284457,"String reason = ""A data inconsistency has been detected between the "" + tableName + "" table and one or more entity tables for which it manages current max primary key values.\n"" +",1,1,0.1,57
3f045f476d549a73478867a8aa6d305ec4284457,"String reason = ""A data inconsistency has been detected between the "" + tableName + "" table and one or more entity tables for which it manages current max primary key values.\n"" +",0,1,0.1,58
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" to %d"",",1,1,0.1,59
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s, inserting the new sequence value as %d"",",0,1,0.1,60
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb2 = new StringBuilder();,1,1,0.1,61
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(""Broadleaf Commerce failed to start"", new RuntimeException(reason));",0,1,0.1,62
3f045f476d549a73478867a8aa6d305ec4284457,//This is a BLC style ID generator,1,1,0.1,63
3f045f476d549a73478867a8aa6d305ec4284457,"// to redefine them. If they aren't defined in the annotation, glean them from the defaults",1,1,0.1,64
3f045f476d549a73478867a8aa6d305ec4284457,//This is a traditional Hibernate generator,1,1,0.1,65
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s's table was found as %d"", segmentValue, tableName, maxSequenceId, mappedClass.getName(), maxEntityId));",1,1,0.1,66
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.info(""Detecting id sequence state between "" + mappedClass.getName() + "" and "" + segmentValue + "" in "" + tableName);",1,1,0.1,67
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.debug(String.format(""Checking for sequence corruption on entity %s"", segmentValue));",1,1,0.1,68
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s's table was found as %d"", segmentValue, tableName, maxSequenceId, mappedClass.getName(), maxEntityId));",1,1,0.1,69
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s.  Updating the sequence value""",1,1,0.1,70
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" to %d"",",1,1,0.1,71
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s, inserting the new sequence value as %d"",",1,1,0.1,72
3f045f476d549a73478867a8aa6d305ec4284457,"String reason = ""A data inconsistency has been detected between the "" + tableName + "" table and one or more entity tables for which it manages current max primary key values.\n"" +",1,1,0.1,73
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(""Broadleaf Commerce failed to start"", new RuntimeException(reason));",1,1,0.1,74
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s.  Updating the sequence value""",1,1,0.1,75
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.info(""Detecting id sequence state between "" + mappedClass.getName() + "" and "" + segmentValue + "" in "" + tableName);",0,1,0.1,76
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.debug(String.format(""Checking for sequence corruption on entity %s"", segmentValue));",1,1,0.1,77
3f045f476d549a73478867a8aa6d305ec4284457,//This is a traditional Hibernate generator,0,1,0.1,78
3f045f476d549a73478867a8aa6d305ec4284457,"// to redefine them. If they aren't defined in the annotation, glean them from the defaults",0,1,0.1,79
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.info(""Detecting id sequence state between "" + mappedClass.getName() + "" and "" + segmentValue + "" in "" + tableName);",1,1,0.1,80
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.info(""Detecting id sequence state between "" + mappedClass.getName() + "" and "" + segmentValue + "" in "" + tableName);",0,1,0.1,81
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s's table was found as %d"", segmentValue, tableName, maxSequenceId, mappedClass.getName(), maxEntityId));",0,1,0.1,82
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s.  Updating the sequence value""",0,1,0.1,83
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" to %d"",",0,1,0.1,84
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s, inserting the new sequence value as %d"",",0,1,0.1,85
3f045f476d549a73478867a8aa6d305ec4284457,"String reason = ""A data inconsistency has been detected between the "" + tableName + "" table and one or more entity tables for which it manages current max primary key values.\n"" +",0,1,0.1,86
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(""Broadleaf Commerce failed to start"", new RuntimeException(reason));",0,1,0.1,87
3f045f476d549a73478867a8aa6d305ec4284457,"String reason = ""A data inconsistency has been detected between the "" + tableName + "" table and one or more entity tables for which it manages current max primary key values.\n"" +",1,1,0.1,88
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(""Broadleaf Commerce failed to start"", new RuntimeException(reason));",1,1,0.1,89
3f045f476d549a73478867a8aa6d305ec4284457,//This is a BLC style ID generator,0,1,0.1,90
3f045f476d549a73478867a8aa6d305ec4284457,"// to redefine them. If they aren't defined in the annotation, glean them from the defaults",0,1,0.1,91
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.info(""Detecting id sequence state between "" + mappedClass.getName() + "" and "" + segmentValue + "" in "" + tableName);",1,1,0.1,92
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb2 = new StringBuilder();,0,1,0.1,93
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s, inserting the new sequence value as %d"",",0,1,0.1,94
3f045f476d549a73478867a8aa6d305ec4284457,//This is a traditional Hibernate generator,1,1,0.1,95
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.info(""Detecting id sequence state between "" + mappedClass.getName() + "" and "" + segmentValue + "" in "" + tableName);",0,1,0.1,96
3f045f476d549a73478867a8aa6d305ec4284457,"// to redefine them. If they aren't defined in the annotation, glean them from the defaults",1,1,0.1,97
3f045f476d549a73478867a8aa6d305ec4284457,//This is a BLC style ID generator,1,1,0.1,98
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.error(""Broadleaf Commerce failed to start"", new RuntimeException(reason));",0,1,0.1,99
3f045f476d549a73478867a8aa6d305ec4284457,"String reason = ""A data inconsistency has been detected between the "" + tableName + "" table and one or more entity tables for which it manages current max primary key values.\n"" +",0,1,0.1,100
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" to %d"",",0,1,0.1,101
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb2 = new StringBuilder();,1,1,0.1,102
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s.  Updating the sequence value""",0,1,0.1,103
3f045f476d549a73478867a8aa6d305ec4284457,"+ "" %s's table was found as %d"", segmentValue, tableName, maxSequenceId, mappedClass.getName(), maxEntityId));",0,1,0.1,104
3f045f476d549a73478867a8aa6d305ec4284457,"LOG.debug(String.format(""Checking for sequence corruption on entity %s"", segmentValue));",0,1,0.1,105
3f045f476d549a73478867a8aa6d305ec4284457,tableName = IdOverrideTableGenerator.DEFAULT_TABLE_NAME;,0,0,0.0,106
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = IdOverrideTableGenerator.DEFAULT_VALUE_COLUMN_NAME;,0,0,0.0,107
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(segmentColumnName)) {,0,0,0.0,108
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = IdOverrideTableGenerator.DEFAULT_SEGMENT_COLUMN_NAME;,0,0,0.0,109
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(valueColumnName)) {,0,0,0.0,110
3f045f476d549a73478867a8aa6d305ec4284457,if (!StringUtils.isEmpty(segmentValue) && !StringUtils.isEmpty(tableName) && !StringUtils.isEmpty(segmentColumnName) && !StringUtils.isEmpty(valueColumnName)) {,0,0,0.0,111
3f045f476d549a73478867a8aa6d305ec4284457,} else if (tableAnnot != null) {,0,0,0.0,112
3f045f476d549a73478867a8aa6d305ec4284457,segmentValue = tableAnnot.pkColumnValue();,0,0,0.0,113
3f045f476d549a73478867a8aa6d305ec4284457,tableName = tableAnnot.table();,0,0,0.0,114
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = tableAnnot.pkColumnName();,0,0,0.0,115
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = tableAnnot.valueColumnName();,0,0,0.0,116
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""select "");",0,0,0.0,117
3f045f476d549a73478867a8aa6d305ec4284457,// Default values are set on startup in IdOverrideTableGenerator so that every annotation does not have,0,0,0.0,118
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(tableName)) {,0,0,0.0,119
3f045f476d549a73478867a8aa6d305ec4284457,String tableName = null;,0,0,0.0,120
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = param.value();,0,0,0.0,121
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""value_column_name"")) {",0,0,0.0,122
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = param.value();,0,0,0.0,123
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""segment_column_name"")) {",0,0,0.0,124
3f045f476d549a73478867a8aa6d305ec4284457,tableName = param.value();,0,0,0.0,125
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""table_name"")) {",0,0,0.0,126
3f045f476d549a73478867a8aa6d305ec4284457,segmentValue = param.value();,0,0,0.0,127
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""segment_value"")) {",0,0,0.0,128
3f045f476d549a73478867a8aa6d305ec4284457,for (Parameter param : genericAnnot.parameters()) {,0,0,0.0,129
3f045f476d549a73478867a8aa6d305ec4284457,if (genericAnnot != null && genericAnnot.strategy().equals(IdOverrideTableGenerator.class.getName())) {,0,0,0.0,130
3f045f476d549a73478867a8aa6d305ec4284457,String valueColumnName = null;,0,0,0.0,131
3f045f476d549a73478867a8aa6d305ec4284457,String segmentColumnName = null;,0,0,0.0,132
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" from "");",0,0,0.0,133
3f045f476d549a73478867a8aa6d305ec4284457,String segmentValue = null;,0,0,0.0,134
3f045f476d549a73478867a8aa6d305ec4284457,TableGenerator tableAnnot = idField.getAnnotation(TableGenerator.class);,0,0,0.0,135
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(valueColumnName);,0,0,0.0,136
3f045f476d549a73478867a8aa6d305ec4284457,maxSequenceId = ((Number) results2.get(0)).longValue();,0,0,0.0,137
3f045f476d549a73478867a8aa6d305ec4284457,"if (!tableName.contains(""."") && !StringUtils.isEmpty(defaultSchemaSequenceGenerator)) {",0,0,0.0,138
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("") from "");",0,0,0.0,139
3f045f476d549a73478867a8aa6d305ec4284457,idField.setAccessible(true);,0,0,0.0,140
3f045f476d549a73478867a8aa6d305ec4284457,if (sequenceEntryExists) {,0,0,0.0,141
3f045f476d549a73478867a8aa6d305ec4284457,long newMaxId = maxEntityId + 10;,0,0,0.0,142
3f045f476d549a73478867a8aa6d305ec4284457,if (automaticallyCorrectInconsistencies) {,0,0,0.0,143
3f045f476d549a73478867a8aa6d305ec4284457,if (maxEntityId > maxSequenceId) {,0,0,0.0,144
3f045f476d549a73478867a8aa6d305ec4284457,Long maxEntityId = BLCNumberUtils.toLong(results.get(0));,0,0,0.0,145
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results) && results.get(0) != null) {,0,0,0.0,146
3f045f476d549a73478867a8aa6d305ec4284457,context.setInternalIgnoreFilters(false);,0,0,0.0,147
3f045f476d549a73478867a8aa6d305ec4284457,results = em.createQuery(sb.toString()).getResultList();,0,0,0.0,148
3f045f476d549a73478867a8aa6d305ec4284457,context.setInternalIgnoreFilters(true);,0,0,0.0,149
3f045f476d549a73478867a8aa6d305ec4284457,BroadleafRequestContext context = BroadleafRequestContext.getBroadleafRequestContext();,0,0,0.0,150
3f045f476d549a73478867a8aa6d305ec4284457,List results;,0,0,0.0,151
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("" entity"");",0,0,0.0,152
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(mappedClass.getName());,0,0,0.0,153
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(idField.getName());,0,0,0.0,154
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(defaultSchemaSequenceGenerator);,0,0,0.0,155
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append(""select max("");",0,0,0.0,156
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb = new StringBuilder();,0,0,0.0,157
3f045f476d549a73478867a8aa6d305ec4284457,sequenceEntryExists = true;,0,0,0.0,158
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results2) && results2.get(0) != null) {,0,0,0.0,159
3f045f476d549a73478867a8aa6d305ec4284457,List results2 = em.createNativeQuery(sb2.toString()).getResultList();,0,0,0.0,160
3f045f476d549a73478867a8aa6d305ec4284457,boolean sequenceEntryExists = false;,0,0,0.0,161
3f045f476d549a73478867a8aa6d305ec4284457,Long maxSequenceId = 0l;,0,0,0.0,162
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""'"");",0,0,0.0,163
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(segmentValue);,0,0,0.0,164
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" = '"");",0,0,0.0,165
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(segmentColumnName);,0,0,0.0,166
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" where "");",0,0,0.0,167
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(tableName);,0,0,0.0,168
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""."");",0,0,0.0,169
3f045f476d549a73478867a8aa6d305ec4284457,GenericGenerator genericAnnot = idField.getAnnotation(GenericGenerator.class);,0,0,0.0,170
3f045f476d549a73478867a8aa6d305ec4284457,long newMaxId = maxEntityId + 10;,1,0,0.0,171
3f045f476d549a73478867a8aa6d305ec4284457,continue;,0,0,0.0,172
3f045f476d549a73478867a8aa6d305ec4284457,if (response <= 0) {,1,0,0.0,173
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""'"");",1,0,0.0,174
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentValue);,1,0,0.0,175
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = '"");",1,0,0.0,176
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentColumnName);,1,0,0.0,177
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" where "");",1,0,0.0,178
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(String.valueOf(newMaxId));,1,0,0.0,179
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = "");",1,0,0.0,180
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(valueColumnName);,1,0,0.0,181
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" set "");",1,0,0.0,182
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(tableName);,1,0,0.0,183
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""update "");",1,0,0.0,184
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder updateQuery = new StringBuilder();,1,0,0.0,185
3f045f476d549a73478867a8aa6d305ec4284457,LOG.warn(log);,1,0,0.0,186
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), newMaxId);",1,0,0.0,187
3f045f476d549a73478867a8aa6d305ec4284457,if (sequenceEntryExists) {,1,0,0.0,188
3f045f476d549a73478867a8aa6d305ec4284457,LOG.warn(log);,0,0,0.0,189
3f045f476d549a73478867a8aa6d305ec4284457,if (automaticallyCorrectInconsistencies) {,1,0,0.0,190
3f045f476d549a73478867a8aa6d305ec4284457,if (maxEntityId > maxSequenceId) {,1,0,0.0,191
3f045f476d549a73478867a8aa6d305ec4284457,Long maxEntityId = BLCNumberUtils.toLong(results.get(0));,1,0,0.0,192
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results) && results.get(0) != null) {,1,0,0.0,193
3f045f476d549a73478867a8aa6d305ec4284457,context.setInternalIgnoreFilters(false);,1,0,0.0,194
3f045f476d549a73478867a8aa6d305ec4284457,} finally {,1,0,0.0,195
3f045f476d549a73478867a8aa6d305ec4284457,results = em.createQuery(sb.toString()).getResultList();,1,0,0.0,196
3f045f476d549a73478867a8aa6d305ec4284457,context.setInternalIgnoreFilters(true);,1,0,0.0,197
3f045f476d549a73478867a8aa6d305ec4284457,BroadleafRequestContext context = BroadleafRequestContext.getBroadleafRequestContext();,1,0,0.0,198
3f045f476d549a73478867a8aa6d305ec4284457,List results;,1,0,0.0,199
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("" entity"");",1,0,0.0,200
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(mappedClass.getName());,1,0,0.0,201
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("") from "");",1,0,0.0,202
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(updateQuery.toString()).executeUpdate();,1,0,0.0,203
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s. Did not find an entry in""",1,0,0.0,204
3f045f476d549a73478867a8aa6d305ec4284457,} catch (NoSuchFieldException e) {,0,0,0.0,205
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), tableName, newMaxId);",1,0,0.0,206
3f045f476d549a73478867a8aa6d305ec4284457,idField = mappedClass.getDeclaredField(idProperty);,0,0,0.0,207
3f045f476d549a73478867a8aa6d305ec4284457,Field idField;,0,0,0.0,208
3f045f476d549a73478867a8aa6d305ec4284457,Class<?> mappedClass = metadata.getMappedClass();,0,0,0.0,209
3f045f476d549a73478867a8aa6d305ec4284457,String idProperty = metadata.getIdentifierPropertyName();,0,0,0.0,210
3f045f476d549a73478867a8aa6d305ec4284457,ClassMetadata metadata = (ClassMetadata) item;,0,0,0.0,211
3f045f476d549a73478867a8aa6d305ec4284457,for (Object item : sessionFactory.getAllClassMetadata().values()) {,0,0,0.0,212
3f045f476d549a73478867a8aa6d305ec4284457,SessionFactory sessionFactory = session.getSessionFactory();,0,0,0.0,213
3f045f476d549a73478867a8aa6d305ec4284457,"protected void patchSequenceGeneratorInconsistencies(EntityManager em, Session session) {",0,0,0.0,214
3f045f476d549a73478867a8aa6d305ec4284457,},0,0,0.0,215
3f045f476d549a73478867a8aa6d305ec4284457,hibernateSession.close();,0,0,0.0,216
3f045f476d549a73478867a8aa6d305ec4284457,if (hibernateSession != null) {,0,0,0.0,217
3f045f476d549a73478867a8aa6d305ec4284457,"TransactionUtils.finalizeTransaction(tx, false);",0,0,0.0,218
3f045f476d549a73478867a8aa6d305ec4284457,} finally {,0,0,0.0,219
3f045f476d549a73478867a8aa6d305ec4284457,"patchSequenceGeneratorInconsistencies(em, hibernateSession);",0,0,0.0,220
3f045f476d549a73478867a8aa6d305ec4284457,try {,0,0,0.0,221
3f045f476d549a73478867a8aa6d305ec4284457,Transaction tx = TransactionUtils.createTransaction(hibernateSession);,0,0,0.0,222
3f045f476d549a73478867a8aa6d305ec4284457,Session hibernateSession = em.unwrap(Session.class);,0,0,0.0,223
3f045f476d549a73478867a8aa6d305ec4284457,import org.hibernate.Transaction;,0,0,0.0,224
3f045f476d549a73478867a8aa6d305ec4284457,import org.hibernate.Session;,0,0,0.0,225
3f045f476d549a73478867a8aa6d305ec4284457,import org.broadleafcommerce.common.util.TransactionUtils;,0,0,0.0,226
3f045f476d549a73478867a8aa6d305ec4284457,System.exit(1);,1,0,0.0,227
3f045f476d549a73478867a8aa6d305ec4284457,"""The inconsistency was detected between the managed class ("" + mappedClass.getName() + "") and the identifier ("" + segmentValue + "") in "" + tableName + "". Broadleaf\n"" +",1,0,0.0,228
3f045f476d549a73478867a8aa6d305ec4284457,} else {,1,0,0.0,229
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(insertQuery.toString()).executeUpdate();,1,0,0.0,230
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""values ('"" + segmentValue + ""','"" + String.valueOf(newMaxId) + ""')"");",1,0,0.0,231
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append("" ("" + segmentColumnName + "","" + valueColumnName + "")"");",1,0,0.0,232
3f045f476d549a73478867a8aa6d305ec4284457,insertQuery.append(tableName);,1,0,0.0,233
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""insert into "");",1,0,0.0,234
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder insertQuery = new StringBuilder();,1,0,0.0,235
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), newMaxId);",0,0,0.0,236
3f045f476d549a73478867a8aa6d305ec4284457,tableName = param.value();,1,0,0.0,237
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder updateQuery = new StringBuilder();,0,0,0.0,238
3f045f476d549a73478867a8aa6d305ec4284457,List results2 = em.createNativeQuery(sb2.toString()).getResultList();,1,0,0.0,239
3f045f476d549a73478867a8aa6d305ec4284457,} finally {,1,0,0.0,240
3f045f476d549a73478867a8aa6d305ec4284457,results = em.createQuery(sb.toString()).getResultList();,1,0,0.0,241
3f045f476d549a73478867a8aa6d305ec4284457,context.setInternalIgnoreFilters(true);,1,0,0.0,242
3f045f476d549a73478867a8aa6d305ec4284457,BroadleafRequestContext context = BroadleafRequestContext.getBroadleafRequestContext();,1,0,0.0,243
3f045f476d549a73478867a8aa6d305ec4284457,List results;,1,0,0.0,244
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("" entity"");",1,0,0.0,245
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(mappedClass.getName());,1,0,0.0,246
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("") from "");",1,0,0.0,247
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(idField.getName());,1,0,0.0,248
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append(""select max("");",1,0,0.0,249
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb = new StringBuilder();,1,0,0.0,250
3f045f476d549a73478867a8aa6d305ec4284457,sequenceEntryExists = true;,1,0,0.0,251
3f045f476d549a73478867a8aa6d305ec4284457,maxSequenceId = ((Number) results2.get(0)).longValue();,1,0,0.0,252
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results2) && results2.get(0) != null) {,1,0,0.0,253
3f045f476d549a73478867a8aa6d305ec4284457,boolean sequenceEntryExists = false;,1,0,0.0,254
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""update "");",0,0,0.0,255
3f045f476d549a73478867a8aa6d305ec4284457,Long maxSequenceId = 0l;,1,0,0.0,256
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""'"");",1,0,0.0,257
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(segmentValue);,1,0,0.0,258
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" = '"");",1,0,0.0,259
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(segmentColumnName);,1,0,0.0,260
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" where "");",1,0,0.0,261
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(tableName);,1,0,0.0,262
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""."");",1,0,0.0,263
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(defaultSchemaSequenceGenerator);,1,0,0.0,264
3f045f476d549a73478867a8aa6d305ec4284457,"if (!tableName.contains(""."") && !StringUtils.isEmpty(defaultSchemaSequenceGenerator)) {",1,0,0.0,265
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" from "");",1,0,0.0,266
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(valueColumnName);,1,0,0.0,267
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""select "");",1,0,0.0,268
3f045f476d549a73478867a8aa6d305ec4284457,if (!StringUtils.isEmpty(segmentValue) && !StringUtils.isEmpty(tableName) && !StringUtils.isEmpty(segmentColumnName) && !StringUtils.isEmpty(valueColumnName)) {,1,0,0.0,269
3f045f476d549a73478867a8aa6d305ec4284457,context.setInternalIgnoreFilters(false);,1,0,0.0,270
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results) && results.get(0) != null) {,1,0,0.0,271
3f045f476d549a73478867a8aa6d305ec4284457,Long maxEntityId = BLCNumberUtils.toLong(results.get(0));,1,0,0.0,272
3f045f476d549a73478867a8aa6d305ec4284457,if (maxEntityId > maxSequenceId) {,1,0,0.0,273
3f045f476d549a73478867a8aa6d305ec4284457,"""The inconsistency was detected between the managed class ("" + mappedClass.getName() + "") and the identifier ("" + segmentValue + "") in "" + tableName + "". Broadleaf\n"" +",1,0,0.0,274
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(insertQuery.toString()).executeUpdate();,1,0,0.0,275
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""values ('"" + segmentValue + ""','"" + String.valueOf(newMaxId) + ""')"");",1,0,0.0,276
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append("" ("" + segmentColumnName + "","" + valueColumnName + "")"");",1,0,0.0,277
3f045f476d549a73478867a8aa6d305ec4284457,insertQuery.append(tableName);,1,0,0.0,278
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""insert into "");",1,0,0.0,279
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder insertQuery = new StringBuilder();,1,0,0.0,280
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), tableName, newMaxId);",1,0,0.0,281
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s. Did not find an entry in""",1,0,0.0,282
3f045f476d549a73478867a8aa6d305ec4284457,} else {,1,0,0.0,283
3f045f476d549a73478867a8aa6d305ec4284457,if (response <= 0) {,1,0,0.0,284
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(updateQuery.toString()).executeUpdate();,1,0,0.0,285
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""'"");",1,0,0.0,286
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentValue);,1,0,0.0,287
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = '"");",1,0,0.0,288
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentColumnName);,1,0,0.0,289
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" where "");",1,0,0.0,290
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(String.valueOf(newMaxId));,1,0,0.0,291
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = "");",1,0,0.0,292
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(valueColumnName);,1,0,0.0,293
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" set "");",1,0,0.0,294
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(tableName);,1,0,0.0,295
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""update "");",1,0,0.0,296
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder updateQuery = new StringBuilder();,1,0,0.0,297
3f045f476d549a73478867a8aa6d305ec4284457,LOG.warn(log);,1,0,0.0,298
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), newMaxId);",1,0,0.0,299
3f045f476d549a73478867a8aa6d305ec4284457,if (sequenceEntryExists) {,1,0,0.0,300
3f045f476d549a73478867a8aa6d305ec4284457,long newMaxId = maxEntityId + 10;,1,0,0.0,301
3f045f476d549a73478867a8aa6d305ec4284457,if (automaticallyCorrectInconsistencies) {,1,0,0.0,302
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = tableAnnot.valueColumnName();,1,0,0.0,303
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = tableAnnot.pkColumnName();,1,0,0.0,304
3f045f476d549a73478867a8aa6d305ec4284457,tableName = tableAnnot.table();,1,0,0.0,305
3f045f476d549a73478867a8aa6d305ec4284457,Class<?> mappedClass = metadata.getMappedClass();,1,0,0.0,306
3f045f476d549a73478867a8aa6d305ec4284457,ClassMetadata metadata = (ClassMetadata) item;,1,0,0.0,307
3f045f476d549a73478867a8aa6d305ec4284457,for (Object item : sessionFactory.getAllClassMetadata().values()) {,1,0,0.0,308
3f045f476d549a73478867a8aa6d305ec4284457,SessionFactory sessionFactory = ((HibernateEntityManager) em).getSession().getSessionFactory();,1,0,0.0,309
3f045f476d549a73478867a8aa6d305ec4284457,"@Transactional(""blTransactionManager"")",1,0,0.0,310
3f045f476d549a73478867a8aa6d305ec4284457,import org.springframework.transaction.annotation.Transactional;,1,0,0.0,311
3f045f476d549a73478867a8aa6d305ec4284457,import org.hibernate.ejb.HibernateEntityManager;,1,0,0.0,312
3f045f476d549a73478867a8aa6d305ec4284457,System.exit(1);,0,0,0.0,313
3f045f476d549a73478867a8aa6d305ec4284457,"""The inconsistency was detected between the managed class ("" + mappedClass.getName() + "") and the identifier ("" + segmentValue + "") in "" + tableName + "". Broadleaf\n"" +",0,0,0.0,314
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(insertQuery.toString()).executeUpdate();,0,0,0.0,315
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""values ('"" + segmentValue + ""','"" + String.valueOf(newMaxId) + ""')"");",0,0,0.0,316
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append("" ("" + segmentColumnName + "","" + valueColumnName + "")"");",0,0,0.0,317
3f045f476d549a73478867a8aa6d305ec4284457,insertQuery.append(tableName);,0,0,0.0,318
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""insert into "");",0,0,0.0,319
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder insertQuery = new StringBuilder();,0,0,0.0,320
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), tableName, newMaxId);",0,0,0.0,321
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s. Did not find an entry in""",0,0,0.0,322
3f045f476d549a73478867a8aa6d305ec4284457,} else {,0,0,0.0,323
3f045f476d549a73478867a8aa6d305ec4284457,if (response <= 0) {,0,0,0.0,324
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(updateQuery.toString()).executeUpdate();,0,0,0.0,325
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""'"");",0,0,0.0,326
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentValue);,0,0,0.0,327
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = '"");",0,0,0.0,328
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentColumnName);,0,0,0.0,329
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" where "");",0,0,0.0,330
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(String.valueOf(newMaxId));,0,0,0.0,331
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = "");",0,0,0.0,332
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(valueColumnName);,0,0,0.0,333
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" set "");",0,0,0.0,334
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(tableName);,0,0,0.0,335
3f045f476d549a73478867a8aa6d305ec4284457,String idProperty = metadata.getIdentifierPropertyName();,1,0,0.0,336
3f045f476d549a73478867a8aa6d305ec4284457,Field idField;,1,0,0.0,337
3f045f476d549a73478867a8aa6d305ec4284457,segmentValue = tableAnnot.pkColumnValue();,1,0,0.0,338
3f045f476d549a73478867a8aa6d305ec4284457,try {,1,0,0.0,339
3f045f476d549a73478867a8aa6d305ec4284457,} else if (tableAnnot != null) {,1,0,0.0,340
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = IdOverrideTableGenerator.DEFAULT_VALUE_COLUMN_NAME;,1,0,0.0,341
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(valueColumnName)) {,1,0,0.0,342
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = IdOverrideTableGenerator.DEFAULT_SEGMENT_COLUMN_NAME;,1,0,0.0,343
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(segmentColumnName)) {,1,0,0.0,344
3f045f476d549a73478867a8aa6d305ec4284457,tableName = IdOverrideTableGenerator.DEFAULT_TABLE_NAME;,1,0,0.0,345
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(tableName)) {,1,0,0.0,346
3f045f476d549a73478867a8aa6d305ec4284457,// Default values are set on startup in IdOverrideTableGenerator so that every annotation does not have,1,0,0.0,347
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = param.value();,1,0,0.0,348
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""value_column_name"")) {",1,0,0.0,349
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = param.value();,1,0,0.0,350
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""segment_column_name"")) {",1,0,0.0,351
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append(""select max("");",1,0,0.0,352
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""table_name"")) {",1,0,0.0,353
3f045f476d549a73478867a8aa6d305ec4284457,},1,0,0.0,354
3f045f476d549a73478867a8aa6d305ec4284457,segmentValue = param.value();,1,0,0.0,355
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""segment_value"")) {",1,0,0.0,356
3f045f476d549a73478867a8aa6d305ec4284457,for (Parameter param : genericAnnot.parameters()) {,1,0,0.0,357
3f045f476d549a73478867a8aa6d305ec4284457,if (genericAnnot != null && genericAnnot.strategy().equals(IdOverrideTableGenerator.class.getName())) {,1,0,0.0,358
3f045f476d549a73478867a8aa6d305ec4284457,String valueColumnName = null;,1,0,0.0,359
3f045f476d549a73478867a8aa6d305ec4284457,String segmentColumnName = null;,1,0,0.0,360
3f045f476d549a73478867a8aa6d305ec4284457,String tableName = null;,1,0,0.0,361
3f045f476d549a73478867a8aa6d305ec4284457,String segmentValue = null;,1,0,0.0,362
3f045f476d549a73478867a8aa6d305ec4284457,TableGenerator tableAnnot = idField.getAnnotation(TableGenerator.class);,1,0,0.0,363
3f045f476d549a73478867a8aa6d305ec4284457,GenericGenerator genericAnnot = idField.getAnnotation(GenericGenerator.class);,1,0,0.0,364
3f045f476d549a73478867a8aa6d305ec4284457,idField.setAccessible(true);,1,0,0.0,365
3f045f476d549a73478867a8aa6d305ec4284457,continue;,1,0,0.0,366
3f045f476d549a73478867a8aa6d305ec4284457,} catch (NoSuchFieldException e) {,1,0,0.0,367
3f045f476d549a73478867a8aa6d305ec4284457,idField = mappedClass.getDeclaredField(idProperty);,1,0,0.0,368
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(idField.getName());,1,0,0.0,369
3f045f476d549a73478867a8aa6d305ec4284457,} catch (NoSuchFieldException e) {,1,0,0.0,370
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb = new StringBuilder();,1,0,0.0,371
3f045f476d549a73478867a8aa6d305ec4284457,"sb3.append("" = "");",1,0,0.0,372
3f045f476d549a73478867a8aa6d305ec4284457,List<EntityManager> entityManagers = emService.retrieveAllEntityManagers();,0,0,0.0,373
3f045f476d549a73478867a8aa6d305ec4284457,protected EntityManagerService emService;,0,0,0.0,374
3f045f476d549a73478867a8aa6d305ec4284457,"@Resource(name=""blEntityManagerService"")",0,0,0.0,375
3f045f476d549a73478867a8aa6d305ec4284457,import javax.annotation.Resource;,0,0,0.0,376
3f045f476d549a73478867a8aa6d305ec4284457,import org.broadleafcommerce.common.service.EntityManagerService;,0,0,0.0,377
3f045f476d549a73478867a8aa6d305ec4284457,System.exit(1);,1,0,0.0,378
3f045f476d549a73478867a8aa6d305ec4284457,"""The inconsistency was detected between the managed class ("" + mappedClass.getName() + "") and the identifier ("" + segmentValue + "") in "" + tableName + "". Broadleaf\n"" +",1,0,0.0,379
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(sb3.toString()).executeUpdate();,1,0,0.0,380
3f045f476d549a73478867a8aa6d305ec4284457,"sb3.append(""'"");",1,0,0.0,381
3f045f476d549a73478867a8aa6d305ec4284457,sb3.append(segmentValue);,1,0,0.0,382
3f045f476d549a73478867a8aa6d305ec4284457,"sb3.append("" = '"");",1,0,0.0,383
3f045f476d549a73478867a8aa6d305ec4284457,sb3.append(segmentColumnName);,1,0,0.0,384
3f045f476d549a73478867a8aa6d305ec4284457,"sb3.append("" where "");",1,0,0.0,385
3f045f476d549a73478867a8aa6d305ec4284457,sb3.append(String.valueOf(maxEntityId + 10));,1,0,0.0,386
3f045f476d549a73478867a8aa6d305ec4284457,sb3.append(valueColumnName);,1,0,0.0,387
3f045f476d549a73478867a8aa6d305ec4284457,sequenceEntryExists = true;,1,0,0.0,388
3f045f476d549a73478867a8aa6d305ec4284457,"sb3.append("" set "");",1,0,0.0,389
3f045f476d549a73478867a8aa6d305ec4284457,sb3.append(tableName);,1,0,0.0,390
3f045f476d549a73478867a8aa6d305ec4284457,"sb3.append(""update "");",1,0,0.0,391
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb3 = new StringBuilder();,1,0,0.0,392
3f045f476d549a73478867a8aa6d305ec4284457,if (automaticallyCorrectInconsistencies) {,1,0,0.0,393
3f045f476d549a73478867a8aa6d305ec4284457,if (maxEntityId > maxSequenceId) {,1,0,0.0,394
3f045f476d549a73478867a8aa6d305ec4284457,Long maxEntityId = (Long) results.get(0);,1,0,0.0,395
3f045f476d549a73478867a8aa6d305ec4284457,if (results != null && !results.isEmpty() && results.get(0) != null) {,1,0,0.0,396
3f045f476d549a73478867a8aa6d305ec4284457,List results = em.createQuery(sb.toString()).getResultList();,1,0,0.0,397
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("" entity"");",1,0,0.0,398
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(mappedClass.getName());,1,0,0.0,399
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("") from "");",1,0,0.0,400
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(idField.getName());,1,0,0.0,401
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append(""select max("");",1,0,0.0,402
3f045f476d549a73478867a8aa6d305ec4284457,for (EntityManager em : entityManagers) {,0,0,0.0,403
3f045f476d549a73478867a8aa6d305ec4284457,SessionFactory sessionFactory = ((HibernateEntityManager) em).getSession().getSessionFactory();,0,0,0.0,404
3f045f476d549a73478867a8aa6d305ec4284457,for (Object item : sessionFactory.getAllClassMetadata().values()) {,0,0,0.0,405
3f045f476d549a73478867a8aa6d305ec4284457,ClassMetadata metadata = (ClassMetadata) item;,0,0,0.0,406
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(segmentColumnName)) {,0,0,0.0,407
3f045f476d549a73478867a8aa6d305ec4284457,tableName = IdOverrideTableGenerator.DEFAULT_TABLE_NAME;,0,0,0.0,408
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(tableName)) {,0,0,0.0,409
3f045f476d549a73478867a8aa6d305ec4284457,// Default values are set on startup in IdOverrideTableGenerator so that every annotation does not have,0,0,0.0,410
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = param.value();,0,0,0.0,411
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""value_column_name"")) {",0,0,0.0,412
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = param.value();,0,0,0.0,413
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""segment_column_name"")) {",0,0,0.0,414
3f045f476d549a73478867a8aa6d305ec4284457,tableName = param.value();,0,0,0.0,415
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""table_name"")) {",0,0,0.0,416
3f045f476d549a73478867a8aa6d305ec4284457,segmentValue = param.value();,0,0,0.0,417
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""segment_value"")) {",0,0,0.0,418
3f045f476d549a73478867a8aa6d305ec4284457,for (Parameter param : genericAnnot.parameters()) {,0,0,0.0,419
3f045f476d549a73478867a8aa6d305ec4284457,if (genericAnnot != null && genericAnnot.strategy().equals(IdOverrideTableGenerator.class.getName())) {,0,0,0.0,420
3f045f476d549a73478867a8aa6d305ec4284457,String valueColumnName = null;,0,0,0.0,421
3f045f476d549a73478867a8aa6d305ec4284457,String segmentColumnName = null;,0,0,0.0,422
3f045f476d549a73478867a8aa6d305ec4284457,String tableName = null;,0,0,0.0,423
3f045f476d549a73478867a8aa6d305ec4284457,String segmentValue = null;,0,0,0.0,424
3f045f476d549a73478867a8aa6d305ec4284457,TableGenerator tableAnnot = idField.getAnnotation(TableGenerator.class);,0,0,0.0,425
3f045f476d549a73478867a8aa6d305ec4284457,GenericGenerator genericAnnot = idField.getAnnotation(GenericGenerator.class);,0,0,0.0,426
3f045f476d549a73478867a8aa6d305ec4284457,idField.setAccessible(true);,0,0,0.0,427
3f045f476d549a73478867a8aa6d305ec4284457,},0,0,0.0,428
3f045f476d549a73478867a8aa6d305ec4284457,continue;,0,0,0.0,429
3f045f476d549a73478867a8aa6d305ec4284457,} catch (NoSuchFieldException e) {,0,0,0.0,430
3f045f476d549a73478867a8aa6d305ec4284457,idField = mappedClass.getDeclaredField(idProperty);,0,0,0.0,431
3f045f476d549a73478867a8aa6d305ec4284457,try {,0,0,0.0,432
3f045f476d549a73478867a8aa6d305ec4284457,Field idField;,0,0,0.0,433
3f045f476d549a73478867a8aa6d305ec4284457,Class<?> mappedClass = metadata.getMappedClass();,0,0,0.0,434
3f045f476d549a73478867a8aa6d305ec4284457,String idProperty = metadata.getIdentifierPropertyName();,0,0,0.0,435
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb = new StringBuilder();,1,0,0.0,436
3f045f476d549a73478867a8aa6d305ec4284457,Long maxSequenceId = ((Number) results2.get(0)).longValue();,1,0,0.0,437
3f045f476d549a73478867a8aa6d305ec4284457,if (results2 != null && !results2.isEmpty() && results2.get(0) != null) {,1,0,0.0,438
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), newMaxId);",0,0,0.0,439
3f045f476d549a73478867a8aa6d305ec4284457,long newMaxId = maxEntityId + 10;,0,0,0.0,440
3f045f476d549a73478867a8aa6d305ec4284457,if (automaticallyCorrectInconsistencies) {,0,0,0.0,441
3f045f476d549a73478867a8aa6d305ec4284457,if (maxEntityId > maxSequenceId) {,0,0,0.0,442
3f045f476d549a73478867a8aa6d305ec4284457,Long maxEntityId = (Long) results.get(0);,0,0,0.0,443
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results) && results.get(0) != null) {,0,0,0.0,444
3f045f476d549a73478867a8aa6d305ec4284457,List results = em.createQuery(sb.toString()).getResultList();,0,0,0.0,445
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("" entity"");",0,0,0.0,446
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(mappedClass.getName());,0,0,0.0,447
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("") from "");",0,0,0.0,448
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(idField.getName());,0,0,0.0,449
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append(""select max("");",0,0,0.0,450
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb = new StringBuilder();,0,0,0.0,451
3f045f476d549a73478867a8aa6d305ec4284457,sequenceEntryExists = true;,0,0,0.0,452
3f045f476d549a73478867a8aa6d305ec4284457,maxSequenceId = ((Number) results2.get(0)).longValue();,0,0,0.0,453
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results2) && results2.get(0) != null) {,0,0,0.0,454
3f045f476d549a73478867a8aa6d305ec4284457,boolean sequenceEntryExists = false;,0,0,0.0,455
3f045f476d549a73478867a8aa6d305ec4284457,Long maxSequenceId = 0l;,0,0,0.0,456
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = IdOverrideTableGenerator.DEFAULT_VALUE_COLUMN_NAME;,0,0,0.0,457
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(valueColumnName)) {,0,0,0.0,458
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = IdOverrideTableGenerator.DEFAULT_SEGMENT_COLUMN_NAME;,0,0,0.0,459
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(segmentColumnName)) {,0,0,0.0,460
3f045f476d549a73478867a8aa6d305ec4284457,},0,0,0.0,461
3f045f476d549a73478867a8aa6d305ec4284457,tableName = IdOverrideTableGenerator.DEFAULT_TABLE_NAME;,0,0,0.0,462
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(tableName)) {,0,0,0.0,463
3f045f476d549a73478867a8aa6d305ec4284457,// Default values are set on startup in IdOverrideTableGenerator so that every annotation does not have,0,0,0.0,464
3f045f476d549a73478867a8aa6d305ec4284457,if (genericAnnot != null && genericAnnot.strategy().equals(IdOverrideTableGenerator.class.getName())) {,0,0,0.0,465
3f045f476d549a73478867a8aa6d305ec4284457,import java.util.List;,0,0,0.0,466
3f045f476d549a73478867a8aa6d305ec4284457,import java.lang.reflect.Field;,0,0,0.0,467
3f045f476d549a73478867a8aa6d305ec4284457,import org.apache.commons.collections.CollectionUtils;,0,0,0.0,468
3f045f476d549a73478867a8aa6d305ec4284457,if (sequenceEntryExists) {,0,0,0.0,469
3f045f476d549a73478867a8aa6d305ec4284457,LOG.warn(log);,0,0,0.0,470
3f045f476d549a73478867a8aa6d305ec4284457,"if (genericAnnot != null && genericAnnot.strategy().equals(""org.broadleafcommerce.common.persistence.IdOverrideTableGenerator"")) {",1,0,0.0,471
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder updateQuery = new StringBuilder();,0,0,0.0,472
3f045f476d549a73478867a8aa6d305ec4284457,import java.util.List;,1,0,0.0,473
3f045f476d549a73478867a8aa6d305ec4284457,import java.lang.reflect.Field;,1,0,0.0,474
3f045f476d549a73478867a8aa6d305ec4284457,System.exit(1);,0,0,0.0,475
3f045f476d549a73478867a8aa6d305ec4284457,"""The inconsistency was detected between the managed class ("" + mappedClass.getName() + "") and the identifier ("" + segmentValue + "") in "" + tableName + "". Broadleaf\n"" +",0,0,0.0,476
3f045f476d549a73478867a8aa6d305ec4284457,} else {,0,0,0.0,477
3f045f476d549a73478867a8aa6d305ec4284457,if (response <= 0) {,0,0,0.0,478
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(insertQuery.toString()).executeUpdate();,0,0,0.0,479
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""values ('"" + segmentValue + ""','"" + String.valueOf(newMaxId) + ""')"");",0,0,0.0,480
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append("" ("" + segmentColumnName + "","" + valueColumnName + "")"");",0,0,0.0,481
3f045f476d549a73478867a8aa6d305ec4284457,insertQuery.append(tableName);,0,0,0.0,482
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""."");",0,0,0.0,483
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(defaultSchemaSequenceGenerator);,0,0,0.0,484
3f045f476d549a73478867a8aa6d305ec4284457,"if (!tableName.contains(""."") && !StringUtils.isEmpty(defaultSchemaSequenceGenerator)) {",0,0,0.0,485
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""insert into "");",0,0,0.0,486
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder insertQuery = new StringBuilder();,0,0,0.0,487
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), tableName, newMaxId);",0,0,0.0,488
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s. Did not find an entry in""",0,0,0.0,489
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(updateQuery.toString()).executeUpdate();,0,0,0.0,490
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""'"");",0,0,0.0,491
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentValue);,0,0,0.0,492
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = '"");",0,0,0.0,493
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentColumnName);,0,0,0.0,494
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" where "");",0,0,0.0,495
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(String.valueOf(newMaxId));,0,0,0.0,496
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = "");",0,0,0.0,497
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(valueColumnName);,0,0,0.0,498
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" set "");",0,0,0.0,499
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(tableName);,0,0,0.0,500
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""update "");",0,0,0.0,501
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = IdOverrideTableGenerator.DEFAULT_SEGMENT_COLUMN_NAME;,0,0,0.0,502
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(valueColumnName)) {,0,0,0.0,503
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = IdOverrideTableGenerator.DEFAULT_VALUE_COLUMN_NAME;,0,0,0.0,504
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""value_column_name"")) {",1,0,0.0,505
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""segment_column_name"")) {",1,0,0.0,506
3f045f476d549a73478867a8aa6d305ec4284457,tableName = param.value();,1,0,0.0,507
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""table_name"")) {",1,0,0.0,508
3f045f476d549a73478867a8aa6d305ec4284457,segmentValue = param.value();,1,0,0.0,509
3f045f476d549a73478867a8aa6d305ec4284457,"if (param.name().equals(""segment_value"")) {",1,0,0.0,510
3f045f476d549a73478867a8aa6d305ec4284457,for (Parameter param : genericAnnot.parameters()) {,1,0,0.0,511
3f045f476d549a73478867a8aa6d305ec4284457,if (genericAnnot != null && genericAnnot.strategy().equals(IdOverrideTableGenerator.class.getName())) {,1,0,0.0,512
3f045f476d549a73478867a8aa6d305ec4284457,String valueColumnName = null;,1,0,0.0,513
3f045f476d549a73478867a8aa6d305ec4284457,String segmentColumnName = null;,1,0,0.0,514
3f045f476d549a73478867a8aa6d305ec4284457,String tableName = null;,1,0,0.0,515
3f045f476d549a73478867a8aa6d305ec4284457,String segmentValue = null;,1,0,0.0,516
3f045f476d549a73478867a8aa6d305ec4284457,TableGenerator tableAnnot = idField.getAnnotation(TableGenerator.class);,1,0,0.0,517
3f045f476d549a73478867a8aa6d305ec4284457,GenericGenerator genericAnnot = idField.getAnnotation(GenericGenerator.class);,1,0,0.0,518
3f045f476d549a73478867a8aa6d305ec4284457,idField.setAccessible(true);,1,0,0.0,519
3f045f476d549a73478867a8aa6d305ec4284457,},1,0,0.0,520
3f045f476d549a73478867a8aa6d305ec4284457,continue;,1,0,0.0,521
3f045f476d549a73478867a8aa6d305ec4284457,idField = mappedClass.getDeclaredField(idProperty);,1,0,0.0,522
3f045f476d549a73478867a8aa6d305ec4284457,try {,1,0,0.0,523
3f045f476d549a73478867a8aa6d305ec4284457,Field idField;,1,0,0.0,524
3f045f476d549a73478867a8aa6d305ec4284457,Class<?> mappedClass = metadata.getMappedClass();,1,0,0.0,525
3f045f476d549a73478867a8aa6d305ec4284457,String idProperty = metadata.getIdentifierPropertyName();,1,0,0.0,526
3f045f476d549a73478867a8aa6d305ec4284457,ClassMetadata metadata = (ClassMetadata) item;,1,0,0.0,527
3f045f476d549a73478867a8aa6d305ec4284457,for (Object item : sessionFactory.getAllClassMetadata().values()) {,1,0,0.0,528
3f045f476d549a73478867a8aa6d305ec4284457,SessionFactory sessionFactory = ((HibernateEntityManager) em).getSession().getSessionFactory();,1,0,0.0,529
3f045f476d549a73478867a8aa6d305ec4284457,protected EntityManager em;,1,0,0.0,530
3f045f476d549a73478867a8aa6d305ec4284457,"@PersistenceContext(unitName=""blPU"")",1,0,0.0,531
3f045f476d549a73478867a8aa6d305ec4284457,import javax.persistence.PersistenceContext;,1,0,0.0,532
3f045f476d549a73478867a8aa6d305ec4284457,System.exit(1);,0,0,0.0,533
3f045f476d549a73478867a8aa6d305ec4284457,"""The inconsistency was detected between the managed class ("" + mappedClass.getName() + "") and the identifier ("" + segmentValue + "") in "" + tableName + "". Broadleaf\n"" +",0,0,0.0,534
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = param.value();,1,0,0.0,535
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = param.value();,1,0,0.0,536
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""values ('"" + segmentValue + ""','"" + String.valueOf(newMaxId) + ""')"");",0,0,0.0,537
3f045f476d549a73478867a8aa6d305ec4284457,// Default values are set on startup in IdOverrideTableGenerator so that every annotation does not have,1,0,0.0,538
3f045f476d549a73478867a8aa6d305ec4284457,maxSequenceId = ((Number) results2.get(0)).longValue();,1,0,0.0,539
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results2) && results2.get(0) != null) {,1,0,0.0,540
3f045f476d549a73478867a8aa6d305ec4284457,List results2 = em.createNativeQuery(sb2.toString()).getResultList();,1,0,0.0,541
3f045f476d549a73478867a8aa6d305ec4284457,boolean sequenceEntryExists = false;,1,0,0.0,542
3f045f476d549a73478867a8aa6d305ec4284457,Long maxSequenceId = 0l;,1,0,0.0,543
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""'"");",1,0,0.0,544
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(segmentValue);,1,0,0.0,545
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" = '"");",1,0,0.0,546
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(segmentColumnName);,1,0,0.0,547
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" where "");",1,0,0.0,548
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(tableName);,1,0,0.0,549
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""."");",1,0,0.0,550
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(defaultSchemaSequenceGenerator);,1,0,0.0,551
3f045f476d549a73478867a8aa6d305ec4284457,"if (!tableName.contains(""."") && !StringUtils.isEmpty(defaultSchemaSequenceGenerator)) {",1,0,0.0,552
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" from "");",1,0,0.0,553
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(valueColumnName);,1,0,0.0,554
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""select "");",1,0,0.0,555
3f045f476d549a73478867a8aa6d305ec4284457,if (!StringUtils.isEmpty(segmentValue) && !StringUtils.isEmpty(tableName) && !StringUtils.isEmpty(segmentColumnName) && !StringUtils.isEmpty(valueColumnName)) {,1,0,0.0,556
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = tableAnnot.valueColumnName();,1,0,0.0,557
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = tableAnnot.pkColumnName();,1,0,0.0,558
3f045f476d549a73478867a8aa6d305ec4284457,tableName = tableAnnot.table();,1,0,0.0,559
3f045f476d549a73478867a8aa6d305ec4284457,segmentValue = tableAnnot.pkColumnValue();,1,0,0.0,560
3f045f476d549a73478867a8aa6d305ec4284457,} else if (tableAnnot != null) {,1,0,0.0,561
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = IdOverrideTableGenerator.DEFAULT_VALUE_COLUMN_NAME;,1,0,0.0,562
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(valueColumnName)) {,1,0,0.0,563
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = IdOverrideTableGenerator.DEFAULT_SEGMENT_COLUMN_NAME;,1,0,0.0,564
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(segmentColumnName)) {,1,0,0.0,565
3f045f476d549a73478867a8aa6d305ec4284457,tableName = IdOverrideTableGenerator.DEFAULT_TABLE_NAME;,1,0,0.0,566
3f045f476d549a73478867a8aa6d305ec4284457,if (StringUtils.isBlank(tableName)) {,1,0,0.0,567
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(insertQuery.toString()).executeUpdate();,0,0,0.0,568
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append("" ("" + segmentColumnName + "","" + valueColumnName + "")"");",0,0,0.0,569
3f045f476d549a73478867a8aa6d305ec4284457,} else if (tableAnnot != null) {,0,0,0.0,570
3f045f476d549a73478867a8aa6d305ec4284457,BroadleafRequestContext context = BroadleafRequestContext.getBroadleafRequestContext();,0,0,0.0,571
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("" entity"");",0,0,0.0,572
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(mappedClass.getName());,0,0,0.0,573
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append("") from "");",0,0,0.0,574
3f045f476d549a73478867a8aa6d305ec4284457,sb.append(idField.getName());,0,0,0.0,575
3f045f476d549a73478867a8aa6d305ec4284457,"sb.append(""select max("");",0,0,0.0,576
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder sb = new StringBuilder();,0,0,0.0,577
3f045f476d549a73478867a8aa6d305ec4284457,sequenceEntryExists = true;,0,0,0.0,578
3f045f476d549a73478867a8aa6d305ec4284457,maxSequenceId = ((Number) results2.get(0)).longValue();,0,0,0.0,579
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results2) && results2.get(0) != null) {,0,0,0.0,580
3f045f476d549a73478867a8aa6d305ec4284457,List results2 = em.createNativeQuery(sb2.toString()).getResultList();,0,0,0.0,581
3f045f476d549a73478867a8aa6d305ec4284457,boolean sequenceEntryExists = false;,0,0,0.0,582
3f045f476d549a73478867a8aa6d305ec4284457,Long maxSequenceId = 0l;,0,0,0.0,583
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""'"");",0,0,0.0,584
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(segmentValue);,0,0,0.0,585
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" = '"");",0,0,0.0,586
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(segmentColumnName);,0,0,0.0,587
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" where "");",0,0,0.0,588
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(tableName);,0,0,0.0,589
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""."");",0,0,0.0,590
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(defaultSchemaSequenceGenerator);,0,0,0.0,591
3f045f476d549a73478867a8aa6d305ec4284457,"if (!tableName.contains(""."") && !StringUtils.isEmpty(defaultSchemaSequenceGenerator)) {",0,0,0.0,592
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append("" from "");",0,0,0.0,593
3f045f476d549a73478867a8aa6d305ec4284457,sb2.append(valueColumnName);,0,0,0.0,594
3f045f476d549a73478867a8aa6d305ec4284457,"sb2.append(""select "");",0,0,0.0,595
3f045f476d549a73478867a8aa6d305ec4284457,if (!StringUtils.isEmpty(segmentValue) && !StringUtils.isEmpty(tableName) && !StringUtils.isEmpty(segmentColumnName) && !StringUtils.isEmpty(valueColumnName)) {,0,0,0.0,596
3f045f476d549a73478867a8aa6d305ec4284457,valueColumnName = tableAnnot.valueColumnName();,0,0,0.0,597
3f045f476d549a73478867a8aa6d305ec4284457,segmentColumnName = tableAnnot.pkColumnName();,0,0,0.0,598
3f045f476d549a73478867a8aa6d305ec4284457,tableName = tableAnnot.table();,0,0,0.0,599
3f045f476d549a73478867a8aa6d305ec4284457,segmentValue = tableAnnot.pkColumnValue();,0,0,0.0,600
3f045f476d549a73478867a8aa6d305ec4284457,List results;,0,0,0.0,601
3f045f476d549a73478867a8aa6d305ec4284457,context.setInternalIgnoreFilters(true);,0,0,0.0,602
3f045f476d549a73478867a8aa6d305ec4284457,insertQuery.append(tableName);,0,0,0.0,603
3f045f476d549a73478867a8aa6d305ec4284457,results = em.createQuery(sb.toString()).getResultList();,0,0,0.0,604
3f045f476d549a73478867a8aa6d305ec4284457,"insertQuery.append(""insert into "");",0,0,0.0,605
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder insertQuery = new StringBuilder();,0,0,0.0,606
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), tableName, newMaxId);",0,0,0.0,607
3f045f476d549a73478867a8aa6d305ec4284457,"String log = String.format(""Correcting sequences for entity %s. Did not find an entry in""",0,0,0.0,608
3f045f476d549a73478867a8aa6d305ec4284457,} else {,0,0,0.0,609
3f045f476d549a73478867a8aa6d305ec4284457,if (response <= 0) {,0,0,0.0,610
3f045f476d549a73478867a8aa6d305ec4284457,int response = em.createNativeQuery(updateQuery.toString()).executeUpdate();,0,0,0.0,611
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""'"");",0,0,0.0,612
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentValue);,0,0,0.0,613
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = '"");",0,0,0.0,614
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(segmentColumnName);,0,0,0.0,615
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" where "");",0,0,0.0,616
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(String.valueOf(newMaxId));,0,0,0.0,617
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" = "");",0,0,0.0,618
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(valueColumnName);,0,0,0.0,619
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append("" set "");",0,0,0.0,620
3f045f476d549a73478867a8aa6d305ec4284457,updateQuery.append(tableName);,0,0,0.0,621
3f045f476d549a73478867a8aa6d305ec4284457,"updateQuery.append(""update "");",0,0,0.0,622
3f045f476d549a73478867a8aa6d305ec4284457,StringBuilder updateQuery = new StringBuilder();,0,0,0.0,623
3f045f476d549a73478867a8aa6d305ec4284457,LOG.warn(log);,0,0,0.0,624
3f045f476d549a73478867a8aa6d305ec4284457,"mappedClass.getName(), newMaxId);",0,0,0.0,625
3f045f476d549a73478867a8aa6d305ec4284457,if (sequenceEntryExists) {,0,0,0.0,626
3f045f476d549a73478867a8aa6d305ec4284457,long newMaxId = maxEntityId + 10;,0,0,0.0,627
3f045f476d549a73478867a8aa6d305ec4284457,if (automaticallyCorrectInconsistencies) {,0,0,0.0,628
3f045f476d549a73478867a8aa6d305ec4284457,if (maxEntityId > maxSequenceId) {,0,0,0.0,629
3f045f476d549a73478867a8aa6d305ec4284457,Long maxEntityId = BLCNumberUtils.toLong(results.get(0));,0,0,0.0,630
3f045f476d549a73478867a8aa6d305ec4284457,if (CollectionUtils.isNotEmpty(results) && results.get(0) != null) {,0,0,0.0,631
3f045f476d549a73478867a8aa6d305ec4284457,context.setInternalIgnoreFilters(false);,0,0,0.0,632
3f045f476d549a73478867a8aa6d305ec4284457,} finally {,0,0,0.0,633
3f045f476d549a73478867a8aa6d305ec4284457,System.exit(1);,1,0,0.0,634
