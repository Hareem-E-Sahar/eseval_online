commit_id,line,line_level_label,count,line_score,row
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"} else if (Objects.equal(""Config"", kind) || Objects.equal(""List"", kind)) {",1,7,1.0,1
486c1170e21c2eaacbf15e34da4feb380dedc7ae,} else if (entity instanceof KubernetesList) {,0,6,0.8571428571428571,2
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"} else if (Objects.equal(""BuildConfig"", kind)) {",1,5,0.7142857142857142,3
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"} else if (Objects.equal(""Template"", kind)) {",1,5,0.7142857142857142,4
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"} else if (Objects.equal(""DeploymentConfig"", kind)) {",1,5,0.7142857142857142,5
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"} else if (Objects.equal(""ImageRepository"", kind)) {",1,5,0.7142857142857142,6
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"} else if (Objects.equal(""Service"", kind)) {",1,5,0.7142857142857142,7
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"} else if (Objects.equal(""ReplicationController"", kind)) {",1,5,0.7142857142857142,8
486c1170e21c2eaacbf15e34da4feb380dedc7ae,} if (entity instanceof List) {,1,5,0.7142857142857142,9
486c1170e21c2eaacbf15e34da4feb380dedc7ae,} else if (object instanceof Collection) {,0,5,0.7142857142857142,10
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (entity instanceof List) {,0,4,0.5714285714285714,11
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (entity instanceof JsonNode) {,1,4,0.5714285714285714,12
486c1170e21c2eaacbf15e34da4feb380dedc7ae,} else if (object == null) {,1,4,0.5714285714285714,13
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (items instanceof ArrayNode) {,1,3,0.42857142857142855,14
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (object instanceof JsonNode) {,1,3,0.42857142857142855,15
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (template instanceof ObjectNode) {,1,3,0.42857142857142855,16
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (config instanceof ObjectNode) {,1,3,0.42857142857142855,17
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"if (Objects.equal(""Pod"", kind)) {",1,3,0.42857142857142855,18
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (entity != null) {,1,3,0.42857142857142855,19
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (object instanceof KubernetesList) {,0,3,0.42857142857142855,20
486c1170e21c2eaacbf15e34da4feb380dedc7ae,} else {,0,3,0.42857142857142855,21
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (item instanceof Service) {,0,3,0.42857142857142855,22
486c1170e21c2eaacbf15e34da4feb380dedc7ae,} else {,1,3,0.42857142857142855,23
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (kind != null) {,1,2,0.2857142857142857,24
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (!isTemplate(jsonNode)) {,1,2,0.2857142857142857,25
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (object != config) {,1,2,0.2857142857142857,26
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (isTemplate(jsonNode)) {,1,2,0.2857142857142857,27
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (template == null) {,1,2,0.2857142857142857,28
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (template != null) {,1,2,0.2857142857142857,29
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (jsonNode != null) {,1,2,0.2857142857142857,30
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (Strings.isNotBlank(id)) {,1,2,0.2857142857142857,31
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (!keys.add(key)) {,1,2,0.2857142857142857,32
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"return kind != null && Objects.equal(""Service"", kind.textValue());",1,2,0.2857142857142857,33
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"return kind != null && Objects.equal(""Template"", kind.textValue());",1,2,0.2857142857142857,34
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (items != null && items.isArray()) {,1,2,0.2857142857142857,35
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return entity;,1,2,0.2857142857142857,36
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (isService(jsonNode)) {,1,2,0.2857142857142857,37
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (kindObject != null && kindObject.isTextual()) {,1,2,0.2857142857142857,38
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (list == null) {,0,2,0.2857142857142857,39
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (item != null) {,1,2,0.2857142857142857,40
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (object != list) {,0,2,0.2857142857142857,41
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (item == null) {,0,2,0.2857142857142857,42
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (!keys.add(key)) {,0,2,0.2857142857142857,43
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (items != null) {,0,2,0.2857142857142857,44
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (Strings.isNotBlank(id)) {,0,2,0.2857142857142857,45
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (current == null) {,1,2,0.2857142857142857,46
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (tree != null) {,1,2,0.2857142857142857,47
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (kindNode != null) {,1,2,0.2857142857142857,48
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static Config loadList(byte[] data) throws IOException {,1,2,0.2857142857142857,49
486c1170e21c2eaacbf15e34da4feb380dedc7ae,if (items == null) {,0,2,0.2857142857142857,50
486c1170e21c2eaacbf15e34da4feb380dedc7ae,objects = (ArrayNode) items;,1,1,0.14285714285714285,51
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"return combineTemplates(config, itemArray);",1,1,0.14285714285714285,52
486c1170e21c2eaacbf15e34da4feb380dedc7ae,// lets move all the content into the template,1,1,0.14285714285714285,53
486c1170e21c2eaacbf15e34da4feb380dedc7ae,template = jsonNode;,1,1,0.14285714285714285,54
486c1170e21c2eaacbf15e34da4feb380dedc7ae,for (JsonNode jsonNode : config) {,1,1,0.14285714285714285,55
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode template = null;,1,1,0.14285714285714285,56
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"protected static JsonNode combineTemplates(JsonNode config, ArrayNode itemArray) {",1,1,0.14285714285714285,57
486c1170e21c2eaacbf15e34da4feb380dedc7ae,String json = toJson(item);,1,1,0.14285714285714285,58
486c1170e21c2eaacbf15e34da4feb380dedc7ae,public static JsonNode combineJson(Object... objects) throws IOException {,1,1,0.14285714285714285,59
486c1170e21c2eaacbf15e34da4feb380dedc7ae,public static Object getEntity(JsonNode item) throws IOException {,1,1,0.14285714285714285,60
486c1170e21c2eaacbf15e34da4feb380dedc7ae,* Loads the entity for the given item,1,1,0.14285714285714285,61
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return config;,1,1,0.14285714285714285,62
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"Object entity = loadEntity(bytes, kind, null);",1,1,0.14285714285714285,63
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"throw new IllegalArgumentException(""config "" + template + "" is not a ObjectNode"");",1,1,0.14285714285714285,64
486c1170e21c2eaacbf15e34da4feb380dedc7ae,String kind = kindObject.asText();,1,1,0.14285714285714285,65
486c1170e21c2eaacbf15e34da4feb380dedc7ae,for (JsonNode item : items) {,1,1,0.14285714285714285,66
486c1170e21c2eaacbf15e34da4feb380dedc7ae,Config config = new Config();,1,1,0.14285714285714285,67
486c1170e21c2eaacbf15e34da4feb380dedc7ae,objects = new ArrayNode(createNodeFactory());,1,1,0.14285714285714285,68
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static boolean isService(JsonNode jsonNode) {,1,1,0.14285714285714285,69
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return template;,1,1,0.14285714285714285,70
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static void moveServicesToFrontOfArray(ArrayNode itemArray) {,1,1,0.14285714285714285,71
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return loadList(json);,1,1,0.14285714285714285,72
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader().readTree(json);,1,1,0.14285714285714285,73
486c1170e21c2eaacbf15e34da4feb380dedc7ae,String json = toJson(object);,1,1,0.14285714285714285,74
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return (JsonNode) object;,1,1,0.14285714285714285,75
486c1170e21c2eaacbf15e34da4feb380dedc7ae,public static JsonNode toJsonNode(Object object) throws IOException {,1,1,0.14285714285714285,76
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return jsonNode;,1,1,0.14285714285714285,77
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static JsonNode findOrCreateConfig(Object[] objects) {,1,1,0.14285714285714285,78
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return new JsonNodeFactory(false);,1,1,0.14285714285714285,79
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static JsonNodeFactory createNodeFactory() {,1,1,0.14285714285714285,80
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"protected static void addObjectsToItemArray(ArrayNode itemArray, Object object) throws IOException {",1,1,0.14285714285714285,81
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return false;,1,1,0.14285714285714285,82
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"JsonNode kind = jsonNode.get(""kind"");",1,1,0.14285714285714285,83
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"String key = kind + "":"" + id;",1,1,0.14285714285714285,84
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"String kind = Strings.defaultIfEmpty(getKind(jsonNode), """");",1,1,0.14285714285714285,85
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static void removeDuplicates(ArrayNode itemArray) {,1,1,0.14285714285714285,86
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return defaultValue;,1,1,0.14285714285714285,87
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static boolean isTemplate(JsonNode jsonNode) {,1,1,0.14285714285714285,88
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader(Template.class).readValue(json);,1,1,0.14285714285714285,89
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"String key = kind + "":"" + id;",0,1,0.14285714285714285,90
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return Strings.firstNonBlank(,1,1,0.14285714285714285,91
486c1170e21c2eaacbf15e34da4feb380dedc7ae,public static String getId(JsonNode entity) {,1,1,0.14285714285714285,92
486c1170e21c2eaacbf15e34da4feb380dedc7ae,TODO Config,1,1,0.14285714285714285,93
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return list;,0,1,0.14285714285714285,94
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static KubernetesList findOrCreateList(Object[] objects) {,0,1,0.14285714285714285,95
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"protected static void addObjectsToItemArray(List destinationList, Object object) throws IOException {",0,1,0.14285714285714285,96
486c1170e21c2eaacbf15e34da4feb380dedc7ae,},0,1,0.14285714285714285,97
486c1170e21c2eaacbf15e34da4feb380dedc7ae,String kind = item.getClass().getSimpleName();,0,1,0.14285714285714285,98
486c1170e21c2eaacbf15e34da4feb380dedc7ae,},1,1,0.14285714285714285,99
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static void removeDuplicates(List<Object> itemArray) {,0,1,0.14285714285714285,100
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"return Templates.combineTemplates(list, items);",0,1,0.14285714285714285,101
486c1170e21c2eaacbf15e34da4feb380dedc7ae,public static Object combineJson(Object... objects) throws IOException {,0,1,0.14285714285714285,102
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return config.getItems();,0,1,0.14285714285714285,103
486c1170e21c2eaacbf15e34da4feb380dedc7ae,KubernetesList config = (KubernetesList) entity;,0,1,0.14285714285714285,104
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader(Object.class).readValue(json);,0,1,0.14285714285714285,105
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader(ImageRepository.class).readValue(json);,1,1,0.14285714285714285,106
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return null;,1,1,0.14285714285714285,107
486c1170e21c2eaacbf15e34da4feb380dedc7ae,protected static void moveServicesToFrontOfArray(List<Object> list) {,0,1,0.14285714285714285,108
486c1170e21c2eaacbf15e34da4feb380dedc7ae,public static String getKind(JsonNode entity) {,1,1,0.14285714285714285,109
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode jsonNode = (JsonNode) entity;,1,1,0.14285714285714285,110
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader(DeploymentConfig.class).readValue(json);,1,1,0.14285714285714285,111
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"return getJsonTextProperty(entity, ""kind"");",1,1,0.14285714285714285,112
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader(BuildConfig.class).readValue(json);,1,1,0.14285714285714285,113
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader(Service.class).readValue(json);,1,1,0.14285714285714285,114
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader(Pod.class).readValue(json);,1,1,0.14285714285714285,115
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"protected static Object loadEntity(byte[] json, String kind, Object defaultValue) throws IOException {",1,1,0.14285714285714285,116
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return toItemList(getEntity(jsonNode));,1,1,0.14285714285714285,117
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return objectMapper.reader(ReplicationController.class).readValue(json);,1,1,0.14285714285714285,118
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return tree;,1,1,0.14285714285714285,119
486c1170e21c2eaacbf15e34da4feb380dedc7ae,for (String name : names) {,1,1,0.14285714285714285,120
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"return loadEntity(json, kind, tree);",1,1,0.14285714285714285,121
486c1170e21c2eaacbf15e34da4feb380dedc7ae,String kind = kindNode.asText();,1,1,0.14285714285714285,122
486c1170e21c2eaacbf15e34da4feb380dedc7ae,* {@link JsonNode} if it cannot be recognised.,1,1,0.14285714285714285,123
486c1170e21c2eaacbf15e34da4feb380dedc7ae,return current != null ? current.textValue() : null;,1,1,0.14285714285714285,124
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"protected static String getJsonTextProperty(JsonNode node, String... names) {",1,1,0.14285714285714285,125
486c1170e21c2eaacbf15e34da4feb380dedc7ae,itemArray = new ArrayNode(createNodeFactory());,1,0,0.0,126
486c1170e21c2eaacbf15e34da4feb380dedc7ae,ObjectNode objectNode = (ObjectNode) config;,1,0,0.0,127
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"objectNode.set(""items"", itemArray);",1,0,0.0,128
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"throw new IllegalArgumentException(""config "" + config + "" is not a ObjectNode"");",1,0,0.0,129
486c1170e21c2eaacbf15e34da4feb380dedc7ae,moveServicesToFrontOfArray(itemArray);,1,0,0.0,130
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"addObjectsToItemArray(itemArray, object);",1,0,0.0,131
486c1170e21c2eaacbf15e34da4feb380dedc7ae,// TODO combine templates...,1,0,0.0,132
486c1170e21c2eaacbf15e34da4feb380dedc7ae,removeDuplicates(itemArray);,1,0,0.0,133
486c1170e21c2eaacbf15e34da4feb380dedc7ae,* If we have any templates inside the itemArray then lets unpack them and combine any parameters,1,0,0.0,134
486c1170e21c2eaacbf15e34da4feb380dedc7ae,ArrayNode itemArray;,1,0,0.0,135
486c1170e21c2eaacbf15e34da4feb380dedc7ae,itemArray = (ArrayNode) items;,1,0,0.0,136
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode jsonNode = objectMapper.readTree(data);,1,0,0.0,137
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"JsonNode items = config.get(""items"");",1,0,0.0,138
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode config = findOrCreateConfig(objects);,1,0,0.0,139
486c1170e21c2eaacbf15e34da4feb380dedc7ae,/**,1,0,0.0,140
486c1170e21c2eaacbf15e34da4feb380dedc7ae,itemList.add(entity);,1,0,0.0,141
486c1170e21c2eaacbf15e34da4feb380dedc7ae,byte[] bytes = json.getBytes();,1,0,0.0,142
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"JsonNode kindObject = item.get(""kind"");",1,0,0.0,143
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"JsonNode items = jsonNode.get(""items"");",1,0,0.0,144
486c1170e21c2eaacbf15e34da4feb380dedc7ae,config.setItems(itemList);,1,0,0.0,145
486c1170e21c2eaacbf15e34da4feb380dedc7ae,List<Object> itemList = new ArrayList<>();,1,0,0.0,146
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"LOG.warn(""No JSON type for: "" + tree);",1,0,0.0,147
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"JsonNode kindNode = tree.get(""kind"");",1,0,0.0,148
486c1170e21c2eaacbf15e34da4feb380dedc7ae,ArrayNode objects;,1,0,0.0,149
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"JsonNode items = config.get(""objects"");",1,0,0.0,150
486c1170e21c2eaacbf15e34da4feb380dedc7ae,itemArray.add(node);,1,0,0.0,151
486c1170e21c2eaacbf15e34da4feb380dedc7ae,ObjectNode objectNode = (ObjectNode) template;,1,0,0.0,152
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"objectNode.set(""objects"", itemArray);",1,0,0.0,153
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"config.set(""items"", factory.arrayNode());",1,0,0.0,154
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"config.set(""kind"", factory.textNode(""List""));",1,0,0.0,155
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"config.set(""apiVersion"", factory.textNode(defaultApiVersion));",1,0,0.0,156
486c1170e21c2eaacbf15e34da4feb380dedc7ae,ObjectNode config = factory.objectNode();,1,0,0.0,157
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNodeFactory factory = createNodeFactory();,1,0,0.0,158
486c1170e21c2eaacbf15e34da4feb380dedc7ae,// lets create a new list,1,0,0.0,159
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode jsonNode = (JsonNode) object;,1,0,0.0,160
486c1170e21c2eaacbf15e34da4feb380dedc7ae,ObjectReader reader = objectMapper.reader();,1,0,0.0,161
486c1170e21c2eaacbf15e34da4feb380dedc7ae,itemArray.add(item);,1,0,0.0,162
486c1170e21c2eaacbf15e34da4feb380dedc7ae,Iterator<JsonNode> iter = items.iterator();,1,0,0.0,163
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"JsonNode items = node.get(""items"");",1,0,0.0,164
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode node = toJsonNode(object);,1,0,0.0,165
486c1170e21c2eaacbf15e34da4feb380dedc7ae,size--;,1,0,0.0,166
486c1170e21c2eaacbf15e34da4feb380dedc7ae,i--;,1,0,0.0,167
486c1170e21c2eaacbf15e34da4feb380dedc7ae,itemArray.remove(i);,1,0,0.0,168
486c1170e21c2eaacbf15e34da4feb380dedc7ae,// lets remove this one,1,0,0.0,169
486c1170e21c2eaacbf15e34da4feb380dedc7ae,String id = getId(jsonNode);,1,0,0.0,170
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"itemArray.set(lastNonService, jsonNode);",1,0,0.0,171
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"itemArray.set(i, nonService);",1,0,0.0,172
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode nonService = itemArray.get(lastNonService);,1,0,0.0,173
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode jsonNode = itemArray.get(i);,1,0,0.0,174
486c1170e21c2eaacbf15e34da4feb380dedc7ae,int size = itemArray.size();,1,0,0.0,175
486c1170e21c2eaacbf15e34da4feb380dedc7ae,objects.add(jsonNode);,1,0,0.0,176
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode tree = reader.readTree(new ByteArrayInputStream(json));,1,0,0.0,177
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import com.fasterxml.jackson.databind.node.ArrayNode;,1,0,0.0,178
486c1170e21c2eaacbf15e34da4feb380dedc7ae,* from the Kubernetes REST API or,1,0,0.0,179
486c1170e21c2eaacbf15e34da4feb380dedc7ae,destinationList.addAll(items);,0,0,0.0,180
486c1170e21c2eaacbf15e34da4feb380dedc7ae,KubernetesList kubernetesList = (KubernetesList) object;,0,0,0.0,181
486c1170e21c2eaacbf15e34da4feb380dedc7ae,// lets remove this one,0,0,0.0,182
486c1170e21c2eaacbf15e34da4feb380dedc7ae,String id = getObjectId(item);,0,0,0.0,183
486c1170e21c2eaacbf15e34da4feb380dedc7ae,size--;,0,0,0.0,184
486c1170e21c2eaacbf15e34da4feb380dedc7ae,i--;,0,0,0.0,185
486c1170e21c2eaacbf15e34da4feb380dedc7ae,itemArray.remove(i);,0,0,0.0,186
486c1170e21c2eaacbf15e34da4feb380dedc7ae,Object item = itemArray.get(i);,0,0,0.0,187
486c1170e21c2eaacbf15e34da4feb380dedc7ae,* @param itemArray,0,0,0.0,188
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"list.set(lastNonService, item);",0,0,0.0,189
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"list.set(i, nonService);",0,0,0.0,190
486c1170e21c2eaacbf15e34da4feb380dedc7ae,Object nonService = list.get(lastNonService);,0,0,0.0,191
486c1170e21c2eaacbf15e34da4feb380dedc7ae,Object item = list.get(i);,0,0,0.0,192
486c1170e21c2eaacbf15e34da4feb380dedc7ae,int size = list.size();,0,0,0.0,193
486c1170e21c2eaacbf15e34da4feb380dedc7ae,removeDuplicates(items);,0,0,0.0,194
486c1170e21c2eaacbf15e34da4feb380dedc7ae,moveServicesToFrontOfArray(items);,0,0,0.0,195
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"addObjectsToItemArray(items, object);",0,0,0.0,196
486c1170e21c2eaacbf15e34da4feb380dedc7ae,list.setItems(items);,0,0,0.0,197
486c1170e21c2eaacbf15e34da4feb380dedc7ae,items = new ArrayList<>();,0,0,0.0,198
486c1170e21c2eaacbf15e34da4feb380dedc7ae,List<Object> items = list.getItems();,0,0,0.0,199
486c1170e21c2eaacbf15e34da4feb380dedc7ae,KubernetesList list = findOrCreateList(objects);,0,0,0.0,200
486c1170e21c2eaacbf15e34da4feb380dedc7ae,* from the Kubernetes REST API,0,0,0.0,201
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import java.util.Collection;,0,0,0.0,202
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import io.fabric8.kubernetes.api.extensions.Templates;,0,0,0.0,203
486c1170e21c2eaacbf15e34da4feb380dedc7ae,List<Object> items = kubernetesList.getItems();,0,0,0.0,204
486c1170e21c2eaacbf15e34da4feb380dedc7ae,Collection collection = (Collection) object;,0,0,0.0,205
486c1170e21c2eaacbf15e34da4feb380dedc7ae,current = current.get(name);,1,0,0.0,206
486c1170e21c2eaacbf15e34da4feb380dedc7ae,destinationList.addAll(collection);,0,0,0.0,207
486c1170e21c2eaacbf15e34da4feb380dedc7ae,JsonNode current = node;,1,0,0.0,208
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"getJsonTextProperty(entity, ""id""));",1,0,0.0,209
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"getJsonTextProperty(entity, ""name""),",1,0,0.0,210
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"getJsonTextProperty(entity, ""metadata"", ""id""),",1,0,0.0,211
486c1170e21c2eaacbf15e34da4feb380dedc7ae,"getJsonTextProperty(entity, ""metadata"", ""name""),",1,0,0.0,212
486c1170e21c2eaacbf15e34da4feb380dedc7ae,*/,1,0,0.0,213
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import io.fabric8.kubernetes.api.model.Template;,1,0,0.0,214
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import io.fabric8.kubernetes.api.model.Item;,1,0,0.0,215
486c1170e21c2eaacbf15e34da4feb380dedc7ae,/*,1,0,0.0,216
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import java.util.Iterator;,1,0,0.0,217
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import java.io.ByteArrayInputStream;,1,0,0.0,218
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import io.fabric8.openshift.api.model.ImageRepository;,1,0,0.0,219
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import io.fabric8.openshift.api.model.DeploymentConfig;,1,0,0.0,220
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import io.fabric8.openshift.api.model.BuildConfig;,1,0,0.0,221
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import com.fasterxml.jackson.databind.node.ObjectNode;,1,0,0.0,222
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import com.fasterxml.jackson.databind.node.JsonNodeFactory;,1,0,0.0,223
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import com.fasterxml.jackson.databind.ObjectReader;,1,0,0.0,224
486c1170e21c2eaacbf15e34da4feb380dedc7ae,import com.fasterxml.jackson.databind.JsonNode;,1,0,0.0,225
486c1170e21c2eaacbf15e34da4feb380dedc7ae,list = new KubernetesList();,0,0,0.0,226
486c1170e21c2eaacbf15e34da4feb380dedc7ae,break;,0,0,0.0,227
486c1170e21c2eaacbf15e34da4feb380dedc7ae,list = (KubernetesList) object;,0,0,0.0,228
486c1170e21c2eaacbf15e34da4feb380dedc7ae,KubernetesList list = null;,0,0,0.0,229
486c1170e21c2eaacbf15e34da4feb380dedc7ae,destinationList.add(object);,0,0,0.0,230
486c1170e21c2eaacbf15e34da4feb380dedc7ae,* Converts the DTO to a JsonNode,1,0,0.0,231
