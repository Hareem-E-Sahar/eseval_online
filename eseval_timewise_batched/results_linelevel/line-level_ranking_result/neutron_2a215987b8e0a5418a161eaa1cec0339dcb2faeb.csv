commit_id,line,line_level_label,count,line_score,row
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,# the behavior changes.  It also makes sure that non-Linux-based,1,6,1.0,1
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"# The Linux netaddr library seems to do this by default (bug?),",1,5,0.8333333333333333,2
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"# Make sure the format of this network, if IPv6, is zero-filled.",1,4,0.6666666666666666,3
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"# and the test verifies it, but we should force it just in case",1,3,0.5,4
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,# libraries also work correctly (e.g. OSX).,1,3,0.5,5
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"bc.init_l3('tap0', ['2001:db8:a::124/64'], namespace=ns,",1,3,0.5,6
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"device.addr.add(net.version, ip_cidr,",1,2,0.3333333333333333,7
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"bc.init_l3('tap0', ['2001:db8:a::124/64'], namespace=ns)",0,2,0.3333333333333333,8
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"bc.init_l3('tap0', new_cidrs, namespace=ns,",0,2,0.3333333333333333,9
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.delete(6, '2001:db8:a::123/64'),",1,1,0.16666666666666666,10
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,extra_subnets=[{'cidr': '2001:db8:b::/64'}]),1,1,0.16666666666666666,11
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,bc = BaseChild(self.conf),0,1,0.16666666666666666,12
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,self.ip_dev().route.list_onlink_routes.return_value = [],0,1,0.16666666666666666,13
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"bc.init_l3('tap0', [new_cidr], **kwargs)",0,1,0.16666666666666666,14
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,extra_subnets=[{'cidr': '172.20.0.0/24'}]),0,1,0.16666666666666666,15
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().route.list_onlink_routes(),",1,1,0.16666666666666666,16
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,self.ip_dev().route.list_onlink_routes.return_value = [route],0,1,0.16666666666666666,17
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,route = '2001:db8:a::/64',0,1,0.16666666666666666,18
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,bc = BaseChild(self.conf),0,1,0.16666666666666666,19
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"for ip_cidr, ip_version in previous.items():",1,1,0.16666666666666666,20
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,expected_calls = (,0,0,0.0,21
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"[mock.call().route.list_onlink_routes(constants.IP_VERSION_4),",0,0,0.0,22
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,[mock.call().route.add_gateway('2001:db8:a::1')]),0,0,0.0,23
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,expected_calls += (,0,0,0.0,24
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,mock.call().addr.delete('2001:db8:a::123/64')]),0,0,0.0,25
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.add('2001:db8:a::124/64'),",0,0,0.0,26
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.list(scope='global', filters=['permanent']),",0,0,0.0,27
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"[mock.call('tap0', namespace=ns),",0,0,0.0,28
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,kwargs['gateway_ips'] = ['2001:db8:a::1'],0,0,0.0,29
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,if include_gw_ip:,0,0,0.0,30
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,'extra_subnets': [{'cidr': '2001:db8:b::/64'}]},0,0,0.0,31
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"kwargs = {'namespace': ns,",0,0,0.0,32
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,new_cidr = '2001:db8:a::124/64',0,0,0.0,33
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"def _test_l3_init_with_ipv6(self, include_gw_ip):",0,0,0.0,34
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"'2001:db8:a:0:ffff:ffff:ffff:ffff'),",1,0,0.0,35
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,mock.call().route.add_onlink_route('2001:db8:b::/64')]),0,0,0.0,36
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().route.list_onlink_routes(constants.IP_VERSION_6),",0,0,0.0,37
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"dict(ip_version=6, scope='global',",0,0,0.0,38
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,self.ip_dev.assert_has_calls(expected_calls),0,0,0.0,39
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,def test_l3_init_ipv6_with_gw_ip(self):,0,0,0.0,40
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,def test_l3_init_with_ipv6(self):,1,0,0.0,41
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,mock.call().route.add_onlink_route('172.20.0.0/24')]),0,0,0.0,42
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.delete('172.16.77.240/24'),",0,0,0.0,43
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.add('192.168.1.2/24'),",0,0,0.0,44
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"new_cidrs = ['192.168.1.2/24', '2001:db8:a::124/64']",0,0,0.0,45
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,ns = '12345678-1234-5678-90ab-ba0987654321',0,0,0.0,46
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,self.ip_dev().addr.list = mock.Mock(return_value=old_addrs),0,0,0.0,47
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"dynamic=False, cidr='2001:db8:a::123/64')]",0,0,0.0,48
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"scope='global',",1,0,0.0,49
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"dynamic=False, cidr='172.16.77.240/24'),",0,0,0.0,50
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"old_addrs = [dict(ip_version=4, scope='global',",0,0,0.0,51
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,def test_l3_init_ext_gw_with_dual_stack(self):,0,0,0.0,52
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,self._test_l3_init_with_ipv6(include_gw_ip=False),0,0,0.0,53
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,def test_l3_init_ipv6_without_gw_ip(self):,0,0,0.0,54
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,self._test_l3_init_with_ipv6(include_gw_ip=True),0,0,0.0,55
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.add(6, '2001:db8:a::124/64',",1,0,0.0,56
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,self.ip_dev().addr.list = mock.Mock(return_value=addresses),0,0,0.0,57
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"addresses = [dict(ip_version=6,",1,0,0.0,58
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"addresses = [dict(scope='global',",0,0,0.0,59
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,existing_onlink_routes = set(device.route.list_onlink_routes()),1,0,0.0,60
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"device.addr.delete(ip_version, ip_cidr)",1,0,0.0,61
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,str(net.broadcast.format(netaddr.ipv6_full))),1,0,0.0,62
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,del previous[ip_cidr],1,0,0.0,63
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,previous[address['cidr']] = address['ip_version'],1,0,0.0,64
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,previous = {},1,0,0.0,65
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,device.route.list_onlink_routes(n_const.IP_VERSION_6)),0,0,0.0,66
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,device.route.list_onlink_routes(n_const.IP_VERSION_4) +,0,0,0.0,67
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,existing_onlink_routes = set(,0,0,0.0,68
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,device.addr.delete(ip_cidr),0,0,0.0,69
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,for ip_cidr in previous:,0,0,0.0,70
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,device.addr.add(ip_cidr),0,0,0.0,71
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,previous.remove(ip_cidr),0,0,0.0,72
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,previous.add(address['cidr']),0,0,0.0,73
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,previous = set(),0,0,0.0,74
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,from neutron.common import constants,0,0,0.0,75
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.add('192.168.1.2/24'),",0,0,0.0,76
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.add(4, '192.168.1.2/24', '192.168.1.255')])",1,0,0.0,77
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.delete('172.16.77.240/24'),",0,0,0.0,78
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"[mock.call().route.list_onlink_routes(),",1,0,0.0,79
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.delete(4, '172.16.77.240/24'),",1,0,0.0,80
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.add(4, '192.168.1.2/24', '192.168.1.255'),",1,0,0.0,81
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"addresses = [dict(ip_version=4, scope='global',",1,0,0.0,82
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,mock.call().route.delete_onlink_route(route)]),0,0,0.0,83
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,self.ip_dev.assert_has_calls(,0,0,0.0,84
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,ns = '12345678-1234-5678-90ab-ba0987654321',0,0,0.0,85
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"dynamic=False, cidr='2001:db8:a::123/64')]",0,0,0.0,86
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,def test_l3_init_with_ipv6_delete_onlink_routes(self):,0,0,0.0,87
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.delete('2001:db8:a::123/64'),",0,0,0.0,88
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().addr.add('2001:db8:a::124/64'),",0,0,0.0,89
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,mock.call().addr.add('192.168.1.2/24')]),0,0,0.0,90
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"[mock.call().route.list_onlink_routes(constants.IP_VERSION_4),",0,0,0.0,91
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().route.list_onlink_routes(constants.IP_VERSION_6),",0,0,0.0,92
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,"mock.call().route.list_onlink_routes(constants.IP_VERSION_4),",0,0,0.0,93
2a215987b8e0a5418a161eaa1cec0339dcb2faeb,mock.call().route.add_onlink_route('2001:db8:b::/64')]),1,0,0.0,94
