commit_id,line,line_level_label,count,line_score,row
e7158c7e9fcfff63426401c798685df266d16f00,if (ignoreCase && a instanceof String && b instanceof String) {,0,9,1.0,1
e7158c7e9fcfff63426401c798685df266d16f00,if (ignoreCase && a instanceof String && b instanceof String) {,1,9,1.0,2
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method for performing an ordered comparison on the objects,0,6,0.6666666666666666,3
e7158c7e9fcfff63426401c798685df266d16f00,} else if (collectionOrArray instanceof String && value instanceof String) {,0,6,0.6666666666666666,4
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method for performing an ordered comparison on the objects,1,6,0.6666666666666666,5
e7158c7e9fcfff63426401c798685df266d16f00,} else if (collectionOrArray instanceof String && value instanceof String) {,1,6,0.6666666666666666,6
e7158c7e9fcfff63426401c798685df266d16f00,// generic file is just a wrapper for the real file so call again with the real file,1,6,0.6666666666666666,7
e7158c7e9fcfff63426401c798685df266d16f00,if (a instanceof Ordered && b instanceof Ordered) {,1,5,0.5555555555555556,8
e7158c7e9fcfff63426401c798685df266d16f00,* @param a  the first object,1,5,0.5555555555555556,9
e7158c7e9fcfff63426401c798685df266d16f00,* @param b  the second object,1,5,0.5555555555555556,10
e7158c7e9fcfff63426401c798685df266d16f00,* @param ignoreCase  ignore case for string comparison,1,5,0.5555555555555556,11
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method to create a new instance of a type using the default,1,5,0.5555555555555556,12
e7158c7e9fcfff63426401c798685df266d16f00,* Returns true if the collection contains the specified value by considering case insensitivity,1,5,0.5555555555555556,13
e7158c7e9fcfff63426401c798685df266d16f00,"* Creates an iterator over the value if the value is a collection, an",1,5,0.5555555555555556,14
e7158c7e9fcfff63426401c798685df266d16f00,// use a scanner if it contains the delimiter or is a pattern,1,5,0.5555555555555556,15
e7158c7e9fcfff63426401c798685df266d16f00,if (rightValue instanceof String && (!(leftValue instanceof String))) {,1,5,0.5555555555555556,16
e7158c7e9fcfff63426401c798685df266d16f00,* handling nulls and objects which do not handle sorting gracefully,1,5,0.5555555555555556,17
e7158c7e9fcfff63426401c798685df266d16f00,"* Creates an iterable over the value if the value is a collection, an",1,5,0.5555555555555556,18
e7158c7e9fcfff63426401c798685df266d16f00,* Returns true if the collection contains the specified value by considering case insensitivity,0,5,0.5555555555555556,19
e7158c7e9fcfff63426401c798685df266d16f00,* @param a  the first object,0,5,0.5555555555555556,20
e7158c7e9fcfff63426401c798685df266d16f00,"* Creates an iterator over the value if the value is a collection, an",0,5,0.5555555555555556,21
e7158c7e9fcfff63426401c798685df266d16f00,* the License.  You may obtain a copy of the License at,0,5,0.5555555555555556,22
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method to create a new instance of a type using the default,0,5,0.5555555555555556,23
e7158c7e9fcfff63426401c798685df266d16f00,* handling nulls and objects which do not handle sorting gracefully,0,5,0.5555555555555556,24
e7158c7e9fcfff63426401c798685df266d16f00,if (rightValue instanceof String && (!(leftValue instanceof String))) {,0,5,0.5555555555555556,25
e7158c7e9fcfff63426401c798685df266d16f00,* @param b  the second object,0,5,0.5555555555555556,26
e7158c7e9fcfff63426401c798685df266d16f00,* @param ignoreCase  ignore case for string comparison,0,5,0.5555555555555556,27
e7158c7e9fcfff63426401c798685df266d16f00,if (a instanceof Ordered && b instanceof Ordered) {,0,5,0.5555555555555556,28
e7158c7e9fcfff63426401c798685df266d16f00,"* Creates an iterable over the value if the value is a collection, an",0,5,0.5555555555555556,29
e7158c7e9fcfff63426401c798685df266d16f00,// if right is String and left is not then flip order (remember to * -1 the result then),1,4,0.4444444444444444,30
e7158c7e9fcfff63426401c798685df266d16f00,"* @return the properties which holds the camel context properties with the prefix,",1,4,0.4444444444444444,31
e7158c7e9fcfff63426401c798685df266d16f00,* Returns true if the collection contains the specified value,1,4,0.4444444444444444,32
e7158c7e9fcfff63426401c798685df266d16f00,if (value != null && (value instanceof StringBuffer || value instanceof StringBuilder)) {,1,4,0.4444444444444444,33
e7158c7e9fcfff63426401c798685df266d16f00,* we just create a singleton collection iterator over a single value,1,4,0.4444444444444444,34
e7158c7e9fcfff63426401c798685df266d16f00,"* Object[], a String with values separated by the given delimiter,",1,4,0.4444444444444444,35
e7158c7e9fcfff63426401c798685df266d16f00,"* code, we just create a singleton collection iterator over a single value",1,4,0.4444444444444444,36
e7158c7e9fcfff63426401c798685df266d16f00,* over the corresponding Java primitive wrapper objects of the given elements,1,4,0.4444444444444444,37
e7158c7e9fcfff63426401c798685df266d16f00,* @param pattern           whether the delimiter is a pattern,1,4,0.4444444444444444,38
e7158c7e9fcfff63426401c798685df266d16f00,"final boolean allowEmptyValues, final boolean pattern) {",1,4,0.4444444444444444,39
e7158c7e9fcfff63426401c798685df266d16f00,"* @param value     the value, typically the message IN body",1,4,0.4444444444444444,40
e7158c7e9fcfff63426401c798685df266d16f00,* @param instance the object instance (or null for static methods),1,4,0.4444444444444444,41
e7158c7e9fcfff63426401c798685df266d16f00,* @param parameters the parameters to the method,1,4,0.4444444444444444,42
e7158c7e9fcfff63426401c798685df266d16f00,* Wraps the caused exception in a {@link RuntimeCamelException} if its not,1,4,0.4444444444444444,43
e7158c7e9fcfff63426401c798685df266d16f00,* Wraps the caused exception in a {@link CamelExecutionException} if its not,1,4,0.4444444444444444,44
e7158c7e9fcfff63426401c798685df266d16f00,* Calling the Callable with the setting of TCCL with the camel context application classloader.,1,4,0.4444444444444444,45
e7158c7e9fcfff63426401c798685df266d16f00,* Calling the Callable with the setting of TCCL with a given classloader.,1,4,0.4444444444444444,46
e7158c7e9fcfff63426401c798685df266d16f00,* Set the {@link CamelContext} context if the component is an instance of {@link CamelContextAware}.,1,4,0.4444444444444444,47
e7158c7e9fcfff63426401c798685df266d16f00,* Set the {@link Component} context if the component is an instance of {@link ComponentAware}.,1,4,0.4444444444444444,48
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method for comparing objects for inequality in which it uses type coercion to coerce,1,4,0.4444444444444444,49
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method for comparing objects ordering in which it uses type coercion to coerce,1,4,0.4444444444444444,50
e7158c7e9fcfff63426401c798685df266d16f00,if (collectionOrArray != null && (collectionOrArray instanceof StringBuffer || collectionOrArray instanceof StringBuilder)) {,1,4,0.4444444444444444,51
e7158c7e9fcfff63426401c798685df266d16f00,* a String and Integer type as Camel will be able to coerce the types.,1,4,0.4444444444444444,52
e7158c7e9fcfff63426401c798685df266d16f00,* Calling the Callable with the setting of TCCL with a given classloader.,0,4,0.4444444444444444,53
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method for comparing objects for equality in which it uses type coercion to coerce,1,4,0.4444444444444444,54
e7158c7e9fcfff63426401c798685df266d16f00,* See the License for the specific language governing permissions and,0,4,0.4444444444444444,55
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method for comparing objects for equality in which it uses type coercion to coerce,0,4,0.4444444444444444,56
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method for comparing objects for inequality in which it uses type coercion to coerce,0,4,0.4444444444444444,57
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method for comparing objects ordering in which it uses type coercion to coerce,0,4,0.4444444444444444,58
e7158c7e9fcfff63426401c798685df266d16f00,// if right is String and left is not then flip order (remember to * -1 the result then),0,4,0.4444444444444444,59
e7158c7e9fcfff63426401c798685df266d16f00,* @param instance the object instance (or null for static methods),0,4,0.4444444444444444,60
e7158c7e9fcfff63426401c798685df266d16f00,* @param parameters the parameters to the method,0,4,0.4444444444444444,61
e7158c7e9fcfff63426401c798685df266d16f00,* Calling the Callable with the setting of TCCL with the camel context application classloader.,0,4,0.4444444444444444,62
e7158c7e9fcfff63426401c798685df266d16f00,* a String and Integer type as Camel will be able to coerce the types.,0,4,0.4444444444444444,63
e7158c7e9fcfff63426401c798685df266d16f00,* we just create a singleton collection iterator over a single value,0,4,0.4444444444444444,64
e7158c7e9fcfff63426401c798685df266d16f00,"final boolean allowEmptyValues, final boolean pattern) {",0,4,0.4444444444444444,65
e7158c7e9fcfff63426401c798685df266d16f00,"* Object[], a String with values separated by the given delimiter,",0,4,0.4444444444444444,66
e7158c7e9fcfff63426401c798685df266d16f00,* Returns true if the collection contains the specified value,0,4,0.4444444444444444,67
e7158c7e9fcfff63426401c798685df266d16f00,if (collectionOrArray != null && (collectionOrArray instanceof StringBuffer || collectionOrArray instanceof StringBuilder)) {,0,4,0.4444444444444444,68
e7158c7e9fcfff63426401c798685df266d16f00,* @param pattern           whether the delimiter is a pattern,0,4,0.4444444444444444,69
e7158c7e9fcfff63426401c798685df266d16f00,* over the corresponding Java primitive wrapper objects of the given elements,0,4,0.4444444444444444,70
e7158c7e9fcfff63426401c798685df266d16f00,"* code, we just create a singleton collection iterator over a single value",0,4,0.4444444444444444,71
e7158c7e9fcfff63426401c798685df266d16f00,if (value != null && (value instanceof StringBuffer || value instanceof StringBuilder)) {,0,4,0.4444444444444444,72
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof String) {,1,3,0.3333333333333333,73
e7158c7e9fcfff63426401c798685df266d16f00,* @param delimiter  delimiter for separating String values,1,3,0.3333333333333333,74
e7158c7e9fcfff63426401c798685df266d16f00,* </p> In case of primitive type arrays the returned {@code Iterable} iterates,1,3,0.3333333333333333,75
e7158c7e9fcfff63426401c798685df266d16f00,* @param delimiter         delimiter for separating String values,1,3,0.3333333333333333,76
e7158c7e9fcfff63426401c798685df266d16f00,* @param value             the value,1,3,0.3333333333333333,77
e7158c7e9fcfff63426401c798685df266d16f00,* types here for free as it's also the case in Java language itself.,1,3,0.3333333333333333,78
e7158c7e9fcfff63426401c798685df266d16f00,* inside the {@code value} array. That's we get an autoboxing of the primitive,1,3,0.3333333333333333,79
e7158c7e9fcfff63426401c798685df266d16f00,* </p> In case of primitive type arrays the returned {@code Iterator} iterates,1,3,0.3333333333333333,80
e7158c7e9fcfff63426401c798685df266d16f00,* @param value  the value,1,3,0.3333333333333333,81
e7158c7e9fcfff63426401c798685df266d16f00,* @param value      the value,1,3,0.3333333333333333,82
e7158c7e9fcfff63426401c798685df266d16f00,* or a primitive type array; otherwise to simplify the caller's,1,3,0.3333333333333333,83
e7158c7e9fcfff63426401c798685df266d16f00,* Will default use comma for String separating String values.,1,3,0.3333333333333333,84
e7158c7e9fcfff63426401c798685df266d16f00,"* or a primitive type array; otherwise to simplify the caller's code,",1,3,0.3333333333333333,85
e7158c7e9fcfff63426401c798685df266d16f00,"* Object[], a String with values separated by comma,",1,3,0.3333333333333333,86
e7158c7e9fcfff63426401c798685df266d16f00,"public static int compare(Object a, Object b, boolean ignoreCase) {",1,3,0.3333333333333333,87
e7158c7e9fcfff63426401c798685df266d16f00,"// this code is optimized to only use a Scanner if needed, eg there is a delimiter",1,3,0.3333333333333333,88
e7158c7e9fcfff63426401c798685df266d16f00,final String s = (String) value;,1,3,0.3333333333333333,89
e7158c7e9fcfff63426401c798685df266d16f00,* @param delimiter the delimiter pattern to use,1,3,0.3333333333333333,90
e7158c7e9fcfff63426401c798685df266d16f00,// use a plain iterator that returns the value as is as there are only a single value,1,3,0.3333333333333333,91
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method to access a camel context properties with a prefix,1,3,0.3333333333333333,92
e7158c7e9fcfff63426401c798685df266d16f00,// for example if we are comparing String vs Integer then prefer to coerce to Integer,1,3,0.3333333333333333,93
e7158c7e9fcfff63426401c798685df266d16f00,* @param classloader the class loader,1,3,0.3333333333333333,94
e7158c7e9fcfff63426401c798685df266d16f00,* @param call        the Callable instance,1,3,0.3333333333333333,95
e7158c7e9fcfff63426401c798685df266d16f00,* @return the result of Callable return,1,3,0.3333333333333333,96
e7158c7e9fcfff63426401c798685df266d16f00,* @param exchange the exchange,1,3,0.3333333333333333,97
e7158c7e9fcfff63426401c798685df266d16f00,* @param call the Callable instance,1,3,0.3333333333333333,98
e7158c7e9fcfff63426401c798685df266d16f00,// we have loaded the file content into the body so use that,1,3,0.3333333333333333,99
e7158c7e9fcfff63426401c798685df266d16f00,* @param exchange  the current exchange,1,3,0.3333333333333333,100
e7158c7e9fcfff63426401c798685df266d16f00,* Creates a {@link Scanner} for scanning the given value.,1,3,0.3333333333333333,101
e7158c7e9fcfff63426401c798685df266d16f00,* @param e the caused exception,1,3,0.3333333333333333,102
e7158c7e9fcfff63426401c798685df266d16f00,* @return the result of the method invocation,1,3,0.3333333333333333,103
e7158c7e9fcfff63426401c798685df266d16f00,* @param method the method to invoke,1,3,0.3333333333333333,104
e7158c7e9fcfff63426401c798685df266d16f00,*         and the key omit the prefix part,1,3,0.3333333333333333,105
e7158c7e9fcfff63426401c798685df266d16f00,* @param camelContext the camel context,1,3,0.3333333333333333,106
e7158c7e9fcfff63426401c798685df266d16f00,* @param prefix       the prefix,1,3,0.3333333333333333,107
e7158c7e9fcfff63426401c798685df266d16f00,// if they are both String then it doesn't matter,1,3,0.3333333333333333,108
e7158c7e9fcfff63426401c798685df266d16f00,* </p> In case of primitive type arrays the returned {@code Iterable} iterates,0,3,0.3333333333333333,109
e7158c7e9fcfff63426401c798685df266d16f00,// prefer to NOT coerce to String so use the type which is not String,1,3,0.3333333333333333,110
e7158c7e9fcfff63426401c798685df266d16f00,* @param method the method to invoke,0,3,0.3333333333333333,111
e7158c7e9fcfff63426401c798685df266d16f00,* @param classloader the class loader,0,3,0.3333333333333333,112
e7158c7e9fcfff63426401c798685df266d16f00,* @param call        the Callable instance,0,3,0.3333333333333333,113
e7158c7e9fcfff63426401c798685df266d16f00,* @return the result of Callable return,0,3,0.3333333333333333,114
e7158c7e9fcfff63426401c798685df266d16f00,* @param exchange the exchange,0,3,0.3333333333333333,115
e7158c7e9fcfff63426401c798685df266d16f00,* @param call the Callable instance,0,3,0.3333333333333333,116
e7158c7e9fcfff63426401c798685df266d16f00,"public static int compare(Object a, Object b, boolean ignoreCase) {",0,3,0.3333333333333333,117
e7158c7e9fcfff63426401c798685df266d16f00,* @return the result of the method invocation,0,3,0.3333333333333333,118
e7158c7e9fcfff63426401c798685df266d16f00,// if they are both String then it doesn't matter,0,3,0.3333333333333333,119
e7158c7e9fcfff63426401c798685df266d16f00,"* or a primitive type array; otherwise to simplify the caller's code,",0,3,0.3333333333333333,120
e7158c7e9fcfff63426401c798685df266d16f00,// for example if we are comparing String vs Integer then prefer to coerce to Integer,0,3,0.3333333333333333,121
e7158c7e9fcfff63426401c798685df266d16f00,// prefer to NOT coerce to String so use the type which is not String,0,3,0.3333333333333333,122
e7158c7e9fcfff63426401c798685df266d16f00,"private static final String DEFAULT_DELIMITER = "","";",0,3,0.3333333333333333,123
e7158c7e9fcfff63426401c798685df266d16f00,"* distributed under the License is distributed on an ""AS IS"" BASIS,",0,3,0.3333333333333333,124
e7158c7e9fcfff63426401c798685df266d16f00,"* The ASF licenses this file to You under the Apache License, Version 2.0",0,3,0.3333333333333333,125
e7158c7e9fcfff63426401c798685df266d16f00,* contributor license agreements.  See the NOTICE file distributed with,0,3,0.3333333333333333,126
e7158c7e9fcfff63426401c798685df266d16f00,"// are they same type, if so return false as the equals returned false",1,3,0.3333333333333333,127
e7158c7e9fcfff63426401c798685df266d16f00,"* Object[], a String with values separated by comma,",0,3,0.3333333333333333,128
e7158c7e9fcfff63426401c798685df266d16f00,"// are they same type, if so return false as the equals returned false",0,3,0.3333333333333333,129
e7158c7e9fcfff63426401c798685df266d16f00,* Will default use comma for String separating String values.,0,3,0.3333333333333333,130
e7158c7e9fcfff63426401c798685df266d16f00,* @param value             the value,0,3,0.3333333333333333,131
e7158c7e9fcfff63426401c798685df266d16f00,"private static final String DEFAULT_DELIMITER = "","";",1,3,0.3333333333333333,132
e7158c7e9fcfff63426401c798685df266d16f00,* @param value  the value,0,3,0.3333333333333333,133
e7158c7e9fcfff63426401c798685df266d16f00,// use a plain iterator that returns the value as is as there are only a single value,0,3,0.3333333333333333,134
e7158c7e9fcfff63426401c798685df266d16f00,"// this code is optimized to only use a Scanner if needed, eg there is a delimiter",0,3,0.3333333333333333,135
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof String) {,0,3,0.3333333333333333,136
e7158c7e9fcfff63426401c798685df266d16f00,* @param delimiter         delimiter for separating String values,0,3,0.3333333333333333,137
e7158c7e9fcfff63426401c798685df266d16f00,final String s = (String) value;,0,3,0.3333333333333333,138
e7158c7e9fcfff63426401c798685df266d16f00,* types here for free as it's also the case in Java language itself.,0,3,0.3333333333333333,139
e7158c7e9fcfff63426401c798685df266d16f00,* or a primitive type array; otherwise to simplify the caller's,0,3,0.3333333333333333,140
e7158c7e9fcfff63426401c798685df266d16f00,* </p> In case of primitive type arrays the returned {@code Iterator} iterates,0,3,0.3333333333333333,141
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterable<String> createIterable(String value, String delimiter, boolean allowEmptyValues, boolean pattern) {",0,3,0.3333333333333333,142
e7158c7e9fcfff63426401c798685df266d16f00,* @param delimiter  delimiter for separating String values,0,3,0.3333333333333333,143
e7158c7e9fcfff63426401c798685df266d16f00,* inside the {@code value} array. That's we get an autoboxing of the primitive,0,3,0.3333333333333333,144
e7158c7e9fcfff63426401c798685df266d16f00,* @param value      the value,0,3,0.3333333333333333,145
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof Iterator) {,1,2,0.2222222222222222,146
e7158c7e9fcfff63426401c798685df266d16f00,"boolean allowEmptyValues, boolean pattern) {",1,2,0.2222222222222222,147
e7158c7e9fcfff63426401c798685df266d16f00,final boolean allowEmptyValues) {,1,2,0.2222222222222222,148
e7158c7e9fcfff63426401c798685df266d16f00,// if its a message than we want to iterate its body,1,2,0.2222222222222222,149
e7158c7e9fcfff63426401c798685df266d16f00,if (value instanceof Message) {,1,2,0.2222222222222222,150
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof Iterable) {,1,2,0.2222222222222222,151
e7158c7e9fcfff63426401c798685df266d16f00,final Iterator<Object> iterator = (Iterator<Object>)value;,1,2,0.2222222222222222,152
e7158c7e9fcfff63426401c798685df266d16f00,final Object array = value;,1,2,0.2222222222222222,153
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof NodeList) {,1,2,0.2222222222222222,154
e7158c7e9fcfff63426401c798685df266d16f00,* @param allowEmptyValues  whether to allow empty values,1,2,0.2222222222222222,155
e7158c7e9fcfff63426401c798685df266d16f00,final NodeList nodeList = (NodeList) value;,1,2,0.2222222222222222,156
e7158c7e9fcfff63426401c798685df266d16f00,if (delimiter != null && (pattern || s.contains(delimiter))) {,1,2,0.2222222222222222,157
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterator<Object> createIterator(Object value, String delimiter, boolean allowEmptyValues) {",1,2,0.2222222222222222,158
e7158c7e9fcfff63426401c798685df266d16f00,return ((String) a).compareToIgnoreCase((String) b);,1,2,0.2222222222222222,159
e7158c7e9fcfff63426401c798685df266d16f00,* @return the iterator,1,2,0.2222222222222222,160
e7158c7e9fcfff63426401c798685df266d16f00,* @return the iterable,1,2,0.2222222222222222,161
e7158c7e9fcfff63426401c798685df266d16f00,String subStr = (String)value;,1,2,0.2222222222222222,162
e7158c7e9fcfff63426401c798685df266d16f00,String str = (String)collectionOrArray;,1,2,0.2222222222222222,163
e7158c7e9fcfff63426401c798685df266d16f00,if (collectionOrArray instanceof Collection) {,1,2,0.2222222222222222,164
e7158c7e9fcfff63426401c798685df266d16f00,if (a instanceof Comparable) {,1,2,0.2222222222222222,165
e7158c7e9fcfff63426401c798685df266d16f00,"public static int compare(Object a, Object b) {",1,2,0.2222222222222222,166
e7158c7e9fcfff63426401c798685df266d16f00,if (leftValue instanceof Comparable) {,1,2,0.2222222222222222,167
e7158c7e9fcfff63426401c798685df266d16f00,return ((Comparable) rightValue).compareTo(value) * -1;,1,2,0.2222222222222222,168
e7158c7e9fcfff63426401c798685df266d16f00,if (rightValue instanceof Comparable) {,1,2,0.2222222222222222,169
e7158c7e9fcfff63426401c798685df266d16f00,"return typeCoerceCompare(converter, rightValue, leftValue) * -1;",1,2,0.2222222222222222,170
e7158c7e9fcfff63426401c798685df266d16f00,"// if the value contains parentheses we need to balance those, to avoid iterating",1,2,0.2222222222222222,171
e7158c7e9fcfff63426401c798685df266d16f00,"// as eg ""10"" < 6 would return true, where as 10 < 6 will return false.",1,2,0.2222222222222222,172
e7158c7e9fcfff63426401c798685df266d16f00,"// we use the default delimiter which is a comma, then cater for bean expressions with OGNL",1,2,0.2222222222222222,173
e7158c7e9fcfff63426401c798685df266d16f00,"// value is not a suitable type, try to convert value to a string",1,2,0.2222222222222222,174
e7158c7e9fcfff63426401c798685df266d16f00,"// in the middle of parentheses pair, so use this regular expression (a bit hard to read)",1,2,0.2222222222222222,175
e7158c7e9fcfff63426401c798685df266d16f00,"// as well, eg if value = ""bean=foo?method=killer(a,b),bean=bar?method=great(a,b)""",1,2,0.2222222222222222,176
e7158c7e9fcfff63426401c798685df266d16f00,if (leftDouble != null && rightDouble != null) {,1,2,0.2222222222222222,177
e7158c7e9fcfff63426401c798685df266d16f00,"template.sendBodyAndHeader(""file:target/data/filesorter/"" + folder, ""Hello London"", Exchange.FILE_NAME, ""REPORT-2.txt"");",1,2,0.2222222222222222,178
e7158c7e9fcfff63426401c798685df266d16f00,"template.sendBodyAndHeader(""file:target/data/filesorter/"" + folder, ""Hello Paris"", Exchange.FILE_NAME, ""report-3.dat"");",1,2,0.2222222222222222,179
e7158c7e9fcfff63426401c798685df266d16f00,"private String fileUrl = ""file://target/data/filesorter/"";",1,2,0.2222222222222222,180
e7158c7e9fcfff63426401c798685df266d16f00,"template.sendBodyAndHeader(fileUri(folder), ""Hello London"", Exchange.FILE_NAME, ""REPORT-2.txt"");",0,2,0.2222222222222222,181
e7158c7e9fcfff63426401c798685df266d16f00,"template.sendBodyAndHeader(fileUri(folder), ""Hello Paris"", Exchange.FILE_NAME, ""report-3.dat"");",0,2,0.2222222222222222,182
e7158c7e9fcfff63426401c798685df266d16f00,if (object instanceof ComponentAware) {,1,2,0.2222222222222222,183
e7158c7e9fcfff63426401c798685df266d16f00,if (object instanceof CamelContextAware) {,1,2,0.2222222222222222,184
e7158c7e9fcfff63426401c798685df266d16f00,if (exchange != null && exchange.getContext() != null) {,1,2,0.2222222222222222,185
e7158c7e9fcfff63426401c798685df266d16f00,"String text = exchange.getContext().getTypeConverter().convertTo(String.class, exchange, value);",1,2,0.2222222222222222,186
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof ReadableByteChannel) {,1,2,0.2222222222222222,187
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof InputStream) {,1,2,0.2222222222222222,188
e7158c7e9fcfff63426401c798685df266d16f00,if (value instanceof File) {,1,2,0.2222222222222222,189
e7158c7e9fcfff63426401c798685df266d16f00,"String charset = exchange.getProperty(Exchange.CHARSET_NAME, String.class);",1,2,0.2222222222222222,190
e7158c7e9fcfff63426401c798685df266d16f00,if (value instanceof Readable) {,1,2,0.2222222222222222,191
e7158c7e9fcfff63426401c798685df266d16f00,if (value instanceof WrappedFile) {,1,2,0.2222222222222222,192
e7158c7e9fcfff63426401c798685df266d16f00,"* @return the scanner, is newer <tt>null</tt>",1,2,0.2222222222222222,193
e7158c7e9fcfff63426401c798685df266d16f00,if (e instanceof CamelExecutionException) {,1,2,0.2222222222222222,194
e7158c7e9fcfff63426401c798685df266d16f00,if (e instanceof RuntimeCamelException) {,1,2,0.2222222222222222,195
e7158c7e9fcfff63426401c798685df266d16f00,* @return the wrapper exception,1,2,0.2222222222222222,196
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method to invoke a method via reflection and wrap any exceptions,1,2,0.2222222222222222,197
e7158c7e9fcfff63426401c798685df266d16f00,if (key != null && key.startsWith(prefix)) {,1,2,0.2222222222222222,198
e7158c7e9fcfff63426401c798685df266d16f00,String key = entry.getKey();,1,2,0.2222222222222222,199
e7158c7e9fcfff63426401c798685df266d16f00,return idx == 0 && (allowEmptyValues || ObjectHelper.isNotEmpty(s));,1,2,0.2222222222222222,200
e7158c7e9fcfff63426401c798685df266d16f00,"final Scanner scanner = new Scanner((String) value, delimiter);",1,2,0.2222222222222222,201
e7158c7e9fcfff63426401c798685df266d16f00,// as all types can be converted to String which does not work well for comparison,1,2,0.2222222222222222,202
e7158c7e9fcfff63426401c798685df266d16f00,String subStr = (String)value;,0,2,0.2222222222222222,203
e7158c7e9fcfff63426401c798685df266d16f00,if (leftNum != null && rightNum != null) {,1,2,0.2222222222222222,204
e7158c7e9fcfff63426401c798685df266d16f00,if (leftDouble != null && rightDouble != null) {,0,2,0.2222222222222222,205
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterable<String> createIterable(String value, String delimiter, boolean allowEmptyValues) {",0,2,0.2222222222222222,206
e7158c7e9fcfff63426401c798685df266d16f00,* @return the iterable,0,2,0.2222222222222222,207
e7158c7e9fcfff63426401c798685df266d16f00,if (exchange != null && exchange.getContext() != null) {,0,2,0.2222222222222222,208
e7158c7e9fcfff63426401c798685df266d16f00,if (a instanceof Comparable) {,0,2,0.2222222222222222,209
e7158c7e9fcfff63426401c798685df266d16f00,return ((String) a).compareToIgnoreCase((String) b);,0,2,0.2222222222222222,210
e7158c7e9fcfff63426401c798685df266d16f00,"public static int compare(Object a, Object b) {",0,2,0.2222222222222222,211
e7158c7e9fcfff63426401c798685df266d16f00,* A helper method to invoke a method via reflection and wrap any exceptions,0,2,0.2222222222222222,212
e7158c7e9fcfff63426401c798685df266d16f00,if (leftValue instanceof Comparable) {,0,2,0.2222222222222222,213
e7158c7e9fcfff63426401c798685df266d16f00,return ((Comparable) rightValue).compareTo(value) * -1;,0,2,0.2222222222222222,214
e7158c7e9fcfff63426401c798685df266d16f00,if (rightValue instanceof Comparable) {,0,2,0.2222222222222222,215
e7158c7e9fcfff63426401c798685df266d16f00,"return typeCoerceCompare(converter, rightValue, leftValue) * -1;",0,2,0.2222222222222222,216
e7158c7e9fcfff63426401c798685df266d16f00,// as all types can be converted to String which does not work well for comparison,0,2,0.2222222222222222,217
e7158c7e9fcfff63426401c798685df266d16f00,if (leftNum != null && rightNum != null) {,0,2,0.2222222222222222,218
e7158c7e9fcfff63426401c798685df266d16f00,"// we use the default delimiter which is a comma, then cater for bean expressions with OGNL",0,2,0.2222222222222222,219
e7158c7e9fcfff63426401c798685df266d16f00,// if both values is numeric then compare using numeric,0,2,0.2222222222222222,220
e7158c7e9fcfff63426401c798685df266d16f00,* types between the left and right values.  This allows you test for ordering for example with,0,2,0.2222222222222222,221
e7158c7e9fcfff63426401c798685df266d16f00,* types between the left and right values.  This allows you test for inequality for example with,0,2,0.2222222222222222,222
e7158c7e9fcfff63426401c798685df266d16f00,"boolean answer = org.apache.camel.util.ObjectHelper.equal(leftValue, rightValue, ignoreCase);",0,2,0.2222222222222222,223
e7158c7e9fcfff63426401c798685df266d16f00,if (leftValue == null && rightValue == null) {,0,2,0.2222222222222222,224
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean typeCoerceEquals(TypeConverter converter, Object leftValue, Object rightValue, boolean ignoreCase) {",0,2,0.2222222222222222,225
e7158c7e9fcfff63426401c798685df266d16f00,* types between the left and right values. This allows you test for equality for example with,0,2,0.2222222222222222,226
e7158c7e9fcfff63426401c798685df266d16f00,* Utility classes should not have a public constructor.,0,2,0.2222222222222222,227
e7158c7e9fcfff63426401c798685df266d16f00,* limitations under the License.,0,2,0.2222222222222222,228
e7158c7e9fcfff63426401c798685df266d16f00,"* (the ""License""); you may not use this file except in compliance with",0,2,0.2222222222222222,229
e7158c7e9fcfff63426401c798685df266d16f00,* Licensed to the Apache Software Foundation (ASF) under one or more,0,2,0.2222222222222222,230
e7158c7e9fcfff63426401c798685df266d16f00,// if both values is numeric then compare using numeric,1,2,0.2222222222222222,231
e7158c7e9fcfff63426401c798685df266d16f00,} else if (delimiter != null && (pattern || value.contains(delimiter))) {,0,2,0.2222222222222222,232
e7158c7e9fcfff63426401c798685df266d16f00,"// as eg ""10"" < 6 would return true, where as 10 < 6 will return false.",0,2,0.2222222222222222,233
e7158c7e9fcfff63426401c798685df266d16f00,"// if the value contains parentheses we need to balance those, to avoid iterating",0,2,0.2222222222222222,234
e7158c7e9fcfff63426401c798685df266d16f00,final Object array = value;,0,2,0.2222222222222222,235
e7158c7e9fcfff63426401c798685df266d16f00,* types between the left and right values.  This allows you test for inequality for example with,1,2,0.2222222222222222,236
e7158c7e9fcfff63426401c798685df266d16f00,* types between the left and right values.  This allows you test for ordering for example with,1,2,0.2222222222222222,237
e7158c7e9fcfff63426401c798685df266d16f00,"// in the middle of parentheses pair, so use this regular expression (a bit hard to read)",0,2,0.2222222222222222,238
e7158c7e9fcfff63426401c798685df266d16f00,"boolean answer = equal(leftValue, rightValue, ignoreCase);",1,2,0.2222222222222222,239
e7158c7e9fcfff63426401c798685df266d16f00,if (leftValue == null && rightValue == null) {,1,2,0.2222222222222222,240
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean typeCoerceEquals(TypeConverter converter, Object leftValue, Object rightValue, boolean ignoreCase) {",1,2,0.2222222222222222,241
e7158c7e9fcfff63426401c798685df266d16f00,* types between the left and right values. This allows you test for equality for example with,1,2,0.2222222222222222,242
e7158c7e9fcfff63426401c798685df266d16f00,String str = (String)collectionOrArray;,0,2,0.2222222222222222,243
e7158c7e9fcfff63426401c798685df266d16f00,return idx == 0 && (allowEmptyValues || org.apache.camel.util.ObjectHelper.isNotEmpty(s));,0,2,0.2222222222222222,244
e7158c7e9fcfff63426401c798685df266d16f00,if (delimiter != null && (pattern || s.contains(delimiter))) {,0,2,0.2222222222222222,245
e7158c7e9fcfff63426401c798685df266d16f00,final NodeList nodeList = (NodeList) value;,0,2,0.2222222222222222,246
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof NodeList) {,0,2,0.2222222222222222,247
e7158c7e9fcfff63426401c798685df266d16f00,if (collectionOrArray instanceof Collection) {,0,2,0.2222222222222222,248
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof Iterable) {,0,2,0.2222222222222222,249
e7158c7e9fcfff63426401c798685df266d16f00,// if its a message than we want to iterate its body,0,2,0.2222222222222222,250
e7158c7e9fcfff63426401c798685df266d16f00,"// as well, eg if value = ""bean=foo?method=killer(a,b),bean=bar?method=great(a,b)""",0,2,0.2222222222222222,251
e7158c7e9fcfff63426401c798685df266d16f00,* @return the iterator,0,2,0.2222222222222222,252
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterator<?> createIterator(Object value, String delimiter, boolean allowEmptyValues) {",0,2,0.2222222222222222,253
e7158c7e9fcfff63426401c798685df266d16f00,"boolean allowEmptyValues, boolean pattern) {",0,2,0.2222222222222222,254
e7158c7e9fcfff63426401c798685df266d16f00,final boolean allowEmptyValues) {,0,2,0.2222222222222222,255
e7158c7e9fcfff63426401c798685df266d16f00,* @param allowEmptyValues  whether to allow empty values,0,2,0.2222222222222222,256
e7158c7e9fcfff63426401c798685df266d16f00,if (value instanceof Message) {,0,2,0.2222222222222222,257
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value instanceof Iterator) {,0,2,0.2222222222222222,258
e7158c7e9fcfff63426401c798685df266d16f00,final Iterator<Object> iterator = (Iterator<Object>)value;,0,2,0.2222222222222222,259
e7158c7e9fcfff63426401c798685df266d16f00,// favor String types,1,1,0.1111111111111111,260
e7158c7e9fcfff63426401c798685df266d16f00,* <p/>,1,1,0.1111111111111111,261
e7158c7e9fcfff63426401c798685df266d16f00,collectionOrArray = collectionOrArray.toString();,1,1,0.1111111111111111,262
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean contains(Object collectionOrArray, Object value) {",1,1,0.1111111111111111,263
e7158c7e9fcfff63426401c798685df266d16f00,value = value.toString();,1,1,0.1111111111111111,264
e7158c7e9fcfff63426401c798685df266d16f00,Collection<?> collection = (Collection<?>)collectionOrArray;,1,1,0.1111111111111111,265
e7158c7e9fcfff63426401c798685df266d16f00,return collection.contains(value);,1,1,0.1111111111111111,266
e7158c7e9fcfff63426401c798685df266d16f00,return str.contains(subStr);,1,1,0.1111111111111111,267
e7158c7e9fcfff63426401c798685df266d16f00,Iterator<Object> iter = createIterator(collectionOrArray);,1,1,0.1111111111111111,268
e7158c7e9fcfff63426401c798685df266d16f00,"if (equal(value, iter.next())) {",1,1,0.1111111111111111,269
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean containsIgnoreCase(Object collectionOrArray, Object value) {",1,1,0.1111111111111111,270
e7158c7e9fcfff63426401c798685df266d16f00,"return StringHelper.containsIgnoreCase(str, subStr);",1,1,0.1111111111111111,271
e7158c7e9fcfff63426401c798685df266d16f00,"if (equalIgnoreCase(value, iter.next())) {",1,1,0.1111111111111111,272
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterable<Object> createIterable(Object value, String delimiter,",1,1,0.1111111111111111,273
e7158c7e9fcfff63426401c798685df266d16f00,* This method does <b>not</b> allow empty values,1,1,0.1111111111111111,274
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, DEFAULT_DELIMITER);",1,1,0.1111111111111111,275
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterable<Object> createIterable(Object value, String delimiter) {",1,1,0.1111111111111111,276
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, delimiter, false);",1,1,0.1111111111111111,277
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterator(value, DEFAULT_DELIMITER);",1,1,0.1111111111111111,278
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterator<Object> createIterator(Object value, String delimiter) {",1,1,0.1111111111111111,279
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterator(value, delimiter, false);",1,1,0.1111111111111111,280
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, delimiter, allowEmptyValues, false).iterator();",1,1,0.1111111111111111,281
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterator<Object> createIterator(Object value, String delimiter,",1,1,0.1111111111111111,282
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, delimiter, allowEmptyValues, pattern).iterator();",1,1,0.1111111111111111,283
e7158c7e9fcfff63426401c798685df266d16f00,* @see java.lang.Iterable,1,1,0.1111111111111111,284
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, delimiter, allowEmptyValues, false);",1,1,0.1111111111111111,285
e7158c7e9fcfff63426401c798685df266d16f00,value = ((Message) value).getBody();,1,1,0.1111111111111111,286
e7158c7e9fcfff63426401c798685df266d16f00,if (answer == 0) {,1,1,0.1111111111111111,287
e7158c7e9fcfff63426401c798685df266d16f00,answer = a.hashCode() - b.hashCode();,1,1,0.1111111111111111,288
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean typeCoerceNotEquals(TypeConverter converter, Object leftValue, Object rightValue) {",1,1,0.1111111111111111,289
e7158c7e9fcfff63426401c798685df266d16f00,int answer = a.getClass().getName().compareTo(b.getClass().getName());,1,1,0.1111111111111111,290
e7158c7e9fcfff63426401c798685df266d16f00,return comparable.compareTo(b);,1,1,0.1111111111111111,291
e7158c7e9fcfff63426401c798685df266d16f00,"answer = equal(value, rightValue, ignoreCase);",1,1,0.1111111111111111,292
e7158c7e9fcfff63426401c798685df266d16f00,"value = converter.tryConvertTo(leftValue.getClass(), rightValue);",1,1,0.1111111111111111,293
e7158c7e9fcfff63426401c798685df266d16f00,"answer = equal(leftValue, value, ignoreCase);",1,1,0.1111111111111111,294
e7158c7e9fcfff63426401c798685df266d16f00,return answer;,1,1,0.1111111111111111,295
e7158c7e9fcfff63426401c798685df266d16f00,return Collections.emptyList();,1,1,0.1111111111111111,296
e7158c7e9fcfff63426401c798685df266d16f00,"return !typeCoerceEquals(converter, leftValue, rightValue);",1,1,0.1111111111111111,297
e7158c7e9fcfff63426401c798685df266d16f00,"Long leftNum = converter.tryConvertTo(Long.class, leftValue);",1,1,0.1111111111111111,298
e7158c7e9fcfff63426401c798685df266d16f00,"Long rightNum = converter.tryConvertTo(Long.class, rightValue);",1,1,0.1111111111111111,299
e7158c7e9fcfff63426401c798685df266d16f00,return leftNum.compareTo(rightNum);,1,1,0.1111111111111111,300
e7158c7e9fcfff63426401c798685df266d16f00,"Double leftDouble = converter.tryConvertTo(Double.class, leftValue);",1,1,0.1111111111111111,301
e7158c7e9fcfff63426401c798685df266d16f00,"Double rightDouble = converter.tryConvertTo(Double.class, rightValue);",1,1,0.1111111111111111,302
e7158c7e9fcfff63426401c798685df266d16f00,return leftDouble.compareTo(rightDouble);,1,1,0.1111111111111111,303
e7158c7e9fcfff63426401c798685df266d16f00,// prefer to coerce to the right hand side at first,1,1,0.1111111111111111,304
e7158c7e9fcfff63426401c798685df266d16f00,if (value != null) {,1,1,0.1111111111111111,305
e7158c7e9fcfff63426401c798685df266d16f00,// then fallback to the left hand side,1,1,0.1111111111111111,306
e7158c7e9fcfff63426401c798685df266d16f00,"Object value = converter.tryConvertTo(leftValue.getClass(), rightValue);",1,1,0.1111111111111111,307
e7158c7e9fcfff63426401c798685df266d16f00,return ((Comparable) leftValue).compareTo(value);,1,1,0.1111111111111111,308
e7158c7e9fcfff63426401c798685df266d16f00,// use regular compare,1,1,0.1111111111111111,309
e7158c7e9fcfff63426401c798685df266d16f00,"return compare(leftValue, rightValue);",1,1,0.1111111111111111,310
e7158c7e9fcfff63426401c798685df266d16f00,"return compare(a, b, false);",1,1,0.1111111111111111,311
e7158c7e9fcfff63426401c798685df266d16f00,*,1,1,0.1111111111111111,312
e7158c7e9fcfff63426401c798685df266d16f00,if (a == b) {,1,1,0.1111111111111111,313
e7158c7e9fcfff63426401c798685df266d16f00,return 0;,1,1,0.1111111111111111,314
e7158c7e9fcfff63426401c798685df266d16f00,if (a == null) {,1,1,0.1111111111111111,315
e7158c7e9fcfff63426401c798685df266d16f00,return -1;,1,1,0.1111111111111111,316
e7158c7e9fcfff63426401c798685df266d16f00,if (b == null) {,1,1,0.1111111111111111,317
e7158c7e9fcfff63426401c798685df266d16f00,return 1;,1,1,0.1111111111111111,318
e7158c7e9fcfff63426401c798685df266d16f00,return ((Ordered) a).getOrder() - ((Ordered) b).getOrder();,1,1,0.1111111111111111,319
e7158c7e9fcfff63426401c798685df266d16f00,Comparable comparable = (Comparable)a;,1,1,0.1111111111111111,320
e7158c7e9fcfff63426401c798685df266d16f00,if (value == null) {,1,1,0.1111111111111111,321
e7158c7e9fcfff63426401c798685df266d16f00,"for (Map.Entry<String, String> entry : camelProperties.entrySet()) {",1,1,0.1111111111111111,322
e7158c7e9fcfff63426401c798685df266d16f00,return new Iterable<Object>() {,1,1,0.1111111111111111,323
e7158c7e9fcfff63426401c798685df266d16f00,return iterator;,1,1,0.1111111111111111,324
e7158c7e9fcfff63426401c798685df266d16f00,* already such an exception.,1,1,0.1111111111111111,325
e7158c7e9fcfff63426401c798685df266d16f00,return (RuntimeCamelException)e;,1,1,0.1111111111111111,326
e7158c7e9fcfff63426401c798685df266d16f00,return new RuntimeCamelException(e);,1,1,0.1111111111111111,327
e7158c7e9fcfff63426401c798685df266d16f00,return (CamelExecutionException)e;,1,1,0.1111111111111111,328
e7158c7e9fcfff63426401c798685df266d16f00,"return new CamelExecutionException(""Exception occurred during execution"", exchange, e);",1,1,0.1111111111111111,329
e7158c7e9fcfff63426401c798685df266d16f00,"public static Scanner getScanner(Exchange exchange, Object value, String delimiter) {",1,1,0.1111111111111111,330
e7158c7e9fcfff63426401c798685df266d16f00,WrappedFile<?> gf = (WrappedFile<?>) value;,1,1,0.1111111111111111,331
e7158c7e9fcfff63426401c798685df266d16f00,Object body = gf.getBody();,1,1,0.1111111111111111,332
e7158c7e9fcfff63426401c798685df266d16f00,if (body != null) {,1,1,0.1111111111111111,333
e7158c7e9fcfff63426401c798685df266d16f00,value = body;,1,1,0.1111111111111111,334
e7158c7e9fcfff63426401c798685df266d16f00,"return getScanner(exchange, gf.getFile(), delimiter);",1,1,0.1111111111111111,335
e7158c7e9fcfff63426401c798685df266d16f00,"scanner = new Scanner((Readable) value, delimiter);",1,1,0.1111111111111111,336
e7158c7e9fcfff63426401c798685df266d16f00,"scanner = new Scanner((String) value, delimiter);",1,1,0.1111111111111111,337
e7158c7e9fcfff63426401c798685df266d16f00,"scanner = new Scanner((File) value, charset, delimiter);",1,1,0.1111111111111111,338
e7158c7e9fcfff63426401c798685df266d16f00,"scanner = new Scanner((InputStream) value, charset, delimiter);",1,1,0.1111111111111111,339
e7158c7e9fcfff63426401c798685df266d16f00,"scanner = new Scanner((ReadableByteChannel) value, charset, delimiter);",1,1,0.1111111111111111,340
e7158c7e9fcfff63426401c798685df266d16f00,"scanner = new Scanner(text, delimiter);",1,1,0.1111111111111111,341
e7158c7e9fcfff63426401c798685df266d16f00,return scanner;,1,1,0.1111111111111111,342
e7158c7e9fcfff63426401c798685df266d16f00,ClassLoader apcl = null;,1,1,0.1111111111111111,343
e7158c7e9fcfff63426401c798685df266d16f00,apcl = exchange.getContext().getApplicationContextClassLoader();,1,1,0.1111111111111111,344
e7158c7e9fcfff63426401c798685df266d16f00,"return callWithTCCL(call, apcl);",1,1,0.1111111111111111,345
e7158c7e9fcfff63426401c798685df266d16f00,ClassLoader tccl = Thread.currentThread().getContextClassLoader();,1,1,0.1111111111111111,346
e7158c7e9fcfff63426401c798685df266d16f00,if (classloader != null) {,1,1,0.1111111111111111,347
e7158c7e9fcfff63426401c798685df266d16f00,return call.call();,1,1,0.1111111111111111,348
e7158c7e9fcfff63426401c798685df266d16f00,if (tccl != null) {,1,1,0.1111111111111111,349
e7158c7e9fcfff63426401c798685df266d16f00,return object;,1,1,0.1111111111111111,350
e7158c7e9fcfff63426401c798685df266d16f00,"template.sendBodyAndHeader(fileUri(folder), ""Hello Copenhagen"", Exchange.FILE_NAME,",0,1,0.1111111111111111,351
e7158c7e9fcfff63426401c798685df266d16f00,"template.sendBodyAndHeader(""file:target/data/filesorter/"" + folder, ""Hello Copenhagen"", Exchange.FILE_NAME,",1,1,0.1111111111111111,352
e7158c7e9fcfff63426401c798685df266d16f00,if (leftValue.getClass().isInstance(rightValue)) {,1,1,0.1111111111111111,353
e7158c7e9fcfff63426401c798685df266d16f00,"return cast(expectedType, value);",1,1,0.1111111111111111,354
e7158c7e9fcfff63426401c798685df266d16f00,Object value = actualType.newInstance();,1,1,0.1111111111111111,355
e7158c7e9fcfff63426401c798685df266d16f00,return type.newInstance();,1,1,0.1111111111111111,356
e7158c7e9fcfff63426401c798685df266d16f00,return nodeList.item(idx++);,1,1,0.1111111111111111,357
e7158c7e9fcfff63426401c798685df266d16f00,return (Iterable<Object>)value;,1,1,0.1111111111111111,358
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value.getClass().isArray()) {,1,1,0.1111111111111111,359
e7158c7e9fcfff63426401c798685df266d16f00,if (isPrimitiveArrayType(value.getClass())) {,1,1,0.1111111111111111,360
e7158c7e9fcfff63426401c798685df266d16f00,return new Iterator<Object>() {,1,1,0.1111111111111111,361
e7158c7e9fcfff63426401c798685df266d16f00,public boolean hasNext() {,1,1,0.1111111111111111,362
e7158c7e9fcfff63426401c798685df266d16f00,return idx < Array.getLength(array);,1,1,0.1111111111111111,363
e7158c7e9fcfff63426401c798685df266d16f00,if (!hasNext()) {,1,1,0.1111111111111111,364
e7158c7e9fcfff63426401c798685df266d16f00,"throw new NoSuchElementException(""no more element available for '"" + array + ""' at the index "" + idx);",1,1,0.1111111111111111,365
e7158c7e9fcfff63426401c798685df266d16f00,"return Array.get(array, idx++);",1,1,0.1111111111111111,366
e7158c7e9fcfff63426401c798685df266d16f00,return Arrays.asList((Object[]) value);,1,1,0.1111111111111111,367
e7158c7e9fcfff63426401c798685df266d16f00,// lets iterate through DOM results after performing XPaths,1,1,0.1111111111111111,368
e7158c7e9fcfff63426401c798685df266d16f00,return idx < nodeList.getLength();,1,1,0.1111111111111111,369
e7158c7e9fcfff63426401c798685df266d16f00,"throw new NoSuchElementException(""no more element available for '"" + nodeList + ""' at the index "" + idx);",1,1,0.1111111111111111,370
e7158c7e9fcfff63426401c798685df266d16f00,if (DEFAULT_DELIMITER.equals(delimiter)) {,1,1,0.1111111111111111,371
e7158c7e9fcfff63426401c798685df266d16f00,* constructor arguments.,1,1,0.1111111111111111,372
e7158c7e9fcfff63426401c798685df266d16f00,"// the regexp will split by comma, but honor parentheses pair that may include commas",1,1,0.1111111111111111,373
e7158c7e9fcfff63426401c798685df266d16f00,// then the regexp will split that into two:,1,1,0.1111111111111111,374
e7158c7e9fcfff63426401c798685df266d16f00,"delimiter = "",(?!(?:[^\\(,]|[^\\)],[^\\)])+\\))"";",1,1,0.1111111111111111,375
e7158c7e9fcfff63426401c798685df266d16f00,return CastUtils.cast(scanner);,1,1,0.1111111111111111,376
e7158c7e9fcfff63426401c798685df266d16f00,"throw new NoSuchElementException(""no more element available for '"" + s + ""' at the index "" + idx);",1,1,0.1111111111111111,377
e7158c7e9fcfff63426401c798685df266d16f00,return s;,1,1,0.1111111111111111,378
e7158c7e9fcfff63426401c798685df266d16f00,return Collections.singletonList(value);,1,1,0.1111111111111111,379
e7158c7e9fcfff63426401c798685df266d16f00,Properties answer = new Properties();,1,1,0.1111111111111111,380
e7158c7e9fcfff63426401c798685df266d16f00,"Map<String, String> camelProperties = camelContext.getGlobalOptions();",1,1,0.1111111111111111,381
e7158c7e9fcfff63426401c798685df266d16f00,if (camelProperties != null) {,1,1,0.1111111111111111,382
e7158c7e9fcfff63426401c798685df266d16f00,if (ObjectHelper.isEmpty(name)) {,1,1,0.1111111111111111,383
e7158c7e9fcfff63426401c798685df266d16f00,* as {@link RuntimeCamelException} instances,1,1,0.1111111111111111,384
e7158c7e9fcfff63426401c798685df266d16f00,"return method.invoke(instance, parameters);",1,1,0.1111111111111111,385
e7158c7e9fcfff63426401c798685df266d16f00,"Object value = converter.tryConvertTo(rightValue.getClass(), leftValue);",1,1,0.1111111111111111,386
e7158c7e9fcfff63426401c798685df266d16f00,del = delimiter;,0,1,0.1111111111111111,387
e7158c7e9fcfff63426401c798685df266d16f00,if (answer) {,1,1,0.1111111111111111,388
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, DEFAULT_DELIMITER);",0,1,0.1111111111111111,389
e7158c7e9fcfff63426401c798685df266d16f00,// use regular compare,0,1,0.1111111111111111,390
e7158c7e9fcfff63426401c798685df266d16f00,"return compare(leftValue, rightValue);",0,1,0.1111111111111111,391
e7158c7e9fcfff63426401c798685df266d16f00,* as {@link RuntimeCamelException} instances,0,1,0.1111111111111111,392
e7158c7e9fcfff63426401c798685df266d16f00,"return method.invoke(instance, parameters);",0,1,0.1111111111111111,393
e7158c7e9fcfff63426401c798685df266d16f00,* constructor arguments.,0,1,0.1111111111111111,394
e7158c7e9fcfff63426401c798685df266d16f00,return type.newInstance();,0,1,0.1111111111111111,395
e7158c7e9fcfff63426401c798685df266d16f00,Object value = actualType.newInstance();,0,1,0.1111111111111111,396
e7158c7e9fcfff63426401c798685df266d16f00,"return org.apache.camel.util.ObjectHelper.cast(expectedType, value);",0,1,0.1111111111111111,397
e7158c7e9fcfff63426401c798685df266d16f00,"return compare(a, b, false);",0,1,0.1111111111111111,398
e7158c7e9fcfff63426401c798685df266d16f00,if (a == b) {,0,1,0.1111111111111111,399
e7158c7e9fcfff63426401c798685df266d16f00,return 0;,0,1,0.1111111111111111,400
e7158c7e9fcfff63426401c798685df266d16f00,if (a == null) {,0,1,0.1111111111111111,401
e7158c7e9fcfff63426401c798685df266d16f00,return -1;,0,1,0.1111111111111111,402
e7158c7e9fcfff63426401c798685df266d16f00,if (b == null) {,0,1,0.1111111111111111,403
e7158c7e9fcfff63426401c798685df266d16f00,return 1;,0,1,0.1111111111111111,404
e7158c7e9fcfff63426401c798685df266d16f00,return ((Ordered) a).getOrder() - ((Ordered) b).getOrder();,0,1,0.1111111111111111,405
e7158c7e9fcfff63426401c798685df266d16f00,Comparable comparable = (Comparable)a;,0,1,0.1111111111111111,406
e7158c7e9fcfff63426401c798685df266d16f00,return comparable.compareTo(b);,0,1,0.1111111111111111,407
e7158c7e9fcfff63426401c798685df266d16f00,int answer = a.getClass().getName().compareTo(b.getClass().getName());,0,1,0.1111111111111111,408
e7158c7e9fcfff63426401c798685df266d16f00,if (answer == 0) {,0,1,0.1111111111111111,409
e7158c7e9fcfff63426401c798685df266d16f00,answer = a.hashCode() - b.hashCode();,0,1,0.1111111111111111,410
e7158c7e9fcfff63426401c798685df266d16f00,ClassLoader apcl = null;,0,1,0.1111111111111111,411
e7158c7e9fcfff63426401c798685df266d16f00,apcl = exchange.getContext().getApplicationContextClassLoader();,0,1,0.1111111111111111,412
e7158c7e9fcfff63426401c798685df266d16f00,"return callWithTCCL(call, apcl);",0,1,0.1111111111111111,413
e7158c7e9fcfff63426401c798685df266d16f00,ClassLoader tccl = Thread.currentThread().getContextClassLoader();,0,1,0.1111111111111111,414
e7158c7e9fcfff63426401c798685df266d16f00,if (classloader != null) {,0,1,0.1111111111111111,415
e7158c7e9fcfff63426401c798685df266d16f00,return call.call();,0,1,0.1111111111111111,416
e7158c7e9fcfff63426401c798685df266d16f00,if (tccl != null) {,0,1,0.1111111111111111,417
e7158c7e9fcfff63426401c798685df266d16f00,* <p/>,0,1,0.1111111111111111,418
e7158c7e9fcfff63426401c798685df266d16f00,return ((Comparable) leftValue).compareTo(value);,0,1,0.1111111111111111,419
e7158c7e9fcfff63426401c798685df266d16f00,"Object value = converter.tryConvertTo(leftValue.getClass(), rightValue);",0,1,0.1111111111111111,420
e7158c7e9fcfff63426401c798685df266d16f00,// then fallback to the left hand side,0,1,0.1111111111111111,421
e7158c7e9fcfff63426401c798685df266d16f00,if (answer) {,0,1,0.1111111111111111,422
e7158c7e9fcfff63426401c798685df266d16f00,return false;,1,1,0.1111111111111111,423
e7158c7e9fcfff63426401c798685df266d16f00,* this work for additional information regarding copyright ownership.,0,1,0.1111111111111111,424
e7158c7e9fcfff63426401c798685df266d16f00,*,0,1,0.1111111111111111,425
e7158c7e9fcfff63426401c798685df266d16f00,*      http://www.apache.org/licenses/LICENSE-2.0,0,1,0.1111111111111111,426
e7158c7e9fcfff63426401c798685df266d16f00,"* Unless required by applicable law or agreed to in writing, software",0,1,0.1111111111111111,427
e7158c7e9fcfff63426401c798685df266d16f00,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0,1,0.1111111111111111,428
e7158c7e9fcfff63426401c798685df266d16f00,* A number of useful helper methods for working with Objects,0,1,0.1111111111111111,429
e7158c7e9fcfff63426401c798685df266d16f00,public final class ObjectHelper {,0,1,0.1111111111111111,430
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean typeCoerceEquals(TypeConverter converter, Object leftValue, Object rightValue) {",0,1,0.1111111111111111,431
e7158c7e9fcfff63426401c798685df266d16f00,"return typeCoerceEquals(converter, leftValue, rightValue, false);",0,1,0.1111111111111111,432
e7158c7e9fcfff63426401c798685df266d16f00,return true;,0,1,0.1111111111111111,433
e7158c7e9fcfff63426401c798685df266d16f00,} else if (leftValue == null || rightValue == null) {,0,1,0.1111111111111111,434
e7158c7e9fcfff63426401c798685df266d16f00,return false;,0,1,0.1111111111111111,435
e7158c7e9fcfff63426401c798685df266d16f00,if (leftValue.getClass().isInstance(rightValue)) {,0,1,0.1111111111111111,436
e7158c7e9fcfff63426401c798685df266d16f00,if (value != null) {,0,1,0.1111111111111111,437
e7158c7e9fcfff63426401c798685df266d16f00,"Object value = converter.tryConvertTo(rightValue.getClass(), leftValue);",0,1,0.1111111111111111,438
e7158c7e9fcfff63426401c798685df266d16f00,"answer = org.apache.camel.util.ObjectHelper.equal(value, rightValue, ignoreCase);",0,1,0.1111111111111111,439
e7158c7e9fcfff63426401c798685df266d16f00,"value = converter.tryConvertTo(leftValue.getClass(), rightValue);",0,1,0.1111111111111111,440
e7158c7e9fcfff63426401c798685df266d16f00,"answer = org.apache.camel.util.ObjectHelper.equal(leftValue, value, ignoreCase);",0,1,0.1111111111111111,441
e7158c7e9fcfff63426401c798685df266d16f00,return answer;,0,1,0.1111111111111111,442
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean typeCoerceNotEquals(TypeConverter converter, Object leftValue, Object rightValue) {",0,1,0.1111111111111111,443
e7158c7e9fcfff63426401c798685df266d16f00,"return !typeCoerceEquals(converter, leftValue, rightValue);",0,1,0.1111111111111111,444
e7158c7e9fcfff63426401c798685df266d16f00,"Long leftNum = converter.tryConvertTo(Long.class, leftValue);",0,1,0.1111111111111111,445
e7158c7e9fcfff63426401c798685df266d16f00,"Long rightNum = converter.tryConvertTo(Long.class, rightValue);",0,1,0.1111111111111111,446
e7158c7e9fcfff63426401c798685df266d16f00,return leftNum.compareTo(rightNum);,0,1,0.1111111111111111,447
e7158c7e9fcfff63426401c798685df266d16f00,"Double leftDouble = converter.tryConvertTo(Double.class, leftValue);",0,1,0.1111111111111111,448
e7158c7e9fcfff63426401c798685df266d16f00,return leftDouble.compareTo(rightDouble);,0,1,0.1111111111111111,449
e7158c7e9fcfff63426401c798685df266d16f00,// prefer to coerce to the right hand side at first,0,1,0.1111111111111111,450
e7158c7e9fcfff63426401c798685df266d16f00,* This method does <b>not</b> allow empty values,0,1,0.1111111111111111,451
e7158c7e9fcfff63426401c798685df266d16f00,"Double rightDouble = converter.tryConvertTo(Double.class, rightValue);",0,1,0.1111111111111111,452
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterable<?> createIterable(Object value, String delimiter) {",0,1,0.1111111111111111,453
e7158c7e9fcfff63426401c798685df266d16f00,collectionOrArray = collectionOrArray.toString();,0,1,0.1111111111111111,454
e7158c7e9fcfff63426401c798685df266d16f00,return Arrays.asList((Object[]) value);,0,1,0.1111111111111111,455
e7158c7e9fcfff63426401c798685df266d16f00,// lets iterate through DOM results after performing XPaths,0,1,0.1111111111111111,456
e7158c7e9fcfff63426401c798685df266d16f00,return (Iterable<Node>) () -> new Iterator<Node>() {,0,1,0.1111111111111111,457
e7158c7e9fcfff63426401c798685df266d16f00,return idx < nodeList.getLength();,0,1,0.1111111111111111,458
e7158c7e9fcfff63426401c798685df266d16f00,"throw new NoSuchElementException(""no more element available for '"" + nodeList + ""' at the index "" + idx);",0,1,0.1111111111111111,459
e7158c7e9fcfff63426401c798685df266d16f00,return nodeList.item(idx++);,0,1,0.1111111111111111,460
e7158c7e9fcfff63426401c798685df266d16f00,"return (Iterable<String>) () -> new Scanner(s, del);",0,1,0.1111111111111111,461
e7158c7e9fcfff63426401c798685df266d16f00,return (Iterable<Object>) () -> {,0,1,0.1111111111111111,462
e7158c7e9fcfff63426401c798685df266d16f00,return new Iterator<Object>() {,0,1,0.1111111111111111,463
e7158c7e9fcfff63426401c798685df266d16f00,"throw new NoSuchElementException(""no more element available for '"" + s + ""' at the index "" + idx);",0,1,0.1111111111111111,464
e7158c7e9fcfff63426401c798685df266d16f00,return s;,0,1,0.1111111111111111,465
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean contains(Object collectionOrArray, Object value) {",0,1,0.1111111111111111,466
e7158c7e9fcfff63426401c798685df266d16f00,// favor String types,0,1,0.1111111111111111,467
e7158c7e9fcfff63426401c798685df266d16f00,Collection<?> collection = (Collection<?>)collectionOrArray;,0,1,0.1111111111111111,468
e7158c7e9fcfff63426401c798685df266d16f00,"throw new NoSuchElementException(""no more element available for '"" + array + ""' at the index "" + idx);",0,1,0.1111111111111111,469
e7158c7e9fcfff63426401c798685df266d16f00,return collection.contains(value);,0,1,0.1111111111111111,470
e7158c7e9fcfff63426401c798685df266d16f00,return str.contains(subStr);,0,1,0.1111111111111111,471
e7158c7e9fcfff63426401c798685df266d16f00,Iterator<?> iter = createIterator(collectionOrArray);,0,1,0.1111111111111111,472
e7158c7e9fcfff63426401c798685df266d16f00,"if (org.apache.camel.util.ObjectHelper.equal(value, iter.next())) {",0,1,0.1111111111111111,473
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean containsIgnoreCase(Object collectionOrArray, Object value) {",0,1,0.1111111111111111,474
e7158c7e9fcfff63426401c798685df266d16f00,"return StringHelper.containsIgnoreCase(str, subStr);",0,1,0.1111111111111111,475
e7158c7e9fcfff63426401c798685df266d16f00,"if (org.apache.camel.util.ObjectHelper.equalIgnoreCase(value, iter.next())) {",0,1,0.1111111111111111,476
e7158c7e9fcfff63426401c798685df266d16f00,if (org.apache.camel.util.ObjectHelper.isEmpty(name)) {,0,1,0.1111111111111111,477
e7158c7e9fcfff63426401c798685df266d16f00,"public static boolean typeCoerceEquals(TypeConverter converter, Object leftValue, Object rightValue) {",1,1,0.1111111111111111,478
e7158c7e9fcfff63426401c798685df266d16f00,"return typeCoerceEquals(converter, leftValue, rightValue, false);",1,1,0.1111111111111111,479
e7158c7e9fcfff63426401c798685df266d16f00,return true;,1,1,0.1111111111111111,480
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, delimiter, false);",0,1,0.1111111111111111,481
e7158c7e9fcfff63426401c798685df266d16f00,} else if (leftValue == null || rightValue == null) {,1,1,0.1111111111111111,482
e7158c7e9fcfff63426401c798685df266d16f00,"return Array.get(array, idx++);",0,1,0.1111111111111111,483
e7158c7e9fcfff63426401c798685df266d16f00,value = value.toString();,0,1,0.1111111111111111,484
e7158c7e9fcfff63426401c798685df266d16f00,if (!hasNext()) {,0,1,0.1111111111111111,485
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterator(value, delimiter, false);",0,1,0.1111111111111111,486
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterable<String> createIterable(String value, String delimiter) {",0,1,0.1111111111111111,487
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, delimiter, allowEmptyValues, false);",0,1,0.1111111111111111,488
e7158c7e9fcfff63426401c798685df266d16f00,return idx < Array.getLength(array);,0,1,0.1111111111111111,489
e7158c7e9fcfff63426401c798685df266d16f00,if (value == null) {,0,1,0.1111111111111111,490
e7158c7e9fcfff63426401c798685df266d16f00,return Collections.emptyList();,0,1,0.1111111111111111,491
e7158c7e9fcfff63426401c798685df266d16f00,String del;,0,1,0.1111111111111111,492
e7158c7e9fcfff63426401c798685df266d16f00,if (DEFAULT_DELIMITER.equals(delimiter)) {,0,1,0.1111111111111111,493
e7158c7e9fcfff63426401c798685df266d16f00,"// the regexp will split by comma, but honor parentheses pair that may include commas",0,1,0.1111111111111111,494
e7158c7e9fcfff63426401c798685df266d16f00,"del = "",(?!(?:[^\\(,]|[^\\)],[^\\)])+\\))"";",0,1,0.1111111111111111,495
e7158c7e9fcfff63426401c798685df266d16f00,"return () -> new Scanner(value, del);",0,1,0.1111111111111111,496
e7158c7e9fcfff63426401c798685df266d16f00,} else if (allowEmptyValues || org.apache.camel.util.ObjectHelper.isNotEmpty(value)) {,0,1,0.1111111111111111,497
e7158c7e9fcfff63426401c798685df266d16f00,return Collections.singletonList(value);,0,1,0.1111111111111111,498
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterator(value, DEFAULT_DELIMITER);",0,1,0.1111111111111111,499
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterator<?> createIterator(Object value, String delimiter) {",0,1,0.1111111111111111,500
e7158c7e9fcfff63426401c798685df266d16f00,// then the regexp will split that into two:,0,1,0.1111111111111111,501
e7158c7e9fcfff63426401c798685df266d16f00,return (Iterable<Object>)value;,0,1,0.1111111111111111,502
e7158c7e9fcfff63426401c798685df266d16f00,return new Iterable<Object>() {,0,1,0.1111111111111111,503
e7158c7e9fcfff63426401c798685df266d16f00,public boolean hasNext() {,0,1,0.1111111111111111,504
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, delimiter, allowEmptyValues, false).iterator();",0,1,0.1111111111111111,505
e7158c7e9fcfff63426401c798685df266d16f00,if (org.apache.camel.util.ObjectHelper.isPrimitiveArrayType(value.getClass())) {,0,1,0.1111111111111111,506
e7158c7e9fcfff63426401c798685df266d16f00,} else if (value.getClass().isArray()) {,0,1,0.1111111111111111,507
e7158c7e9fcfff63426401c798685df266d16f00,return iterator;,0,1,0.1111111111111111,508
e7158c7e9fcfff63426401c798685df266d16f00,return (Iterable<Object>) () -> new Iterator<Object>() {,0,1,0.1111111111111111,509
e7158c7e9fcfff63426401c798685df266d16f00,value = ((Message) value).getBody();,0,1,0.1111111111111111,510
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterable<?> createIterable(Object value, String delimiter,",0,1,0.1111111111111111,511
e7158c7e9fcfff63426401c798685df266d16f00,* @see Iterable,0,1,0.1111111111111111,512
e7158c7e9fcfff63426401c798685df266d16f00,"return createIterable(value, delimiter, allowEmptyValues, pattern).iterator();",0,1,0.1111111111111111,513
e7158c7e9fcfff63426401c798685df266d16f00,"public static Iterator<?> createIterator(Object value, String delimiter,",0,1,0.1111111111111111,514
e7158c7e9fcfff63426401c798685df266d16f00,"ObjectHelper.notNull(supplier, ""Supplier"");",1,0,0.0,515
e7158c7e9fcfff63426401c798685df266d16f00,@Override,1,0,0.0,516
e7158c7e9fcfff63426401c798685df266d16f00,} else {,1,0,0.0,517
e7158c7e9fcfff63426401c798685df266d16f00,while (iter.hasNext()) {,1,0,0.0,518
e7158c7e9fcfff63426401c798685df266d16f00,public static Iterable<Object> createIterable(Object value) {,1,0,0.0,519
e7158c7e9fcfff63426401c798685df266d16f00,public static Iterator<Object> createIterator(Object value) {,1,0,0.0,520
e7158c7e9fcfff63426401c798685df266d16f00,"@SuppressWarnings(""unchecked"")",1,0,0.0,521
e7158c7e9fcfff63426401c798685df266d16f00,"// -> bean=foo?method=killer(a,b)",1,0,0.0,522
e7158c7e9fcfff63426401c798685df266d16f00,public void remove() {,1,0,0.0,523
e7158c7e9fcfff63426401c798685df266d16f00,public Iterator<Object> iterator() {,1,0,0.0,524
e7158c7e9fcfff63426401c798685df266d16f00,};,1,0,0.0,525
e7158c7e9fcfff63426401c798685df266d16f00,private int idx;,1,0,0.0,526
e7158c7e9fcfff63426401c798685df266d16f00,public Object next() {,1,0,0.0,527
e7158c7e9fcfff63426401c798685df266d16f00,"// -> bean=bar?method=great(a,b)",1,0,0.0,528
e7158c7e9fcfff63426401c798685df266d16f00,throw new UnsupportedOperationException();,1,0,0.0,529
e7158c7e9fcfff63426401c798685df266d16f00,// which may have balanced parentheses pairs as well.,1,0,0.0,530
e7158c7e9fcfff63426401c798685df266d16f00,"public static int typeCoerceCompare(TypeConverter converter, Object leftValue, Object rightValue) {",1,0,0.0,531
e7158c7e9fcfff63426401c798685df266d16f00,// also try with floating point numbers,1,0,0.0,532
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.RuntimeCamelException;,1,0,0.0,533
e7158c7e9fcfff63426401c798685df266d16f00,"@SuppressWarnings({""unchecked"", ""rawtypes""})",1,0,0.0,534
e7158c7e9fcfff63426401c798685df266d16f00,// convert right to left,1,0,0.0,535
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.ComponentAware;,1,0,0.0,536
e7158c7e9fcfff63426401c798685df266d16f00,idx++;,1,0,0.0,537
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.Exchange;,1,0,0.0,538
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.Message;,1,0,0.0,539
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.Ordered;,1,0,0.0,540
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.TypeConverter;,1,0,0.0,541
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.WrappedFile;,1,0,0.0,542
e7158c7e9fcfff63426401c798685df266d16f00,/**,1,0,0.0,543
e7158c7e9fcfff63426401c798685df266d16f00,*/,1,0,0.0,544
e7158c7e9fcfff63426401c798685df266d16f00,},1,0,0.0,545
e7158c7e9fcfff63426401c798685df266d16f00,// sanity check,1,0,0.0,546
e7158c7e9fcfff63426401c798685df266d16f00,// they are equal,1,0,0.0,547
e7158c7e9fcfff63426401c798685df266d16f00,// only one of them is null so they are not equal,1,0,0.0,548
e7158c7e9fcfff63426401c798685df266d16f00,// try without type coerce,1,0,0.0,549
e7158c7e9fcfff63426401c798685df266d16f00,// convert left to right,1,0,0.0,550
e7158c7e9fcfff63426401c798685df266d16f00,// http://stackoverflow.com/questions/1516090/splitting-a-title-into-separate-parts,1,0,0.0,551
e7158c7e9fcfff63426401c798685df266d16f00,@Override,1,0,0.0,552
e7158c7e9fcfff63426401c798685df266d16f00,"public static Properties getCamelPropertiesWithPrefix(String prefix, CamelContext camelContext) {",1,0,0.0,553
e7158c7e9fcfff63426401c798685df266d16f00,import org.junit.jupiter.api.BeforeEach;,1,0,0.0,554
e7158c7e9fcfff63426401c798685df266d16f00,"public static <T> T trySetCamelContext(T object, CamelContext camelContext) {",1,0,0.0,555
e7158c7e9fcfff63426401c798685df266d16f00,((CamelContextAware) object).setCamelContext(camelContext);,1,0,0.0,556
e7158c7e9fcfff63426401c798685df266d16f00,"public static <T> T trySetComponent(T object, Component component) {",1,0,0.0,557
e7158c7e9fcfff63426401c798685df266d16f00,((ComponentAware) object).setComponent(component);,1,0,0.0,558
e7158c7e9fcfff63426401c798685df266d16f00,"from(fileUri(""a/?sortBy=file:name&initialDelay=250&delay=1000"")).convertBodyTo(String.class).to(""mock:result"");",0,0,0.0,559
e7158c7e9fcfff63426401c798685df266d16f00,"from(fileUri(""b/?initialDelay=0&delay=10&sortBy=ignoreCase:file:name"")).convertBodyTo(String.class)",0,0,0.0,560
e7158c7e9fcfff63426401c798685df266d16f00,"from(fileUri(""c/?initialDelay=0&delay=10&sortBy=reverse:ignoreCase:file:name"")).convertBodyTo(String.class)",0,0,0.0,561
e7158c7e9fcfff63426401c798685df266d16f00,@BeforeEach,1,0,0.0,562
e7158c7e9fcfff63426401c798685df266d16f00,"answer.put(key.substring(prefix.length()), entry.getValue());",1,0,0.0,563
e7158c7e9fcfff63426401c798685df266d16f00,public void setUp() throws Exception {,1,0,0.0,564
e7158c7e9fcfff63426401c798685df266d16f00,"deleteDirectory(""target/data/filesorter"");",1,0,0.0,565
e7158c7e9fcfff63426401c798685df266d16f00,super.setUp();,1,0,0.0,566
e7158c7e9fcfff63426401c798685df266d16f00,},1,0,0.0,567
e7158c7e9fcfff63426401c798685df266d16f00,"from(fileUrl + ""a/?sortBy=file:name&initialDelay=250&delay=1000"").convertBodyTo(String.class).to(""mock:result"");",1,0,0.0,568
e7158c7e9fcfff63426401c798685df266d16f00,"from(fileUrl + ""b/?initialDelay=0&delay=10&sortBy=ignoreCase:file:name"").convertBodyTo(String.class)",1,0,0.0,569
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.CamelExecutionException;,1,0,0.0,570
e7158c7e9fcfff63426401c798685df266d16f00,Thread.currentThread().setContextClassLoader(tccl);,1,0,0.0,571
e7158c7e9fcfff63426401c798685df266d16f00,} finally {,1,0,0.0,572
e7158c7e9fcfff63426401c798685df266d16f00,Thread.currentThread().setContextClassLoader(classloader);,1,0,0.0,573
e7158c7e9fcfff63426401c798685df266d16f00,"public static Object callWithTCCL(Callable<?> call, ClassLoader classloader) throws Exception {",1,0,0.0,574
e7158c7e9fcfff63426401c798685df266d16f00,"public static Object invokeMethod(Method method, Object instance, Object... parameters) {",1,0,0.0,575
e7158c7e9fcfff63426401c798685df266d16f00,try {,1,0,0.0,576
e7158c7e9fcfff63426401c798685df266d16f00,} catch (IllegalAccessException e) {,1,0,0.0,577
e7158c7e9fcfff63426401c798685df266d16f00,throw new RuntimeCamelException(e);,1,0,0.0,578
e7158c7e9fcfff63426401c798685df266d16f00,} catch (InvocationTargetException e) {,1,0,0.0,579
e7158c7e9fcfff63426401c798685df266d16f00,throw ObjectHelper.wrapRuntimeCamelException(e.getCause());,1,0,0.0,580
e7158c7e9fcfff63426401c798685df266d16f00,public static <T> T newInstance(Class<T> type) {,1,0,0.0,581
e7158c7e9fcfff63426401c798685df266d16f00,} catch (InstantiationException e) {,1,0,0.0,582
e7158c7e9fcfff63426401c798685df266d16f00,"public static <T> T newInstance(Class<?> actualType, Class<T> expectedType) {",1,0,0.0,583
e7158c7e9fcfff63426401c798685df266d16f00,public static RuntimeCamelException wrapRuntimeCamelException(Throwable e) {,1,0,0.0,584
e7158c7e9fcfff63426401c798685df266d16f00,// don't double wrap,1,0,0.0,585
e7158c7e9fcfff63426401c798685df266d16f00,"public static CamelExecutionException wrapCamelExecutionException(Exchange exchange, Throwable e) {",1,0,0.0,586
e7158c7e9fcfff63426401c798685df266d16f00,Scanner scanner;,1,0,0.0,587
e7158c7e9fcfff63426401c798685df266d16f00,} catch (IOException e) {,1,0,0.0,588
e7158c7e9fcfff63426401c798685df266d16f00,"public static Object callWithTCCL(Callable<?> call, Exchange exchange) throws Exception {",1,0,0.0,589
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.Component;,1,0,0.0,590
e7158c7e9fcfff63426401c798685df266d16f00,import org.w3c.dom.NodeList;,0,0,0.0,591
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.CamelContextAware;,1,0,0.0,592
e7158c7e9fcfff63426401c798685df266d16f00,// convert left to right,0,0,0.0,593
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.util.StringHelper;,0,0,0.0,594
e7158c7e9fcfff63426401c798685df266d16f00,private ObjectHelper() {,0,0,0.0,595
e7158c7e9fcfff63426401c798685df266d16f00,},0,0,0.0,596
e7158c7e9fcfff63426401c798685df266d16f00,// sanity check,0,0,0.0,597
e7158c7e9fcfff63426401c798685df266d16f00,// they are equal,0,0,0.0,598
e7158c7e9fcfff63426401c798685df266d16f00,// only one of them is null so they are not equal,0,0,0.0,599
e7158c7e9fcfff63426401c798685df266d16f00,// try without type coerce,0,0,0.0,600
e7158c7e9fcfff63426401c798685df266d16f00,// convert right to left,0,0,0.0,601
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.CamelContext;,1,0,0.0,602
e7158c7e9fcfff63426401c798685df266d16f00,"@SuppressWarnings({""unchecked"", ""rawtypes""})",0,0,0.0,603
e7158c7e9fcfff63426401c798685df266d16f00,"public static int typeCoerceCompare(TypeConverter converter, Object leftValue, Object rightValue) {",0,0,0.0,604
e7158c7e9fcfff63426401c798685df266d16f00,// also try with floating point numbers,0,0,0.0,605
e7158c7e9fcfff63426401c798685df266d16f00,"public static Object invokeMethod(Method method, Object instance, Object... parameters) {",0,0,0.0,606
e7158c7e9fcfff63426401c798685df266d16f00,try {,0,0,0.0,607
e7158c7e9fcfff63426401c798685df266d16f00,} catch (IllegalAccessException e) {,0,0,0.0,608
e7158c7e9fcfff63426401c798685df266d16f00,throw new RuntimeCamelException(e);,0,0,0.0,609
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.util.Scanner;,0,0,0.0,610
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.TypeConverter;,0,0,0.0,611
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.RuntimeCamelException;,0,0,0.0,612
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.Ordered;,0,0,0.0,613
e7158c7e9fcfff63426401c798685df266d16f00,/**,0,0,0.0,614
e7158c7e9fcfff63426401c798685df266d16f00,*/,0,0,0.0,615
e7158c7e9fcfff63426401c798685df266d16f00,package org.apache.camel.support;,0,0,0.0,616
e7158c7e9fcfff63426401c798685df266d16f00,import java.lang.reflect.Array;,0,0,0.0,617
e7158c7e9fcfff63426401c798685df266d16f00,import java.lang.reflect.InvocationTargetException;,0,0,0.0,618
e7158c7e9fcfff63426401c798685df266d16f00,import java.lang.reflect.Method;,0,0,0.0,619
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.Arrays;,0,0,0.0,620
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.Collection;,0,0,0.0,621
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.Collections;,0,0,0.0,622
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.Iterator;,0,0,0.0,623
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.NoSuchElementException;,0,0,0.0,624
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.concurrent.Callable;,0,0,0.0,625
e7158c7e9fcfff63426401c798685df266d16f00,import org.w3c.dom.Node;,0,0,0.0,626
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.Exchange;,0,0,0.0,627
e7158c7e9fcfff63426401c798685df266d16f00,import org.apache.camel.Message;,0,0,0.0,628
e7158c7e9fcfff63426401c798685df266d16f00,} catch (InvocationTargetException e) {,0,0,0.0,629
e7158c7e9fcfff63426401c798685df266d16f00,throw RuntimeCamelException.wrapRuntimeCamelException(e.getCause());,0,0,0.0,630
e7158c7e9fcfff63426401c798685df266d16f00,public static <T> T newInstance(Class<T> type) {,0,0,0.0,631
e7158c7e9fcfff63426401c798685df266d16f00,public Iterator<Object> iterator() {,0,0,0.0,632
e7158c7e9fcfff63426401c798685df266d16f00,private int idx;,0,0,0.0,633
e7158c7e9fcfff63426401c798685df266d16f00,public Object next() {,0,0,0.0,634
e7158c7e9fcfff63426401c798685df266d16f00,public void remove() {,0,0,0.0,635
e7158c7e9fcfff63426401c798685df266d16f00,throw new UnsupportedOperationException();,0,0,0.0,636
e7158c7e9fcfff63426401c798685df266d16f00,public Node next() {,0,0,0.0,637
e7158c7e9fcfff63426401c798685df266d16f00,idx++;,0,0,0.0,638
e7158c7e9fcfff63426401c798685df266d16f00,while (iter.hasNext()) {,0,0,0.0,639
e7158c7e9fcfff63426401c798685df266d16f00,"org.apache.camel.util.ObjectHelper.notNull(supplier, ""Supplier"");",0,0,0.0,640
e7158c7e9fcfff63426401c798685df266d16f00,import java.io.File;,1,0,0.0,641
e7158c7e9fcfff63426401c798685df266d16f00,import java.lang.reflect.Array;,1,0,0.0,642
e7158c7e9fcfff63426401c798685df266d16f00,import java.lang.reflect.InvocationTargetException;,1,0,0.0,643
e7158c7e9fcfff63426401c798685df266d16f00,import java.nio.channels.ReadableByteChannel;,1,0,0.0,644
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.NoSuchElementException;,1,0,0.0,645
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.Properties;,1,0,0.0,646
e7158c7e9fcfff63426401c798685df266d16f00,import java.util.concurrent.Callable;,1,0,0.0,647
e7158c7e9fcfff63426401c798685df266d16f00,};,0,0,0.0,648
e7158c7e9fcfff63426401c798685df266d16f00,@Override,0,0,0.0,649
e7158c7e9fcfff63426401c798685df266d16f00,} catch (InstantiationException | IllegalAccessException e) {,0,0,0.0,650
e7158c7e9fcfff63426401c798685df266d16f00,"@SuppressWarnings(""unchecked"")",0,0,0.0,651
e7158c7e9fcfff63426401c798685df266d16f00,"public static <T> T newInstance(Class<?> actualType, Class<T> expectedType) {",0,0,0.0,652
e7158c7e9fcfff63426401c798685df266d16f00,} catch (InstantiationException e) {,0,0,0.0,653
e7158c7e9fcfff63426401c798685df266d16f00,"public static Object callWithTCCL(Callable<?> call, Exchange exchange) throws Exception {",0,0,0.0,654
e7158c7e9fcfff63426401c798685df266d16f00,"public static Object callWithTCCL(Callable<?> call, ClassLoader classloader) throws Exception {",0,0,0.0,655
e7158c7e9fcfff63426401c798685df266d16f00,Thread.currentThread().setContextClassLoader(classloader);,0,0,0.0,656
e7158c7e9fcfff63426401c798685df266d16f00,} finally {,0,0,0.0,657
e7158c7e9fcfff63426401c798685df266d16f00,Thread.currentThread().setContextClassLoader(tccl);,0,0,0.0,658
e7158c7e9fcfff63426401c798685df266d16f00,public static Iterable<?> createIterable(Object value) {,0,0,0.0,659
e7158c7e9fcfff63426401c798685df266d16f00,public static Iterable<String> createIterable(String value) {,0,0,0.0,660
e7158c7e9fcfff63426401c798685df266d16f00,// which may have balanced parentheses pairs as well.,0,0,0.0,661
e7158c7e9fcfff63426401c798685df266d16f00,"// -> bean=foo?method=killer(a,b)",0,0,0.0,662
e7158c7e9fcfff63426401c798685df266d16f00,"// -> bean=bar?method=great(a,b)",0,0,0.0,663
e7158c7e9fcfff63426401c798685df266d16f00,// http://stackoverflow.com/questions/1516090/splitting-a-title-into-separate-parts,0,0,0.0,664
e7158c7e9fcfff63426401c798685df266d16f00,} else {,0,0,0.0,665
e7158c7e9fcfff63426401c798685df266d16f00,public static Iterator<?> createIterator(Object value) {,0,0,0.0,666
e7158c7e9fcfff63426401c798685df266d16f00,"from(fileUrl + ""c/?initialDelay=0&delay=10&sortBy=reverse:ignoreCase:file:name"").convertBodyTo(String.class)",1,0,0.0,667
