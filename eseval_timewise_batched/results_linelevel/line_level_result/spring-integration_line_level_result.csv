line,commit_id,count,line_level_label
private Trigger trigger = new PeriodicTrigger(10);,3d6969a8370862494ea29ad677ee254d23efb689,4,0
private Trigger trigger = new PeriodicTrigger(10);,3d6969a8370862494ea29ad677ee254d23efb689,4,1
public void run() {,3d6969a8370862494ea29ad677ee254d23efb689,3,1
private ClassLoader beanClassLoader = ClassUtils.getDefaultClassLoader();,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private long maxMessagesPerPoll = -1;,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private volatile Callable<Message<?>> pollingTask;,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private volatile Flux<Message<?>> pollingFlux;,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private volatile Subscription subscription;,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private volatile ScheduledFuture<?> runningTask;,3d6969a8370862494ea29ad677ee254d23efb689,2,0
protected void doStart() {,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private Callable<Message<?>> createPollingTask() {,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private Runnable createPoller() {,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private Flux<Message<?>> createFluxGenerator() {,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private Message<?> pollForMessage() {,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private Message<?> doPoll() {,3d6969a8370862494ea29ad677ee254d23efb689,2,0
protected void doStop() {,3d6969a8370862494ea29ad677ee254d23efb689,2,0
private ClassLoader beanClassLoader = ClassUtils.getDefaultClassLoader();,3d6969a8370862494ea29ad677ee254d23efb689,2,1
private long maxMessagesPerPoll = -1;,3d6969a8370862494ea29ad677ee254d23efb689,2,1
private volatile ScheduledFuture<?> runningTask;,3d6969a8370862494ea29ad677ee254d23efb689,2,1
private volatile Runnable poller;,3d6969a8370862494ea29ad677ee254d23efb689,2,1
private Runnable createPoller() throws Exception {,3d6969a8370862494ea29ad677ee254d23efb689,2,1
protected void doStart() {,3d6969a8370862494ea29ad677ee254d23efb689,2,1
protected void doStop() {,3d6969a8370862494ea29ad677ee254d23efb689,2,1
private boolean doPoll() {,3d6969a8370862494ea29ad677ee254d23efb689,2,1
private final class Poller implements Runnable {,3d6969a8370862494ea29ad677ee254d23efb689,2,1
private TransactionSynchronizationFactory transactionSynchronizationFactory;,3d6969a8370862494ea29ad677ee254d23efb689,1,0
protected boolean isReactive() {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
},3d6969a8370862494ea29ad677ee254d23efb689,1,0
protected Flux<Message<?>> getPollingFlux() {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
// LifecycleSupport implementation,3d6969a8370862494ea29ad677ee254d23efb689,1,0
@Override // guarded by super#lifecycleLock,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (!this.initialized) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
this.pollingTask = createPollingTask();,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (isReactive()) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
this.pollingFlux = createFluxGenerator();,3d6969a8370862494ea29ad677ee254d23efb689,1,0
else {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
this.runningTask =,3d6969a8370862494ea29ad677ee254d23efb689,1,0
Callable<Message<?>> pollingTask = this::doPoll;,3d6969a8370862494ea29ad677ee254d23efb689,1,0
pollingTask = (Callable<Message<?>>) proxyFactory.getProxy(this.beanClassLoader);,3d6969a8370862494ea29ad677ee254d23efb689,1,0
this.taskExecutor.execute(() -> {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
int count = 0;,3d6969a8370862494ea29ad677ee254d23efb689,1,0
while (this.initialized && (this.maxMessagesPerPoll <= 0 || count < this.maxMessagesPerPoll)) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (pollForMessage() == null) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
SimpleTriggerContext triggerContext = new SimpleTriggerContext();,3d6969a8370862494ea29ad677ee254d23efb689,1,0
.<Duration>generate(sink -> {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
Date date = this.trigger.nextExecutionTime(triggerContext);,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (date != null) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
long millis = date.getTime() - System.currentTimeMillis();,3d6969a8370862494ea29ad677ee254d23efb689,1,0
.<Message<?>>generate(fluxSink -> {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
Message<?> message = pollForMessage();,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (message != null) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
.doOnSubscribe(subscription -> this.subscription = subscription);,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (e instanceof MessagingException) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
Message<?> failedMessage = null;,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (this.transactionSynchronizationFactory != null) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
Object resource = TransactionSynchronizationManager.getResource(getResourceToBind());,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (resource instanceof IntegrationResourceHolder) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
failedMessage = ((IntegrationResourceHolder) resource).getMessage();,3d6969a8370862494ea29ad677ee254d23efb689,1,0
finally {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
Object resource = getResourceToBind();,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (TransactionSynchronizationManager.hasResource(resource)) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
"IntegrationResourceHolder holder = bindResourceHolderIfNecessary(getResourceKey(), getResourceToBind());",3d6969a8370862494ea29ad677ee254d23efb689,1,0
message = receiveMessage();,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (!isReactive()) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
try {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
catch (Exception e) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (this.runningTask != null) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
this.runningTask = null;,3d6969a8370862494ea29ad677ee254d23efb689,1,0
if (this.subscription != null) {,3d6969a8370862494ea29ad677ee254d23efb689,1,0
private TransactionSynchronizationFactory transactionSynchronizationFactory;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
Callable<Boolean> pollingTask = this::doPoll;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
pollingTask = (Callable<Boolean>) proxyFactory.getProxy(this.beanClassLoader);,3d6969a8370862494ea29ad677ee254d23efb689,1,1
// LifecycleSupport implementation,3d6969a8370862494ea29ad677ee254d23efb689,1,1
@Override // guarded by super#lifecycleLock,3d6969a8370862494ea29ad677ee254d23efb689,1,1
if (!this.initialized) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
},3d6969a8370862494ea29ad677ee254d23efb689,1,1
this.poller = createPoller();,3d6969a8370862494ea29ad677ee254d23efb689,1,1
this.initialized = false;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
"this.runningTask = this.getTaskScheduler().schedule(this.poller, this.trigger);",3d6969a8370862494ea29ad677ee254d23efb689,1,1
if (this.runningTask != null) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
this.runningTask = null;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
IntegrationResourceHolder holder = this.bindResourceHolderIfNecessary(,3d6969a8370862494ea29ad677ee254d23efb689,1,1
Message<?> message = null;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
message = this.receiveMessage();,3d6969a8370862494ea29ad677ee254d23efb689,1,1
result = false;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
try {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
catch (Exception e) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
if (e instanceof MessagingException) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
else {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
result = true;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
* Default Poller implementation,3d6969a8370862494ea29ad677ee254d23efb689,1,1
private final Callable<Boolean> pollingTask;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
Poller(Callable<Boolean> pollingTask) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
this.pollingTask = pollingTask;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
AbstractPollingEndpoint.this.taskExecutor.execute(() -> {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
int count = 0;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
|| count < AbstractPollingEndpoint.this.maxMessagesPerPoll)) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
if (!Poller.this.pollingTask.call()) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
Message<?> failedMessage = null;,3d6969a8370862494ea29ad677ee254d23efb689,1,1
if (AbstractPollingEndpoint.this.transactionSynchronizationFactory != null) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
Object resource = TransactionSynchronizationManager.getResource(getResourceToBind());,3d6969a8370862494ea29ad677ee254d23efb689,1,1
if (resource instanceof IntegrationResourceHolder) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
failedMessage = ((IntegrationResourceHolder) resource).getMessage();,3d6969a8370862494ea29ad677ee254d23efb689,1,1
finally {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
Object resource = getResourceToBind();,3d6969a8370862494ea29ad677ee254d23efb689,1,1
if (TransactionSynchronizationManager.hasResource(resource)) {,3d6969a8370862494ea29ad677ee254d23efb689,1,1
import java.time.Duration;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
import java.util.Date;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
import org.reactivestreams.Subscription;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
import org.springframework.scheduling.support.SimpleTriggerContext;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
import reactor.core.publisher.Flux;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
import reactor.core.publisher.Mono;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
import reactor.core.scheduler.Schedulers;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
return false;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
return this.pollingFlux;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
onInit();,3d6969a8370862494ea29ad677ee254d23efb689,0,0
"Assert.state(getTaskScheduler() != null, ""unable to start polling, no taskScheduler available"");",3d6969a8370862494ea29ad677ee254d23efb689,0,0
getTaskScheduler(),3d6969a8370862494ea29ad677ee254d23efb689,0,0
".schedule(createPoller(), this.trigger);",3d6969a8370862494ea29ad677ee254d23efb689,0,0
return pollingTask;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
return () ->,3d6969a8370862494ea29ad677ee254d23efb689,0,0
break;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
count++;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
});,3d6969a8370862494ea29ad677ee254d23efb689,0,0
return Flux,3d6969a8370862494ea29ad677ee254d23efb689,0,0
"triggerContext.update(date, null, null);",3d6969a8370862494ea29ad677ee254d23efb689,0,0
sink.next(Duration.ofMillis(millis));,3d6969a8370862494ea29ad677ee254d23efb689,0,0
sink.complete();,3d6969a8370862494ea29ad677ee254d23efb689,0,0
}),3d6969a8370862494ea29ad677ee254d23efb689,0,0
.concatMap(duration ->,3d6969a8370862494ea29ad677ee254d23efb689,0,0
Mono.delay(duration),3d6969a8370862494ea29ad677ee254d23efb689,0,0
.doOnNext(l ->,3d6969a8370862494ea29ad677ee254d23efb689,0,0
"triggerContext.update(triggerContext.lastScheduledExecutionTime(),",3d6969a8370862494ea29ad677ee254d23efb689,0,0
"new Date(), null))",3d6969a8370862494ea29ad677ee254d23efb689,0,0
.flatMapMany(l ->,3d6969a8370862494ea29ad677ee254d23efb689,0,0
Flux,3d6969a8370862494ea29ad677ee254d23efb689,0,0
fluxSink.next(message);,3d6969a8370862494ea29ad677ee254d23efb689,0,0
fluxSink.complete();,3d6969a8370862494ea29ad677ee254d23efb689,0,0
.take(this.maxMessagesPerPoll),3d6969a8370862494ea29ad677ee254d23efb689,0,0
.subscribeOn(Schedulers.fromExecutor(this.taskExecutor)),3d6969a8370862494ea29ad677ee254d23efb689,0,0
.doOnComplete(() ->,3d6969a8370862494ea29ad677ee254d23efb689,0,0
"triggerContext.lastActualExecutionTime(),",3d6969a8370862494ea29ad677ee254d23efb689,0,0
new Date()),3d6969a8370862494ea29ad677ee254d23efb689,0,0
")), 1)",3d6969a8370862494ea29ad677ee254d23efb689,0,0
.repeat(this::isRunning),3d6969a8370862494ea29ad677ee254d23efb689,0,0
return this.pollingTask.call();,3d6969a8370862494ea29ad677ee254d23efb689,0,0
throw (MessagingException) e;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
"throw new MessagingException(failedMessage, e);",3d6969a8370862494ea29ad677ee254d23efb689,0,0
TransactionSynchronizationManager.unbindResource(resource);,3d6969a8370862494ea29ad677ee254d23efb689,0,0
Message<?> message;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
return null;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
handleMessage(message);,3d6969a8370862494ea29ad677ee254d23efb689,0,0
"throw new MessagingExceptionWrapper(message, (MessagingException) e);",3d6969a8370862494ea29ad677ee254d23efb689,0,0
"throw new MessagingException(message, e);",3d6969a8370862494ea29ad677ee254d23efb689,0,0
return message;,3d6969a8370862494ea29ad677ee254d23efb689,0,0
this.runningTask.cancel(true);,3d6969a8370862494ea29ad677ee254d23efb689,0,0
this.subscription.cancel();,3d6969a8370862494ea29ad677ee254d23efb689,0,0
return new Poller(pollingTask);,3d6969a8370862494ea29ad677ee254d23efb689,0,1
this.onInit();,3d6969a8370862494ea29ad677ee254d23efb689,0,1
"Assert.state(this.getTaskScheduler() != null,",3d6969a8370862494ea29ad677ee254d23efb689,0,1
"""unable to start polling, no taskScheduler available"");",3d6969a8370862494ea29ad677ee254d23efb689,0,1
"throw new MessagingException(""Failed to create Poller"", e);",3d6969a8370862494ea29ad677ee254d23efb689,0,1
this.runningTask.cancel(true);,3d6969a8370862494ea29ad677ee254d23efb689,0,1
"this.getResourceKey(), this.getResourceToBind());",3d6969a8370862494ea29ad677ee254d23efb689,0,1
return false;,3d6969a8370862494ea29ad677ee254d23efb689,0,1
boolean result;,3d6969a8370862494ea29ad677ee254d23efb689,0,1
this.handleMessage(message);,3d6969a8370862494ea29ad677ee254d23efb689,0,1
"throw new MessagingExceptionWrapper(message, (MessagingException) e);",3d6969a8370862494ea29ad677ee254d23efb689,0,1
"throw new MessagingException(message, e);",3d6969a8370862494ea29ad677ee254d23efb689,0,1
return result;,3d6969a8370862494ea29ad677ee254d23efb689,0,1
/**,3d6969a8370862494ea29ad677ee254d23efb689,0,1
*/,3d6969a8370862494ea29ad677ee254d23efb689,0,1
@Override,3d6969a8370862494ea29ad677ee254d23efb689,0,1
while (AbstractPollingEndpoint.this.initialized,3d6969a8370862494ea29ad677ee254d23efb689,0,1
&& (AbstractPollingEndpoint.this.maxMessagesPerPoll <= 0,3d6969a8370862494ea29ad677ee254d23efb689,0,1
break;,3d6969a8370862494ea29ad677ee254d23efb689,0,1
count++;,3d6969a8370862494ea29ad677ee254d23efb689,0,1
throw (MessagingException) e;,3d6969a8370862494ea29ad677ee254d23efb689,0,1
"throw new MessagingException(failedMessage, e);",3d6969a8370862494ea29ad677ee254d23efb689,0,1
TransactionSynchronizationManager.unbindResource(resource);,3d6969a8370862494ea29ad677ee254d23efb689,0,1
});,3d6969a8370862494ea29ad677ee254d23efb689,0,1
if (!this.initialized) {,180d57c418bd65ea17a9d021208d45cfe067eaee,3,0
if (!this.initialized) {,180d57c418bd65ea17a9d021208d45cfe067eaee,3,1
if (isReactive()) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (pollForMessage() == null) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (date != null) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (message != null) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (e instanceof MessagingException) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (this.transactionSynchronizationFactory != null) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (resource instanceof IntegrationResourceHolder) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (TransactionSynchronizationManager.hasResource(resource)) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (!isReactive()) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (this.runningTask != null) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (this.subscription != null) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
if (this.runningTask != null) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,1
if (e instanceof MessagingException) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,1
if (!Poller.this.pollingTask.call()) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,1
if (AbstractPollingEndpoint.this.transactionSynchronizationFactory != null) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,1
if (resource instanceof IntegrationResourceHolder) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,1
if (TransactionSynchronizationManager.hasResource(resource)) {,180d57c418bd65ea17a9d021208d45cfe067eaee,2,1
private PollableChannel inputChannel;,180d57c418bd65ea17a9d021208d45cfe067eaee,2,0
private final PollableChannel inputChannel;,180d57c418bd65ea17a9d021208d45cfe067eaee,2,1
protected boolean isReactive() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
},180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
protected Flux<Message<?>> getPollingFlux() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
protected void doStart() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
else {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
private Callable<Message<?>> createPollingTask() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
private Runnable createPoller() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
this.taskExecutor.execute(() -> {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
while (this.initialized && (this.maxMessagesPerPoll <= 0 || count < this.maxMessagesPerPoll)) {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
private Flux<Message<?>> createFluxGenerator() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
.<Duration>generate(sink -> {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
.<Message<?>>generate(fluxSink -> {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
Message<?> message = pollForMessage();,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
private Message<?> pollForMessage() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
finally {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
private Message<?> doPoll() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
message = receiveMessage();,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
try {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
catch (Exception e) {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
protected void doStop() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
private Runnable createPoller() throws Exception {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
protected void doStart() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
},180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
protected void doStop() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
private boolean doPoll() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
Message<?> message = null;,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
message = this.receiveMessage();,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
try {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
catch (Exception e) {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
else {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
* Default Poller implementation,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
private final class Poller implements Runnable {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
Poller(Callable<Boolean> pollingTask) {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
public void run() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
AbstractPollingEndpoint.this.taskExecutor.execute(() -> {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
|| count < AbstractPollingEndpoint.this.maxMessagesPerPoll)) {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
finally {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,1
protected Object getReceiveMessageSource() {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
},180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
protected void setReceiveMessageSource(Object source) {,180d57c418bd65ea17a9d021208d45cfe067eaee,1,0
import java.time.Duration;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
import java.util.Date;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
import org.reactivestreams.Subscription;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
import org.springframework.scheduling.support.SimpleTriggerContext;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
import reactor.core.publisher.Flux;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
import reactor.core.publisher.Mono;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
import reactor.core.scheduler.Schedulers;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private ClassLoader beanClassLoader = ClassUtils.getDefaultClassLoader();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private Trigger trigger = new PeriodicTrigger(10);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private long maxMessagesPerPoll = -1;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private TransactionSynchronizationFactory transactionSynchronizationFactory;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private volatile Callable<Message<?>> pollingTask;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private volatile Flux<Message<?>> pollingFlux;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private volatile Subscription subscription;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private volatile ScheduledFuture<?> runningTask;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return false;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return this.pollingFlux;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
// LifecycleSupport implementation,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
@Override // guarded by super#lifecycleLock,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
onInit();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
this.pollingTask = createPollingTask();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
this.pollingFlux = createFluxGenerator();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"Assert.state(getTaskScheduler() != null, ""unable to start polling, no taskScheduler available"");",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
this.runningTask =,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
getTaskScheduler(),180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
".schedule(createPoller(), this.trigger);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
Callable<Message<?>> pollingTask = this::doPoll;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
pollingTask = (Callable<Message<?>>) proxyFactory.getProxy(this.beanClassLoader);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return pollingTask;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return () ->,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
int count = 0;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
break;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
count++;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
});,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
SimpleTriggerContext triggerContext = new SimpleTriggerContext();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return Flux,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
Date date = this.trigger.nextExecutionTime(triggerContext);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"triggerContext.update(date, null, null);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
long millis = date.getTime() - System.currentTimeMillis();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
sink.next(Duration.ofMillis(millis));,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
sink.complete();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
}),180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
.concatMap(duration ->,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
Mono.delay(duration),180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
.doOnNext(l ->,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"triggerContext.update(triggerContext.lastScheduledExecutionTime(),",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"new Date(), null))",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
.flatMapMany(l ->,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
Flux,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
fluxSink.next(message);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
fluxSink.complete();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
.take(this.maxMessagesPerPoll),180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
.subscribeOn(Schedulers.fromExecutor(this.taskExecutor)),180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
.doOnComplete(() ->,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"triggerContext.lastActualExecutionTime(),",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
new Date()),180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
")), 1)",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
.repeat(this::isRunning),180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
.doOnSubscribe(subscription -> this.subscription = subscription);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return this.pollingTask.call();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
throw (MessagingException) e;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
Message<?> failedMessage = null;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
Object resource = TransactionSynchronizationManager.getResource(getResourceToBind());,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
failedMessage = ((IntegrationResourceHolder) resource).getMessage();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"throw new MessagingException(failedMessage, e);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
Object resource = getResourceToBind();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
TransactionSynchronizationManager.unbindResource(resource);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"IntegrationResourceHolder holder = bindResourceHolderIfNecessary(getResourceKey(), getResourceToBind());",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
Message<?> message;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return null;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
handleMessage(message);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"throw new MessagingExceptionWrapper(message, (MessagingException) e);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
"throw new MessagingException(message, e);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return message;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
this.runningTask.cancel(true);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
this.runningTask = null;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
this.subscription.cancel();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private Trigger trigger = new PeriodicTrigger(10);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
private ClassLoader beanClassLoader = ClassUtils.getDefaultClassLoader();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
private long maxMessagesPerPoll = -1;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
private TransactionSynchronizationFactory transactionSynchronizationFactory;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
private volatile ScheduledFuture<?> runningTask;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
private volatile Runnable poller;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
Callable<Boolean> pollingTask = this::doPoll;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
pollingTask = (Callable<Boolean>) proxyFactory.getProxy(this.beanClassLoader);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
return new Poller(pollingTask);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
// LifecycleSupport implementation,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
@Override // guarded by super#lifecycleLock,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
this.onInit();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"Assert.state(this.getTaskScheduler() != null,",180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"""unable to start polling, no taskScheduler available"");",180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
this.poller = createPoller();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
this.initialized = false;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"throw new MessagingException(""Failed to create Poller"", e);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"this.runningTask = this.getTaskScheduler().schedule(this.poller, this.trigger);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
this.runningTask.cancel(true);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
this.runningTask = null;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
IntegrationResourceHolder holder = this.bindResourceHolderIfNecessary(,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"this.getResourceKey(), this.getResourceToBind());",180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
return false;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
boolean result;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
result = false;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
this.handleMessage(message);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"throw new MessagingExceptionWrapper(message, (MessagingException) e);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"throw new MessagingException(message, e);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
result = true;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
return result;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
/**,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
*/,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
private final Callable<Boolean> pollingTask;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
this.pollingTask = pollingTask;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
@Override,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
int count = 0;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
while (AbstractPollingEndpoint.this.initialized,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
&& (AbstractPollingEndpoint.this.maxMessagesPerPoll <= 0,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
break;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
count++;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
throw (MessagingException) e;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
Message<?> failedMessage = null;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
Object resource = TransactionSynchronizationManager.getResource(getResourceToBind());,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
failedMessage = ((IntegrationResourceHolder) resource).getMessage();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"throw new MessagingException(failedMessage, e);",180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
Object resource = getResourceToBind();,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
TransactionSynchronizationManager.unbindResource(resource);,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
});,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
private long receiveTimeout = DEFAULT_RECEIVE_TIMEOUT;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
@Override,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
return this.inputChannel;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
this.inputChannel = (PollableChannel) source;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,0
private volatile long receiveTimeout = DEFAULT_RECEIVE_TIMEOUT;,180d57c418bd65ea17a9d021208d45cfe067eaee,0,1
"* Set the reply channel name. If no reply channel is provided, this gateway will",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,10,0
"* Set the error channel name. If no error channel is provided, this gateway will",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,8,0
"protected MessageHandler createHandler(Object bean, Method method, Aggregator annotation) {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,7,1
while (this.initialized && (this.maxMessagesPerPoll <= 0 || count < this.maxMessagesPerPoll)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,7,0
"protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,6,1
"""Failed to send message to channel '"" + requestChannel +",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,6,0
private static class FutureReplyChannel implements MessageChannel {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,6,0
private final class Poller implements Runnable {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,6,1
"protected MessageHandler createHandler(Object bean, Method method, List<Annotation> annotations) {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,5,0
"protected MessageHandler createHandler(Object bean, Method method, List<Annotation> annotations) {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,5,0
* @param requestChannelName the channel bean name to which request messages will be sent,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,5,0
"throw new MessagingException(""No request channel available. Cannot send request message."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,5,0
private Trigger trigger = new PeriodicTrigger(10);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,5,0
private Trigger trigger = new PeriodicTrigger(10);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,5,1
"String id = super.resolveId(element, definition, parserContext);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
"public void doWith(Method method) throws IllegalArgumentException, IllegalAccessException {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
"router = new MethodInvokingRouter(bean, method);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,0
"protected MessageHandler createHandler(Object bean, Method method,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
"MethodInvokingRouter router = new MethodInvokingRouter(bean, method);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
* Set the request channel name.,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,0
* @param replyChannelName the channel bean name from which reply messages will be received,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,0
private final HistoryWritingMessagePostProcessor historyWritingPostProcessor = new HistoryWritingMessagePostProcessor();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
if (this.replyChannel != null && this.replyMessageCorrelator == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
if (this.replyChannel instanceof SubscribableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
else if (this.replyChannel instanceof PollableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
private final CompletableFuture<Message<?>> messageFuture = new CompletableFuture<>();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,0
private Runnable createPoller() throws Exception {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
|| count < AbstractPollingEndpoint.this.maxMessagesPerPoll)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
private static final long DEFAULT_TIMEOUT = 1000L;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,4,1
* Base class for url-based outbound gateway parsers.,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
* Base class for url-based outbound gateway parsers.,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
if (!StringUtils.hasText(id)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
"AggregatingMessageHandler handler = new AggregatingMessageHandler(processor, new SimpleMessageStore(),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"AggregatingMessageHandler handler = new AggregatingMessageHandler(processor, new SimpleMessageStore(), correlationStrategy, releaseStrategy);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
private MethodInvokingReleaseStrategy getReleaseStrategy(final Object bean) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
final AtomicReference<MethodInvokingReleaseStrategy> reference = new AtomicReference<MethodInvokingReleaseStrategy>();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
"Annotation annotation = AnnotationUtils.getAnnotation(method, ReleaseStrategy.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
private MethodInvokingCorrelationStrategy getCorrelationStrategy(final Object bean) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
final AtomicReference<MethodInvokingCorrelationStrategy> reference = new AtomicReference<MethodInvokingCorrelationStrategy>();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
"Annotation annotation = AnnotationUtils.getAnnotation(method, CorrelationStrategy.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
if (target instanceof MessageHandler) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
router = new MethodInvokingRouter(target);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
|| StringUtils.hasText(prefix) || StringUtils.hasText(suffix) || StringUtils.hasText(resolutionRequired),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"Assert.notNull(defaultOutputChannel, ""unable to resolve defaultOutputChannel '"" + defaultOutputChannelName + ""'"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
private final HistoryWritingMessagePostProcessor historyWritingPostProcessor =,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
public void setRequestChannelName(String requestChannelName) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
public void setReplyChannelName(String replyChannelName) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
* @param errorChannelName The error channel bean name.,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
public void setErrorChannelName(String errorChannelName) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
private MessageChannel getRequestChannel() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"""A bean factory is required to resolve the requestChannel at runtime."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"throw new DestinationResolutionException(""Failed to look up MessageChannel with name '""",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
private MessageChannel getReplyChannel() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"""A bean factory is required to resolve the replyChannel at runtime."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
private MessageChannel getErrorChannel() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"""A bean factory is required to resolve the errorChannel at runtime."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (replyChannel != null && this.replyMessageCorrelator == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (replyChannel instanceof SubscribableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"correlator = new EventDrivenConsumer((SubscribableChannel) replyChannel, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
else if (replyChannel instanceof PollableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"PollingConsumer endpoint = new PollingConsumer((PollableChannel) replyChannel, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"throw new MessagingException(""Unsupported 'replyChannel' type ["" + replyChannel.getClass() + ""].""",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"Assert.state(this.replyChannel != null && (this.replyChannel instanceof PollableChannel),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
correlator = new EventDrivenConsumer(,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
PollingConsumer endpoint = new PollingConsumer(,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
message = object instanceof Message<?>,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"throw new MessageMappingException(""Cannot map to message: "" + object, e);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (requestChannel instanceof ReactiveStreamsSubscribableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"logger.debug(""failure occurred in gateway sendAndReceiveReactive: "" + exception.getMessage());",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
private Long headerToLong(@Nullable Object headerValue) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (headerValue instanceof Number) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
else if (headerValue instanceof String) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"private RuntimeException wrapExceptionIfNecessary(Throwable t, String description) {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
protected void registerReplyMessageCorrelatorIfNecessary() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (replyChannel != null && this.replyMessageCorrelator == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (replyChannel instanceof SubscribableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"correlator = new EventDrivenConsumer((SubscribableChannel) replyChannel, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
else if (replyChannel instanceof PollableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"PollingConsumer endpoint = new PollingConsumer((PollableChannel) replyChannel, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
correlator = endpoint;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
else if (replyChannel instanceof ReactiveStreamsSubscribableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"throw new MessagingException(""Unsupported 'replyChannel' type ["" + replyChannel.getClass() + ""].""",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (replyChannel != null && this.replyMessageCorrelator == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
private void registerReplyMessageCorrelator() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
if (replyChannel instanceof SubscribableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
"correlator = new EventDrivenConsumer((SubscribableChannel) replyChannel, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
else if (replyChannel instanceof PollableChannel) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
"PollingConsumer endpoint = new PollingConsumer((PollableChannel) replyChannel, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
correlator = endpoint;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
"throw new MessagingException(""Unsupported 'replyChannel' type ["" + replyChannel.getClass() + ""].""",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
if (this.isRunning()) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
protected void doStart() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (e instanceof MessagingException) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
if (resource instanceof IntegrationResourceHolder) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
protected void doStop() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
protected void doStart() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
protected void doStop() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
if (e instanceof MessagingException) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
public void run() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
if (resource instanceof IntegrationResourceHolder) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
"correlator = new PollingConsumer((PollableChannel) replyChan, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,0
"PollingConsumer endpoint = new PollingConsumer((PollableChannel) replyChan, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
correlator = endpoint;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,3,1
throws BeanDefinitionStoreException {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
"id = element.getAttribute(""name"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
id = parserContext.getReaderContext().generateBeanName(definition);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
"Method releaseStrategyMethod = MessagingAnnotationUtils.findAnnotatedMethod(bean, ReleaseStrategy.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (releaseStrategyMethod != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"releaseStrategy = new MethodInvokingReleaseStrategy(bean, releaseStrategyMethod);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"Method correlationStrategyMethod = MessagingAnnotationUtils.findAnnotatedMethod(bean, CorrelationStrategy.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (correlationStrategyMethod != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"correlationStrategy = new MethodInvokingCorrelationStrategy(bean, correlationStrategyMethod);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String discardChannelName = MessagingAnnotationUtils.resolveAttribute(annotations, ""discardChannel"", String.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String outputChannelName = MessagingAnnotationUtils.resolveAttribute(annotations, ""outputChannel"", String.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (sendTimeout != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (sendPartialResultsOnExpiry != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
String discardChannelName = annotation.discardChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
String outputChannelName = annotation.outputChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
"ReflectionUtils.doWithMethods(bean.getClass(), new ReflectionUtils.MethodCallback() {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (annotation != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
"if (AnnotatedElementUtils.isAnnotated(method, Bean.class.getName())) {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
Object target = this.resolveTargetBeanFromMethodWithBeanAnnotation(method);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"router = this.extractTypeIfPossible(target, AbstractMessageRouter.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (router == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
return router;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String defaultOutputChannelName = MessagingAnnotationUtils.resolveAttribute(annotations,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String applySequence = MessagingAnnotationUtils.resolveAttribute(annotations, ""applySequence"", String.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (StringUtils.hasText(applySequence)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String ignoreSendFailures = MessagingAnnotationUtils.resolveAttribute(annotations, ""ignoreSendFailures"",",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (StringUtils.hasText(ignoreSendFailures)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.routerAttributesProvided(annotations)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
MethodInvokingRouter methodInvokingRouter = (MethodInvokingRouter) router;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String resolutionRequired = MessagingAnnotationUtils.resolveAttribute(annotations, ""resolutionRequired"",",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (StringUtils.hasText(resolutionRequired)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
String resolutionRequiredValue = this.environment.resolvePlaceholders(resolutionRequired);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (StringUtils.hasText(resolutionRequiredValue)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String prefix = MessagingAnnotationUtils.resolveAttribute(annotations, ""prefix"", String.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (StringUtils.hasText(prefix)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String suffix = MessagingAnnotationUtils.resolveAttribute(annotations, ""suffix"", String.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (StringUtils.hasText(suffix)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (!ObjectUtils.isEmpty(channelMappings)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
StringBuilder mappings = new StringBuilder();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"Properties properties = (Properties) this.conversionService.convert(mappings.toString(),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private boolean routerAttributesProvided(List<Annotation> annotations) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String defaultOutputChannel = MessagingAnnotationUtils.resolveAttribute(annotations, ""defaultOutputChannel"",",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
return StringUtils.hasText(defaultOutputChannel) || !ObjectUtils.isEmpty(channelMappings),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
|| StringUtils.hasText(applySequence) || StringUtils.hasText(ignoreSendFailures);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"String defaultOutputChannelName = MessagingAnnotationUtils.resolveAttribute(annotations, ""defaultOutputChannel"",",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (StringUtils.hasText(defaultOutputChannelName)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
MessageChannel defaultOutputChannel = this.channelResolver.resolveDestination(defaultOutputChannelName);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
private volatile String requestChannelName;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private volatile String replyChannelName;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private volatile String errorChannelName;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"* always use an anonymous, temporary channel for handling replies.",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"* propagate Exceptions to the caller. To completely suppress Exceptions, provide",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.requestChannelName != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"+ this.requestChannelName + ""' in the BeanFactory."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.replyChannelName != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"+ this.replyChannelName + ""' in the BeanFactory."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.errorChannelName != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"+ this.errorChannelName + ""' in the BeanFactory."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
MessageChannel requestChannel = getRequestChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
MessageChannel errorChannel = getErrorChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (errorChannel != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
MessageChannel replyChannel = getReplyChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"Assert.state(replyChannel != null && (replyChannel instanceof PollableChannel),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (requestChannel == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"reply = this.messagingTemplate.convertSendAndReceive(requestChannel, object, null,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"reply = this.messagingTemplate.sendAndReceive(requestChannel, requestMessage);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"throw new MessagingException(errorMessage, ""failure occurred in error-handling flow"",",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.errorChannel != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (this.requestChannel == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
"reply = this.messagingTemplate.convertSendAndReceive(this.requestChannel, object, null, this.historyWritingPostProcessor);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
"reply = this.messagingTemplate.sendAndReceive(this.requestChannel, requestMessage);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
"throw new MessagingException(errorMessage, ""failure occurred in error-handling flow"", errorFlowFailure);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
protected Mono<Message<?>> sendAndReceiveMessageReactive(Object object) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"Assert.notNull(object, ""request must not be null"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
MessageChannel requestChannel = getRequestChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (requestChannel == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"private Mono<Message<?>> doSendAndReceiveMessageReactive(MessageChannel requestChannel, Object object,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
return Mono.defer(() -> {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
message = this.historyWritingPostProcessor.postProcessMessage(message);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
Object originalReplyChannelHeader = message.getHeaders().getReplyChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
Object originalErrorChannelHeader = message.getHeaders().getErrorChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
FutureReplyChannel replyChannel = new FutureReplyChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
boolean sent =,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (!sent) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (!error && this.countsEnabled) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"private Mono<Message<?>> handleSendError(Message<?> requestMessage, Throwable exception) {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (logger.isDebugEnabled()) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
MessageChannel errorChannel = getErrorChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (errorChannel != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"throw new MessagingException(errorMessage, ""failure occurred in error-handling flow"", errorFlowFailure);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private long sendTimeout(Message<?> requestMessage) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
return (sendTimeout != null ? sendTimeout : this.messagingTemplate.getSendTimeout());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private long receiveTimeout(Message<?> requestMessage) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
return (receiveTimeout != null ? receiveTimeout : this.messagingTemplate.getReceiveTimeout());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"return new MessagingException(description, t);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
MessageChannel replyChannel = getReplyChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.replyMessageCorrelator != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
BridgeHandler handler = new BridgeHandler();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (getBeanFactory() != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
ReactiveStreamsConsumer endpoint =,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (shouldStartCorrelator && isRunning()) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (isRunning()) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
"public boolean send(Message<?> message, long timeout) {",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
MessageChannel replyChannel = getReplyChannel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (this.replyMessageCorrelator != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
AbstractEndpoint correlator = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
BridgeHandler handler = new BridgeHandler();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (this.getBeanFactory() != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
private ClassLoader beanClassLoader = ClassUtils.getDefaultClassLoader();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private long maxMessagesPerPoll = -1;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
protected boolean isReactive() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
protected Flux<Message<?>> getPollingFlux() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (!this.initialized) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (isReactive()) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private Callable<Message<?>> createPollingTask() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private Runnable createPoller() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
int count = 0;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (pollForMessage() == null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private Flux<Message<?>> createFluxGenerator() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
SimpleTriggerContext triggerContext = new SimpleTriggerContext();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (date != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
Message<?> message = pollForMessage();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (message != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private Message<?> pollForMessage() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.transactionSynchronizationFactory != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
Object resource = TransactionSynchronizationManager.getResource(getResourceToBind());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
Object resource = getResourceToBind();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (TransactionSynchronizationManager.hasResource(resource)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private Message<?> doPoll() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
message = receiveMessage();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (!isReactive()) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.runningTask != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
if (this.subscription != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private ClassLoader beanClassLoader = ClassUtils.getDefaultClassLoader();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
private long maxMessagesPerPoll = -1;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
return new Poller(pollingTask);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (!this.initialized) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
"throw new MessagingException(""Failed to create Poller"", e);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (this.runningTask != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
private boolean doPoll() {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
Message<?> message = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
message = this.receiveMessage();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
* Default Poller implementation,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
private final Callable<Boolean> pollingTask;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
int count = 0;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
&& (AbstractPollingEndpoint.this.maxMessagesPerPoll <= 0,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (!Poller.this.pollingTask.call()) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (AbstractPollingEndpoint.this.transactionSynchronizationFactory != null) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
Object resource = TransactionSynchronizationManager.getResource(getResourceToBind());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
Object resource = getResourceToBind();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
if (TransactionSynchronizationManager.hasResource(resource)) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
private long replyTimeout = IntegrationContextUtils.DEFAULT_TIMEOUT;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,0
private long replyTimeout = DEFAULT_TIMEOUT;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,2,1
* Copyright 2002-2012 the original author or authors.,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
*,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
* Copyright 2002-2010 the original author or authors.,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
*,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
return id;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
import java.util.List;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
* @author Gary Russell,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
* @author Artem Bilan,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
MethodInvokingReleaseStrategy releaseStrategy = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
MethodInvokingCorrelationStrategy correlationStrategy = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Long sendTimeout = MessagingAnnotationUtils.resolveAttribute(annotations, ""sendTimeout"", Long.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Boolean sendPartialResultsOnExpiry = MessagingAnnotationUtils.resolveAttribute(annotations,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import java.util.concurrent.atomic.AtomicReference;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
import org.springframework.core.annotation.AnnotationUtils;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
import org.springframework.util.ReflectionUtils;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
MethodInvokingReleaseStrategy releaseStrategy = getReleaseStrategy(bean);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
MethodInvokingCorrelationStrategy correlationStrategy = getCorrelationStrategy(bean);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
return reference.get();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
import java.util.Properties;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.context.annotation.Bean;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.core.annotation.AnnotatedElementUtils;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.core.convert.TypeDescriptor;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.integration.router.AbstractMessageRouter;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.util.ObjectUtils;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
* @author Artem Bilan,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
AbstractMessageRouter router;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"+ ""'applySequence', 'ignoreSendFailures', 'resolutionRequired' and 'channelMappings' """,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"+ ""can be applied to 'AbstractMessageRouter' implementations, but target handler is: """,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
+ target.getClass());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return (MessageHandler) target;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
else {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"String[] channelMappings = MessagingAnnotationUtils.resolveAttribute(annotations, ""channelMappings"",",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
for (String channelMapping : channelMappings) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.messaging.MessageChannel;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
List<Annotation> annotations) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
import org.springframework.beans.BeansException;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.messaging.core.DestinationResolutionException;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
new HistoryWritingMessagePostProcessor();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
* @since 4.1,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Assert.hasText(requestChannelName, ""'requestChannelName' must not be empty"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.requestChannelName = requestChannelName;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Assert.hasText(replyChannelName, ""'replyChannelName' must not be empty"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.replyChannelName = replyChannelName;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"* a reference to the ""nullChannel"" here.",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Assert.hasText(errorChannelName, ""'errorChannelName' must not be empty"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.errorChannelName = errorChannelName;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Assert.state(!(this.requestChannelName != null && this.requestChannel != null),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Assert.state(!(this.replyChannelName != null && this.replyChannel != null),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Assert.state(!(this.errorChannelName != null && this.errorChannel != null),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
synchronized (this) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
try {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"this.requestChannel = getBeanFactory().getBean(this.requestChannelName, MessageChannel.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.requestChannelName = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
catch (BeansException e) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return this.requestChannel;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"this.replyChannel = getBeanFactory().getBean(this.replyChannelName, MessageChannel.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.replyChannelName = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return this.replyChannel;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"this.errorChannel = getBeanFactory().getBean(this.errorChannelName, MessageChannel.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.errorChannelName = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return this.errorChannel;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"this.messagingTemplate.send(errorChannel, new ErrorMessage(e));",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"return this.messagingTemplate.receiveAndConvert(replyChannel, null);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"errorFlowReply = this.messagingTemplate.sendAndReceive(errorChannel, errorMessage);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
else {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"+ ""SubscribableChannel or PollableChannel type are supported."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
*,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"this.messagingTemplate.send(this.errorChannel, new ErrorMessage(e));",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"return this.messagingTemplate.receiveAndConvert((PollableChannel) this.replyChannel, null);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"errorFlowReply = this.messagingTemplate.sendAndReceive(this.errorChannel, errorMessage);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
import java.util.concurrent.CompletableFuture;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.reactivestreams.Subscriber;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.integration.channel.ReactiveStreamsSubscribableChannel;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.integration.endpoint.ReactiveStreamsConsumer;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.integration.mapping.MessageMappingException;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.integration.support.MutableMessageBuilder;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.lang.Nullable;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.messaging.MessageDeliveryException;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.messaging.MessageHeaders;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.messaging.support.MessageBuilder;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import reactor.core.publisher.Mono;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"return doSendAndReceiveMessageReactive(requestChannel, object, false);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
boolean error) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
try {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
catch (Exception e) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
Message<?> requestMessage = MutableMessageBuilder.fromMessage(message),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
else {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
long sendTimeout = sendTimeout(requestMessage);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
sendTimeout >= 0,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"throw new MessageDeliveryException(requestMessage,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"""' within timeout: "" + sendTimeout);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return Mono.fromFuture(replyChannel.messageFuture),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
.doOnSubscribe(s -> {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"ErrorMessage errorMessage = buildErrorMessage(requestMessage, exception);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"return doSendAndReceiveMessageReactive(errorChannel, errorMessage, true);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
catch (Exception errorFlowFailure) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
Long sendTimeout = headerToLong(requestMessage.getHeaders(),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
Long receiveTimeout = headerToLong(requestMessage.getHeaders(),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return ((Number) headerValue).longValue();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return Long.parseLong((String) headerValue);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"return this.errorMessageStrategy.buildErrorMessage(throwable, getErrorMessageAttributes(requestMessage));",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return (RuntimeException) t;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
synchronized (this.replyMessageCorrelatorMonitor) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
endpoint.afterPropertiesSet();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"new ReactiveStreamsConsumer(replyChannel, (Subscriber<Message<?>>) handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"+ ""SubscribableChannel or PollableChannel type are supported."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.replyMessageCorrelator = correlator;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
shouldStartCorrelator = true;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return this.messageFuture.complete(message);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"ErrorMessage errorMessage = this.errorMessageStrategy.buildErrorMessage(throwable,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
return errorMessage;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"throw new MessagingException(description, t);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
synchronized (this.replyMessageCorrelatorMonitor) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
return;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
endpoint.afterPropertiesSet();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
else {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"+ ""SubscribableChannel or PollableChannel type are supported."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
this.replyMessageCorrelator = correlator;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
import java.time.Duration;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import java.util.Date;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.reactivestreams.Subscription;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import org.springframework.scheduling.support.SimpleTriggerContext;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import reactor.core.publisher.Flux;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import reactor.core.publisher.Mono;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
import reactor.core.scheduler.Schedulers;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
private TransactionSynchronizationFactory transactionSynchronizationFactory;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
private volatile Callable<Message<?>> pollingTask;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
private volatile Flux<Message<?>> pollingFlux;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
private volatile Subscription subscription;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
private volatile ScheduledFuture<?> runningTask;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return false;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return this.pollingFlux;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.pollingTask = createPollingTask();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.pollingFlux = createFluxGenerator();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
else {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"Assert.state(getTaskScheduler() != null, ""unable to start polling, no taskScheduler available"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.runningTask =,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
Callable<Message<?>> pollingTask = this::doPoll;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
pollingTask = (Callable<Message<?>>) proxyFactory.getProxy(this.beanClassLoader);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return pollingTask;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return () ->,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.taskExecutor.execute(() -> {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return Flux,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
.<Duration>generate(sink -> {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
Date date = this.trigger.nextExecutionTime(triggerContext);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
long millis = date.getTime() - System.currentTimeMillis();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"new Date(), null))",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
.<Message<?>>generate(fluxSink -> {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
new Date()),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
.doOnSubscribe(subscription -> this.subscription = subscription);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return this.pollingTask.call();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
Message<?> failedMessage = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
failedMessage = ((IntegrationResourceHolder) resource).getMessage();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"throw new MessagingException(failedMessage, e);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
finally {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"IntegrationResourceHolder holder = bindResourceHolderIfNecessary(getResourceKey(), getResourceToBind());",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
try {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
catch (Exception e) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"throw new MessagingExceptionWrapper(message, (MessagingException) e);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
"throw new MessagingException(message, e);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
return message;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
this.runningTask = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
private TransactionSynchronizationFactory transactionSynchronizationFactory;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
private volatile ScheduledFuture<?> runningTask;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
private volatile Runnable poller;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
Callable<Boolean> pollingTask = this::doPoll;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
pollingTask = (Callable<Boolean>) proxyFactory.getProxy(this.beanClassLoader);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
},27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"""unable to start polling, no taskScheduler available"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
this.poller = createPoller();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
this.initialized = false;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"this.runningTask = this.getTaskScheduler().schedule(this.poller, this.trigger);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
this.runningTask = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
IntegrationResourceHolder holder = this.bindResourceHolderIfNecessary(,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
return false;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
result = false;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
try {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
catch (Exception e) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"throw new MessagingExceptionWrapper(message, (MessagingException) e);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
else {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"throw new MessagingException(message, e);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
result = true;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
return result;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
Poller(Callable<Boolean> pollingTask) {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
this.pollingTask = pollingTask;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
AbstractPollingEndpoint.this.taskExecutor.execute(() -> {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
while (AbstractPollingEndpoint.this.initialized,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
Message<?> failedMessage = null;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
failedMessage = ((IntegrationResourceHolder) resource).getMessage();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
"throw new MessagingException(failedMessage, e);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
finally {,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,1
import org.springframework.integration.context.IntegrationContextUtils;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,1,0
@Override,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"correlationStrategy, releaseStrategy);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
handler.setSendTimeout(sendTimeout);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"""sendPartialResultsOnExpiry"", Boolean.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
handler.setSendPartialResultOnExpiry(sendPartialResultsOnExpiry);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
handler.setSendTimeout(annotation.sendTimeout());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
handler.setSendPartialResultOnExpiry(annotation.sendPartialResultsOnExpiry());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
@Override,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"reference.set(new MethodInvokingReleaseStrategy(bean, method));",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
});,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"reference.set(new MethodInvokingCorrelationStrategy(bean, method));",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"Assert.isTrue(this.routerAttributesProvided(annotations), ""'defaultOutputChannel', """,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"""defaultOutputChannel"", String.class);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
router.setDefaultOutputChannelName(defaultOutputChannelName);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
router.setApplySequence(Boolean.parseBoolean(this.environment.resolvePlaceholders(applySequence)));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
router.setIgnoreSendFailures(Boolean.parseBoolean(this.environment.resolvePlaceholders(ignoreSendFailures)));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
String.class);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
methodInvokingRouter.setResolutionRequired(Boolean.parseBoolean(resolutionRequiredValue));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
methodInvokingRouter.setPrefix(this.environment.resolvePlaceholders(prefix));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
methodInvokingRouter.setSuffix(this.environment.resolvePlaceholders(suffix));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
String[].class);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"mappings.append(channelMapping).append(""\n"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"TypeDescriptor.valueOf(String.class), TypeDescriptor.valueOf(Properties.class));",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
methodInvokingRouter.replaceChannelMappings(properties);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
router.setBeanFactory(this.beanFactory);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
router.setDefaultOutputChannel(defaultOutputChannel);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
/**,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
*/,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"""'requestChannelName' and 'requestChannel' are mutually exclusive."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"""'replyChannelName' and 'replyChannel' are mutually exclusive."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"""'errorChannelName' and 'errorChannel' are mutually exclusive."");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"Assert.state(getBeanFactory() != null,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"Assert.state(requestChannel != null,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"this.messagingTemplate.convertAndSend(requestChannel, object, this.historyWritingPostProcessor);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
this.historyWritingPostProcessor);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
errorFlowFailure);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"Assert.state(this.requestChannel != null,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"this.messagingTemplate.convertAndSend(this.requestChannel, object, this.historyWritingPostProcessor);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"(SubscribableChannel) this.replyChannel, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"(PollableChannel) this.replyChannel, handler);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
registerReplyMessageCorrelatorIfNecessary();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
initializeIfNecessary();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"@SuppressWarnings(""unchecked"")",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
Message<?> message;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
? (Message<?>) object,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
: this.requestMapper.toMessage(object);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.setReplyChannel(replyChannel),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
".setHeader(this.messagingTemplate.getSendTimeoutHeader(), null)",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
".setHeader(this.messagingTemplate.getReceiveTimeoutHeader(), null)",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.setErrorChannel(replyChannel),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.build();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
((ReactiveStreamsSubscribableChannel) requestChannel),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.subscribeTo(Mono.just(requestMessage));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"? requestChannel.send(requestMessage, sendTimeout)",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
: requestChannel.send(requestMessage);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
this.messageCount.incrementAndGet();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
}),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.<Message<?>>map(replyMessage ->,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
MessageBuilder.fromMessage(replyMessage),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
".setHeader(MessageHeaders.REPLY_CHANNEL, originalReplyChannelHeader)",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
".setHeader(MessageHeaders.ERROR_CHANNEL, originalErrorChannelHeader)",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.build()),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
".onErrorResume(t -> error ? Mono.error(t) : handleSendError(requestMessage, t));",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
});,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
// no errorChannel so we'll propagate,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"throw wrapExceptionIfNecessary(exception, ""gateway received checked Exception"");",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.get(this.messagingTemplate.getSendTimeoutHeader()));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.get(this.messagingTemplate.getReceiveTimeoutHeader()));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
@Nullable,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"throw wrapExceptionIfNecessary(t, description);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
boolean shouldStartCorrelator;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
AbstractEndpoint correlator;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
handler.setBeanFactory(getBeanFactory());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
handler.afterPropertiesSet();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
endpoint.setBeanFactory(getBeanFactory());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
endpoint.setReceiveTimeout(this.replyTimeout);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
this.replyMessageCorrelator.start();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
@Override,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
this.registerReplyMessageCorrelator();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
getErrorMessageAttributes(requestMessage));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
throw (RuntimeException) t;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
handler.setBeanFactory(this.getBeanFactory());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
handler.afterPropertiesSet();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
endpoint.setBeanFactory(this.getBeanFactory());,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
endpoint.setReceiveTimeout(this.replyTimeout);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
correlator.start();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
// LifecycleSupport implementation,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
@Override // guarded by super#lifecycleLock,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
onInit();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
getTaskScheduler(),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
".schedule(createPoller(), this.trigger);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
break;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
count++;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
});,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"triggerContext.update(date, null, null);",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
sink.next(Duration.ofMillis(millis));,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
sink.complete();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
}),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.concatMap(duration ->,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
Mono.delay(duration),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.doOnNext(l ->,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"triggerContext.update(triggerContext.lastScheduledExecutionTime(),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.flatMapMany(l ->,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
Flux,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
fluxSink.next(message);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
fluxSink.complete();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.take(this.maxMessagesPerPoll),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.subscribeOn(Schedulers.fromExecutor(this.taskExecutor)),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.doOnComplete(() ->,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
"triggerContext.lastActualExecutionTime(),",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
")), 1)",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
.repeat(this::isRunning),27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
throw (MessagingException) e;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
TransactionSynchronizationManager.unbindResource(resource);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
Message<?> message;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
handleMessage(message);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
this.runningTask.cancel(true);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
this.subscription.cancel();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
// LifecycleSupport implementation,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
@Override // guarded by super#lifecycleLock,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
this.onInit();,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"Assert.state(this.getTaskScheduler() != null,",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
this.runningTask.cancel(true);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
"this.getResourceKey(), this.getResourceToBind());",27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
boolean result;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
this.handleMessage(message);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
/**,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
*/,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
@Override,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
break;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
count++;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
throw (MessagingException) e;,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
TransactionSynchronizationManager.unbindResource(resource);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
});,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
template.setSendTimeout(IntegrationContextUtils.DEFAULT_TIMEOUT);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,0
template.setSendTimeout(DEFAULT_TIMEOUT);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
endpoint.setReceiveTimeout(this.replyTimeout);,27e288be08d4ccdf4bbb3e6a5bb3776963b1dfed,0,1
* @param annotations The messaging annotation (or meta-annotation hierarchy) on the method.,6c4245f3ca5dab4bb691423317ea8b8806148dd5,4,0
MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,4,0
MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,4,1
private final MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,4,0
MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,4,1
MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,4,1
MessagingAnnotationPostProcessor postProcessor = new MessagingAnnotationPostProcessor();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,4,1
MessagingAnnotationPostProcessor postProcessor = prepareMessagingAnnotationPostProcessor(context);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,3,0
"AbstractApplicationContext context = new ClassPathXmlApplicationContext(""simpleAnnotatedEndpointTests.xml"",",6c4245f3ca5dab4bb691423317ea8b8806148dd5,3,1
MessagingAnnotationPostProcessor postProcessor =,6c4245f3ca5dab4bb691423317ea8b8806148dd5,3,1
TestEndpoint endpoint = new TestEndpoint();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,3,1
FailingTestEndpoint endpoint = new FailingTestEndpoint();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,3,1
this.conversionService = new DefaultConversionService();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
boolean handlerExists = false;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
Object handlerBean = this.resolveTargetBeanFromMethodWithBeanAnnotation(method);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
boolean createEndpoint = StringUtils.hasText(inputChannel);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
"boolean isBean = AnnotatedElementUtils.isAnnotated(method, Bean.class.getName());",6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
"Assert.isTrue(!isBean, ""A channel name in '"" + getInputChannelAttribute() + ""' is required when "" + this.annotationType +",6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
protected boolean beanAnnotationAware() {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
"protected AbstractEndpoint doCreateEndpoint(MessageHandler handler, MessageChannel inputChannel,List<Annotation> annotations) {",6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
protected Object resolveTargetBeanFromMethodWithBeanAnnotation(Method method) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
} catch (Exception e) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
import org.springframework.beans.factory.BeanFactory;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,1
import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
AbstractApplicationContext context =,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
"GenericMessage<String> messageToSend = new GenericMessage<>(""world"");",6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
"GenericMessage<String> messageToSend = new GenericMessage<String>(""world"");",6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,1
private static MessagingAnnotationPostProcessor prepareMessagingAnnotationPostProcessor(,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,1
public void testPostProcessorWithoutBeanFactory() {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,1
* Copyright 2002-2022 the original author or authors.,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
* Copyright 2002-2019 the original author or authors.,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,1
* Copyright 2002-2023 the original author or authors.,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
* Copyright 2002-2022 the original author or authors.,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,1
* Copyright 2002-2023 the original author or authors.,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,0
* Copyright 2002-2022 the original author or authors.,6c4245f3ca5dab4bb691423317ea8b8806148dd5,2,1
import org.springframework.aop.TargetSource;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.springframework.aop.framework.Advised;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.springframework.context.annotation.Bean;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.springframework.core.annotation.AnnotatedElementUtils;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.springframework.core.convert.ConversionService;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.springframework.core.convert.support.DefaultConversionService;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"Assert.notNull(beanFactory, ""'beanFactory' must not be null"");",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
this.beanFactory = (ConfigurableListableBeanFactory) beanFactory;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
ConversionService conversionService = this.beanFactory.getConversionService();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (conversionService != null) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
this.conversionService = conversionService;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
},6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
else {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"if (this.beanAnnotationAware() && AnnotatedElementUtils.isAnnotated(method, Bean.class.getName())) {",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
handlerExists = handlerBean != null && handler == handlerBean;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (!handlerExists) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"handler = (MessageHandler) this.beanFactory.initializeBean(handler, handlerBeanName);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (!createEndpoint && beanAnnotationAware()) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
""" is used on '@Bean' methods."");",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"inputChannel = (MessageChannel) this.beanFactory.initializeBean(inputChannel, inputChannelName);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
String id = null;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"String[] names = AnnotationUtils.getAnnotation(method, Bean.class).name();",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (!ObjectUtils.isEmpty(names)) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
id = names[0];,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (!StringUtils.hasText(id)) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
id = method.getName();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"<H> H extractTypeIfPossible(Object targetObject, Class<H> expectedType) {",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (targetObject == null) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (expectedType.isAssignableFrom(targetObject.getClass())) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (targetObject instanceof Advised) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
TargetSource targetSource = ((Advised) targetObject).getTargetSource();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
if (targetSource == null) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
try {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
throw new IllegalStateException(e);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"Assert.notNull(beanFactory, ""BeanFactory must not be null"");",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
this.beanFactory = beanFactory;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
if (beanFactory instanceof ConfigurableListableBeanFactory) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
ConfigurableListableBeanFactory listableBeanFactory = (ConfigurableListableBeanFactory) beanFactory;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
"handler = (MessageHandler) listableBeanFactory.initializeBean(handler, handlerBeanName);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
if (this.beanFactory instanceof ConfigurableListableBeanFactory) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
ConfigurableListableBeanFactory listableBeanFactory = (ConfigurableListableBeanFactory) this.beanFactory;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
"inputChannel = (MessageChannel) listableBeanFactory.initializeBean(inputChannel, inputChannelName);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
},6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
"protected AbstractEndpoint doCreateEndpoint(MessageHandler handler, MessageChannel inputChannel,",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
List<Annotation> annotations) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
import org.springframework.context.ConfigurableApplicationContext;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"new ClassPathXmlApplicationContext(""simpleAnnotatedEndpointTests.xml"", getClass());",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
private MessagingAnnotationPostProcessor prepareMessagingAnnotationPostProcessor(,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
ConfigurableApplicationContext context) {,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
},6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
this,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
@Test(expected = IllegalArgumentException.class),6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
import org.junit.jupiter.api.Test;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.springframework.beans.factory.support.BeanDefinitionRegistry;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.junit.Test;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
new MessagingAnnotationPostProcessor();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
},6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
private MessagingAnnotationPostProcessor prepareMessagingAnnotationPostProcessor(,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
import org.junit.jupiter.api.AfterEach;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.junit.jupiter.api.BeforeEach;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.junit.jupiter.api.Test;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.springframework.beans.factory.support.BeanDefinitionRegistry;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.junit.After;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
import org.junit.Before;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
import org.junit.Test;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
"this.context.registerEndpoint(""testEndpoint"", new TestEndpoint());",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
"this.context.registerEndpoint(""testEndpoint"", new FailingTestEndpoint());",6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,0
import org.springframework.beans.factory.support.BeanDefinitionRegistry;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
import org.springframework.beans.factory.support.BeanDefinitionRegistry;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,1,1
protected final ConfigurableListableBeanFactory beanFactory;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
protected final ConversionService conversionService;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
"Assert.isInstanceOf(ConfigurableListableBeanFactory.class, beanFactory,",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
"""'beanFactory' must be instanceOf ConfigurableListableBeanFactory"");",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
"this.beanFactory.registerSingleton(handlerBeanName, handler);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
return createEndpoint;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
return true;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
"this.beanFactory.registerSingleton(inputChannelName, inputChannel);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
return this.beanFactory.getBean(id);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
"@SuppressWarnings(""unchecked"")",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
return null;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
return (H) targetObject;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
"return extractTypeIfPossible(targetSource.getTarget(), expectedType);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
protected final BeanFactory beanFactory;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
"listableBeanFactory.registerSingleton(handlerBeanName, handler);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
return StringUtils.hasText(inputChannel);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
"listableBeanFactory.registerSingleton(inputChannelName, inputChannel);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
"inputChannel.send(new GenericMessage<>(""world""));",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
"testChannel.send(new GenericMessage<>(""foo""));",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
@Test,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
assertThatIllegalArgumentException(),6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
.isThrownBy(postProcessor::afterPropertiesSet);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
postProcessor.setBeanFactory(context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
postProcessor.afterPropertiesSet();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
postProcessor.afterSingletonsInstantiated();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
return postProcessor;,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
postProcessor.setBeanFactory(context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.afterPropertiesSet();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
"inputChannel.send(new GenericMessage<String>(""world""));",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
.getClass());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
"testChannel.send(new GenericMessage<String>(""foo""));",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.postProcessBeanDefinitionRegistry((BeanDefinitionRegistry) context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
postProcessor.postProcessBeanFactory(context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
@Test,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
assertThatIllegalArgumentException(),6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
.isThrownBy(postProcessor::afterPropertiesSet);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.setBeanFactory(context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.afterPropertiesSet();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
@BeforeEach,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
this.postProcessor.postProcessBeanDefinitionRegistry((BeanDefinitionRegistry) this.context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
this.postProcessor.postProcessBeanFactory(this.context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
this.postProcessor.afterSingletonsInstantiated();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
@AfterEach,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
@Before,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
@After,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.setBeanFactory(context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.afterPropertiesSet();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.afterSingletonsInstantiated();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
this.context.registerBean(MessagingAnnotationPostProcessor.class);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
postProcessor.postProcessBeanDefinitionRegistry((BeanDefinitionRegistry) this.context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.postProcessBeanFactory(this.context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.afterSingletonsInstantiated();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
"postProcessor.postProcessAfterInitialization(endpoint, ""testEndpoint"");",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
this.context.registerBean(MessagingAnnotationPostProcessor.class);,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
"context.registerEndpoint(""testSplitter"", splitter);",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,0
postProcessor.postProcessBeanDefinitionRegistry((BeanDefinitionRegistry) this.context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.postProcessBeanFactory(this.context.getBeanFactory());,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
postProcessor.afterSingletonsInstantiated();,6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
"postProcessor.postProcessAfterInitialization(splitter, ""testSplitter"");",6c4245f3ca5dab4bb691423317ea8b8806148dd5,0,1
* Copyright 2002-2019 the original author or authors.,cb90d396574275e70869b6520cf3b7274af770cf,7,0
* Copyright 2002-2016 the original author or authors.,cb90d396574275e70869b6520cf3b7274af770cf,7,1
"MethodInvokingRouter router = new MethodInvokingRouter(bean, method);",cb90d396574275e70869b6520cf3b7274af770cf,6,1
"router = new MethodInvokingRouter(bean, method);",cb90d396574275e70869b6520cf3b7274af770cf,5,0
public void multiChannelNameResolutionByMessageConfiguredByMethodName() throws Exception {,cb90d396574275e70869b6520cf3b7274af770cf,4,1
"protected MessageHandler createHandler(Object bean, Method method, List<Annotation> annotations) {",cb90d396574275e70869b6520cf3b7274af770cf,3,0
if (router == null) {,cb90d396574275e70869b6520cf3b7274af770cf,3,0
router = new MethodInvokingRouter(target);,cb90d396574275e70869b6520cf3b7274af770cf,3,0
"String prefix = MessagingAnnotationUtils.resolveAttribute(annotations, ""prefix"", String.class);",cb90d396574275e70869b6520cf3b7274af770cf,3,0
for (String channelMapping : channelMappings) {,cb90d396574275e70869b6520cf3b7274af770cf,3,0
public void terDown() {,cb90d396574275e70869b6520cf3b7274af770cf,3,0
private final DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory();,cb90d396574275e70869b6520cf3b7274af770cf,3,1
"Message<String> message = new GenericMessage<>(""bar"");",cb90d396574275e70869b6520cf3b7274af770cf,3,0
public void multiChannelNameResolutionByMessageConfiguredByMethodName() {,cb90d396574275e70869b6520cf3b7274af770cf,3,0
"Message<String> message = new GenericMessage<String>(""bar"");",cb90d396574275e70869b6520cf3b7274af770cf,3,1
"if (AnnotatedElementUtils.isAnnotated(method, Bean.class.getName())) {",cb90d396574275e70869b6520cf3b7274af770cf,2,0
"router = this.extractTypeIfPossible(target, AbstractMessageRouter.class);",cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (target instanceof MessageHandler) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
"String defaultOutputChannelName = MessagingAnnotationUtils.resolveAttribute(annotations,",cb90d396574275e70869b6520cf3b7274af770cf,2,0
"String applySequence = MessagingAnnotationUtils.resolveAttribute(annotations, ""applySequence"", String.class);",cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (StringUtils.hasText(applySequence)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
"String ignoreSendFailures = MessagingAnnotationUtils.resolveAttribute(annotations, ""ignoreSendFailures"",",cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (StringUtils.hasText(ignoreSendFailures)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (this.routerAttributesProvided(annotations)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
MethodInvokingRouter methodInvokingRouter = (MethodInvokingRouter) router;,cb90d396574275e70869b6520cf3b7274af770cf,2,0
"String resolutionRequired = MessagingAnnotationUtils.resolveAttribute(annotations, ""resolutionRequired"",",cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (StringUtils.hasText(resolutionRequired)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
String resolutionRequiredValue = this.environment.resolvePlaceholders(resolutionRequired);,cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (StringUtils.hasText(resolutionRequiredValue)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (StringUtils.hasText(prefix)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
"String suffix = MessagingAnnotationUtils.resolveAttribute(annotations, ""suffix"", String.class);",cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (StringUtils.hasText(suffix)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
"String[] channelMappings = MessagingAnnotationUtils.resolveAttribute(annotations, ""channelMappings"",",cb90d396574275e70869b6520cf3b7274af770cf,2,0
if (!ObjectUtils.isEmpty(channelMappings)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,0
StringBuilder mappings = new StringBuilder();,cb90d396574275e70869b6520cf3b7274af770cf,2,0
"Properties properties = (Properties) this.conversionService.convert(mappings.toString(),",cb90d396574275e70869b6520cf3b7274af770cf,2,0
"String defaultOutputChannel = MessagingAnnotationUtils.resolveAttribute(annotations, ""defaultOutputChannel"",",cb90d396574275e70869b6520cf3b7274af770cf,2,0
"protected MessageHandler createHandler(Object bean, Method method,",cb90d396574275e70869b6520cf3b7274af770cf,2,1
"String defaultOutputChannelName = MessagingAnnotationUtils.resolveAttribute(annotations, ""defaultOutputChannel"",",cb90d396574275e70869b6520cf3b7274af770cf,2,1
if (StringUtils.hasText(defaultOutputChannelName)) {,cb90d396574275e70869b6520cf3b7274af770cf,2,1
MessageChannel defaultOutputChannel = this.channelResolver.resolveDestination(defaultOutputChannelName);,cb90d396574275e70869b6520cf3b7274af770cf,2,1
private final TestUtils.TestApplicationContext context = TestUtils.createTestApplicationContext();,cb90d396574275e70869b6520cf3b7274af770cf,2,0
"Message<?> failedMessage = new GenericMessage<>(""foo"");",cb90d396574275e70869b6520cf3b7274af770cf,2,0
"Message<?> failedMessage = new GenericMessage<String>(""foo"");",cb90d396574275e70869b6520cf3b7274af770cf,2,1
"MessageHandlingException error = new MessageRejectedException(new GenericMessage<Object>(""foo""), ""failed"", rootCause);",cb90d396574275e70869b6520cf3b7274af770cf,2,1
import org.springframework.beans.factory.BeanFactory;,cb90d396574275e70869b6520cf3b7274af770cf,2,0
"Message<String> fooMessage = new GenericMessage<>(""foo"");",cb90d396574275e70869b6520cf3b7274af770cf,2,0
"Message<String> barMessage = new GenericMessage<>(""bar"");",cb90d396574275e70869b6520cf3b7274af770cf,2,0
"Message<String> badMessage = new GenericMessage<>(""bad"");",cb90d396574275e70869b6520cf3b7274af770cf,2,0
"Message<String> fooMessage = new GenericMessage<String>(""foo"");",cb90d396574275e70869b6520cf3b7274af770cf,2,1
"Message<String> barMessage = new GenericMessage<String>(""bar"");",cb90d396574275e70869b6520cf3b7274af770cf,2,1
"Message<String> badMessage = new GenericMessage<String>(""bad"");",cb90d396574275e70869b6520cf3b7274af770cf,2,1
import java.util.Properties;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
import org.springframework.context.annotation.Bean;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
import org.springframework.core.annotation.AnnotatedElementUtils;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
import org.springframework.core.convert.TypeDescriptor;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
import org.springframework.integration.router.AbstractMessageRouter;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
import org.springframework.util.ObjectUtils;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
* @author Artem Bilan,cb90d396574275e70869b6520cf3b7274af770cf,1,0
Object target = this.resolveTargetBeanFromMethodWithBeanAnnotation(method);,cb90d396574275e70869b6520cf3b7274af770cf,1,0
return (MessageHandler) target;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
},cb90d396574275e70869b6520cf3b7274af770cf,1,0
else {,cb90d396574275e70869b6520cf3b7274af770cf,1,0
return router;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
private boolean routerAttributesProvided(List<Annotation> annotations) {,cb90d396574275e70869b6520cf3b7274af770cf,1,0
return StringUtils.hasText(defaultOutputChannel) || !ObjectUtils.isEmpty(channelMappings),cb90d396574275e70869b6520cf3b7274af770cf,1,0
import org.springframework.messaging.MessageChannel;,cb90d396574275e70869b6520cf3b7274af770cf,1,1
List<Annotation> annotations) {,cb90d396574275e70869b6520cf3b7274af770cf,1,1
"Assert.notNull(defaultOutputChannel, ""unable to resolve defaultOutputChannel '"" + defaultOutputChannelName + ""'"");",cb90d396574275e70869b6520cf3b7274af770cf,1,1
import org.junit.After;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
},cb90d396574275e70869b6520cf3b7274af770cf,1,0
MessageHandlingException error =,cb90d396574275e70869b6520cf3b7274af770cf,1,0
"new MessageRejectedException(new GenericMessage<Object>(""foo""), ""failed"", rootCause);",cb90d396574275e70869b6520cf3b7274af770cf,1,0
import org.springframework.beans.factory.support.DefaultListableBeanFactory;,cb90d396574275e70869b6520cf3b7274af770cf,1,1
"beanFactory.registerSingleton(""runtimeExceptionChannel"", runtimeExceptionChannel);",cb90d396574275e70869b6520cf3b7274af770cf,1,1
"beanFactory.registerSingleton(""messageHandlingExceptionChannel"", messageHandlingExceptionChannel);",cb90d396574275e70869b6520cf3b7274af770cf,1,1
import static org.mockito.Mockito.mock;,cb90d396574275e70869b6520cf3b7274af770cf,1,0
router.afterPropertiesSet();,cb90d396574275e70869b6520cf3b7274af770cf,1,0
AbstractMessageRouter router;,cb90d396574275e70869b6520cf3b7274af770cf,0,0
"Assert.isTrue(this.routerAttributesProvided(annotations), ""'defaultOutputChannel', """,cb90d396574275e70869b6520cf3b7274af770cf,0,0
"+ ""'applySequence', 'ignoreSendFailures', 'resolutionRequired' and 'channelMappings' """,cb90d396574275e70869b6520cf3b7274af770cf,0,0
"+ ""can be applied to 'AbstractMessageRouter' implementations, but target handler is: """,cb90d396574275e70869b6520cf3b7274af770cf,0,0
+ target.getClass());,cb90d396574275e70869b6520cf3b7274af770cf,0,0
"""defaultOutputChannel"", String.class);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
router.setDefaultOutputChannelName(defaultOutputChannelName);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
router.setApplySequence(Boolean.parseBoolean(this.environment.resolvePlaceholders(applySequence)));,cb90d396574275e70869b6520cf3b7274af770cf,0,0
router.setIgnoreSendFailures(Boolean.parseBoolean(this.environment.resolvePlaceholders(ignoreSendFailures)));,cb90d396574275e70869b6520cf3b7274af770cf,0,0
String.class);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
methodInvokingRouter.setResolutionRequired(Boolean.parseBoolean(resolutionRequiredValue));,cb90d396574275e70869b6520cf3b7274af770cf,0,0
methodInvokingRouter.setPrefix(this.environment.resolvePlaceholders(prefix));,cb90d396574275e70869b6520cf3b7274af770cf,0,0
methodInvokingRouter.setSuffix(this.environment.resolvePlaceholders(suffix));,cb90d396574275e70869b6520cf3b7274af770cf,0,0
String[].class);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
"mappings.append(channelMapping).append(""\n"");",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"TypeDescriptor.valueOf(String.class), TypeDescriptor.valueOf(Properties.class));",cb90d396574275e70869b6520cf3b7274af770cf,0,0
methodInvokingRouter.replaceChannelMappings(properties);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
|| StringUtils.hasText(prefix) || StringUtils.hasText(suffix) || StringUtils.hasText(resolutionRequired),cb90d396574275e70869b6520cf3b7274af770cf,0,0
|| StringUtils.hasText(applySequence) || StringUtils.hasText(ignoreSendFailures);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
router.setBeanFactory(this.beanFactory);,cb90d396574275e70869b6520cf3b7274af770cf,0,1
router.setDefaultOutputChannel(defaultOutputChannel);,cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.context.registerBean(""illegalArgumentChannel"", this.illegalArgumentChannel);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"this.context.registerBean(""runtimeExceptionChannel"", this.runtimeExceptionChannel);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"this.context.registerBean(""messageHandlingExceptionChannel"", this.messageHandlingExceptionChannel);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"this.context.registerBean(""messageDeliveryExceptionChannel"", this.messageDeliveryExceptionChannel);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"this.context.registerBean(""defaultChannel"", this.defaultChannel);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
this.context.refresh();,cb90d396574275e70869b6520cf3b7274af770cf,0,0
@After,cb90d396574275e70869b6520cf3b7274af770cf,0,0
this.context.close();,cb90d396574275e70869b6520cf3b7274af770cf,0,0
router.setBeanFactory(this.context);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
router.setApplicationContext(this.context);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
router.setDefaultOutputChannel(this.defaultChannel);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
ctx.getBean(ErrorMessageExceptionTypeRouter.class),cb90d396574275e70869b6520cf3b7274af770cf,0,0
.handleMessage(new GenericMessage<>(new NullPointerException()));,cb90d396574275e70869b6520cf3b7274af770cf,0,0
"beanFactory.registerSingleton(""illegalArgumentChannel"", illegalArgumentChannel);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"beanFactory.registerSingleton(""messageDeliveryExceptionChannel"", messageDeliveryExceptionChannel);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"beanFactory.registerSingleton(""defaultChannel"", defaultChannel);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
router.setBeanFactory(beanFactory);,cb90d396574275e70869b6520cf3b7274af770cf,0,1
router.setApplicationContext(TestUtils.createTestApplicationContext());,cb90d396574275e70869b6520cf3b7274af770cf,0,1
router.setDefaultOutputChannel(defaultChannel);,cb90d396574275e70869b6520cf3b7274af770cf,0,1
ctx.getBean(ErrorMessageExceptionTypeRouter.class).handleMessage(new GenericMessage<>(new NullPointerException()));,cb90d396574275e70869b6520cf3b7274af770cf,0,1
router.setBeanFactory(mock(BeanFactory.class));,cb90d396574275e70869b6520cf3b7274af770cf,0,0
doTestChannelNameResolutionByMessage(router);,cb90d396574275e70869b6520cf3b7274af770cf,0,0
"doTestChannelInstanceResolutionByPayload(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"doTestChannelInstanceResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"doTestMultiChannelNameResolutionByPayload(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"doTestMultiChannelNameResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"doTestMultiChannelNameArrayResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"doTestMultiChannelListResolutionByPayload(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"doTestMultiChannelListResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
"doTestMultiChannelArrayResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,0
this.doTestChannelNameResolutionByMessage(router);,cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.doTestChannelInstanceResolutionByPayload(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.doTestChannelInstanceResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.doTestMultiChannelNameResolutionByPayload(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.doTestMultiChannelNameResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.doTestMultiChannelNameArrayResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.doTestMultiChannelListResolutionByPayload(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.doTestMultiChannelListResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"this.doTestMultiChannelArrayResolutionByMessage(router, channelResolver);",cb90d396574275e70869b6520cf3b7274af770cf,0,1
"PollableChannel output = (PollableChannel) context.getBean(""output"");",998ca827d79e414350aaba9154504c1c6dc39aa1,5,0
"PollableChannel output = (PollableChannel) context.getBean(""output"");",998ca827d79e414350aaba9154504c1c6dc39aa1,5,1
* Parser for the &lt;inbound-channel-adapter/&gt; element of the 'jms' namespace.,998ca827d79e414350aaba9154504c1c6dc39aa1,4,0
* Parser for the &lt;inbound-channel-adapter/&gt; element of the 'jms' namespace.,998ca827d79e414350aaba9154504c1c6dc39aa1,4,1
"PollableChannel output = (PollableChannel) context.getBean(""output1"");",998ca827d79e414350aaba9154504c1c6dc39aa1,4,0
"PollableChannel output = (PollableChannel) context.getBean(""output2"");",998ca827d79e414350aaba9154504c1c6dc39aa1,4,0
"PollableChannel output = (PollableChannel) context.getBean(""output1"");",998ca827d79e414350aaba9154504c1c6dc39aa1,4,1
"PollableChannel output = (PollableChannel) context.getBean(""output2"");",998ca827d79e414350aaba9154504c1c6dc39aa1,4,1
try (ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(,998ca827d79e414350aaba9154504c1c6dc39aa1,3,0
ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(,998ca827d79e414350aaba9154504c1c6dc39aa1,3,1
"String beanName = BeanDefinitionReaderUtils.generateBeanName(beanDefinition, parserContext.getRegistry());",998ca827d79e414350aaba9154504c1c6dc39aa1,2,1
JmsDestinationPollingSource jmsDestinationPollingSource = context,998ca827d79e414350aaba9154504c1c6dc39aa1,2,0
import org.springframework.beans.factory.support.BeanDefinitionReaderUtils;,998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
BeanDefinition beanDefinition = builder.getBeanDefinition();,998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"return new BeanComponentDefinition(beanDefinition, beanName);",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
Message<?> message = output.receive(timeoutOnReceive);,998ca827d79e414350aaba9154504c1c6dc39aa1,1,0
MessageHistory history = MessageHistory.read(message);,998ca827d79e414350aaba9154504c1c6dc39aa1,1,0
"Properties componentHistoryRecord = TestUtils.locateComponentInHistory(history, ""inboundAdapter"", 0);",998ca827d79e414350aaba9154504c1c6dc39aa1,1,0
JmsTemplate jmsTemplate =,998ca827d79e414350aaba9154504c1c6dc39aa1,1,0
Message<?> message = output.receive(this.timeoutOnReceive);,998ca827d79e414350aaba9154504c1c6dc39aa1,1,0
"assertEquals(""test [with selector: TestProperty = 'foo']"", message.getPayload());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,0
"""jmsInboundWithJmsTemplate.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
Message<?> message = output.receive(timeoutOnReceive);,998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
MessageHistory history = MessageHistory.read(message);,998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"Properties componentHistoryRecord = TestUtils.locateComponentInHistory(history, ""inboundAdapter"", 0);",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
JmsTemplate jmsTemplate =,998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"""jmsInboundWithConnectionFactoryAndDestination.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"""jmsInboundWithConnectionFactoryAndDestinationName.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"""jmsInboundWithDestinationAndDefaultConnectionFactory.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"""jmsInboundWithDestinationNameAndDefaultConnectionFactory.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"""jmsInboundWithHeaderMapper.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"""jmsInboundWithMessageSelector.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"assertEquals(""test [with selector: TestProperty = 'foo']"", message.getPayload());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"""jmsInboundWithReceiveTimeout.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
"""jmsInboundWithMessageConverter.xml"", this.getClass());",998ca827d79e414350aaba9154504c1c6dc39aa1,1,1
* Copyright 2002-2013 the original author or authors.,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
*,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
return builder.getBeanDefinition();,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
* Copyright 2002-2010 the original author or authors.,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
import org.springframework.beans.factory.config.BeanDefinition;,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
import org.springframework.beans.factory.parsing.BeanComponentDefinition;,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
*,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
* Copyright 2002-2018 the original author or authors.,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
import org.springframework.integration.jms.JmsDestinationPollingSource;,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithJmsTemplate.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
assertNotNull(history);,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
assertNotNull(componentHistoryRecord);,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertEquals(""jms:inbound-channel-adapter"", componentHistoryRecord.get(""type""));",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertNotNull(""message should not be null"", message);",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertEquals(""polling-test"", message.getPayload());",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
},998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
public void adapterWithoutJmsTemplateAndAcknowledgeMode() {,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"TestUtils.getPropertyValue(context.getBean(""inboundAdapterWithoutJmsTemplate""),",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""source.jmsTemplate"", JmsTemplate.class);",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
assertTrue(jmsTemplate.isSessionTransacted());,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithConnectionFactoryAndDestination.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertFalse(TestUtils.getPropertyValue(context.getBean(""adapter""), ""source.jmsTemplate"", JmsTemplate.class)",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
.isSessionTransacted());,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithConnectionFactoryAndDestinationName.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
.getBean(JmsDestinationPollingSource.class);,998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"TestUtils.getPropertyValue(jmsDestinationPollingSource, ""jmsTemplate"", JmsTemplate.class);",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertEquals(1000, jmsTemplate.getReceiveTimeout());",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithDestinationAndDefaultConnectionFactory.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithDestinationNameAndDefaultConnectionFactory.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithHeaderMapper.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertEquals(""foo"", message.getHeaders().get(""testProperty""));",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertEquals(123, message.getHeaders().get(""testAttribute""));",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithMessageSelector.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithReceiveTimeout.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"TestUtils.getPropertyValue(context.getBean(""adapter""), ""source.jmsTemplate"", JmsTemplate.class);",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertEquals(99, jmsTemplate.getReceiveTimeout());",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"""jmsInboundWithMessageConverter.xml"", this.getClass())) {",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
"assertEquals(""converted-test"", message.getPayload());",998ca827d79e414350aaba9154504c1c6dc39aa1,0,0
* Copyright 2002-2016 the original author or authors.,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
assertNotNull(history);,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
assertNotNull(componentHistoryRecord);,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"assertEquals(""jms:inbound-channel-adapter"", componentHistoryRecord.get(""type""));",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"assertNotNull(""message should not be null"", message);",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"assertEquals(""polling-test"", message.getPayload());",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
context.close();,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
public void adapterWithoutJmsTemplateAndAcknowlegeMode() {,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"TestUtils.getPropertyValue(context.getBean(""inboundAdapterWithoutJmsTemplate""),",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"""source.jmsTemplate"", JmsTemplate.class);",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
assertTrue(jmsTemplate.isSessionTransacted());,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"assertFalse(TestUtils.getPropertyValue(context.getBean(""adapter""), ""source.jmsTemplate"", JmsTemplate.class)",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
.isSessionTransacted());,998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"assertEquals(""foo"", message.getHeaders().get(""testProperty""));",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"assertEquals(123, message.getHeaders().get(""testAttribute""));",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"TestUtils.getPropertyValue(context.getBean(""adapter""), ""source.jmsTemplate"", JmsTemplate.class);",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"assertEquals(99, jmsTemplate.getReceiveTimeout());",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"assertEquals(""converted-test"", message.getPayload());",998ca827d79e414350aaba9154504c1c6dc39aa1,0,1
"Map<String, Object> map = new HashMap<>();",55eb3ae05da3a71139f2b9883ebff7b23babbf7b,3,0
"Map<String, Object> map = new HashMap<String, Object>();",55eb3ae05da3a71139f2b9883ebff7b23babbf7b,3,1
Integer value = new Integer(123);,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,2,1
* Copyright 2002-2020 the original author or authors.,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,0
import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,0
import org.junit.jupiter.api.Test;,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,0
public void testIdOverwritten() {,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,0
int value = 123;,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,0
"""Expected [class java.lang.String] but actual type is [class java.lang.Integer]"");",55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,0
* Copyright 2002-2019 the original author or authors.,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,1
import org.junit.Test;,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,1
public void testIdOverwritten() throws Exception {,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,1
@Test(expected = IllegalArgumentException.class),55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,1
"map.put(""key2"", new Integer(123));",55eb3ae05da3a71139f2b9883ebff7b23babbf7b,1,1
* @author Artem Bilan,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,0,0
@Test,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,0,0
assertThatIllegalArgumentException(),55eb3ae05da3a71139f2b9883ebff7b23babbf7b,0,0
".isThrownBy(() -> headers.get(""test"", String.class))",55eb3ae05da3a71139f2b9883ebff7b23babbf7b,0,0
.withMessageContaining(,55eb3ae05da3a71139f2b9883ebff7b23babbf7b,0,0
"map.put(""key2"", 123);",55eb3ae05da3a71139f2b9883ebff7b23babbf7b,0,0
"assertThat(headers.get(""test"", String.class)).isEqualTo(value);",55eb3ae05da3a71139f2b9883ebff7b23babbf7b,0,1
"""Exactly one of 'xpath-expression' or 'xpath-expression-ref' is required."");",27604d3707fba623150cccf17ae1b621c3eaf8c9,3,0
"Assert.isTrue(hasChild ^ hasReference, ""Exactly one of 'xpath-expression' or 'xpath-expression-ref' is required."");",27604d3707fba623150cccf17ae1b621c3eaf8c9,3,1
"Assert.isTrue(hasChild ^ hasReference,",27604d3707fba623150cccf17ae1b621c3eaf8c9,0,0
"IntegrationNamespaceUtils.setReferenceIfAttributeDefined(builder, element, ""doc-builder-factory"",",27604d3707fba623150cccf17ae1b621c3eaf8c9,0,0
"""documentBuilder"");",27604d3707fba623150cccf17ae1b621c3eaf8c9,0,0
"IntegrationNamespaceUtils.setValueIfAttributeDefined(builder, element, ""discard-channel"", ""discardChannelName"");",27604d3707fba623150cccf17ae1b621c3eaf8c9,0,0
"IntegrationNamespaceUtils.setReferenceIfAttributeDefined(builder, element, ""doc-builder-factory"", ""documentBuilder"");",27604d3707fba623150cccf17ae1b621c3eaf8c9,0,1
* Copyright 2002-2011 the original author or authors.,3817fa259882b8deef289615bed0e4a00e2b76c7,7,0
* Copyright 2002-2012 the original author or authors.,3817fa259882b8deef289615bed0e4a00e2b76c7,7,1
* Copyright 2002-2019 the original author or authors.,3817fa259882b8deef289615bed0e4a00e2b76c7,7,0
* Copyright 2002-2011 the original author or authors.,3817fa259882b8deef289615bed0e4a00e2b76c7,7,1
"logger.info(""attempting to receive mail from folder ["" + this.getFolder().getFullName() + ""]"");",3817fa259882b8deef289615bed0e4a00e2b76c7,5,0
"logger.debug(""USER flags are supported by this mail server. Flagging message with '"" + SI_USER_FLAG + ""' user flag"");",3817fa259882b8deef289615bed0e4a00e2b76c7,5,0
"logger.info(""attempting to receive mail from folder ["" + this.getFolder().getFullName() + ""]"");",3817fa259882b8deef289615bed0e4a00e2b76c7,5,1
"logger.debug(""USER flags are supported by this mail server. Flagging message with '"" + SI_USER_FLAG + ""' user flag"");",3817fa259882b8deef289615bed0e4a00e2b76c7,5,1
"this.logger.info(""attempting to receive mail from folder ["" + this.folder.getFullName() + ""]"");",3817fa259882b8deef289615bed0e4a00e2b76c7,5,0
"this.logger.info(""attempting to receive mail from folder ["" + folder.getFullName() + ""]"");",3817fa259882b8deef289615bed0e4a00e2b76c7,5,1
for (int i = 0; i < messages.length; i++) {,3817fa259882b8deef289615bed0e4a00e2b76c7,4,0
"logger.debug(""Fetched email with subject '"" + message.getSubject() + ""' will be discarded by the matching filter"" +",3817fa259882b8deef289615bed0e4a00e2b76c7,4,0
for (int i = 0; i < messages.length; i++) {,3817fa259882b8deef289615bed0e4a00e2b76c7,4,1
* Delete and expunge messages after success.,3817fa259882b8deef289615bed0e4a00e2b76c7,4,1
"logger.debug(""Fetched email with subject '"" + message.getSubject() + ""' will be discarded by the matching filter"" +",3817fa259882b8deef289615bed0e4a00e2b76c7,4,1
for (int i = 0; i < messages.length; i++) {,3817fa259882b8deef289615bed0e4a00e2b76c7,4,1
for (int i = 0; i < messages.length; i++) {,3817fa259882b8deef289615bed0e4a00e2b76c7,4,1
protected void openFolder() throws MessagingException {,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
public Message[] receive() throws javax.mail.MessagingException {,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"logger.debug(""found "" + messages.length + "" new messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
Flags siFlags = new Flags();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"logger.debug(""USER flags are not supported by this mail server. Flagging message with system flag"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
public void destroy() throws Exception {,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
protected synchronized void openFolder() throws MessagingException {,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
Folder folder = null;,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
public Message[] receive() throws javax.mail.MessagingException {,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"logger.debug(""found "" + messages.length + "" new messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
public synchronized void destroy() throws Exception {,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
Flags siFlags = new Flags();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"logger.debug(""USER flags are not supported by this mail server. Flagging message with system flag"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"exceptionToThrow = new org.springframework.integration.MessagingException(""Failed to delete messages"", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
Folder folder = context.getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
private void obtainFolder() throws MessagingException {,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
private MimeMessage[] searchAndFilterMessages() throws MessagingException {,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"this.logger.debug(""found "" + messages.length + "" new messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"this.logger.debug(""found "" + messages.length + "" new messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"for (String name : new String[] { PROTOCOL, ""imaps"" }) {",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
Folder folder = getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"() -> ""folder is not an instance of ["" + IMAPFolder.class.getName() + ""]"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
Flags siFlags = new Flags();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"logger.debug(""This email server does not support RECENT or USER flags. "" +",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
Folder folder = this.getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"""folder is not an instance of ["" + IMAPFolder.class.getName() + ""]"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
Flags siFlags = new Flags();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"logger.debug(""This email server does not support RECENT or USER flags. "" +",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"searchTerm = new AndTerm(searchTerm, notFlagged);",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
Folder folder = ImapIdleChannelAdapter.this.mailReceiver.getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"logger.debug(""received "" + mailMessages.length + "" mail messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"""Failure during the destruction of Mail receiver: "" + this.mailReceiver, e);",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"* If we're running with the default executor, shut it down.",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
Folder folder = ImapIdleChannelAdapter.this.mailReceiver.getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"logger.debug(""received "" + mailMessages.length + "" mail messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
* Provide a managed {@link Executor} to schedule a receiving IDLE task.,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
* @param taskExecutor the {@link Executor} to use.,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"this.taskExecutor = new SimpleAsyncTaskExecutor(getBeanName() + ""-"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
Folder folder = this.mailReceiver.getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
"logger.debug(() -> ""received "" + mailMessages.length + "" mail messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,0
Folder folder = ImapIdleChannelAdapter.this.mailReceiver.getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
"logger.debug(() -> ""received "" + mailMessages.length + "" mail messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,3,1
private final Object folderMonitor = new Object();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.folder == null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.folder == null || !this.folder.exists()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.folder.isOpen()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (logger.isInfoEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
Message[] messages = this.searchForNewMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.maxFetchSize > 0 && messages.length > this.maxFetchSize) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
Message[] reducedMessages = new Message[this.maxFetchSize];,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
messages = reducedMessages;,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (logger.isDebugEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (messages.length > 0) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
List<Message> copiedMessages = new LinkedList<Message>();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
"logger.debug(""Recieved "" + messages.length + "" messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
Flags flags = this.getFolder().getPermanentFlags();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.selectorExpression != null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
Message message = messages[i];,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.shouldDeleteMessages()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
* @author Gary Russell,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
private final ThreadLocal<MailReceiverContext> contextHolder = new ThreadLocal<MailReceiverContext>();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"throw new org.springframework.integration.MessagingException(""Failed to open folder"", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
MailReceiverContext context = this.contextHolder.get();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (context == null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
folder = this.store.getFolder(this.url);,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
folder = context.getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (folder == null || !folder.exists()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (folder.isOpen()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (logger.isInfoEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Message[] messages = this.searchForNewMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.maxFetchSize > 0 && messages.length > this.maxFetchSize) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Message[] reducedMessages = new Message[this.maxFetchSize];,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
messages = reducedMessages;,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (logger.isDebugEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (messages.length > 0) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
List<Message> copiedMessages = new LinkedList<Message>();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"logger.debug(""Received "" + messages.length + "" messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.selectorExpression != null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Message message = messages[i];,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
* @param context,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Message[] messages = this.contextHolder.get().getMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"Assert.state(messages != null, ""No messages in mail receiver context"");",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Flags flags = context.getFolder().getPermanentFlags();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"exceptionToThrow = new org.springframework.integration.MessagingException(""Failed to set flags"", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.shouldDeleteMessages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (messages != null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (exceptionToThrow != null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
for (Message message1 : messages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
protected final Log logger = LogFactory.getLog(getClass()); // NOSONAR safe to use final,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.headerMapper != null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.logger.isInfoEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
Message[] messages = searchForNewMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.maxFetchSize > 0 && messages.length > this.maxFetchSize) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
Message[] reducedMessages = new Message[this.maxFetchSize];,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
messages = reducedMessages;,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.logger.isDebugEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (messages.length > 0) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
"this.logger.debug(""Received "" + messages.length + "" messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
folder = getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.logger.isInfoEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Message[] messages = searchForNewMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.maxFetchSize > 0 && messages.length > this.maxFetchSize) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Message[] reducedMessages = new Message[this.maxFetchSize];,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
messages = reducedMessages;,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.logger.isDebugEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (messages.length > 0) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"this.logger.debug(""Received "" + messages.length + "" messages"");",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.headerMapper != null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
this.cancelIdleInterval = cancelIdleInterval * 1000; // NOSONAR - convert seconds to milliseconds,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.pingTask != null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
else if (!folder.getPermanentFlags().contains(Flags.Flag.RECENT) && searchForNewMessages().length > 0) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
Folder folderToUse = getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
Flags supportedFlags = folderToUse.getPermanentFlags();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
SearchTerm searchTerm = compileSearchTerms(supportedFlags);,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (folderToUse.isOpen()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
"searchTerm = applyTermsWhenNoRecentFlag(folder, searchTerm);",3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (folder.getPermanentFlags().contains(Flag.USER)) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (logger.isDebugEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
"notFlagged = new NotTerm(new FlagTerm(siFlags, true));",3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
"notFlagged = new NotTerm(new FlagTerm(new Flags(Flag.FLAGGED), true));",3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (searchTerm == null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
this.cancelIdleInterval = cancelIdleInterval * 1000;,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"for (String name : new String[]{""imap"", ""imaps""}) {",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
else if (!folder.getPermanentFlags().contains(Flags.Flag.RECENT)) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (searchForNewMessages().length > 0) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Flags supportedFlags = this.getFolder().getPermanentFlags();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
SearchTerm searchTerm = this.compileSearchTerms(supportedFlags);,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (folder.isOpen()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (folder.getPermanentFlags().contains(Flags.Flag.USER)) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"notFlagged = new NotTerm(new FlagTerm(siFlags, true));",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"notFlagged = new NotTerm(new FlagTerm(new Flags(Flags.Flag.FLAGGED), true));",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (searchTerm == null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
searchTerm = notFlagged;,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
Folder folderToUse = getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
private Executor sendingTaskExecutor = Executors.newFixedThreadPool(1);,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
"// If we're running with the default executor, shut it down.",3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (isRunning()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (logger.isWarnEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
"+ ImapIdleChannelAdapter.this.reconnectDelay + "" milliseconds."", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (folder != null && folder.isOpen() && isRunning()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (logger.isDebugEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (ImapIdleChannelAdapter.this.shouldReconnectAutomatically) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.sendingTaskExecutor == null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (logger.isWarnEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"+ ImapIdleChannelAdapter.this.reconnectDelay + "" milliseconds."", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (folder != null && folder.isOpen()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (logger.isDebugEnabled()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (ImapIdleChannelAdapter.this.shouldReconnectAutomatically) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.taskExecutor == null) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
"+ this.reconnectDelay + "" milliseconds."");",3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (folder != null && folder.isOpen() && isRunning()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (isRunning()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
if (this.shouldReconnectAutomatically) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,0
private final ExceptionAwarePeriodicTrigger receivingTaskTrigger = new ExceptionAwarePeriodicTrigger();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
private final IdleTask idleTask = new IdleTask();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (isRunning()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
"+ ImapIdleChannelAdapter.this.reconnectDelay + "" milliseconds."");",3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (folder != null && folder.isOpen() && isRunning()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (ImapIdleChannelAdapter.this.shouldReconnectAutomatically) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
private final AtomicBoolean delayNextExecution = new AtomicBoolean();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
private final AtomicBoolean stop = new AtomicBoolean();,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.stop.getAndSet(false)) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
if (this.delayNextExecution.getAndSet(false)) {,3817fa259882b8deef289615bed0e4a00e2b76c7,2,1
*,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
private volatile Folder folder;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
this.folder = this.store.getFolder(this.url);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
synchronized (this.folderMonitor) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
try {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
boolean recentFlagSupported = false;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
if (flags != null){,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
recentFlagSupported = flags.contains(Flags.Flag.RECENT);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
if (!recentFlagSupported){,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
if (flags != null && flags.contains(Flags.Flag.USER)){,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
if (logger.isDebugEnabled()){,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"if (this.selectorExpression.getValue(this.context, message, Boolean.class)){",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
finally {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
* Optional method allowing you to set additional flags.,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
this.folder = null;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
this.store = null;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
this.initialized = false;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
*,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
public MailReceiverContext getTransactionContext() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
private MailReceiverContext doObtainTransactionContext() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
MailReceiverContext mailReceiverContext = this.contextHolder.get();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
if (mailReceiverContext == null ||,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
!mailReceiverContext.getFolder().isOpen()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
try {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
catch (MessagingException e) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"if (this.selectorExpression.getValue(this.context, message, Boolean.class)){",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
* Optional method allowing you to set additional flags.,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
this.store = null;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
this.initialized = false;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
/**,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
*/,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
public void closeContextAfterSuccess(MailReceiverContext context) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
RuntimeException exceptionToThrow = null;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
boolean recentFlagSupported = false;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
if (flags != null){,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
recentFlagSupported = flags.contains(Flags.Flag.RECENT);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
if (!recentFlagSupported){,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
if (flags != null && flags.contains(Flags.Flag.USER)){,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
if (logger.isDebugEnabled()){,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
catch (Exception e) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
public void closeContextAfterFailure(MailReceiverContext context) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"public static final String DEFAULT_SI_USER_FLAG = ""spring-integration-mail-adapter"";",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
MimeMessage message = (MimeMessage) message1;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
for (Message message : messages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
import org.apache.commons.logging.Log;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
import org.apache.commons.logging.LogFactory;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"public final static String DEFAULT_SI_USER_FLAG = ""spring-integration-mail-adapter"";",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
MimeMessage message = (MimeMessage) messages[i];,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
try {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
MimeMessage[] filteredMessages = searchAndFilterMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
org.springframework.messaging.Message<?>[] converted =,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
new org.springframework.messaging.Message<?>[filteredMessages.length];,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
int n = 0;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
for (MimeMessage message : filteredMessages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"Map<String, Object> headers = this.headerMapper.toHeaders(message);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
converted[n++] =,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
finally {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
MimeMessage[] filteredMessages = filterMessagesThruSelector(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
*,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
* @since 2.2,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
try {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
MimeMessage[] filteredMessages = filterMessagesThruSelector(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
org.springframework.messaging.Message<?>[] converted =,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
new org.springframework.messaging.Message<?>[filteredMessages.length];,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
int n = 0;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
for (MimeMessage message : filteredMessages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"Map<String, Object> headers = this.headerMapper.toHeaders(message);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
converted[n++] =,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
finally {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
*,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
* @since 2.2,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"private static final String PROTOCOL = ""imap"";",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
catch (Exception ex) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"logger.error(""Error during resetting idle state."", ex);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"private SearchTerm applyTermsWhenNoRecentFlag(Folder folder, SearchTerm searchTerm) {",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
NotTerm notFlagged = null;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"return new AndTerm(searchTerm, notFlagged);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
catch (Exception ignore) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
NotTerm notFlagged = null;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
import javax.mail.Folder;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"public static final String PROTOCOL = ""pop3"";",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
int messageCount = folderToUse.getMessageCount();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
for (Message message : messages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
new MimeMessage((MimeMessage) message);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
int messageCount = this.getFolder().getMessageCount();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
*,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
new MimeMessage((MimeMessage) messages[i]);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
public void destroy() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
try {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
catch (Exception e) { //run again after a delay,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
Object[] mailMessages = ImapIdleChannelAdapter.this.mailReceiver.receive();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
for (Object mailMessage : mailMessages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
Runnable messageSendingTask = createMessageSendingTask(mailMessage);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
catch (MessagingException e) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"logger.warn(""error occurred in idle task"", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"throw new IllegalStateException(""Failure in 'idle' task. Will resubmit."", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
throw new org.springframework.messaging.MessagingException(,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
private Executor sendingTaskExecutor;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
this.sendingTaskExecutor = Executors.newFixedThreadPool(1);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
try {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
catch (Exception e) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
throw new IllegalStateException(,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
*/,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
this.sendingTaskExecutor = null;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
catch (Exception e) { //run again after a delay,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
final TaskScheduler scheduler = getTaskScheduler();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
* The following shouldn't be necessary because doStart() will have ensured we have,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"* one. But, just in case...",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
Object[] mailMessages = ImapIdleChannelAdapter.this.mailReceiver.receive();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
for (Object mailMessage : mailMessages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
Runnable messageSendingTask = createMessageSendingTask(mailMessage);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
catch (MessagingException e) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"logger.warn(""error occurred in idle task"", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"throw new IllegalStateException(""Failure in 'idle' task. Will resubmit."", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
throw new org.springframework.messaging.MessagingException(,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
import java.util.concurrent.Executor;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
import org.springframework.core.task.SimpleAsyncTaskExecutor;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
private Executor taskExecutor;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
/**,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
* @since 6.2,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
*/,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
public void setTaskExecutor(Executor taskExecutor) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
this.taskExecutor = taskExecutor;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
private void callIdle() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
while (isActive()) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
try {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
catch (Exception ex) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
if (this.shouldReconnectAutomatically,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
&& ex.getCause() instanceof jakarta.mail.MessagingException messagingException) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"""Failed to execute IDLE task. "" +",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"""Won't resubmit since not a 'shouldReconnectAutomatically' "" +",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
private void processIdle() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
Object[] mailMessages = this.mailReceiver.receive();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
for (Object mailMessage : mailMessages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
catch (jakarta.mail.MessagingException ex) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"logger.warn(ex, ""error occurred in idle task"");",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"throw new IllegalStateException(""Failure in 'idle' task. Will resubmit."", ex);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
"throw new MessagingException(""Failure in 'idle' task. Will NOT resubmit."", ex);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
private void delayNextIdleCall() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
catch (InterruptedException ex) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
throw new IllegalStateException(ex);,3817fa259882b8deef289615bed0e4a00e2b76c7,1,0
import java.time.Instant;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
import java.util.concurrent.atomic.AtomicBoolean;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
import org.springframework.scheduling.TaskScheduler;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
import org.springframework.scheduling.Trigger;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
import org.springframework.scheduling.TriggerContext;,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
* Lifecycle implementation,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
*/,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
TaskScheduler scheduler = getTaskScheduler();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"this.receivingTask = scheduler.schedule(new ReceivingTask(), this.receivingTaskTrigger);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
private class ReceivingTask implements Runnable {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
ReceivingTask() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
},3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
public void run() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
try {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
catch (Exception ex) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
if (ImapIdleChannelAdapter.this.shouldReconnectAutomatically,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
&& ex.getCause() instanceof jakarta.mail.MessagingException messagingException) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
else {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"""Failed to execute IDLE task. "" +",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"""Won't resubmit since not a 'shouldReconnectAutomatically' "" +",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
private class IdleTask implements Runnable {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
IdleTask() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
Object[] mailMessages = ImapIdleChannelAdapter.this.mailReceiver.receive();,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
for (Object mailMessage : mailMessages) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
catch (jakarta.mail.MessagingException ex) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"logger.warn(ex, ""error occurred in idle task"");",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"throw new IllegalStateException(""Failure in 'idle' task. Will resubmit."", ex);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
"throw new MessagingException(""Failure in 'idle' task. Will NOT resubmit."", ex);",3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
private class ExceptionAwarePeriodicTrigger implements Trigger {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
ExceptionAwarePeriodicTrigger() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
public Instant nextExecution(TriggerContext triggerContext) {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
void delayNextExecution() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
void stop() {,3817fa259882b8deef289615bed0e4a00e2b76c7,1,1
return this.folder;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.folder.open(this.folderOpenMode);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.openFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"System.arraycopy(messages, 0, reducedMessages, 0, this.maxFetchSize);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.fetchMessages(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
siFlags.add(SI_USER_FLAG);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"messages[i].setFlags(siFlags, true);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"messages[i].setFlag(Flags.Flag.FLAGGED, true);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.setAdditionalFlags(message);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
copiedMessages.add(new MimeMessage((MimeMessage) message));,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
""" and will not be flagged as SEEN."");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.setAdditionalFlags(messages[i]);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
copiedMessages.add(new MimeMessage((MimeMessage) messages[i]));,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.deleteMessages(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return copiedMessages.toArray(new Message[copiedMessages.size()]);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"MailTransportUtils.closeFolder(this.folder, this.shouldDeleteMessages);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"this.folder.fetch(messages, contentsProfile);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
MailTransportUtils.closeService(this.store);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return this.getTransactionContext().getFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return doObtainTransactionContext();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
mailReceiverContext.getFolder() == null ||,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.openFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return this.contextHolder.get();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return mailReceiverContext;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.contextHolder.set(new MailReceiverContext(folder));,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
folder.open(this.folderOpenMode);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"System.arraycopy(messages, 0, reducedMessages, 0, this.maxFetchSize);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.fetchMessages(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
copiedMessages.add(new MimeMessage((MimeMessage) message));,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
copiedMessages.add(new MimeMessage((MimeMessage) messages[i]));,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.contextHolder.get().setMessages(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return copiedMessages.toArray(new Message[copiedMessages.size()]);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"this.contextHolder.get().getFolder().fetch(messages, contentsProfile);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
MailTransportUtils.closeService(this.store);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"Assert.notNull(context, ""Mail Reader Context cannot be null"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
siFlags.add(SI_USER_FLAG);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"messages[i].setFlags(siFlags, true);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"messages[i].setFlag(Flags.Flag.FLAGGED, true);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.setAdditionalFlags(message);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
""" and will not be flagged as SEEN."");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.setAdditionalFlags(messages[i]);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.deleteMessages(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"MailTransportUtils.closeFolder(folder, this.shouldDeleteMessages);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.contextHolder.remove();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
throw exceptionToThrow;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"MailTransportUtils.closeFolder(context.getFolder(), false);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"message.setFlag(Flags.Flag.DELETED, true);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"messages[i].setFlag(Flags.Flag.DELETED, true);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
obtainFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
getMessageBuilderFactory(),3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
".withPayload(extractContent(message, headers))",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
.copyHeaders(headers),3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
.build();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return converted;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return filteredMessages;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"MailTransportUtils.closeFolder(this.folder, this.shouldDeleteMessages);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.folderReadLock.unlock();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"System.arraycopy(messages, 0, reducedMessages, 0, this.maxFetchSize);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
fetchMessages(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
postProcessFilteredMessages(filteredMessages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return obtainFolderInstance();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"System.arraycopy(messages, 0, reducedMessages, 0, this.maxFetchSize);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
fetchMessages(messages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
postProcessFilteredMessages(filteredMessages);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
getMessageBuilderFactory(),3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
".withPayload(extractContent(message, headers))",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
.copyHeaders(headers),3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
.build();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return converted;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return filteredMessages;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"MailTransportUtils.closeFolder(folder, this.shouldDeleteMessages);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.folderReadLock.unlock();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return AbstractMailReceiver.this.obtainFolderInstance();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
setProtocol(PROTOCOL);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"Assert.isTrue(url.toLowerCase().startsWith(PROTOCOL),",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.pingTask.cancel(true);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
openFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return nullSafeMessages(searchTerm != null ? folderToUse.search(searchTerm) : folderToUse.getMessages());,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return searchTerm;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
siFlags.add(getUserFlag());,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"""System flag 'Flag.FLAGGED' will be used to prevent duplicates during email fetch."");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return notFlagged;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"this.setProtocol(""imap"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"Assert.isTrue(url.toLowerCase().startsWith(""imap""),",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.openFolder();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return nullSafeMessages(searchTerm != null ? folder.search(searchTerm) : folder.getMessages());,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
siFlags.add(getUserFlag());,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"""System flag 'Flag.FLAGGED' will be used to prevent duplicates during email fetch."");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return searchTerm;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
setProtocol(PROTOCOL);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"Assert.isTrue(url.startsWith(PROTOCOL), ""url must start with 'pop3'"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"super(new URLName(PROTOCOL, host, port, ""INBOX"", username, password));",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
return folderToUse.getMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"this.setProtocol(""pop3"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"Assert.isTrue(url.startsWith(""pop3""), ""url must start with 'pop3'"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"super(new URLName(""pop3"", host, port, ""INBOX"", username, password));",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return this.getFolder().getMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.mailReceiver.cancelPing();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
@Override,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
super.destroy();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.mailReceiver.destroy();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
ImapIdleChannelAdapter.this.idleTask.run();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"logger.debug(""Task completed successfully. Re-scheduling it again right away."");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"logger.warn(""Failed to execute IDLE task. Will attempt to resubmit in """,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
ImapIdleChannelAdapter.this.receivingTaskTrigger.delayNextExecution();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
publishException(e);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"logger.debug(""waiting for mail"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
ImapIdleChannelAdapter.this.mailReceiver.waitForNewMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
ImapIdleChannelAdapter.this.sendingTaskExecutor.execute(messageSendingTask);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"""Failure in 'idle' task. Will NOT resubmit."", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.mailReceiver.destroy();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
/*,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.idleTask.run();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"logger.debug(""Task completed successfully. Re-scheduling it again right away."");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"logger.warn(""Failed to execute IDLE task. Will attempt to resubmit in """,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.receivingTaskTrigger.delayNextExecution();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
publishException(e);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"Assert.notNull(scheduler, ""'taskScheduler' must not be null"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"Assert.state(ImapIdleChannelAdapter.this.sendingTaskExecutor != null,",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"""'sendingTaskExecutor' must not be null"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"logger.debug(""waiting for mail"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.mailReceiver.waitForNewMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.sendingTaskExecutor.execute(messageSendingTask);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"""Failure in 'idle' task. Will NOT resubmit."", e);",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"Assert.notNull(taskExecutor, ""'taskExecutor' must not be null"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
@Override,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.taskExecutor.execute(this::callIdle);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
processIdle();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"logger.debug(""Task completed successfully. Re-scheduling it again right away."");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
publishException(ex);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
//run again after a delay,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"logger.info(messagingException,",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"() -> ""Failed to execute IDLE task. Will attempt to resubmit in """,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
delayNextIdleCall();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"logger.warn(ex,",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"""or not a 'jakarta.mail.MessagingException'"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
break;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
"logger.debug(""waiting for mail"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.mailReceiver.waitForNewMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
this.messageSender.accept(mailMessage);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
Thread.sleep(this.reconnectDelay);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
Thread.currentThread().interrupt();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,0
/*,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
@Override // guarded by super#lifecycleLock,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"Assert.notNull(scheduler, ""'taskScheduler' must not be null"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
@Override,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.idleTask.run();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"logger.debug(""Task completed successfully. Re-scheduling it again right away."");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
//run again after a delay,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"logger.info(messagingException,",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"() -> ""Failed to execute IDLE task. Will attempt to resubmit in """,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.receivingTaskTrigger.delayNextExecution();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"logger.warn(ex,",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"""or not a 'jakarta.mail.MessagingException'"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.receivingTaskTrigger.stop();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
publishException(ex);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"logger.debug(""waiting for mail"");",3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.mailReceiver.waitForNewMessages();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
ImapIdleChannelAdapter.this.messageSender.accept(mailMessage);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return null;,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return Instant.now().plusMillis(ImapIdleChannelAdapter.this.reconnectDelay);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
return Instant.now();,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.delayNextExecution.set(true);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
this.stop.set(true);,3817fa259882b8deef289615bed0e4a00e2b76c7,0,1
"""Unsupported Message payload type ["" + payload.getClass().getName() + ""]"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,4,0
* representing the bits that were set in the chmod value.,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,4,1
"""unsupported Message payload type ["" + payload.getClass().getName() + ""]"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,4,1
"File outFile = new File(tempDir, ""/outputDirectory/"" + message.getHeaders().getId().toString() + "".msg"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,4,0
"File outFile = temp.newFile(""/outputDirectory/"" + message.getHeaders().getId().toString() + "".msg"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,4,1
"File outFile = temp.newFile(""/outputDirectory/"" + message.getHeaders().getId().toString() + "".msg.writing"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,4,1
if (resultFile != null && originalFileFromHeader == null && payload instanceof File) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,3,0
"private File writeMessageToFile(Message<?> requestMessage, File originalFileFromHeader, File tempFile,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,3,0
"throw new IllegalStateException(""Could not delete original file: "" + originalFile);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,3,0
* We use that stream with a switch to create the set of PosixFilePermissions,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,3,1
if (originalFileFromHeader == null && payload instanceof File) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,3,1
File destFile = (File) result.getPayload();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,3,1
* @param taskScheduler the {@link TaskScheduler} to use.,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"BitSet bits = BitSet.valueOf(new byte[] { (byte) chmod, (byte) (chmod >> 8) }); // NOSONAR",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
File destinationDirectoryToUse = evaluateDestinationDirectoryExpression(requestMessage);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"File resultFile, Object timestamp) throws IOException {",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
File fileToReturn = null;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
Object payload = requestMessage.getPayload();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (payload instanceof File) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
else if (payload instanceof InputStream) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
else if (payload instanceof byte[]) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
else if (payload instanceof String) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (this.preserveTimestamp) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (timestamp instanceof Number) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (!fileToReturn.setLastModified(((Number) timestamp).longValue())) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"throw new IllegalStateException(""Could not set last modified '"" + timestamp",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"+ ""' timestamp on file: "" + fileToReturn);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
else if (this.logger.isWarnEnabled()) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"this.logger.warn(""Could not set lastModified, header "" + FileHeaders.SET_MODIFIED",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"+ "" must be a Number, not "" + (timestamp == null ? ""null"" : timestamp.getClass()));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
while ((bytesRead = inputStream.read(buffer)) != -1) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
try (InputStream inputStream = sourceFileInputStream) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (FileWritingMessageHandler.this.appendNewLine) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (state == null || FileWritingMessageHandler.this.flushTask == null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (this.appendNewLine) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (state == null || this.flushTask == null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (bos != null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"private void writeStringToFile(File fileToWriteTo, boolean append, String content) throws IOException {",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (writer != null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
if (this.deleteSourceFiles && originalFile != null && !originalFile.delete()) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"* Since we are interested in 9 bits, we construct an array with the low-order byte",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
* (bits 0-7) followed by the second order byte (bit 8).,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
"BitSet bits = BitSet.valueOf(new byte[] { (byte) chmod, (byte) (chmod >> 8) });",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
final File destinationDirectoryToUse = evaluateDestinationDirectoryExpression(requestMessage);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (payload instanceof File) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
else if (payload instanceof InputStream) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
else if (payload instanceof byte[]) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
else if (payload instanceof String) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (this.preserveTimestamp) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (timestamp instanceof Number) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (this.logger.isWarnEnabled()) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
"this.logger.warn(""Could not set lastModified, header "" + FileHeaders.SET_MODIFIED",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
"+ "" must be a Number, not "" + (timestamp == null ? ""null"" : timestamp.getClass()));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (resultFile != null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
while ((bytesRead = sourceFileInputStream.read(buffer)) != -1) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (FileWritingMessageHandler.this.appendNewLine) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (state == null || FileWritingMessageHandler.this.flushTask == null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (bos != null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (writer != null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (this.deleteSourceFiles && originalFile != null) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
if (state != null && ((isString && state.stream != null) || (!isString && state.writer != null))) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
"static final String SAMPLE_CONTENT = ""HelloWorld\näöüß"";",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
File outFile =,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"new File(tempDir, ""/outputDirectory/"" + message.getHeaders().getId().toString() + "".msg.writing"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"File tempFolder = new File(tempDir, UUID.randomUUID().toString());",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"File file = new File(this.tempDir, ""foo.txt"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,0
"static final String SAMPLE_CONTENT = ""HelloWorld\n????"";",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
public TemporaryFolder temp = new TemporaryFolder() {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
handler = new FileWritingMessageHandler(outputDirectory);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
File tempFolder = this.temp.newFolder();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
"File file = new File(this.temp.newFolder(), ""foo.txt"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,2,1
private static final PosixFilePermission[] POSIX_FILE_PERMISSIONS =,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
{,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"private final Map<String, FileState> fileStates = new HashMap<>();",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
* Configure a {@link TaskScheduler} for flush operations.,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
public void setTaskScheduler(TaskScheduler taskScheduler) { // NOSONAR,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
this.permissions = bits.stream(),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"this.flushTask = taskScheduler.scheduleAtFixedRate(new Flusher(), this.flushInterval / 3); // NOSONAR",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
while (n++ < 10 && this.fileStates.size() > 0) { // NOSONAR,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
boolean ignore = (FileExistsMode.IGNORE.equals(this.fileExistsMode) // NOSONAR,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"resultFile = writeMessageToFile(requestMessage, originalFileFromHeader, tempFile, resultFile,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"fileToReturn = handleFileMessage((File) payload, tempFile, resultFile, requestMessage);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
},5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"fileToReturn = handleInputStreamMessage((InputStream) payload, originalFileFromHeader, tempFile,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"fileToReturn = handleByteArrayMessage((byte[]) payload, originalFileFromHeader, tempFile, resultFile,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"fileToReturn = handleStringMessage((String) payload, originalFileFromHeader, tempFile, resultFile,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
else {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
try (InputStream inputStream = sourceFileInputStream;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
OutputStream outputStream =,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"new BufferedOutputStream(new FileOutputStream(tempFile), this.bufferSize)) {",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"private void appendStreamToFile(File fileToWriteTo, InputStream sourceFileInputStream) throws IOException {",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"FileState state = getFileState(fileToWriteTo, false);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
BufferedOutputStream bos = null;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, true);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
byte[] buffer = new byte[StreamUtils.BUFFER_SIZE];,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
int bytesRead = -1;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
finally {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
try {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
state.lastWrite = System.currentTimeMillis();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
catch (IOException ex) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"private void writeBytesToFile(File fileToWriteTo, boolean append, byte[] bytes) throws IOException {",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, append);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"FileState state = getFileState(fileToWriteTo, true);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
BufferedWriter writer = null;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"writer = state != null ? state.writer : createWriter(fileToWriteTo, append);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
if (state != null // NOSONAR,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
&& ((isString && state.stream != null) || (!isString && state.writer != null))) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
private final Log logger = LogFactory.getLog(this.getClass());,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"private final Map<String, FileState> fileStates = new HashMap<String, FileState>();",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
public void setTaskScheduler(TaskScheduler taskScheduler) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
* Bitset.valueOf(byte[]) takes a little-endian array of bytes to create a BitSet.,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
* BitSet.stream() returns a stream of ints representing those bits that are set.,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
final Set<PosixFilePermission> posixPermissions = new HashSet<>();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
bits.stream().forEach(b -> {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
switch (b) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
},5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
this.permissions = posixPermissions;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"this.flushTask = taskScheduler.scheduleAtFixedRate(new Flusher(), this.flushInterval / 3);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
while (n++ < 10 && this.fileStates.size() > 0) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"Assert.notNull(payload, ""message payload must not be null"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
boolean ignore = (FileExistsMode.IGNORE.equals(this.fileExistsMode),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"resultFile = handleFileMessage((File) payload, tempFile, resultFile, requestMessage);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"resultFile = handleInputStreamMessage((InputStream) payload, originalFileFromHeader, tempFile,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
resultFile = this.handleByteArrayMessage(,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
resultFile = this.handleStringMessage(,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
else {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"FileState state = getFileState(fileToWriteTo, false);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
BufferedOutputStream bos = null;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
try {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, true);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
byte[] buffer = new byte[StreamUtils.BUFFER_SIZE];,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
int bytesRead = -1;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
finally {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
catch (IOException ex) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
state.lastWrite = System.currentTimeMillis();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"bos = new BufferedOutputStream(new FileOutputStream(tempFile), this.bufferSize);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, append);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"FileState state = getFileState(fileToWriteTo, true);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
BufferedWriter writer = null;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"writer = state != null ? state.writer : createWriter(fileToWriteTo, append);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
File tempDir;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
void setup() throws IOException {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"outputDirectory = new File(tempDir, ""outputDirectory"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"sourceFile = new File(tempDir, ""sourceFile"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
this.handler = new FileWritingMessageHandler(this.outputDirectory);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
},5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
public void deleteSourceFileWithInputStreamPayloadAndFileInstanceHeader() throws Exception {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
public void deleteSourceFileWithInputStreamPayloadAndFilePathHeader() throws Exception {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
public void customFileNameGenerator() {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
"handler.handleMessage(new GenericMessage<>(""qux"".getBytes())); // change of payload type forces flush",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
return (File) result.getPayload();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,0
public void create() throws IOException {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"outputDirectory = temp.newFolder(""outputDirectory"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"sourceFile = temp.newFile(""sourceFile"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
},5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
@Test(expected = MessageHandlingException.class),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
try {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
catch (IllegalArgumentException e) {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
public void deleteSourceFileWithInputstreamPayloadAndFileInstanceHeader() throws Exception {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
public void deleteSourceFileWithInputstreamPayloadAndFilePathHeader() throws Exception {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
public void customFileNameGenerator() throws Exception {,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
"handler.handleMessage(new GenericMessage<byte[]>(""qux"".getBytes())); // change of payload type forces flush",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,1,1
import java.io.OutputStream;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import java.util.stream.Collectors;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"PosixFilePermission.OTHERS_EXECUTE,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"PosixFilePermission.OTHERS_WRITE,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"PosixFilePermission.OTHERS_READ,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"PosixFilePermission.GROUP_EXECUTE,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"PosixFilePermission.GROUP_WRITE,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"PosixFilePermission.GROUP_READ,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"PosixFilePermission.OWNER_EXECUTE,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"PosixFilePermission.OWNER_WRITE,",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
PosixFilePermission.OWNER_READ,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
};,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
/**,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
*/,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"setChmod(Integer.parseInt(chmod, 8)); // NOSONAR 8-bit",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"Assert.isTrue(chmod >= 0 && chmod <= 0777, // NOSONAR permissions octal",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"""'chmod' must be between 0 and 0777 (octal)"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
.boxed(),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
.map((b) -> POSIX_FILE_PERMISSIONS[b]),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
.collect(Collectors.toSet());,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"this.evaluationContext, null, ""destinationDirectoryExpression"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
@Override // NOSONAR,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
timestamp);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
return getMessageBuilderFactory(),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
.withPayload(resultFile),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
".setHeader(FileHeaders.ORIGINAL_FILE, payload);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"resultFile, requestMessage);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
requestMessage);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
throw new IllegalArgumentException(,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
return fileToReturn;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"appendStreamToFile(fileToWriteTo, sourceFileInputStream);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
int bytesRead;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"outputStream.write(buffer, 0, bytesRead);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
outputStream.write(System.lineSeparator().getBytes());,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
outputStream.flush();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"cleanUpAfterCopy(tempFile, resultFile, originalFile);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
return resultFile;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"bos.write(buffer, 0, bytesRead);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
bos.write(System.lineSeparator().getBytes());,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"clearState(fileToWriteTo, state);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"writeBytesToFile(fileToWriteTo, append, bytes);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"cleanUpAfterCopy(fileToWriteTo, resultFile, originalFile);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
bos.write(bytes);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
bos.close();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"writeStringToFile(fileToWriteTo, append, content);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
writer.write(content);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
writer.newLine();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
writer.close();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import java.util.HashSet;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
import org.apache.commons.logging.Log;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
import org.apache.commons.logging.LogFactory;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"setChmod(Integer.parseInt(chmod, 8));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"Assert.isTrue(chmod >= 0 && chmod <= 0777, ""'chmod' must be between 0 and 0777 (octal)"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
/*,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
*/,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 0:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.OTHERS_EXECUTE);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
break;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 1:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.OTHERS_WRITE);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 2:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.OTHERS_READ);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 3:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.GROUP_EXECUTE);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 4:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.GROUP_WRITE);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 5:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.GROUP_READ);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 6:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.OWNER_EXECUTE);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 7:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.OWNER_WRITE);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
case 8:,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
posixPermissions.add(PosixFilePermission.OWNER_READ);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
});,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"this.evaluationContext, null, ""destinationDirectoryExpression"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
@Override,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"Assert.notNull(requestMessage, ""message must not be null"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"resultFile, requestMessage);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"(byte[]) payload, originalFileFromHeader, tempFile, resultFile, requestMessage);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"(String) payload, originalFileFromHeader, tempFile, resultFile, requestMessage);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
throw new IllegalArgumentException(,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
resultFile.setLastModified(((Number) timestamp).longValue());,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
return this.getMessageBuilderFactory().withPayload(resultFile),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
".setHeader(FileHeaders.ORIGINAL_FILE, payload);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"bos.write(buffer, 0, bytesRead);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
bos.write(System.lineSeparator().getBytes());,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
sourceFileInputStream.close();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
bos.close();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"clearState(fileToWriteTo, state);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
bos.flush();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"cleanUpAfterCopy(tempFile, resultFile, originalFile);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
return resultFile;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
bos.write(bytes);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"this.cleanUpAfterCopy(fileToWriteTo, resultFile, originalFile);",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
writer.write(content);,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
writer.newLine();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
writer.close();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
originalFile.delete();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
import static org.assertj.core.api.Assertions.assertThatExceptionOfType;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import java.util.UUID;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import org.junit.jupiter.api.BeforeEach;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import org.junit.jupiter.api.Disabled;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import org.junit.jupiter.api.Test;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import org.junit.jupiter.api.io.TempDir;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import org.springframework.context.support.GenericApplicationContext;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
@TempDir,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
@BeforeEach,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"FileCopyUtils.copy(SAMPLE_CONTENT.getBytes(DEFAULT_ENCODING),",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"new FileOutputStream(sourceFile, false));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
this.handler.setBeanFactory(mock(BeanFactory.class));,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
this.handler.setApplicationContext(new GenericApplicationContext());,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
this.handler.afterPropertiesSet();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
@Test,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
assertThatExceptionOfType(MessageHandlingException.class),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
.isThrownBy(() -> this.handler.handleMessage(new GenericMessage<>(99)));,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"handler.handleMessage(new GenericMessage<>(""test""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"@Disabled(""INT-3289: doesn't fail on all OS"")",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
assertThatIllegalArgumentException(),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
.isThrownBy(handler::afterPropertiesSet),5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
".withMessageContaining(""[/foo] could not be created"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"handler.handleMessage(new GenericMessage<>(""foo""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"handler.handleMessage(new GenericMessage<>(""bar""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"handler.handleMessage(new GenericMessage<>(""baz""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
handler.trigger(new GenericMessage<>(Matcher.quoteReplacement(file.getAbsolutePath())));,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
"handler.trigger(new GenericMessage<>(""foo""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,0
import org.junit.Ignore;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
import org.junit.Rule;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
import org.junit.Test;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
import org.junit.rules.TemporaryFolder;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
@Rule,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
@Override,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
super.create();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
handler.setBeanFactory(mock(BeanFactory.class));,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
handler.afterPropertiesSet();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"FileCopyUtils.copy(SAMPLE_CONTENT.getBytes(DEFAULT_ENCODING),",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"new FileOutputStream(sourceFile, false));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
};,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
this.handler.handleMessage(new GenericMessage<>(99));,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
assertThat(this.outputDirectory.listFiles()[0]).isNull();,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"handler.handleMessage(new GenericMessage<String>(""test""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"@Ignore(""INT-3289: doesn't fail on all OS"")",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"fail(""Expected exception"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"assertThat(e.getMessage()).contains(""[/foo] could not be created"");",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"handler.handleMessage(new GenericMessage<String>(""foo""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"handler.handleMessage(new GenericMessage<String>(""bar""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"handler.handleMessage(new GenericMessage<String>(""baz""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
handler.trigger(new GenericMessage<String>(Matcher.quoteReplacement(file.getAbsolutePath())));,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
"handler.trigger(new GenericMessage<String>(""foo""));",5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
return destFile;,5fe7ee6b6cc94d1f14c56303acd8693f448b88e1,0,1
if (resultFile != null && originalFileFromHeader == null && payload instanceof File) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,10,0
if (state != null && ((isString && state.stream != null) || (!isString && state.writer != null))) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,9,1
if (originalFileFromHeader == null && payload instanceof File) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,7,1
if (this.deleteSourceFiles && originalFile != null && !originalFile.delete()) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,6,0
&& ((isString && state.stream != null) || (!isString && state.writer != null))) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,6,0
if (state == null || FileWritingMessageHandler.this.flushTask == null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,5,0
if (state == null || this.flushTask == null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,5,0
if (state == null || FileWritingMessageHandler.this.flushTask == null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,5,1
else if (payload instanceof InputStream) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,4,0
else if (payload instanceof byte[]) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,4,0
else if (payload instanceof String) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,4,0
* representing the bits that were set in the chmod value.,6da3307943ddf8c41f30f95473cfee4f22bdbe14,4,1
else if (payload instanceof InputStream) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,4,1
else if (payload instanceof byte[]) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,4,1
else if (payload instanceof String) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,4,1
if (this.deleteSourceFiles && originalFile != null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,4,1
"private File writeMessageToFile(Message<?> requestMessage, File originalFileFromHeader, File tempFile,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,0
if (payload instanceof File) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,0
if (timestamp instanceof Number) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,0
else if (this.logger.isWarnEnabled()) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,0
if (bos != null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,0
if (writer != null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,0
"throw new IllegalStateException(""Could not delete original file: "" + originalFile);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,0
if (state != null // NOSONAR,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,0
* We use that stream with a switch to create the set of PosixFilePermissions,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,1
if (payload instanceof File) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,1
if (timestamp instanceof Number) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,1
if (resultFile != null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,1
if (bos != null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,1
if (writer != null) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,3,1
* @param taskScheduler the {@link TaskScheduler} to use.,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
while (n++ < 10 && this.fileStates.size() > 0) { // NOSONAR,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"File resultFile, Object timestamp) throws IOException {",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
else {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"""Unsupported Message payload type ["" + payload.getClass().getName() + ""]"");",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
if (this.preserveTimestamp) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
if (!fileToReturn.setLastModified(((Number) timestamp).longValue())) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"throw new IllegalStateException(""Could not set last modified '"" + timestamp",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"+ "" must be a Number, not "" + (timestamp == null ? ""null"" : timestamp.getClass()));",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"new BufferedOutputStream(new FileOutputStream(tempFile), this.bufferSize)) {",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
while ((bytesRead = inputStream.read(buffer)) != -1) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, true);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
if (FileWritingMessageHandler.this.appendNewLine) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, append);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
if (this.appendNewLine) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"private void writeStringToFile(File fileToWriteTo, boolean append, String content) throws IOException {",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"writer = state != null ? state.writer : createWriter(fileToWriteTo, append);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,0
"* Since we are interested in 9 bits, we construct an array with the low-order byte",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
* (bits 0-7) followed by the second order byte (bit 8).,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
while (n++ < 10 && this.fileStates.size() > 0) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
else {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
"""unsupported Message payload type ["" + payload.getClass().getName() + ""]"");",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
if (this.preserveTimestamp) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
if (this.logger.isWarnEnabled()) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
"+ "" must be a Number, not "" + (timestamp == null ? ""null"" : timestamp.getClass()));",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, true);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
while ((bytesRead = sourceFileInputStream.read(buffer)) != -1) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
if (FileWritingMessageHandler.this.appendNewLine) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
"bos = state != null ? state.stream : createOutputStream(fileToWriteTo, append);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
"writer = state != null ? state.writer : createWriter(fileToWriteTo, append);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,2,1
import java.io.OutputStream;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
import java.util.stream.Collectors;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
private static final PosixFilePermission[] POSIX_FILE_PERMISSIONS =,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
{,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
"private final Map<String, FileState> fileStates = new HashMap<>();",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
* Configure a {@link TaskScheduler} for flush operations.,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
public void setTaskScheduler(TaskScheduler taskScheduler) { // NOSONAR,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
"Assert.isTrue(chmod >= 0 && chmod <= 0777, // NOSONAR permissions octal",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
"BitSet bits = BitSet.valueOf(new byte[] { (byte) chmod, (byte) (chmod >> 8) }); // NOSONAR",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
@Override // NOSONAR,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
File destinationDirectoryToUse = evaluateDestinationDirectoryExpression(requestMessage);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
File fileToReturn = null;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
Object payload = requestMessage.getPayload();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
},6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
throw new IllegalArgumentException(,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
"this.logger.warn(""Could not set lastModified, header "" + FileHeaders.SET_MODIFIED",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
"private void appendStreamToFile(File fileToWriteTo, InputStream sourceFileInputStream) throws IOException {",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
try (InputStream inputStream = sourceFileInputStream) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
byte[] buffer = new byte[StreamUtils.BUFFER_SIZE];,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
finally {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
try {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
catch (IOException ex) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
"private void writeBytesToFile(File fileToWriteTo, boolean append, byte[] bytes) throws IOException {",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,0
import java.util.HashSet;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
import org.apache.commons.logging.Log;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
import org.apache.commons.logging.LogFactory;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
"private final Map<String, FileState> fileStates = new HashMap<String, FileState>();",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
public void setTaskScheduler(TaskScheduler taskScheduler) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
"Assert.isTrue(chmod >= 0 && chmod <= 0777, ""'chmod' must be between 0 and 0777 (octal)"");",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
* Bitset.valueOf(byte[]) takes a little-endian array of bytes to create a BitSet.,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
* BitSet.stream() returns a stream of ints representing those bits that are set.,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
"BitSet bits = BitSet.valueOf(new byte[] { (byte) chmod, (byte) (chmod >> 8) });",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
final Set<PosixFilePermission> posixPermissions = new HashSet<>();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
bits.stream().forEach(b -> {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
switch (b) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
},6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
@Override,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
"Assert.notNull(payload, ""message payload must not be null"");",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
final File destinationDirectoryToUse = evaluateDestinationDirectoryExpression(requestMessage);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
throw new IllegalArgumentException(,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
"this.logger.warn(""Could not set lastModified, header "" + FileHeaders.SET_MODIFIED",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
try {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
byte[] buffer = new byte[StreamUtils.BUFFER_SIZE];,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
finally {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
catch (IOException ex) {,6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
"bos = new BufferedOutputStream(new FileOutputStream(tempFile), this.bufferSize);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,1,1
"PosixFilePermission.OTHERS_EXECUTE,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"PosixFilePermission.OTHERS_WRITE,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"PosixFilePermission.OTHERS_READ,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"PosixFilePermission.GROUP_EXECUTE,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"PosixFilePermission.GROUP_WRITE,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"PosixFilePermission.GROUP_READ,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"PosixFilePermission.OWNER_EXECUTE,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"PosixFilePermission.OWNER_WRITE,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
PosixFilePermission.OWNER_READ,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
};,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
/**,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
*/,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"setChmod(Integer.parseInt(chmod, 8)); // NOSONAR 8-bit",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"""'chmod' must be between 0 and 0777 (octal)"");",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
this.permissions = bits.stream(),6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
.boxed(),6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
.map((b) -> POSIX_FILE_PERMISSIONS[b]),6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
.collect(Collectors.toSet());,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"this.evaluationContext, null, ""destinationDirectoryExpression"");",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"this.flushTask = taskScheduler.scheduleAtFixedRate(new Flusher(), this.flushInterval / 3); // NOSONAR",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
boolean ignore = (FileExistsMode.IGNORE.equals(this.fileExistsMode) // NOSONAR,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"resultFile = writeMessageToFile(requestMessage, originalFileFromHeader, tempFile, resultFile,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
timestamp);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
return getMessageBuilderFactory(),6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
.withPayload(resultFile),6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
".setHeader(FileHeaders.ORIGINAL_FILE, payload);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"fileToReturn = handleFileMessage((File) payload, tempFile, resultFile, requestMessage);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"fileToReturn = handleInputStreamMessage((InputStream) payload, originalFileFromHeader, tempFile,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"resultFile, requestMessage);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"fileToReturn = handleByteArrayMessage((byte[]) payload, originalFileFromHeader, tempFile, resultFile,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
requestMessage);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"fileToReturn = handleStringMessage((String) payload, originalFileFromHeader, tempFile, resultFile,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"+ ""' timestamp on file: "" + fileToReturn);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
return fileToReturn;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"appendStreamToFile(fileToWriteTo, sourceFileInputStream);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
try (InputStream inputStream = sourceFileInputStream;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
OutputStream outputStream =,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
int bytesRead;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"outputStream.write(buffer, 0, bytesRead);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
outputStream.write(System.lineSeparator().getBytes());,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
outputStream.flush();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"cleanUpAfterCopy(tempFile, resultFile, originalFile);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
return resultFile;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"FileState state = getFileState(fileToWriteTo, false);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
BufferedOutputStream bos = null;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
int bytesRead = -1;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"bos.write(buffer, 0, bytesRead);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
bos.write(System.lineSeparator().getBytes());,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"clearState(fileToWriteTo, state);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
state.lastWrite = System.currentTimeMillis();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"writeBytesToFile(fileToWriteTo, append, bytes);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"cleanUpAfterCopy(fileToWriteTo, resultFile, originalFile);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
bos.write(bytes);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
bos.close();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"writeStringToFile(fileToWriteTo, append, content);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
"FileState state = getFileState(fileToWriteTo, true);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
BufferedWriter writer = null;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
writer.write(content);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
writer.newLine();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
writer.close();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,0
private final Log logger = LogFactory.getLog(this.getClass());,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"setChmod(Integer.parseInt(chmod, 8));",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
/*,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
*/,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 0:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.OTHERS_EXECUTE);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
break;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 1:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.OTHERS_WRITE);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 2:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.OTHERS_READ);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 3:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.GROUP_EXECUTE);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 4:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.GROUP_WRITE);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 5:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.GROUP_READ);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 6:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.OWNER_EXECUTE);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 7:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.OWNER_WRITE);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
case 8:,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
posixPermissions.add(PosixFilePermission.OWNER_READ);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
});,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
this.permissions = posixPermissions;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"this.evaluationContext, null, ""destinationDirectoryExpression"");",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"this.flushTask = taskScheduler.scheduleAtFixedRate(new Flusher(), this.flushInterval / 3);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"Assert.notNull(requestMessage, ""message must not be null"");",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
boolean ignore = (FileExistsMode.IGNORE.equals(this.fileExistsMode),6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"resultFile = handleFileMessage((File) payload, tempFile, resultFile, requestMessage);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"resultFile = handleInputStreamMessage((InputStream) payload, originalFileFromHeader, tempFile,",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"resultFile, requestMessage);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
resultFile = this.handleByteArrayMessage(,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"(byte[]) payload, originalFileFromHeader, tempFile, resultFile, requestMessage);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
resultFile = this.handleStringMessage(,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"(String) payload, originalFileFromHeader, tempFile, resultFile, requestMessage);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
resultFile.setLastModified(((Number) timestamp).longValue());,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
return this.getMessageBuilderFactory().withPayload(resultFile),6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
".setHeader(FileHeaders.ORIGINAL_FILE, payload);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"FileState state = getFileState(fileToWriteTo, false);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
BufferedOutputStream bos = null;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
int bytesRead = -1;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"bos.write(buffer, 0, bytesRead);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
bos.write(System.lineSeparator().getBytes());,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
sourceFileInputStream.close();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
bos.close();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"clearState(fileToWriteTo, state);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
state.lastWrite = System.currentTimeMillis();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
bos.flush();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"cleanUpAfterCopy(tempFile, resultFile, originalFile);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
return resultFile;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
bos.write(bytes);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"this.cleanUpAfterCopy(fileToWriteTo, resultFile, originalFile);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
"FileState state = getFileState(fileToWriteTo, true);",6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
BufferedWriter writer = null;,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
writer.write(content);,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
writer.newLine();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
writer.close();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
originalFile.delete();,6da3307943ddf8c41f30f95473cfee4f22bdbe14,0,1
* Copyright 2002-2018 the original author or authors.,1536b3c539dd24e804659153d184b1ba349b9128,2,0
* Copyright 2002-2017 the original author or authors.,1536b3c539dd24e804659153d184b1ba349b9128,2,1
import static org.hamcrest.Matchers.startsWith;,1536b3c539dd24e804659153d184b1ba349b9128,1,0
import static org.junit.Assert.assertThat;,1536b3c539dd24e804659153d184b1ba349b9128,1,0
"messagingTemplate.sendAndReceive(new GenericMessage<>(""Initial File Content:""));",1536b3c539dd24e804659153d184b1ba349b9128,1,0
"Message<?> replyMessage = messagingTemplate.sendAndReceive(new GenericMessage<>(""String content:""));",1536b3c539dd24e804659153d184b1ba349b9128,1,0
"Message<?> m = messagingTemplate.sendAndReceive(new GenericMessage<>(""String content:""));",1536b3c539dd24e804659153d184b1ba349b9128,1,0
"messagingTemplate.sendAndReceive(new GenericMessage<String>(""Initial File Content:""));",1536b3c539dd24e804659153d184b1ba349b9128,1,1
"Message<?> replyMessage = messagingTemplate.sendAndReceive(new GenericMessage<String>(""String content:""));",1536b3c539dd24e804659153d184b1ba349b9128,1,1
"Message<?> m = messagingTemplate.sendAndReceive(new GenericMessage<String>(""String content:""));",1536b3c539dd24e804659153d184b1ba349b9128,1,1
private static volatile int adviceCalled;,1536b3c539dd24e804659153d184b1ba349b9128,0,0
public void checkOrderedGateway() {,1536b3c539dd24e804659153d184b1ba349b9128,0,0
public void testOutboundGatewayWithDirectoryExpression() {,1536b3c539dd24e804659153d184b1ba349b9128,0,0
"handler.handleMessage(new GenericMessage<>(""foo""));",1536b3c539dd24e804659153d184b1ba349b9128,0,0
"messagingTemplate.sendAndReceive(new GenericMessage<>(""String content:""));",1536b3c539dd24e804659153d184b1ba349b9128,0,0
"assertThat(e.getMessage(), startsWith(""The destination file already exists at '""));",1536b3c539dd24e804659153d184b1ba349b9128,0,0
"protected Object doInvoke(ExecutionCallback callback, Object target, Message<?> message) {",1536b3c539dd24e804659153d184b1ba349b9128,0,0
private volatile static int adviceCalled;,1536b3c539dd24e804659153d184b1ba349b9128,0,1
public void checkOrderedGateway() throws Exception {,1536b3c539dd24e804659153d184b1ba349b9128,0,1
public void testOutboundGatewayWithDirectoryExpression() throws Exception {,1536b3c539dd24e804659153d184b1ba349b9128,0,1
"handler.handleMessage(new GenericMessage<String>(""foo""));",1536b3c539dd24e804659153d184b1ba349b9128,0,1
"messagingTemplate.sendAndReceive(new GenericMessage<String>(""String content:""));",1536b3c539dd24e804659153d184b1ba349b9128,0,1
"assertTrue(e.getMessage().startsWith(""The destination file already exists at '""));",1536b3c539dd24e804659153d184b1ba349b9128,0,1
"protected Object doInvoke(ExecutionCallback callback, Object target, Message<?> message) throws Exception {",1536b3c539dd24e804659153d184b1ba349b9128,0,1
import static org.assertj.core.api.Assertions.assertThatExceptionOfType;,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,0
import static org.mockito.ArgumentMatchers.eq;,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,0
import static org.mockito.ArgumentMatchers.startsWith;,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,0
import static org.mockito.BDDMockito.given;,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,0
import static org.mockito.Mockito.spy;,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,0
import static org.assertj.core.api.Assertions.fail;,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,1
public void dispatchMessageWithSingleHandler() throws Exception {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,1
public void differentHandlerInvokedOnSecondMessage() throws Exception {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,1
public void multipleCyclesThroughHandlers() throws Exception {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,1
public void currentHandlerIndexOverFlow() throws Exception {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,2,1
import org.apache.commons.logging.Log;,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
import org.springframework.integration.test.util.TestUtils;,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
* @author Artem Bilan,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
public void dispatchMessageWithSingleHandler() {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
public void differentHandlerInvokedOnSecondMessage() {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
public void multipleCyclesThroughHandlers() {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
public void currentHandlerIndexOverFlow() {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
public void testFailOverAndLogging() {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
"RuntimeException testException = new RuntimeException(""intentional"");",fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
DirectFieldAccessor directFieldAccessor = new DirectFieldAccessor(this.dispatcher);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
"Log log = (Log) spy(directFieldAccessor.getPropertyType(""logger""));",fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
"verify(log).debug(startsWith(""An exception was thrown by '""), eq(testException));",fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
},fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,0
"verify(handler, times(4)).handleMessage(message);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,1
"verify(differentHandler, times(3)).handleMessage(message);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,1
DirectFieldAccessor accessor = new DirectFieldAccessor(,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,1
"verify(handler, atLeast(18)).handleMessage(message);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,1
"verify(differentHandler, atLeast(18)).handleMessage(message);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,1
try {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,1
},fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,1
catch (MessagingException e) {,fd373882dede46c9d7f6153c3c49a60c7a49edf0,1,1
this.dispatcher.addHandler(this.handler);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
this.dispatcher.dispatch(this.message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
verify(this.handler).handleMessage(this.message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
this.dispatcher.addHandler(this.differentHandler);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
verify(this.differentHandler).handleMessage(this.message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
"verify(this.handler, times(4)).handleMessage(this.message);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
"verify(this.differentHandler, times(3)).handleMessage(this.message);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
"TestUtils.getPropertyValue(this.dispatcher, ""loadBalancingStrategy.currentHandlerIndex"", AtomicInteger.class)",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
.set(Integer.MAX_VALUE - 5);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
"verify(this.handler, atLeast(18)).handleMessage(this.message);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
"verify(this.differentHandler, atLeast(18)).handleMessage(this.message);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
"doThrow(new MessagingException(""Mock Exception""))",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
.when(this.handler),fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
.handleMessage(this.message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
assertThatExceptionOfType(MessagingException.class),fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
.isThrownBy(() -> this.dispatcher.dispatch(this.message)),fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
.satisfies(ex -> assertThat(ex.getFailedMessage()).isEqualTo(this.message));,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
"doThrow(new MessagingException(dontReplaceThisMessage, ""Mock Exception""))",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
.satisfies(ex -> assertThat(ex.getFailedMessage()).isEqualTo(dontReplaceThisMessage));,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
@Test,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
doThrow(testException),fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
given(log.isDebugEnabled()).willReturn(true);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
"directFieldAccessor.setPropertyValue(""logger"", log);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,0
dispatcher.addHandler(handler);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
dispatcher.dispatch(message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
dispatcher.addHandler(differentHandler);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
verify(handler).handleMessage(message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
verify(differentHandler).handleMessage(message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
"new DirectFieldAccessor(dispatcher).getPropertyValue(""loadBalancingStrategy""));",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
"((AtomicInteger) accessor.getPropertyValue(""currentHandlerIndex"")).set(Integer.MAX_VALUE - 5);",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
"doThrow(new MessagingException(""Mock Exception"")).",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
when(handler).handleMessage(message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
"fail(""Expected Exception"");",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
assertThat(e.getFailedMessage()).isEqualTo(message);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
"doThrow(new MessagingException(dontReplaceThisMessage, ""Mock Exception"")).",fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
assertThat(e.getFailedMessage()).isEqualTo(dontReplaceThisMessage);,fd373882dede46c9d7f6153c3c49a60c7a49edf0,0,1
* Copyright 2002-2014 the original author or authors.,564860bde313c8ac335bfecad2118f97c8e0f6ab,2,0
* Copyright 2002-2010 the original author or authors.,564860bde313c8ac335bfecad2118f97c8e0f6ab,2,1
import org.springframework.messaging.handler.annotation.Header;,564860bde313c8ac335bfecad2118f97c8e0f6ab,1,0
import org.springframework.integration.annotation.Header;,564860bde313c8ac335bfecad2118f97c8e0f6ab,1,1
"public String test(String str, @Header(IntegrationMessageHeaderAccessor.PRIORITY) int priority,",564860bde313c8ac335bfecad2118f97c8e0f6ab,0,0
"@Header(""$custom"") String custom);",564860bde313c8ac335bfecad2118f97c8e0f6ab,0,0
"public String test(String str, @Header(IntegrationMessageHeaderAccessor.PRIORITY) int priority, @Header(""$custom"") String custom);",564860bde313c8ac335bfecad2118f97c8e0f6ab,0,1
HttpRequestExecutingMessageHandler handler =,1363b2699e6a01a48d8b18e808bb2574714cb8ed,1,0
"HttpRequestExecutingMessageHandler handler = (HttpRequestExecutingMessageHandler) endpointAccessor.getPropertyValue(""handler"");",1363b2699e6a01a48d8b18e808bb2574714cb8ed,1,1
* Copyright 2002-2021 the original author or authors.,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
import static org.assertj.core.api.Assertions.assertThatExceptionOfType;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
import java.nio.charset.StandardCharsets;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
import org.junit.jupiter.api.Test;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
@SpringJUnitConfig,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
"assertThat(handlerAccessor.getPropertyValue(""charset"")).isEqualTo(StandardCharsets.UTF_8);",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
public void fullConfig() {,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
"(HttpRequestExecutingMessageHandler) endpointAccessor.getPropertyValue(""handler"");",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
"assertThat(handlerAccessor.getPropertyValue(""extractResponseBody"")).isEqualTo(false);",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
"handler.handleMessage(new GenericMessage<>(""foo""));",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
assertThatExceptionOfType(BeanDefinitionParsingException.class),1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
.isThrownBy(() ->,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
"new ClassPathXmlApplicationContext(""HttpOutboundGatewayWithinChainTests-fail-context.xml"",",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
getClass())),1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
".withMessageContaining(""'request-channel' attribute isn't allowed for a nested"");",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
public boolean hasError(ClientHttpResponse response) {,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
public void handleError(ClientHttpResponse response) {,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,0
* Copyright 2002-2020 the original author or authors.,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
import static org.assertj.core.api.Assertions.fail;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
import java.io.IOException;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
import java.nio.charset.Charset;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
import org.junit.Test;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
import org.junit.runner.RunWith;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
import org.springframework.beans.BeansException;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
import org.springframework.test.context.ContextConfiguration;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
@RunWith(SpringJUnit4ClassRunner.class),1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
@ContextConfiguration,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
"assertThat(handlerAccessor.getPropertyValue(""charset"")).isEqualTo(Charset.forName(""UTF-8""));",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
public void fullConfig() throws Exception {,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
"handler.handleMessage(new GenericMessage<String>(""foo""));",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
try {,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
"new ClassPathXmlApplicationContext(""HttpOutboundGatewayWithinChainTests-fail-context.xml"", this.getClass())",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
.close();,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
"fail(""Expected BeanDefinitionParsingException"");",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
},1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
catch (BeansException e) {,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
assertThat(e instanceof BeanDefinitionParsingException).isTrue();,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
"assertThat(e.getMessage().contains(""'request-channel' attribute isn't allowed for a nested"")).isTrue();",1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
public boolean hasError(ClientHttpResponse response) throws IOException {,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
public void handleError(ClientHttpResponse response) throws IOException {,1363b2699e6a01a48d8b18e808bb2574714cb8ed,0,1
RootBeanDefinition channelDefinition = new RootBeanDefinition(DirectChannel.class);,00bca2d5117fb534e6ff2466fd40973a9328e596,4,0
RootBeanDefinition channelDefinition = new RootBeanDefinition(DirectChannel.class);,00bca2d5117fb534e6ff2466fd40973a9328e596,4,1
if (queueElement != null && (dispatcherElement != null || hasDispatcherAttribute)) {,00bca2d5117fb534e6ff2466fd40973a9328e596,3,1
"// this attribute is deprecated, but if set, we need to create a DirectChannel",00bca2d5117fb534e6ff2466fd40973a9328e596,3,1
RootBeanDefinition testBeanDefinition = new RootBeanDefinition(TestBean.class);,00bca2d5117fb534e6ff2466fd40973a9328e596,3,0
RootBeanDefinition channelDefinition = (RootBeanDefinition) channelBuilder.getBeanDefinition();,00bca2d5117fb534e6ff2466fd40973a9328e596,3,0
RootBeanDefinition testBeanDefinition = new RootBeanDefinition(TestBean.class);,00bca2d5117fb534e6ff2466fd40973a9328e596,3,1
RootBeanDefinition channelDefinition = (RootBeanDefinition) channelBuilder.getBeanDefinition();,00bca2d5117fb534e6ff2466fd40973a9328e596,3,1
if (queueElement != null && dispatcherElement != null) {,00bca2d5117fb534e6ff2466fd40973a9328e596,2,0
if (dispatcherElement != null && hasDispatcherAttribute) {,00bca2d5117fb534e6ff2466fd40973a9328e596,2,1
builder = BeanDefinitionBuilder.genericBeanDefinition(DirectChannel.class);,00bca2d5117fb534e6ff2466fd40973a9328e596,2,1
* Copyright 2002-2022 the original author or authors.,00bca2d5117fb534e6ff2466fd40973a9328e596,2,0
"MessageChannel channel = (MessageChannel) context.getBean(""input"");",00bca2d5117fb534e6ff2466fd40973a9328e596,2,0
BeanDefinitionBuilder channelBuilder = BeanDefinitionBuilder.rootBeanDefinition(DirectChannel.class);,00bca2d5117fb534e6ff2466fd40973a9328e596,2,0
* Copyright 2002-2019 the original author or authors.,00bca2d5117fb534e6ff2466fd40973a9328e596,2,1
"MessageChannel channel = (MessageChannel) context.getBean(""input"");",00bca2d5117fb534e6ff2466fd40973a9328e596,2,1
BeanDefinitionBuilder channelBuilder = BeanDefinitionBuilder.rootBeanDefinition(DirectChannel.class);,00bca2d5117fb534e6ff2466fd40973a9328e596,2,1
if (dispatcherElement == null) {,00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
// check for the dispatcher attribute (deprecated),00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
"String dispatcherAttribute = element.getAttribute(""dispatcher"");",00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
boolean hasDispatcherAttribute = StringUtils.hasText(dispatcherAttribute);,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
if (hasDispatcherAttribute && logger.isWarnEnabled()) {,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
},00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
"+ ""Please use the dispatcher sub-element instead."", element);",00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
if (hasDispatcherAttribute) {,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
// without any LoadBalancerStrategy and the failover flag set to true (default).,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
"if (""failover"".equals(dispatcherAttribute)) {",00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
"// round-robin dispatcher is used by default, the ""failover"" value simply disables it",00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
else if (dispatcherElement == null) {,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
import org.junit.jupiter.api.Test;,00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
import org.springframework.integration.config.MessagingAnnotationPostProcessor;,00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
try (GenericApplicationContext context = TestUtils.createTestApplicationContext()) {,00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
new RootBeanDefinition(MessagingAnnotationPostProcessor.class));,00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
"TestBean testBean = (TestBean) context.getBean(""testBean"");",00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
List<Integer> calls = testBean.calls;,00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
},00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
.addGenericArgumentValue(new RoundRobinLoadBalancingStrategy());,00bca2d5117fb534e6ff2466fd40973a9328e596,1,0
import org.junit.Test;,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
GenericApplicationContext context = TestUtils.createTestApplicationContext();,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
"context.registerBeanDefinition(""postProcessor"", new RootBeanDefinition(MessagingAnnotationPostProcessor.class));",00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
"TestBean testBean = (TestBean) context.getBean(""testBean"");",00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
List<Integer> calls = testBean.calls;,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
channelDefinition.getConstructorArgumentValues().addGenericArgumentValue(new RoundRobinLoadBalancingStrategy());,00bca2d5117fb534e6ff2466fd40973a9328e596,1,1
"""The 'dispatcher' sub-element and any queue sub-element are mutually exclusive."", element);",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"logger.warn(""The 'dispatcher' attribute on the 'channel' element is deprecated. """,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"+ ""Please use the 'dispatcher' sub-element instead."");",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"""The 'dispatcher' attribute or sub-element "" + ""and any queue sub-element are mutually exclusive."",",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
element);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
parserContext.getReaderContext().error(,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"""The 'dispatcher' attribute and 'dispatcher' """,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"+ ""sub-element are mutually exclusive. NOTE: the attribute is DEPRECATED. """,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
return null;,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
builder.addConstructorArgValue(null);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"context.registerBeanDefinition(""postProcessor"",",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"context.registerBeanDefinition(""input"", channelDefinition);",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"context.registerBeanDefinition(""testBean"", testBeanDefinition);",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
context.refresh();,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-1""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-2""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-3""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-4""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-5""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(calls.size()).isEqualTo(5);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(calls.get(0).intValue()).isEqualTo(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(calls.get(1).intValue()).isEqualTo(2);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(calls.get(2).intValue()).isEqualTo(3);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(calls.get(3).intValue()).isEqualTo(4);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(calls.get(4).intValue()).isEqualTo(5);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
channelBuilder.addConstructorArgValue(null);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(2);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-6""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-7""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-8""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-9""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-10""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.size()).isEqualTo(10);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(0).intValue()).isEqualTo(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(1).intValue()).isEqualTo(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(2).intValue()).isEqualTo(2);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(3).intValue()).isEqualTo(2);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(4).intValue()).isEqualTo(3);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(5).intValue()).isEqualTo(3);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(6).intValue()).isEqualTo(4);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(7).intValue()).isEqualTo(4);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(8).intValue()).isEqualTo(5);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.get(9).intValue()).isEqualTo(5);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
testBean.reset();,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"channel.send(new GenericMessage<>(""test-11""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
assertThat(testBean.calls.size()).isEqualTo(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
channelDefinition.getConstructorArgumentValues(),00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(1000);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,0
"context.registerBeanDefinition(""input"", channelDefinition);",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"context.registerBeanDefinition(""testBean"", testBeanDefinition);",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
context.refresh();,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-1""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-2""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-3""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-4""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-5""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(calls.size()).isEqualTo(5);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(calls.get(0).intValue()).isEqualTo(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(calls.get(1).intValue()).isEqualTo(2);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(calls.get(2).intValue()).isEqualTo(3);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(calls.get(3).intValue()).isEqualTo(4);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(calls.get(4).intValue()).isEqualTo(5);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
context.close();,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
channelBuilder.addConstructorArgValue(null);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(2);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-6""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-7""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-8""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-9""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-10""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.size()).isEqualTo(10);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(0).intValue()).isEqualTo(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(1).intValue()).isEqualTo(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(2).intValue()).isEqualTo(2);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(3).intValue()).isEqualTo(2);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(4).intValue()).isEqualTo(3);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(5).intValue()).isEqualTo(3);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(6).intValue()).isEqualTo(4);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(7).intValue()).isEqualTo(4);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(8).intValue()).isEqualTo(5);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.get(9).intValue()).isEqualTo(5);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
testBean.reset();,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
"channel.send(new GenericMessage<String>(""test-11""));",00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
assertThat(testBean.calls.size()).isEqualTo(1);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
testBeanDefinition.getConstructorArgumentValues().addGenericArgumentValue(1000);,00bca2d5117fb534e6ff2466fd40973a9328e596,0,1
Thread thread = new Thread(runner);,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,5,0
"Executor executor = Executors.newFixedThreadPool(this.poolSize, new ThreadFactory() {",3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,5,1
Thread thread = new Thread(runner);,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,5,1
* Creates a default task executor if none was supplied.,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,4,0
* Creates a default task executor if none was supplied.,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,4,1
public Thread newThread(Runnable runner) {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,4,1
protected void checkTaskExecutor(final String threadName) {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,3,0
if (isActive() && this.taskExecutor == null) {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,3,0
if (!this.taskExecutorSet && this.taskExecutor != null) {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,3,0
protected void checkTaskExecutor(final String threadName) {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,3,1
if (this.active && this.taskExecutor == null) {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,3,1
if (!this.taskExecutorSet && this.taskExecutor != null) {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,3,1
protected void doStart() {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,0
String beanName = getComponentName();,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,0
* @param threadName The thread name.,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,0
this.taskExecutor =,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,0
protected void doStop() {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,0
this.taskExecutor = null;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,0
protected void doStart() {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,1
String beanName = this.getComponentName();,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,1
* @param threadName The thread name.,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,1
this.taskExecutor = executor;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,1
protected void doStop() {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,1
this.taskExecutor = null;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,1
public boolean isActive() {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,2,1
* Copyright 2002-2020 the original author or authors.,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,0
* @author Artem Bilan,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,0
*,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,0
* Protected by lifecycleLock,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,0
},3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,0
(runner) -> {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,0
* Copyright 2002-2019 the original author or authors.,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
import java.util.concurrent.ThreadFactory;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
private volatile boolean active;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
* Protected by lifecycleLock,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
if (!this.active) {,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
this.active = true;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
},3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
*,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
this.active = false;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
* @return the active,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,1,1
@Override,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
"checkTaskExecutor((beanName == null ? """" : beanName + ""-"") + getComponentType());",3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
this.taskExecutor.execute(this);,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
/**,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
*/,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
"Executors.newFixedThreadPool(this.poolSize,",3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
thread.setName(threadName);,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
thread.setDaemon(true);,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
return thread;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
});,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
((ExecutorService) this.taskExecutor).shutdown();,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,0
/**,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
*/,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
@Override,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
"checkTaskExecutor((beanName == null ? """" : beanName + ""-"") + this.getComponentType());",3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
this.taskExecutor.execute(this);,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
thread.setName(threadName);,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
thread.setDaemon(true);,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
return thread;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
});,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
((ExecutorService) this.taskExecutor).shutdown();,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
return this.active;,3e9dd90f101a9748dd145a93eeeb021b7c10ad2e,0,1
* Copyright 2002-2013 the original author or authors.,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,3,0
* Copyright 2002-2010 the original author or authors.,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,3,1
ClassLoader classLoader = parserContext.getReaderContext().getBeanClassLoader();,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,2,1
classLoader = this.getClass().getClassLoader();,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,2,1
* @author Artem Bilan,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,0
if (StringUtils.hasText(ref) && StringUtils.hasText(type)) {,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,0
"""but both have valid values; type: "" + type + ""; ref: "" + ref,",7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,0
},7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,0
if (StringUtils.hasText(ref)) {,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,0
else if (StringUtils.hasText(type)) {,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,0
"""'type' and 'ref' attributes are mutually-exclusive, but both have valid values; type: "" + type + ""; ref:"");",7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,1
} else if (StringUtils.hasText(type)){,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,1
if (classLoader == null) {,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,1
},7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,1
"Class<?> clazz = ClassUtils.resolveClassName(type, classLoader);",7ec2138ae8043612b35e3a9a9afbb7729b5c989c,1,1
"parserContext.getReaderContext().error(""'type' and 'ref' attributes are mutually-exclusive, "" +",7ec2138ae8043612b35e3a9a9afbb7729b5c989c,0,0
IntegrationNamespaceUtils.createElementDescription(element));,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,0,0
"builder.getBeanDefinition().getConstructorArgumentValues().addGenericArgumentValue(type, ""java.lang.Class"");",7ec2138ae8043612b35e3a9a9afbb7729b5c989c,0,0
import org.springframework.util.Assert;,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,0,1
import org.springframework.util.ClassUtils;,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,0,1
"Assert.isTrue(!(StringUtils.hasText(ref) && StringUtils.hasText(type)),",7ec2138ae8043612b35e3a9a9afbb7729b5c989c,0,1
if (StringUtils.hasText(ref)){,7ec2138ae8043612b35e3a9a9afbb7729b5c989c,0,1
"builder.getBeanDefinition().getConstructorArgumentValues().addGenericArgumentValue(clazz, ""java.lang.Class"");",7ec2138ae8043612b35e3a9a9afbb7729b5c989c,0,1
"String result = processor.processMessage(new GenericMessage<>(""classpath*:*-test.xml""));",c17bddc34f7dc456b29f118718aaf6888184cb0b,4,0
ExpressionEvaluatingMessageProcessor processor = new ExpressionEvaluatingMessageProcessor(expression);,c17bddc34f7dc456b29f118718aaf6888184cb0b,4,1
"String result = (String) processor.processMessage(new GenericMessage<String>(""classpath*:*.properties""));",c17bddc34f7dc456b29f118718aaf6888184cb0b,4,1
ExpressionEvaluatingMessageProcessor<String> processor = new ExpressionEvaluatingMessageProcessor<>(expression);,c17bddc34f7dc456b29f118718aaf6888184cb0b,3,0
ExpressionEvaluatingMessageProcessor<UUID> processor = new ExpressionEvaluatingMessageProcessor<>(expression);,c17bddc34f7dc456b29f118718aaf6888184cb0b,3,0
private static final ExpressionParser expressionParser = new SpelExpressionParser();,c17bddc34f7dc456b29f118718aaf6888184cb0b,2,0
"GenericMessage<String> message = new GenericMessage<>(""foo"");",c17bddc34f7dc456b29f118718aaf6888184cb0b,2,0
"private static final ExpressionParser expressionParser = new SpelExpressionParser(new SpelParserConfiguration(true, true));",c17bddc34f7dc456b29f118718aaf6888184cb0b,2,1
"GenericMessage<String> message = new GenericMessage<String>(""foo"");",c17bddc34f7dc456b29f118718aaf6888184cb0b,2,1
* Copyright 2002-2018 the original author or authors.,c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
import java.util.UUID;,c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
*,c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
"assertEquals(""foo"", processor.processMessage(new GenericMessage<>(""foo"")));",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
EvaluationContext evaluationContext =,c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
"assertEquals(""2"", processor.processMessage(new GenericMessage<>(""2"")));",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
"assertEquals(null, processor.processMessage(new GenericMessage<>(""2"")));",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
return Arrays.toString(resources);,c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
"assertEquals(""foo"", processor.processMessage(new GenericMessage<>(new TestPayload())));",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,0
* Copyright 2002-2016 the original author or authors.,c17bddc34f7dc456b29f118718aaf6888184cb0b,1,1
import org.springframework.expression.spel.SpelParserConfiguration;,c17bddc34f7dc456b29f118718aaf6888184cb0b,1,1
"assertEquals(""foo"", processor.processMessage(new GenericMessage<String>(""foo"")));",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,1
"EvaluationContext evaluationContext = TestUtils.getPropertyValue(processor, ""evaluationContext"", EvaluationContext.class);",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,1
"assertEquals(""2"", processor.processMessage(new GenericMessage<String>(""2"")));",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,1
"assertEquals(null, processor.processMessage(new GenericMessage<String>(""2"")));",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,1
return Arrays.asList(resources).toString();,c17bddc34f7dc456b29f118718aaf6888184cb0b,1,1
"assertEquals(""foo"", processor.processMessage(new GenericMessage<TestPayload>(new TestPayload())));",c17bddc34f7dc456b29f118718aaf6888184cb0b,1,1
"TestUtils.getPropertyValue(processor, ""evaluationContext"", EvaluationContext.class);",c17bddc34f7dc456b29f118718aaf6888184cb0b,0,0
applicationContext.getBeanFactory(),c17bddc34f7dc456b29f118718aaf6888184cb0b,0,0
".registerSingleton(IntegrationContextUtils.INTEGRATION_EVALUATION_CONTEXT_BEAN_NAME,",c17bddc34f7dc456b29f118718aaf6888184cb0b,0,0
factoryBean.getObject());,c17bddc34f7dc456b29f118718aaf6888184cb0b,0,0
"assertTrue(""Wrong result: "" + result, result.contains(""log4j2-test.xml""));",c17bddc34f7dc456b29f118718aaf6888184cb0b,0,0
"@SuppressWarnings({ ""rawtypes"", ""unchecked"" })",c17bddc34f7dc456b29f118718aaf6888184cb0b,0,1
"applicationContext.getBeanFactory().registerSingleton(IntegrationContextUtils.INTEGRATION_EVALUATION_CONTEXT_BEAN_NAME,",c17bddc34f7dc456b29f118718aaf6888184cb0b,0,1
factoryBean.getObject());,c17bddc34f7dc456b29f118718aaf6888184cb0b,0,1
"assertTrue(""Wrong result: "" + result, result.contains(""log4j.properties""));",c17bddc34f7dc456b29f118718aaf6888184cb0b,0,1
"throw new MessageHandlingException(message, ""Failed to handle message using "" + connectionId, e);",c25367cfd3f771e0c2cff570f0253c95e473f33d,7,1
protected final Object lifecycleMonitor = new Object(); // NOSONAR,c25367cfd3f771e0c2cff570f0253c95e473f33d,5,0
"""Failed to handle message using "" + connectionId, ex);",c25367cfd3f771e0c2cff570f0253c95e473f33d,5,0
protected final Object lifecycleMonitor = new Object();,c25367cfd3f771e0c2cff570f0253c95e473f33d,5,1
public static final long DEFAULT_RETRY_INTERVAL = 60000;,c25367cfd3f771e0c2cff570f0253c95e473f33d,4,0
if (connectionId != null) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,4,0
if (connection != null) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,4,0
if (this.isSingleUse) { // close after replying,c25367cfd3f771e0c2cff570f0253c95e473f33d,4,0
if (connectionId != null) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,4,1
if (connection != null) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,4,1
catch (Exception e) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,4,1
if (this.isSingleUse) { // close after replying,c25367cfd3f771e0c2cff570f0253c95e473f33d,4,1
* Copyright 2002-2019 the original author or authors.,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
"private final Map<String, TcpConnection> connections = new ConcurrentHashMap<>();",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
public void handleMessageInternal(final Message<?> message) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
"String connectionId = message.getHeaders().get(IpHeaders.CONNECTION_ID, String.class);",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
TcpConnection connection = null;,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
catch (Exception ex) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
"logger.error(""Unable to find outbound socket for "" + message);",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
// we own the connection,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
catch (MessageHandlingException e) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
if (logger.isDebugEnabled()) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
"logger.debug(""Fail on first write attempt"", e);",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
if (connection != null && this.isSingleUse,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
&& this.clientConnectionFactory.getListener() == null) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
"// if there's no collaborating inbound adapter, close immediately, otherwise",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
// it will close after receiving the reply.,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
* Copyright 2002-2018 the original author or authors.,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
"private final Map<String, TcpConnection> connections = new ConcurrentHashMap<String, TcpConnection>();",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
TcpConnection connection = null;,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
public void handleMessageInternal(final Message<?> message) throws,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
Object connectionId = message.getHeaders().get(IpHeaders.CONNECTION_ID);,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
"logger.error(""Unable to find outbound socket for "" + message);",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
// we own the connection,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
catch (MessageHandlingException e) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
if (logger.isDebugEnabled()) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
"logger.debug(""Fail on first write attempt"", e);",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
if (connection != null && this.isSingleUse,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
&& this.clientConnectionFactory.getListener() == null) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
"// if there's no collaborating inbound adapter, close immediately, otherwise",c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
// it will close after receiving the reply.,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
@Override // super class is protected,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
public void setTaskScheduler(TaskScheduler taskScheduler) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
* Copyright 2002-2021 the original author or authors.,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,0
* Copyright 2002-2020 the original author or authors.,c25367cfd3f771e0c2cff570f0253c95e473f33d,3,1
* A default retry interval for the {@link ClientModeConnectionManager} rescheduling.,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
TcpConnection connection;,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
private void handleMessageAsServer(Message<?> message) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
"// We don't own the connection, we are asynchronously replying",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
connection = this.connections.get(connectionId);,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
Throwable cause) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
if (cause instanceof MessageHandlingException) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
private void handleMessageAsClient(Message<?> message) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
connection = doWrite(message);,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
// retry - socket may have closed,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
if (e.getCause() instanceof IOException) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
"Assert.notNull(this.clientConnectionFactory, ""For client-mode, connection factory must be type='client'"");",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
"""For client-mode, connection factory must be type='client'"");",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
"Assert.state(getTaskScheduler() != null, ""Client mode requires a task scheduler"");",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
"// We don't own the connection, we are asynchronously replying",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
connection = this.connections.get(connectionId);,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
if (e instanceof MessageHandlingException) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
"throw new MessageHandlingException(message, ""Error sending message"", e);",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
"MessageHandlingException messageHandlingException = new MessageHandlingException(message,",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
// retry - socket may have closed,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
if (e.getCause() instanceof IOException) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
connection = doWrite(message);,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
"""For client-mode, connection factory must be type='client'"");",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
ClientModeConnectionManager manager = new ClientModeConnectionManager(,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
"Assert.state(this.getTaskScheduler() != null, ""Client mode requires a task scheduler"");",c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
if (wrapped.equals(connection)) {,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
connection = wrapped;,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,0
connection = wrapConnection(connection);,c25367cfd3f771e0c2cff570f0253c95e473f33d,2,1
*,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
* @author Artem Bilan,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
/**,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
*/,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
private boolean isClientMode;,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
private boolean isSingleUse;,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
private long retryInterval = DEFAULT_RETRY_INTERVAL;,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
},c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
else {,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
try {,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
finally {,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
MessageHandlingException messageHandlingException =,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
"new MessageHandlingException(message, ""Unable to find outbound socket"");",c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
"private MessageHandlingException wrapToMessageHandlingExceptionIfNecessary(Message<?> message, String description,",c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
"throw new MessageHandlingException(message, description, cause);",c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
"new TcpConnectionFailedCorrelationEvent(this, connectionId, messageHandlingException));",c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
ClientModeConnectionManager manager =,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
new ClientModeConnectionManager(this.clientConnectionFactory);,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
"this.scheduledFuture = getTaskScheduler().scheduleAtFixedRate(manager, this.retryInterval);",c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
import org.springframework.scheduling.TaskScheduler;,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
private volatile boolean isClientMode;,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
private volatile boolean isSingleUse;,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
private volatile long retryInterval = 60000;,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
MessageHandlingException {,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
try {,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
},c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
"logger.error(""Error sending message"", e);",c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
else {,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
finally {,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
"new TcpConnectionFailedCorrelationEvent(this, connectionId, messageHandlingException));",c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
"this.scheduledFuture = this.getTaskScheduler().scheduleAtFixedRate(manager, this.retryInterval);",c25367cfd3f771e0c2cff570f0253c95e473f33d,1,1
TcpConnectionSupport wrapped = wrapConnection(connection);,c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
},c25367cfd3f771e0c2cff570f0253c95e473f33d,1,0
private AbstractConnectionFactory clientConnectionFactory;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
private AbstractConnectionFactory serverConnectionFactory;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
handleMessageAsServer(message);,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
handleMessageAsClient(message);,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
connection.send(message);,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
"logger.error(""Error sending message"", ex);",c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
connection.close();,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
"throw wrapToMessageHandlingExceptionIfNecessary(message, ""Error sending message"", ex);",c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
"publishNoConnectionEvent(messageHandlingException, connectionId);",c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
throw messageHandlingException;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
throw (MessageHandlingException) cause;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
throw e;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
"throw wrapToMessageHandlingExceptionIfNecessary(message,",c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
"Assert.notNull(this.clientConnectionFactory,",c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
private volatile AbstractConnectionFactory clientConnectionFactory;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
private volatile AbstractConnectionFactory serverConnectionFactory;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
connection.send(message);,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
throw (MessageHandlingException) e;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
connection.close();,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
"""Unable to find outbound socket"");",c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
"publishNoConnectionEvent(messageHandlingException, (String) connectionId);",c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
throw messageHandlingException;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
return;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
throw e;,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
"Assert.notNull(this.clientConnectionFactory,",c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
this.clientConnectionFactory);,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
super.setTaskScheduler(taskScheduler);,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,1
connection.setSenders(getSenders());,c25367cfd3f771e0c2cff570f0253c95e473f33d,0,0
Set<String> replies = new HashSet<>();,390cc84c5b41e4375bb89b6007231bc7727bd112,3,0
Set<String> replies = new HashSet<String>();,390cc84c5b41e4375bb89b6007231bc7727bd112,3,1
private AsyncTaskExecutor executor = new SimpleAsyncTaskExecutor();,390cc84c5b41e4375bb89b6007231bc7727bd112,2,0
final AtomicReference<ServerSocket> serverSocket = new AtomicReference<>();,390cc84c5b41e4375bb89b6007231bc7727bd112,2,0
List<Socket> sockets = new ArrayList<>();,390cc84c5b41e4375bb89b6007231bc7727bd112,2,0
results[j] = (this.executor.submit(() -> {,390cc84c5b41e4375bb89b6007231bc7727bd112,2,0
final AtomicReference<String> lastReceived = new AtomicReference<>();,390cc84c5b41e4375bb89b6007231bc7727bd112,2,0
final AtomicReference<ServerSocket> serverSocket = new AtomicReference<ServerSocket>();,390cc84c5b41e4375bb89b6007231bc7727bd112,2,1
List<Socket> sockets = new ArrayList<Socket>();,390cc84c5b41e4375bb89b6007231bc7727bd112,2,1
results[j] = (Executors.newSingleThreadExecutor().submit(() -> {,390cc84c5b41e4375bb89b6007231bc7727bd112,2,1
final AtomicReference<String> lastReceived = new AtomicReference<String>();,390cc84c5b41e4375bb89b6007231bc7727bd112,2,1
this.executor.execute(() -> {,390cc84c5b41e4375bb89b6007231bc7727bd112,1,0
Executors.newSingleThreadExecutor().execute(() -> {,390cc84c5b41e4375bb89b6007231bc7727bd112,1,1
import org.springframework.core.task.AsyncTaskExecutor;,390cc84c5b41e4375bb89b6007231bc7727bd112,0,0
import org.springframework.core.task.SimpleAsyncTaskExecutor;,390cc84c5b41e4375bb89b6007231bc7727bd112,0,0
import java.util.concurrent.Executors;,390cc84c5b41e4375bb89b6007231bc7727bd112,0,1
* Test for INT-3054: Do not break if there are extra uri variables defined in the http outbound gateway.,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,4,0
"Map<String, Expression> multipleExpressions = new HashMap<>();",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,3,0
/** Test for INT-3054: Do not break if there are extra uri variables defined in the http outbound gateway. */,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,3,1
"Map<String, Expression> multipleExpressions = new HashMap<String, Expression>();",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,3,1
"Map<String, Object> expressions = new HashMap<>();",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,2,0
"Map<String, Object> expressions = new HashMap<String, Object>();",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,2,1
* Copyright 2002-2019 the original author or authors.,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,2,0
* Copyright 2002-2018 the original author or authors.,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,2,1
final AtomicReference<URI> uriHolder = new AtomicReference<>();,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,1,0
"Message<?> message = new GenericMessage<>(""bar"");",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,1,0
import java.io.IOException;,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,1,1
final AtomicReference<URI> uriHolder = new AtomicReference<URI>();,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,1,1
"Message<?> message = new GenericMessage<Object>(""bar"");",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,1,1
import org.springframework.http.HttpMethod;,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,1,1
import org.springframework.http.client.ClientHttpRequest;,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,1,1
import org.springframework.http.client.SimpleClientHttpRequestFactory;,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,1,1
public void testFromMessageWithExpressions() {,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
"public ClientHttpRequest createRequest(URI uri, HttpMethod httpMethod) {",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
/**,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
*/,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
public void testFromMessageWithSuperfluousExpressionsInt3054() {,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
public void testInt3055UriVariablesExpression() {,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
public void testFromMessageWithExpressions() throws Exception {,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
"public ClientHttpRequest createRequest(URI uri, HttpMethod httpMethod) throws IOException {",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
public void testFromMessageWithSuperfluousExpressionsInt3054() throws Exception {,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
public void testInt3055UriVariablesExpression() throws Exception {,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
registrar.setBeanClassLoader(context.getClassLoader());,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
handler.setRequestFactory(,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
"(uri, httpMethod) -> {",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
uriHolder.set(uri);,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
"throw new RuntimeException(""intentional"");",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
});,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
context.close();,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,0
handler.setRequestFactory(new SimpleClientHttpRequestFactory() {,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
@Override,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
"public ClientHttpRequest createRequest(URI uri, HttpMethod httpMethod) {",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
uriHolder.set(uri);,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
"throw new RuntimeException(""intentional"");",2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
},2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
});,2955ef989e091af55b3f18c3b24ebf9b0e0ab49f,0,1
"private volatile Map<String, Expression> headerExpressions = new HashMap<String, Expression>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,8,1
"Map<String, Expression> headers = new HashMap<String, Expression>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,7,1
"private Map<String, Object> evaluateHeaders(EvaluationContext methodInvocationEvaluationContext, Map<String, Expression> headerExpressions) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,6,0
"Map<String, Object> header = new HashMap<String, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,5,1
"private final Map<String, Expression> headerExpressions = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,5,0
"public void setHeaderExpressions(@Nullable Map<String, Expression> headerExpressions) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,5,0
"public void setHeaderExpressions(Map<String, Expression> headerExpressions) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,5,1
"Map<String, Expression> headers = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,5,0
"Map<String, Object> headers = new HashMap<String, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,5,1
"Map<String, Object> evaluatedHeaders = new HashMap<String, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,4,0
"Map<String, Object> evaluatedHeaders = new HashMap<String, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,4,1
"Map<String, Object> header = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,4,0
"final Map<String, Object> gatewayAttributes = new HashMap<String, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,4,1
"private void headers(final Element element, final Map<String, Object> gatewayAttributes) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,4,1
"Map<String, Object> headers = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,4,0
"Map<String, Object> mapB = new HashMap<String, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,4,1
private static final SpelExpressionParser PARSER = new SpelExpressionParser();,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
Object value = argumentValue.get(key);,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
private static final SpelExpressionParser PARSER = new SpelExpressionParser();,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
"throw new IllegalArgumentException(""Invalid header name ["" + key +",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
Object value = argumentValue.get(key);,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
"private final Map<String, Expression> globalHeaderExpressions;",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"public GatewayMethodInboundMessageMapper(Method method, Map<String, Expression> headerExpressions,",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"Map<String, Expression> globalHeaderExpressions) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"for (Map.Entry<String, Expression> entry : headerExpressions.entrySet()) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
Object value = entry.getValue().getValue(methodInvocationEvaluationContext);,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"for (Map.Entry<String, Expression> entry : this.headerExpressions.entrySet()) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
Object value = entry.getValue().getValue(methodInvocationEvaluationContext);,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
"final Map<String, Object> gatewayAttributes = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"private void headers(Element element, Map<String, Object> gatewayAttributes) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"List<Map<String, Object>> headers = new ArrayList<>(headerElements.size());",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"Map<String, BeanDefinition> methodMetadataMap = new ManagedMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"Map<String, Object> headerExpressions = new ManagedMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"List<Map<String, Object>> headers = new ArrayList<Map<String, Object>>(headerElements.size());",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
"Map<String, BeanDefinition> methodMetadataMap = new ManagedMap<String, BeanDefinition>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
"Map<String, Object> headerExpressions = new ManagedMap<String, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
public Expression getPayloadExpression() {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
private volatile String payloadExpression;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
private volatile String requestChannelName;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
private volatile String replyChannelName;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
private volatile String requestTimeout;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
private volatile String replyTimeout;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
public String getPayloadExpression() {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
this.headerExpressions = headerExpressions;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
"Map<Integer, String> headers = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"Map<String, Object> mapB = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,0
"Map<Integer, String> headers = new HashMap<Integer, String>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
"Method method = TestService.class.getMethod(""noArgs"", new Class<?>[] {});",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,3,1
private final Log logger = LogFactory.getLog(this.getClass());,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
Object argumentValue = arguments[i];,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"for (Object key : ((Map<?, ?>) argumentValue).keySet()) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"throw new MessagingException(""Ambiguous method parameters; found more than one "" +",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
for (Object key : argumentValue.keySet()) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"this.logger.warn(""Invalid header name ["" + key +",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"""], name type must be String. Skipping mapping of this header to MessageHeaders."");",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
ParameterNameDiscoverer parameterNameDiscoverer = new LocalVariableTableParameterNameDiscoverer();,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
Object argumentValue = arguments[i];,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
"for (Object key : ((Map<?, ?>) argumentValue).keySet()) {",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
"throw new MessagingException(""Ambiguous method parameters; found more than one "" +",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
for (Object key : argumentValue.keySet()) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
ParameterNameDiscoverer parameterNameDiscoverer = new LocalVariableTableParameterNameDiscoverer();,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
"Map<String, Object> evaluatedHeaders = evaluateHeaders(methodInvocationEvaluationContext, this.headerExpressions);",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
if (!CollectionUtils.isEmpty(this.globalHeaderExpressions)) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"Map<String, Object> evaluatedHeaders = evaluateHeaders(methodInvocationEvaluationContext, this.globalHeaderExpressions);",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
if (value != null) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
if (value != null) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
"String payloadExpression = methodElement.getAttribute(""payload-expression"");",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
if (StringUtils.hasText(payloadExpression)) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
private Expression payloadExpression;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
private String requestChannelName;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
private String replyChannelName;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
private String requestTimeout;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
private String replyTimeout;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
public void setPayloadExpression(Expression payloadExpression) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
if (headerExpressions != null) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
public void setPayloadExpression(String payloadExpression) {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
".isThrownBy(() -> mapper.toMessage(new Object[] { ""test"", null }));",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
".isThrownBy(() -> mapper.toMessage(new Object[] { ""test"", headers }));",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
".isThrownBy(() -> mapper.toMessage(new Object[] { inputMessage, null }));",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"Method method = TestService.class.getMethod(""noArgs"");",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"Map<Integer, Object> map = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"Map<Integer, Object> mapA = new HashMap<>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,0
"mapper.toMessage(new Object[] { ""test"", null });",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
"mapper.toMessage(new Object[] { ""test"", headers });",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
"mapper.toMessage(new Object[] { inputMessage, null });",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
"Map<Integer, Object> map = new HashMap<Integer, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
"Map<Integer, Object> mapA = new HashMap<Integer, Object>();",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,2,1
if (payloadExpression == null){,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,0
if (this.logger.isWarnEnabled()){,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,0
else {,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,0
this.globalHeaderExpressions = globalHeaderExpressions;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,0
// Explicit headers in XML override any @Header annotations...,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,0
// ...whereas global (default) headers do not...,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,0
".isThrownBy(() -> mapper.toMessage(new Object[] { ""test"", ""oops"" }));",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,0
".isThrownBy(() -> mapper.toMessage(new Object[] { ""abc"", ""def"" }));",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,0
@Test(expected = IllegalArgumentException.class),1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,1
"mapper.toMessage(new Object[] { ""test"", ""oops"" });",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,1
@Test(expected = MessageMappingException.class),1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,1
"mapper.toMessage(new Object[] { ""abc"", ""def"" });",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,1,1
import org.apache.commons.logging.Log;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
import org.apache.commons.logging.LogFactory;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
*,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"""Map-typed parameter and neither one contains a @Payload annotation"");",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
},1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"headers.put((String) key, value);",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
*,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"""Map-typed parameter and neither one contains a @Payload annotation"");",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"""], name type must be String."");",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"headers.put((String) key, value);",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
* @author Gary Russell,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"this(method, headerExpressions, null);",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
},1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
builder.copyHeadersIfAbsent(evaluatedHeaders);,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"evaluatedHeaders.put(entry.getKey(), value);",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
return evaluatedHeaders;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
// TODO deprecated in 3.0/4.0 - retained for backwards compatibility,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"context.setVariable(""gatewayMethod"", this.method);",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"evaluatedHeaders.put(entry.getKey(), value);",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
},1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
import org.springframework.integration.config.ExpressionFactoryBean;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"gatewayAttributes.put(""defaultHeaders"", headers.toArray(new Map<?, ?>[0]));",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"Assert.state(!hasMapper || !StringUtils.hasText(payloadExpression),",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"methodMetadataBuilder.addPropertyValue(""payloadExpression"",",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
BeanDefinitionBuilder.genericBeanDefinition(ExpressionFactoryBean.class),1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
.addConstructorArgValue(payloadExpression),1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
.getBeanDefinition());,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
},1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"@SuppressWarnings(""rawtypes"")",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"gatewayAttributes.put(""defaultHeaders"", headers.toArray(new Map[0]));",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"Assert.state(!hasMapper || !StringUtils.hasText(element.getAttribute(""payload-expression"")),",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"IntegrationNamespaceUtils.setValueIfAttributeDefined(methodMetadataBuilder, methodElement,",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"""payload-expression"");",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
import org.springframework.lang.Nullable;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
* @author Artem Bilan,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
*,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
@Nullable,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
this.headerExpressions.clear();,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
this.headerExpressions.putAll(headerExpressions);,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
},1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
* Copyright 2002-2022 the original author or authors.,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
import static org.assertj.core.api.Assertions.assertThatExceptionOfType;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
import org.junit.jupiter.api.Test;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
* @author Artem Bilan,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
@Test,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
assertThatIllegalArgumentException(),1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
.isThrownBy(() -> mapper.toMessage(new Object[] {}));,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
assertThatExceptionOfType(MessageMappingException.class),1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
"@Payload(""args[0]"")",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,0
* Copyright 2002-2019 the original author or authors.,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
import org.junit.Test;,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
mapper.toMessage(new Object[] {});,1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"@Payload(""#args[0]"")",1f0d9d6e45276a15cc6ec925c7ce41a76476cb88,0,1
"""] for attribute '"" + attributeName + ""' on publisher annotation ["" +",929e14a32067752087a8c7ff1e0898a95502d0b2,6,1
"payloadExpression = ""#"" + ExpressionSource.ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"";",929e14a32067752087a8c7ff1e0898a95502d0b2,5,0
"payloadExpression = ""#"" + this.getArgumentMapVariableName(method) + ""["" + i + ""]"";",929e14a32067752087a8c7ff1e0898a95502d0b2,5,1
"payloadExpression = ""#"" + PublisherMetadataSource.ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"";",929e14a32067752087a8c7ff1e0898a95502d0b2,5,1
"private <T> T getAnnotationValue(Method method, String attributeName, Class<T> expectedType) {",929e14a32067752087a8c7ff1e0898a95502d0b2,5,1
"private <T> T getAnnotationValue(Class<?> clazz, String attributeName, Class<T> expectedType) {",929e14a32067752087a8c7ff1e0898a95502d0b2,5,1
"private <T> T getAnnotationValue(Annotation annotation, String attributeName, Class<T> expectedType) {",929e14a32067752087a8c7ff1e0898a95502d0b2,5,1
"annotation.annotationType() + ""], but actual type was ["" + valueAsObject.getClass() + ""]"");",929e14a32067752087a8c7ff1e0898a95502d0b2,5,1
"headerExpressions.put(name, ""#"" + ExpressionSource.ARGUMENT_MAP_VARIABLE_NAME + ""['"" + i + ""']"");",929e14a32067752087a8c7ff1e0898a95502d0b2,4,0
"headerExpressions.put(name, ""#"" + this.getArgumentMapVariableName(method) + ""['"" + i + ""']"");",929e14a32067752087a8c7ff1e0898a95502d0b2,4,1
"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"");",929e14a32067752087a8c7ff1e0898a95502d0b2,4,0
"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]""));",929e14a32067752087a8c7ff1e0898a95502d0b2,4,0
"""#"" + PublisherMetadataSource.ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"");",929e14a32067752087a8c7ff1e0898a95502d0b2,4,1
"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"");",929e14a32067752087a8c7ff1e0898a95502d0b2,4,0
EXPRESSION_PARSER.parseExpression('#' + ARGUMENT_MAP_VARIABLE_NAME + '[' + i + ']'));,929e14a32067752087a8c7ff1e0898a95502d0b2,4,0
"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]"");",929e14a32067752087a8c7ff1e0898a95502d0b2,4,1
"EXPRESSION_PARSER.parseExpression(""#"" + ARGUMENT_MAP_VARIABLE_NAME + ""["" + i + ""]""));",929e14a32067752087a8c7ff1e0898a95502d0b2,4,1
"""method ["" + method + ""] contains more than one publisher annotation"");",929e14a32067752087a8c7ff1e0898a95502d0b2,4,1
"""class ["" + clazz + ""] contains more than one publisher annotation"");",929e14a32067752087a8c7ff1e0898a95502d0b2,4,1
"throw new IllegalArgumentException(""expected type ["" + expectedType.getName() +",929e14a32067752087a8c7ff1e0898a95502d0b2,4,1
if (annotation != null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
if (methodPayloadAnnotation != null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,3,0
"value = getAnnotationValue(annotation, attributeName, expectedType);",929e14a32067752087a8c7ff1e0898a95502d0b2,3,0
Object valueAsObject = (attributeName == null) ? AnnotationUtils.getValue(annotation),929e14a32067752087a8c7ff1e0898a95502d0b2,3,0
if (methodPayloadAnnotation != null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
"value = this.getAnnotationValue(annotation, attributeName, expectedType);",929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
Object valueAsObject = (attributeName == null) ?  AnnotationUtils.getValue(annotation),929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
if (parameterNames != null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,3,0
"name = method.getName() + "".arg#"" + i;",929e14a32067752087a8c7ff1e0898a95502d0b2,3,0
"""The ["" + element + ""] contains more than one publisher annotation"");",929e14a32067752087a8c7ff1e0898a95502d0b2,3,0
if (methodPayloadAnnotation != null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
T value = null;,929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
"Annotation annotation = AnnotatedElementUtils.findMergedAnnotation(method, annotationType);",929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
if (annotation != null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
"value = getAnnotationValue(annotation, attributeName, expectedType);",929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
"Annotation annotation = AnnotatedElementUtils.findMergedAnnotation(clazz, annotationType);",929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
if (value != null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
Object valueAsObject = (attributeName == null) ?,929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
if (valueAsObject != null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,3,1
if (channelName == null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
"ExpressionBinding annotation = AnnotationUtils.findAnnotation(method, ExpressionBinding.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
if (channelName == null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
* Copyright 2002-2018 the original author or authors.,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
if (channelName == null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
"Annotation methodPayloadAnnotation = AnnotationUtils.findAnnotation(method, Payload.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
for (int i = 0; i < annotationArray.length; i++) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
* Copyright 2002-2015 the original author or authors.,929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
if (channelName == null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
"Annotation methodPayloadAnnotation = AnnotationUtils.findAnnotation(method, Payload.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
"payloadExpression = ""#"" + PublisherMetadataSource.RETURN_VALUE_VARIABLE_NAME;",929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
for (int i = 0; i < annotationArray.length; i++) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
"|| payloadExpression.contains(""#"" + PublisherMetadataSource.RETURN_VALUE_VARIABLE_NAME)) {",929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
if (channelName == null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
for (int i = 0; i < annotationArray.length; i++) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
String value = null;,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
MergedAnnotation<? extends Annotation> mergedAnnotation = mergedAnnotations.get(annotationType);,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
value = mergedAnnotation.getString(attributeName);,929e14a32067752087a8c7ff1e0898a95502d0b2,2,0
if (channelName == null) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
"Annotation methodPayloadAnnotation = AnnotationUtils.findAnnotation(method, Payload.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
for (int i = 0; i < annotationArray.length; i++) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
for (Class<? extends Annotation> annotationType : this.annotationTypes) {,929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
value = (T) valueAsObject;,929e14a32067752087a8c7ff1e0898a95502d0b2,2,1
public String getChannelName(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"String channelName = this.getAnnotationValue(method, this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"channelName = this.getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
},929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
": ""#"" + ExpressionSource.RETURN_VALUE_VARIABLE_NAME;",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
": ""#"" + this.getReturnValueVariableName(method);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
public String getMethodNameVariableName(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
},929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
public String[] getArgumentVariableNames(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
String argNameList = annotation.argumentVariableNames();,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (StringUtils.hasText(argNameList)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
public String getArgumentMapVariableName(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
public String getReturnValueVariableName(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
public String getExceptionVariableName(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
public String getChannelName(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"String channelName = this.getAnnotationValue(method, this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"channelName = this.getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
*,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
private final ParameterNameDiscoverer parameterNameDiscoverer = new LocalVariableTableParameterNameDiscoverer();,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"private final Map<Method, String> channels = new HashMap<>();",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"private final Map<Method, Expression> payloadExpressions = new HashMap<>();",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"private final Map<Method, Map<String, Expression>> headersExpressions = new HashMap<>();",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"return this.channels.computeIfAbsent(method, method1 -> {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"String channelName = getAnnotationValue(method, this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"channelName = getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
},929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
public Expression getExpressionForPayload(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"return this.payloadExpressions.computeIfAbsent(method, method1 -> {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
Expression payloadExpression = null;,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"String payloadExpressionString = getAnnotationValue(methodPayloadAnnotation, null, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (!StringUtils.hasText(payloadExpressionString)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
payloadExpression = RETURN_VALUE_EXPRESSION;,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
else {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
payloadExpression = EXPRESSION_PARSER.parseExpression(payloadExpressionString);,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
Annotation[][] annotationArray = method.getParameterAnnotations();,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
Annotation[] parameterAnnotations = annotationArray[i];,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
for (Annotation currentAnnotation : parameterAnnotations) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (Payload.class.equals(currentAnnotation.annotationType())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"""@Payload can be used at most once on a @Publisher method, "" +",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"""@Payload on a parameter for a @Publisher method may not contain an expression"");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
payloadExpression =,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (payloadExpression == null ||,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
RETURN_VALUE_EXPRESSION.getExpressionString().equals(payloadExpression.getExpressionString())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"""When defining @Publisher on a void-returning method, an explicit payload "" +",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"""expression that does not rely upon a #return value is required."");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
public String getPayloadExpression(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"public Map<String, Expression> getExpressionsForHeaders(Method method) {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"return this.headersExpressions.computeIfAbsent(method, method1 -> {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"Map<String, Expression> headerExpressions = new HashMap<>();",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
String[] parameterNames = this.parameterNameDiscoverer.getParameterNames(method);,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (Header.class.equals(currentAnnotation.annotationType())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"String name = getAnnotationValue(currentAnnotation, null, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (!StringUtils.hasText(name)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
name = parameterNames[i];,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"public Map<String, String> getHeaderExpressions(Method method) {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
private final ParameterNameDiscoverer parameterNameDiscoverer = new LocalVariableTableParameterNameDiscoverer();,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"String channelName = this.getAnnotationValue(method, this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"channelName = this.getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
},929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
public String getPayloadExpression(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
String payloadExpression = null;,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"payloadExpression = getAnnotationValue(methodPayloadAnnotation, null, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (!StringUtils.hasText(payloadExpression)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
Annotation[][] annotationArray = method.getParameterAnnotations();,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
Annotation[] parameterAnnotations = annotationArray[i];,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
for (Annotation currentAnnotation : parameterAnnotations) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (Payload.class.equals(currentAnnotation.annotationType())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"""@Payload can be used at most once on a @Publisher method, "" +",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"""@Payload on a parameter for a @Publisher method may not contain an expression"");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (payloadExpression == null,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"""When defining @Publisher on a void-returning method, an explicit payload "" +",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"""expression that does not rely upon a #return value is required."");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"public Map<String, String> getHeaderExpressions(Method method) {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"Map<String, String> headerExpressions = new HashMap<String, String>();",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
String[] parameterNames = this.parameterNameDiscoverer.getParameterNames(method);,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (Header.class.equals(currentAnnotation.annotationType())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"String name = getAnnotationValue(currentAnnotation, null, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (!StringUtils.hasText(name)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
name = parameterNames[i];,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
method1 -> {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"String channelName = getAnnotationValue(method, this.channelAttributeName);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"channelName = getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
},929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
Expression payloadExpression = null;,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
MergedAnnotation<Payload> payloadMergedAnnotation =,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (payloadMergedAnnotation.isPresent()) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"String payloadExpressionString = payloadMergedAnnotation.getString(""expression"");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (!StringUtils.hasText(payloadExpressionString)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
payloadExpression = RETURN_VALUE_EXPRESSION;,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
else {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
payloadExpression = EXPRESSION_PARSER.parseExpression(payloadExpressionString);,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
Annotation[][] annotationArray = method.getParameterAnnotations();,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
Annotation[] parameterAnnotations = annotationArray[i];,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
payloadMergedAnnotation = MergedAnnotations.from(parameterAnnotations).get(Payload.class);,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"""@Payload can be used at most once on a @Publisher method, "" +",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"""@Payload on a parameter for a @Publisher method may not contain an 'expression'"");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
payloadExpression =,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (payloadExpression == null ||,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
.equals(payloadExpression.getExpressionString())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"""When defining @Publisher on a void-returning method, an explicit payload "" +",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"""expression that does not rely upon a #return value is required."");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"Map<String, Expression> headerExpressions = new HashMap<>();",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
String[] parameterNames = this.parameterNameDiscoverer.getParameterNames(method);,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
MergedAnnotation<Header> headerMergedAnnotation =,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (headerMergedAnnotation.isPresent()) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
String name =,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (!StringUtils.hasText(name)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
name = parameterNames[i];,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"private String getAnnotationValue(AnnotatedElement element, String attributeName) {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
MergedAnnotations mergedAnnotations =,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
if (mergedAnnotation.isPresent()) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,0
"return this.channels.computeIfAbsent(method, method1 -> {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"String channelName = getAnnotationValue(method, this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"channelName = getAnnotationValue(method.getDeclaringClass(), this.channelAttributeName, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
},929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"return this.payloadExpressions.computeIfAbsent(method, method1 -> {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
Expression payloadExpression = null;,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"String payloadExpressionString = getAnnotationValue(methodPayloadAnnotation, null, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (!StringUtils.hasText(payloadExpressionString)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
payloadExpression = RETURN_VALUE_EXPRESSION;,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
else {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
payloadExpression = EXPRESSION_PARSER.parseExpression(payloadExpressionString);,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
Annotation[][] annotationArray = method.getParameterAnnotations();,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
Annotation[] parameterAnnotations = annotationArray[i];,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
for (Annotation currentAnnotation : parameterAnnotations) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (Payload.class.equals(currentAnnotation.annotationType())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"""@Payload can be used at most once on a @Publisher method, "" +",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"""@Payload on a parameter for a @Publisher method may not contain an expression"");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
payloadExpression =,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (payloadExpression == null ||,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
RETURN_VALUE_EXPRESSION.getExpressionString().equals(payloadExpression.getExpressionString())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"""When defining @Publisher on a void-returning method, an explicit payload "" +",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"""expression that does not rely upon a #return value is required."");",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
public String getPayloadExpression(Method method) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"return this.headersExpressions.computeIfAbsent(method, method1 -> {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"Map<String, Expression> headerExpressions = new HashMap<>();",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
String[] parameterNames = this.parameterNameDiscoverer.getParameterNames(method);,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (Header.class.equals(currentAnnotation.annotationType())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"String name = getAnnotationValue(currentAnnotation, null, String.class);",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (!StringUtils.hasText(name)) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
name = parameterNames[i];,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
"public Map<String, String> getHeaderExpressions(Method method) {",929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
if (expectedType.isAssignableFrom(valueAsObject.getClass())) {,929e14a32067752087a8c7ff1e0898a95502d0b2,1,1
return (StringUtils.hasText(channelName) ? channelName : null);,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return annotation.methodNameVariableName();,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return ExpressionSource.DEFAULT_METHOD_NAME_VARIABLE_NAME;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"return StringUtils.tokenizeToStringArray(argNameList, "","");",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return this.parameterNameDiscoverer.getParameterNames(method);,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return annotation.argumentMapVariableName();,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return ExpressionSource.DEFAULT_ARGUMENT_MAP_VARIABLE_NAME;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return annotation.returnValueVariableName();,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return ExpressionSource.DEFAULT_RETURN_VALUE_VARIABLE_NAME;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return annotation.exceptionVariableName();,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return ExpressionSource.DEFAULT_EXCEPTION_VARIABLE_NAME;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return (StringUtils.hasText(channelName) ? channelName : null);,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
import java.util.stream.Collectors;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
import org.springframework.expression.Expression;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
this(Collections.singleton(Publisher.class));,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
@Override,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return StringUtils.hasText(channelName) ? channelName : null;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
});,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"Assert.state(payloadExpression == null,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"""either at method-level or on a single parameter"");",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"Assert.state("""".equals(AnnotationUtils.getValue(currentAnnotation)),",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"Assert.isTrue(!void.class.equals(method.getReturnType()),",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return payloadExpression;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
@Deprecated,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return getExpressionForPayload(method),929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
.getExpressionString();,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"headerExpressions.put(name,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return headerExpressions;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return getExpressionsForHeaders(method),929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
.entrySet(),929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
.stream(),929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
".collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().getExpressionString()));",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
this(Collections.<Class<? extends Annotation>>singleton(Publisher.class));,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return (StringUtils.hasText(channelName) ? channelName : null);,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"Assert.state(payloadExpression == null,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"""either at method-level or on a single parameter"");",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"Assert.state("""".equals(AnnotationUtils.getValue(currentAnnotation)),",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"Assert.isTrue(!void.class.equals(method.getReturnType()),",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return payloadExpression;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"headerExpressions.put(name,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return headerExpressions;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
import java.lang.reflect.AnnotatedElement;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
import org.springframework.core.annotation.MergedAnnotation;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
import org.springframework.core.annotation.MergedAnnotations;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
import org.springframework.lang.Nullable;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"return this.channels.computeIfAbsent(method,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return StringUtils.hasText(channelName) ? channelName : null;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
});,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"return this.payloadExpressions.computeIfAbsent(method,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"MergedAnnotations.from(method, MergedAnnotations.SearchStrategy.EXHAUSTIVE)",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
.get(Payload.class);,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"Assert.state(payloadExpression == null,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"""either at method-level or on a single parameter"");",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"Assert.state("""".equals(payloadMergedAnnotation.getString(""expression"")),",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
RETURN_VALUE_EXPRESSION.getExpressionString(),929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"Assert.isTrue(!void.class.equals(method.getReturnType()),",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return payloadExpression;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"return this.headersExpressions.computeIfAbsent(method,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
MergedAnnotations.from(parameterAnnotations).get(Header.class);,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
headerMergedAnnotation,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
".getString(""name"");",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"headerExpressions.put(name,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
return headerExpressions;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
@Nullable,929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
"MergedAnnotations.from(element, MergedAnnotations.SearchStrategy.EXHAUSTIVE);",929e14a32067752087a8c7ff1e0898a95502d0b2,0,0
import java.util.stream.Collectors;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
import org.springframework.core.annotation.AnnotatedElementUtils;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
import org.springframework.core.annotation.AnnotationUtils;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return StringUtils.hasText(channelName) ? channelName : null;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
});,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"Assert.state(payloadExpression == null,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"""either at method-level or on a single parameter"");",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"Assert.state("""".equals(AnnotationUtils.getValue(AnnotationUtils.synthesizeAnnotation(currentAnnotation, null))),",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"Assert.isTrue(!void.class.equals(method.getReturnType()),",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return payloadExpression;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
@Override,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
@Deprecated,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return getExpressionForPayload(method),929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
.getExpressionString();,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"headerExpressions.put(name,",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return headerExpressions;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return getExpressionsForHeaders(method),929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
.entrySet(),929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
.stream(),929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
".collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().getExpressionString()));",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
return value;,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
throw new IllegalStateException(,929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"@SuppressWarnings(""unchecked"")",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"AnnotationUtils.getValue(AnnotationUtils.synthesizeAnnotation(annotation, null)) :",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"AnnotationUtils.getValue(annotation, attributeName);",929e14a32067752087a8c7ff1e0898a95502d0b2,0,1
"@Payload(""#args[0] + #args[1]"")",d5a80421ecccc176df5f01361c9a463a47445259,1,1
* Copyright 2002-2014 the original author or authors.,d5a80421ecccc176df5f01361c9a463a47445259,0,0
import org.springframework.messaging.handler.annotation.Payload;,d5a80421ecccc176df5f01361c9a463a47445259,0,0
* Copyright 2002-2013 the original author or authors.,d5a80421ecccc176df5f01361c9a463a47445259,0,1
import org.springframework.integration.annotation.Payload;,d5a80421ecccc176df5f01361c9a463a47445259,0,1
* Copyright 2002-2022 the original author or authors.,d5a80421ecccc176df5f01361c9a463a47445259,0,0
import org.junit.jupiter.api.Test;,d5a80421ecccc176df5f01361c9a463a47445259,0,0
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;,d5a80421ecccc176df5f01361c9a463a47445259,0,0
@SpringJUnitConfig,d5a80421ecccc176df5f01361c9a463a47445259,0,0
"@Payload(""args[0] + args[1]"")",d5a80421ecccc176df5f01361c9a463a47445259,0,0
* Copyright 2002-2019 the original author or authors.,d5a80421ecccc176df5f01361c9a463a47445259,0,1
import org.junit.Test;,d5a80421ecccc176df5f01361c9a463a47445259,0,1
import org.junit.runner.RunWith;,d5a80421ecccc176df5f01361c9a463a47445259,0,1
import org.springframework.test.context.ContextConfiguration;,d5a80421ecccc176df5f01361c9a463a47445259,0,1
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;,d5a80421ecccc176df5f01361c9a463a47445259,0,1
@RunWith(SpringJUnit4ClassRunner.class),d5a80421ecccc176df5f01361c9a463a47445259,0,1
@ContextConfiguration,d5a80421ecccc176df5f01361c9a463a47445259,0,1
if (len < 0) {,4090905770bae7dd4621443b46c7766624aa5a10,4,0
if (len < 0) {,4090905770bae7dd4621443b46c7766624aa5a10,4,1
} else {,4090905770bae7dd4621443b46c7766624aa5a10,3,1
if (this.channelInputStream.available() <= 0) {,4090905770bae7dd4621443b46c7766624aa5a10,3,0
else { // should never happen,4090905770bae7dd4621443b46c7766624aa5a10,3,0
"""increasing this task executor pool size; data avail: "" + this.channelInputStream.available());",4090905770bae7dd4621443b46c7766624aa5a10,2,0
if (dataAvailable()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
else {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
"logger.trace(this.getConnectionId() + "" Nio message assembler exiting... avail: "" + this.channelInputStream.available());",4090905770bae7dd4621443b46c7766624aa5a10,2,0
if (logger.isTraceEnabled()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
int len = this.socketChannel.read(this.rawBuffer);,4090905770bae7dd4621443b46c7766624aa5a10,2,0
if (logger.isDebugEnabled()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
private void checkForAssembler() {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
if (this.isOpen() && dataAvailable()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,1
"logger.trace(this.getConnectionId() + "" Nio message assembler exiting..."");",4090905770bae7dd4621443b46c7766624aa5a10,2,1
if (checkForAssembler()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,1
if (logger.isTraceEnabled()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,1
int len = this.socketChannel.read(this.rawBuffer);,4090905770bae7dd4621443b46c7766624aa5a10,2,1
if (logger.isDebugEnabled()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,1
if (logger.isTraceEnabled()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
return writingToPipe || this.channelInputStream.available() > 0;,4090905770bae7dd4621443b46c7766624aa5a10,2,0
try {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
"if (this.writingLatch.await(60, TimeUnit.SECONDS)) {",4090905770bae7dd4621443b46c7766624aa5a10,2,0
catch (InterruptedException e) {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
this.writingLatch = new CountDownLatch(1);,4090905770bae7dd4621443b46c7766624aa5a10,2,0
if (TcpNioConnection.this.writingLatch != null) {,4090905770bae7dd4621443b46c7766624aa5a10,2,0
TcpNioConnection.this.writingLatch = new CountDownLatch(1);,4090905770bae7dd4621443b46c7766624aa5a10,2,0
return this.channelInputStream.available() > 0 || writingToPipe;,4090905770bae7dd4621443b46c7766624aa5a10,2,1
if (!dataAvailable()) {,4090905770bae7dd4621443b46c7766624aa5a10,2,1
"logger.info(getConnectionId() + "" Insufficient threads in the assembler fixed thread pool; consider "" +",4090905770bae7dd4621443b46c7766624aa5a10,1,0
},4090905770bae7dd4621443b46c7766624aa5a10,1,0
this.writingToPipe = false;,4090905770bae7dd4621443b46c7766624aa5a10,1,0
catch (RejectedExecutionException e) {,4090905770bae7dd4621443b46c7766624aa5a10,1,0
"logger.info(""Insufficient threads in the assembler fixed thread pool; consider "" +",4090905770bae7dd4621443b46c7766624aa5a10,1,1
"""increasing this task executor pool size"");",4090905770bae7dd4621443b46c7766624aa5a10,1,1
},4090905770bae7dd4621443b46c7766624aa5a10,1,1
this.writingToPipe = false;,4090905770bae7dd4621443b46c7766624aa5a10,1,1
private boolean checkForAssembler() {,4090905770bae7dd4621443b46c7766624aa5a10,1,1
"logger.trace(getConnectionId() + "" checking data avail: "" + this.channelInputStream.available() +",4090905770bae7dd4621443b46c7766624aa5a10,1,0
},4090905770bae7dd4621443b46c7766624aa5a10,1,0
"logger.trace(getConnectionId() + "" checking data avail (convert): "" + this.channelInputStream.available() +",4090905770bae7dd4621443b46c7766624aa5a10,1,0
"throw new IOException(""Timed out waiting for IO"");",4090905770bae7dd4621443b46c7766624aa5a10,1,0
"throw new IOException(""Interrupted waiting for IO"");",4090905770bae7dd4621443b46c7766624aa5a10,1,0
* @author John Anderson,4090905770bae7dd4621443b46c7766624aa5a10,0,0
checkForAssembler();,4090905770bae7dd4621443b46c7766624aa5a10,0,0
"logger.trace(""Before read:"" + this.rawBuffer.position() + ""/"" + this.rawBuffer.limit());",4090905770bae7dd4621443b46c7766624aa5a10,0,0
this.closeConnection(true);,4090905770bae7dd4621443b46c7766624aa5a10,0,0
"logger.trace(""After read:"" + this.rawBuffer.position() + ""/"" + this.rawBuffer.limit());",4090905770bae7dd4621443b46c7766624aa5a10,0,0
this.rawBuffer.flip();,4090905770bae7dd4621443b46c7766624aa5a10,0,0
"logger.trace(""After flip:"" + this.rawBuffer.position() + ""/"" + this.rawBuffer.limit());",4090905770bae7dd4621443b46c7766624aa5a10,0,0
"logger.debug(""Read "" + rawBuffer.limit() + "" into raw buffer"");",4090905770bae7dd4621443b46c7766624aa5a10,0,0
this.sendToPipe(rawBuffer);,4090905770bae7dd4621443b46c7766624aa5a10,0,0
throw e;,4090905770bae7dd4621443b46c7766624aa5a10,0,0
Thread.yield();,4090905770bae7dd4621443b46c7766624aa5a10,0,1
"logger.trace(""Before read:"" + this.rawBuffer.position() + ""/"" + this.rawBuffer.limit());",4090905770bae7dd4621443b46c7766624aa5a10,0,1
this.closeConnection(true);,4090905770bae7dd4621443b46c7766624aa5a10,0,1
"logger.trace(""After read:"" + this.rawBuffer.position() + ""/"" + this.rawBuffer.limit());",4090905770bae7dd4621443b46c7766624aa5a10,0,1
this.rawBuffer.flip();,4090905770bae7dd4621443b46c7766624aa5a10,0,1
"logger.trace(""After flip:"" + this.rawBuffer.position() + ""/"" + this.rawBuffer.limit());",4090905770bae7dd4621443b46c7766624aa5a10,0,1
"logger.debug(""Read "" + rawBuffer.limit() + "" into raw buffer"");",4090905770bae7dd4621443b46c7766624aa5a10,0,1
this.sendToPipe(rawBuffer);,4090905770bae7dd4621443b46c7766624aa5a10,0,1
return false;,4090905770bae7dd4621443b46c7766624aa5a10,0,1
return true;,4090905770bae7dd4621443b46c7766624aa5a10,0,1
import java.util.concurrent.CountDownLatch;,4090905770bae7dd4621443b46c7766624aa5a10,0,0
private volatile CountDownLatch writingLatch;,4090905770bae7dd4621443b46c7766624aa5a10,0,0
""" pending: "" + (this.writingToPipe));",4090905770bae7dd4621443b46c7766624aa5a10,0,0
return null;,4090905770bae7dd4621443b46c7766624aa5a10,0,0
Thread.currentThread().interrupt();,4090905770bae7dd4621443b46c7766624aa5a10,0,0
this.writingLatch.countDown();,4090905770bae7dd4621443b46c7766624aa5a10,0,0
TcpNioConnection.this.writingLatch.countDown();,4090905770bae7dd4621443b46c7766624aa5a10,0,0
return null;,4090905770bae7dd4621443b46c7766624aa5a10,0,1
FileWriter writer = new FileWriter(accessTokenCreds);,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,3,1
* @author Josh Long,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,3,0
FileOutputStream fileOutputStream = new FileOutputStream(accessTokenCreds);,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,2,0
import java.io.*;,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,1,0
import java.io.BufferedReader;,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,1,1
import java.io.File;,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,1,1
import java.io.FileWriter;,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,1,1
import java.io.InputStreamReader;,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,1,1
import org.junit.Before;,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,1,0
*,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,1,0
import javax.annotation.PostConstruct;,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,1,1
"props.store(fileOutputStream, ""oauth-access-token"");",126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,0,0
IOUtils.closeQuietly(fileOutputStream);,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,0,0
"props.store(writer, ""oauth-access-token"");",126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,0,1
IOUtils.closeQuietly(writer);,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,0,1
@Before,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,0,0
@PostConstruct,126fa35e2bf8a6dba7c71492b2dca9a1d400d3af,0,1
"private void doSelect(ServerSocketChannel server, final Selector selector) throws IOException {",ced1a05df2b47daf629416b342d6eb00c7a11258,7,0
* Copyright 2002-2015 the original author or authors.,ced1a05df2b47daf629416b342d6eb00c7a11258,7,0
* Copyright 2002-2014 the original author or authors.,ced1a05df2b47daf629416b342d6eb00c7a11258,7,1
* Copyright 2002-2020 the original author or authors.,ced1a05df2b47daf629416b342d6eb00c7a11258,7,0
* Copyright 2002-2019 the original author or authors.,ced1a05df2b47daf629416b342d6eb00c7a11258,7,1
* Copyright 2002-2020 the original author or authors.,ced1a05df2b47daf629416b342d6eb00c7a11258,7,0
* Copyright 2002-2019 the original author or authors.,ced1a05df2b47daf629416b342d6eb00c7a11258,7,1
"Socket socket = new Socket(InetAddress.getByName(""localhost""), port);",ced1a05df2b47daf629416b342d6eb00c7a11258,6,1
"private void doSelect(ServerSocketChannel server, final Selector selector)",ced1a05df2b47daf629416b342d6eb00c7a11258,5,1
} catch (Exception e) {,ced1a05df2b47daf629416b342d6eb00c7a11258,5,1
* returned to the cache after use. Users should not subsequently set the underlying property to,ced1a05df2b47daf629416b342d6eb00c7a11258,5,0
} catch (Exception e) {,ced1a05df2b47daf629416b342d6eb00c7a11258,5,1
"try (Socket socket = new Socket(InetAddress.getByName(""localhost""), port)) {",ced1a05df2b47daf629416b342d6eb00c7a11258,5,0
* @param port the port for socket,ced1a05df2b47daf629416b342d6eb00c7a11258,5,0
"socket = new Socket(InetAddress.getByName(""localhost""), port);",ced1a05df2b47daf629416b342d6eb00c7a11258,5,1
public static void waitListening(AbstractInternetProtocolReceivingChannelAdapter adapter) throws Exception {,ced1a05df2b47daf629416b342d6eb00c7a11258,5,1
* @param selector the Selector multiplexor,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
catch (Exception e) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
catch (IOException e) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
catch (Exception e) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
"pool = new SimplePool<TcpConnectionSupport>(poolSize, new SimplePool.PoolItemCallback<TcpConnectionSupport>() {",ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
final AtomicReference<ServerSocket> serverSocket = new AtomicReference<>();,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
final AtomicReference<ServerSocket> serverSocket = new AtomicReference<ServerSocket>();,ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
private final AsyncTaskExecutor executor = new SimpleAsyncTaskExecutor();,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
final AtomicReference<ServerSocket> serverSocket = new AtomicReference<>();,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
catch (IOException e) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
private void cleanupCompositeExecutor(CompositeExecutor compositeExec) throws Exception {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
final AtomicReference<ServerSocket> serverSocket = new AtomicReference<ServerSocket>();,ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
catch (IOException e) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
"DatagramSocket datagramSocket = new DatagramSocket(0, nic.getInetAddresses().nextElement());",ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
"DatagramSocket datagramSocket = new DatagramSocket(0, Inet4Address.getByName(nic));",ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
public void testMulticastSender() throws Exception {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
public static NetworkInterface chooseANic(boolean multicast) throws Exception {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
public static void waitListening(AbstractInternetProtocolReceivingChannelAdapter adapter) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
Socket socket = null;,ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
public static String chooseANic(boolean multicast) throws Exception {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
if (isActive() && this.taskExecutor == null) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
if (!this.taskExecutorSet && this.taskExecutor != null) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,0
if (this.active && this.taskExecutor == null) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
"Executor executor = Executors.newFixedThreadPool(this.poolSize, new ThreadFactory() {",ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
if (!this.taskExecutorSet && this.taskExecutor != null) {,ced1a05df2b47daf629416b342d6eb00c7a11258,4,1
* @param server the ServerSocketChannel to select,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
catch (IOException e) {},ced1a05df2b47daf629416b342d6eb00c7a11258,3,1
* @param poolSize the number of connections to allow.,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
public void removedFromPool(TcpConnectionSupport connection) {,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
* @param connectionWaitTimeout the new timeout.,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
* @param poolSize the new pool size.,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
* Ignored on this factory; connections are always cached in the pool. The underlying,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
* connection factory will have its singleUse property coerced to true (causing the,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
* connection to be returned). Setting it to false on the underlying factory after initialization,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
if (!singleUse && logger.isDebugEnabled()) {,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
public void setInterceptorFactoryChain(TcpConnectionInterceptorFactoryChain interceptorFactoryChain) {,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
public void removedFromPool(TcpConnectionSupport connection) {,ced1a05df2b47daf629416b342d6eb00c7a11258,3,1
private AsyncTaskExecutor executor = new SimpleAsyncTaskExecutor();,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
final AtomicReference<String> lastReceived = new AtomicReference<>();,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
final AtomicReference<String> lastReceived = new AtomicReference<String>();,ced1a05df2b47daf629416b342d6eb00c7a11258,3,1
public void run() {,ced1a05df2b47daf629416b342d6eb00c7a11258,3,1
public void testMulticastSender() {,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
catch (IOException e2) {,ced1a05df2b47daf629416b342d6eb00c7a11258,3,1
* Creates a default task executor if none was supplied.,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
this.taskExecutor = null;,ced1a05df2b47daf629416b342d6eb00c7a11258,3,0
* Creates a default task executor if none was supplied.,ced1a05df2b47daf629416b342d6eb00c7a11258,3,1
this.taskExecutor = null;,ced1a05df2b47daf629416b342d6eb00c7a11258,3,1
if (this.serverChannel != null) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
this.serverChannel = null;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* @param server,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
* @param selector,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
if (this.serverChannel == null) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
this.serverChannel = null;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
* Connection factory that caches connections from the underlying target factory. The underlying,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* factory will be reconfigured to have {@code singleUse=true} in order for the connection to be,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
"* false, or cache starvation will result.",ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
"* Construct a caching connection factory that delegates to the provided factory, with",ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* the provided pool size.,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* @param target the target factory.,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
"this.pool = new SimplePool<TcpConnectionSupport>(poolSize,",ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
new SimplePool.PoolItemCallback<TcpConnectionSupport>() {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
public TcpConnectionSupport createForPool() {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
public boolean isStale(TcpConnectionSupport connection) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* @return the pool size.,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* @return the idle count.,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* @return the active count.,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* @return the allocated count.,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
if (this.released) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
if (logger.isDebugEnabled()) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
public boolean equals(Object o) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
if (this == o) return true;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
if (o == null || getClass() != o.getClass()) return false;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
* @param singleUse the singleUse.,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
public TcpConnectionSupport createForPool() {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
public boolean isStale(TcpConnectionSupport connection) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
public boolean equals(Object obj) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
public void setInterceptorFactoryChain(,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
List<Socket> sockets = new ArrayList<>();,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
results[j] = (this.executor.submit(() -> {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
Set<String> replies = new HashSet<>();,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
List<Socket> sockets = new ArrayList<Socket>();,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
results[j] = (Executors.newSingleThreadExecutor().submit(() -> {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
Set<String> replies = new HashSet<String>();,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
"Map<SocketChannel, TcpNioConnection> connections = new HashMap<>();",ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
final int numberOfSockets = 10;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
if (!(message instanceof ErrorMessage)) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
"Map<SocketChannel, TcpNioConnection> connections = new HashMap<SocketChannel, TcpNioConnection>();",ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
final int numberOfSockets = 100;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
public boolean onMessage(Message<?> message) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
if (!(message instanceof ErrorMessage)) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
NetworkInterface nic = this.multicastRule.getNic();,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
if (nic != null) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
String nic = this.multicastRule.getNic();,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
&& networkInterface.getInetAddresses().hasMoreElements()) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
if (socket != null) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
* @param port,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
if (intface.isLoopback() || (multicast && !intface.supportsMulticast()),ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
for (Enumeration<InetAddress> inetAddr = intface.getInetAddresses(); inetAddr.hasMoreElements(); ) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
if (nextElement instanceof Inet4Address) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
protected void doStart() {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
protected void checkTaskExecutor(final String threadName) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
this.taskExecutor =,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
Thread thread = new Thread(runner);,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
protected void doStop() {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,0
private volatile boolean active;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
protected void doStart() {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
if (!this.active) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
this.active = true;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
protected void checkTaskExecutor(final String threadName) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
public Thread newThread(Runnable runner) {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
Thread thread = new Thread(runner);,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
this.taskExecutor = executor;,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
protected void doStop() {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
* @return the active,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
public boolean isActive() {,ced1a05df2b47daf629416b342d6eb00c7a11258,2,1
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
try {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
finally {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import java.net.SocketException;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
import java.nio.channels.ClosedChannelException;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
* @throws ClosedChannelException,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
* @throws SocketException,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
"throws IOException, SocketException {",ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
try {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
*,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
@Override,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
try {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
"throw new MessagingException(""Failed to obtain connection"", e);",ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* @see SimplePool#setWaitTimeout(long),ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* @see SimplePool#setPoolSize(int),ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* @see SimplePool#getPoolSize(),ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* @see SimplePool#getIdleCount(),ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* @see SimplePool#getActiveCount(),ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* @see SimplePool#getAllocatedCount(),ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
else {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
"logger.debug(""Factory not running - closing "" + getConnectionId());",ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
AbstractIntegrationMessageBuilder<?> messageBuilder =,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
CachingClientConnectionFactory that = (CachingClientConnectionFactory) o;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
this.targetConnectionFactory.registerListener(new TcpListener() {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* will cause cache starvation.,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
@Override,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
try {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
"throw new MessagingException(""Failed to obtain connection"", e);",ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
if(this.released) {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
else  {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
if (logger.isDebugEnabled()){,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
"logger.debug(""Factory not running - closing "" + this.getConnectionId());",ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
AbstractIntegrationMessageBuilder<?> messageBuilder = CachingClientConnectionFactory.this,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
targetConnectionFactory.registerListener(new TcpListener() {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
TcpConnectionInterceptorFactoryChain interceptorFactoryChain) {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
import org.springframework.core.task.AsyncTaskExecutor;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import org.springframework.core.task.SimpleAsyncTaskExecutor;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
this.executor.execute(() -> {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import java.util.concurrent.Executors;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
Executors.newSingleThreadExecutor().execute(() -> {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
import org.springframework.beans.factory.DisposableBean;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import org.springframework.core.task.AsyncTaskExecutor;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import org.springframework.core.task.SimpleAsyncTaskExecutor;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
this.executor.execute(() -> {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
finally {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
try {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
latch.countDown();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
factory.registerListener(message -> {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
Executors.newSingleThreadExecutor().execute(() -> {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
ExecutorService exec = Executors.newSingleThreadExecutor();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
exec.execute(new Runnable() {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
@Override,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
try {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
latch.countDown();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
factory.registerListener(new TcpListener() {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
import java.net.NetworkInterface;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import org.junit.jupiter.api.condition.EnabledOnJre;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import org.junit.jupiter.api.condition.JRE;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import java.net.Inet4Address;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
import org.springframework.lang.Nullable;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
NetworkInterface networkInterface = interfaces.nextElement();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
if (!networkInterface.isLoopback(),ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
&& (!multicast || networkInterface.supportsMulticast()),ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
"&& !networkInterface.getName().contains(""vboxnet"")",ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import java.net.Inet4Address;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
try {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
finally {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
socket.close();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
NetworkInterface intface = interfaces.nextElement();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
"|| intface.getName().contains(""vboxnet"")) {",ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
InetAddress nextElement = inetAddr.nextElement();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
* @author Artem Bilan,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
*,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* Protected by lifecycleLock,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
@Override,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
String beanName = getComponentName();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
"checkTaskExecutor((beanName == null ? """" : beanName + ""-"") + getComponentType());",ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
* @param threadName The thread name.,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
(runner) -> {,ced1a05df2b47daf629416b342d6eb00c7a11258,1,0
import java.util.concurrent.ThreadFactory;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
* Protected by lifecycleLock,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
@Override,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
String beanName = this.getComponentName();,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
"checkTaskExecutor((beanName == null ? """" : beanName + ""-"") + this.getComponentType());",ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
},ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
*,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
* @param threadName The thread name.,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
this.active = false;,ced1a05df2b47daf629416b342d6eb00c7a11258,1,1
this.setActive(false);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.serverChannel.close();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return;,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
this.serverChannel.close();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
/**,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
*/,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return targetConnectionFactory.getConnection();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return !connection.isOpen();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
connection.close();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
});,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
cachedConnection.registerListener(getListener());,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
"logger.debug(""Connection "" + getConnectionId() + "" has already been released"");",ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
pool.releaseItem(getTheConnection());,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return getConnectionId();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
CachingClientConnectionFactory.this.getMessageBuilderFactory(),ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
.fromMessage(message),ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
".setHeader(IpHeaders.CONNECTION_ID, getConnectionId());",ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
getListener().onMessage(messageBuilder.build());,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
getTheConnection().close();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.isRunning();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.hashCode();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setComponentName(componentName);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getComponentType();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.equals(that.targetConnectionFactory);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getSoTimeout();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setSoTimeout(soTimeout);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getSoReceiveBufferSize();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setSoReceiveBufferSize(soReceiveBufferSize);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getSoSendBufferSize();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setSoSendBufferSize(soSendBufferSize);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.isSoTcpNoDelay();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setSoTcpNoDelay(soTcpNoDelay);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getSoLinger();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setSoLinger(soLinger);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.isSoKeepAlive();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setSoKeepAlive(soKeepAlive);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getSoTrafficClass();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setSoTrafficClass(soTrafficClass);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getHost();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getPort();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getSender();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getSerializer();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getDeserializer();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getMapper();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.registerSender(sender);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setTaskExecutor(taskExecutor);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setDeserializer(deserializer);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setSerializer(serializer);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setMapper(mapper);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.isSingleUse();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
"logger.debug(""singleUse=false is not supported; cached connections are never closed"");",ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setInterceptorFactoryChain(interceptorFactoryChain);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.setLookupHost(lookupHost);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.isLookupHost();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
setActive(true);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.start();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.stop();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.getPhase();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return this.targetConnectionFactory.isAutoStartup();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
this.targetConnectionFactory.stop(callback);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return targetConnectionFactory.getConnection();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return !connection.isOpen();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
connection.close();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
});,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
cachedConnection.registerListener(this.getListener());,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
"logger.debug(""Connection "" + this.getConnectionId() + "" has already been released"");",ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
pool.releaseItem(this.getTheConnection());,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return this.getConnectionId();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
.getMessageBuilderFactory().fromMessage(message),ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
".setHeader(IpHeaders.CONNECTION_ID, this.getConnectionId());",ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
this.getListener().onMessage(messageBuilder.build());,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
this.getTheConnection().close();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.isRunning();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.hashCode();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setComponentName(componentName);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getComponentType();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.equals(obj);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getSoTimeout();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSoTimeout(soTimeout);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getSoReceiveBufferSize();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSoReceiveBufferSize(soReceiveBufferSize);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getSoSendBufferSize();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSoSendBufferSize(soSendBufferSize);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.isSoTcpNoDelay();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSoTcpNoDelay(soTcpNoDelay);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getSoLinger();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSoLinger(soLinger);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.isSoKeepAlive();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSoKeepAlive(soKeepAlive);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getSoTrafficClass();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSoTrafficClass(soTrafficClass);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getHost();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getPort();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getSender();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getSerializer();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getDeserializer();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getMapper();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.registerSender(sender);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setTaskExecutor(taskExecutor);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setDeserializer(deserializer);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSerializer(serializer);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setMapper(mapper);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.isSingleUse();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setSingleUse(singleUse);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
.setInterceptorFactoryChain(interceptorFactoryChain);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.setLookupHost(lookupHost);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.isLookupHost();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
this.setActive(true);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.start();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.stop();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.getPhase();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return targetConnectionFactory.isAutoStartup();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
targetConnectionFactory.stop(callback);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
factory.setSoTimeout(100);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
Thread.sleep(10);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
exec.shutdownNow();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
stream.read(out);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
e.printStackTrace();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
cleanupCompositeExecutor(compositeExec);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
"TestUtils.getPropertyValue(compositeExec, ""primaryTaskExecutor"", DisposableBean.class).destroy();",ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
"TestUtils.getPropertyValue(compositeExec, ""secondaryTaskExecutor"", DisposableBean.class).destroy();",ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return false;,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
Thread.sleep(1);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
te.shutdown();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
factory.setSoTimeout(1000);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
Thread.sleep(100);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
stream.read(out);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
e.printStackTrace();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return false;,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
@EnabledOnJre(JRE.JAVA_8),ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
adapter.setLocalAddress(nic.getName());,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
handler.setLocalAddress(nic.getName());,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
adapter.setLocalAddress(nic);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
handler.setLocalAddress(nic);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
@Nullable,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return networkInterface;,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
"await(""Adapter not listening"").atMost(Duration.ofSeconds(10)).until(adapter::isListening);",ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
continue;,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return nextElement.getHostAddress();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
"await(""Adapter not listening"").atMost(Duration.ofSeconds(10)).until(() -> adapter.isListening());",ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
this.taskExecutor.execute(this);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
/**,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
*/,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
"Executors.newFixedThreadPool(this.poolSize,",ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
thread.setName(threadName);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
thread.setDaemon(true);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
return thread;,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
});,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
((ExecutorService) this.taskExecutor).shutdown();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,0
/**,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
*/,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
this.taskExecutor.execute(this);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
thread.setName(threadName);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
thread.setDaemon(true);,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return thread;,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
});,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
((ExecutorService) this.taskExecutor).shutdown();,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
return this.active;,ced1a05df2b47daf629416b342d6eb00c7a11258,0,1
